#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 692 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException (246,828) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 98 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V ERROR java.lang.ArrayIndexOutOfBoundsException 866 
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V ERROR java.lang.ArrayIndexOutOfBoundsException 859 71 
daikon.test.TestQuant:test_union()V ERROR java.lang.ArrayIndexOutOfBoundsException 859 71 380 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (323,347) (738,760) (738,760) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 230 (323,347) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 230 (323,347) (323,347) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 230 (323,347) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 458 972 335 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.UnsupportedOperationException 266 266 164 104 99 772 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 104 99 772 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 104 99 772 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 104 99 772 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.diff.InvMap:InvMap()V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0:arity()I
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 23040 | = null
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.MathMDE:gcd(II)I
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.PptName:isEnterPoint()Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.ProglangType:isScalar()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:logOn()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.Slice:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:sorted([I)Z | CONSTANT | 53880 | 0 -> -1
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:intersection([I[I)[I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V | CONDITION | 919 | if (x) -> if (!x)
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:gt(II)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:lexGTE([I[I)Z
jtb.JavaCharStream:getEndLine()I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:gte(II)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfo:isPointer()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:backup(I)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | OPERATOR | 128699 | < -> <=
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.ArraysMDE:min([I)I
daikon.Quant:eltsGT([II)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaCharStream:readChar()C
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.MathMDE:gcd(JJ)J
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.RootNode:RootNode()V
jtb.JavaCharStream:ReadByte()C
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLteIndex([I)Z
daikon.Debug:logDetail()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:lexEqual([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.ProglangType:dimensions()I
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:eq(JJ)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName:hashCode()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:eltsEqual([II)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quant:subsetOf([J[J)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:noDups([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String; | ASSIGN | 10748 | = null
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.Quant:ne(II)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo; | RETURN | 3360 | return null
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginColumn()I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant:justified()Z
utilMDE.MathMDE:negate(I)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.Term:esc_name()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant:getConfidence()D
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.Debug:logOn()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaCharStream:getBeginLine()I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 10245 | = null
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:isIOAArray()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.inv.Invariants:Invariants()V
daikon.VarInfo:relate_var()V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.PptName:isCombinedExitPoint()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:lexGT([I[I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:slice([III)[I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.test.FormatTestCase:passes()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair; | RETURN | 2847 | return null
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Ppt:Ppt()V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([D)[D
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 2763 | = null
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:num_sets()I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaCharStream:getEndColumn()I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String; | CONSTANT | 9207 | 2 -> 1
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:memberOf(J[J)Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.Node:Node()V
utilMDE.Intern:numIntArrays()I
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String; | ASSIGN | 111454 | = null
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:BeginToken()C
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:eltsLT([II)Z
daikon.VarInfo:isDerived()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGT([I[I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:lexLTE([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfo:isPrestate()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:memberOf(F[D)Z
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object; | RETURN | 76505 | return null
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:lt(II)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:eq(FF)Z
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:lte(II)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.ProglangType:isFloat()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexLT([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:FillBuff()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
utilMDE.Assert:assertTrue(Z)V
daikon.ValueTuple:size()I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String; | ASSIGN | 4396 | = null
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:eq(DD)Z
daikon.ProglangType:base()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | CONDITION | 15105 | if (x) -> if (!x)
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:setEqual([I[I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
utilMDE.ArraysMDE:concat([I[I)[I | CONSTANT | 37587 | 0 -> 1
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13889 | = null
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token; | CONDITION | 213180 | if (x) -> if (!x)
daikon.Quant:memberOf(I[I)Z
daikon.Quant:eltwiseGTE([I)Z | CONDITION | 177183 | if (x) -> if (!x)
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.Quant:eltwiseLTE([I)Z
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:memberOf(F[F)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 6337 | 1 -> 0
daikon.Quant:subsetOf([B[I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow(II)I
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.Quantify.Constant:Constant(I)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus; | ASSIGN | 17939 | = null
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoAux:hashCode()I
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:eltsLTE([II)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.MathMDE:sign(I)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
773 2 190 2 529 2 158 2 777 2 976 2 681 2 108 4 207 2 
657 2 728 4 226 6 516 2 672 4 139 2 462 2 463 2 692 2 333 2 
860 2 293 2 9 2 488 4 165 2 806 4 308 4 811 4 57 2 
2 4 813 12 539 4 256 6 442 2 403 2 936 4 663 4 344 10 376 4 551 2 207 4 849 4 457 4 800 6 267 4 949 2 419 2 389 6 246 2 647 4 393 6 777 4 56 2 369 6 
946 6 487 4 
469 2 
350 2 336 2 554 2 852 2 177 2 771 2 871 2 773 2 246 2 701 2 98 2 828 2 808 2 731 2 330 2 580 2 168 2 812 2 835 2 156 2 476 4 
2 16 437 4 813 55 539 4 256 32 162 6 571 2 659 6 660 6 936 16 663 16 344 48 664 4 167 6 610 6 207 4 109 2 457 16 459 8 800 32 674 4 142 6 175 6 144 2 643 2 358 4 419 2 389 6 181 2 391 4 647 18 393 32 471 2 777 4 473 4 223 4 54 2 502 4 369 22 
801 2 771 2 623 2 
494 2 764 2 798 2 975 2 654 2 96 2 66 2 573 22 956 2 745 2 747 2 233 2 986 2 436 10 
538 2 388 2 978 2 544 2 84 2 41 2 792 2 942 2 818 2 
2 4 437 4 813 16 457 4 800 8 256 8 949 2 466 2 660 6 393 8 936 4 663 4 344 12 167 6 502 4 944 2 369 4 
254 4 781 4 336 2 60 10 61 2 841 2 569 2 627 2 629 2 871 4 33 62 484 2 875 2 341 14 604 4 816 10 969 2 450 4 548 2 264 4 135 2 171 2 761 2 137 2 848 4 917 2 801 6 613 2 612 2 770 4 771 8 325 2 248 2 528 4 829 4 958 4 985 2 276 4 623 2 476 4 
124 2 694 2 655 2 868 2 413 2 948 2 269 2 469 2 148 2 779 2 
370 2 508 2 372 2 257 4 373 2 869 2 259 2 872 2 873 2 512 2 876 2 129 2 632 6 759 2 263 4 636 3 881 8 885 2 886 2 383 2 522 2 386 3 17 6 644 2 147 2 21 1 648 2 774 1 530 1 395 2 777 32 274 3 27 2 152 1 649 24 28 3 29 2 898 3 897 1 282 12 537 1 540 8 903 16 284 2 541 2 159 32 32 24 404 2 34 2 36 2 287 2 791 2 794 2 796 2 291 2 552 2 799 2 556 2 173 1 176 2 557 4 803 2 422 1 299 8 300 2 924 2 49 3 428 4 301 2 50 2 51 32 429 2 561 2 55 2 188 2 302 2 58 2 304 1 306 2 196 3 566 2 934 2 443 2 697 6 444 2 67 3 447 4 939 2 704 1 314 2 706 2 819 1 707 2 820 2 582 2 74 2 208 16 207 34 709 16 586 2 320 2 321 1 950 3 587 2 213 2 710 4 326 2 216 16 468 6 82 2 712 1 714 2 86 4 830 3 831 2 87 1 224 1 594 3 475 2 960 2 334 2 600 3 839 2 840 2 721 2 602 2 967 5 727 2 845 2 343 4 847 2 970 2 105 2 734 2 739 1 976 2 853 2 614 2 242 2 249 2 499 2 363 2 118 2 501 2 988 2 503 2 122 2 
132 2 207 2 
900 2 809 2 207 4 
741 2 
192 18 59 2 371 2 901 2 784 2 63 2 5 2 867 2 628 2 656 2 128 2 966 2 163 2 935 2 703 2 913 18 877 2 730 2 547 2 409 2 517 2 638 2 453 2 667 2 639 2 795 2 550 2 918 2 640 2 417 2 769 2 143 2 322 2 390 2 218 18 715 2 532 2 185 2 748 2 684 2 864 2 959 2 398 2 
689 2 15 1 479 2 928 2 
804 2 928 2 
789 2 102 2 807 2 376 2 771 2 928 2 865 2 
810 2 928 2 865 2 
765 2 928 2 865 2 
689 2 880 2 298 2 
928 2 865 2 
298 2 270 2 
928 2 650 2 
689 2 833 2 298 2 
689 2 134 2 22 2 
689 2 120 2 724 2 
689 2 565 2 673 2 
689 2 651 2 622 2 
384 2 298 2 
319 2 928 2 
846 2 134 2 
889 2 120 2 
194 2 673 2 
866 2 
489 2 298 2 
312 2 622 2 
210 2 673 2 
236 2 120 2 
919 2 134 2 
689 2 247 2 833 2 298 2 
689 2 247 2 833 2 646 2 298 2 
689 2 762 2 298 2 
689 2 184 2 298 2 
691 2 753 2 46 2 69 2 
255 2 318 2 0 2 16 2 782 2 174 2 785 4 907 2 180 2 589 2 588 2 573 6 513 2 894 2 275 4 534 2 668 2 435 2 
305 2 689 2 
859 2 71 2 
859 2 71 2 380 2 
775 2 807 2 376 2 771 2 928 2 865 2 
844 2 288 2 
440 2 807 2 376 2 771 2 
673 2 157 2 
261 2 622 2 
134 2 562 2 
120 2 977 2 
705 2 120 2 622 2 
568 2 120 2 622 2 
438 2 120 2 622 2 
120 2 622 2 127 2 
597 2 598 2 718 2 401 2 106 6 18 6 771 2 807 2 
101 2 298 2 
50 2 
257 2 373 2 869 2 515 4 632 2 263 4 383 2 641 2 522 2 17 4 147 2 777 26 152 2 27 2 282 6 652 2 903 6 284 2 159 6 791 2 671 2 799 2 300 2 428 4 301 2 51 4 429 2 55 2 686 2 687 2 566 2 697 2 444 2 447 4 939 2 314 2 582 2 74 6 207 26 320 2 77 2 710 2 468 6 326 2 714 2 86 2 831 2 87 2 475 2 839 2 720 2 722 2 483 2 842 4 845 2 343 4 847 2 970 2 353 2 976 2 853 2 242 2 620 2 498 2 249 2 499 4 118 2 501 2 983 2 621 2 988 2 863 2 
257 2 373 2 869 2 515 4 632 2 263 4 383 2 641 2 522 2 17 6 147 2 777 26 152 2 27 2 282 6 652 2 903 6 284 2 159 6 788 2 791 2 671 2 799 2 556 2 803 2 300 2 428 4 301 2 51 4 429 2 55 2 302 2 686 2 566 2 697 2 444 2 447 4 939 2 314 2 582 2 74 6 207 26 320 2 710 2 468 6 326 2 714 2 86 2 831 2 87 2 475 2 839 2 720 2 722 2 483 2 842 4 845 2 343 4 847 2 970 2 354 2 976 2 853 2 242 2 617 2 620 2 498 2 249 2 499 4 118 2 501 2 983 2 621 2 988 2 863 2 
265 2 
525 2 116 2 
226 2 283 2 139 2 676 2 323 2 160 2 543 4 511 2 217 4 657 2 38 2 728 2 662 2 760 2 221 2 432 2 738 2 348 2 
439 4 64 2 869 2 511 2 574 2 631 2 447 2 760 2 637 2 581 4 582 2 207 12 139 4 522 2 463 2 323 2 468 4 217 4 221 2 777 6 25 2 834 2 837 2 226 4 839 2 283 4 905 2 160 2 543 4 657 4 38 2 728 6 230 2 662 2 407 2 232 2 970 2 733 4 609 2 738 2 348 2 412 4 238 2 45 2 740 2 672 6 802 2 676 2 361 2 182 2 47 4 48 6 428 2 118 2 119 2 432 2 433 2 55 2 504 2 434 2 
439 4 64 2 869 2 511 2 574 2 631 2 447 2 760 2 637 2 581 4 582 2 207 12 139 4 522 2 463 2 323 2 468 4 217 4 221 2 777 6 25 2 834 2 333 2 837 2 226 6 839 2 283 4 905 2 160 2 543 4 657 4 38 2 728 4 230 2 662 2 407 2 232 2 970 2 733 4 609 2 738 2 348 2 412 4 238 2 45 2 740 2 672 6 802 2 676 2 361 2 182 2 47 4 48 6 428 2 118 2 432 2 433 2 55 2 504 2 434 2 
439 4 64 2 869 2 511 2 574 2 631 2 447 2 760 2 637 2 581 8 582 2 207 12 139 4 522 2 463 2 462 2 323 2 468 4 217 4 221 2 777 6 25 2 834 2 837 2 226 6 839 2 283 4 905 2 160 2 543 4 657 4 38 2 728 6 230 2 662 2 407 2 232 2 970 2 733 4 609 2 738 2 348 2 412 4 238 2 45 2 740 2 672 6 802 2 676 2 361 2 182 2 47 4 48 6 428 2 118 2 432 2 433 2 55 2 504 2 434 2 
439 4 64 2 869 2 511 2 574 2 631 2 447 2 760 2 637 2 581 8 582 2 207 12 139 4 522 2 463 2 462 2 323 2 468 4 217 4 221 2 777 6 25 2 834 2 333 2 837 2 226 8 839 2 283 4 905 2 160 2 543 4 657 4 38 2 728 6 230 2 662 2 407 2 232 2 970 2 733 4 609 2 738 2 348 2 412 8 238 2 45 2 740 2 672 8 802 2 676 2 361 2 182 2 47 4 48 10 428 2 118 2 432 2 433 2 55 2 504 2 434 2 
439 4 64 2 869 2 511 2 574 2 631 2 447 2 760 2 637 2 581 8 582 2 207 12 139 4 522 2 463 2 462 2 323 2 468 4 217 4 221 2 777 6 25 2 834 2 837 2 226 6 839 2 283 4 905 2 160 2 543 4 657 4 38 2 728 6 230 2 662 2 407 2 232 2 970 2 733 4 609 2 738 2 348 2 412 8 238 2 45 2 740 2 672 6 802 2 676 2 361 2 182 2 47 4 48 10 428 2 118 2 432 2 433 2 55 2 504 2 434 2 
257 2 511 2 515 4 8 2 760 2 263 4 11 2 12 2 522 2 17 6 777 24 25 2 24 2 26 2 282 4 283 4 284 2 542 2 285 2 543 4 38 2 292 2 45 2 799 2 556 2 802 2 47 4 48 2 301 2 51 2 55 2 302 2 566 2 64 2 310 2 574 2 313 1 314 2 581 2 582 2 73 6 74 6 317 6 320 2 76 10 323 2 324 4 86 2 88 4 831 2 834 2 333 4 837 2 599 1 839 2 93 6 337 2 339 2 338 6 845 2 343 4 606 2 847 2 609 4 348 2 352 6 853 2 611 7 615 6 361 2 618 2 620 2 118 2 365 1 863 2 367 2 373 12 869 2 631 2 632 2 130 2 132 6 637 4 136 1 881 2 381 6 139 4 140 2 145 2 893 1 399 2 900 6 903 6 904 2 905 2 159 8 160 2 657 4 661 2 912 2 662 2 407 2 672 12 418 8 920 2 676 2 179 2 182 2 424 2 426 2 923 6 425 2 428 4 429 2 432 2 186 2 686 4 434 2 439 6 693 2 697 2 447 4 446 1 939 2 207 46 460 1 463 4 710 2 468 6 217 4 955 2 957 6 219 7 714 2 472 2 221 2 220 6 226 8 965 1 228 6 481 2 728 4 230 2 232 2 970 2 971 1 733 8 736 6 738 2 237 2 238 2 740 2 976 2 741 6 249 2 251 2 984 6 988 2 504 2 
373 12 257 4 869 2 511 2 515 4 631 2 8 2 632 2 130 2 760 2 263 4 131 2 132 6 637 4 381 6 881 2 11 2 12 2 140 2 139 4 522 2 17 6 145 2 777 26 26 2 24 2 25 2 399 2 282 8 900 6 903 6 904 2 283 4 284 2 159 8 905 2 285 2 542 2 160 2 543 4 657 4 38 2 661 2 912 2 662 2 407 2 45 2 292 2 799 2 672 12 418 8 556 2 802 2 920 2 676 2 179 2 424 2 182 2 47 4 48 2 425 2 923 6 426 2 428 4 51 2 301 2 429 2 432 2 186 2 55 2 686 4 302 2 434 2 439 6 566 2 693 2 64 2 310 2 697 2 574 2 447 4 939 2 314 2 581 6 73 6 582 2 74 6 317 6 207 48 584 2 76 10 320 2 462 4 463 4 324 4 323 2 710 4 468 6 217 4 957 6 955 2 714 2 472 2 86 4 220 6 221 2 831 2 88 4 834 2 837 2 226 8 839 2 93 6 228 6 481 2 337 2 338 6 339 2 728 8 230 2 845 2 606 2 343 4 847 2 232 2 970 2 733 8 736 6 609 4 738 2 348 2 237 2 238 2 352 6 740 2 976 2 853 2 615 6 741 6 361 2 618 2 620 2 249 2 499 2 118 2 251 2 984 6 367 2 988 2 863 2 504 2 
373 12 257 4 869 2 511 2 515 4 631 2 8 2 632 2 130 2 760 2 263 4 131 2 132 6 637 4 381 6 881 2 11 2 12 2 140 2 139 4 522 2 17 6 145 2 777 26 26 2 24 2 25 2 399 2 282 8 900 6 903 6 904 2 283 4 284 2 159 8 905 2 285 2 542 2 160 2 543 4 657 4 38 2 661 2 912 2 662 2 407 2 412 4 45 2 292 2 799 2 672 12 418 8 556 2 802 2 920 2 676 2 179 2 424 2 182 2 47 4 48 6 425 2 923 6 426 2 428 4 51 2 301 2 429 2 432 2 186 2 55 2 686 4 302 2 434 2 439 6 566 2 693 2 64 2 310 2 697 2 574 2 447 4 939 2 314 2 581 6 73 6 582 2 74 6 317 6 207 48 584 2 76 10 320 2 462 4 463 4 324 4 323 2 710 4 468 6 217 4 957 6 955 2 714 2 472 2 86 4 220 6 221 2 831 2 88 4 834 2 837 2 226 8 839 2 93 6 228 6 481 2 337 2 338 6 339 2 728 8 230 2 845 2 606 2 343 4 847 2 232 2 970 2 733 8 736 6 609 4 738 2 348 2 237 2 238 2 352 6 740 2 976 2 853 2 615 6 741 6 361 2 618 2 620 2 249 2 499 2 118 2 251 2 984 6 367 2 863 2 988 2 504 2 
257 4 511 2 515 6 8 2 760 2 263 4 11 2 12 2 14 2 522 2 17 6 526 6 777 24 25 2 24 2 26 2 282 10 283 4 284 2 542 2 285 2 543 4 38 2 292 2 45 2 799 2 556 2 802 2 47 4 48 6 301 2 51 4 55 2 302 2 566 2 64 2 310 2 574 2 314 2 581 6 582 2 73 12 74 8 317 6 584 2 320 2 76 8 323 2 324 4 86 4 592 2 88 4 831 2 834 2 333 2 837 2 839 2 93 6 337 2 339 2 338 6 845 2 343 4 606 2 847 2 345 6 609 4 348 2 352 6 853 2 615 6 856 2 361 2 618 2 620 2 118 2 119 2 863 2 367 2 373 10 869 2 631 2 632 4 130 2 131 2 132 12 637 4 881 4 381 6 382 6 139 4 140 2 141 6 145 2 887 6 149 6 396 2 399 2 400 2 900 12 903 8 904 4 905 2 159 12 160 2 657 4 661 2 912 2 662 2 407 2 666 6 170 6 412 4 672 16 418 8 920 2 676 2 179 2 182 2 424 2 923 6 425 2 428 4 429 2 432 2 186 2 686 4 434 2 439 6 693 2 697 4 447 4 939 2 202 6 207 52 454 2 463 4 462 4 710 4 468 6 217 4 955 2 957 6 714 2 472 2 221 2 220 12 226 10 228 6 481 2 728 10 230 2 232 2 970 2 733 8 736 12 738 2 237 2 238 2 240 2 740 2 976 2 496 2 741 12 249 2 499 2 251 2 984 6 988 2 504 2 
226 6 439 2 905 2 64 2 543 2 657 4 38 2 728 6 230 2 631 2 574 2 407 2 760 2 733 2 581 6 738 2 207 4 348 2 412 4 672 4 740 2 139 4 462 2 463 2 323 2 217 2 182 2 47 2 48 4 221 2 25 2 432 2 504 2 434 2 837 2 
508 2 373 4 869 2 515 4 631 2 632 3 634 2 760 2 263 4 139 4 522 2 17 6 777 24 25 2 903 6 284 2 159 8 905 2 543 2 657 4 38 2 407 2 411 2 799 2 672 4 556 2 182 2 47 2 48 2 426 2 428 4 50 2 301 2 51 3 429 2 432 2 55 2 302 2 686 2 434 2 439 2 566 2 64 2 696 2 697 3 574 2 447 4 817 2 939 2 314 2 581 6 582 2 74 6 207 28 320 2 76 2 462 2 463 2 587 2 323 2 468 6 217 2 714 2 827 3 221 2 831 2 837 2 226 6 839 2 728 6 230 2 845 2 343 4 232 2 970 2 733 2 735 2 738 2 348 2 740 2 976 2 853 2 620 2 249 2 363 2 118 2 988 2 863 2 504 2 
439 4 64 2 869 2 511 2 574 2 631 2 447 2 760 2 637 2 581 8 582 2 207 12 139 4 522 2 463 2 462 2 323 2 468 4 217 4 221 2 777 6 25 2 834 2 837 2 226 6 839 2 283 4 905 2 160 2 543 4 657 4 38 2 728 6 230 2 662 2 407 2 232 2 970 2 733 4 609 2 738 2 348 2 412 8 238 2 45 2 740 2 672 6 802 2 676 2 361 2 182 2 47 4 48 10 428 2 118 2 432 2 433 2 55 2 504 2 434 2 
226 6 439 2 905 2 543 2 657 4 728 6 38 2 230 2 631 2 574 2 407 2 760 2 733 2 581 8 738 2 207 4 348 2 412 8 945 2 672 4 740 2 139 4 462 2 463 2 323 2 217 2 182 2 47 2 48 8 271 4 221 2 25 2 432 2 504 2 434 2 303 2 837 2 
699 2 574 2 504 2 
699 2 574 2 504 2 
257 4 373 4 869 2 263 4 522 2 523 2 139 4 17 6 394 2 777 16 25 2 895 2 282 4 903 2 284 2 159 2 543 2 908 2 657 4 38 2 42 2 412 2 799 2 672 10 556 2 47 2 48 2 428 4 301 2 51 2 429 2 432 2 55 2 302 2 686 4 439 2 566 2 695 2 447 4 574 2 939 2 314 2 204 2 581 6 582 2 74 2 207 24 76 2 320 2 463 4 462 4 324 2 323 2 710 4 468 6 217 2 826 2 714 2 86 4 88 2 333 2 226 10 839 2 338 2 728 8 230 2 845 2 343 4 847 2 970 2 733 4 973 2 112 2 976 2 853 2 620 2 249 2 118 2 982 2 983 4 988 2 863 2 504 2 505 2 
76 2 78 2 373 2 285 2 324 2 116 2 695 2 338 2 310 2 826 2 662 2 364 2 777 2 982 2 55 2 206 2 207 4 
257 4 373 2 869 2 263 4 522 2 523 2 139 4 17 6 150 2 394 2 777 14 25 2 895 2 282 4 903 2 284 2 159 2 543 2 908 2 657 4 38 2 42 2 412 2 799 2 672 10 556 2 47 2 48 2 428 4 301 2 51 4 429 2 432 2 55 2 302 2 686 4 439 2 566 2 447 4 574 2 939 2 314 2 204 2 581 6 582 2 74 2 207 20 320 2 463 4 462 4 323 2 710 4 468 6 217 2 826 2 714 2 86 4 88 2 333 2 226 10 839 2 728 8 230 2 845 2 343 4 847 2 970 2 733 4 973 4 347 2 112 2 976 2 853 2 620 2 249 2 118 2 982 2 983 4 988 2 863 2 504 2 505 2 
257 4 373 4 869 2 263 4 522 2 523 2 139 4 17 6 394 2 777 16 25 2 895 2 282 4 903 2 284 2 159 2 543 2 908 2 657 4 38 2 42 2 412 2 799 2 672 10 556 2 47 2 48 2 428 4 301 2 51 2 429 2 432 2 55 2 302 2 686 4 439 2 566 2 695 2 447 4 574 2 939 2 314 2 204 2 581 6 582 2 74 2 207 24 76 2 320 2 463 4 462 4 324 2 323 2 710 4 468 6 217 2 826 2 714 2 86 4 88 2 333 2 226 10 839 2 338 2 728 8 230 2 845 2 343 4 847 2 970 2 733 4 973 2 112 2 976 2 853 2 620 2 249 2 118 2 982 2 983 4 988 2 863 2 504 2 505 2 
1 10 2 4 506 4 256 8 509 48 4 2 510 2 754 26 6 6 258 2 756 6 515 12 263 6 10 8 264 2 519 4 763 2 12 2 14 2 767 24 522 2 524 2 770 2 268 2 17 14 20 16 527 18 23 8 272 2 776 6 273 8 777 32 535 4 278 2 279 2 281 22 280 2 30 2 780 2 282 60 783 2 31 18 786 6 37 2 35 2 545 4 40 2 39 6 286 2 790 10 794 2 290 2 44 3 797 2 292 2 799 4 555 2 800 8 556 6 297 8 558 3 52 2 301 4 559 2 51 25 560 2 55 2 302 6 563 42 307 6 564 2 813 16 566 2 814 10 65 2 68 2 572 2 576 2 70 10 577 2 72 2 579 6 315 2 583 16 582 2 74 14 75 2 585 2 822 2 320 2 825 2 824 2 327 4 591 2 83 10 827 2 329 2 592 2 593 6 831 2 87 2 332 8 595 2 596 2 335 2 838 2 89 2 91 2 90 2 839 2 92 2 94 2 843 2 604 2 605 66 342 4 343 6 344 12 847 4 346 2 107 2 848 2 349 3 351 4 111 2 356 4 853 2 115 2 616 2 359 2 855 4 117 2 856 2 857 2 858 4 618 4 619 4 620 2 362 2 366 12 118 2 621 2 121 12 123 2 624 2 369 6 625 2 626 2 373 2 870 4 869 2 874 10 630 2 632 16 633 2 634 2 377 18 878 3 379 2 879 6 882 2 881 22 884 2 138 4 641 18 387 2 642 14 142 6 643 4 888 2 647 4 393 8 890 6 152 2 396 2 397 48 154 2 155 16 896 9 899 4 902 2 653 2 652 2 903 14 904 40 159 36 910 2 660 6 911 4 406 2 663 4 665 2 915 2 410 2 169 2 669 2 411 2 414 6 172 32 671 2 416 16 675 4 921 6 677 4 678 4 922 10 427 10 428 4 925 2 926 6 429 2 430 2 431 2 679 2 927 12 682 4 685 14 686 2 931 6 189 2 932 1 195 10 197 4 693 2 696 2 697 25 200 6 447 4 936 4 937 2 939 4 940 2 451 2 452 2 941 2 203 2 207 60 454 2 208 4 456 6 455 4 709 18 457 4 458 2 947 2 461 2 212 4 951 2 953 4 711 2 215 2 468 6 954 2 955 2 471 2 714 4 472 2 474 12 223 4 958 2 716 8 961 2 225 4 962 6 963 2 964 10 719 2 478 4 720 2 480 2 482 6 722 2 723 2 483 2 229 9 725 2 968 22 485 3 231 4 729 2 970 2 492 2 732 2 491 2 234 2 972 2 735 2 235 2 493 2 495 2 974 2 240 2 976 4 496 2 241 2 497 6 743 4 742 16 979 12 243 2 244 2 980 2 245 2 744 2 498 2 981 2 249 2 251 2 250 2 502 4 749 2 253 18 
189 2 44 2 903 2 822 2 159 2 480 2 214 2 697 2 515 2 632 2 925 2 51 2 777 2 831 2 234 2 107 2 74 2 279 2 207 2 
189 2 44 2 903 2 822 2 159 2 480 2 214 2 697 2 515 2 632 2 925 2 51 2 777 2 831 2 234 2 107 2 74 2 279 2 207 2 
189 2 44 2 903 2 822 2 159 2 480 2 214 2 697 2 515 2 632 2 925 2 51 2 777 2 831 2 234 2 107 2 74 2 279 2 207 2 
536 2 2 2 813 5 256 2 31 4 480 2 159 2 229 3 698 2 697 3 909 2 936 2 663 2 344 4 793 2 377 4 133 2 916 2 208 2 207 10 209 4 455 2 709 2 457 2 355 2 385 2 800 2 850 2 461 2 142 4 420 3 527 4 393 2 51 3 777 4 223 2 831 2 397 6 253 4 896 3 
536 2 2 2 813 4 256 2 31 4 480 2 159 2 229 2 698 2 697 2 909 2 936 2 663 2 344 4 793 2 377 4 133 2 916 2 208 2 207 10 209 4 455 2 709 2 457 2 355 2 385 2 800 2 850 2 461 2 142 4 144 2 420 2 647 2 527 4 393 2 51 2 777 4 223 2 831 2 397 6 253 4 896 2 369 2 
536 2 2 2 813 4 256 2 31 4 480 2 159 2 229 2 698 2 697 2 909 2 936 2 663 2 344 4 793 2 377 4 133 2 916 2 208 2 207 10 209 4 455 2 709 2 457 2 355 2 385 2 800 2 850 2 461 2 142 4 144 2 420 2 647 2 527 4 393 2 51 2 777 4 223 2 831 2 397 6 253 4 896 2 369 2 
536 2 2 2 813 4 256 2 31 4 480 2 159 2 229 2 698 2 697 2 909 2 936 2 663 2 344 4 793 2 377 4 133 2 916 2 208 2 207 10 209 4 455 2 709 2 457 2 355 2 385 2 800 2 850 2 461 2 142 4 144 2 420 2 647 2 527 4 393 2 51 2 777 4 223 2 831 2 397 6 253 4 896 2 369 2 
536 2 2 2 813 4 256 2 31 4 480 2 159 2 229 2 698 2 697 2 909 2 936 2 663 2 344 4 793 2 377 4 133 2 916 2 208 2 207 10 209 4 455 2 709 2 457 2 355 2 385 2 800 2 850 2 461 2 142 4 144 4 420 2 647 4 527 4 393 2 51 2 777 4 223 2 831 2 397 6 253 4 896 2 369 4 
938 2 227 2 683 2 203 2 289 2 378 2 
392 2 110 2 758 2 641 2 183 2 938 2 3 2 
191 1 477 2 601 2 815 2 933 2 97 2 607 2 736 2 137 1 518 2 917 1 207 10 43 2 464 2 465 2 81 1 746 2 500 2 777 8 118 2 862 2 778 2 252 2 277 1 930 2 750 2 
2 6 193 2 688 2 813 16 478 2 256 6 660 4 910 2 201 2 936 6 663 6 100 2 344 12 207 6 457 6 459 2 800 6 175 4 142 4 144 2 823 2 391 2 647 2 393 6 777 6 223 2 533 2 502 2 30 2 369 4 
521 7 415 2 95 2 211 4 357 2 19 2 726 2 7 1 527 2 575 2 531 2 892 2 891 2 777 1 377 2 737 2 253 2 207 1 
521 6 415 2 95 2 211 4 357 4 19 2 726 4 527 2 575 2 531 2 891 2 892 4 377 2 737 2 253 2 
521 10 415 2 95 2 211 4 357 8 19 2 726 8 7 1 527 2 575 8 531 6 891 2 892 8 777 1 377 2 737 2 253 2 207 1 
521 2 415 2 95 2 211 2 357 2 19 2 726 2 527 2 891 2 892 2 377 2 737 2 253 2 
507 2 751 2 126 2 374 2 757 2 630 2 375 2 262 2 263 8 635 2 766 3 266 4 17 20 772 2 777 26 153 2 161 4 787 2 658 2 164 2 405 1 549 2 670 2 553 2 799 2 556 2 178 2 421 2 805 16 680 2 302 2 929 2 567 2 309 2 445 2 448 2 449 2 578 2 939 2 708 2 316 4 207 26 79 2 952 2 80 4 467 2 714 2 85 2 832 2 717 2 343 8 99 2 103 2 104 2 608 4 493 2 113 2 851 2 114 2 250 2 987 2 
493 2 799 2 556 4 17 10 772 2 757 2 630 2 714 2 343 4 99 2 805 4 939 2 103 2 777 10 263 4 250 2 408 2 104 2 987 2 302 4 207 10 
507 4 125 2 752 2 751 2 126 4 755 2 260 2 630 2 514 2 375 2 262 2 263 18 883 2 520 2 13 2 766 4 266 16 768 2 17 32 772 2 645 2 146 2 151 1 777 34 153 2 402 2 161 14 658 2 164 6 546 2 914 4 166 2 670 4 553 2 799 4 294 4 556 4 295 2 296 4 178 2 423 2 805 4 53 2 187 2 302 4 929 2 690 4 62 4 309 2 567 2 198 2 441 2 570 2 445 2 702 2 448 2 311 2 939 6 205 2 943 2 316 2 207 38 821 2 79 2 952 2 467 2 590 2 470 2 713 3 714 6 328 2 222 2 832 4 717 4 836 1 340 2 603 2 343 16 486 2 99 2 103 2 490 2 104 2 493 2 114 2 854 2 360 2 861 2 250 2 368 2 
493 2 239 2 799 2 556 4 17 10 906 2 772 2 757 2 630 2 700 2 714 2 343 4 99 2 805 4 939 2 103 2 777 12 263 4 250 2 104 2 331 2 987 2 302 4 207 12 
199 2 

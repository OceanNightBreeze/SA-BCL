#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 245 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.ArrayIndexOutOfBoundsException 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 61 771 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 61 771 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.ArrayIndexOutOfBoundsException 532 (372,429) (191,332) (191,332) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.ArrayIndexOutOfBoundsException 532 (372,429) (191,332) (191,332) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.ArrayIndexOutOfBoundsException 532 (372,429) (191,332) (191,332) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.ArrayIndexOutOfBoundsException 532 (372,429) (191,332) (191,332) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.ArrayIndexOutOfBoundsException 532 (372,429) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 532 (372,429) (372,429) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 532 (372,429) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 130 358 7 444 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 591 
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 646 38 168 698 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.ArrayIndexOutOfBoundsException 157 674 202 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 157 674 202 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:subsetOf([D[F)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.ProglangType:isFloat()Z
daikon.Quant:memberOf(S[S)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(I[I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:eltsEqual([II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.ProglangType:isPseudoArray()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Ppt:Ppt()V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z | ASSIGN | 37734 | = null
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:backup(I)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 3087 | return null
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:relate_var()V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[F)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.ProglangType:baseIsScalar()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.MathMDE:gcd([I)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:eq(JJ)Z
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.MathMDE:sign(I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.Invariants:Invariants()V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | RETURN | 19748 | return null
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.Invariant:justified()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:concat([I[I)[I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:isArray()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:noDups([I)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONSTANT | 14703 | 0 -> 1
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Debug:logOn()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(J[J)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 279238 | = null
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:gt(II)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.PptSlice0:arity()I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.JavaCharStream:BeginToken()C
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.JavaCharStream:getBeginLine()I
utilMDE.MathMDE:gcd(JJ)J
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.FormatTestCase:passes()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexGT([I[I)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.PptName:isEnterPoint()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoAux:hashCode()I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONDITION | 43181 | if (x) -> if (!x)
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.simplify.SimpUtil:formatInteger(J)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 13092 | = null
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:dimensions()I
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseLT([I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:eltsGT([II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:eq(DD)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName:hashCode()I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.MathMDE:negate(I)I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
jtb.JavaCharStream:getEndLine()I
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lte(II)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus; | RETURN | 5040 | return null
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_ntk()I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token; | CONDITION | 213180 | if (x) -> if (!x)
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:sameLength([I[I)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | CONSTANT | 54150 | 0 -> -1
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:arity()I
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eq(FF)Z
daikon.Quant:union([I[I)[I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:lexLT([I[I)Z
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:isIntegral()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:lt(II)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:subsetOf([J[J)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:eltsNotEqual([II)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:slice([III)[I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ValueTuple:size()I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.Quant:lexEqual([I[I)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([I)[I
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | CONDITION | 127882 | if (x) -> if (!x)
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfo:new_ppt()V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | RETURN | 15328 | return null
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:eq(II)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.ArraysMDE:min([I)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:setDiff([I[I)[I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.PptSlice2:arity()I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaCharStream:FillBuff()V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:memberOf(D[F)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.Node:Node()V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.Quant:setEqual([I[I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:gte(II)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V | STATEMENT | 9545 | stmt -> ;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 64304 | return null
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
447 2 726 2 743 2 766 4 126 2 434 2 247 2 684 2 91 2 
732 2 159 2 555 6 427 2 135 6 764 2 603 2 725 2 145 2 480 2 461 6 
207 4 304 2 70 6 6 6 42 2 247 2 765 2 684 2 448 4 642 2 521 6 610 2 628 6 
255 10 418 2 378 4 257 26 516 8 780 10 264 10 629 2 211 2 782 12 213 29 39 2 192 10 564 8 127 6 592 4 683 16 615 4 247 6 436 16 684 6 409 8 73 2 201 16 670 6 411 2 767 8 176 2 108 10 596 4 
280 4 739 6 
49 2 
718 2 255 2 536 2 257 4 753 2 539 2 780 4 264 2 431 2 782 2 213 6 759 2 192 2 592 2 683 2 735 2 436 2 409 2 670 2 201 2 24 2 151 2 108 2 
390 6 213 14 192 4 255 4 343 4 683 8 257 12 336 6 436 8 174 4 201 8 439 2 264 4 89 2 596 2 108 4 782 5 
316 2 580 2 341 8 772 10 52 4 30 4 443 2 774 62 514 4 446 4 424 2 141 14 495 2 520 2 497 2 627 2 472 4 729 2 704 2 391 4 331 4 457 2 709 4 218 4 593 2 217 4 169 2 365 2 548 2 173 2 148 4 149 4 198 2 311 2 644 2 150 2 744 10 441 6 180 2 533 4 
245 2 393 2 386 2 183 2 353 2 49 2 292 2 369 2 560 2 26 2 474 2 
374 2 109 2 376 4 464 2 556 2 156 2 258 4 117 4 387 2 120 2 611 2 211 2 123 2 705 2 330 2 331 2 126 2 762 2 23 2 218 4 129 2 714 2 578 2 579 2 136 2 28 2 341 2 230 2 720 2 345 2 775 2 724 2 139 2 494 2 627 2 188 2 364 2 247 4 684 4 99 2 504 2 107 2 152 2 796 2 
229 8 255 2 257 6 209 4 264 2 782 3 213 7 192 2 683 4 247 4 436 4 684 4 201 4 550 6 339 2 108 2 
173 2 341 2 441 2 
524 2 20 2 734 2 345 2 56 2 575 2 518 22 48 2 36 2 499 2 595 2 552 2 406 2 612 10 
417 2 317 1 112 4 693 1 604 2 115 2 321 4 114 6 696 1 607 2 425 2 426 5 701 2 434 2 132 1 133 2 437 2 224 1 228 2 442 2 719 2 138 2 626 1 349 1 356 2 727 2 542 1 731 3 453 4 631 2 244 2 632 2 733 2 359 2 363 1 736 2 546 2 547 2 247 30 249 2 641 2 46 1 45 2 463 4 370 2 553 2 754 1 263 2 470 2 160 3 60 6 757 2 163 2 561 2 475 2 661 2 269 2 270 2 167 6 170 1 394 2 275 1 276 2 770 2 177 6 178 2 583 2 489 6 84 1 86 1 675 2 184 5 87 2 88 2 294 2 296 1 585 11 93 5 299 1 501 2 96 2 196 2 306 1 684 32 789 1 505 1 203 4 598 4 
657 2 
395 2 684 2 
329 2 459 2 684 4 
487 2 1 2 512 2 54 2 287 2 113 18 468 2 8 2 777 2 559 2 538 2 519 2 185 2 388 2 728 2 658 2 64 2 18 2 268 2 633 2 526 2 193 2 680 18 433 2 590 2 22 2 362 2 479 2 272 2 571 2 614 2 131 2 713 2 502 18 460 2 44 2 531 2 742 2 25 2 412 2 278 2 179 2 27 2 
558 1 11 2 541 2 691 2 
477 2 691 2 
554 2 17 2 341 2 790 2 689 2 691 2 615 2 
17 2 749 2 691 2 
17 2 101 2 691 2 
166 2 142 2 541 2 
17 2 691 2 
166 2 29 2 
691 2 630 2 
166 2 322 2 541 2 
541 2 752 2 284 2 
541 2 379 2 267 2 
476 2 541 2 357 2 
606 2 541 2 33 2 
166 2 305 2 
778 2 691 2 
438 2 752 2 
267 2 695 2 
476 2 618 2 
606 2 576 2 
166 2 721 2 
606 2 318 2 
476 2 222 2 
223 2 267 2 
237 2 752 2 
166 2 322 2 541 2 650 2 
166 2 322 2 53 2 541 2 650 2 
385 2 166 2 541 2 
166 2 300 2 541 2 
186 2 609 2 253 2 226 2 
341 2 543 2 689 2 225 2 
554 2 574 2 341 2 543 2 689 2 225 2 
17 2 341 2 689 2 715 2 691 2 615 2 
236 2 504 2 
640 2 341 2 689 2 615 2 
476 2 445 2 
606 2 671 2 
752 2 309 2 
637 2 267 2 
606 2 594 2 267 2 
606 2 601 2 267 2 
606 2 368 2 267 2 
606 2 289 2 267 2 
341 2 261 2 454 2 587 6 40 2 664 2 689 2 
166 2 755 2 
0 2 525 2 537 2 467 2 573 2 116 2 238 2 740 2 518 6 337 2 450 4 252 2 162 2 404 2 716 2 14 2 623 4 327 2 
541 2 751 2 
356 2 
317 2 154 2 515 2 114 6 321 4 57 2 607 2 60 6 61 2 473 2 163 6 701 2 561 2 475 2 269 2 167 2 570 2 434 2 394 2 276 2 177 4 178 2 771 2 442 2 32 2 583 2 489 2 138 2 675 2 88 2 727 2 585 2 500 2 453 4 631 2 501 2 733 2 194 2 97 4 196 2 736 2 247 18 249 2 684 18 789 2 463 4 45 2 370 2 203 4 598 6 
317 2 154 2 515 2 114 6 321 4 57 2 607 2 263 2 60 6 61 2 473 2 163 6 701 2 561 2 475 2 661 2 269 2 167 2 570 2 434 2 394 2 276 2 177 6 178 2 771 2 442 2 32 2 583 2 489 2 138 2 675 2 88 2 727 2 585 2 500 2 453 4 631 2 501 2 733 2 194 2 97 4 196 2 736 2 247 18 249 2 684 18 789 2 463 4 45 2 370 2 203 4 598 6 
243 2 
706 2 486 2 
191 2 332 2 256 2 31 4 747 4 155 2 750 2 603 2 420 2 480 2 461 2 352 2 355 2 50 2 135 2 187 2 372 2 702 2 
415 2 111 2 254 2 747 4 256 2 555 6 155 2 750 2 603 4 420 2 262 2 607 2 12 2 652 2 60 4 654 2 15 4 561 2 702 2 659 2 269 2 332 2 392 6 764 2 273 4 529 2 480 4 532 2 483 2 75 2 135 6 622 2 178 2 31 4 583 2 725 2 352 2 355 2 240 2 187 4 451 4 92 2 191 2 544 2 196 2 787 4 247 6 461 4 684 12 100 2 366 2 463 2 50 2 370 2 645 2 371 2 372 2 795 2 690 4 203 2 
415 2 111 2 254 2 747 4 256 2 555 6 155 2 750 2 603 4 420 2 262 2 607 2 12 2 652 2 60 4 654 2 15 4 561 2 702 2 659 2 269 2 332 2 392 6 764 2 273 4 529 2 480 4 532 2 483 2 75 2 135 4 622 2 178 2 31 4 583 2 352 2 355 2 240 2 187 4 451 4 92 2 191 2 544 2 196 2 787 4 145 2 247 6 461 6 684 12 100 2 366 2 463 2 50 2 370 2 645 2 371 2 372 2 795 2 690 4 203 2 
415 2 111 2 254 2 747 4 256 2 555 6 155 2 750 2 603 4 420 2 262 2 607 2 12 2 652 2 427 2 60 4 654 2 15 8 561 2 702 2 659 2 269 2 332 2 392 6 764 2 273 4 529 2 480 4 532 2 483 2 75 2 135 6 622 2 178 2 31 4 583 2 352 2 355 2 240 2 187 4 451 4 92 2 191 2 544 2 196 2 787 4 247 6 461 6 684 12 100 2 366 2 463 2 50 2 370 2 645 2 371 2 372 2 795 2 690 4 203 2 
415 2 111 2 254 2 747 4 256 2 555 8 155 2 750 2 603 4 420 2 262 2 607 2 12 2 652 2 427 2 60 4 654 2 15 8 561 2 702 2 659 2 269 2 332 2 392 10 764 2 273 4 529 2 480 4 532 2 483 2 75 2 135 6 622 2 178 2 31 4 583 2 352 2 355 2 240 2 187 4 451 4 92 2 191 2 544 2 196 2 787 8 145 2 247 6 461 8 684 12 100 2 366 2 463 2 50 2 370 2 645 2 371 2 372 2 795 2 690 4 203 2 
415 2 111 2 254 2 747 4 256 2 555 6 155 2 750 2 603 4 420 2 262 2 607 2 12 2 652 2 427 2 60 4 654 2 15 8 561 2 702 2 659 2 269 2 332 2 392 10 764 2 273 4 529 2 480 4 532 2 483 2 75 2 135 6 622 2 178 2 31 4 583 2 352 2 355 2 240 2 187 4 451 4 92 2 191 2 544 2 196 2 787 8 247 6 461 6 684 12 100 2 366 2 463 2 50 2 370 2 645 2 371 2 372 2 795 2 690 4 203 2 
415 2 111 2 555 4 256 2 31 2 747 2 155 2 603 2 420 2 262 2 355 2 652 2 654 2 15 2 92 2 659 2 191 2 332 2 764 2 273 2 546 2 145 2 435 2 480 2 684 4 461 4 641 2 437 2 483 2 532 2 366 2 135 2 622 2 371 2 690 2 372 2 
415 2 111 2 555 4 256 2 31 2 747 2 155 2 603 2 420 2 262 2 355 2 427 2 652 2 654 2 15 6 92 2 659 2 191 2 332 2 764 2 273 2 546 2 435 2 480 2 684 4 461 4 641 2 437 2 483 2 532 2 366 2 135 4 622 2 371 2 690 2 372 2 
415 2 111 2 555 4 256 2 31 2 747 2 155 2 603 2 420 2 262 2 355 2 427 2 652 2 654 2 15 6 92 2 659 2 191 2 332 2 392 4 764 2 273 2 787 4 546 2 435 2 480 2 684 4 461 4 641 2 437 2 483 2 532 2 366 2 135 4 622 2 371 2 690 2 372 2 
415 2 111 2 555 4 256 2 31 2 747 2 155 2 603 2 420 2 262 2 355 2 427 2 652 2 654 2 15 6 92 2 659 2 191 2 332 2 392 4 764 2 273 2 787 4 546 2 435 2 480 2 684 4 461 4 641 2 437 2 483 2 532 2 366 2 135 4 622 2 371 2 690 2 372 2 
415 2 111 2 555 4 256 2 31 2 747 2 155 2 603 4 420 2 262 2 355 2 427 2 652 2 654 2 15 6 451 2 92 2 659 2 191 2 332 2 392 4 764 2 273 2 787 4 480 4 684 4 461 6 483 2 532 2 366 2 135 6 622 2 371 2 690 2 372 2 
415 2 111 2 603 4 515 2 321 4 114 8 420 2 607 2 119 2 427 2 15 6 701 2 16 2 332 2 434 2 532 2 135 6 622 2 442 2 31 2 138 2 351 2 355 2 356 2 727 2 451 2 453 4 631 2 733 2 359 2 736 2 247 24 461 6 249 4 366 2 463 4 45 2 370 2 371 2 372 2 154 2 254 2 555 4 747 2 256 2 155 2 381 3 262 2 263 2 60 6 652 2 654 2 163 6 561 2 475 2 659 2 661 2 660 2 269 2 167 3 570 2 392 2 764 2 273 2 480 4 394 2 483 2 276 2 177 6 178 2 78 2 583 2 489 3 401 2 675 2 88 2 294 2 585 3 92 2 191 2 501 2 94 2 96 2 97 4 196 2 684 28 690 2 203 4 598 6 
415 2 111 2 254 2 747 4 256 2 555 6 155 2 750 2 603 4 420 2 262 2 607 2 12 2 652 2 427 2 60 4 654 2 15 8 561 2 702 2 659 2 269 2 332 2 392 10 764 2 273 4 529 2 480 4 532 2 483 2 75 2 135 6 622 2 178 2 31 4 583 2 352 2 355 2 240 2 187 4 451 4 92 2 191 2 544 2 196 2 787 8 247 6 461 6 684 12 100 2 366 2 463 2 50 2 370 2 645 2 371 2 372 2 795 2 690 4 203 2 
415 2 111 2 254 2 256 2 747 4 555 8 155 2 750 2 603 4 420 2 262 2 607 2 12 2 652 2 427 2 60 4 428 2 654 2 15 8 561 2 702 2 659 2 269 2 332 2 392 10 764 2 273 4 529 2 480 4 532 2 483 2 75 2 135 8 622 2 178 2 31 4 583 2 725 2 352 2 355 2 240 2 187 4 451 4 92 2 191 2 544 2 144 4 195 2 196 2 787 8 247 6 461 6 684 12 100 2 463 2 366 2 50 2 370 2 645 2 372 2 690 4 203 2 
659 2 483 2 703 2 
659 2 483 2 703 2 
515 2 603 2 321 4 114 2 420 2 607 2 427 2 15 6 701 2 434 2 437 2 532 2 135 4 442 2 31 2 138 2 233 2 140 2 355 2 727 2 453 4 631 2 733 2 736 2 546 2 247 14 249 2 147 2 461 4 641 2 45 2 463 4 366 2 370 2 372 2 154 2 747 2 555 4 263 2 60 6 163 2 561 2 659 2 661 2 269 2 67 2 570 2 392 2 764 2 273 2 480 2 394 2 483 2 276 2 175 2 178 2 177 6 181 2 583 2 675 2 88 2 585 2 501 2 302 2 196 2 787 2 788 2 684 18 690 2 203 4 598 2 
269 2 567 2 303 2 380 2 247 2 85 2 249 2 219 2 684 4 352 2 688 2 35 2 119 2 620 2 486 2 781 2 562 2 
515 2 603 2 321 4 114 2 420 2 607 2 427 2 429 2 15 6 701 2 434 2 437 2 532 2 135 4 442 2 31 2 138 2 348 2 233 2 140 2 355 2 727 2 453 4 631 2 733 2 736 2 546 2 247 14 249 2 147 2 461 4 641 2 45 2 463 4 366 2 370 2 372 2 154 2 747 2 555 4 263 2 60 6 163 2 561 2 659 2 661 2 269 2 67 2 570 2 392 2 764 2 273 2 480 2 394 2 483 2 276 2 175 2 178 2 177 6 181 2 583 2 675 2 88 2 585 4 501 2 302 4 196 2 787 2 788 2 684 18 690 2 203 4 598 2 
515 2 603 2 321 4 114 2 420 2 607 2 427 2 15 6 701 2 434 2 437 2 532 2 135 4 442 2 31 2 138 2 233 2 140 2 355 2 727 2 453 4 631 2 733 2 736 2 546 2 247 14 249 2 147 2 461 4 641 2 45 2 463 4 366 2 370 2 372 2 154 2 747 2 555 4 263 2 60 6 163 2 561 2 659 2 661 2 269 2 67 2 570 2 392 2 764 2 273 2 480 2 394 2 483 2 276 2 175 2 178 2 177 6 181 2 583 2 675 2 88 2 585 2 501 2 302 2 196 2 787 2 788 2 684 18 690 2 203 4 598 2 
416 4 320 4 511 2 694 2 7 2 515 2 321 2 114 16 423 6 118 6 699 2 607 2 323 2 10 2 700 2 13 4 210 2 701 2 523 2 122 2 16 2 326 2 213 8 19 2 214 2 613 2 216 4 709 2 434 2 335 2 130 2 436 4 221 4 134 4 533 2 442 2 231 6 30 2 343 4 344 2 346 6 347 2 444 2 138 2 446 2 350 2 351 2 730 10 241 2 453 2 358 2 631 2 456 6 733 2 545 14 458 2 247 22 249 2 741 2 462 2 463 4 367 2 370 2 51 2 373 24 375 4 255 2 377 2 748 2 465 2 466 4 381 2 257 6 382 2 259 2 260 6 263 2 469 4 651 2 60 6 264 2 62 2 653 2 163 10 561 2 655 8 165 2 475 2 65 4 390 6 661 2 660 2 391 2 269 2 167 6 271 2 570 2 71 22 274 6 171 2 666 2 667 4 72 2 394 2 276 2 76 4 277 2 768 2 279 2 77 4 177 4 178 2 397 2 773 2 582 2 400 2 583 2 82 1 286 2 490 2 489 6 493 2 675 2 677 4 88 2 678 14 90 2 585 6 586 6 782 4 192 2 94 2 97 8 683 4 196 2 684 28 409 4 410 2 310 4 792 10 201 4 506 2 106 2 313 2 414 2 108 2 509 2 314 2 203 4 598 10 315 2 
80 2 489 3 723 3 114 2 605 4 756 2 163 2 584 2 585 3 475 2 563 2 785 2 167 3 97 2 634 2 128 2 308 2 247 2 684 2 792 6 551 2 251 2 105 2 598 2 
80 2 489 2 723 2 114 2 605 4 756 2 163 2 584 2 585 2 475 2 563 2 785 2 167 2 97 2 634 2 128 2 308 2 247 2 684 2 792 6 551 2 251 2 105 2 598 2 
80 2 489 2 723 2 114 2 605 4 756 2 163 2 584 2 585 2 475 2 563 2 785 2 167 2 97 2 634 2 128 2 308 2 247 2 684 2 792 6 551 2 251 2 105 2 598 2 
255 2 257 4 419 4 114 2 516 4 264 2 475 2 213 6 66 2 127 2 436 2 133 2 616 3 338 4 621 3 282 4 228 2 489 3 288 2 235 2 776 2 291 2 449 4 354 2 585 3 37 2 242 4 192 2 589 2 683 2 247 4 248 2 684 10 639 2 201 2 643 3 104 6 251 2 507 2 108 2 
255 2 257 4 419 4 114 2 516 4 264 2 475 2 213 4 66 2 127 2 436 2 133 2 616 2 338 4 621 2 282 4 228 2 489 2 288 2 235 2 776 2 291 2 449 4 354 2 585 2 37 2 242 4 782 2 39 2 192 2 589 2 683 2 247 4 248 2 684 10 639 2 409 2 201 2 643 2 104 6 251 2 507 2 108 2 
255 2 257 4 419 4 114 2 516 4 264 2 475 2 213 4 66 2 127 2 436 2 133 2 616 2 338 4 621 2 282 4 228 2 489 2 288 2 235 2 776 2 291 2 449 4 354 2 585 2 37 2 242 4 782 2 39 2 192 2 589 2 683 2 247 4 248 2 684 10 639 2 409 2 201 2 643 2 104 6 251 2 507 2 108 2 
255 2 257 4 419 4 114 2 516 4 264 2 475 2 213 4 66 2 127 2 436 2 133 2 616 2 338 4 621 2 282 4 228 2 489 2 288 2 235 2 776 2 291 2 449 4 354 2 585 2 37 2 242 4 782 2 39 2 192 2 589 2 683 2 247 4 248 2 684 10 639 2 409 2 201 2 643 2 104 6 251 2 507 2 108 2 
255 2 257 4 419 4 114 2 516 4 264 2 475 2 213 4 66 2 127 2 436 2 133 2 616 2 338 4 621 2 282 4 228 2 489 2 288 2 235 2 776 2 291 2 449 4 354 2 585 2 37 2 242 4 782 4 39 4 192 2 589 2 683 2 247 4 248 2 684 10 639 2 409 4 201 2 643 2 104 6 251 2 507 2 108 2 
279 2 307 2 121 2 722 2 146 2 758 2 
687 2 599 2 199 2 608 2 591 2 274 2 722 2 
316 1 297 2 783 2 38 2 168 2 665 2 247 4 481 2 684 4 685 1 698 2 239 1 495 1 161 1 370 2 452 2 646 2 
717 1 229 2 255 6 343 2 400 2 257 12 516 4 677 2 494 2 209 2 264 6 295 2 782 6 213 14 390 4 408 2 192 6 39 4 127 2 683 6 364 2 247 5 436 6 684 5 409 5 201 6 550 4 793 2 509 2 108 6 137 2 
455 2 565 2 527 2 398 1 399 2 682 2 491 2 419 2 247 1 684 1 220 7 449 2 530 2 517 2 617 4 281 2 769 2 282 2 
455 4 565 4 527 2 399 2 682 2 491 4 419 2 220 6 517 2 449 2 530 2 617 4 281 2 769 2 282 2 
455 8 565 8 527 2 398 1 399 2 682 6 491 8 419 2 247 1 684 1 220 10 517 8 449 2 530 2 617 4 281 2 769 2 282 2 
455 2 565 2 527 2 399 2 491 2 419 2 220 2 449 2 530 2 617 2 281 2 769 2 282 2 
510 2 319 2 2 2 3 4 206 2 602 2 4 7 5 16 321 18 208 2 697 6 9 2 522 2 432 2 21 2 124 4 708 2 125 2 619 2 340 2 534 2 442 4 535 6 342 2 232 6 625 2 540 8 143 8 453 20 733 2 41 6 737 2 247 40 549 2 153 2 746 4 647 2 648 2 55 2 649 2 384 2 157 2 158 1 263 2 471 2 266 2 656 2 63 2 661 2 760 6 761 2 68 2 568 2 569 2 69 2 763 2 572 2 668 2 276 4 577 2 672 6 673 2 485 2 283 4 177 36 674 2 581 4 83 6 290 2 182 2 293 2 498 4 496 2 405 2 679 2 588 4 784 2 786 4 98 2 684 44 686 2 197 8 791 10 312 2 413 4 202 2 508 2 597 2 
746 6 600 4 513 4 206 2 3 6 4 2 5 14 321 14 157 2 697 2 557 2 263 8 430 2 325 2 266 2 661 8 215 2 124 2 760 10 707 4 662 2 568 2 69 2 528 2 711 4 763 2 712 2 172 2 482 2 276 2 177 36 674 2 227 2 442 2 624 2 581 6 285 4 342 2 81 6 625 6 492 2 34 2 182 2 402 10 496 2 453 14 407 2 733 2 588 2 786 2 95 4 360 2 247 26 738 2 98 2 684 28 549 2 791 8 47 4 202 2 413 2 794 4 
510 2 746 4 600 2 319 2 647 2 2 2 648 2 513 2 3 4 55 4 4 4 649 2 5 4 321 16 157 2 697 4 9 2 263 6 471 2 325 2 266 2 63 2 432 2 661 6 21 2 760 10 124 2 215 2 707 2 566 2 568 2 569 2 69 2 711 2 763 2 334 2 572 2 172 1 276 6 577 2 619 2 673 2 484 2 485 2 283 4 177 34 340 2 674 2 534 2 442 6 581 4 624 2 285 2 342 2 81 4 488 2 232 4 625 1 492 1 182 2 402 2 293 2 779 2 496 2 498 2 453 18 407 2 588 4 733 4 95 2 41 4 738 2 247 34 98 2 684 38 686 2 791 14 47 2 312 2 413 2 202 2 508 2 
692 2 204 2 110 2 746 4 600 2 205 2 206 2 3 4 4 2 5 36 383 2 321 20 421 2 157 2 697 2 422 2 324 2 263 6 59 2 58 2 430 2 266 2 164 2 389 2 212 2 328 2 661 6 124 2 707 2 662 2 708 2 333 2 478 2 568 2 69 2 711 2 710 2 663 4 763 2 482 2 669 2 276 2 74 2 396 2 672 2 440 2 177 48 674 2 442 2 79 2 535 2 581 4 285 2 342 2 81 6 83 2 234 6 182 2 676 2 496 2 403 2 405 2 453 20 189 2 298 2 190 2 588 2 733 2 301 4 95 2 681 2 361 4 246 2 635 2 636 4 638 2 247 44 43 2 98 2 684 46 549 2 250 2 503 2 791 6 102 2 103 2 200 2 47 2 413 2 202 2 745 2 
265 2 

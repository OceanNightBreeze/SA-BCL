#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.NullPointerException 474 39 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError (372,416) 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 376 407 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 386 63 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V ERROR java.lang.ArrayIndexOutOfBoundsException 398 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.ArrayIndexOutOfBoundsException 398 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 376 407 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 376 407 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 376 407 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 376 407 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 376 407 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 263 371 54 127 551 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V ERROR java.lang.NullPointerException 162 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 400 296 397 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.ArrayIndexOutOfBoundsException 400 296 397 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.PptSlice0:arity()I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J | OPERATOR | 13933 | > -> <=
jtb.JavaCharStream:readChar()C
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:eq(FF)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | CONDITION | 21420 | if (x) -> if (!x)
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaCharStream:backup(I)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:slice([III)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | RETURN | 41894 | return null
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.Intern:intern([D)[D
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Intern:intern([J)[J
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ValueTuple:size()I
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.ModBitTracker:split(I)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.MathMDE:gcd([I)I
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I | CONSTANT | 14018 | 108 -> 109
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.ModBitTracker:num_sets()I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:lexLTE([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:ne(II)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:lt(II)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_ntk()I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:negate(I)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:setEqual([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:gte(II)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.Quant:gt(II)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:memberOf(F[F)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:lte(II)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:hashCode()I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONDITION | 15447 | if (x) -> if (!x)
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 22517 | = null
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | STATEMENT | 8020 | stmt -> ;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaCharStream:getBeginLine()I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:memberOf(D[F)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.MathMDE:sign(I)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:union([I[I)[I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:eltsLT([II)Z
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lexLT([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | OPERATOR | 127014 | + -> /
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:eltsEqual([II)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:num_vars()I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V | ASSIGN | 10801 | = null
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 3923 | = null
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V | CONDITION | 372 | if (x) -> if (!x)
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.ProglangType:dimensions()I
utilMDE.ArraysMDE:sum([[I)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I | CONSTANT | 624 | 0 -> 1
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:eq(DD)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.MathMDE:mod_positive(II)I
daikon.ModBitTracker:num_samples()I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseGTE([I)Z | CONDITION | 177097 | if (x) -> if (!x)
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariants:Invariants()V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:size()I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.Intern:intern([I)[I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(F[D)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.OrderedPairIterator:setnext2()V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType; | RETURN | 5873 | return null
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set; | CONDITION | 16702 | if (x) -> if (!x)
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:eq(II)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaCharStream:BeginToken()C
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3_16()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
488 2 119 2 335 4 72 2 443 2 115 2 11 2 126 2 134 2 
3 6 292 2 534 6 43 2 236 2 256 2 50 2 381 2 224 6 484 2 57 2 
119 2 2 4 267 6 89 2 506 6 542 2 375 4 331 6 72 2 301 2 99 6 185 2 384 2 
119 6 360 2 38 8 123 2 500 2 194 30 505 16 10 3 199 4 507 8 51 10 509 9 514 26 338 10 243 4 306 4 211 2 250 2 437 8 440 2 282 13 145 16 378 10 72 6 380 4 258 16 114 6 528 6 36 10 81 10 
96 6 392 4 
476 2 
289 2 5 4 6 2 88 2 423 2 295 2 94 2 425 2 97 2 161 2 164 2 303 2 308 2 309 2 172 2 372 2 31 4 443 2 113 2 117 2 184 2 323 2 119 4 388 2 121 2 123 2 391 2 456 2 49 2 459 2 53 2 469 2 136 2 140 2 68 2 218 4 553 2 72 4 411 2 148 2 76 4 223 2 558 2 416 2 
119 4 264 6 38 6 533 4 498 2 194 48 196 2 505 29 10 2 199 2 297 2 51 6 509 17 52 3 299 4 272 8 428 4 338 14 514 43 513 4 102 2 464 6 430 6 279 1 23 2 249 4 344 2 66 4 282 19 145 29 378 14 72 4 111 3 258 29 114 4 528 4 483 6 81 14 36 14 
135 2 24 2 416 2 
358 2 86 2 372 2 314 2 198 2 396 2 458 2 412 2 526 22 545 2 316 2 205 2 227 2 402 10 
366 2 39 2 536 2 474 2 
264 6 306 2 533 4 171 2 194 16 505 8 455 2 282 4 145 8 378 4 258 8 483 6 513 4 514 12 338 4 81 4 36 4 
83 2 84 2 135 2 24 2 124 2 215 2 28 2 12 2 238 6 443 2 525 2 300 2 182 2 416 4 133 2 417 2 166 2 
325 2 125 2 56 2 167 2 342 2 25 2 476 2 180 2 318 2 150 2 
119 4 535 2 497 2 14 4 15 2 461 2 465 2 471 4 407 2 173 2 26 2 473 2 174 4 373 2 349 2 376 2 177 2 72 4 442 2 444 2 414 2 259 4 188 2 
119 2 253 2 
119 4 548 2 481 2 
365 2 
357 6 359 2 494 2 361 2 291 6 502 6 9 2 90 6 92 6 91 2 158 6 160 2 98 6 100 2 364 4 367 4 22 2 170 28 27 4 29 2 315 8 181 2 35 2 529 2 190 4 386 2 37 2 389 2 191 4 265 6 328 2 330 2 268 2 540 6 46 28 48 4 399 2 129 2 463 2 337 4 546 2 466 6 274 2 207 2 209 2 61 2 405 2 63 2 550 6 408 2 552 2 217 2 143 6 284 6 352 4 478 28 221 2 285 6 149 2 222 6 559 2 
495 2 112 2 154 1 541 2 
16 2 541 2 
176 2 106 2 109 2 398 2 380 2 416 2 541 2 
109 2 220 2 541 2 
109 2 387 2 541 2 
495 2 186 2 58 2 
109 2 541 2 
186 2 363 2 
130 2 541 2 
33 2 495 2 186 2 
228 2 495 2 549 2 
239 2 495 2 362 2 
495 2 74 2 254 2 
189 2 490 2 495 2 
186 2 354 2 
67 2 541 2 
228 2 321 2 
239 2 491 2 
276 2 254 2 
422 2 
477 2 186 2 
189 2 201 2 
511 2 254 2 
239 2 108 2 
228 2 448 2 
33 2 495 2 155 2 186 2 
33 2 495 2 155 2 347 2 186 2 
495 2 186 2 187 2 
495 2 186 2 269 2 
345 2 47 2 270 2 95 2 
106 2 233 2 445 2 416 2 
106 2 398 2 233 2 445 2 312 2 416 2 
106 2 109 2 380 2 504 2 416 2 541 2 
113 2 138 2 
103 2 106 2 380 2 416 2 
441 2 254 2 
189 2 521 2 
228 2 320 2 
239 2 1 2 
189 2 239 2 332 2 
189 2 239 2 165 2 
189 2 239 2 19 2 
189 2 239 2 287 2 
419 2 241 2 106 2 351 6 34 2 416 2 485 2 80 6 
537 2 186 2 
246 4 152 2 339 2 290 2 433 2 532 2 247 2 404 4 107 2 311 2 539 2 395 2 30 2 526 6 427 2 530 2 353 2 82 2 
229 2 495 2 
213 2 
119 4 535 2 497 2 14 4 461 2 465 2 210 2 471 4 407 2 173 2 26 2 473 2 174 4 373 2 349 2 376 2 177 2 72 4 442 2 444 2 414 2 259 4 188 2 
497 2 14 4 26 2 173 2 313 2 174 6 373 2 376 2 177 2 442 2 444 2 317 2 259 4 188 2 119 4 535 2 461 2 465 2 210 2 471 4 407 2 473 2 349 2 72 4 414 2 
468 2 248 2 472 2 
468 2 248 2 472 2 
119 4 535 2 497 2 14 4 461 2 465 2 210 2 471 4 407 2 173 2 26 2 473 2 174 4 373 2 349 2 376 2 177 2 72 4 442 2 444 2 414 2 259 4 188 2 
497 2 14 4 26 2 173 2 313 2 174 6 373 2 376 2 177 2 442 2 444 2 317 2 259 4 188 2 119 4 535 2 461 2 465 2 210 2 471 4 407 2 473 2 349 2 72 4 414 2 
497 2 14 4 26 2 173 2 174 5 313 1 373 2 376 2 177 2 442 2 444 2 317 1 259 4 188 2 119 4 535 2 461 2 465 2 210 2 471 4 407 2 473 2 349 2 72 4 414 2 
119 4 450 2 127 2 543 2 508 2 54 2 132 2 245 2 307 2 436 2 438 2 551 2 371 2 177 2 180 1 318 1 319 2 263 2 
333 2 515 2 556 2 406 2 8 2 294 2 
104 2 515 2 162 2 232 2 453 2 44 2 7 2 
119 10 120 2 42 1 193 1 235 2 454 2 503 2 12 1 293 2 128 2 163 2 240 2 204 2 131 2 470 2 370 2 409 2 72 8 480 1 525 1 527 2 286 2 78 2 225 2 560 2 418 2 
499 2 45 2 194 5 505 2 145 2 378 2 258 2 260 2 382 2 483 4 338 2 513 2 514 4 81 2 36 2 
119 1 60 2 390 2 343 7 501 2 393 2 475 2 255 2 334 2 175 2 72 1 523 4 202 2 462 2 302 1 262 2 385 2 324 2 
60 4 390 2 343 6 501 2 393 2 475 4 255 2 334 2 175 2 523 4 202 2 462 4 262 2 385 2 324 2 
119 1 60 8 390 2 343 10 501 6 393 2 475 8 255 2 334 2 175 2 72 1 523 4 202 2 462 8 302 1 262 2 385 2 324 8 
60 2 390 2 343 2 393 2 475 2 255 2 334 2 175 2 523 2 202 2 462 2 262 2 385 2 
151 2 421 4 156 2 13 10 296 2 159 2 298 2 18 2 20 2 429 2 305 2 431 2 21 4 168 2 434 4 169 2 435 2 173 6 310 2 174 31 313 3 439 14 177 4 179 2 317 3 188 6 449 4 451 4 452 4 327 2 192 4 195 2 197 2 336 2 200 2 460 4 62 2 340 2 471 16 341 2 212 5 64 1 350 2 70 4 71 2 72 34 77 2 482 2 79 2 487 2 486 2 489 2 492 2 493 2 85 2 234 2 87 2 93 2 101 2 518 2 252 2 519 2 374 2 520 2 522 5 377 2 110 4 524 2 259 18 118 2 383 2 119 38 397 2 400 2 273 2 547 2 280 2 137 4 139 2 142 2 410 2 554 2 555 2 415 2 288 2 
0 6 355 2 356 2 420 2 493 4 496 2 230 2 4 4 421 2 157 2 296 2 159 2 298 2 510 2 242 4 18 2 17 2 432 2 168 2 368 2 21 38 369 2 516 2 517 2 251 2 518 2 173 2 174 42 439 6 522 2 177 2 379 2 524 2 259 20 116 2 183 2 261 2 446 2 118 2 322 2 188 2 449 4 119 46 326 2 451 4 327 2 40 2 41 2 266 2 538 2 329 2 197 2 397 2 544 4 400 2 460 2 401 2 55 2 206 2 275 2 208 2 277 2 278 2 340 2 547 2 471 20 137 6 214 2 346 2 65 2 216 2 139 2 348 2 141 2 142 2 350 2 69 2 219 4 70 4 146 2 73 2 72 44 555 2 147 2 75 2 479 2 557 2 482 2 226 2 487 2 
151 2 153 2 421 4 13 6 424 2 296 2 426 2 17 6 429 2 305 2 431 2 21 14 168 2 434 6 435 4 169 2 173 4 310 2 174 40 313 6 439 10 177 2 32 2 178 2 179 2 317 6 322 6 447 8 449 4 188 4 451 4 452 6 192 4 336 2 460 6 340 4 62 2 471 18 341 2 214 2 346 6 348 2 350 2 70 4 72 40 77 2 482 2 79 2 486 2 489 2 493 2 85 2 231 2 234 2 93 2 512 8 244 8 105 2 518 2 519 2 520 2 522 6 377 2 110 2 524 2 259 20 116 2 118 2 531 2 119 44 122 2 397 2 400 2 271 2 273 2 403 2 547 2 280 2 281 2 139 2 144 2 554 2 283 2 413 2 
492 2 493 2 87 2 421 2 156 10 13 10 296 2 159 4 237 2 298 4 18 4 101 2 20 4 304 2 432 2 21 14 168 2 518 2 173 2 313 10 174 38 374 2 439 8 522 2 177 2 524 2 317 10 259 14 118 2 188 2 449 6 119 28 451 6 327 4 394 2 197 4 457 2 200 2 397 2 336 6 400 2 460 2 203 2 59 4 467 2 547 2 340 2 471 14 137 6 212 2 214 2 65 2 139 2 142 2 350 2 70 6 71 2 146 2 72 26 555 4 415 2 482 2 
257 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 604 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V ERROR utilMDE.Assert$AssertionException (750,793) 318 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V ERROR java.lang.ArrayIndexOutOfBoundsException 665 763 
daikon.test.TestQuant:test_union()V ERROR java.lang.ArrayIndexOutOfBoundsException 665 763 253 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (92,499) 732 493 (92,499) 511 90 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (92,499) 732 493 (92,499) 511 90 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (92,499) 732 493 (92,499) 511 90 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (92,499) 732 493 (92,499) 511 90 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (92,499) 732 493 (92,499) 511 90 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (92,499) 732 493 (92,499) 511 90 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (92,499) 732 493 (92,499) 511 90 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (92,499) 732 493 (92,499) 511 90 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (92,499) 732 493 (92,499) 511 90 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (92,499) 732 493 (92,499) 511 90 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException 277 (229,645) (229,645) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException (92,499) 617 493 (92,499) 511 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V ERROR java.lang.reflect.InvocationTargetException 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (92,499) 140 493 (92,499) 511 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException (92,499) 791 493 (92,499) 511 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 87 286 737 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.Error 588 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.Error 46 27 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.Error 46 27 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.Error 46 27 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.Error 46 27 
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (750,793) (750,793) 409 197 755 744 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 197 755 744 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltsLT([II)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:sameLength([I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.InvMap:InvMap()V
daikon.Quant:memberOf(S[S)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:memberOf(F[F)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:gt(II)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z | CONDITION | 4097 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Debug:logOn()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:eltsGT([II)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.WeakHasherMap:size()I
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 127505 | = null
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:lt(II)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ValueTuple:size()I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:subsetOf([D[D)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType; | RETURN | 7895 | return null
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaCharStream:ReadByte()C
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.Invariant:logOn()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfo:new_ppt()V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional; | RETURN | 7329 | return null
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:eq(JJ)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.WeakHasherMap:processQueue()V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:lexLTE([I[I)Z
daikon.ProglangType:isIntegral()Z
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:union([I[I)[I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quant:lte(II)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt:Ppt()V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:isMissing(I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.MathMDE:sign(I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.ArraysMDE:min([I)I
daikon.Quant:gte(II)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.MathMDE:negate(I)I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern:intern([J)[J
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(DD)Z
daikon.inv.Invariant:prob_is_ge(DD)D | STATEMENT | 6797 | stmt -> ;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.FuzzyFloat:ne(DD)Z
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | CONSTANT | 64756 | 0 -> -1
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:memberOf(J[J)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | RETURN | 1719 | return null
utilMDE.MathMDE:pow(II)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.inv.Invariant:justified()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 10778 | 3 -> 0
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 5636 | = null
daikon.Quant:lexEqual([I[I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_ntk()I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.PptSlice1:arity()I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.Invariants:Invariants()V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:setDiff([I[I)[I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.ArraysMDE:max([I)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:noDups([I)Z
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:arity()I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3_16()Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(F[D)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.ProglangType:format()Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V | ASSIGN | 440 | = null
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGTE([II)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaCharStream:FillBuff()V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:eq(II)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONSTANT | 17524 | 1 -> -1
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14830 | if (x) -> if (!x)
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:slice([III)[I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ProglangType:dimensions()I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.diff.Node:Node()V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([D)D
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:lexGTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltwiseGT([I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:concat([I[I)[I | CONSTANT | 37587 | 0 -> 1
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:toString()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:readChar()C
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:isReverse([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:num_vars()I
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:sum([[D)D
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.PptSlice2:arity()I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.ModBitTracker:num_samples()I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.ProglangType:isArray()Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:eq(FF)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:setEqual([I[I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus([I)[I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
65 2 98 2 327 2 5 2 423 6 171 2 332 2 12 2 468 2 359 2 18 4 149 2 633 2 772 2 242 2 585 2 691 2 368 2 670 4 713 2 298 2 643 2 93 2 
359 4 117 2 98 8 239 6 581 2 431 2 5 5 423 14 242 4 585 4 710 4 332 8 670 12 10 4 12 8 275 6 468 4 
63 2 678 4 67 4 718 2 2 2 785 2 100 4 786 2 303 2 282 2 136 6 306 2 529 2 189 4 500 2 105 2 215 2 312 4 549 2 532 2 630 4 505 4 291 4 739 4 406 14 555 2 488 4 20 10 199 4 198 4 365 2 668 2 743 2 560 8 802 4 413 2 671 10 372 2 542 62 806 2 
174 2 116 2 604 2 429 2 351 2 220 2 707 2 709 2 70 2 613 2 735 2 
753 2 589 2 278 2 280 2 135 2 72 2 498 2 75 2 144 2 287 2 602 4 81 2 504 2 767 2 291 2 430 2 240 2 199 4 294 2 471 2 154 2 25 2 560 2 348 2 622 2 722 2 623 2 788 2 628 2 447 2 793 4 313 4 796 2 218 2 176 2 181 4 800 2 125 2 748 2 749 2 413 2 640 2 750 4 131 2 
564 6 494 8 375 6 98 32 544 2 651 2 719 2 327 4 228 4 5 23 423 53 71 4 332 32 10 4 402 4 12 32 468 16 793 4 112 2 289 2 147 6 359 16 314 4 339 6 18 6 239 6 156 4 316 4 242 16 585 16 710 4 691 2 368 18 670 48 320 6 518 2 750 4 373 2 275 6 
560 2 215 2 136 2 
83 2 39 2 169 2 330 10 280 2 472 2 442 22 528 2 296 2 397 2 249 2 730 2 457 2 132 2 
793 2 680 4 96 2 75 2 681 2 61 2 750 2 333 2 167 2 
15 6 115 2 49 2 557 6 177 2 4 2 773 2 639 2 246 6 343 2 454 2 
793 2 50 4 487 2 210 2 99 6 89 2 22 6 203 2 271 6 8 4 750 2 417 6 467 2 
375 8 98 16 327 6 329 2 5 12 135 2 423 28 761 4 332 16 569 8 465 2 733 8 12 16 468 10 793 6 359 10 314 6 706 2 18 10 581 4 242 10 611 4 585 10 516 2 691 4 368 8 670 26 518 2 750 6 274 2 
573 4 321 6 
707 2 
363 2 
34 2 318 2 750 2 
191 2 750 4 515 2 
694 2 0 2 324 2 696 2 325 2 226 16 227 2 3 2 699 2 700 2 230 3 6 2 596 1 425 2 142 2 599 2 601 1 426 2 13 3 146 2 506 2 507 2 150 2 509 2 151 4 340 2 21 3 155 2 513 3 244 2 247 1 711 2 163 2 716 2 616 4 251 16 167 2 254 2 521 3 255 2 523 2 439 2 38 32 720 2 353 2 621 1 441 2 258 2 260 3 259 2 42 2 725 2 626 1 172 2 173 2 356 2 263 6 47 2 629 2 265 2 533 2 266 2 534 4 48 2 362 8 451 2 52 2 179 4 55 2 538 1 637 2 59 32 60 2 746 2 273 2 541 2 750 34 62 1 374 2 376 3 458 5 757 2 279 2 459 4 379 2 758 1 380 2 760 16 546 4 653 2 654 3 656 1 657 2 73 24 76 8 550 2 193 2 765 2 659 2 766 2 554 2 292 2 293 2 558 2 384 2 667 4 775 3 776 1 672 6 206 2 475 1 476 2 97 1 211 2 679 1 304 2 478 3 101 3 394 6 479 2 305 2 395 2 787 1 214 2 790 6 574 12 792 2 403 4 683 2 793 32 114 2 113 2 405 2 685 1 580 1 121 2 122 2 799 8 688 2 222 2 408 24 124 16 693 2 224 2 490 3 128 2 416 2 
323 2 754 2 326 2 591 4 698 2 701 30 652 6 283 2 463 2 502 2 80 2 236 6 703 6 705 6 335 6 338 2 556 2 200 6 774 2 91 2 514 4 295 2 342 6 777 2 778 2 563 2 780 2 299 2 252 6 94 6 347 4 301 4 566 2 213 4 307 2 103 6 625 6 530 6 726 4 570 2 106 2 399 2 264 4 483 2 175 30 452 2 687 6 407 6 58 30 689 2 747 2 182 2 692 6 129 2 415 2 127 2 455 4 
655 2 577 2 300 2 761 2 434 2 560 2 508 2 41 1 
577 2 300 2 794 2 
577 2 300 2 400 2 
712 2 108 2 23 2 
577 2 300 2 
695 2 108 2 
577 2 527 2 
108 2 23 2 166 2 
288 2 178 2 23 2 
43 2 186 2 23 2 
223 2 257 2 23 2 
133 2 724 2 23 2 
108 2 584 2 
577 2 370 2 
620 2 288 2 
272 2 43 2 
660 2 257 2 
133 2 784 2 
19 2 108 2 
133 2 201 2 
207 2 257 2 
43 2 605 2 
729 2 288 2 
446 2 108 2 23 2 166 2 
446 2 481 2 108 2 23 2 166 2 
108 2 23 2 45 2 
315 2 108 2 23 2 
233 2 641 2 262 2 543 2 
781 2 428 2 184 2 647 2 449 2 350 2 486 2 768 2 392 2 421 2 40 2 157 2 442 6 317 4 474 4 561 2 31 2 237 2 
414 2 23 2 
763 2 665 2 
253 2 763 2 665 2 
655 2 577 2 300 2 761 2 560 2 464 2 
81 2 473 2 
655 2 761 2 560 2 609 2 
64 2 257 2 
133 2 517 2 
7 2 288 2 
43 2 386 2 
133 2 43 2 804 2 
133 2 43 2 250 2 
133 2 684 2 43 2 
133 2 631 2 43 2 
352 2 655 2 190 2 107 2 216 6 24 2 560 2 646 6 
427 2 108 2 
577 2 183 2 23 2 
577 2 583 2 
637 2 
495 4 699 2 328 4 700 4 420 2 600 2 426 2 151 4 509 2 708 2 616 4 251 6 716 2 167 2 254 2 255 2 523 2 439 2 38 4 353 2 441 2 258 2 259 2 172 2 263 6 356 2 266 2 48 6 536 2 52 2 179 2 56 2 635 2 59 6 745 2 750 26 456 2 279 2 459 4 187 2 546 2 547 2 656 2 657 2 550 2 466 2 766 2 383 2 554 2 558 2 384 2 667 4 204 2 672 2 206 2 476 2 679 2 394 4 395 2 568 2 214 2 790 2 574 8 403 2 792 2 683 2 793 26 113 2 405 2 795 2 118 2 121 2 799 2 224 2 
495 4 699 2 328 4 700 4 420 2 142 2 600 2 426 2 151 4 509 2 708 2 616 4 251 6 716 2 167 2 254 2 255 2 523 2 439 2 38 4 353 2 441 2 258 2 259 2 172 2 263 6 356 2 266 2 48 6 536 2 52 2 179 2 55 2 56 2 180 2 59 6 745 2 750 26 456 2 279 2 459 4 187 2 546 2 547 2 656 2 657 2 550 2 466 2 766 2 383 2 554 2 86 2 558 2 384 2 667 4 672 2 673 2 206 2 476 2 679 2 394 6 395 2 568 2 214 2 790 2 574 8 403 2 792 2 683 2 793 26 113 2 405 2 118 2 121 2 799 2 693 2 224 2 
15 2 277 2 49 2 219 2 177 2 511 2 229 2 241 2 666 2 90 2 246 2 355 2 615 4 92 2 30 2 645 2 194 4 704 2 
277 2 650 2 279 2 459 2 4 2 229 2 499 2 78 4 597 2 143 2 334 2 238 4 194 4 704 2 82 4 15 4 554 2 557 6 511 2 558 2 241 2 666 2 773 2 90 2 667 2 246 6 615 4 92 2 28 2 30 2 165 2 254 2 476 2 565 4 256 2 522 2 437 2 441 2 395 2 396 4 104 2 571 2 355 2 263 4 732 2 576 2 736 4 793 6 49 4 219 2 177 4 411 2 690 2 750 12 645 2 493 2 
277 2 650 2 279 2 459 2 229 2 499 2 78 4 597 2 143 2 334 2 238 4 194 4 704 2 82 4 15 6 554 2 557 6 511 2 558 2 241 2 666 2 773 2 90 2 667 2 246 4 343 2 615 4 92 2 28 2 30 2 165 2 254 2 476 2 565 4 256 2 522 2 437 2 441 2 395 2 396 4 104 2 571 2 355 2 263 4 732 2 576 2 736 4 793 6 49 4 219 2 177 4 411 2 690 2 750 12 645 2 493 2 
277 2 650 2 279 2 459 2 229 2 499 2 78 4 597 2 143 2 334 2 238 4 194 4 704 2 82 8 15 6 554 2 557 6 511 2 558 2 241 2 666 2 773 2 90 2 667 2 246 6 615 4 92 2 28 2 30 2 165 2 254 2 476 2 565 4 256 2 522 2 437 2 441 2 395 2 396 4 104 2 571 2 355 2 263 4 732 2 576 2 736 4 793 6 115 2 49 4 219 2 177 4 411 2 690 2 750 12 645 2 493 2 
277 2 650 2 279 2 459 2 229 2 499 2 78 8 597 2 143 2 334 2 238 4 194 4 704 2 82 8 15 8 554 2 557 8 511 2 558 2 241 2 666 2 773 2 90 2 667 2 246 6 343 2 615 4 92 2 28 2 30 2 165 2 254 2 476 2 565 4 256 2 522 2 437 2 441 2 395 2 396 8 104 2 571 2 355 2 263 4 732 2 576 2 736 4 793 6 115 2 49 4 219 2 177 4 411 2 690 2 750 12 645 2 493 2 
277 2 650 2 279 2 459 2 229 2 499 2 78 8 597 2 143 2 334 2 238 4 194 4 704 2 82 8 15 6 554 2 557 6 511 2 558 2 241 2 666 2 773 2 90 2 667 2 246 6 615 4 92 2 28 2 30 2 165 2 254 2 476 2 565 4 256 2 522 2 437 2 441 2 395 2 396 8 104 2 571 2 355 2 263 4 732 2 576 2 736 4 793 6 115 2 49 4 219 2 177 4 411 2 690 2 750 12 645 2 493 2 
495 4 699 2 229 2 420 2 499 2 597 2 142 2 143 2 238 4 704 2 15 8 151 4 511 2 241 2 246 4 343 4 615 4 28 2 165 2 30 2 251 6 616 4 167 2 254 2 255 2 522 2 256 2 523 2 437 2 524 2 36 4 38 2 37 2 353 2 441 2 258 2 259 2 355 2 263 6 732 2 736 6 266 2 48 6 49 4 738 2 52 4 177 4 54 2 179 2 55 2 364 2 59 8 750 28 456 2 645 2 277 2 650 2 279 2 459 4 546 2 547 2 79 2 550 2 194 4 82 2 554 2 557 12 558 2 384 2 666 2 773 4 90 2 667 4 92 2 672 2 206 2 476 2 565 8 209 2 783 2 394 6 395 2 104 2 571 2 790 2 574 2 403 2 576 2 683 2 793 18 113 2 405 2 219 2 221 2 411 2 690 2 224 2 493 2 
495 4 699 2 229 2 420 2 499 2 597 2 142 2 143 2 238 4 704 2 15 8 151 4 511 2 241 2 246 8 615 4 28 2 165 2 30 2 251 6 616 4 167 2 254 2 255 2 522 2 256 2 523 2 437 2 524 2 36 4 38 2 37 2 353 2 441 2 258 2 259 2 355 2 263 6 732 2 736 6 266 2 48 6 49 4 738 2 52 4 177 4 54 2 179 4 55 2 364 2 59 8 750 28 456 2 645 2 277 2 650 2 279 2 459 4 546 4 547 2 79 2 550 2 194 4 82 6 554 2 557 12 558 2 384 2 666 2 773 4 90 2 667 4 92 2 672 2 206 2 476 2 565 8 209 2 783 2 394 6 395 2 104 2 571 2 790 2 574 4 403 4 576 2 683 2 793 18 113 2 115 4 405 2 219 2 221 2 411 2 690 2 224 2 493 2 
495 4 699 2 229 2 420 2 499 2 597 2 142 2 143 2 238 4 704 2 15 8 151 4 511 2 241 2 246 8 615 4 28 2 165 2 30 2 251 6 616 4 167 2 254 2 255 2 522 2 256 2 523 2 437 2 524 2 36 4 38 2 37 2 353 2 441 2 258 2 259 2 355 2 263 6 732 2 736 6 266 2 48 6 49 4 738 2 52 4 177 4 54 2 179 4 55 2 364 2 59 8 750 28 456 2 645 2 277 2 650 2 279 2 459 4 546 4 547 2 78 4 79 2 550 2 194 4 82 6 554 2 557 12 384 2 558 2 666 2 773 4 90 2 667 4 92 2 672 2 206 2 476 2 565 8 209 2 783 2 394 6 395 2 396 4 104 2 571 2 790 2 574 4 403 4 576 2 683 2 793 18 113 2 115 4 405 2 219 2 221 2 411 2 690 2 224 2 493 2 
495 6 699 2 4 2 229 2 420 2 499 2 597 2 142 2 143 2 238 4 704 2 15 10 16 2 151 4 511 2 241 2 246 10 343 2 615 4 28 2 165 2 30 2 251 8 616 4 167 2 520 2 254 2 255 2 522 2 256 2 523 2 437 2 524 2 36 4 38 4 37 2 353 2 441 2 258 2 259 2 261 2 526 2 355 2 263 6 732 2 736 6 266 2 48 8 49 4 738 2 634 2 52 2 177 4 179 4 55 2 364 2 59 12 750 26 456 2 645 2 277 2 650 2 279 2 459 4 546 4 547 2 78 4 79 2 550 2 194 4 82 6 552 2 554 2 557 16 384 2 558 2 666 2 773 4 90 2 667 4 92 2 672 4 206 2 476 2 565 8 783 2 394 6 395 2 396 4 104 2 571 2 790 4 574 4 403 4 576 2 683 2 793 16 113 2 115 4 405 2 219 2 221 2 411 2 690 2 224 2 493 2 
277 2 565 2 522 2 256 2 437 2 650 2 229 2 396 4 104 2 571 2 355 2 597 2 78 4 143 2 238 2 194 2 736 2 576 2 704 2 82 6 15 6 115 2 49 4 219 2 557 4 177 4 773 2 411 2 690 2 246 6 615 2 750 4 165 2 30 2 645 2 
495 4 699 2 229 2 420 2 597 2 142 2 143 2 238 2 704 2 15 6 151 4 244 2 246 6 615 2 28 2 30 2 165 2 616 4 251 6 167 2 254 2 255 2 256 2 522 2 523 2 437 2 38 3 353 2 441 2 354 2 258 2 259 2 355 2 263 6 736 2 266 2 48 6 49 4 51 2 52 4 177 4 55 2 54 2 637 2 59 8 750 28 456 2 645 2 277 2 650 2 279 2 459 4 547 2 78 2 550 2 194 2 82 6 554 2 557 4 558 2 384 2 202 2 773 2 667 4 672 3 206 2 476 2 565 2 209 2 394 6 479 2 395 2 104 2 571 2 790 3 401 2 576 2 683 2 575 2 793 24 113 2 114 2 115 2 405 2 219 2 411 2 690 2 224 2 319 3 
277 2 650 2 279 2 459 2 229 2 499 2 78 8 597 2 143 2 334 2 238 4 194 4 704 2 82 8 15 6 554 2 557 6 511 2 558 2 241 2 666 2 773 2 90 2 667 2 246 6 615 4 92 2 28 2 30 2 165 2 254 2 476 2 565 4 256 2 522 2 437 2 441 2 395 2 396 8 104 2 571 2 355 2 263 4 732 2 576 2 736 4 793 6 115 2 49 4 219 2 177 4 411 2 690 2 750 12 645 2 493 2 
82 2 277 2 256 2 522 2 437 2 650 2 537 2 229 2 396 2 243 4 411 2 690 2 355 2 78 2 235 2 143 2 30 2 165 2 645 2 
161 2 690 2 571 2 
161 2 690 2 571 2 
590 2 699 2 4 4 420 2 594 2 499 2 142 2 238 2 704 2 15 12 151 4 511 2 241 2 610 2 246 12 343 4 615 2 30 4 616 4 251 2 617 2 167 2 254 2 255 2 523 2 36 2 38 2 353 2 441 2 258 2 259 2 172 2 263 6 731 2 736 4 48 2 632 2 49 4 450 2 52 4 177 4 179 4 55 2 269 2 59 2 369 2 750 24 456 4 69 2 279 2 459 4 546 4 281 2 547 2 78 4 550 2 194 2 82 6 553 2 554 2 557 16 770 2 558 2 384 2 773 4 667 4 92 2 206 2 208 2 387 2 476 2 565 4 209 2 394 6 395 2 396 4 568 4 789 2 104 2 571 2 574 4 403 4 404 2 683 2 576 2 793 16 485 2 113 2 115 4 405 2 219 2 690 4 224 2 493 2 
158 2 445 2 460 2 120 2 666 2 
699 2 4 4 134 2 420 2 594 2 499 2 140 2 142 2 238 2 704 2 15 12 336 2 151 4 511 2 241 2 610 2 246 12 343 4 615 2 30 4 616 4 251 2 167 2 254 2 255 2 523 2 36 2 38 4 353 2 441 2 258 2 259 2 172 2 263 6 731 2 736 4 48 2 632 2 49 4 450 2 52 2 177 4 179 4 55 2 269 2 59 2 453 2 369 2 750 20 456 4 69 2 279 2 459 4 546 4 281 4 547 2 78 4 550 2 194 2 82 6 553 2 554 2 557 16 770 2 558 2 384 2 773 4 667 4 92 2 206 2 476 2 565 4 394 6 395 2 396 4 568 4 789 2 104 2 571 2 308 2 574 4 403 4 404 2 683 2 576 2 793 14 485 2 113 2 115 4 405 2 219 2 690 4 224 2 493 2 
590 2 699 2 4 4 134 2 420 2 594 2 499 2 142 2 238 2 704 2 15 12 336 2 151 4 511 2 241 2 610 2 246 12 343 4 615 2 30 4 616 4 251 2 167 2 254 2 255 2 523 2 36 2 38 2 353 2 441 2 258 2 259 2 172 2 263 6 731 2 736 4 48 2 632 2 49 4 450 2 52 4 177 4 179 4 55 2 269 2 59 2 369 2 750 24 456 4 69 2 279 2 459 4 546 4 281 2 547 2 78 4 550 2 194 2 82 6 553 2 554 2 557 16 770 2 558 2 384 2 773 4 667 4 92 2 206 2 208 2 387 2 476 2 565 4 209 2 394 6 395 2 396 4 568 4 789 2 104 2 571 2 791 2 574 4 403 4 404 2 683 2 576 2 793 16 485 2 113 2 115 4 405 2 219 2 690 4 224 2 493 2 
1 2 495 4 279 2 699 2 459 4 702 2 420 2 422 1 138 2 595 2 286 2 79 2 9 2 554 2 148 2 87 2 151 2 510 4 384 2 558 2 667 4 672 2 251 6 616 2 167 2 254 2 476 2 388 2 523 2 349 2 783 2 524 2 440 2 38 2 353 2 525 2 567 2 441 2 394 2 258 2 395 2 259 2 790 2 627 2 311 2 263 6 448 2 111 2 683 2 793 18 266 2 405 2 48 6 737 2 738 2 52 2 364 2 221 2 742 2 59 8 367 2 586 2 224 2 371 2 803 2 750 24 130 2 456 2 805 1 
662 2 77 2 715 2 29 2 636 2 603 2 
579 2 102 2 267 2 771 2 593 2 466 2 636 2 
419 2 717 2 545 1 331 2 395 2 306 1 232 2 723 2 480 2 141 2 109 2 793 8 661 2 85 2 290 2 741 2 470 1 614 2 245 2 297 2 750 10 751 1 372 1 644 2 677 2 276 2 
359 2 756 2 98 2 377 2 239 4 242 2 423 5 585 2 710 2 332 2 433 2 670 4 588 2 491 2 12 2 468 2 
14 3 721 2 393 2 170 2 366 2 612 2 462 2 27 2 162 2 674 2 46 2 32 2 
793 1 14 6 721 2 798 1 393 2 170 2 366 4 612 2 462 2 27 2 750 1 162 2 674 2 192 2 46 2 32 2 
14 4 612 2 462 2 126 2 27 2 721 2 162 2 674 4 366 4 170 2 393 2 46 2 32 2 
793 1 14 4 721 2 798 1 393 2 170 2 366 4 612 2 462 2 126 2 27 2 750 1 162 2 674 4 46 2 32 2 
755 2 648 2 699 2 497 6 501 2 142 2 197 2 88 2 151 4 341 2 159 2 345 2 779 2 616 4 676 2 436 2 168 2 34 2 353 2 394 8 259 2 44 2 482 2 793 14 740 2 686 2 582 1 55 2 539 2 409 2 744 2 489 1 750 14 
755 2 66 2 648 2 699 2 496 4 461 10 231 4 188 2 497 14 381 2 142 8 503 4 17 4 197 2 88 2 664 2 607 2 151 14 432 2 341 8 669 2 345 6 562 6 779 2 616 14 346 2 676 6 95 2 168 2 35 2 619 4 390 2 391 4 477 2 353 2 212 4 394 36 259 2 443 2 444 2 728 2 44 2 682 2 110 2 482 6 734 6 578 2 793 26 740 2 686 2 582 2 55 8 270 4 123 10 539 2 744 2 412 2 540 2 642 2 750 28 322 2 492 2 
697 2 755 2 699 6 496 2 231 2 461 2 424 2 497 4 381 2 762 2 501 2 142 4 598 2 382 2 503 2 145 4 197 2 88 2 769 2 664 2 606 2 151 18 607 2 152 4 608 2 432 2 341 14 160 2 26 2 248 2 205 2 344 2 345 4 562 2 779 2 714 2 164 2 675 2 616 16 346 1 676 4 33 2 168 2 619 2 391 2 477 2 353 4 302 2 394 32 259 6 443 1 531 2 572 2 309 2 310 2 682 2 44 2 357 2 110 4 734 1 482 4 578 1 793 34 740 2 119 2 582 4 268 4 797 2 55 4 270 2 123 2 57 2 539 2 410 2 744 2 412 2 750 38 492 4 
755 2 225 2 648 2 185 2 649 2 68 4 592 2 699 2 378 2 496 2 759 2 231 2 137 2 284 2 188 2 497 36 234 2 658 2 139 2 74 6 285 2 381 2 548 2 142 6 764 2 11 2 551 2 503 2 195 2 84 2 337 2 663 2 196 2 197 2 88 2 664 2 151 20 512 4 153 2 559 4 385 4 341 6 669 2 345 4 435 2 779 2 562 6 616 20 676 4 618 2 519 2 168 2 389 2 782 2 619 2 391 2 438 2 353 2 394 48 259 2 624 2 727 2 398 2 682 2 44 2 728 2 358 2 110 2 482 4 484 2 793 44 217 2 360 2 361 2 535 2 686 2 740 2 582 2 55 6 53 2 270 2 539 2 638 2 744 2 801 2 587 2 412 2 750 46 418 2 752 2 492 2 
469 2 

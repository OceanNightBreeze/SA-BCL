#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 593 453 717 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 999 (29,455) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V ERROR java.lang.ArrayIndexOutOfBoundsException 444 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.ArrayIndexOutOfBoundsException 444 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 116 116 834 (167,449) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 116 116 834 (167,449) (167,449) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 116 116 834 (167,449) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 436 747 682 542 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 360 334 399 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 360 334 399 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 360 334 399 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:jj_3_22()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_3R_106()Z
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_120()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:jj_3R_81()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:jj_3R_125()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quant:eltsNotEqual([II)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.MathMDE:gcd(II)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_105()Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:eq(JJ)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaCharStream:ReadByte()C
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 10696 | 1 -> 0
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.Quant:eltsLTE([II)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Intern:intern([I)[I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_3_27()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_3R_60()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_124()Z
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:jj_3R_114()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsLteIndex([I)Z | CONDITION | 178697 | if (x) -> if (!x)
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.ProglangType:isScalar()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_14()Z
jtb.JavaParser:jj_3R_68()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
utilMDE.Intern:intern([J)[J
jtb.JavaParser:jj_3R_133()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName:hashCode()I
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant:logDetail()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:union([I[I)[I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_135()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 2644 | return null
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexLTE([I[I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:jj_2_25(I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ValueTuple:isMissing(I)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([II)I
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_148()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:jj_3R_110()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ProglangType:isIntegral()Z
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:slice([III)[I
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_163()Z
utilMDE.Intern:numIntArrays()I
daikon.inv.Invariant:getConfidence()D
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:jj_3_35()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap:size()I
daikon.inv.Invariants:Invariants()V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:concat([I[I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:Ppt()V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.Options.OptionInfo:argument_required()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginColumn()I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:jj_3_16()Z
daikon.Quant:gt(II)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_107()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoAux:hashCode()I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfo:relate_var()V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_100()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:jj_3R_104()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3R_72()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.PptSlice2:arity()I
daikon.Quant:memberOf(D[F)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long; | RETURN | 14834 | return null
daikon.PptSlice1:arity()I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:pairwiseLTE([I[I)Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_63()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_52()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_sets()I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I | CONSTANT | 624 | 0 -> 1
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:noDups([I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_3R_58()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
jtb.JavaParser:jj_3R_121()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_76()Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:jj_3_3()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaCharStream:getBeginLine()I
utilMDE.Intern:intern([D)[D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.Invariant:justified()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3_10()Z
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfo:new_ppt()V
daikon.ModBitTracker:num_vars()I
daikon.inv.ValueSet:ValueSet(I)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:memberOf(I[I)Z
daikon.Quant:lexGT([I[I)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_3R_116()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_20()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_29()Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_115()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:gte(II)Z
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:jj_3R_69()Z
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_3_1()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String; | RETURN | 109561 | return null
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParser:jj_2_36(I)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:jj_3_18()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:setDiff([I[I)[I
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_3R_67()Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.Quant:lte(II)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:subsetOf([D[F)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.PptName:isEnterPoint()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_102()Z
daikon.Quant:sameLength([I[I)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_101()Z
jtb.JavaParser:jj_3R_86()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGTE([II)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:jj_3R_73()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParser:jj_3R_126()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:intersection([I[I)[I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:negate(I)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:memberOf(F[D)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.ProglangType:baseIsIntegral()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_61()Z
utilMDE.ArraysMDE:sum([[D)D
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V | CONDITION | 32424 | if (x) -> if (!x)
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:jj_3_21()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_3R_109()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3R_80()Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:lexGTE([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_55()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eq(FF)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ModBitTracker:num_samples()I
daikon.diff.InvMap:InvMap()V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6323 | = null
daikon.Debug:logOn()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_5(I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:backup(I)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:jj_2_10(I)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ValueTuple:size()I
daikon.Quant:lt(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_2_17(I)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParser:jj_2_12(I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:pow(II)I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParser:jj_3_17()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:jj_3R_103()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_123()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 7816 | 80 -> 0
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:jj_3_30()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_87()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:setEqual([I[I)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_122()Z
daikon.PptSlice1:num_samples()I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.ModBitTracker:split(I)I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3_36()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3_15()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:jj_3R_89()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_3_25()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_99()Z
utilMDE.MathMDE:gcd([I)I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.Debug:logDetail()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:ne(II)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z | CONSTANT | 40107 | 0 -> -1
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.ArraysMDE:min([I)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.Node:Node()V
jtb.JavaParser:jj_2_14(I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
501 2 408 2 708 2 14 2 780 4 985 2 473 2 181 2 477 2 
923 6 892 2 767 2 1005 2 456 6 427 2 308 2 584 6 116 2 522 2 53 2 
354 6 267 2 996 6 981 2 473 2 477 2 159 2 41 6 519 2 802 4 459 4 84 6 196 2 
680 10 201 2 514 2 618 2 707 8 545 10 946 16 835 8 405 10 428 2 462 2 280 4 993 2 120 6 470 16 473 6 289 12 158 10 963 10 814 2 724 4 318 8 477 6 966 26 161 6 502 16 1009 30 816 4 759 4 70 8 
789 6 451 4 
820 2 
680 2 484 2 765 2 707 2 545 4 946 2 305 2 405 2 43 2 49 2 586 2 120 2 470 2 287 2 963 2 158 2 289 2 966 4 502 2 816 2 1009 6 539 2 647 2 
680 4 775 2 905 2 470 8 946 8 709 6 289 6 963 4 158 4 621 6 966 12 405 4 190 4 502 8 1009 14 627 4 280 2 
394 2 423 4 984 2 77 2 738 2 453 2 690 2 106 2 175 2 457 6 339 2 915 2 717 2 245 2 244 4 918 4 54 10 316 2 468 2 59 2 1000 2 593 2 564 2 725 2 727 2 866 2 381 2 904 2 971 30 936 6 503 2 386 2 761 2 
327 2 651 2 87 2 881 2 856 2 832 2 868 2 411 2 956 2 820 2 
679 2 154 2 268 2 227 2 575 2 228 2 999 2 735 2 564 4 1002 2 725 2 455 2 951 2 805 2 936 2 133 2 29 2 
680 16 226 6 201 2 827 2 707 18 545 6 946 32 38 4 709 6 271 6 105 4 621 6 405 16 8 6 627 4 246 2 247 2 120 4 494 4 470 32 497 8 498 4 473 4 963 16 158 16 723 2 289 22 318 6 477 4 966 48 161 4 190 4 641 4 502 32 756 2 816 2 1009 54 870 6 1011 2 
423 2 936 2 761 2 
774 2 421 10 435 2 16 2 1003 2 637 2 699 2 769 2 221 2 601 22 325 2 628 2 630 2 841 2 
138 2 397 2 517 2 146 2 275 4 654 2 656 3 403 2 883 2 404 2 406 1 277 2 278 4 7 2 147 2 772 3 149 1 281 5 526 1 890 4 12 16 528 2 156 3 157 2 284 2 285 2 672 2 783 2 782 2 530 2 900 2 673 2 786 2 903 24 165 4 790 2 27 2 28 2 420 2 678 2 30 2 32 3 541 2 36 1 686 2 798 2 303 2 691 2 173 2 426 2 42 3 306 4 307 2 178 2 177 2 914 2 429 2 48 3 430 1 916 2 555 2 806 1 917 2 921 2 810 2 185 2 184 2 812 2 927 1 188 1 437 2 932 8 438 4 439 2 698 1 569 24 702 2 322 2 68 16 817 3 323 6 194 2 71 1 704 1 822 2 331 1 579 2 828 2 79 3 950 6 202 2 454 2 953 2 718 32 209 2 211 2 720 3 473 32 345 2 346 2 218 2 477 34 220 2 350 2 480 3 600 2 95 2 603 32 353 2 975 2 482 6 610 2 982 2 616 2 732 2 733 2 356 2 852 6 619 4 739 2 232 8 620 2 741 16 362 8 109 2 488 2 623 2 365 2 114 3 117 2 862 2 631 1 121 2 250 2 749 2 376 2 257 2 865 4 640 1 501 2 383 12 382 1 261 16 644 3 132 2 387 2 508 1 
762 2 
385 2 477 2 
20 2 643 2 477 4 
265 4 266 2 270 4 269 8 766 2 1 2 516 2 4 4 768 2 276 2 521 16 773 4 525 2 282 2 11 2 527 14 13 216 286 4 17 2 18 2 531 2 19 2 292 2 22 2 791 2 23 2 26 2 25 6 294 6 794 2 795 2 31 2 297 2 543 48 544 8 301 2 39 2 547 2 799 146 548 2 304 2 40 8 801 2 44 2 803 48 46 2 50 2 310 2 554 2 311 10 312 2 556 4 314 2 557 2 60 2 560 48 62 2 813 2 63 2 561 10 563 4 321 2 570 2 818 4 69 2 324 4 821 8 328 22 574 2 823 48 825 2 75 2 826 24 76 2 333 48 577 2 580 2 831 4 336 2 337 22 82 146 837 2 85 2 340 4 587 2 585 2 840 4 343 2 590 2 89 36 591 2 347 2 594 2 597 2 598 4 599 2 93 2 94 2 846 2 847 8 351 24 604 2 848 2 98 2 608 2 609 2 100 48 613 4 103 2 355 2 357 2 358 20 359 2 855 2 107 44 366 2 858 36 626 16 115 2 861 2 118 2 368 14 369 2 863 2 371 2 370 8 372 2 374 4 375 4 124 2 127 2 635 2 128 2 636 2 377 8 864 2 378 2 384 2 642 2 871 2 873 24 872 48 135 2 134 2 136 2 393 4 876 2 140 2 649 14 141 2 652 2 879 2 880 2 401 2 657 2 882 4 884 4 659 146 660 2 410 2 887 4 661 2 413 2 151 8 889 2 152 6 415 2 891 8 666 2 667 2 893 2 670 4 671 2 894 2 896 48 417 4 899 2 160 2 674 2 162 4 163 2 902 4 164 4 677 2 170 2 681 36 684 2 422 2 908 2 906 10 172 2 910 2 912 2 179 22 695 4 696 4 920 2 922 2 186 4 926 2 930 8 933 2 934 2 701 48 442 2 192 2 938 2 195 2 197 2 939 4 940 2 447 2 200 28 943 2 947 4 452 2 204 2 460 4 714 2 461 4 464 2 957 2 466 2 467 8 721 2 214 2 722 48 962 2 215 2 216 22 475 8 964 2 479 2 968 4 972 2 222 2 973 2 481 2 977 2 978 6 979 2 983 2 734 4 229 2 231 2 486 2 233 16 740 2 235 2 236 2 238 26 489 2 743 2 240 4 988 2 241 42 490 2 242 26 243 4 491 2 994 2 248 6 493 48 251 2 253 4 254 2 256 2 752 2 258 2 754 2 1006 2 755 48 259 48 1008 4 1012 2 1013 2 760 2 505 6 507 20 263 2 
662 2 74 1 804 2 851 2 
851 2 928 2 
911 2 536 2 936 2 851 2 444 2 759 2 688 2 
919 2 536 2 851 2 
536 2 851 2 638 2 
662 2 995 2 860 2 
536 2 851 2 
995 2 562 2 
851 2 52 2 
662 2 995 2 819 2 
559 2 662 2 540 2 
662 2 341 2 412 2 
662 2 650 2 605 2 
662 2 299 2 839 2 
137 2 995 2 
851 2 781 2 
559 2 352 2 
341 2 1016 2 
997 2 605 2 
176 2 839 2 
958 2 995 2 
363 2 839 2 
605 2 56 2 
143 2 
559 2 476 2 
662 2 764 2 995 2 819 2 
662 2 764 2 995 2 645 2 819 2 
662 2 995 2 6 2 
662 2 995 2 496 2 
888 2 850 2 668 2 757 2 
607 2 633 2 779 2 998 2 845 2 830 2 15 2 909 2 237 2 174 2 836 2 80 2 967 4 601 6 716 2 506 2 262 4 388 2 
533 2 662 2 
911 2 534 2 320 2 936 2 
911 2 534 2 320 2 936 2 444 2 180 2 
911 2 596 2 536 2 936 2 851 2 759 2 
450 2 853 2 
911 2 936 2 759 2 272 2 
566 2 605 2 
675 2 839 2 
559 2 669 2 
341 2 99 2 
941 2 341 2 839 2 
198 2 341 2 839 2 
537 2 341 2 839 2 
771 2 341 2 839 2 
550 2 911 2 45 6 625 6 88 2 125 2 290 2 936 2 
995 2 400 2 
346 2 
392 2 511 2 397 2 146 6 654 2 403 2 404 2 278 2 7 2 279 4 147 2 890 4 776 2 528 2 285 2 783 2 530 2 165 4 790 2 293 2 541 2 37 2 798 2 691 2 692 4 425 2 306 4 914 2 309 2 806 2 917 2 437 2 438 2 439 2 698 2 66 2 322 2 323 6 828 2 950 4 83 2 718 6 209 2 473 26 474 2 477 26 218 2 220 2 350 2 600 2 603 4 482 2 610 4 485 2 101 2 732 2 356 2 852 2 619 2 739 2 620 2 362 2 109 2 742 2 488 2 986 2 121 2 250 2 865 4 501 2 383 8 261 6 1010 2 646 2 
392 2 511 2 397 2 146 6 654 2 403 2 404 2 278 2 7 2 279 4 147 2 890 4 776 2 528 2 285 2 783 2 530 2 673 2 165 4 790 2 293 2 796 2 541 2 798 2 303 2 691 2 692 4 425 2 306 4 914 2 309 2 806 2 917 2 185 2 437 2 438 2 439 2 698 2 66 2 322 2 323 6 828 2 950 6 718 6 209 2 212 2 473 26 474 2 477 26 218 2 220 2 350 2 600 2 603 4 482 2 610 4 101 2 732 2 356 2 852 2 619 2 739 2 620 2 362 2 109 2 742 2 488 2 986 2 119 2 121 2 250 2 865 4 501 2 383 8 261 6 1010 2 646 2 
208 2 
182 2 694 2 
648 2 945 2 145 2 767 2 654 2 949 2 712 2 834 2 456 6 658 4 584 6 522 4 469 8 283 2 777 4 416 2 285 2 473 6 965 2 785 2 477 12 220 2 418 2 535 2 96 2 538 2 167 2 169 4 298 2 732 2 300 2 854 10 620 2 549 4 306 2 308 4 113 2 239 2 807 2 116 2 917 2 51 8 632 2 492 2 249 2 923 6 57 2 748 2 811 2 122 2 929 2 126 4 439 2 189 2 865 2 129 2 1007 4 323 4 504 2 389 2 
945 2 145 2 767 2 654 2 949 2 834 2 456 6 658 4 584 8 522 4 719 2 469 8 283 2 416 2 777 4 285 2 473 6 965 2 785 2 477 12 220 2 418 2 535 2 96 2 676 4 538 2 167 2 169 4 298 2 732 2 300 2 854 10 620 2 549 4 306 2 427 2 308 4 913 2 113 2 239 2 807 2 116 2 917 2 51 8 492 2 632 2 249 2 923 8 57 2 748 2 811 2 122 2 929 2 126 4 439 2 865 2 189 2 129 2 1007 4 323 4 504 2 389 2 
632 2 249 2 416 2 777 4 300 2 929 2 549 2 785 2 129 2 456 2 1007 4 535 2 308 2 584 2 113 2 504 2 167 2 522 2 
648 2 945 2 145 2 654 2 949 2 712 2 834 2 456 4 658 4 584 6 522 4 469 4 283 2 777 4 416 2 285 2 473 6 965 2 785 2 477 12 220 2 418 2 535 2 96 2 538 2 167 2 169 4 298 2 732 2 300 2 854 6 620 2 549 4 306 2 427 2 308 4 113 2 239 2 807 2 116 2 917 2 51 4 632 2 492 2 249 2 923 6 57 2 748 2 811 2 122 2 929 2 126 4 439 2 189 2 865 2 129 2 1007 4 323 4 504 2 389 2 
648 2 945 2 145 2 654 2 949 2 712 2 834 2 456 6 658 4 584 4 522 4 892 2 469 4 283 2 777 4 416 2 285 2 473 6 965 2 785 2 477 12 220 2 418 2 535 2 96 2 538 2 167 2 169 4 298 2 732 2 300 2 854 6 620 2 549 4 306 2 308 4 113 2 239 2 807 2 116 2 917 2 51 4 632 2 492 2 249 2 923 6 57 2 748 2 811 2 122 2 929 2 126 4 439 2 189 2 865 2 129 2 1007 4 323 4 504 2 389 2 
648 2 945 2 145 2 767 2 654 2 949 2 712 2 834 2 456 6 658 4 584 6 522 4 469 4 283 2 777 4 416 2 285 2 473 6 965 2 785 2 477 12 220 2 418 2 535 2 96 2 538 2 167 2 169 4 298 2 732 2 300 2 854 6 620 2 549 4 306 2 308 4 113 2 239 2 807 2 116 2 917 2 51 8 632 2 492 2 249 2 923 6 57 2 748 2 811 2 122 2 929 2 126 4 439 2 189 2 865 2 129 2 1007 4 323 4 504 2 389 2 
648 2 945 2 145 2 767 2 654 2 949 2 712 2 834 2 456 8 658 4 584 6 522 4 892 2 469 8 283 2 777 4 416 2 285 2 473 6 965 2 785 2 477 12 220 2 418 2 535 2 96 2 538 2 167 2 169 4 298 2 732 2 300 2 854 10 620 2 549 4 306 2 308 4 113 2 239 2 807 2 116 2 917 2 51 8 632 2 492 2 249 2 923 8 57 2 748 2 811 2 122 2 929 2 126 4 439 2 189 2 865 2 129 2 1007 4 323 4 504 2 389 2 
648 2 945 2 145 2 767 2 654 2 949 2 712 2 834 2 456 6 658 4 584 6 522 4 469 8 283 2 777 4 416 2 285 2 473 6 965 2 785 2 477 12 220 2 418 2 535 2 96 2 538 2 167 2 169 4 298 2 732 2 300 2 854 10 620 2 549 4 306 2 308 4 113 2 239 2 807 2 116 2 917 2 51 8 632 2 492 2 249 2 923 6 57 2 748 2 811 2 122 2 929 2 126 4 439 2 189 2 865 2 129 2 1007 4 323 4 504 2 389 2 
0 1 2 2 3 2 7 2 278 2 520 6 279 4 522 4 523 6 528 2 283 2 777 4 285 2 288 6 783 2 530 2 785 2 535 2 790 2 293 2 24 10 538 4 792 6 296 6 541 2 298 2 300 2 798 12 546 2 303 2 549 4 306 4 308 4 47 2 807 2 51 2 57 2 811 2 323 6 73 2 824 1 828 2 834 2 833 2 81 6 584 4 842 2 592 6 96 2 602 2 603 2 612 6 101 2 102 2 356 2 852 2 619 2 104 2 854 2 620 2 362 2 109 2 108 6 111 2 364 2 857 2 113 2 629 7 116 4 632 2 121 2 122 4 126 6 865 4 129 2 867 8 383 4 869 6 385 6 643 6 646 2 390 4 389 2 875 7 392 4 648 2 396 2 397 2 398 2 145 2 146 6 654 2 403 2 658 4 886 2 414 2 153 2 890 4 892 4 665 2 416 2 897 6 673 2 418 2 165 4 167 2 168 2 169 8 683 1 685 2 687 2 907 1 917 2 923 12 925 2 929 2 437 2 438 2 931 6 439 2 189 2 700 2 445 1 942 2 945 2 950 6 949 2 456 8 954 2 718 8 960 1 961 2 471 2 473 24 219 1 477 46 965 2 220 2 730 1 482 2 483 2 732 2 739 2 487 2 239 2 989 2 492 2 249 2 250 2 748 2 495 2 751 1 753 6 500 4 1007 4 501 2 261 6 504 2 762 6 
392 4 648 2 396 2 398 2 397 2 2 2 767 4 145 2 3 2 146 6 518 2 654 2 403 2 658 4 278 4 7 2 520 6 886 2 279 4 522 4 523 6 414 2 153 2 890 4 528 2 665 2 283 2 416 2 777 4 285 2 897 6 288 6 783 2 530 2 785 2 673 2 418 2 535 2 293 2 790 2 165 4 24 10 792 6 538 4 167 2 168 2 169 8 296 6 298 2 541 2 685 2 300 2 546 2 687 2 798 12 303 2 549 4 306 4 308 4 47 2 807 2 917 2 51 6 923 12 57 2 925 2 811 2 437 2 929 2 931 6 438 4 439 2 189 2 700 2 323 6 73 2 942 2 945 2 828 2 949 2 950 6 833 2 834 2 456 8 81 6 584 8 954 2 718 8 842 2 961 2 471 2 592 6 473 26 965 2 477 48 220 2 96 2 602 2 603 2 97 2 482 2 483 2 610 2 612 6 101 2 102 2 732 2 356 2 852 2 619 4 739 2 854 2 104 2 620 2 362 2 487 2 108 6 109 2 857 2 364 2 111 2 113 2 239 2 116 4 989 2 492 2 632 2 249 2 121 2 250 2 748 2 122 4 495 2 126 6 865 4 753 6 500 4 129 2 867 8 501 2 1007 4 383 8 869 6 261 6 643 6 385 6 504 2 646 2 762 6 389 2 390 4 
392 4 648 2 396 2 398 2 397 2 2 2 767 4 145 2 3 2 146 6 518 2 654 2 403 2 658 4 278 4 7 2 520 6 886 2 279 4 522 4 523 6 414 2 153 2 890 4 528 2 665 2 283 2 416 2 777 4 285 2 897 6 288 6 783 2 530 2 785 2 673 2 418 2 535 2 293 2 790 2 165 4 24 10 792 6 538 4 167 2 168 2 169 8 296 6 298 2 541 2 685 2 300 2 546 2 687 2 798 12 303 2 549 4 306 4 308 4 47 2 807 2 917 2 51 6 923 12 57 2 925 2 811 2 437 2 929 2 931 6 438 4 439 2 189 2 700 2 323 6 73 2 942 2 945 2 828 2 949 2 950 6 833 2 834 2 456 8 81 6 584 8 954 2 718 8 842 2 469 4 961 2 471 2 592 6 473 26 965 2 477 48 220 2 96 2 602 2 603 2 97 2 482 2 483 2 610 2 612 6 101 2 102 2 732 2 356 2 852 2 619 4 739 2 104 2 854 6 620 2 362 2 487 2 108 6 109 2 857 2 364 2 111 2 113 2 239 2 116 4 989 2 492 2 632 2 249 2 121 2 250 2 748 2 122 4 495 2 126 6 865 4 753 6 500 4 129 2 867 8 501 2 1007 4 383 8 869 6 261 6 643 6 385 6 504 2 646 2 762 6 389 2 390 4 
767 4 2 2 3 2 274 6 518 2 7 2 278 4 520 6 279 6 522 4 523 12 528 2 283 2 777 4 285 2 288 6 783 2 530 2 785 2 535 2 790 2 293 4 24 8 538 4 792 6 296 6 541 2 298 2 300 2 798 10 546 2 303 2 549 4 306 4 308 4 47 2 807 2 51 6 57 2 811 2 323 6 573 6 73 2 576 2 828 2 834 2 833 2 81 6 584 10 842 2 592 6 90 2 96 2 602 2 603 4 97 2 610 2 612 12 101 2 102 2 617 6 356 2 852 4 619 4 854 6 104 2 620 2 362 4 109 2 108 6 111 2 364 2 857 2 113 2 116 4 632 2 121 2 122 4 126 6 865 4 129 2 867 8 383 10 869 6 385 12 643 12 646 2 389 2 390 4 392 4 648 2 396 2 397 2 398 2 145 2 146 8 654 2 655 2 403 2 658 4 886 2 414 2 153 2 890 4 892 2 665 2 416 2 897 6 898 6 673 2 418 2 165 4 167 2 168 2 169 8 171 2 685 2 687 2 427 2 917 2 923 16 929 2 437 2 438 4 931 12 439 2 697 6 189 2 935 6 440 2 700 2 703 2 448 2 942 2 945 2 950 6 949 2 456 10 954 2 718 12 469 4 961 2 471 2 472 6 473 24 477 52 965 2 220 2 482 4 976 2 483 2 732 2 739 2 487 2 239 2 989 2 492 2 249 2 250 2 748 2 495 2 499 6 753 6 500 4 1007 4 501 2 261 8 504 2 762 12 509 6 
648 2 945 2 767 2 145 2 854 4 949 2 834 2 658 2 456 6 308 4 584 6 239 2 116 2 807 2 522 4 51 6 492 2 632 2 923 4 57 2 748 2 469 4 416 2 777 2 126 2 929 2 477 4 785 2 189 2 129 2 418 2 1007 2 504 2 167 2 169 2 
392 2 648 2 397 2 767 2 145 2 146 6 654 2 403 2 658 2 7 2 279 4 522 4 890 4 528 2 283 2 777 2 416 2 285 2 783 2 530 2 785 2 673 2 418 2 790 2 165 4 24 2 167 2 169 2 541 2 798 4 303 2 306 4 308 4 807 2 917 2 51 6 558 2 923 4 57 2 925 2 929 2 439 2 189 2 323 6 945 2 828 2 950 6 949 2 834 2 456 6 584 6 953 2 718 8 959 2 473 24 346 2 477 28 478 2 220 2 603 3 482 3 101 2 732 2 356 2 852 3 739 2 854 2 620 2 109 2 110 2 365 2 239 2 116 2 632 2 492 2 121 2 250 2 748 2 126 2 750 3 865 4 129 2 1007 2 501 2 130 2 261 6 132 2 504 2 646 2 
91 2 945 2 189 2 
91 2 945 2 189 2 
392 2 139 2 397 2 767 4 146 2 654 2 403 2 658 2 278 4 7 2 522 4 890 4 528 2 777 2 285 2 288 2 783 2 530 2 785 2 673 2 165 4 790 2 24 2 167 2 169 4 33 2 541 2 798 4 303 2 306 4 308 4 309 4 917 2 51 6 923 8 924 2 57 2 187 2 437 2 438 4 439 2 189 2 323 6 944 2 945 2 950 6 834 2 456 8 584 8 715 2 718 2 589 2 469 2 473 16 477 24 220 2 603 2 980 2 101 2 732 2 356 2 619 4 739 2 854 2 620 2 109 2 367 2 116 4 632 2 990 2 121 2 250 2 634 2 126 2 865 4 500 2 501 2 1007 2 383 4 261 2 646 2 390 2 
483 2 139 2 33 2 732 2 798 2 288 2 473 2 3 2 477 4 551 2 319 2 500 2 693 2 113 2 694 2 367 2 24 2 
392 2 397 2 767 4 146 2 654 2 403 2 658 2 278 4 7 2 522 4 890 4 528 2 777 2 285 2 783 2 530 2 785 2 673 2 165 4 790 2 167 2 169 4 33 2 541 2 798 2 303 2 306 4 308 4 309 4 917 2 51 6 55 2 923 8 924 2 57 2 187 2 437 2 438 4 439 2 189 2 323 6 944 2 449 2 945 2 950 6 834 2 456 8 584 8 715 2 718 2 589 2 469 2 473 14 477 20 220 2 603 4 980 4 101 2 732 2 356 2 619 4 739 2 854 2 620 2 109 2 367 2 116 4 632 2 990 2 121 2 250 2 634 2 126 2 865 4 501 2 1007 2 383 4 261 2 646 2 390 2 
392 2 139 2 397 2 767 4 146 2 654 2 403 2 658 2 278 4 7 2 522 4 890 4 528 2 777 2 285 2 288 2 783 2 530 2 785 2 673 2 165 4 790 2 24 2 167 2 169 4 33 2 541 2 798 4 303 2 306 4 308 4 309 4 917 2 51 6 923 8 924 2 57 2 187 2 437 2 438 4 439 2 189 2 323 6 944 2 945 2 950 6 834 2 456 8 584 8 715 2 718 2 589 2 469 2 473 16 477 24 220 2 603 2 980 2 101 2 732 2 356 2 619 4 739 2 854 2 620 2 109 2 367 2 116 4 632 2 990 2 121 2 250 2 634 2 126 2 865 4 500 2 501 2 1007 2 383 4 261 2 646 2 390 2 
392 2 877 2 512 1 513 2 397 2 273 2 146 6 654 2 7 2 279 4 150 1 10 2 890 2 528 2 665 2 285 2 895 2 783 2 291 2 530 2 21 2 901 2 788 2 165 2 682 2 541 2 542 2 798 2 306 4 47 2 917 2 809 2 436 2 64 2 439 2 700 2 323 6 330 2 578 2 828 2 950 2 582 2 583 2 718 8 471 2 473 20 477 26 728 2 220 2 349 2 602 2 603 2 482 2 101 2 732 2 356 2 852 2 736 6 739 2 620 2 234 2 487 2 109 2 747 2 991 2 373 2 255 2 1001 4 1004 2 865 4 501 2 261 6 131 2 1014 2 391 2 
329 2 852 3 828 2 737 2 146 2 800 2 279 2 718 2 315 2 433 3 664 4 778 2 473 2 844 2 477 2 568 2 595 2 92 2 293 6 261 2 193 2 603 3 572 1 264 2 482 3 
329 2 852 2 828 2 737 2 146 2 800 2 279 2 718 2 315 2 433 2 664 4 778 2 473 2 844 2 477 2 568 2 595 2 92 2 293 6 261 2 193 2 603 2 264 2 482 2 
329 2 852 2 828 2 737 2 146 2 800 2 279 2 718 2 315 2 433 2 664 4 778 2 473 2 844 2 477 2 568 2 595 2 92 2 293 6 261 2 193 2 603 2 264 2 482 2 
510 4 680 2 329 2 34 2 615 3 332 2 144 4 878 2 852 3 828 2 946 2 710 2 741 2 361 6 405 2 407 2 553 3 718 2 808 4 470 2 344 2 473 4 963 2 158 2 318 4 477 10 532 2 567 2 966 4 161 2 787 4 502 2 969 2 67 3 68 2 1009 5 443 2 224 4 603 3 874 2 
510 4 329 2 201 2 332 2 878 2 144 4 707 2 946 2 828 2 710 2 405 2 407 2 718 2 470 2 344 2 473 4 289 2 158 2 963 2 477 10 532 2 966 4 161 2 787 4 969 2 603 2 224 4 680 2 34 2 615 2 852 2 361 6 741 2 553 2 808 4 318 4 567 2 502 2 67 2 68 2 1009 4 443 2 874 2 
510 4 329 2 201 2 332 2 878 2 144 4 707 2 946 2 828 2 710 2 405 2 407 2 718 2 470 2 344 2 473 4 289 2 158 2 963 2 477 10 532 2 966 4 161 2 787 4 969 2 603 2 224 4 680 2 34 2 615 2 852 2 361 6 741 2 553 2 808 4 318 4 567 2 502 2 67 2 68 2 1009 4 443 2 874 2 
510 4 329 2 201 2 332 2 878 2 144 4 707 2 946 2 828 2 710 2 405 2 407 2 718 2 470 2 344 2 473 4 289 2 158 2 963 2 477 10 532 2 966 4 161 2 787 4 969 2 603 2 224 4 680 2 34 2 615 2 852 2 361 6 741 2 553 2 808 4 318 4 567 2 502 2 67 2 68 2 1009 4 443 2 874 2 
510 4 329 2 201 4 332 2 878 2 144 4 707 4 946 2 828 2 710 2 405 2 407 2 718 2 470 2 344 2 473 4 289 4 158 2 963 2 477 10 532 2 966 4 161 2 787 4 969 2 603 2 224 4 680 2 34 2 615 2 852 2 361 6 741 2 553 2 808 4 318 4 567 2 502 2 67 2 68 2 1009 4 443 2 874 2 
72 2 624 2 142 2 843 2 1015 2 524 2 
380 2 986 2 142 2 952 2 317 2 565 2 78 2 
199 2 706 2 335 2 948 2 713 2 770 1 838 2 746 1 588 2 523 2 431 2 432 2 155 2 252 2 529 2 473 8 784 2 477 10 866 1 220 2 441 1 729 2 904 1 260 2 223 2 225 2 
991 2 
510 2 992 2 207 4 58 2 653 1 144 2 473 1 477 1 65 2 458 2 338 2 419 2 744 2 224 2 148 2 974 7 463 2 446 2 
510 2 992 2 207 4 58 2 144 2 65 2 458 2 338 2 419 4 744 2 224 2 148 4 974 6 463 2 446 4 
510 2 992 2 207 4 58 2 653 1 144 2 473 1 477 1 65 2 458 6 338 2 419 8 744 2 224 2 148 8 974 10 463 8 446 8 
510 2 992 2 207 2 58 2 144 2 65 2 338 2 419 2 744 2 224 2 148 2 974 2 446 2 
705 2 399 2 581 4 334 2 402 2 950 12 203 1 7 4 342 2 890 6 473 12 726 2 783 4 477 12 348 2 673 4 970 1 166 2 165 6 793 1 295 2 35 2 230 2 303 4 689 2 424 1 360 2 109 4 622 1 987 2 313 2 183 1 379 2 639 1 571 4 
849 2 797 2 705 2 230 2 399 2 829 2 334 2 581 6 402 2 360 2 950 6 109 2 987 2 7 2 745 2 313 2 890 4 473 12 783 2 217 2 726 2 477 12 165 4 793 2 
86 2 890 4 399 2 829 2 473 10 303 4 726 2 581 4 334 2 783 2 402 2 360 2 477 10 950 10 673 4 109 2 987 2 7 2 165 4 313 2 
763 2 515 2 705 2 395 4 399 2 829 2 581 14 334 2 402 2 711 6 950 36 203 2 885 2 206 4 5 2 205 4 7 2 409 2 342 2 955 2 9 2 465 2 663 2 210 2 890 14 473 26 726 2 783 2 477 28 348 10 673 8 970 2 165 14 166 10 793 2 606 4 611 2 731 2 614 2 35 2 303 8 302 2 689 2 360 2 109 2 622 2 112 4 552 2 987 2 859 4 313 2 183 2 61 6 434 2 123 6 639 6 815 2 191 8 937 6 758 2 326 4 1017 4 
213 2 

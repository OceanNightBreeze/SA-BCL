#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 519 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 605 605 445 (68,239) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 605 605 445 (68,239) (68,239) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 605 605 445 (68,239) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 685 206 459 274 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 265 (74,171,275,316,410,428,574,616,638,693) 266 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.IllegalArgumentException 20 (238,715) (238,715) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.IllegalArgumentException 20 (238,715) (238,715) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.IllegalArgumentException 20 (238,715) (238,715) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.IllegalArgumentException 20 (238,715) (238,715) 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException (286,422) (286,422) (286,422) 777 443 122 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 625 346 8 777 443 122 
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException (286,422) (286,422) (286,422) (286,422) 777 443 122 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaCharStream:FillBuff()V
daikon.diff.RootNode:RootNode()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability; | CONDITION | 1674 | if (x) -> if (!x)
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:eq(II)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object; | ASSIGN | 20429 | = null
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.Invariant:getConfidence()D
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:setDiff([I[I)[I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:eltsLTE([II)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:union([I[I)[I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.PptSlice2:arity()I
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaCharStream:getBeginLine()I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:subsetOf([B[I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String; | RETURN | 34154 | return null
daikon.Quant:concat([I[I)[I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:sameLength([I[I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ProglangType:dimensions()I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.Node:Node()V
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 2644 | return null
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.ValueTuple:size()I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:gte(II)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:eltwiseLT([I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:readChar()C
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
jtb.JavaCharStream:getEndColumn()I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.ProglangType:baseIsIntegral()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:eltsGteIndex([I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 43224 | 74 -> 75
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Ppt:Ppt()V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexGT([I[I)Z
daikon.Quant:isReverse([I[I)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.MathMDE:sign(I)I
daikon.Quant:eltsLT([II)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | RETURN | 184235 | return null
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ValueTuple:isMissing(I)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.ArraysMDE:indexOf([II)I | STATEMENT | 13838 | stmt -> ;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.Invariants:Invariants()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Intern:numIntArrays()I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 30667 | return null
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:memberOf(F[F)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.VarInfo:relate_var()V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18332 | 0 -> -1
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:subsetOf([S[S)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Debug:logDetail()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:ne(II)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.Invariant:justified()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 19813 | = null
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:memberOf(J[J)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.ProglangType:isArray()Z
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.PptSlice0:arity()I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName:hashCode()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object; | ASSIGN | 262646 | = null
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:slice([III)[I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaCharStream:BeginToken()C
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J | OPERATOR | 13933 | > -> <=
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.PptSlice1:num_samples()I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | STATEMENT | 8020 | stmt -> ;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quant:lexLTE([I[I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo; | RETURN | 20729 | return null
daikon.Quant:eq(FF)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Intern:intern([I)[I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:subsetOf([D[D)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.ArraysMDE:sum([D)D
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:jj_3_16()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_ntk()I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:lt(II)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.PptSlice1:arity()I
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaCharStream:backup(I)V | OPERATOR | 8274 | -= -> |=
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | RETURN | 25109 | return null
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Debug:logOn()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:new_ppt()V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(JJ)J
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:min([I)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:memberOf(D[F)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
365 2 48 2 623 2 439 2 551 2 752 2 562 2 502 4 370 2 
19 2 505 2 166 2 796 6 231 2 199 2 345 2 605 2 299 2 584 6 207 6 
525 4 48 2 297 4 551 2 723 2 384 2 363 2 150 6 28 6 69 2 91 6 731 6 256 2 
524 4 504 10 700 29 527 4 48 6 315 10 566 4 26 2 702 26 374 16 321 2 265 16 541 4 192 10 165 8 142 8 778 2 547 10 679 12 56 2 551 6 200 10 410 6 386 16 58 2 303 2 82 2 608 8 693 6 472 8 
295 4 659 6 
618 2 
62 2 119 2 78 2 7 2 29 2 471 2 404 4 719 2 241 2 794 2 126 2 753 2 
504 17 700 43 48 4 767 6 428 4 315 17 316 3 26 2 616 8 110 2 702 40 533 4 90 6 214 1 374 27 264 4 265 27 541 2 574 4 192 17 92 2 142 6 628 2 547 13 74 2 760 2 409 6 679 15 551 4 200 6 171 2 410 4 386 27 275 4 608 15 693 4 128 4 638 4 
7 2 83 2 378 2 
564 10 367 2 269 2 652 2 444 22 13 2 60 2 114 2 161 2 450 2 162 2 716 2 452 2 484 2 
504 2 475 2 700 6 315 2 702 4 112 2 374 2 402 2 645 2 265 2 541 2 192 2 10 2 547 2 679 2 549 2 34 2 200 4 386 2 608 2 793 2 693 2 341 2 
504 4 196 2 700 16 527 2 547 4 767 6 409 6 679 4 315 4 386 8 702 12 275 4 374 8 265 8 791 2 192 4 638 4 
151 2 431 2 519 2 382 2 461 2 338 2 139 2 739 6 177 2 291 2 
795 2 184 2 24 2 618 2 113 2 243 2 380 2 448 2 18 2 131 2 
181 2 283 2 185 2 398 2 617 5 89 2 728 3 621 2 620 1 401 2 624 1 193 2 625 4 293 2 294 32 733 2 405 1 406 8 511 2 738 2 629 4 737 2 512 2 514 1 11 1 12 2 298 3 740 2 517 2 412 2 302 2 413 2 101 2 15 2 414 2 631 2 630 2 418 2 742 2 307 2 520 2 522 2 105 1 523 8 106 2 745 2 529 2 312 2 750 6 643 2 538 2 322 4 325 2 436 1 756 6 328 6 440 3 439 2 550 2 551 34 120 1 553 2 333 2 555 2 556 4 121 3 446 2 223 2 38 2 559 2 762 24 657 2 658 2 40 2 340 2 42 2 228 2 344 2 48 32 133 2 769 1 134 12 50 2 346 4 772 2 665 2 567 16 668 16 569 2 350 6 570 1 236 24 775 2 669 4 671 3 463 8 140 2 357 2 247 2 580 16 145 2 785 3 786 2 683 1 688 3 689 2 469 2 695 2 473 4 593 2 476 3 596 2 63 2 259 4 260 2 67 1 158 3 261 2 701 2 262 2 373 2 704 2 160 32 70 2 71 2 483 2 267 1 72 1 485 2 486 2 604 2 708 2 490 3 383 16 271 3 76 3 810 2 495 2 172 2 498 2 813 2 276 2 392 1 84 2 175 2 720 2 610 1 
551 2 25 2 
465 2 157 2 551 4 
554 2 
394 2 612 2 230 2 611 4 724 2 613 2 135 2 2 2 726 2 189 4 774 4 729 2 349 2 292 6 734 30 626 2 578 2 55 4 676 2 95 2 97 4 467 2 148 2 149 6 687 6 585 6 16 2 691 2 589 6 420 4 743 2 308 4 698 2 699 6 65 2 639 2 314 2 746 2 798 2 479 6 536 2 376 2 805 2 544 2 326 6 649 6 488 6 759 6 273 30 713 2 337 2 761 30 812 4 225 6 391 6 278 6 764 6 
44 2 32 2 188 2 727 1 
44 2 130 2 
674 2 528 2 49 4 725 2 581 4 369 2 686 2 444 6 496 2 607 2 811 2 741 2 763 2 590 2 696 2 609 2 577 2 178 2 
255 2 188 2 
627 2 183 2 7 2 784 2 
627 2 183 2 7 2 784 2 127 2 802 2 
44 2 524 2 7 2 96 2 481 2 784 2 
279 2 516 2 
524 2 7 2 644 2 784 2 
117 2 347 2 
735 2 335 2 
432 2 240 2 
423 2 123 2 
735 2 371 2 423 2 
735 2 423 2 684 2 
735 2 423 2 360 2 
735 2 423 2 424 2 
438 6 784 2 650 2 7 2 115 2 637 2 
437 2 558 2 
44 2 524 2 7 2 481 2 784 2 285 2 802 2 
44 2 481 2 426 2 
44 2 481 2 602 2 
558 2 361 2 188 2 
44 2 481 2 
558 2 125 2 
44 2 470 2 
558 2 232 2 188 2 
508 2 240 2 188 2 
423 2 664 2 188 2 
117 2 137 2 188 2 
735 2 46 2 188 2 
558 2 757 2 
44 2 215 2 
252 2 240 2 
423 2 203 2 
117 2 709 2 
735 2 94 2 
558 2 53 2 
735 2 309 2 
117 2 233 2 
423 2 591 2 
240 2 300 2 
558 2 232 2 597 2 188 2 
558 2 395 2 232 2 597 2 188 2 
558 2 188 2 73 2 
263 2 558 2 188 2 
507 2 654 2 80 2 560 2 
101 2 
283 2 506 2 398 2 88 2 621 2 401 2 625 4 294 6 511 6 406 2 629 2 512 2 99 2 15 2 631 2 418 2 304 2 307 2 208 2 745 2 529 2 641 2 750 2 643 2 751 2 322 4 756 4 328 6 439 2 551 26 331 4 553 2 555 2 556 2 446 2 223 2 38 2 40 4 48 26 455 2 134 8 346 4 772 2 668 6 568 2 460 2 348 4 570 2 350 2 245 2 358 2 786 2 689 2 473 4 63 2 259 2 260 2 261 2 160 4 70 2 483 2 163 2 485 2 486 2 604 2 493 2 495 2 712 2 172 2 174 2 498 2 84 2 175 2 610 2 
283 2 506 2 398 2 88 2 621 2 401 2 625 4 294 6 511 6 406 2 629 2 512 2 99 2 302 1 413 1 15 2 631 2 418 2 304 2 307 2 208 2 745 2 529 2 641 2 750 2 643 2 751 2 322 4 756 5 328 6 439 2 551 26 331 4 553 2 555 2 556 2 446 2 223 2 38 2 40 4 660 2 48 26 455 2 134 8 346 4 772 2 668 6 568 2 460 2 348 4 570 2 350 2 141 2 786 2 689 2 587 2 473 4 63 2 259 2 260 2 261 2 704 2 160 4 70 2 483 2 163 2 485 2 486 2 604 2 493 2 495 2 172 2 174 2 498 2 84 2 175 2 610 2 
780 2 
52 2 474 2 
43 2 393 2 283 2 721 2 48 6 231 4 663 2 345 2 398 2 3 4 190 2 621 2 572 2 355 2 239 2 242 2 509 2 248 10 779 2 736 2 677 2 678 2 197 2 362 2 787 2 584 6 418 2 253 2 419 8 307 2 207 6 473 2 697 2 421 4 257 2 19 4 154 8 155 2 796 6 427 2 747 2 377 2 322 2 646 2 542 4 328 4 758 2 491 2 169 2 551 12 605 2 221 2 651 4 36 2 495 2 222 4 445 2 172 2 447 4 563 2 
43 2 393 2 283 2 721 2 48 6 47 2 231 4 663 2 345 2 398 2 3 4 190 2 621 2 572 2 355 2 239 2 242 2 509 2 248 10 779 2 736 2 677 2 678 2 197 2 579 4 199 2 362 2 787 2 584 8 418 2 253 2 419 8 307 2 473 2 207 8 697 2 421 4 257 2 154 8 19 4 796 6 427 2 747 2 377 2 322 2 542 4 328 4 758 2 491 2 169 2 551 12 605 2 221 2 651 4 36 2 495 2 222 4 445 2 172 2 447 4 563 2 179 2 
43 2 393 2 19 2 721 2 779 2 677 2 796 2 678 2 231 2 362 2 36 2 222 4 747 2 3 4 584 2 572 2 239 2 421 2 
43 2 393 2 283 2 721 2 48 6 231 4 663 2 398 2 3 4 190 2 621 2 572 2 355 2 239 2 242 2 509 2 248 6 779 2 736 2 677 2 678 2 197 2 199 2 362 2 787 2 584 6 418 2 253 2 419 4 307 2 207 6 473 2 697 2 421 4 257 2 19 4 154 4 155 2 796 4 427 2 747 2 377 2 322 2 646 2 542 4 328 4 758 2 491 2 169 2 551 12 605 2 221 2 651 4 36 2 495 2 222 4 445 2 172 2 447 4 563 2 
43 2 393 2 283 2 721 2 48 6 231 4 663 2 398 2 3 4 190 2 621 2 572 2 355 2 239 2 242 2 509 2 248 6 779 2 736 2 677 2 678 2 197 2 362 2 299 2 787 2 584 4 418 2 253 2 419 4 307 2 207 6 473 2 697 2 421 4 257 2 19 4 154 4 155 2 796 6 427 2 747 2 377 2 322 2 646 2 542 4 328 4 758 2 491 2 169 2 551 12 605 2 221 2 651 4 36 2 495 2 222 4 445 2 172 2 447 4 563 2 
43 2 393 2 283 2 721 2 48 6 231 4 663 2 345 2 398 2 3 4 190 2 621 2 572 2 355 2 239 2 242 2 509 2 248 6 779 2 736 2 677 2 678 2 197 2 362 2 787 2 584 6 418 2 253 2 419 8 307 2 207 6 473 2 697 2 421 4 257 2 19 4 154 4 155 2 796 6 427 2 747 2 377 2 322 2 646 2 542 4 328 4 758 2 491 2 169 2 551 12 605 2 221 2 651 4 36 2 495 2 222 4 445 2 172 2 447 4 563 2 
43 2 393 2 283 2 721 2 48 6 231 4 663 2 345 2 398 2 3 4 190 2 621 2 572 2 355 2 239 2 242 2 509 2 248 10 779 2 736 2 677 2 678 2 197 2 362 2 299 2 787 2 584 6 418 2 253 2 419 8 307 2 473 2 207 8 697 2 421 4 257 2 19 4 154 8 155 2 796 8 427 2 747 2 377 2 322 2 646 2 542 4 328 4 758 2 491 2 169 2 551 12 605 2 221 2 651 4 36 2 495 2 222 4 445 2 172 2 447 4 563 2 
43 2 393 2 283 2 721 2 48 6 231 4 663 2 345 2 398 2 3 4 190 2 621 2 572 2 355 2 239 2 242 2 509 2 248 10 779 2 736 2 677 2 678 2 197 2 362 2 787 2 584 6 418 2 253 2 419 8 307 2 207 6 473 2 697 2 421 4 257 2 19 4 154 8 155 2 796 6 427 2 747 2 377 2 322 2 646 2 542 4 328 4 758 2 491 2 169 2 551 12 605 2 221 2 651 4 36 2 495 2 222 4 445 2 172 2 447 4 563 2 
393 2 0 1 186 2 397 6 398 2 3 4 190 2 621 2 191 6 625 4 406 2 197 2 629 2 198 2 411 2 413 2 415 2 418 2 633 2 419 2 207 12 421 4 19 4 208 2 21 2 427 2 25 6 434 2 648 2 435 2 33 2 439 2 442 2 35 1 221 2 651 6 36 2 222 4 445 2 447 4 446 2 223 2 655 1 39 6 453 2 43 2 48 24 663 2 231 4 668 6 237 2 239 2 242 2 675 6 248 2 677 2 465 6 678 2 250 2 680 2 689 2 253 2 473 4 697 4 257 2 61 2 63 2 259 2 66 2 260 2 261 2 482 6 487 6 491 2 492 2 495 2 77 1 497 2 714 2 79 6 84 2 280 8 283 2 506 2 721 2 722 7 294 8 509 4 511 6 736 2 512 2 299 4 302 2 304 2 103 2 307 2 310 2 745 2 529 2 530 2 747 2 109 6 531 1 748 6 750 2 535 2 751 4 539 2 322 4 323 2 542 8 755 2 328 6 756 6 758 2 329 2 551 46 331 4 553 2 554 6 555 2 336 1 556 2 557 2 563 2 134 4 346 4 771 2 772 12 136 1 350 2 572 2 573 4 355 2 576 6 779 2 781 10 359 2 362 2 786 2 787 2 584 4 586 6 152 6 155 2 796 8 598 1 800 6 600 7 372 1 377 2 160 2 803 4 164 2 604 2 169 2 605 4 172 2 175 2 
393 2 283 2 721 2 506 2 186 2 397 6 398 2 3 4 190 2 621 2 191 6 625 4 294 8 509 4 406 2 511 6 736 2 197 2 512 2 629 4 198 2 411 2 302 2 413 2 415 2 304 2 418 2 633 2 103 2 419 6 307 2 207 12 421 4 310 2 208 2 19 4 21 2 745 2 529 2 427 2 25 6 530 2 109 6 747 2 748 6 535 2 750 2 751 4 539 2 323 2 322 4 434 2 542 8 755 2 648 2 435 2 33 2 756 6 328 6 758 2 329 2 439 2 442 2 331 4 551 48 553 2 554 6 651 6 221 2 36 2 555 2 556 4 222 4 445 2 223 2 446 2 447 4 557 2 39 6 40 2 563 2 453 2 43 2 45 2 48 26 231 4 663 2 345 4 134 8 771 2 346 4 772 12 668 6 350 2 573 4 572 2 237 2 355 2 576 6 239 2 242 2 248 2 675 6 781 10 779 2 465 6 677 2 359 2 678 2 250 2 362 2 680 2 786 2 787 2 689 2 584 8 586 6 253 2 152 6 473 4 697 4 257 2 61 2 155 2 63 2 796 8 66 2 259 4 260 2 261 2 800 6 160 2 377 2 803 4 482 6 164 2 487 6 604 2 491 2 169 2 492 2 605 4 495 2 172 2 79 6 714 2 497 2 81 2 84 2 280 8 175 2 
393 2 283 2 721 2 506 2 186 2 397 6 398 2 3 4 190 2 621 2 191 6 625 4 294 8 509 4 406 2 511 6 736 2 197 2 512 2 629 4 198 2 411 2 302 2 413 2 415 2 304 2 418 2 633 2 103 2 419 6 307 2 207 12 421 4 310 2 208 2 19 4 21 2 745 2 529 2 427 2 25 6 530 2 109 6 747 2 748 6 535 2 750 2 751 4 539 2 323 2 322 4 434 2 542 8 755 2 648 2 435 2 33 2 756 6 328 6 758 2 329 2 439 2 442 2 331 4 551 48 553 2 554 6 651 6 221 2 36 2 555 2 556 4 222 4 445 2 223 2 447 4 446 2 557 2 39 6 40 2 563 2 453 2 43 2 45 2 48 26 231 4 663 2 345 4 134 8 771 2 346 4 772 12 668 6 350 2 573 4 572 2 237 2 355 2 576 6 239 2 242 2 675 6 248 6 781 10 779 2 465 6 677 2 359 2 678 2 250 2 362 2 680 2 786 2 787 2 584 8 689 2 586 6 253 2 152 6 473 4 697 4 257 2 61 2 154 4 155 2 63 2 796 8 66 2 259 4 260 2 261 2 800 6 160 2 377 2 803 4 482 6 164 2 487 6 604 2 491 2 169 2 492 2 605 4 495 2 172 2 79 6 714 2 497 2 81 2 84 2 280 8 175 2 
393 2 186 2 396 2 397 6 398 2 399 6 3 4 190 2 6 2 621 2 191 12 625 4 406 4 197 2 629 4 199 2 198 2 411 2 413 2 418 2 633 2 419 6 207 16 421 4 19 4 208 4 21 2 209 6 427 2 25 12 434 2 648 2 435 2 33 2 439 2 442 2 221 2 651 6 36 2 222 4 445 2 446 2 447 4 223 2 39 6 40 2 41 6 453 2 43 2 45 2 48 24 663 2 231 4 457 2 668 8 237 2 239 2 242 2 248 6 675 12 677 2 465 12 678 2 250 2 680 2 682 6 689 2 253 2 473 4 697 4 257 2 258 6 61 2 63 2 259 4 66 2 260 2 261 2 482 6 487 6 491 2 492 2 495 2 497 2 714 2 79 6 81 2 84 2 280 8 718 6 283 2 506 2 721 2 294 12 509 4 511 8 736 2 512 2 296 6 98 6 299 2 302 2 304 2 103 2 307 2 310 2 745 2 529 2 530 2 747 2 109 6 748 12 750 4 535 2 751 4 539 2 322 4 323 2 542 8 755 2 328 6 756 6 758 2 548 2 329 2 551 52 331 6 553 2 332 2 554 12 555 2 556 4 557 2 563 2 345 4 134 10 346 4 771 2 772 10 350 4 572 2 573 4 355 2 576 6 779 2 781 8 359 2 362 2 786 2 787 2 584 10 586 6 152 6 154 4 155 2 796 10 800 6 377 2 160 4 803 4 164 2 604 2 806 2 167 2 168 2 169 2 605 4 172 2 173 6 175 2 
154 4 393 2 19 4 155 2 796 6 231 4 345 2 427 2 747 2 3 2 190 2 377 2 572 2 542 2 239 2 242 2 248 4 779 2 758 2 197 2 551 4 169 2 362 2 605 2 651 2 221 2 36 2 787 2 222 2 445 2 447 2 584 6 419 6 207 4 257 2 
393 2 283 2 506 2 398 2 3 2 190 2 621 2 625 4 294 8 511 6 197 2 737 2 512 2 302 2 101 2 413 2 415 2 418 2 304 2 307 2 419 6 207 4 19 4 745 2 529 2 427 2 747 2 319 2 111 2 750 3 27 2 751 2 322 4 542 2 328 6 756 6 758 2 439 2 551 28 331 4 553 2 651 2 221 2 36 2 555 2 222 2 445 2 447 2 446 2 223 2 656 2 559 2 48 24 231 4 663 2 345 2 346 4 51 2 772 4 668 6 350 3 572 2 239 2 242 2 248 2 781 2 779 2 362 2 786 2 787 2 584 6 689 2 473 4 257 2 155 2 796 6 63 2 260 2 261 2 377 2 160 3 707 3 169 2 605 2 495 2 172 2 813 2 84 2 175 2 
758 2 313 2 257 2 
758 2 313 2 257 2 
283 2 506 2 87 2 398 2 3 2 4 2 621 2 625 4 294 2 511 2 407 2 629 4 512 2 302 2 413 2 418 2 304 2 307 2 419 6 207 8 19 4 745 2 529 2 642 2 751 2 322 4 542 4 756 6 328 6 758 2 439 2 551 24 553 2 651 2 36 2 555 2 556 4 222 2 445 2 446 2 223 2 447 2 224 2 227 2 343 2 48 16 231 4 345 4 134 4 346 4 772 4 668 2 573 2 239 2 248 2 781 2 362 2 786 2 689 2 584 8 473 4 257 2 154 2 63 2 796 8 259 4 260 2 261 2 599 2 160 2 377 2 803 2 705 2 604 2 807 2 605 4 495 2 172 2 79 2 174 4 84 2 281 2 
43 2 310 2 407 2 781 2 661 2 48 2 187 2 551 4 770 2 772 2 79 2 621 2 573 2 103 2 705 2 281 2 474 2 
283 2 506 2 87 2 398 2 3 2 4 2 621 2 625 4 294 2 511 2 407 2 629 4 512 2 302 2 413 2 418 2 304 2 307 2 419 6 104 2 207 8 19 4 745 2 529 2 642 2 751 2 322 4 542 4 756 6 328 6 758 2 439 2 551 20 553 2 651 2 36 2 555 2 556 4 222 2 445 2 446 2 223 2 447 2 224 2 227 2 343 4 48 14 231 4 345 4 134 4 346 4 772 2 668 2 239 2 248 2 362 2 786 2 689 2 584 8 473 4 257 2 154 2 63 2 796 8 259 4 260 2 68 2 261 2 599 2 160 4 377 2 803 2 705 2 604 2 807 2 605 4 495 2 172 2 174 4 84 2 
283 2 506 2 87 2 398 2 3 2 4 2 621 2 625 4 294 2 511 2 407 2 629 4 512 2 302 2 413 2 418 2 304 2 307 2 419 6 207 8 19 4 745 2 529 2 642 2 751 2 322 4 542 4 756 6 328 6 758 2 439 2 551 24 553 2 651 2 36 2 555 2 556 4 222 2 445 2 446 2 223 2 447 2 224 2 227 2 343 2 48 16 231 4 345 4 134 4 346 4 772 4 668 2 573 2 239 2 248 2 781 2 362 2 786 2 689 2 584 8 473 4 257 2 154 2 63 2 796 8 259 4 260 2 261 2 599 2 160 2 377 2 803 2 705 2 604 2 807 2 605 4 495 2 172 2 79 2 174 4 84 2 281 2 
459 2 274 2 268 2 288 2 551 2 324 2 206 2 799 2 685 2 766 2 364 2 773 2 
208 6 592 2 156 4 311 2 48 2 477 1 668 2 750 3 350 3 160 3 670 2 294 2 672 2 327 3 511 2 783 2 143 2 331 2 551 2 710 2 57 2 385 2 14 2 390 2 175 2 
208 6 592 2 156 4 311 2 48 2 668 2 750 2 350 2 160 2 670 2 294 2 672 2 327 2 511 2 783 2 143 2 331 2 551 2 710 2 57 2 385 2 14 2 390 2 175 2 
208 6 592 2 156 4 311 2 48 2 668 2 750 2 350 2 160 2 670 2 294 2 672 2 327 2 511 2 783 2 143 2 331 2 551 2 710 2 57 2 385 2 14 2 390 2 175 2 
504 2 595 3 700 6 48 4 662 4 315 2 107 3 212 4 318 2 702 4 567 2 458 2 350 3 351 2 374 2 160 3 265 2 804 2 30 3 31 2 192 2 732 2 294 2 706 4 217 4 142 4 782 2 547 2 144 2 580 2 551 10 808 2 272 2 410 2 386 2 692 4 390 2 175 2 636 2 342 6 
504 2 48 4 662 4 567 2 458 2 351 2 350 2 192 2 732 2 294 2 142 4 782 2 144 2 679 2 580 2 410 2 692 4 636 2 595 2 700 4 315 2 107 2 26 2 212 4 702 4 318 2 374 2 265 2 160 2 31 2 30 2 804 2 706 4 217 4 547 2 551 10 808 2 272 2 386 2 390 2 608 2 175 2 342 6 
504 2 48 4 662 4 567 2 458 2 351 2 350 2 192 2 732 2 294 2 142 4 782 2 144 2 679 2 580 2 410 2 692 4 636 2 595 2 700 4 315 2 107 2 26 2 212 4 702 4 318 2 374 2 265 2 160 2 31 2 30 2 804 2 706 4 217 4 547 2 551 10 808 2 272 2 386 2 390 2 608 2 175 2 342 6 
504 2 48 4 662 4 567 2 458 2 351 2 350 2 192 2 732 2 294 2 142 4 782 2 144 2 679 2 580 2 410 2 692 4 636 2 595 2 700 4 315 2 107 2 26 2 212 4 702 4 318 2 374 2 265 2 160 2 31 2 30 2 804 2 706 4 217 4 547 2 551 10 808 2 272 2 386 2 390 2 608 2 175 2 342 6 
504 2 48 4 662 4 567 2 458 2 351 2 350 2 192 2 732 2 294 2 142 4 782 2 144 2 679 4 580 2 410 2 692 4 636 2 595 2 700 4 315 2 107 2 26 4 212 4 702 4 318 2 374 2 265 2 160 2 31 2 30 2 804 2 706 4 217 4 547 2 551 10 808 2 272 2 386 2 390 2 608 4 175 2 342 6 
408 2 320 2 455 2 352 2 552 2 334 2 235 2 
789 2 416 2 352 2 108 2 614 2 356 2 
283 2 210 2 48 8 234 2 749 2 748 2 703 2 571 1 433 2 139 1 289 1 575 2 9 2 379 2 545 2 75 2 219 2 551 10 515 2 681 2 151 1 500 1 499 2 501 2 306 2 451 2 
504 4 700 12 767 4 315 4 26 3 430 2 702 10 400 2 374 6 264 2 265 6 601 2 574 2 192 4 266 2 142 4 547 4 679 5 653 2 410 2 386 6 305 2 608 3 124 2 638 2 
706 2 20 2 217 2 715 2 254 2 238 2 212 2 
706 2 20 2 217 2 715 2 254 2 238 2 212 2 
706 2 20 2 217 2 715 2 254 2 48 1 551 1 238 2 216 1 212 2 
706 2 20 2 217 2 715 2 254 2 238 2 212 2 
503 6 1 6 85 2 86 6 284 1 615 2 286 6 5 3 619 4 730 6 290 4 194 6 625 42 93 2 510 4 513 6 518 6 301 2 100 2 302 20 413 20 202 42 417 6 201 4 205 6 744 6 422 4 425 4 745 10 526 6 22 6 211 12 317 6 640 12 213 12 537 2 540 6 543 2 647 8 116 4 756 92 118 12 546 6 441 6 551 90 220 6 443 2 37 6 449 6 122 2 226 2 339 13 129 12 229 2 48 78 132 6 768 2 346 36 666 6 667 2 138 6 354 2 462 6 776 2 54 12 244 4 777 2 673 6 464 6 249 4 466 4 582 2 788 12 59 6 690 2 468 2 792 2 694 6 64 6 261 4 797 12 159 4 480 2 375 4 381 2 603 6 170 2 270 1 809 6 711 12 494 6 606 4 387 2 389 4 84 10 176 6 282 22 180 2 
182 2 366 2 48 18 745 2 64 2 368 2 768 2 797 2 261 2 346 8 615 2 317 2 532 2 667 2 213 2 534 2 287 2 537 2 353 2 8 2 625 8 93 2 777 2 756 12 118 2 489 2 551 18 270 2 809 2 443 2 606 10 202 2 388 2 122 2 226 2 588 2 84 2 521 2 
503 4 1 8 86 8 615 2 619 4 287 2 622 8 730 6 403 16 290 4 195 2 625 44 194 16 510 4 513 4 301 2 518 4 302 30 413 28 201 4 202 24 17 2 417 4 632 4 102 32 204 8 635 10 634 2 205 4 744 8 425 4 745 6 526 4 429 10 211 8 317 4 640 24 213 10 537 2 540 4 647 6 116 4 756 104 118 10 218 2 330 4 441 4 551 78 220 4 443 2 37 4 449 4 122 2 226 2 561 4 339 10 129 24 454 4 48 70 132 4 768 2 565 10 346 36 456 4 666 4 667 2 462 4 776 4 244 4 54 10 777 2 673 4 246 8 464 4 249 4 466 4 147 16 582 4 788 6 583 2 690 2 59 4 790 2 468 2 792 4 694 4 153 4 594 4 64 4 478 2 261 2 797 10 801 2 375 4 381 2 603 4 170 2 711 14 809 4 494 4 606 14 389 4 277 8 84 6 717 2 176 4 282 30 
1 6 85 2 48 26 768 2 346 14 615 2 667 2 286 8 5 2 287 2 730 2 462 2 776 2 625 14 54 2 777 2 673 2 146 2 582 4 788 2 302 12 413 12 202 8 417 2 792 2 205 2 422 2 745 2 23 2 64 4 797 6 261 2 317 4 159 2 213 6 537 2 480 2 543 2 647 4 754 2 756 46 118 6 551 28 220 4 270 2 809 4 443 2 606 14 37 4 387 2 226 2 122 2 84 2 176 4 339 2 765 2 282 6 
251 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 408 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 394 379 149 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 275 25 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 394 379 149 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 394 379 149 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 394 379 149 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 394 379 149 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 394 379 149 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 394 379 149 144 185 228 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 14 434 
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 240 131 213 449 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 154 464 345 23 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 233 298 362 464 345 23 
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (309,436) (309,436) 262 464 345 23 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 154 464 345 23 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaCharStream:ReadByte()C
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd(II)I
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | OPERATOR | 36891 | != -> ==
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.Invariant:prob_and(DD)D
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariants:Invariants()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:subsetOf([I[I)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:eltwiseLT([I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:eq(II)Z
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:lt(II)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:lte(II)Z
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:intersection([I[I)[I
daikon.Quant:eltsLTE([II)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType; | RETURN | 5873 | return null
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 10778 | 3 -> 0
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:sum([D)D
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap.EntrySet:size()I | STATEMENT | 15721 | stmt -> ;
daikon.Quant:lexGT([I[I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | ASSIGN | 63682 | = null
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | STATEMENT | 22110 | stmt -> ;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eq(JJ)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:gt(II)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaCharStream:backup(I)V
daikon.Quant:setDiff([I[I)[I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:slice([III)[I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:lexEqual([I[I)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaCharStream:FillBuff()V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:pow(II)I
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.ArraysMDE:max([I)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoAux:hashCode()I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.InvariantFormatTester:execute()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName:hashCode()I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.ValueTuple:size()I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | RETURN | 66339 | return null
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String; | RETURN | 48940 | return null
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:memberOf(J[J)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:memberOf(I[I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.PptSlice0:arity()I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:eltwiseGTE([I)Z | CONDITION | 177097 | if (x) -> if (!x)
daikon.Quant:gte(II)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:isReverse([I[I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:gcd([I)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaCharStream:BeginToken()C
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.ProglangType:dimensions()I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:ne(II)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaCharStream:readChar()C
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
utilMDE.MathMDE:negate(I)I
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:eltsGT([II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.MathMDE:mod_positive(II)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Ppt:Ppt()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V | STATEMENT | 9545 | stmt -> ;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >
utilMDE.Intern:intern([I)[I
daikon.Quant:eltsLT([II)Z
daikon.Quant:subsetOf([S[S)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Intern:intern([D)[D
utilMDE.Intern:internSubsequence([III)[I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
435 2 158 2 436 2 244 2 274 2 88 2 389 2 309 2 161 4 
280 2 452 2 305 6 224 6 109 2 427 2 432 2 60 2 204 2 188 2 264 6 
436 2 339 2 309 2 89 4 247 2 310 2 4 6 312 6 459 2 349 4 53 6 223 2 172 6 
446 6 72 4 106 12 217 10 309 6 451 2 281 6 49 30 50 10 414 4 196 2 114 10 54 4 55 2 170 8 171 8 321 16 460 26 461 2 177 2 359 8 436 6 179 8 180 2 232 2 120 4 183 16 296 10 422 10 368 16 
94 6 346 4 
234 2 
402 2 446 2 194 2 217 2 49 6 50 2 138 2 114 2 199 2 321 2 81 2 460 4 18 2 296 2 183 2 150 2 63 2 422 4 125 2 368 2 
460 12 126 4 59 6 106 5 217 4 419 6 195 4 49 14 296 4 183 8 50 4 222 2 79 2 54 2 114 4 368 8 321 8 
0 2 462 2 403 2 206 2 408 2 469 2 393 2 26 2 326 2 218 2 411 2 10 6 12 2 352 2 187 4 155 2 
424 2 377 2 416 2 353 2 290 2 84 2 29 2 234 2 211 2 371 2 
243 2 134 2 135 2 309 4 249 2 252 2 198 2 258 2 259 4 436 4 86 2 391 2 28 4 148 2 95 2 209 2 334 4 158 2 45 2 278 2 342 2 279 2 458 2 351 2 285 2 168 2 461 2 356 2 291 2 227 2 117 2 418 2 229 2 119 2 231 2 471 2 297 4 122 2 64 2 65 2 238 2 187 2 302 2 370 2 
126 4 446 4 407 6 106 22 217 16 160 6 309 4 450 4 195 4 281 4 166 4 49 54 50 16 51 2 414 2 284 8 140 2 221 2 114 16 384 4 170 6 321 32 460 48 175 2 359 18 59 6 436 4 180 2 205 6 24 6 230 4 419 6 27 2 296 16 183 32 152 4 422 6 236 2 368 32 
187 2 408 2 352 2 
289 2 71 2 467 2 291 2 388 10 214 2 159 22 440 2 327 2 453 2 11 2 239 2 474 2 56 2 
423 2 306 2 308 2 428 2 193 2 309 8 251 2 317 2 319 2 379 2 387 2 324 2 21 2 436 8 263 2 394 2 395 2 149 2 441 1 156 1 338 2 406 5 111 2 417 4 233 4 298 4 365 2 
35 2 
309 2 376 2 
19 2 115 2 309 4 
190 2 43 2 404 2 337 2 157 18 307 2 1 18 105 2 275 2 246 2 311 2 163 2 430 2 410 2 454 2 354 2 16 2 355 2 173 2 147 2 225 2 468 2 22 2 91 2 25 2 437 2 439 2 438 2 265 2 30 2 235 2 186 2 237 2 399 2 398 18 303 2 369 2 331 2 
70 2 358 1 62 2 75 2 
96 2 75 2 
39 2 40 2 273 2 187 2 
39 2 40 2 273 2 123 2 187 2 400 2 
304 2 120 2 174 2 273 2 187 2 75 2 
200 2 227 2 
120 2 176 2 273 2 187 2 
99 2 409 2 
100 2 93 2 
316 2 447 2 
108 2 169 2 
85 2 169 2 93 2 
169 2 142 2 93 2 
151 2 169 2 93 2 
367 2 169 2 93 2 
38 2 273 2 145 2 383 6 433 6 260 2 328 2 187 2 
189 2 392 2 
304 2 120 2 107 2 273 2 123 2 187 2 75 2 
304 2 76 2 75 2 
304 2 34 2 75 2 
70 2 318 2 392 2 
304 2 75 2 
373 2 392 2 
66 2 75 2 
425 2 70 2 392 2 
316 2 70 2 366 2 
271 2 70 2 169 2 
99 2 70 2 443 2 
70 2 442 2 93 2 
390 2 392 2 
295 2 75 2 
316 2 73 2 
473 2 169 2 
99 2 330 2 
315 2 
314 2 392 2 
98 2 93 2 
99 2 207 2 
169 2 256 2 
316 2 470 2 
425 2 184 2 70 2 392 2 
425 2 184 2 70 2 215 2 392 2 
6 2 70 2 392 2 
463 2 70 2 392 2 
357 2 333 2 44 2 33 2 
445 2 266 4 167 2 58 2 448 2 257 2 292 2 343 2 
378 2 70 2 
164 2 
423 2 306 2 308 2 428 2 193 2 309 8 251 2 317 2 319 2 379 2 387 2 324 2 21 2 436 8 263 2 394 2 325 2 395 2 149 2 406 4 111 2 417 4 233 4 298 4 365 2 
423 2 306 2 308 2 428 2 193 2 309 8 251 2 317 2 379 2 319 2 387 2 324 2 21 2 436 8 263 2 394 2 325 2 395 2 149 2 441 2 156 2 406 6 111 2 417 4 233 4 298 4 365 2 
92 2 162 2 293 2 
92 2 162 2 293 2 
423 2 306 2 308 2 428 2 193 2 309 8 251 2 317 2 379 2 319 2 387 2 324 2 21 2 436 8 263 2 394 2 325 2 395 2 149 2 441 1 156 1 406 5 111 2 417 4 233 4 298 4 365 2 
423 2 306 2 308 2 428 2 193 2 309 8 251 2 317 2 379 2 319 2 387 2 324 2 21 2 436 8 263 2 394 2 325 2 395 2 149 2 441 2 156 2 406 6 111 2 417 4 233 4 298 4 365 2 
423 2 306 2 308 2 428 2 193 2 309 8 251 2 317 2 319 2 379 2 387 2 324 2 21 2 436 8 263 2 394 2 325 2 395 2 149 2 441 1 156 1 406 5 111 2 417 4 233 4 298 4 365 2 
306 2 428 2 308 2 193 2 429 2 309 12 248 2 317 2 431 2 8 2 379 2 319 2 254 2 380 2 144 2 386 1 387 2 436 8 21 2 394 2 29 1 395 2 149 2 441 1 210 2 211 1 212 2 332 2 336 2 272 2 156 1 406 3 277 2 46 2 219 2 111 2 113 2 417 4 228 2 118 1 233 2 185 2 298 2 365 2 
165 2 7 2 283 2 253 2 112 2 143 2 288 2 
250 2 434 2 116 2 14 2 382 2 288 2 
80 2 130 1 436 4 103 2 131 2 206 1 309 4 449 2 393 1 182 1 317 2 347 1 363 2 78 2 444 2 213 2 240 2 
67 2 106 1 217 6 309 6 160 4 195 2 49 15 281 2 166 2 344 2 252 2 50 6 284 2 348 2 320 2 114 6 15 2 321 6 170 4 460 12 175 1 359 1 59 4 436 6 203 2 183 6 296 6 122 2 124 2 368 6 
372 2 323 7 465 2 20 2 436 1 375 2 216 2 361 2 2 2 74 2 309 1 48 1 341 2 412 4 52 2 141 2 255 2 300 2 
372 4 323 6 465 2 20 2 375 4 216 2 361 2 74 2 2 2 341 2 412 4 52 2 141 2 255 2 300 4 
372 8 323 10 465 2 20 2 436 1 375 8 216 6 361 2 74 8 2 2 309 1 48 1 341 2 412 4 52 2 141 2 255 2 300 8 
372 2 323 2 465 2 20 2 375 2 361 2 2 2 341 2 412 2 52 2 141 2 255 2 300 2 
241 2 127 2 128 2 129 2 374 2 133 2 9 2 381 2 13 2 387 6 23 2 395 4 396 2 267 2 268 4 154 2 269 2 37 2 401 2 41 2 156 3 405 2 406 15 282 2 413 2 181 2 421 2 298 8 301 2 306 6 68 4 426 1 192 4 309 28 77 2 82 2 201 2 202 2 436 26 90 2 441 3 97 2 102 4 345 2 455 2 456 2 350 4 220 2 464 2 466 2 226 2 233 10 121 2 364 1 
306 2 191 2 241 2 242 2 69 2 192 20 132 2 374 2 309 30 3 2 136 2 137 2 5 2 313 2 77 2 139 4 197 2 381 2 385 2 17 2 322 4 387 2 201 2 83 4 436 30 23 2 87 2 395 2 441 1 31 2 397 2 32 2 153 2 329 2 36 2 270 2 401 2 335 2 156 1 42 2 101 2 104 2 102 2 406 27 276 2 340 2 47 2 345 2 413 2 457 2 286 2 415 2 287 2 57 2 464 2 178 2 360 2 61 2 233 14 294 2 420 2 362 2 472 2 298 14 
306 2 401 2 156 4 102 2 192 4 374 2 406 10 245 2 309 14 345 2 413 2 286 2 381 2 385 2 146 2 387 2 464 2 178 2 436 14 23 2 262 2 208 2 233 4 395 2 298 4 441 4 299 2 397 2 
306 2 401 2 387 2 201 2 464 2 156 4 436 12 374 2 192 4 23 2 406 10 261 2 309 12 233 4 345 2 413 2 395 2 441 4 298 4 381 2 286 2 154 2 
110 2 

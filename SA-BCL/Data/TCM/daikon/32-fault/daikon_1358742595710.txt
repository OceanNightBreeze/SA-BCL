#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (267,348) (267,348) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.ClassCastException 
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 270 (152,521) 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (146,191,194,700,749) (146,191,194,700,749) (146,191,194,700,749) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V ERROR utilMDE.Assert$AssertionException (267,348) 665 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 637 682 447 575 156 346 667 571 403 435 279 592 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V ERROR java.lang.ArrayIndexOutOfBoundsException 167 
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (368,370) (368,370) (368,370) 
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (267,348) (267,348) 231 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (267,348) (267,348) 231 
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 764 (203,254) 430 (4,197) (203,254) 530 (4,197) 120 674 
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 764 (203,254) 430 (4,197) (203,254) 530 (4,197) 120 674 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (267,348) (267,348) 231 319 621 365 675 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 62 (219,393,466,580,744,753,766) 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 62 (219,393,466,580,744,753,766) 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 314 596 
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 62 (219,393,466,580,744,753,766) 109 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (267,348) (267,348) 731 98 91 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (267,348) (267,348) 731 98 91 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 731 98 91 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Debug:logDetail()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:eltwiseGTE([I)Z | CONDITION | 177097 | if (x) -> if (!x)
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.diff.InvMap:InvMap()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:slice([III)[I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:subsetOf([F[F)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern:numIntArrays()I
daikon.Quant:memberOf(D[F)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:negate(I)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
utilMDE.ArraysMDE:subarray([JII)[J | RETURN | 30018 | return null
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.ProglangType:baseIsFloat()Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:pow(II)I
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfo:new_ppt()V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:memberOf(F[F)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoAux:hashCode()I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaCharStream:getEndLine()I
daikon.Quant:eltwiseEqual([I)Z | CONDITION | 174937 | if (x) -> if (!x)
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.Quant:memberOf(F[D)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:intersection([I[I)[I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:logDetail()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V | ASSIGN | 2084 | = null
daikon.Quant:eltsGTE([II)Z
daikon.Quant:lexGTE([I[I)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.ProglangType:baseIsScalar()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:setEqual([I[I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:memberOf(J[J)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:size()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isIntegral()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2461 | return null
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 62554 | return null
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z | CONSTANT | 40107 | 0 -> -1
utilMDE.WeakHasherMap:processQueue()V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_ntk()I
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaCharStream:getEndColumn()I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:gte(II)Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.MathMDE:sign(I)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([F[D)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.ProglangType:dimensions()I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | CONDITION | 9913 | if (x) -> if (!x)
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lte(II)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:ne(II)Z
daikon.ValueTuple:isMissing(I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.MathMDE:gcd(II)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Assert:assertTrue(Z)V
daikon.PptName:isEnterPoint()Z
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | ASSIGN | 282204 | = null
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaCharStream:FillBuff()V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.ProglangType:isFloat()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | RETURN | 19748 | return null
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Debug:logOn()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:eltsEqual([II)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.WeakHasherMap:size()I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 7310 | = null
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I | CONSTANT | 5121 | 0 -> 1
daikon.VarInfo:relate_var()V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:isPseudoArray()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.Quant:noDups([I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.ProglangType:isScalar()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([D)D
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:sameLength([I[I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(S[S)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.Invariant:justified()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | RETURN | 1469 | return null
utilMDE.ArraysMDE:max([I)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | OPERATOR | 4882 | == -> <
daikon.Quant:eltwiseLTE([I)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([D[F)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V | CONDITION | 1380 | if (x) -> if (!x)
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V | STATEMENT | 2624 | stmt -> ;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:eq(II)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONDITION | 50578 | if (x) -> if (!x)
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.PptSlice0:arity()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:gt(II)Z
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.Quant:lexGT([I[I)Z
jtb.JavaCharStream:readChar()C
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:subsetOf([S[S)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_is_ge(DD)D | STATEMENT | 6797 | stmt -> ;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:Node()V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:union([I[I)[I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.PptSlice1:arity()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Intern:intern([J)[J
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:lt(II)Z
daikon.inv.unary.LowerBoundCore:calc_range()J

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
629 2 147 4 267 2 595 2 348 2 104 2 577 2 283 2 249 2 
470 2 635 6 291 2 516 2 373 2 102 2 41 2 122 2 338 6 641 6 559 2 
348 2 432 6 405 6 737 6 497 2 604 4 525 2 342 2 232 4 300 2 267 2 145 2 123 6 
239 16 480 8 101 2 148 4 685 10 72 4 456 4 391 2 169 11 317 2 689 11 267 6 344 6 585 10 462 27 517 2 369 24 400 2 371 4 62 16 744 6 348 6 271 11 766 6 331 10 216 8 257 2 186 14 218 6 578 2 
60 4 724 6 
18 2 
679 2 239 2 626 2 685 4 456 2 169 2 689 2 266 2 585 2 462 6 691 2 80 2 369 4 88 2 744 2 62 2 271 2 331 2 186 2 445 2 218 2 600 2 413 2 
369 12 239 8 371 2 580 4 62 8 466 4 271 4 328 2 299 2 331 5 511 6 169 4 689 4 585 4 462 14 186 8 591 6 
290 2 113 2 327 6 464 2 268 2 121 2 93 2 383 2 
313 2 426 2 350 2 
323 2 638 4 270 2 521 2 565 2 498 2 46 2 620 2 47 2 26 2 36 2 662 2 647 2 446 2 152 2 567 2 546 2 
369 6 239 4 753 8 62 4 348 4 271 2 331 3 169 2 689 2 267 4 585 2 462 7 357 6 186 4 393 4 219 2 
46 2 237 2 434 2 
636 2 294 2 582 2 573 2 94 2 118 22 672 2 119 2 292 2 609 2 302 2 444 2 677 2 209 10 
192 2 191 2 359 2 481 1 486 2 194 2 9 2 107 1 692 4 116 6 22 4 500 1 710 1 293 2 506 1 34 1 610 1 135 2 397 2 38 1 402 2 142 2 618 2 622 1 533 2 410 1 51 2 536 1 146 2 540 2 541 1 542 1 627 6 423 3 246 2 634 2 428 4 158 6 64 2 640 2 747 1 440 1 557 2 258 2 751 4 341 5 755 1 454 2 73 2 657 4 656 2 78 2 267 24 663 2 82 2 465 2 348 22 274 2 669 2 767 2 769 2 277 2 354 2 576 5 280 2 577 2 579 2 358 1 
482 2 
665 2 400 2 267 2 
598 2 253 2 267 4 
537 2 651 2 682 2 193 2 450 2 756 2 485 2 653 20 418 2 166 2 284 2 363 2 611 2 346 2 136 2 544 2 592 2 59 20 401 2 637 2 372 2 571 2 156 2 667 2 374 2 403 2 431 2 435 2 619 2 575 2 353 2 748 2 408 2 279 2 236 2 709 2 447 2 162 20 
712 1 512 2 632 2 199 2 
632 2 735 2 
46 2 190 2 632 2 72 2 259 2 340 2 561 2 
224 2 632 2 340 2 
367 2 632 2 340 2 
512 2 424 2 321 2 
632 2 340 2 
406 2 321 2 
632 2 131 2 
512 2 321 2 433 2 
286 2 555 2 512 2 
512 2 184 2 648 2 
316 2 512 2 182 2 
512 2 771 2 452 2 
167 2 
632 2 105 2 
286 2 586 2 
593 2 648 2 
316 2 106 2 
43 2 
332 2 321 2 
134 2 771 2 
316 2 484 2 
473 2 648 2 
286 2 763 2 
562 2 512 2 321 2 433 2 
562 2 512 2 765 2 321 2 433 2 
512 2 179 2 321 2 
352 2 512 2 321 2 
414 2 522 2 597 2 309 2 
630 2 321 2 
325 4 157 2 71 2 684 2 56 2 386 2 242 2 655 2 181 2 458 2 118 6 608 2 514 4 529 2 307 2 226 2 587 2 81 2 
512 2 502 2 
615 2 46 2 461 2 561 2 
615 2 46 2 461 2 259 2 711 2 561 2 
46 2 33 2 632 2 72 2 340 2 561 2 
723 2 478 2 
46 2 54 2 72 2 561 2 
316 2 5 2 
204 2 771 2 
286 2 649 2 
477 2 648 2 
771 2 298 2 648 2 
100 2 771 2 648 2 
652 2 771 2 648 2 
205 2 771 2 648 2 
606 2 364 2 460 2 368 4 370 2 90 6 46 2 561 2 
354 2 
192 2 486 6 540 2 243 2 9 2 627 6 246 6 491 2 692 4 634 2 251 2 495 2 64 2 116 4 640 2 22 4 557 2 258 2 751 4 713 2 129 2 657 4 73 2 454 2 656 2 34 2 78 2 267 16 135 2 663 2 82 2 83 4 397 2 465 2 400 2 402 2 348 16 231 2 523 2 533 2 280 6 577 2 579 2 51 2 
192 2 486 6 540 2 243 2 9 2 627 6 246 6 491 2 692 4 634 2 251 2 495 2 64 2 116 6 640 2 22 4 557 2 258 2 751 4 713 2 293 2 129 2 657 4 73 2 454 2 656 2 34 2 78 2 267 16 135 2 663 2 82 2 83 4 397 2 465 2 400 2 402 2 348 16 231 2 523 2 767 2 533 2 280 6 577 2 579 2 51 2 
535 2 695 2 
488 2 
1 2 53 2 4 2 416 8 479 10 540 2 196 2 197 2 420 4 627 4 285 2 206 4 493 2 543 2 247 2 692 2 635 6 494 4 64 2 21 2 640 2 641 6 120 2 254 2 707 4 65 8 66 2 646 2 122 4 338 6 69 2 559 2 449 2 603 2 508 2 654 2 656 2 453 2 657 2 510 2 516 4 267 12 171 2 82 2 229 4 398 2 518 2 39 2 402 2 178 2 348 6 349 2 670 2 470 2 276 2 674 2 530 2 533 2 49 2 411 4 
1 2 53 2 4 2 416 8 479 10 540 2 196 2 197 2 420 4 627 4 285 2 206 4 493 2 543 2 247 2 692 2 635 6 494 4 373 2 64 2 640 2 21 2 641 8 120 2 254 2 707 4 65 8 66 2 646 2 122 4 338 8 69 2 29 2 559 2 449 2 603 2 654 2 656 2 657 2 453 2 510 2 513 4 516 4 267 12 171 2 82 2 229 4 398 2 518 2 39 2 402 2 178 2 348 6 40 2 670 2 470 2 276 2 674 2 530 2 533 2 49 2 411 4 
229 4 635 2 398 2 53 2 4 2 178 2 603 2 21 2 206 2 120 2 516 2 707 4 674 2 543 2 49 2 122 2 338 2 449 2 
1 2 53 2 4 2 416 4 479 6 540 2 196 2 197 2 420 4 627 4 285 2 206 4 493 2 543 2 247 2 692 2 635 4 494 4 373 2 64 2 21 2 640 2 641 6 120 2 254 2 707 4 65 4 66 2 646 2 122 4 338 6 69 2 449 2 603 2 508 2 654 2 656 2 453 2 657 2 510 2 516 4 267 12 171 2 82 2 229 4 398 2 518 2 39 2 402 2 178 2 348 6 349 2 670 2 470 2 276 2 674 2 530 2 533 2 49 2 411 4 
1 2 53 2 4 2 416 4 479 6 540 2 196 2 197 2 420 4 627 4 285 2 206 4 493 2 543 2 247 2 692 2 635 6 494 4 291 2 64 2 21 2 640 2 641 6 120 2 254 2 707 4 65 4 66 2 646 2 122 4 338 4 69 2 449 2 603 2 508 2 654 2 656 2 453 2 657 2 510 2 516 4 267 12 171 2 82 2 229 4 398 2 518 2 39 2 402 2 178 2 348 6 349 2 670 2 470 2 276 2 674 2 530 2 533 2 49 2 411 4 
1 2 53 2 4 2 416 8 479 6 540 2 196 2 197 2 420 4 627 4 285 2 206 4 493 2 543 2 247 2 692 2 635 6 494 4 64 2 21 2 640 2 641 6 120 2 254 2 707 4 65 4 66 2 646 2 122 4 338 6 69 2 559 2 449 2 603 2 508 2 654 2 656 2 453 2 657 2 510 2 516 4 267 12 171 2 82 2 229 4 398 2 518 2 39 2 402 2 178 2 348 6 349 2 670 2 470 2 276 2 674 2 530 2 533 2 49 2 411 4 
1 2 53 2 4 2 416 8 479 10 540 2 196 2 197 2 420 4 627 4 285 2 206 4 493 2 543 2 247 2 692 2 635 8 494 4 291 2 64 2 21 2 640 2 641 8 120 2 254 2 707 4 65 8 66 2 646 2 122 4 338 6 69 2 559 2 449 2 603 2 508 2 654 2 656 2 453 2 657 2 510 2 516 4 267 12 171 2 82 2 229 4 398 2 518 2 39 2 402 2 178 2 348 6 349 2 670 2 470 2 276 2 674 2 530 2 533 2 49 2 411 4 
1 2 53 2 4 2 416 8 479 10 540 2 196 2 197 2 420 4 627 4 285 2 206 4 493 2 543 2 247 2 692 2 635 6 494 4 64 2 21 2 640 2 641 6 120 2 254 2 707 4 65 8 66 2 646 2 122 4 338 6 69 2 559 2 449 2 603 2 508 2 654 2 656 2 453 2 657 2 510 2 516 4 267 12 171 2 82 2 229 4 398 2 518 2 39 2 402 2 178 2 348 6 349 2 670 2 470 2 276 2 674 2 530 2 533 2 49 2 411 4 
1 2 4 2 281 2 192 2 486 6 196 2 197 2 9 2 203 2 202 2 285 2 206 4 493 2 692 4 110 2 494 6 291 4 116 6 21 2 703 2 22 4 120 2 24 2 706 2 707 4 122 4 713 2 293 2 603 2 129 2 510 2 607 2 516 4 135 2 397 4 229 4 518 2 398 2 39 2 402 2 519 2 231 2 530 2 732 2 234 2 49 2 533 2 411 8 51 2 53 2 416 2 736 2 540 2 243 2 420 4 627 6 246 6 543 2 247 2 634 2 635 8 430 2 158 2 64 2 640 2 641 12 254 2 557 2 335 2 646 2 258 2 751 4 338 4 449 2 341 2 654 2 454 2 453 2 73 2 657 4 656 2 78 2 267 28 171 2 345 2 172 2 663 2 82 2 83 4 84 4 465 2 570 2 178 2 348 18 764 2 349 2 767 2 470 4 276 2 674 2 576 2 280 8 577 2 579 2 
1 2 0 2 2 6 4 2 192 2 581 2 196 2 197 2 198 2 9 2 200 6 202 2 203 2 10 6 206 4 16 6 211 2 212 1 21 2 22 4 24 2 599 2 382 1 601 2 603 2 388 2 605 1 607 4 229 4 397 12 396 1 398 2 399 2 402 2 39 2 231 2 42 2 49 2 234 2 411 8 412 7 51 2 53 2 416 6 420 4 243 2 627 6 246 6 247 2 58 1 634 2 635 8 250 2 430 2 64 2 640 2 641 12 642 2 644 6 253 6 254 2 441 1 646 2 66 2 258 2 69 2 449 2 654 2 656 2 657 4 73 2 453 2 454 2 659 1 660 6 78 2 267 46 663 2 82 2 83 4 84 4 664 2 465 2 665 6 670 2 470 4 276 2 474 2 674 2 278 6 280 8 479 2 281 2 482 6 486 6 285 2 493 2 692 4 110 2 111 6 494 6 116 6 703 10 120 2 707 4 706 2 708 2 122 4 713 4 293 2 128 6 129 2 510 2 516 4 135 2 518 2 138 1 519 4 520 2 526 6 530 2 732 8 533 2 534 4 540 2 736 2 739 2 543 2 158 2 333 2 556 2 557 2 335 2 751 4 558 7 338 8 559 4 341 2 758 1 168 2 170 6 172 4 345 2 171 4 174 2 569 6 178 2 570 6 348 24 764 2 349 2 767 2 572 2 183 2 576 2 772 6 577 2 579 2 
0 2 1 2 2 6 4 2 479 6 281 2 192 2 581 2 482 6 486 6 196 2 197 2 198 2 9 2 200 6 10 6 203 2 202 2 285 2 206 4 493 2 692 4 110 2 111 6 16 6 494 6 211 2 116 6 21 2 703 10 22 4 120 2 24 2 706 2 707 4 708 2 599 2 122 4 601 2 713 4 293 2 128 6 603 2 129 2 388 2 510 2 607 4 516 4 135 2 397 12 229 4 518 2 398 2 399 2 39 2 402 2 519 4 520 2 231 2 42 2 526 6 530 2 732 8 234 2 49 2 533 2 534 4 411 8 51 2 53 2 416 6 736 2 540 2 243 2 420 4 739 2 627 6 246 6 543 2 247 2 634 2 250 2 635 8 430 2 158 2 64 2 640 2 641 12 642 2 644 6 333 2 556 2 253 6 254 2 65 4 557 2 66 2 335 2 646 2 258 2 751 4 338 8 69 2 559 4 449 2 341 2 654 2 453 2 454 2 73 2 657 4 656 2 168 2 660 6 170 6 78 2 267 46 171 4 345 2 172 4 174 2 663 2 82 2 83 4 664 2 84 4 665 6 465 2 569 6 570 6 178 2 348 24 764 2 349 2 670 2 572 2 767 2 470 4 276 2 474 2 183 2 674 2 576 2 772 6 278 6 280 8 577 2 579 2 
0 2 1 2 2 6 4 2 479 4 281 2 192 2 581 2 482 6 486 8 196 2 197 2 198 2 9 2 200 6 10 6 203 2 202 2 285 2 206 4 493 2 692 4 111 6 16 6 494 6 291 2 211 2 373 2 116 6 21 2 703 8 22 4 120 2 25 2 24 2 706 2 707 4 708 2 599 2 122 4 601 2 713 4 293 2 128 6 603 2 129 2 388 2 510 2 607 4 516 4 135 2 397 10 229 4 518 2 398 2 399 2 39 2 402 2 519 4 520 2 231 2 42 2 526 6 530 2 732 8 310 2 234 2 533 2 49 2 534 4 411 8 51 2 53 2 416 6 540 2 736 2 419 2 243 2 420 4 739 2 627 6 246 8 543 2 247 2 634 2 250 2 635 10 430 2 549 2 158 4 329 2 64 2 640 2 641 16 642 2 644 6 333 2 556 2 253 6 254 2 65 4 557 2 335 2 646 2 258 2 751 4 338 10 752 2 559 4 449 2 341 4 654 2 453 2 454 2 73 2 657 4 656 2 168 2 660 6 170 6 78 2 267 44 171 2 345 2 172 4 174 2 663 2 82 2 83 6 664 2 84 4 665 6 465 2 569 6 570 6 178 2 348 22 764 2 349 2 572 2 767 2 470 4 276 2 474 2 183 2 674 2 576 4 772 6 278 6 280 12 577 2 579 2 
1 2 53 2 479 4 416 6 654 2 196 2 453 2 420 2 510 2 285 2 516 4 267 4 543 2 493 2 229 2 635 6 494 2 518 2 398 2 39 2 178 2 349 2 21 2 641 4 470 2 276 2 707 2 65 4 646 2 49 2 411 2 122 4 338 6 559 2 449 2 
1 2 479 2 192 2 486 6 196 2 9 2 285 2 493 2 692 4 589 2 110 2 494 2 700 2 116 6 21 2 703 2 22 4 707 2 501 2 122 4 713 2 293 2 127 2 129 2 510 2 223 2 32 2 516 4 135 2 229 2 397 4 398 2 518 2 402 2 39 2 231 2 533 2 49 2 411 2 51 2 53 2 416 6 540 2 420 2 243 2 627 6 246 6 247 2 543 2 634 2 635 6 61 3 158 3 64 2 640 2 641 4 553 2 749 2 557 2 646 2 258 2 751 4 338 6 559 2 449 2 341 3 654 2 453 2 657 4 454 2 73 2 656 2 78 2 267 28 663 2 82 2 83 4 465 2 178 2 348 24 349 2 767 2 470 2 276 2 354 2 576 3 280 8 577 2 579 2 
493 2 30 2 510 2 
493 2 30 2 510 2 
4 2 479 6 680 2 281 2 192 2 681 2 486 2 360 2 196 2 197 2 9 2 206 4 493 4 692 4 16 2 494 4 291 4 594 2 373 4 116 6 21 2 703 2 22 4 120 2 707 2 122 4 713 6 293 2 129 2 30 2 510 6 607 4 516 4 135 2 613 2 397 4 229 2 402 2 519 4 404 2 306 4 530 2 533 2 49 4 409 2 534 2 411 4 51 2 416 6 734 2 540 2 243 2 420 2 627 6 246 2 427 2 634 2 153 2 635 12 430 2 326 2 158 2 64 2 640 2 641 16 642 4 746 2 557 2 65 4 258 2 751 4 260 2 338 12 69 2 448 2 559 4 754 4 654 2 656 2 454 2 73 2 657 4 658 2 78 2 267 24 171 2 172 4 663 2 82 2 84 2 86 2 465 2 570 4 178 2 89 2 348 16 273 4 670 4 767 2 470 4 475 2 280 2 577 2 579 2 
397 2 16 2 139 2 681 2 603 2 348 2 764 2 330 2 640 2 703 2 255 2 267 4 475 2 174 2 534 2 695 2 448 2 
4 2 479 6 281 2 192 2 681 2 486 2 360 2 196 2 197 2 9 2 206 4 493 4 692 4 16 2 494 4 291 4 373 4 116 6 21 2 22 4 120 2 707 2 28 2 122 4 713 6 293 2 129 2 30 2 510 6 607 4 516 4 135 2 397 2 229 2 402 2 519 4 404 4 306 4 530 2 533 2 49 4 411 4 51 2 416 6 734 2 540 2 420 2 243 2 627 6 246 2 425 2 427 2 634 2 153 2 635 12 430 2 326 2 158 4 64 2 640 2 641 16 642 4 746 2 557 2 65 4 66 2 67 2 258 2 751 4 260 2 338 12 69 2 448 2 559 4 754 4 654 2 656 2 454 2 73 2 657 4 658 2 78 2 267 24 79 2 171 4 172 4 663 2 82 2 84 2 86 2 465 2 570 4 178 2 89 2 348 16 273 4 670 4 767 2 467 2 470 4 475 2 280 2 577 2 579 2 
4 2 479 6 281 2 192 2 681 2 486 2 360 2 196 2 197 2 9 2 206 4 493 4 692 4 288 2 16 2 494 4 291 4 373 4 116 6 21 2 703 2 22 4 120 2 707 2 122 4 713 6 293 2 129 2 30 2 510 6 607 4 516 4 135 2 725 2 397 4 229 2 402 2 519 4 617 2 404 2 306 4 530 2 533 2 49 4 534 2 411 4 51 2 416 6 734 2 540 2 243 2 420 2 627 6 246 2 427 2 634 2 153 2 635 12 430 2 326 2 158 2 64 2 640 2 641 16 642 4 746 2 334 2 557 2 65 4 66 2 258 2 751 4 260 2 338 12 69 2 448 2 559 4 754 4 654 2 656 2 454 2 73 2 657 4 658 2 78 2 267 24 171 4 172 4 663 2 82 2 84 2 86 2 465 2 570 4 178 2 89 2 348 16 273 4 92 2 670 4 767 2 470 4 475 2 280 2 577 2 579 2 
580 4 192 2 7 2 195 2 486 12 9 2 202 2 365 2 689 2 287 2 585 2 366 2 491 2 492 18 109 2 692 4 590 2 591 6 112 4 369 6 210 2 213 6 698 6 495 2 20 2 376 2 377 2 116 4 701 2 702 2 215 2 22 2 706 2 24 2 217 4 599 10 218 4 220 4 124 6 601 10 125 2 385 2 713 2 293 2 127 2 714 2 222 1 297 6 132 2 509 2 223 2 390 4 389 2 32 2 34 2 515 2 225 2 228 2 135 2 721 2 612 4 394 2 303 2 397 2 400 2 402 2 230 2 140 4 231 2 523 2 143 6 527 2 729 4 621 2 308 4 407 2 531 2 623 2 533 2 234 2 50 2 539 2 239 4 733 2 417 2 540 2 243 2 739 2 244 2 315 10 627 6 246 12 150 4 319 2 634 2 154 2 61 2 251 2 62 4 63 24 158 6 64 2 252 2 551 2 159 2 640 2 642 4 331 4 553 2 554 6 442 6 161 2 335 2 258 2 751 2 560 10 164 2 163 2 262 2 341 6 70 2 657 4 73 2 656 2 343 2 759 2 169 2 75 2 267 28 345 2 462 8 463 6 663 2 82 2 83 10 175 2 85 4 465 2 570 22 348 22 271 2 272 2 351 2 180 2 767 2 671 18 97 4 576 6 675 2 185 6 186 4 476 8 280 18 577 2 579 2 
625 2 221 2 341 3 486 2 457 2 741 2 628 2 246 2 267 2 761 3 13 4 83 2 289 2 87 2 727 2 348 2 231 2 158 3 233 2 439 2 576 3 532 2 280 2 601 6 
289 2 625 2 221 2 87 2 727 2 348 2 341 2 231 2 158 2 486 2 457 2 233 2 628 2 741 2 246 2 267 2 439 2 576 2 13 4 532 2 761 2 280 2 83 2 601 6 
289 2 625 2 221 2 87 2 727 2 348 2 341 2 231 2 158 2 486 2 457 2 233 2 628 2 741 2 246 2 267 2 439 2 576 2 13 4 532 2 761 2 280 2 83 2 601 6 
239 2 240 2 312 4 483 3 149 4 738 4 201 2 687 2 689 2 585 2 208 2 155 2 369 4 17 2 62 2 158 3 643 2 214 2 256 4 68 6 503 2 505 4 457 2 716 3 717 2 169 2 267 10 344 4 462 6 173 2 304 2 348 4 231 2 271 2 766 2 468 2 576 3 186 2 280 2 52 3 
239 2 240 2 312 4 483 2 149 4 738 4 201 2 687 2 689 2 585 2 208 2 155 2 369 4 17 2 62 2 158 2 643 2 331 2 214 2 256 4 68 6 218 2 503 2 505 4 457 2 716 2 717 2 169 2 267 10 344 4 462 4 173 2 304 2 348 4 231 2 271 2 766 2 468 2 576 2 186 2 676 2 280 2 52 2 
239 2 240 2 312 4 483 2 149 4 738 4 201 2 687 2 689 2 585 2 208 2 155 2 369 4 17 2 62 2 158 2 643 2 331 2 214 2 256 4 68 6 218 2 503 2 505 4 457 2 716 2 717 2 169 2 267 10 344 4 462 4 173 2 304 2 348 4 231 2 271 2 766 2 468 2 576 2 186 2 676 2 280 2 52 2 
239 2 240 2 483 2 716 2 457 2 267 4 344 2 462 2 173 2 208 2 155 2 369 2 17 2 62 2 348 2 231 2 158 2 766 2 468 2 331 2 643 2 576 2 186 2 280 2 68 2 52 2 
239 2 240 2 483 2 716 2 457 2 267 4 344 2 462 2 173 2 208 2 155 2 369 2 17 2 62 2 348 2 231 2 158 2 766 2 468 2 331 2 643 2 576 2 186 2 280 2 68 2 52 2 
548 2 189 2 230 2 320 2 455 2 336 2 
3 2 77 2 189 2 760 2 227 2 698 2 235 2 
113 1 305 2 314 2 348 8 699 2 241 2 103 1 540 2 596 2 564 2 728 2 144 2 392 1 207 1 267 10 490 2 355 2 443 2 121 1 347 2 322 2 
743 2 369 6 239 4 580 2 62 4 140 2 271 2 766 2 331 3 169 2 689 2 225 2 344 2 585 2 462 7 186 4 109 2 591 4 
384 1 261 2 563 2 312 2 348 1 165 2 496 2 149 2 469 4 738 2 524 2 566 2 686 2 117 2 645 2 267 1 151 2 311 7 
261 2 563 4 312 2 165 4 496 2 149 2 469 4 738 2 524 2 566 2 686 4 117 2 645 2 151 2 311 6 
384 1 261 6 563 8 312 2 348 1 165 8 496 8 149 2 469 4 738 2 524 2 566 2 686 8 117 2 645 2 267 1 151 2 311 10 
563 2 312 2 165 2 149 2 469 2 738 2 524 2 566 2 686 2 117 2 645 2 151 2 311 2 
99 2 192 4 282 4 361 2 11 2 489 3 690 2 588 1 693 2 15 2 696 6 114 2 115 2 375 2 116 20 22 12 705 2 27 4 504 6 126 2 293 2 715 2 130 2 301 2 720 2 722 2 37 2 137 2 616 6 400 2 44 4 528 2 48 2 731 2 238 2 415 2 538 2 740 2 422 2 245 2 57 2 631 2 633 2 248 2 634 2 545 16 547 2 324 2 745 2 550 4 552 2 750 2 751 10 650 2 264 2 265 2 459 4 267 32 663 4 568 2 762 2 348 30 91 2 668 2 275 2 767 2 770 2 98 2 188 2 
192 2 6 4 487 2 8 10 740 6 422 6 245 2 584 2 489 2 742 4 634 2 429 6 545 14 547 2 324 2 116 36 552 2 704 4 22 14 378 2 160 2 381 2 751 14 337 2 293 8 295 4 296 2 602 4 263 2 715 2 507 2 451 2 757 10 31 2 718 2 459 2 301 2 719 2 267 28 661 2 663 2 137 2 176 2 726 6 614 4 177 2 616 8 762 6 141 2 348 26 91 2 767 8 768 2 95 4 528 2 472 2 356 2 731 2 98 2 187 4 238 2 678 2 
538 2 415 2 192 6 6 2 8 2 740 2 11 2 422 2 245 2 690 2 108 2 631 2 693 4 15 2 634 4 694 2 429 2 545 4 696 4 547 2 324 2 114 2 115 2 745 2 375 2 116 26 552 2 704 2 22 14 27 2 381 1 751 12 504 4 293 6 650 2 295 2 602 2 507 2 264 2 451 1 757 2 265 2 31 2 459 2 76 2 267 30 663 6 726 1 614 2 176 2 400 2 616 6 762 2 348 28 91 2 668 2 767 6 275 2 770 2 731 2 98 2 187 2 624 2 678 1 
192 2 683 2 55 2 362 2 583 2 421 2 740 2 245 2 422 2 688 2 318 2 14 2 634 2 545 18 547 2 324 2 19 2 697 4 639 4 116 30 552 2 436 2 22 12 437 2 499 2 438 2 23 2 380 2 379 2 751 12 339 2 293 6 295 2 387 2 74 2 133 4 301 2 267 28 35 2 663 2 395 2 137 2 614 2 616 2 666 2 762 2 269 2 348 28 91 2 767 6 574 2 45 2 96 2 471 2 673 2 730 2 731 2 98 2 187 2 
12 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.NullPointerException 226 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.ClassCastException 
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR utilMDE.Assert$AssertionException (113,396) (113,396) 
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (113,396) (113,396) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 358 
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V ERROR java.lang.NullPointerException 226 57 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 358 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 358 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 358 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 358 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 358 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 358 364 253 259 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 40 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR utilMDE.Assert$AssertionException (113,396) (113,396) (20,22,43,126,150,257,354) 195 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 53 101 187 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 53 101 187 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 53 101 187 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 53 101 187 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaCharStream:getBeginColumn()I
daikon.ValueTuple:isMissing(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Intern:intern([I)[I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:setDiff([I[I)[I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:getConfidence()D
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:modulus([I)[I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Intern:intern([J)[J
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 23040 | = null
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1007 | = null
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Intern:numIntArrays()I
daikon.Quant:noDups([I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.MathMDE:sign(I)I
daikon.ModBitTracker:split(I)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:concat([I[I)[I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:eq(FF)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:slice([III)[I
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaCharStream:FillBuff()V
daikon.Quant:subsetOf([F[D)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaCharStream:ReadByte()C
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | CONDITION | 9913 | if (x) -> if (!x)
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:memberOf(F[D)Z
daikon.Quant:eq(II)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:sameLength([I[I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.WeakHasherMap:size()I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:setEqual([I[I)Z | STATEMENT | 155062 | stmt -> ;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 5656 | = null
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaCharStream:backup(I)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:max([I)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(F[F)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:memberOf(I[I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 20834 | = null
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:lt(II)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:gte(II)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.ProglangType:dimensions()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_3_16()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2146 | = null
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaCharStream:getBeginLine()I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:lexGT([I[I)Z
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaCharStream:BeginToken()C
daikon.Quant:lexLTE([I[I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:memberOf(J[J)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_2_16(I)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.ArraysMDE:noDuplicates([I)Z | ASSIGN | 57082 | = null
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:eltsEqual([II)Z
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:lte(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I | CONSTANT | 21933 | 99 -> 1
daikon.Quant:subsetOf([D[F)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | RETURN | 37622 | return null
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoAux:hashCode()I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.MathMDE:negate(I)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.MathMDE:pow(II)I
daikon.Quant:lexLT([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:logOn()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | CONDITION | 7988 | if (x) -> if (!x)
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.ArraysMDE:sum([I)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:ne(II)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:eq(DD)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eltsLteIndex([I)Z | CONDITION | 178697 | if (x) -> if (!x)
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:eq(JJ)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V | CONDITION | 534 | if (x) -> if (!x)
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:memberOf(S[S)Z
daikon.Quant:eltsGT([II)Z
daikon.PptSlice0:arity()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:eltsLT([II)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaCharStream:readChar()C
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:eltsLTE([II)Z
daikon.ModBitTracker:num_samples()I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ModBitTracker:num_vars()I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:gt(II)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel; | ASSIGN | 1586 | = null
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName:hashCode()I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:memberOf(D[F)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.MathMDE:gcd([I)I
daikon.ModBitTracker:num_sets()I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:sorted([I)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:jj_ntk()I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.ValueTuple:size()I
utilMDE.WeakHasherMap:processQueue()V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaCharStream:getEndLine()I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Debug:logOn()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:element_range([I)I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:intersection([I[I)[I
daikon.Quant:union([I[I)[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
321 2 135 2 401 2 286 2 370 2 371 2 356 2 31 2 7 2 32 4 208 2 87 2 124 2 420 2 327 2 226 2 424 2 297 2 114 2 15 2 425 2 74 2 
162 4 396 4 76 4 257 8 137 8 150 4 354 2 289 8 389 4 157 4 113 4 186 9 19 4 161 4 133 4 302 8 
114 2 407 2 16 2 
192 2 402 2 2 2 165 2 200 2 391 2 170 2 225 10 227 2 382 2 73 22 190 2 303 2 328 2 
76 2 237 2 279 4 355 2 157 2 186 6 56 2 161 2 133 2 115 2 162 2 116 2 289 5 389 2 45 2 173 2 71 2 21 2 20 2 19 2 302 4 
76 8 126 4 79 2 378 2 357 8 129 2 157 8 282 1 186 18 161 8 133 8 162 8 289 9 389 8 47 1 19 8 302 16 376 8 22 4 
99 2 234 2 273 2 77 4 204 2 179 2 403 4 278 14 54 2 353 10 104 4 312 2 407 2 317 4 32 4 8 2 33 2 111 4 12 2 188 4 366 2 114 8 59 2 250 2 212 2 285 4 412 4 38 2 386 2 286 2 194 2 16 6 222 2 419 10 292 4 420 4 46 4 172 4 96 2 231 62 
28 2 106 2 393 2 
85 2 396 2 308 2 41 2 113 2 269 2 268 4 346 2 74 2 
348 6 175 2 142 6 24 2 276 2 143 6 338 2 27 2 103 2 262 2 387 2 
396 2 147 2 330 6 413 2 334 2 290 6 199 2 169 2 113 2 421 2 319 6 410 4 37 6 75 2 
0 4 396 4 162 6 51 2 76 6 79 2 279 8 219 2 289 12 389 6 157 6 169 2 55 4 113 4 186 13 18 2 20 4 19 6 161 6 133 6 302 12 
69 6 246 4 
148 2 
322 2 113 2 
293 2 113 4 381 2 
62 2 
396 2 213 2 52 4 400 2 258 2 180 2 288 6 313 2 154 2 122 2 358 2 181 2 131 2 344 2 361 4 113 2 90 2 
145 8 100 40 331 40 205 40 102 2 206 12 151 10 380 4 9 12 110 4 11 2 159 12 283 2 14 12 214 10 117 4 63 2 216 2 118 6 164 8 119 16 221 4 64 2 167 2 168 4 294 2 224 10 171 2 125 18 345 10 174 2 230 2 301 2 305 4 397 6 25 4 399 6 177 4 351 2 352 4 310 10 404 12 127 12 30 6 239 2 130 8 83 12 359 12 243 2 184 6 36 6 189 12 249 2 42 2 368 2 369 2 324 2 416 4 261 2 197 2 44 12 372 4 417 8 265 2 418 2 326 12 267 2 48 2 97 2 
109 2 146 2 390 2 275 1 422 2 270 2 114 2 219 2 
121 2 
109 2 146 2 272 2 
112 2 296 2 300 2 
109 2 146 2 
300 2 232 2 
109 2 93 2 
112 2 300 2 123 2 
318 2 156 2 112 2 
112 2 349 2 409 2 
112 2 202 2 238 2 
112 2 153 2 395 2 
332 2 300 2 
335 2 109 2 
156 2 132 2 
349 2 374 2 
333 2 238 2 
68 2 153 2 
300 2 72 2 
223 2 153 2 
263 2 238 2 
307 2 
156 2 160 2 
112 2 373 2 300 2 123 2 
112 2 373 2 300 2 140 2 123 2 
112 2 152 2 300 2 
112 2 300 2 271 2 
350 2 5 2 89 2 228 2 
66 2 270 2 114 2 284 2 
390 2 66 2 423 2 270 2 114 2 284 2 
109 2 146 2 23 2 270 2 114 2 219 2 
226 2 57 2 
95 2 270 2 114 2 219 2 
238 2 315 2 
300 2 220 2 
360 2 153 2 
156 2 320 2 
336 2 349 2 
274 2 349 2 153 2 
207 2 349 2 153 2 
349 2 203 2 153 2 
349 2 153 2 329 2 
176 2 84 2 86 2 114 2 415 6 287 2 343 6 270 2 
191 4 309 2 138 2 217 2 414 2 3 2 240 2 314 2 108 2 295 2 363 2 70 2 211 2 58 2 73 6 377 2 98 2 304 4 
112 2 340 2 
109 2 112 2 392 2 
109 2 149 2 
229 2 
396 2 213 2 306 2 52 4 400 2 180 2 288 4 313 2 122 2 358 2 181 2 131 2 344 2 361 4 113 2 
396 2 213 2 306 2 52 4 400 2 258 2 180 2 288 6 313 2 154 2 122 2 358 2 181 2 131 2 344 2 361 4 113 2 
26 2 94 2 196 2 
26 2 94 2 196 2 
396 2 213 2 306 2 52 4 400 2 258 2 180 2 288 6 313 2 154 2 122 2 358 2 181 2 131 2 344 2 361 4 113 2 
252 2 396 2 385 2 236 2 277 2 280 2 81 2 406 2 316 2 325 2 242 2 17 2 362 2 113 4 35 2 144 2 394 2 
396 2 213 2 306 2 52 4 400 2 258 2 180 2 288 6 313 2 154 2 122 2 358 2 181 2 131 2 344 2 361 4 113 2 
396 2 213 2 306 2 52 4 400 2 258 2 180 2 288 6 313 2 154 2 122 2 358 2 181 2 131 2 344 2 361 4 113 2 
235 2 396 2 78 2 52 2 400 2 180 2 28 1 82 1 107 2 313 2 154 1 358 2 158 2 244 2 209 2 361 2 113 6 364 2 13 1 253 2 163 2 215 2 258 1 259 2 260 2 288 3 122 2 198 2 342 2 264 2 65 2 266 2 393 1 347 2 
241 2 210 2 40 2 218 2 128 2 248 2 
233 2 291 2 256 2 408 2 218 2 29 2 384 2 
50 1 396 8 273 1 204 1 398 2 4 2 281 1 155 2 10 2 337 2 113 10 185 2 365 1 339 2 367 2 383 2 411 2 60 2 254 2 255 2 39 2 193 2 92 2 388 2 67 2 201 2 
396 2 76 6 178 2 80 1 150 2 311 2 6 2 157 6 182 2 113 2 186 16 161 6 247 2 133 6 251 4 162 6 257 2 137 4 195 2 43 2 289 3 341 2 389 6 169 2 47 1 19 6 376 4 302 12 49 2 22 2 426 2 
396 1 134 2 136 2 1 1 91 2 139 4 405 2 323 2 120 7 379 2 141 2 166 2 113 1 88 2 183 2 298 2 375 2 299 2 
134 2 136 2 91 2 139 4 405 2 323 2 120 6 379 2 141 2 166 2 88 4 183 2 298 2 375 4 299 4 
396 1 134 2 136 2 1 1 91 2 139 4 405 6 323 2 120 10 379 8 141 2 166 2 113 1 88 8 183 2 298 2 375 8 299 8 
134 2 136 2 91 2 139 2 323 2 120 2 141 2 166 2 88 2 183 2 298 2 375 2 299 2 
52 2 53 2 101 2 105 1 113 4 61 2 288 2 122 2 396 4 400 2 180 2 34 1 361 2 187 2 
396 4 52 2 400 2 61 2 53 2 258 2 101 2 180 2 288 4 154 2 122 2 361 2 113 4 187 2 
396 4 52 2 400 2 61 2 53 2 258 2 101 2 180 2 288 4 154 2 122 2 361 2 113 4 187 2 
396 4 52 2 400 2 61 2 53 2 101 2 180 2 288 2 122 2 361 2 113 4 187 2 
245 2 

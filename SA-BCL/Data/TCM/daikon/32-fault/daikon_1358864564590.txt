#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (51,196) (51,196) 225 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 194 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V ERROR java.lang.NullPointerException 194 
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 83 396 285 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V ERROR utilMDE.Assert$AssertionException (51,196) 49 
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 177 319 31 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (0,65) (0,65) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 83 396 285 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 83 396 285 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 83 396 285 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 83 396 285 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 83 396 285 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.StringIndexOutOfBoundsException 333 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 5 211 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 375 179 214 283 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 321 131 16 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 321 131 16 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 17 28 321 131 16 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 321 131 16 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName:esc_name()Ljava.lang.String; | RETURN | 7456 | return null
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:isReverse([I[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.Invariants:Invariants()V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:eltsLTE([II)Z
utilMDE.MathMDE:gcd(II)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndLine()I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.Invariant:prob_and(DD)D | CONSTANT | 8716 | 1 -> -1
daikon.VarInfoName:hashCode()I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 183341 | = null
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:eltwiseGT([I)Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType; | RETURN | 5873 | return null
daikon.Quant:eltsLT([II)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:element_range([I)I
daikon.Ppt:Ppt()V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.MathMDE:pow(II)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaCharStream:readChar()C | OPERATOR | 5855 | == -> <=
daikon.Quant:ne(II)Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.ArraysMDE:sum([I)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:subsetOf([B[I)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.PptSlice0:arity()I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:eq(JJ)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.ArraysMDE:min([I)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ProglangType:dimensions()I
daikon.Quant:setDiff([I[I)[I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator; | ASSIGN | 2309 | = null
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V | ASSIGN | 746 | = null
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:sameLength([I[I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:union([I[I)[I
daikon.Quant:memberOf(I[I)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:eltsGT([II)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:lexLTE([I[I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 64304 | return null
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:concat([I[I)[I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | OPERATOR | 4206 | > -> ==
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:gt(II)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:noDups([I)Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:lt(II)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:slice([III)[I
daikon.Quant:subsetOf([J[J)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
utilMDE.Intern:numIntArrays()I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:sign(I)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 9730 | = null
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:lexLT([I[I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:eltwiseLTE([I)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaCharStream:BeginToken()C
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Intern:intern([J)[J
jtb.JavaParser:jj_ntk()I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.ArraysMDE:min_max([I)[I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V | STATEMENT | 9545 | stmt -> ;
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
jtb.JavaCharStream:backup(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.InvariantFormatTester:execute()Z | CONSTANT | 5806 | 1 -> 0
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:gte(II)Z
daikon.Quant:lte(II)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:ReadByte()C
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern:intern([I)[I | RETURN | 15863 | return null
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ValueTuple:size()I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexGTE([I[I)Z
jtb.JavaCharStream:FillBuff()V
utilMDE.WeakHasherMap.EntrySet:size()I | STATEMENT | 15721 | stmt -> ;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.MathMDE:mod_positive(II)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:eltsEqual([II)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
51 2 82 2 196 2 78 2 262 2 98 4 376 2 132 2 113 2 
210 2 145 6 394 2 308 6 360 2 189 2 348 2 300 2 311 2 105 2 182 6 
51 2 320 6 322 2 345 4 295 6 196 2 270 2 94 6 386 2 282 6 36 2 263 4 150 2 
51 2 251 4 1 7 196 2 240 2 216 4 163 2 315 4 339 4 101 2 272 2 361 6 370 4 372 6 237 2 363 2 291 2 266 2 225 2 
218 4 139 6 
193 2 
366 2 1 6 240 2 216 2 85 2 163 2 86 2 33 2 272 2 370 2 372 4 385 2 173 2 18 2 257 2 315 2 339 2 23 2 361 4 363 2 
251 5 1 14 401 2 240 4 216 8 367 6 324 4 163 4 403 2 315 8 339 8 272 4 372 12 104 6 363 4 291 2 39 4 
41 6 398 2 54 2 357 2 56 2 84 2 198 2 388 2 125 2 61 2 271 2 103 2 194 2 
238 2 246 2 351 2 193 2 252 2 95 2 19 2 102 2 148 2 205 2 
51 4 209 2 54 2 215 2 325 4 60 2 7 2 62 2 12 2 374 2 376 2 377 2 223 2 168 2 117 2 14 2 68 4 119 2 69 4 174 2 72 2 390 2 178 2 233 2 77 2 80 2 127 4 294 2 292 2 29 2 130 2 393 2 186 2 306 2 355 2 196 4 93 2 96 2 309 2 43 2 402 2 256 2 147 2 408 2 
51 4 1 25 240 8 216 16 367 6 324 4 163 8 302 2 272 8 372 24 370 4 39 4 280 2 228 8 251 10 196 4 97 2 255 4 315 16 339 16 361 6 363 8 104 6 149 6 106 2 266 6 
194 2 
15 2 156 10 195 2 309 2 162 2 199 2 337 2 188 2 343 2 395 2 181 22 267 2 305 2 152 2 
51 8 157 2 13 2 330 2 231 2 124 5 71 2 285 2 286 2 341 2 75 2 81 4 392 2 83 2 243 2 35 2 38 2 396 2 138 1 140 4 196 8 404 1 144 2 362 2 407 2 268 2 50 4 
219 2 
51 2 406 2 
51 2 237 2 49 2 
154 2 141 2 384 2 122 4 31 2 350 2 58 2 44 2 59 2 232 2 368 2 177 2 303 2 327 2 164 2 47 2 100 2 328 4 276 2 265 2 364 2 278 2 293 2 319 2 
115 2 316 1 213 2 137 2 
115 2 116 2 
227 2 115 2 54 2 135 2 222 2 387 2 4 2 
115 2 222 2 133 2 
115 2 222 2 245 2 
213 2 123 2 32 2 
115 2 222 2 
399 2 123 2 
115 2 8 2 
332 2 213 2 123 2 
10 2 352 2 213 2 
239 2 201 2 213 2 
358 2 213 2 353 2 
250 2 213 2 129 2 
317 2 123 2 
115 2 203 2 
314 2 352 2 
284 2 239 2 
353 2 67 2 
250 2 344 2 
9 2 123 2 
250 2 346 2 
183 2 353 2 
239 2 45 2 
405 2 352 2 
332 2 109 2 213 2 123 2 
332 2 109 2 213 2 123 2 313 2 
400 2 213 2 123 2 
213 2 123 2 176 2 
281 2 34 2 287 2 397 2 
369 2 187 2 296 2 37 2 334 2 161 2 254 4 151 2 
259 2 213 2 
54 2 234 2 26 2 4 2 
227 2 54 2 234 2 221 2 26 2 4 2 
115 2 54 2 222 2 387 2 192 2 4 2 
233 2 244 2 
54 2 387 2 253 2 4 2 
353 2 224 2 
6 2 250 2 
352 2 76 2 
239 2 40 2 
250 2 239 2 277 2 
250 2 239 2 226 2 
20 2 250 2 239 2 
250 2 383 2 239 2 
0 2 54 2 4 2 142 2 165 2 65 6 
342 2 123 2 
200 2 
51 8 157 2 83 2 243 2 35 2 38 2 13 2 330 2 396 2 140 4 231 2 196 8 124 4 71 2 144 2 285 2 286 2 341 2 75 2 362 2 407 2 268 2 81 4 50 4 365 2 
51 8 157 2 13 2 330 2 231 2 124 6 71 2 285 2 286 2 341 2 75 2 81 4 83 2 243 2 35 2 38 2 396 2 138 2 140 4 196 8 404 2 144 2 362 2 407 2 268 2 365 2 50 4 
64 2 184 2 379 2 
64 2 184 2 379 2 
51 8 157 2 13 2 330 2 231 2 124 5 71 2 285 2 286 2 341 2 75 2 81 4 83 2 243 2 35 2 38 2 396 2 138 1 140 4 196 8 404 1 144 2 362 2 407 2 268 2 365 2 50 4 
51 8 157 2 13 2 330 2 231 2 124 6 71 2 285 2 286 2 341 2 75 2 81 4 83 2 243 2 35 2 38 2 396 2 138 2 140 4 196 8 404 2 144 2 362 2 407 2 268 2 365 2 50 4 
51 8 157 2 13 2 330 2 231 2 124 5 71 2 285 2 286 2 341 2 75 2 81 4 83 2 243 2 35 2 38 2 396 2 138 1 140 4 196 8 404 1 144 2 362 2 407 2 268 2 365 2 50 4 
333 2 
211 2 5 2 
249 2 307 2 229 2 166 2 349 2 204 2 329 2 
51 4 323 1 381 2 108 1 196 4 214 2 84 1 283 2 326 2 125 1 179 2 236 2 375 2 90 1 330 2 354 2 331 2 
51 6 1 15 240 6 216 6 367 4 163 6 393 2 302 1 87 2 272 6 372 12 374 2 39 2 92 2 228 2 42 2 382 4 251 2 196 6 120 2 255 2 312 2 258 2 315 6 339 6 318 2 363 6 149 4 266 1 391 2 
51 1 153 2 208 2 279 7 53 2 196 1 297 2 298 2 121 2 111 2 185 2 389 2 202 2 190 1 180 2 304 2 191 2 27 4 
208 2 279 6 153 4 53 2 297 2 298 2 121 2 111 4 185 2 389 2 202 4 180 2 304 2 191 2 27 4 
51 1 208 2 279 10 153 8 53 2 196 1 297 2 298 6 121 2 111 8 185 2 389 8 202 8 190 1 180 2 304 2 191 2 27 4 
208 2 279 2 153 2 53 2 297 2 121 2 111 2 185 2 202 2 180 2 304 2 191 2 27 2 
51 6 321 2 212 2 275 2 16 2 124 3 71 2 22 2 131 2 301 2 38 2 247 1 138 1 140 2 196 6 404 1 144 2 409 1 50 2 
51 6 321 2 140 2 212 2 196 6 16 2 131 2 124 4 404 2 144 2 71 2 22 2 38 2 275 2 138 2 50 2 
321 2 107 2 212 2 2 2 3 2 217 4 110 4 114 2 220 4 118 2 230 2 16 2 335 2 17 12 124 33 336 2 21 2 338 2 22 4 340 4 235 2 126 2 24 2 25 2 28 6 347 2 30 2 128 2 241 14 131 2 242 2 134 4 38 4 136 2 138 3 248 2 140 16 356 2 143 4 144 6 46 2 146 2 359 2 260 2 261 2 50 18 51 38 155 2 158 2 52 2 269 2 159 2 160 2 55 4 57 4 63 2 66 4 167 2 371 2 273 2 373 2 274 2 378 2 380 4 169 2 170 2 171 2 172 2 70 2 175 2 71 6 73 2 74 2 288 2 79 2 289 2 290 2 299 2 301 2 88 5 89 2 91 2 196 34 197 2 310 2 99 2 404 3 409 4 206 2 207 2 
51 8 321 2 140 2 212 2 196 8 16 2 131 2 112 2 301 2 124 4 404 2 144 2 71 2 22 2 11 2 38 2 264 2 275 2 138 2 50 2 
48 2 

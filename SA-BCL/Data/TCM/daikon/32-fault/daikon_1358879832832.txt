#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException 253 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException (372,496) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 257 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (432,690) (432,690) (122,301,409,621,667) (122,301,409,621,667) (122,301,409,621,667) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V ERROR utilMDE.Assert$AssertionException (432,690) 439 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V ERROR java.lang.NullPointerException 230 478 
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (282,564) 11 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 275 275 508 (491,606) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 275 275 508 (491,606) (491,606) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 275 275 508 (491,606) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 584 231 56 590 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 62 675 
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.Error 659 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 729 222 717 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 710 717 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 729 222 717 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 729 222 717 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Intern:intern([J)[J
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGT([II)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3R_49()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.Invariant:prob_and(DD)D
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.Invariant:prob_and(DDD)D
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:lt(II)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:lexGTE([I[I)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.Token:newToken(I)Ljtb.Token;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1095 | = null
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus; | ASSIGN | 17939 | = null
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:dimensions()I
jtb.JavaCharStream:BeginToken()C
jtb.JavaCharStream:backup(I)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.LimitedSizeIntSet:size()I
daikon.ProglangType:isArray()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:logDetail()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:format()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 5075 | = null
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name; | RETURN | 55834 | return null
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName; | RETURN | 74439 | return null
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:lte(II)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.Invariant:justified()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.ProglangType:baseIsScalar()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:memberOf(J[J)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:pairwiseLT([I[I)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.MathMDE:gcd([I)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:lexEqual([I[I)Z
daikon.Debug:logOn()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaCharStream:getEndLine()I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariants:Invariants()V
daikon.Ppt:Ppt()V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14490 | = null
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I | CONSTANT | 21177 | 2 -> 1
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:relate_var()V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:min([I)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18577 | 0 -> -1
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:hashCode()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.Prestate:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParser:jj_3R_50()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfo:new_ppt()V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:logOn()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.PptSlice0:arity()I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.PptName:isCombinedExitPoint()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_3_1()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:union([I[I)[I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:eltsLtIndex([I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:isPseudoArray()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.ArraysMDE:sum([[I)I | CONSTANT | 8702 | 0 -> -1
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | OPERATOR | 127014 | + -> /
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:eq(JJ)Z
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseLT([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:eq(II)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_is_ge(DD)D | STATEMENT | 6797 | stmt -> ;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:memberOf(D[F)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:ne(II)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:subsetOf([B[I)Z
daikon.PptSlice2:arity()I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(DD)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:setDiff([I[I)[I | ASSIGN | 154150 | = null
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6323 | = null
jtb.JavaParser:jj_3R_54()Z | STATEMENT | 166542 | stmt -> ;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:concat([I[I)[I
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaCharStream:getEndColumn()I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:intersection([I[I)[I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:setEqual([I[I)Z
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 23040 | = null
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:gte(II)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String; | RETURN | 2498 | return null
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:slice([III)[I | CONDITION | 160611 | if (x) -> if (!x)
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern:intern([D)[D
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:numIntArrays()I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:subsetOf([F[F)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.RootNode:RootNode()V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:gt(II)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName; | CONDITION | 27362 | if (x) -> if (!x)
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:jj_ntk()I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_1(I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:eltwiseNotEqual([I)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:eltwiseLTE([I)Z
daikon.Debug:logDetail()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:lexGT([I[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.Node:Node()V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONDITION | 17506 | if (x) -> if (!x)
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.Quant:subsetOf([F[D)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.MathMDE:sign(I)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3R_51()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.PptSlice1:arity()I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:subsetOf([D[F)Z
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakHasherMap:size()I
daikon.Quant:eq(FF)Z
daikon.Quant:eltsGTE([II)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:memberOf(F[F)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
80 4 690 2 174 2 29 2 583 2 359 2 432 2 616 2 664 2 
160 6 1 2 308 2 721 2 552 2 214 6 509 6 275 2 671 2 217 2 51 2 
645 2 133 2 263 6 637 4 432 2 370 2 524 6 483 4 236 2 690 2 371 6 354 6 454 2 
243 4 455 2 403 6 291 2 432 4 523 2 544 6 223 4 690 4 407 4 723 6 253 2 205 2 207 2 492 4 230 4 149 6 32 4 393 4 705 4 105 2 310 4 397 11 186 10 474 6 
568 4 384 6 
18 2 
496 2 82 2 372 2 246 2 282 2 580 2 
455 2 243 4 0 4 69 2 403 32 193 4 432 4 544 32 482 6 115 6 223 16 690 4 407 18 225 6 554 4 723 32 489 8 27 2 276 4 466 6 556 6 411 4 211 2 445 4 149 22 579 4 32 16 421 2 393 16 9 6 497 2 705 16 154 4 309 2 472 2 516 6 186 48 397 55 474 6 
337 2 282 2 495 2 
660 2 303 2 494 2 547 2 34 2 564 2 422 2 550 22 269 10 609 2 330 2 693 2 332 2 144 2 
455 2 243 2 334 2 542 2 403 2 544 2 6 2 223 2 407 2 642 2 723 2 560 2 322 2 149 2 724 2 32 2 393 2 705 2 158 2 397 6 186 4 108 2 474 4 
149 4 570 2 193 4 403 8 291 2 544 8 32 4 306 2 393 4 223 4 705 4 225 6 723 8 556 6 186 12 397 16 411 4 
399 2 279 2 198 2 3 6 316 2 678 2 490 2 257 2 313 2 287 2 
18 2 192 2 688 2 548 2 692 2 628 2 594 2 209 2 420 2 377 2 
5 2 137 2 432 20 690 22 251 2 610 2 301 2 142 2 201 2 644 4 52 2 54 6 388 2 650 2 348 2 157 2 155 2 616 2 617 2 65 2 262 2 264 4 265 2 713 2 360 4 722 2 25 2 226 4 122 2 227 6 409 2 412 2 169 2 325 2 176 2 30 2 471 2 676 2 599 2 283 2 285 2 240 2 682 2 
690 2 388 2 439 2 
690 4 42 2 40 2 
558 2 
519 2 479 2 245 4 89 10 288 2 191 2 90 8 194 4 687 2 379 8 91 2 196 2 481 2 292 2 434 6 45 2 247 18 92 4 488 2 381 2 576 2 202 2 204 8 698 14 441 2 344 2 208 10 528 2 210 2 530 50 350 8 58 14 447 10 150 14 448 2 258 2 498 2 538 20 502 8 12 50 64 6 311 10 658 2 110 14 619 6 218 14 456 2 219 6 66 4 400 10 20 4 712 10 715 14 71 14 719 2 117 2 268 2 72 14 668 6 510 14 627 2 555 14 26 2 74 4 228 14 123 2 124 4 170 2 76 14 321 2 324 2 178 2 673 2 631 2 281 2 632 2 127 2 84 8 86 2 375 50 
53 1 638 2 418 2 187 2 
418 2 248 2 
436 2 520 2 230 2 11 2 418 2 282 2 215 2 
418 2 215 2 522 2 
418 2 215 2 28 2 
638 2 464 2 242 2 
418 2 215 2 
464 2 539 2 
152 2 418 2 
638 2 464 2 657 2 
533 2 638 2 195 2 
604 2 638 2 396 2 
130 2 78 2 638 2 
47 2 638 2 331 2 
464 2 255 2 
630 2 418 2 
533 2 408 2 
633 2 604 2 
130 2 598 2 
47 2 684 2 
171 2 464 2 
47 2 361 2 
727 2 130 2 
604 2 35 2 
533 2 355 2 
200 2 638 2 464 2 657 2 
200 2 638 2 464 2 657 2 475 2 
638 2 464 2 385 2 
298 2 638 2 464 2 
562 2 709 2 44 2 557 2 
646 2 443 2 416 2 470 2 315 4 725 2 714 2 256 2 550 6 168 2 666 2 728 2 587 2 106 2 501 2 473 4 398 2 593 2 
638 2 136 2 
437 2 11 2 282 2 493 2 
436 2 437 2 353 2 11 2 282 2 493 2 
478 2 230 2 
297 2 459 2 
29 2 543 2 11 2 282 2 
10 2 130 2 
47 2 726 2 
533 2 233 2 
604 2 153 2 
604 2 47 2 318 2 
428 2 604 2 47 2 
641 2 604 2 47 2 
604 2 47 2 49 2 
289 2 93 6 197 2 249 2 442 6 282 2 61 2 11 2 
464 2 343 2 
650 2 
569 2 572 2 95 2 575 2 644 4 201 2 577 2 302 2 104 4 499 2 13 2 112 4 24 2 118 3 25 6 226 4 669 2 227 6 121 2 412 2 325 2 30 2 676 6 599 2 33 2 239 2 328 2 240 2 36 2 424 2 602 2 682 2 603 5 137 2 432 26 138 2 689 2 690 26 251 2 142 2 695 2 340 2 52 2 697 4 54 4 613 3 147 2 348 2 155 2 157 2 707 2 451 2 260 2 616 2 617 2 65 2 264 4 265 2 266 2 713 6 623 2 360 4 545 3 546 2 722 2 626 2 73 8 169 2 176 2 177 2 368 2 283 2 183 2 565 2 
569 2 572 2 95 2 575 2 644 4 201 2 577 2 302 2 104 4 499 2 13 2 220 2 112 4 22 2 24 2 118 2 25 6 226 4 669 2 227 6 121 2 412 2 325 2 30 2 676 6 599 2 33 2 239 2 328 2 240 2 424 2 602 2 682 2 603 4 137 2 432 26 138 2 689 2 690 26 610 1 251 2 142 2 695 2 340 2 52 2 697 4 54 5 613 2 147 2 348 2 155 2 157 2 707 2 451 2 260 2 616 2 617 2 65 2 262 1 264 4 265 2 266 2 713 6 623 2 360 4 545 2 546 2 722 2 626 2 73 8 169 2 176 2 177 2 367 2 283 2 183 2 477 2 
373 2 
574 2 476 2 
511 2 578 2 606 2 703 2 640 2 655 2 294 2 643 4 308 2 184 2 329 2 601 4 214 2 509 2 589 2 670 2 217 2 618 2 
521 2 1 2 333 2 134 2 606 2 137 2 432 6 480 2 43 2 640 2 140 4 336 6 690 12 294 2 643 4 251 2 50 2 578 2 348 2 347 2 703 2 304 2 532 2 655 4 308 4 214 4 217 4 617 2 65 2 312 4 618 2 504 2 160 6 358 4 663 2 360 2 405 2 549 2 720 2 508 2 120 2 509 6 226 2 589 2 275 2 670 2 227 4 410 2 173 2 511 2 513 4 125 4 325 2 181 2 184 2 601 4 329 2 241 2 39 2 682 2 
521 2 333 2 134 2 606 2 137 2 432 6 480 2 43 2 640 2 140 4 336 6 690 12 294 2 643 4 251 2 50 2 578 2 348 2 347 2 703 2 304 2 532 2 655 4 308 4 214 6 217 4 617 2 65 2 312 4 618 2 504 2 160 6 358 4 663 2 360 2 405 2 549 2 720 2 721 2 508 2 120 2 509 4 226 2 589 2 275 2 670 2 227 4 410 2 173 2 511 2 513 4 125 4 325 2 181 2 184 2 601 4 329 2 241 2 39 2 682 2 
521 2 333 2 134 2 606 2 137 2 432 6 480 2 43 2 640 2 140 4 336 6 690 12 294 2 643 4 251 2 50 2 578 2 348 2 347 2 703 2 304 2 532 2 655 4 308 4 214 6 217 4 617 2 65 2 312 4 618 2 504 2 160 6 358 4 663 2 360 2 405 2 549 2 720 2 552 2 508 2 120 2 509 6 226 2 589 2 275 2 670 2 227 4 410 2 173 2 511 2 513 4 125 8 325 2 181 2 184 2 601 4 329 2 241 2 39 2 682 2 
521 2 333 2 134 2 606 2 137 2 432 6 480 2 43 2 640 2 140 4 336 10 690 12 294 2 643 4 251 2 50 2 578 2 348 2 347 2 703 2 304 2 532 2 655 4 308 4 214 8 217 4 617 2 65 2 312 4 618 2 504 2 160 8 358 8 663 2 360 2 405 2 549 2 720 2 721 2 552 2 508 2 120 2 509 6 226 2 589 2 275 2 670 2 227 4 410 2 173 2 511 2 513 4 125 8 325 2 181 2 184 2 601 4 329 2 241 2 39 2 682 2 
521 2 333 2 134 2 606 2 137 2 432 6 480 2 43 2 640 2 140 4 336 10 690 12 294 2 643 4 251 2 50 2 578 2 348 2 347 2 703 2 304 2 532 2 655 4 308 4 214 6 217 4 617 2 65 2 312 4 618 2 504 2 160 6 358 8 663 2 360 2 405 2 549 2 720 2 552 2 508 2 120 2 509 6 226 2 589 2 275 2 670 2 227 4 410 2 173 2 511 2 513 4 125 8 325 2 181 2 184 2 601 4 329 2 241 2 39 2 682 2 
572 2 199 2 575 2 201 12 203 2 578 2 389 6 391 6 213 2 392 2 214 8 217 4 14 2 19 2 402 1 405 2 25 6 226 4 586 6 588 1 589 2 227 6 412 2 410 4 595 2 414 2 30 2 599 2 33 2 235 2 239 2 601 4 240 2 38 2 241 2 602 2 39 2 40 6 603 2 606 2 432 24 43 2 438 2 250 2 251 2 610 2 439 6 50 2 52 2 54 6 57 1 446 2 450 2 616 2 617 2 65 2 453 2 618 2 262 2 264 4 265 2 622 1 461 2 273 6 275 4 73 4 467 1 278 2 280 6 283 2 79 6 634 2 85 2 636 2 88 2 290 2 480 2 640 2 294 2 643 4 486 2 96 1 644 4 302 2 102 7 304 2 305 10 655 4 308 4 499 2 500 2 312 4 314 2 504 2 505 8 112 4 663 2 116 6 118 2 508 2 507 2 509 4 120 4 320 2 670 2 511 2 513 8 325 2 125 2 514 6 676 6 677 6 329 2 518 6 682 2 521 2 134 2 137 2 686 6 139 4 140 6 689 4 336 2 690 46 338 2 142 2 340 2 342 4 699 6 145 6 701 1 147 2 348 2 703 2 347 2 531 2 532 2 157 2 155 2 160 12 711 2 162 2 713 8 360 4 545 2 549 2 720 2 722 2 721 4 558 6 169 2 173 2 176 2 180 1 181 2 369 7 184 2 374 1 185 2 
636 2 88 2 290 2 571 2 480 2 640 2 572 2 294 2 486 2 643 4 199 2 575 2 203 2 201 12 644 4 302 2 389 6 578 2 391 6 304 2 213 2 305 10 392 2 104 2 655 4 308 4 499 2 500 2 214 8 217 4 14 2 312 4 314 2 19 2 504 2 505 8 111 2 112 4 663 2 405 2 116 6 118 2 507 2 508 2 25 6 120 4 509 8 320 2 586 6 226 4 589 2 670 2 227 6 410 4 412 2 595 2 414 2 511 2 513 8 125 6 325 2 514 6 30 2 676 6 677 6 599 2 235 2 33 4 239 4 329 2 601 4 38 2 240 2 241 2 602 2 39 2 518 6 40 6 682 2 603 2 521 2 134 2 606 2 137 2 432 26 686 6 139 4 43 2 140 6 689 4 336 2 690 48 338 2 250 2 438 2 439 6 610 2 251 2 142 2 50 2 52 2 342 4 340 4 699 6 54 6 145 6 147 2 347 2 703 2 348 2 531 2 532 2 446 2 155 2 157 2 450 2 616 2 617 2 453 2 65 2 618 2 160 12 262 2 711 2 264 4 265 2 162 2 713 8 360 4 545 2 549 2 461 2 720 2 722 2 552 4 273 6 275 4 73 8 558 6 278 2 169 2 173 2 280 6 176 2 181 2 283 2 79 6 184 2 634 2 85 2 185 2 
636 2 88 2 290 2 571 2 480 2 640 2 572 2 294 2 486 2 643 4 199 2 575 2 203 2 201 12 644 4 302 2 389 6 578 2 391 6 304 2 213 2 305 10 392 2 104 2 655 4 308 4 499 2 500 2 214 8 217 4 14 2 312 4 314 2 19 2 504 2 505 8 111 2 112 4 663 2 405 2 116 6 118 2 507 2 25 6 508 2 120 4 509 8 320 2 586 6 226 4 589 2 670 2 227 6 410 4 412 2 595 2 414 2 511 2 513 8 125 6 325 2 514 6 30 2 676 6 677 6 599 2 235 2 33 4 239 4 329 2 601 4 38 2 240 2 241 2 602 2 39 2 518 6 40 6 682 2 603 2 521 2 134 2 606 2 137 2 432 26 686 6 139 4 43 2 140 6 689 4 336 6 690 48 338 2 250 2 438 2 439 6 610 2 251 2 142 2 50 2 342 4 340 4 52 2 699 6 54 6 145 6 147 2 347 2 703 2 348 2 531 2 532 2 446 2 155 2 157 2 450 2 616 2 617 2 453 2 65 2 618 2 160 12 262 2 711 2 264 4 265 2 162 2 713 8 358 4 360 4 545 2 549 2 461 2 720 2 722 2 552 4 273 6 275 4 73 8 558 6 278 2 169 2 173 2 280 6 176 2 181 2 283 2 79 6 184 2 634 2 85 2 185 2 
567 6 1 2 2 2 571 2 572 2 199 2 575 2 201 10 203 2 578 2 389 12 391 6 213 2 392 2 214 10 217 4 14 2 15 2 19 2 401 2 405 2 25 8 226 4 586 6 589 2 227 6 412 2 410 4 595 2 414 2 30 2 599 2 33 4 235 2 239 4 601 4 240 2 38 2 241 2 602 2 39 2 426 6 40 12 603 4 606 2 432 24 43 2 607 2 438 2 250 2 251 2 610 2 439 12 50 2 52 2 54 6 446 2 63 2 450 2 616 2 617 2 65 2 453 2 618 2 262 2 457 2 264 4 265 2 461 2 270 6 273 6 275 4 465 6 73 10 278 2 280 6 283 2 79 6 634 2 85 2 636 2 88 2 290 2 480 2 640 2 294 2 643 4 486 2 94 6 644 4 302 4 304 2 305 8 104 2 655 4 308 4 499 2 500 2 312 4 314 2 661 2 504 2 505 8 111 2 112 6 114 6 663 2 665 6 116 6 118 4 508 2 507 2 509 10 120 4 320 2 670 2 511 2 513 8 325 2 125 6 514 6 676 8 677 6 329 2 518 12 682 2 521 2 134 2 137 2 685 6 686 6 139 4 140 6 689 4 336 6 690 52 338 2 142 2 696 6 340 4 342 4 699 12 145 6 147 4 703 2 347 2 348 2 532 2 157 2 155 2 708 2 160 16 711 2 162 2 358 4 713 12 360 4 545 4 549 2 720 2 721 2 722 2 552 4 558 12 169 2 173 2 176 2 181 2 184 2 185 2 
160 4 504 2 521 2 606 2 358 4 43 2 480 2 140 2 640 2 336 4 690 4 643 2 720 2 508 2 552 2 509 6 275 2 670 2 50 2 173 2 513 2 125 6 347 2 304 2 703 2 181 2 532 2 308 4 184 2 329 2 601 2 214 6 217 4 312 2 618 2 
480 2 640 2 572 2 643 2 644 4 201 4 650 2 304 2 305 2 308 4 499 2 582 2 214 6 217 4 109 3 312 2 504 2 112 4 118 3 508 2 25 6 509 6 226 4 667 2 670 2 227 6 412 2 513 2 325 2 125 6 30 2 676 6 599 2 601 2 329 2 240 2 241 2 602 2 682 2 603 3 521 2 606 2 137 2 432 24 43 2 140 2 689 2 336 2 690 28 610 2 251 2 142 2 611 2 50 2 52 2 143 2 54 6 348 2 703 2 347 2 531 2 532 2 59 2 155 2 157 2 616 2 617 2 65 2 618 2 160 4 262 2 621 2 264 4 265 2 713 8 360 4 545 3 720 2 722 2 552 2 462 2 275 2 169 2 173 2 77 2 176 2 181 2 283 2 184 2 
521 2 333 2 134 2 606 2 137 2 432 6 480 2 43 2 640 2 140 4 336 10 690 12 294 2 643 4 251 2 50 2 578 2 348 2 347 2 703 2 304 2 532 2 655 4 308 4 214 6 217 4 617 2 65 2 312 4 618 2 504 2 160 6 358 8 663 2 360 2 405 2 549 2 720 2 552 2 508 2 120 2 509 6 226 2 589 2 275 2 670 2 227 4 410 2 173 2 511 2 513 4 125 8 325 2 181 2 184 2 601 4 329 2 241 2 39 2 682 2 
521 2 1 2 134 2 606 2 137 2 432 6 480 2 43 2 640 2 140 4 336 10 690 12 294 2 643 4 251 2 300 2 50 2 578 2 348 2 347 2 703 2 304 2 532 2 655 4 308 4 214 6 217 4 617 2 65 2 312 4 618 2 620 4 504 2 160 8 358 8 663 2 360 2 405 2 549 2 720 2 552 2 508 2 120 2 509 8 226 2 589 2 275 2 670 2 227 4 410 2 173 2 511 2 513 4 325 2 125 8 184 2 329 2 601 4 241 2 425 2 39 2 682 2 
103 2 50 2 480 2 
103 2 50 2 480 2 
480 2 643 2 575 2 644 4 201 4 305 2 308 4 499 2 214 8 217 4 312 2 23 2 25 2 508 2 509 8 226 4 227 6 670 2 412 2 323 2 513 4 325 2 125 6 30 2 676 2 599 2 33 4 239 4 129 2 601 2 240 2 602 2 682 2 603 2 606 2 137 2 432 16 686 2 139 2 140 2 689 2 336 2 690 24 610 2 251 2 142 2 254 2 50 2 342 2 340 4 52 2 54 6 348 2 703 2 534 2 151 2 536 2 155 2 157 2 614 2 616 2 617 2 65 2 160 8 262 2 264 4 265 2 713 2 358 2 360 4 720 2 722 2 552 4 626 4 275 4 73 4 277 2 169 2 629 2 469 2 176 2 283 2 730 2 
561 2 365 2 511 2 325 2 432 2 686 2 139 2 305 2 690 4 151 2 461 2 129 2 574 2 201 2 277 2 229 2 595 2 
480 2 643 2 575 2 644 4 201 2 491 2 308 4 499 2 214 8 217 4 312 2 23 2 25 2 508 2 509 8 226 4 227 6 670 2 412 2 323 2 513 4 325 2 125 6 30 2 676 2 327 2 599 2 33 4 239 4 129 2 601 2 240 2 602 2 682 2 603 4 606 2 137 2 432 14 140 2 689 2 336 2 690 20 610 2 251 2 142 2 254 2 50 2 342 2 340 4 52 2 54 6 348 2 703 2 534 2 536 4 155 2 157 2 614 2 616 2 617 2 65 2 160 8 262 2 264 4 265 2 713 2 358 2 360 4 720 2 722 2 552 4 626 4 275 4 73 4 277 2 169 2 629 2 469 2 176 2 283 2 730 2 
480 2 643 2 575 2 644 4 201 4 305 2 308 4 499 2 214 8 217 4 312 2 23 2 25 2 508 2 509 8 226 4 227 6 670 2 412 2 323 2 513 4 325 2 125 6 30 2 676 2 599 2 33 4 239 4 129 2 601 2 240 2 602 2 682 2 603 2 606 2 137 2 432 16 686 2 139 2 140 2 689 2 336 2 690 24 610 2 251 2 142 2 254 2 50 2 342 2 340 4 52 2 54 6 348 2 703 2 534 2 151 2 536 2 155 2 157 2 614 2 616 2 617 2 65 2 160 8 262 2 264 4 265 2 713 2 358 2 360 4 720 2 722 2 552 4 626 4 275 4 73 4 277 2 169 2 629 2 469 2 176 2 283 2 730 2 
224 2 430 2 231 2 56 2 232 2 584 2 590 2 212 2 351 2 427 2 
67 2 713 2 112 2 432 2 46 1 545 3 572 2 690 2 118 3 25 2 463 2 98 3 387 2 345 2 676 2 234 2 60 2 37 2 376 2 603 3 
387 2 345 2 67 2 676 2 112 2 713 2 432 2 234 2 572 2 545 2 690 2 118 2 60 2 25 2 463 2 37 2 98 2 376 2 603 2 
387 2 345 2 67 2 676 2 112 2 713 2 432 2 234 2 572 2 545 2 690 2 118 2 60 2 25 2 463 2 37 2 98 2 376 2 603 2 
635 2 188 2 0 2 70 4 713 2 403 2 432 4 404 2 380 4 544 2 141 2 572 2 545 3 223 2 690 10 485 3 296 2 723 2 694 2 591 3 364 2 468 4 674 2 146 2 651 3 349 2 32 2 679 4 393 2 81 2 535 6 60 2 423 2 705 2 449 4 156 2 516 4 397 6 186 4 603 3 
635 2 188 2 0 2 70 4 713 2 403 2 432 4 404 2 380 4 544 2 141 2 572 2 545 2 223 2 690 10 407 2 485 2 296 2 723 2 694 2 591 2 364 2 468 4 674 2 146 2 149 2 651 2 349 2 32 2 679 4 393 2 81 2 535 6 60 2 423 2 705 2 449 4 156 2 472 2 516 4 397 4 186 4 603 2 
635 2 188 2 0 2 70 4 713 2 403 2 432 4 404 2 380 4 544 2 141 2 572 2 545 2 223 2 690 10 407 2 485 2 296 2 723 2 694 2 591 2 364 2 468 4 674 2 146 2 149 2 651 2 349 2 32 2 679 4 393 2 81 2 535 6 60 2 423 2 705 2 449 4 156 2 472 2 516 4 397 4 186 4 603 2 
635 2 188 2 0 2 70 4 713 2 403 2 432 4 404 2 380 4 544 2 141 2 572 2 545 2 223 2 690 10 407 2 485 2 296 2 723 2 694 2 591 2 364 2 468 4 674 2 146 2 149 2 651 2 349 2 32 2 679 4 393 2 81 2 535 6 60 2 423 2 705 2 449 4 156 2 472 2 516 4 397 4 186 4 603 2 
635 2 188 2 0 2 70 4 713 2 403 2 432 4 404 2 380 4 544 2 141 2 572 2 545 2 223 2 690 10 407 4 485 2 296 2 723 2 694 2 591 2 364 2 468 4 674 2 146 2 149 4 651 2 349 2 32 2 679 4 393 2 81 2 535 6 60 2 423 2 705 2 449 4 156 2 472 4 516 4 397 4 186 4 603 2 
525 2 460 2 537 2 83 2 683 2 681 2 
525 2 624 2 597 2 177 2 299 2 132 2 680 2 
179 1 346 1 675 2 444 1 316 1 126 2 432 4 652 2 237 2 690 4 62 2 48 2 41 2 65 2 287 1 
649 2 417 2 403 2 32 2 544 2 393 2 223 2 119 2 705 2 723 2 556 4 186 4 397 5 411 2 452 2 659 2 
189 1 468 2 357 2 366 2 68 2 70 2 221 2 432 1 380 2 406 2 284 7 690 1 238 2 394 2 526 2 731 2 341 4 440 2 
468 2 357 2 366 2 68 4 221 2 70 2 380 2 406 4 284 6 238 2 394 4 526 2 731 2 341 4 440 2 
189 1 468 2 357 2 366 6 68 8 221 8 70 2 432 1 380 2 406 8 284 10 690 1 238 2 394 8 526 2 731 2 341 4 440 2 
468 2 357 2 68 2 70 2 380 2 406 2 284 2 238 2 394 2 526 2 731 2 341 2 440 2 
87 2 378 2 639 6 573 2 293 2 382 4 383 2 644 12 386 2 8 2 647 6 100 2 101 2 581 10 653 16 654 2 307 2 395 2 656 4 107 2 113 4 662 4 21 2 222 2 592 2 413 6 672 4 596 2 512 2 415 2 326 5 31 2 419 2 128 2 244 2 605 2 431 2 432 36 690 40 691 2 339 2 610 2 612 2 527 2 54 26 55 2 702 2 704 2 155 2 157 4 706 2 352 2 540 2 261 2 262 2 161 2 264 14 541 4 164 6 716 2 717 2 718 4 166 2 167 6 551 4 553 2 272 2 625 2 363 2 75 2 559 2 175 1 176 4 182 2 729 2 286 2 566 2 
429 2 190 12 87 4 378 2 135 4 432 30 335 4 433 2 435 4 484 6 293 2 573 4 690 32 608 2 339 2 252 2 610 8 382 2 97 2 7 2 612 2 644 14 55 2 54 40 206 12 700 2 99 2 148 2 653 14 581 8 157 2 155 2 615 4 395 2 656 2 216 4 503 4 16 2 262 8 710 2 264 14 541 6 317 2 113 6 662 6 21 2 717 2 222 2 718 2 319 4 506 2 271 8 272 2 274 2 592 2 559 2 172 4 672 2 176 2 326 2 515 2 563 2 600 4 729 2 517 2 131 4 
87 2 378 2 190 2 431 2 4 2 335 2 432 36 639 4 433 2 435 2 484 4 573 2 293 2 690 40 295 2 691 2 382 2 610 6 7 2 97 4 383 2 612 2 644 16 386 2 8 2 206 12 55 2 54 36 99 2 390 2 100 2 648 2 101 2 653 4 581 14 654 2 307 2 157 6 155 4 352 2 159 2 615 2 259 2 656 2 216 1 107 2 503 2 585 2 262 6 458 2 264 18 163 2 267 4 541 4 317 2 113 4 21 2 662 4 716 2 717 2 222 2 718 4 166 4 167 4 271 1 319 2 506 2 551 2 272 2 362 2 625 2 592 2 75 2 559 2 172 1 672 4 512 2 326 4 176 6 31 2 563 2 182 2 600 2 729 2 286 2 566 2 131 2 
17 2 55 2 54 10 262 4 176 2 264 4 529 2 432 12 717 2 222 2 653 4 165 2 293 2 690 12 487 2 272 2 157 2 729 2 155 2 339 2 610 4 395 2 612 2 644 4 
356 2 

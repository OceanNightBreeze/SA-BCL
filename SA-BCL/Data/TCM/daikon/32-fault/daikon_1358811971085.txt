#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.ArrayIndexOutOfBoundsException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V ERROR java.lang.ArrayIndexOutOfBoundsException (68,666,687,772,802) 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V FAILED junit.framework.AssertionFailedError (334,608) 697 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 371 371 46 46 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 402 402 906 906 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException 790 (392,670) (392,670) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException 790 (392,670) (392,670) 
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException 790 (392,670) (392,670) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException 790 (392,670) (392,670) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException 790 (392,670) (392,670) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException 790 (392,670) (392,670) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException 790 (392,670) (392,670) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException 790 (392,670) (392,670) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 790 (392,670) (392,670) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 790 (392,670) (392,670) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 790 (392,670) (392,670) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 790 (392,670) (392,670) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException 790 (392,670) (392,670) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException 790 (392,670) (392,670) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.ArrayIndexOutOfBoundsException 852 (257,370) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 852 (257,370) (257,370) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 852 (257,370) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 299 685 352 107 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V FAILED junit.framework.AssertionFailedError 138 600 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_3R_63()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaCharStream:getEndLine()I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_24(I)Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z | CONDITION | 195429 | if (x) -> if (!x)
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.ProglangType:isArray()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaCharStream:readChar()C
utilMDE.MathMDE:pow(II)I
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_120()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.ModBitTracker:num_vars()I
daikon.Quant:intersection([I[I)[I
daikon.diff.Node:Node()V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3R_62()Z
daikon.Quant:setEqual([I[I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >=
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptSlice0:arity()I
daikon.ProglangType:baseIsScalar()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_56()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:lexLT([I[I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_ntk()I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_15()Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3_24()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:CastExpression()Ljtb.syntaxtree.CastExpression;
utilMDE.Intern:intern([D)[D
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_133()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:logOn()Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_52()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_121()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:jj_3R_47()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.RootNode:RootNode()V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eq(II)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_3R_68()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:slice([III)[I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:jj_3R_85()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexGTE([I[I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.diff.InvMap:InvMap()V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | STATEMENT | 1433 | stmt -> ;
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfo:relate_var()V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_96()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.ProglangType:isScalar()Z
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:gt(II)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGtIndex([I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:justified()Z
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_3R_48()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.MathMDE:gcd(JJ)J
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_60()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Debug:logOn()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:union([I[I)[I
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3_14()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.MathMDE:gcd(II)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_118()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:jj_3_12()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName:hashCode()I
jtb.JavaParser:jj_3R_51()Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | CONSTANT | 54150 | 0 -> -1
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaCharStream:FillBuff()V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_88()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_2_16(I)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_2_5(I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_117()Z
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_61()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:jj_3_16()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.PptMap:asCollection()Ljava.util.Collection; | RETURN | 1264 | return null
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.Quant:isReverse([I[I)Z
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltsGT([II)Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:lte(II)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.ProglangType:dimensions()I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:memberOf(S[S)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_3R_148()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern:intern([I)[I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_12(I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaCharStream:BeginToken()C
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.ArraysMDE:isSubset([D[D)Z | OPERATOR | 63684 | < -> >
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_samples()I
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.MathMDE:negate(I)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.ArraysMDE:min([I)I
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:sum([D)D
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I | ASSIGN | 23606 | = null
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_3R_89()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 18743 | = null
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_114()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_36()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:hashCode()I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaCharStream:ReadByte()C
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_3_10()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:jj_3_22()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.PptSlice1:arity()I
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 182066 | = null
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:jj_3_5()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:subsetOf([J[J)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_57()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_115()Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:jj_2_36(I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 99177 | return null
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_122()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.Intern:intern([J)[J
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
76 2 465 2 677 2 136 2 808 2 347 2 791 2 521 2 606 4 
318 6 320 2 883 2 728 2 292 2 831 2 390 2 611 6 710 6 724 2 759 2 
808 2 504 2 108 4 596 6 717 2 274 6 464 6 294 2 212 4 551 2 521 2 176 6 620 2 
808 6 877 2 397 8 784 10 675 4 646 10 150 10 601 4 261 26 466 16 574 6 95 8 12 4 97 2 815 29 42 16 821 4 17 2 890 6 271 12 448 2 624 10 223 8 345 16 900 10 774 2 902 2 521 6 875 2 314 8 
891 6 846 4 
673 2 
634 2 319 2 82 4 843 2 671 2 645 2 731 2 677 2 94 2 575 4 534 2 334 2 468 2 159 2 18 2 405 2 406 2 503 4 822 2 824 2 448 2 544 2 22 2 74 2 804 2 832 2 232 2 665 2 833 2 26 2 522 2 351 2 
145 2 840 2 749 6 808 4 877 2 784 16 752 6 397 6 646 16 150 16 261 48 704 4 466 32 732 4 574 4 12 2 815 54 42 32 297 2 100 4 101 4 890 4 797 2 716 6 133 4 271 22 624 16 194 4 223 18 165 2 167 2 345 32 254 8 900 6 773 4 51 6 870 6 521 4 482 6 
903 2 334 2 872 2 
886 2 460 2 713 2 879 2 242 2 787 2 568 2 510 2 489 22 530 10 569 2 608 2 901 2 409 2 
784 2 646 2 290 2 150 2 529 2 261 4 466 2 295 2 574 2 12 2 815 6 42 2 271 2 624 2 161 2 223 2 386 2 829 2 345 2 609 2 900 4 458 2 479 2 
821 2 716 6 271 4 624 4 784 4 646 4 150 4 261 12 704 4 345 8 466 8 773 4 815 16 478 2 42 8 99 2 482 6 
410 4 558 2 178 2 842 2 83 2 148 2 809 2 676 4 884 2 677 2 263 2 40 2 362 10 334 8 499 4 535 6 654 2 365 4 424 2 581 2 220 2 72 34 503 2 384 2 824 2 195 2 825 2 307 2 903 6 632 2 872 2 748 4 
356 2 673 2 211 2 9 2 265 2 539 2 761 2 301 2 340 2 229 2 
354 2 436 2 240 2 562 1 566 5 6 2 244 4 123 1 124 4 681 6 13 2 366 2 248 1 582 2 583 2 447 2 20 6 369 2 798 2 136 2 32 2 462 1 256 2 592 2 808 32 810 1 376 1 262 2 706 11 709 1 711 1 157 1 714 1 48 3 275 2 719 2 827 1 607 5 170 2 610 2 180 2 182 2 396 1 487 2 851 1 69 2 400 1 734 6 187 2 498 2 403 2 500 1 501 4 404 2 71 2 506 1 508 2 306 2 75 1 629 2 514 3 77 2 407 4 202 4 521 30 874 1 523 2 412 2 750 2 638 2 87 2 88 2 648 2 213 5 541 2 105 2 657 6 337 2 765 2 341 6 546 2 662 2 346 2 432 2 778 1 907 4 235 1 434 2 
593 2 808 2 
393 2 808 4 621 2 
330 2 
237 2 238 4 0 2 438 12 241 2 440 4 4 2 674 14 243 14 8 46 245 4 246 2 10 2 680 4 442 8 15 2 684 2 16 4 445 8 688 8 446 2 19 2 21 2 449 2 454 4 457 2 694 40 695 2 696 2 463 4 699 2 259 4 705 2 37 2 39 146 266 6 44 2 269 4 470 2 272 10 273 2 276 46 277 2 474 4 50 8 476 4 721 2 281 2 282 24 52 2 285 2 55 2 57 2 59 28 485 4 486 4 291 2 66 2 493 2 495 46 302 2 739 2 742 2 512 2 518 2 520 4 80 20 751 2 324 4 325 2 527 4 755 2 327 2 93 4 758 10 533 2 537 46 102 4 760 2 103 2 104 16 764 146 335 2 763 2 110 20 343 2 545 2 344 178 769 46 771 2 112 4 777 6 557 6 350 4 115 24 781 146 782 46 559 2 560 2 355 8 783 2 120 2 357 2 788 2 571 2 570 14 572 46 359 2 125 2 126 2 364 8 128 2 579 2 584 20 796 2 585 24 132 2 134 22 587 4 372 2 135 4 137 2 374 2 375 20 147 16 595 2 598 12 597 2 149 2 151 4 153 2 813 4 814 4 603 2 818 4 819 4 160 4 163 2 164 34 387 2 828 2 169 14 171 6 835 4 391 6 175 8 177 4 839 46 838 36 181 46 394 8 398 2 847 2 614 2 617 2 853 8 189 4 188 8 854 2 623 2 861 2 196 2 197 2 200 4 869 2 871 8 873 2 408 4 203 2 415 2 637 46 639 4 207 6 640 2 641 10 644 2 882 8 651 2 418 2 652 2 215 46 216 48 425 4 889 22 428 8 896 2 224 34 227 2 899 4 230 46 663 2 430 4 431 2 234 2 905 2 236 2 668 2 
378 2 198 2 615 2 672 1 
308 2 198 2 
68 2 547 2 772 2 802 4 573 2 443 2 666 2 
615 2 659 2 
697 2 589 2 334 2 143 2 
697 2 349 2 348 2 589 2 334 2 143 2 
697 2 198 2 868 2 339 2 334 2 675 2 
468 2 381 2 
697 2 233 2 334 2 675 2 
502 2 531 2 
206 2 140 2 
556 2 127 2 
477 2 284 2 
206 2 284 2 98 2 
206 2 284 2 156 2 
812 2 206 2 284 2 
249 2 206 2 284 2 
697 2 793 2 677 2 334 2 536 2 
360 2 85 2 
697 2 198 2 62 2 349 2 339 2 334 2 675 2 
67 2 198 2 339 2 
198 2 687 2 339 2 
615 2 85 2 494 2 
198 2 339 2 
698 2 85 2 
198 2 636 2 
615 2 85 2 65 2 
513 2 615 2 556 2 
615 2 173 2 284 2 
615 2 531 2 553 2 
615 2 206 2 691 2 
85 2 283 2 
198 2 863 2 
25 2 556 2 
898 2 284 2 
56 2 531 2 
206 2 323 2 
85 2 647 2 
206 2 311 2 
288 2 531 2 
450 2 284 2 
162 2 556 2 
615 2 85 2 604 2 65 2 
615 2 60 2 85 2 604 2 65 2 
129 2 615 2 85 2 
615 2 85 2 683 2 
117 2 516 2 497 2 820 2 
77 2 
116 2 354 2 436 2 240 2 786 2 6 2 244 4 247 2 124 6 681 6 366 2 582 2 20 4 369 2 371 2 136 2 808 22 811 2 702 2 262 2 706 4 707 2 41 2 467 2 711 2 46 2 268 2 275 6 719 2 388 2 720 2 170 2 610 2 480 4 725 2 183 2 69 2 734 6 187 2 735 2 403 2 501 4 71 2 404 2 738 2 859 2 743 2 407 4 521 22 202 4 874 2 81 2 412 2 750 2 638 2 87 2 648 2 528 2 214 2 541 2 657 2 762 2 542 2 337 2 765 2 543 2 341 2 546 2 548 2 231 4 664 2 554 2 114 2 
116 2 354 2 436 2 240 2 786 2 6 2 244 4 247 2 124 6 681 6 366 2 582 2 20 6 369 2 136 2 808 22 811 2 702 2 262 2 706 4 707 2 41 2 467 2 711 2 268 2 275 6 719 2 388 2 720 2 170 2 610 2 480 4 613 2 183 2 69 2 734 6 187 2 402 2 735 2 498 2 403 2 501 4 404 2 71 2 738 2 859 2 743 2 407 4 521 22 202 4 874 2 523 2 81 2 412 2 750 2 638 2 87 2 648 2 528 2 214 2 541 2 657 2 762 2 542 2 337 2 765 2 543 2 341 2 546 2 548 2 231 4 664 2 554 2 906 2 114 2 
420 2 
361 2 880 2 
253 2 491 2 392 2 790 2 670 2 
253 2 491 2 392 2 790 2 670 2 
253 2 491 2 392 2 790 2 670 2 
253 2 491 2 392 2 790 2 670 2 
253 2 491 2 392 2 790 2 670 2 
253 2 491 2 392 2 790 2 670 2 
253 2 491 2 392 2 790 2 670 2 
253 2 491 2 392 2 790 2 670 2 
253 2 491 2 392 2 790 2 670 2 
253 2 491 2 392 2 790 2 670 2 
253 2 491 2 392 2 790 2 670 2 
253 2 491 2 392 2 790 2 670 2 
253 2 491 2 392 2 790 2 670 2 
116 2 392 2 354 2 436 2 240 2 670 2 786 2 6 2 244 4 491 2 492 3 790 2 124 6 681 8 69 2 187 2 734 6 363 2 498 2 403 2 366 2 501 4 582 2 71 2 404 2 20 6 369 2 253 2 452 2 136 2 77 2 407 4 521 24 202 4 523 2 317 2 591 2 256 2 321 2 638 2 808 24 87 2 648 2 262 2 706 3 155 2 467 2 541 2 469 2 657 3 337 4 765 2 341 3 275 6 546 2 170 2 231 4 280 2 346 2 610 2 555 2 432 2 
422 2 429 2 251 2 
422 2 429 2 251 2 
116 2 354 2 483 2 179 2 436 2 240 2 844 2 63 2 786 2 6 2 728 2 292 2 244 4 852 2 679 2 124 2 681 2 69 2 70 6 187 2 734 6 577 2 498 2 403 2 501 4 794 2 582 2 71 2 404 2 20 6 369 2 304 2 251 2 509 2 253 2 136 2 139 2 407 4 202 4 521 14 523 2 318 4 317 2 412 2 750 2 638 2 808 18 87 2 257 2 648 2 883 2 152 2 262 2 706 2 817 2 710 4 467 2 540 2 158 2 541 2 337 2 765 2 275 2 429 2 546 2 719 2 170 2 390 2 611 4 610 2 114 2 
146 2 795 2 45 2 219 2 298 2 322 2 337 2 808 4 87 2 625 2 865 2 358 2 361 2 155 2 255 2 521 2 144 2 
116 2 354 2 436 2 240 2 786 2 6 2 244 4 679 2 124 2 681 2 577 4 582 2 794 2 20 6 369 2 370 2 251 2 253 2 136 2 139 2 808 18 257 2 152 2 262 2 706 4 817 2 467 2 710 4 158 2 275 2 719 2 170 2 390 2 610 2 611 4 179 2 483 2 844 2 63 2 728 2 292 2 852 2 69 2 734 6 187 2 70 6 498 2 403 2 501 4 404 2 71 2 304 2 509 2 407 4 310 2 521 14 202 4 523 2 317 2 318 4 412 2 750 2 638 2 87 2 648 2 883 2 540 2 541 2 337 2 765 2 429 2 546 2 114 2 
116 2 354 2 483 2 179 2 436 2 240 2 844 2 63 2 786 2 6 2 728 2 292 2 244 4 852 2 679 2 124 2 681 2 69 2 70 6 187 2 734 6 577 2 498 2 403 2 501 4 794 2 582 2 71 2 404 2 20 6 369 2 304 2 251 2 509 2 253 2 136 2 139 2 407 4 202 4 521 14 523 2 318 4 317 2 412 2 750 2 638 2 808 18 87 2 257 2 648 2 883 2 152 2 262 2 706 2 817 2 710 4 467 2 540 2 158 2 541 2 337 2 765 2 275 2 429 2 546 2 719 2 170 2 390 2 611 4 610 2 114 2 
352 2 116 2 436 2 240 2 784 2 785 2 786 2 6 2 121 1 244 2 124 6 681 8 792 2 685 2 366 2 130 2 250 2 20 4 369 2 692 2 451 2 136 2 373 2 30 2 590 2 33 2 808 24 703 2 150 2 261 4 466 2 602 2 262 2 706 2 815 5 379 2 42 2 708 2 716 4 383 2 718 2 385 2 275 6 475 2 168 2 722 1 610 2 841 6 726 2 69 2 734 6 187 2 498 2 403 2 501 4 404 2 71 2 858 2 299 2 505 2 624 2 741 2 744 2 631 2 407 2 202 4 521 18 523 2 316 2 87 2 646 2 648 2 332 2 541 2 426 2 657 2 107 2 337 2 765 2 341 2 111 4 546 2 345 2 773 2 549 2 231 4 
806 2 34 2 808 2 395 2 122 2 124 2 706 3 681 2 576 2 578 2 885 2 366 2 888 2 657 3 300 4 368 2 341 3 275 2 252 2 720 6 830 3 279 2 231 2 453 1 521 2 
806 2 34 2 808 2 395 2 122 2 124 2 706 2 681 2 576 2 578 2 885 2 366 2 888 2 657 2 300 4 368 2 341 2 275 2 252 2 720 6 830 2 279 2 231 2 521 2 
806 2 34 2 808 2 395 2 122 2 124 2 706 2 681 2 576 2 578 2 885 2 366 2 888 2 657 2 300 4 368 2 341 2 275 2 252 2 720 6 830 2 279 2 231 2 521 2 
58 2 397 4 784 2 64 4 490 2 678 2 681 2 619 2 366 2 690 2 624 2 73 3 801 4 309 2 521 4 32 2 808 10 701 2 88 2 646 2 649 3 150 2 261 4 466 2 328 4 706 3 419 4 815 6 42 2 538 4 218 3 336 2 890 2 660 2 472 6 341 3 345 2 279 2 172 2 287 2 
58 2 397 4 784 2 64 4 490 2 678 2 681 2 619 2 366 2 690 2 624 2 73 2 801 4 309 2 521 4 32 2 808 10 701 2 877 2 88 2 646 2 649 2 150 2 261 4 466 2 328 4 706 2 419 4 815 4 42 2 538 4 218 2 336 2 890 2 271 2 660 2 223 2 472 6 341 2 345 2 279 2 172 2 287 2 
58 2 397 4 784 2 64 4 490 2 678 2 681 2 619 2 366 2 690 2 624 2 73 2 801 4 309 2 521 4 32 2 808 10 701 2 877 2 88 2 646 2 649 2 150 2 261 4 466 2 328 4 706 2 419 4 815 4 42 2 538 4 218 2 336 2 890 2 271 2 660 2 223 2 472 6 341 2 345 2 279 2 172 2 287 2 
58 2 397 4 784 2 64 4 490 2 678 2 681 2 619 2 366 2 690 2 624 2 73 2 801 4 309 2 521 4 32 2 808 10 701 2 877 2 88 2 646 2 649 2 150 2 261 4 466 2 328 4 706 2 419 4 815 4 42 2 538 4 218 2 336 2 890 2 271 2 660 2 223 2 472 6 341 2 345 2 279 2 172 2 287 2 
58 2 397 4 784 2 64 4 490 2 678 2 681 2 619 2 366 2 690 2 624 2 73 2 801 4 309 2 521 4 32 2 808 10 701 2 877 4 88 2 646 2 649 2 150 2 261 4 466 2 328 4 706 2 419 4 815 4 42 2 538 4 218 2 336 2 890 2 271 4 660 2 223 4 472 6 341 2 345 2 279 2 172 2 287 2 
867 2 154 2 823 2 41 2 264 2 642 2 876 2 
154 2 333 2 78 2 524 2 3 2 226 2 
71 2 148 1 61 2 416 1 808 4 862 2 258 2 600 2 293 2 849 1 417 1 650 2 199 2 757 2 138 2 40 1 521 4 113 2 
749 4 808 6 86 2 877 4 784 6 397 4 646 6 150 6 261 12 466 6 815 14 42 6 708 2 100 2 426 2 250 2 716 4 890 2 271 4 624 6 223 4 225 2 345 6 254 2 803 2 773 2 630 2 834 2 521 6 776 2 
538 2 267 2 484 1 808 1 565 2 289 2 766 2 222 7 881 2 730 2 801 2 866 2 550 2 419 2 618 2 54 2 521 1 286 4 
538 2 267 2 565 2 289 2 766 4 222 6 881 2 730 2 801 2 866 4 419 2 550 4 618 2 54 2 286 4 
538 2 267 8 484 1 808 1 565 2 289 2 766 8 222 10 881 2 730 2 801 2 866 8 419 2 550 8 618 6 54 2 521 1 286 4 
538 2 565 2 289 2 766 2 222 2 881 2 730 2 801 2 866 2 419 2 550 2 54 2 286 2 
435 8 353 10 561 2 669 8 437 4 118 16 563 4 439 2 441 6 5 10 567 90 244 88 789 4 682 4 444 4 580 2 686 22 131 10 367 2 20 248 586 6 23 8 800 16 588 4 693 4 27 6 141 4 28 26 142 12 455 8 456 6 29 26 459 2 461 4 700 8 807 4 35 4 808 150 594 6 377 2 36 6 38 6 816 6 712 4 380 4 605 16 715 24 47 42 382 24 270 4 471 10 826 6 473 34 166 2 53 4 610 14 174 6 836 36 612 8 837 4 845 4 727 24 848 84 850 90 616 24 296 4 185 124 401 1 496 10 190 4 498 58 855 18 191 17 857 6 192 10 737 2 622 5 404 14 740 2 507 2 303 6 627 2 745 6 864 8 628 10 746 16 515 92 517 6 519 6 407 112 521 134 201 6 79 2 523 58 635 24 413 4 204 50 205 2 526 28 208 2 643 6 209 24 753 6 754 2 326 8 91 10 210 11 756 4 329 2 331 2 96 6 423 4 541 8 106 8 221 4 658 6 892 4 894 4 895 8 768 2 767 2 342 6 661 12 228 42 552 6 775 2 433 6 779 18 
353 2 239 2 118 4 564 2 2 2 5 2 727 2 184 2 729 2 244 20 616 2 185 6 733 2 682 2 496 2 14 2 498 2 855 2 191 2 580 2 857 2 192 2 622 2 404 2 131 2 689 2 20 44 193 2 860 2 305 2 799 2 864 2 800 4 628 2 746 4 24 4 517 2 519 2 407 20 312 2 521 44 455 2 747 2 805 4 79 2 31 2 523 2 84 2 808 46 878 2 525 2 90 2 89 2 526 38 208 2 209 2 599 2 91 2 326 6 36 2 329 2 96 2 421 2 532 2 816 2 217 2 655 2 43 2 541 2 887 2 106 2 427 4 338 6 892 2 471 2 893 2 895 2 109 2 897 2 342 4 166 2 49 2 770 4 278 2 389 2 904 2 610 2 775 2 836 2 723 2 481 2 667 2 
435 4 118 10 1 8 439 2 119 2 441 4 5 4 244 36 789 4 11 2 20 104 586 4 800 10 27 4 142 14 455 2 456 4 31 10 461 4 35 4 808 78 594 4 599 2 260 4 36 4 38 4 816 4 712 4 380 4 605 8 47 8 382 8 270 4 473 30 826 4 166 2 53 4 610 6 836 6 481 10 612 4 845 4 488 32 399 2 848 24 185 24 186 2 733 2 496 4 190 4 498 28 855 10 856 2 191 10 857 4 736 8 192 6 404 6 303 4 627 2 864 2 626 4 745 4 511 4 628 4 746 10 515 24 517 4 519 4 407 44 521 70 201 4 313 4 315 4 79 2 633 2 523 30 411 8 413 4 414 8 204 8 90 10 208 2 526 14 643 4 753 4 91 4 326 6 756 4 92 16 329 2 331 2 96 4 653 16 541 2 887 2 106 2 221 2 656 4 658 4 894 4 767 2 342 2 228 16 775 2 433 4 780 4 
435 4 561 2 669 2 118 6 5 2 244 14 185 8 496 2 498 12 855 2 191 2 686 10 580 2 857 4 192 2 622 2 404 2 20 40 740 2 800 6 864 2 628 2 746 6 517 4 519 4 407 14 455 2 521 26 459 2 79 2 523 12 807 2 205 2 808 28 526 14 208 2 599 2 210 2 326 4 91 2 36 4 329 2 96 4 816 4 423 2 712 2 605 6 541 2 106 2 221 2 270 2 768 2 342 2 473 6 166 2 904 2 610 2 775 2 836 2 
7 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR utilMDE.Assert$AssertionException (934,1096) (934,1096) 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException 890 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.util.NoSuchElementException 762 129 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (934,1096) (934,1096) 314 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 744 865 498 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V ERROR java.lang.NullPointerException 98 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 98 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (214,416) (214,416) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 1073 4 1193 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NumberFormatException 1123 847 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 1206 325 866 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 1206 325 866 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Intern:intern([D)[D
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:jj_3R_124()Z
daikon.Quantify.Constant:Constant(I)V
daikon.Quant:subsetOf([S[S)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quantify.Length:esc_name()Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_98()Z
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:eltsLTE([II)Z
utilMDE.ArraysMDE:max([I)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:subsetOf([J[J)Z
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:jj_3R_81()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_114()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:lt(II)Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quant:slice([III)[I
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:jj_3R_86()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2087 | return null
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I | ASSIGN | 816 | = null
daikon.Quant:eltsGTE([II)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.ProglangType:isFloat()Z
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sum([I)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern:numIntArrays()I
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:memberOf(F[F)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_17()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:subsetOf([F[D)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.Quant:eq(DD)Z
utilMDE.MathMDE:negate(I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:jj_2_35(I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isIntegral()Z
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfo:isDerived()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:jj_3R_80()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:lexEqual([I[I)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:jj_3R_119()Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Ppt:Ppt()V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfo:relate_var()V
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:jj_3_36()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6369 | = null
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaCharStream:BeginToken()C
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_89()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_55()Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_47()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3R_99()Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Intern:intern([I)[I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_3R_101()Z
jtb.JavaParser:jj_3_27()Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.ValueTuple:isMissing(I)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.JavaParser:jj_3R_126()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfo:is_direct_non_slice_array()Z
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaCharStream:FillBuff()V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_164()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.Quant:memberOf(I[I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:jj_3R_76()Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Debug:logDetail()Z
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.MathMDE:sign(I)I
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:new_ppt()V
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaParser:jj_3R_133()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:subsetOf([D[D)Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_102()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 183341 | = null
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_3R_149()Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(II)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltsGT([II)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:jj_3R_48()Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.diff.Node:Node()V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_29()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.Quant:memberOf(F[D)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:jj_3R_109()Z
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfo:isPointer()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:lexLT([I[I)Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:noDups([I)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:jj_3_20()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.PptSlice1:num_samples()I
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseLT([I)Z
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:jj_3R_105()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.ValueTuple:size()I
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Quant:sameLength([I[I)Z
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 20834 | = null
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | RETURN | 123502 | return null
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I | CONDITION | 4310 | if (x) -> if (!x)
jtb.JavaParser:jj_3_5()Z
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_25()Z
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_77()Z
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:lexLTE([I[I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:jj_3R_60()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:num_sets()I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I | ASSIGN | 184981 | = null
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.PptSlice0:arity()I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:jj_3_28()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.Quant:eq(JJ)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.Invariants:Invariants()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:jj_3_4()Z | CONSTANT | 185855 | 87 -> 0
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:jj_3R_62()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:jj_3R_122()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_12()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_136()Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:subsetOf([D[F)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_72()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_3R_103()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | CONDITION | 15342 | if (x) -> if (!x)
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3_18()Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration; | STATEMENT | 14997 | stmt -> ;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfo:isPrestate()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:pow(II)I
utilMDE.WeakHasherMap:size()I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:jj_3R_63()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseGTE([I)Z | CONDITION | 177097 | if (x) -> if (!x)
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParser:jj_3_15()Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_107()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.ProglangType:isPointerFileRep()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaParser:jj_3R_117()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.JavaParser:jj_3R_163()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:logOn()Z
daikon.ProglangType:dimensions()I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | OPERATOR | 18331 | == -> !=
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_2_17(I)Z
daikon.VarInfoName:hashCode()I
daikon.ModBitTracker:num_vars()I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_123()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:gte(II)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.simplify.SimpUtil:formatInteger(J)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | ASSIGN | 60655 | = null
jtb.JavaParser:jj_3R_69()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object; | RETURN | 20497 | return null
daikon.ModBitTracker:num_samples()I
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParser:jj_3R_70()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_137()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_3()Z
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_21(I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltsLteIndex([I)Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParser:jj_3R_50()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Debug:logOn()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_19()Z
jtb.JavaParser:jj_3R_88()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_3R_116()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_125()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_68()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_104()Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
jtb.JavaParser:jj_2_15(I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.Intern:intern([J)[J
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_161()Z
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J | CONSTANT | 17272 | 2 -> -1
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.ProglangType:base()Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfo:isIOAArray()Z
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:jj_3R_87()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_3R_180()Z
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
jtb.JavaParser:jj_3R_67()Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_108()Z
daikon.PptSlice1:arity()I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.Invariant:prob_or(DD)D
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoAux:hashCode()I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.PptSlice2:arity()I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(Z)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.Quant:setDiff([I[I)[I
daikon.PptName:isEnterPoint()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_35()Z
jtb.JavaCharStream:getEndLine()I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_118()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_106()Z
jtb.JavaParser:jj_3_14()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3R_115()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:union([I[I)[I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_148()Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_52()Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:ne(II)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1082 2 934 2 1096 2 277 2 572 2 585 2 1017 2 793 2 671 4 
1118 2 294 6 179 2 1015 2 473 2 725 6 1009 2 944 2 271 6 272 2 100 2 
1096 2 497 2 870 6 575 2 69 2 854 2 1002 2 1148 2 934 2 357 6 753 6 1229 6 878 4 942 2 
235 8 124 2 43 10 1165 2 524 4 931 10 284 6 934 6 530 2 1020 6 642 4 861 16 286 8 367 10 539 8 329 10 759 12 690 16 1059 2 218 10 1096 6 1062 4 1222 4 501 8 1182 26 1105 2 748 16 226 2 1111 30 229 2 
890 2 
711 2 
43 2 720 2 129 2 931 4 283 2 284 2 1089 2 861 2 1169 2 367 2 329 2 690 2 762 2 218 2 1174 2 1182 4 748 2 81 2 1111 6 353 2 
492 6 218 4 832 2 43 4 1062 2 819 2 1182 12 243 4 326 4 861 8 748 8 367 4 269 6 1111 14 329 4 759 5 690 8 
463 2 592 2 385 2 595 2 172 2 761 2 
1214 2 653 2 105 2 422 2 301 2 224 2 1006 2 201 2 1236 2 711 2 
234 2 566 2 157 2 568 2 934 4 860 2 646 2 732 2 585 2 248 2 24 2 1096 4 104 2 1033 2 869 2 1175 2 35 2 197 2 37 2 117 2 513 2 511 2 515 2 517 2 203 2 1204 2 527 2 1052 2 1055 2 453 4 290 2 1065 2 459 4 1067 2 1141 4 911 2 622 2 1228 2 559 2 303 4 706 2 775 2 229 2 154 2 
391 4 675 4 43 16 1119 6 8 4 888 4 474 6 318 2 931 6 820 2 934 4 284 4 1020 4 861 32 326 4 243 4 286 6 367 16 539 16 329 16 904 4 690 32 759 22 545 2 492 6 218 16 1096 4 949 6 1222 2 1146 6 1182 48 802 2 748 32 804 2 226 2 1008 8 1111 54 269 6 
24 2 374 2 288 2 
808 2 1134 2 615 2 795 2 766 2 1175 2 128 10 107 2 192 2 446 2 114 2 349 22 1027 2 309 2 
314 2 5 2 781 1 315 2 934 32 1088 2 14 2 641 2 640 16 327 1 1094 1 793 2 332 2 1096 30 656 4 180 2 184 8 499 3 189 2 955 2 191 2 962 2 963 2 1110 4 1114 1 514 2 1117 1 204 1 977 2 46 2 519 2 679 2 356 2 531 2 985 2 533 2 365 11 540 2 58 8 993 2 60 2 544 2 61 2 995 2 371 1 996 2 221 6 71 1 701 8 1148 2 703 2 558 1 1005 6 228 2 388 2 713 2 849 1 1012 8 393 2 237 6 1160 3 852 4 1162 1 87 2 238 1 859 2 97 2 734 4 736 4 586 2 1172 2 254 2 588 3 1036 1 108 2 113 2 263 2 427 2 877 2 267 1 120 2 750 6 122 2 1045 2 1196 2 126 2 280 2 604 2 448 1 450 1 611 5 135 1 763 17 138 11 292 2 291 2 458 2 150 3 913 1 627 1 152 3 308 2 1079 2 
1076 2 
934 2 520 2 
934 4 1143 2 1216 2 
1 2 6 2 317 2 11 2 932 2 12 56 15 2 644 2 323 4 324 2 645 2 19 30 939 4 328 2 22 94 945 2 651 2 335 2 947 2 948 104 26 22 659 4 340 2 953 4 660 2 30 6 31 2 32 36 960 30 345 94 347 38 662 4 33 4 961 2 350 18 666 2 40 2 971 2 670 2 672 4 972 2 975 2 976 18 44 4 45 2 676 2 979 2 677 2 678 18 984 6 681 2 680 16 986 2 682 2 360 14 988 44 49 2 992 14 53 2 687 2 688 2 62 2 693 2 998 2 696 2 68 2 699 2 72 2 700 358 74 2 1004 2 76 2 705 4 382 4 386 2 78 4 1007 2 707 4 82 2 83 8 712 2 392 2 1013 4 86 2 84 2 718 2 394 4 395 2 396 2 398 4 89 2 401 2 728 246 729 2 1023 2 94 246 731 72 96 94 733 2 406 4 1026 4 408 2 409 94 411 2 102 12 415 94 738 2 103 2 418 40 419 4 1032 60 742 2 743 2 1035 4 744 2 110 4 746 20 1038 2 428 2 429 2 119 30 432 6 1043 4 1044 4 434 2 1047 2 125 2 751 2 441 12 130 2 447 2 449 2 132 2 1053 2 451 2 134 4 757 8 760 2 1058 2 140 8 765 2 455 2 141 2 1063 2 1066 60 147 2 768 2 460 2 770 18 1070 2 462 2 461 2 772 2 771 4 1075 2 464 4 774 2 153 4 776 2 1078 2 155 4 468 2 778 18 158 44 472 2 475 2 161 2 160 2 1085 4 163 2 1086 22 164 2 484 2 486 2 488 52 790 6 489 2 173 94 792 2 490 4 493 4 494 42 176 4 177 2 1099 2 181 2 1100 12 1102 4 498 2 185 2 186 94 500 2 193 2 504 2 800 50 196 4 1106 2 1108 2 510 2 1109 94 805 48 1115 8 809 4 1120 4 810 8 206 2 518 2 205 94 207 12 814 2 1121 4 522 4 817 42 210 18 528 2 532 4 1125 4 824 18 535 2 1128 2 1129 16 827 2 217 2 547 2 546 14 831 4 833 60 220 2 1139 18 838 2 552 2 553 2 560 2 1149 2 1150 4 561 2 841 74 842 2 227 6 1156 2 564 8 1157 22 230 2 851 2 570 2 573 4 856 94 578 2 239 94 579 86 240 4 1168 2 582 12 245 2 865 2 250 2 1171 2 868 18 256 2 873 246 1176 40 258 8 589 2 1178 4 1179 4 262 4 1185 16 593 2 1187 4 270 4 879 2 1189 2 596 2 882 2 274 4 1195 2 1197 2 1199 4 276 8 605 2 606 2 891 28 282 2 609 2 1210 4 1215 4 618 10 1221 2 1223 2 908 2 298 2 299 2 1225 12 910 2 912 2 1227 4 914 2 307 2 915 4 1231 4 629 2 631 2 920 2 632 2 310 4 311 2 312 48 
438 2 571 2 405 2 10 1 
236 2 438 2 
24 2 438 2 864 2 98 2 341 2 524 2 525 2 
822 2 438 2 341 2 
438 2 341 2 807 2 
1218 2 571 2 67 2 
438 2 341 2 
1218 2 73 2 
438 2 940 2 
1218 2 571 2 133 2 
875 2 801 2 571 2 
571 2 968 2 1234 2 
973 2 370 2 571 2 
63 2 571 2 295 2 
1218 2 898 2 
438 2 56 2 
875 2 536 2 
686 2 1234 2 
370 2 926 2 
777 2 
1218 2 443 2 
764 2 63 2 
370 2 554 2 
938 2 1234 2 
875 2 999 2 
1218 2 571 2 133 2 198 2 
2 2 1218 2 571 2 133 2 198 2 
1218 2 571 2 1041 2 
1218 2 571 2 925 2 
637 2 
24 2 739 2 175 2 525 2 
24 2 739 2 1181 2 98 2 175 2 525 2 
24 2 438 2 1103 2 341 2 524 2 525 2 
157 2 505 2 
24 2 66 2 524 2 525 2 
370 2 445 2 
63 2 99 2 
875 2 1166 2 
36 2 1234 2 
503 2 63 2 1234 2 
63 2 616 2 1234 2 
63 2 208 2 1234 2 
63 2 496 2 1234 2 
24 2 871 2 525 2 214 2 412 2 416 6 
1218 2 431 2 
156 2 598 2 1170 2 41 4 652 2 716 2 717 2 602 2 151 2 702 2 557 2 17 2 349 6 403 2 169 2 487 2 171 4 57 2 
571 2 252 2 
254 2 
314 2 5 2 781 2 315 2 783 2 934 26 641 2 640 6 18 2 943 4 793 2 330 2 1095 2 332 6 178 2 1096 26 656 4 658 2 184 6 189 2 955 2 191 2 664 2 963 2 39 2 200 4 977 2 46 2 679 2 531 2 59 4 544 2 60 2 995 2 371 2 996 2 221 6 697 2 1005 4 709 2 228 2 848 2 393 2 237 2 852 4 726 2 734 4 736 4 586 2 1031 2 249 2 1172 2 587 2 108 2 1037 2 1180 2 427 2 876 2 120 2 1190 2 750 2 122 2 1046 2 435 2 126 2 897 2 1212 2 755 2 763 4 292 8 1064 2 148 2 769 2 466 2 
314 2 5 2 781 2 315 2 783 2 934 26 641 2 640 6 943 4 793 2 330 2 1095 2 332 6 178 2 1096 26 656 4 658 2 184 6 189 2 955 2 191 2 664 2 963 2 39 2 200 4 977 2 46 2 679 2 531 2 59 4 544 2 60 2 61 2 995 2 371 2 996 2 221 6 697 2 1142 2 1005 6 709 2 228 2 848 2 393 2 237 2 852 4 734 4 736 4 586 2 1031 2 249 2 1172 2 587 2 255 2 108 2 1037 2 1180 2 427 2 876 2 120 2 1190 2 750 2 122 2 1046 2 435 2 126 2 279 2 1209 2 897 2 1212 2 755 2 763 4 292 8 1064 2 148 2 466 2 1079 2 
673 2 
0 2 698 2 
469 4 275 2 617 2 1098 4 1015 2 694 2 657 2 619 2 725 2 90 2 302 2 858 2 168 2 941 2 1155 2 410 2 272 2 271 2 
469 4 1015 4 1084 2 576 4 725 6 934 12 90 2 641 2 727 2 858 2 168 2 242 2 788 2 941 2 407 2 410 2 736 2 586 2 737 4 1096 6 1098 4 179 2 656 2 741 2 657 2 1104 2 191 2 591 2 264 6 509 2 665 2 963 2 271 4 272 4 123 2 275 2 811 2 1201 2 126 2 1202 2 978 2 46 2 980 4 281 4 896 2 452 2 544 2 368 2 617 2 294 6 694 4 221 4 695 2 619 2 302 2 708 2 1009 2 1155 2 467 2 922 4 
469 4 1015 4 1084 2 473 2 576 4 725 4 934 12 90 2 641 2 727 2 858 2 168 2 242 2 788 2 941 2 407 2 410 2 736 2 586 2 737 4 1096 6 1098 4 656 2 741 2 657 2 1104 2 191 2 591 2 264 6 509 2 665 2 963 2 271 6 272 4 123 2 275 2 811 2 1201 2 126 2 1202 2 978 2 46 2 980 4 281 4 896 2 452 2 544 2 368 2 617 2 294 6 694 4 221 4 695 2 619 2 302 2 708 2 1009 2 1155 2 467 2 922 4 
469 4 1015 4 1084 2 576 8 725 6 934 12 90 2 641 2 727 2 858 2 168 2 242 2 788 2 941 2 407 2 410 2 944 2 736 2 586 2 737 4 1096 6 1098 4 656 2 741 2 657 2 1104 2 191 2 591 2 264 6 509 2 665 2 963 2 271 6 272 4 123 2 275 2 811 2 1201 2 126 2 1202 2 978 2 46 2 980 4 281 4 896 2 452 2 544 2 368 2 617 2 294 6 694 4 221 4 695 2 619 2 302 2 708 2 1009 2 1155 2 467 2 922 4 
469 4 1015 4 1084 2 473 2 576 8 725 6 934 12 90 2 641 2 727 2 858 2 168 2 242 2 788 2 941 2 407 2 410 2 944 2 736 2 586 2 737 8 1096 6 656 2 1098 4 741 2 657 2 1104 2 191 2 591 2 264 10 509 2 665 2 963 2 271 8 272 4 123 2 275 2 811 2 1201 2 126 2 1202 2 978 2 46 2 980 4 281 4 896 2 452 2 544 2 368 2 617 2 294 8 694 4 221 4 695 2 619 2 302 2 708 2 1009 2 1155 2 467 2 922 4 
469 4 1015 4 1084 2 576 8 725 6 934 12 90 2 641 2 727 2 858 2 168 2 242 2 788 2 941 2 407 2 410 2 944 2 736 2 586 2 737 8 1096 6 1098 4 656 2 741 2 657 2 1104 2 191 2 591 2 264 10 509 2 665 2 963 2 271 6 272 4 123 2 275 2 811 2 1201 2 126 2 1202 2 978 2 46 2 980 4 281 4 896 2 452 2 544 2 368 2 617 2 294 6 694 4 221 4 695 2 619 2 302 2 708 2 1009 2 1155 2 467 2 922 4 
314 2 5 2 315 2 934 46 641 2 640 8 643 6 320 2 941 2 943 4 332 6 656 4 657 2 337 2 955 12 954 2 957 1 665 2 963 2 966 1 39 2 967 2 974 2 355 2 977 2 978 2 46 2 980 4 981 6 48 2 679 2 987 6 358 2 359 2 60 2 61 2 995 2 368 2 996 2 65 6 694 4 695 2 1005 6 708 2 1009 4 393 2 1015 4 725 4 724 6 90 2 727 4 1025 4 730 2 402 1 734 4 407 2 410 2 736 4 1030 1 741 2 106 8 108 2 424 6 427 2 1040 2 120 2 750 2 122 2 123 2 126 2 1054 1 1056 2 452 2 136 2 763 2 1064 4 457 6 1071 2 1076 6 466 2 467 4 1079 2 469 4 471 2 1084 2 473 4 784 6 168 2 788 2 789 1 793 2 178 2 1096 24 1097 2 1098 4 184 6 1104 2 189 2 190 6 191 2 509 2 1113 2 512 2 811 2 813 2 520 6 816 1 523 6 209 2 531 2 534 2 821 2 825 2 544 2 829 2 548 6 221 6 1140 6 1143 6 839 2 225 2 843 10 1153 7 1155 2 845 2 228 2 237 2 852 4 576 2 858 2 242 2 583 2 586 2 1172 2 251 2 1184 2 264 2 271 8 272 4 1190 2 1191 2 275 2 1201 2 1202 2 281 8 607 6 896 2 285 2 1212 2 617 2 294 12 292 4 1219 7 909 1 297 4 619 2 302 2 628 1 922 6 
314 2 469 4 471 2 5 2 1084 2 315 2 482 2 934 48 784 6 640 8 641 2 320 2 643 6 168 2 788 2 941 2 943 4 793 2 944 4 332 6 178 2 25 2 1097 2 1096 26 1098 4 656 4 657 2 337 2 184 6 954 2 190 6 955 12 189 4 1104 2 191 2 665 2 509 2 963 2 39 2 200 2 967 2 1113 2 974 2 355 2 512 2 811 2 977 4 978 2 813 2 980 4 46 2 520 6 981 6 523 6 48 2 209 2 679 4 531 2 821 2 358 2 987 6 534 2 359 2 825 2 60 2 544 2 829 2 61 2 368 2 995 2 65 6 548 6 996 2 694 4 221 6 695 2 1140 6 1143 6 839 2 1005 6 225 2 843 10 708 2 1009 4 845 2 1155 2 228 2 237 2 393 2 852 4 1015 4 576 6 724 6 725 8 90 2 727 4 858 2 1025 4 730 2 242 2 583 2 734 4 407 2 410 2 736 4 586 2 251 2 1172 2 741 2 106 8 108 2 424 6 427 2 264 2 1184 2 1040 2 1190 2 120 2 272 4 271 8 750 2 123 2 122 2 1191 2 275 2 1201 2 126 2 1202 2 281 8 607 6 896 2 285 2 1212 2 1056 2 136 2 452 2 763 2 292 8 294 12 617 2 1064 4 457 6 297 4 619 2 1071 2 302 2 1076 6 466 2 467 4 922 6 1079 2 
314 2 469 4 471 2 5 2 315 2 1084 2 482 2 934 48 784 6 640 8 641 2 320 2 643 6 168 2 788 2 941 2 943 4 793 2 944 4 332 6 178 2 25 2 1097 2 1096 26 1098 4 656 4 657 2 337 2 184 6 954 2 190 6 955 12 189 4 1104 2 191 2 665 2 509 2 963 2 39 2 200 2 967 2 1113 2 974 2 355 2 512 2 811 2 977 4 978 2 813 2 980 4 46 2 520 6 981 6 523 6 48 2 209 2 679 4 531 2 821 2 358 2 987 6 534 2 359 2 825 2 60 2 544 2 829 2 61 2 368 2 995 2 65 6 548 6 996 2 694 4 221 6 695 2 1140 6 1143 6 839 2 1005 6 225 2 843 10 708 2 1009 4 845 2 1155 2 228 2 237 2 393 2 852 4 1015 4 576 6 724 6 725 8 90 2 727 4 858 2 1025 4 730 2 242 2 583 2 734 4 407 2 410 2 736 4 586 2 737 4 251 2 1172 2 741 2 106 8 108 2 424 6 427 2 1184 2 264 6 1040 2 1190 2 120 2 272 4 271 8 750 2 123 2 122 2 1191 2 275 2 1201 2 126 2 1202 2 281 8 607 6 896 2 285 2 1212 2 1056 2 136 2 452 2 763 2 292 8 294 12 617 2 1064 4 457 6 297 4 619 2 1071 2 302 2 1076 6 466 2 467 4 922 6 1079 2 
314 2 633 2 5 2 315 2 934 52 641 2 640 12 320 2 643 6 20 6 941 2 943 6 944 4 332 8 25 2 656 4 657 2 337 2 29 6 955 10 954 2 348 6 665 2 963 2 964 6 39 4 967 2 354 6 974 2 355 2 977 4 978 2 980 4 46 2 981 6 48 2 679 4 987 12 358 2 359 2 60 2 61 2 368 2 995 2 996 2 65 6 694 4 695 2 1005 6 708 2 1009 4 393 2 1015 4 725 10 724 6 90 2 727 4 1025 4 95 2 730 2 734 4 407 2 410 2 736 4 737 4 741 2 106 8 108 2 424 12 427 2 749 2 1040 2 120 2 750 4 122 2 123 2 126 2 1056 2 452 2 136 2 763 4 1064 4 457 6 1069 6 1071 2 1076 12 466 2 467 4 1079 2 469 4 471 2 1084 2 473 2 482 2 1087 6 784 6 168 2 788 2 793 2 178 2 1096 24 1097 2 1098 4 179 2 184 8 796 2 1104 2 189 4 190 6 191 2 509 2 200 2 1113 2 512 2 811 2 813 2 520 12 523 12 209 2 531 2 821 2 825 2 544 2 829 2 548 6 221 6 1140 6 1143 12 839 2 225 2 843 8 1155 2 845 2 228 2 237 4 852 4 1161 2 576 6 1167 6 858 2 242 2 583 2 586 2 1172 2 251 2 264 6 1184 2 271 10 272 4 1190 4 1191 2 275 2 1201 2 1202 2 281 8 607 6 896 2 285 2 1211 2 1212 2 614 6 617 2 294 16 292 10 297 4 619 2 302 2 1230 2 1232 2 922 6 
469 2 275 2 1201 2 1015 4 978 2 1202 2 980 2 1084 2 576 6 281 2 725 6 934 4 858 2 242 2 407 2 941 2 410 2 944 2 452 2 737 4 294 4 617 2 1098 2 657 2 695 2 1104 2 619 2 264 4 665 2 509 2 1009 2 922 2 271 6 272 4 123 2 
469 2 314 2 5 2 315 2 1084 2 481 3 934 28 641 2 640 8 941 2 943 4 944 2 793 2 332 6 178 2 1096 24 1098 2 656 4 657 2 28 2 184 6 1104 2 955 4 191 2 665 2 509 2 963 2 978 2 980 2 46 2 531 2 534 2 60 2 544 2 61 2 995 2 996 2 221 6 695 2 555 2 1005 6 843 2 1009 2 228 2 713 2 1014 2 393 2 237 3 852 4 1015 4 576 6 725 6 858 2 242 2 580 2 734 4 407 2 410 2 736 4 586 2 1172 2 741 2 254 2 108 2 263 2 427 2 264 2 272 4 271 6 120 2 750 3 123 2 122 2 275 2 1201 2 126 2 1202 2 281 2 452 2 763 3 294 4 617 2 1064 2 144 2 619 2 308 2 466 2 922 2 1079 2 
469 4 1015 4 1084 2 576 8 725 6 934 12 90 2 641 2 727 2 858 2 168 2 242 2 788 2 941 2 407 2 410 2 944 2 736 2 586 2 737 8 1096 6 1098 4 656 2 741 2 657 2 1104 2 191 2 591 2 264 10 509 2 665 2 963 2 271 6 272 4 123 2 275 2 811 2 1201 2 126 2 1202 2 978 2 46 2 980 4 281 4 896 2 452 2 544 2 368 2 617 2 294 6 694 4 221 4 695 2 619 2 302 2 708 2 1009 2 1155 2 467 2 922 4 
469 4 1015 4 1084 2 576 8 725 8 934 12 90 2 641 2 727 2 858 2 1090 2 168 2 242 2 788 2 407 2 941 2 410 2 944 2 736 2 586 2 737 8 1096 6 656 2 1098 4 179 2 741 2 657 2 342 2 191 2 264 10 509 2 665 2 963 2 271 6 272 4 123 2 275 2 811 2 1201 2 126 2 1202 2 978 2 46 2 980 4 281 4 896 2 452 2 544 2 368 2 617 2 294 8 694 4 221 4 695 2 907 4 619 2 302 2 708 2 1009 2 1155 2 467 2 922 4 
3 2 665 2 123 2 
3 2 665 2 123 2 
469 2 3 2 5 2 315 2 473 4 478 2 933 2 934 24 641 2 640 2 788 2 1093 4 941 2 793 2 944 4 332 2 178 2 1096 16 656 4 1098 2 179 4 657 2 184 2 189 4 955 4 191 2 665 6 963 2 669 2 970 2 811 2 977 4 46 2 980 2 679 4 531 2 216 2 544 2 60 2 61 2 368 2 995 2 996 2 694 4 221 6 378 4 1003 2 1005 6 225 2 843 2 1009 4 1155 2 228 2 393 2 852 4 1015 4 576 6 725 12 90 2 727 4 1025 2 730 2 242 2 734 4 863 2 410 4 736 4 586 2 247 2 737 4 1172 2 867 2 108 2 427 2 264 6 1039 2 120 2 271 12 272 4 122 2 123 4 1191 2 126 2 1201 2 281 4 607 2 1208 2 1212 4 755 4 289 2 763 2 292 4 294 16 456 2 1064 6 297 2 623 2 626 2 305 2 773 2 466 2 467 2 922 4 1079 2 
0 2 355 2 1096 2 456 2 297 2 955 2 818 2 48 2 747 2 607 2 934 4 641 2 305 2 168 2 843 2 244 2 247 2 
469 2 3 2 5 2 315 2 473 4 782 2 478 2 933 2 934 24 641 2 640 2 788 2 1093 4 941 2 793 2 944 4 332 2 178 2 1096 16 656 4 1098 2 179 4 657 2 184 2 189 4 955 2 191 2 661 2 665 6 963 2 352 2 669 2 811 2 977 4 980 2 46 2 679 4 531 2 991 2 216 2 544 2 60 2 61 2 368 2 995 2 996 2 694 4 221 6 378 4 562 2 1005 6 225 2 708 2 1009 4 1155 2 228 2 393 2 852 4 1015 4 576 6 725 12 90 2 727 4 1025 2 730 2 242 2 734 4 863 4 410 4 736 4 586 2 247 2 737 4 1172 2 867 2 108 2 427 2 264 6 1039 2 120 2 271 12 272 4 122 2 123 4 1191 2 126 2 1201 2 281 4 607 2 1208 2 1212 4 755 4 763 4 292 4 294 16 456 2 1064 6 626 2 305 2 773 2 466 2 467 4 922 4 1079 2 
469 2 3 2 5 2 315 2 473 4 478 2 933 2 934 24 641 2 640 2 788 2 1093 4 941 2 793 2 944 4 332 2 178 2 1096 16 656 4 1098 2 179 4 657 2 184 2 189 4 955 4 191 2 665 6 963 2 669 2 811 2 977 4 46 2 980 2 679 4 531 2 1127 2 215 2 216 2 544 2 60 2 61 2 368 2 995 2 996 2 694 4 221 6 378 4 1005 6 1152 2 225 2 843 2 708 2 1009 4 1155 2 228 2 393 2 852 4 1015 4 576 6 725 12 90 2 727 4 1025 2 730 2 242 2 734 4 863 2 410 4 736 4 586 2 247 2 737 4 1172 2 867 2 108 2 427 2 264 6 1039 2 120 2 271 12 272 4 122 2 123 4 1191 2 126 2 1201 2 127 2 281 4 607 2 1208 2 1212 4 755 4 763 2 292 4 294 16 456 2 1064 6 297 2 626 2 305 2 773 2 466 2 467 4 922 4 1079 2 313 2 
314 2 633 2 928 2 4 2 927 2 634 2 929 16 7 10 315 2 316 2 9 4 638 2 934 44 640 36 641 2 935 2 321 2 322 2 16 6 936 2 937 9 647 2 21 2 943 12 329 4 330 2 332 14 946 4 656 4 336 10 28 2 339 3 955 2 958 2 346 2 663 10 664 2 963 2 667 2 38 10 351 2 39 22 967 2 969 2 42 10 674 4 43 4 46 2 982 2 983 2 683 2 361 2 989 2 362 2 50 4 684 4 51 2 363 2 364 2 685 2 52 2 366 2 367 4 55 2 689 2 690 8 692 4 994 2 61 6 369 18 995 2 371 2 64 2 372 4 373 6 997 2 375 2 1001 2 70 2 376 2 701 4 383 2 384 2 77 22 1005 14 709 2 1010 9 714 6 1011 2 1012 14 393 2 85 2 719 2 1018 2 1019 2 91 12 400 2 1020 4 93 2 1024 2 95 2 404 2 734 6 1028 2 736 4 414 4 1034 4 108 4 745 8 109 2 425 8 426 2 427 2 116 2 748 8 749 2 433 2 1042 4 120 4 750 16 121 3 122 4 435 2 126 2 1048 2 439 2 442 2 440 2 1050 2 1049 2 444 3 752 10 131 3 758 2 136 2 759 8 1057 4 137 2 763 25 1060 1 454 2 142 2 1064 2 144 2 1068 4 146 2 1073 2 1074 4 465 8 1077 4 466 2 1079 6 1080 50 779 2 1081 2 471 4 780 2 781 2 1083 2 477 2 162 2 783 16 481 2 480 2 483 6 165 2 485 2 170 2 793 4 791 2 491 4 794 4 492 6 1096 32 1101 2 183 2 184 14 796 2 187 26 191 2 194 2 799 16 507 6 802 2 803 4 804 4 1107 2 199 4 1111 16 1113 2 1116 2 812 2 1122 4 1123 2 1124 2 211 2 529 2 531 4 213 4 1126 20 825 2 537 6 538 18 539 6 541 2 542 2 543 10 544 2 828 2 830 2 1132 2 218 4 550 2 221 6 835 4 551 2 837 2 222 22 555 2 839 2 1148 2 556 26 223 2 840 2 226 2 1154 2 844 2 228 2 1158 2 847 2 1159 2 232 2 567 64 569 6 237 25 852 6 1161 2 574 2 857 2 580 2 862 2 243 4 861 8 581 2 246 2 586 2 1173 2 587 2 872 4 874 2 590 2 259 26 261 2 260 2 1180 2 1182 12 1183 6 1184 2 265 2 1186 2 594 2 268 2 1190 44 880 2 597 4 1193 2 599 2 600 2 1194 4 884 8 601 2 1198 4 886 2 1200 4 887 2 892 2 894 16 895 2 897 2 900 4 1212 2 610 4 1213 2 901 2 286 6 612 6 287 4 902 2 903 6 293 2 292 60 1220 2 906 2 296 2 621 2 624 2 625 2 306 2 1230 2 1232 2 919 2 921 4 923 3 1237 2 
314 2 237 2 7 4 887 2 812 2 444 2 477 2 857 2 934 2 640 2 989 2 943 2 1130 2 332 2 543 2 763 2 1096 2 336 2 184 2 1107 2 1158 2 880 2 1190 6 750 2 
314 2 237 2 7 4 887 2 812 2 444 2 477 2 857 2 934 2 640 2 989 2 943 2 1130 2 332 2 543 2 763 2 1096 2 336 2 184 2 1107 2 1158 2 880 2 1190 6 750 2 
314 2 237 2 7 4 887 2 812 2 444 2 477 2 857 2 934 2 640 2 989 2 943 2 1130 2 332 2 543 2 763 2 1096 2 336 2 184 2 1107 2 1158 2 880 2 1190 6 750 2 
314 2 1012 2 237 3 437 2 43 2 278 2 476 2 892 4 934 10 640 2 1020 2 1207 2 92 2 937 3 861 2 647 4 286 4 367 2 287 2 329 2 690 2 763 3 139 2 218 2 1096 4 1137 2 253 2 551 4 952 4 188 3 259 6 701 2 625 2 344 2 1182 4 748 2 844 4 1111 5 1010 3 1158 2 
314 2 1012 2 237 2 437 2 43 2 278 2 476 2 892 4 934 10 640 2 1020 2 1207 2 92 2 937 2 861 2 647 4 286 4 367 2 539 2 287 2 329 2 759 2 690 2 763 2 139 2 218 2 1096 4 1137 2 253 2 551 4 952 4 188 2 259 6 701 2 625 2 344 2 1182 4 748 2 226 2 844 4 1111 4 1010 2 1158 2 
314 2 1012 2 237 2 437 2 43 2 278 2 476 2 892 4 934 10 640 2 1020 2 1207 2 92 2 937 2 861 2 647 4 286 4 367 2 539 2 287 2 329 2 759 2 690 2 763 2 139 2 218 2 1096 4 1137 2 253 2 551 4 952 4 188 2 259 6 701 2 625 2 344 2 1182 4 748 2 226 2 844 4 1111 4 1010 2 1158 2 
314 2 1012 2 237 2 437 2 43 2 278 2 476 2 892 4 934 10 640 2 1020 2 1207 2 92 2 937 2 861 2 647 4 286 4 367 2 539 2 287 2 329 2 759 2 690 2 763 2 139 2 218 2 1096 4 1137 2 253 2 551 4 952 4 188 2 259 6 701 2 625 2 344 2 1182 4 748 2 226 2 844 4 1111 4 1010 2 1158 2 
314 2 1012 2 237 2 437 2 43 2 278 2 476 2 892 4 934 10 640 2 1020 2 1207 2 92 2 937 2 861 2 647 4 286 4 367 2 539 4 287 2 329 2 759 4 690 2 763 2 139 2 218 2 1096 4 1137 2 253 2 551 4 952 4 188 2 259 6 701 2 625 2 344 2 1182 4 748 2 226 4 844 4 1111 4 1010 2 1158 2 
1072 2 704 2 1217 2 439 2 951 2 389 2 
1192 2 715 2 767 2 47 2 54 2 951 2 783 2 
636 2 521 2 853 2 721 2 934 10 1021 2 987 2 166 1 241 2 1092 2 584 2 826 2 761 1 905 2 1096 8 549 2 834 2 143 2 257 2 343 1 191 2 502 2 463 1 304 2 918 2 266 1 
1194 2 492 4 218 2 43 2 1123 2 1182 4 243 2 861 2 748 2 367 2 1111 5 329 2 847 2 759 1 690 2 101 2 
883 2 850 2 1096 1 655 1 654 2 516 2 551 2 815 7 423 2 892 2 934 1 88 2 959 2 167 2 118 2 844 2 565 2 881 4 
883 2 850 4 516 2 654 4 551 2 815 6 423 2 892 2 88 2 959 2 167 2 118 2 844 2 565 4 881 4 
883 2 850 8 1096 1 655 1 516 8 654 8 551 2 815 10 423 2 892 2 934 1 88 2 959 2 167 2 118 6 844 2 565 8 881 4 
883 2 850 2 654 2 551 2 815 2 423 2 892 2 88 2 959 2 167 2 844 2 565 2 881 2 
470 4 159 2 162 2 479 2 319 16 639 4 934 78 13 2 1091 4 325 2 786 2 787 16 785 4 174 4 331 4 649 8 23 30 333 4 334 8 650 4 495 24 1096 70 950 6 27 8 182 10 338 4 956 8 798 2 34 4 508 4 1112 16 806 2 202 24 1116 2 526 2 531 2 212 4 823 4 990 6 1131 10 61 26 1136 8 1135 4 1138 2 219 4 836 14 1000 4 1144 2 377 4 379 10 1145 4 1147 8 380 10 75 8 381 4 1005 102 1151 4 79 4 80 4 387 4 710 2 846 10 233 4 390 4 852 44 1016 11 1164 6 1163 4 855 8 1018 2 722 4 397 4 1022 4 734 36 735 4 413 4 866 2 417 2 740 6 420 4 421 4 108 6 1177 10 112 4 115 4 1188 10 430 32 122 6 273 4 436 4 885 4 889 1 603 4 1205 4 1206 2 893 2 608 2 1051 4 899 2 754 2 613 2 145 4 1224 16 149 2 300 24 917 4 630 4 1233 2 1079 28 924 4 
470 2 852 14 1016 2 1164 2 1163 2 1018 2 723 2 162 2 934 28 325 2 648 2 734 14 174 4 649 6 23 6 417 2 866 2 650 4 740 4 495 8 1096 26 182 6 421 2 108 2 797 2 111 2 1177 2 798 2 195 2 965 2 122 2 1116 2 436 4 885 2 1203 2 1206 2 531 2 1051 4 823 4 990 2 691 2 61 12 1133 10 1135 2 1061 2 1138 2 1224 14 377 2 149 2 1145 4 1226 2 380 6 1005 40 79 2 1233 2 1079 12 846 6 1235 2 924 4 
470 6 159 2 162 2 934 90 639 4 1091 4 325 2 786 2 648 4 174 6 331 4 649 8 23 22 333 6 334 12 650 6 495 42 1096 78 27 6 182 12 338 6 797 2 798 4 195 2 506 2 34 4 508 4 1112 6 668 6 202 12 806 2 1116 2 531 4 212 6 823 6 990 12 61 22 1133 12 1136 6 1135 6 1138 2 836 12 1000 6 377 2 1144 2 1145 6 380 12 381 4 1005 90 1151 6 79 2 80 6 846 12 233 6 852 42 1016 12 1164 6 1163 6 722 6 1018 2 723 2 577 2 734 36 735 6 1029 2 413 6 866 2 740 8 420 4 421 6 108 10 111 2 1177 12 115 4 122 10 273 6 436 4 885 2 1203 2 1205 6 603 6 1206 2 1051 6 899 2 756 2 1061 4 145 4 1224 4 620 6 1226 3 300 12 916 6 917 6 630 4 1079 22 1235 2 924 6 
1116 2 635 2 852 4 1206 2 930 2 1018 2 162 2 934 12 531 2 325 2 734 4 866 2 61 4 417 2 1096 12 1138 2 1224 4 108 2 1005 10 563 2 1233 2 1079 4 231 2 122 2 
399 2 

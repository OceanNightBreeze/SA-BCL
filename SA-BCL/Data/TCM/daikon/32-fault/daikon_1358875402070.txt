#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 337 (474,646) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 57 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (58,231,283,602,873) (58,231,283,602,873) (58,231,283,602,873) (58,231,283,602,873) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 636 308 346 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException (713,905) (713,905) 822 709 456 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 822 709 456 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException (713,905) (713,905) (713,905) (713,905) 822 709 456 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:jj_3R_55()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String; | CONSTANT | 11304 | 2 -> 0
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:eltwiseGTE([I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([J)[J
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([D[F)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getBeginLine()I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:jj_2_15(I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.ProglangType:baseIsIntegral()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 4201 | 0 -> -1
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:lexNotEqual([I[I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_69()Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:lte(II)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoAux:hashCode()I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:gte(II)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_15()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Ppt:Ppt()V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_3R_52()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:sameLength([I[I)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.Quant:eq(DD)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.Invariant:justified()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:pow(II)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ProglangType:baseIsFloat()Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.PptSlice2:arity()I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.diff.Node:Node()V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_3R_58()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:memberOf(S[S)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.MathMDE:sign(I)I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3R_50()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.PptSlice1:num_samples()I
daikon.ModBitTracker:num_vars()I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.Quant:slice([III)[I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:intersection([I[I)[I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:lt(II)Z
daikon.inv.Invariant:getConfidence()D
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 24075 | return null
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z | CONSTANT | 40107 | 0 -> -1
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[D)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.ProglangType:dimensions()I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_3R_51()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:eltsGT([II)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_2_14(I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3_13()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I | ASSIGN | 23606 | = null
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(D[F)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.PptName:isEnterPoint()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Intern:intern([I)[I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_135()Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.PptSlice0:arity()I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.Intern:numIntArrays()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3R_85()Z
daikon.PptSlice1:arity()I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody; | STATEMENT | 24539 | stmt -> ;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:lexGT([I[I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfo:relate_var()V
jtb.JavaParser:jj_3R_48()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:element_range([I)I
utilMDE.MathMDE:modulus([I)[I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3_1()Z
daikon.diff.RootNode:RootNode()V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.Invariant:logDetail()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsEqual([II)Z
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:jj_2_1(I)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_2_16(I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z | CONDITION | 155109 | if (x) -> if (!x)
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.ProglangType:isIntegral()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V | OPERATOR | 5137 | + -> /
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String; | RETURN | 109561 | return null
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_54()Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:passes()Z
utilMDE.Intern:intern([D)[D
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.InvMap:InvMap()V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName:hashCode()I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:size()I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I | CONSTANT | 65761 | 0 -> 1
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:eq(II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_ntk()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.Quant:eq(FF)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:gt(II)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsLTE([II)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_3R_57()Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaCharStream:readChar()C
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.ProglangType:isFloat()Z
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z | CONSTANT | 31385 | 1 -> 0
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParser:jj_2_13(I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:logOn()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:pairwiseGT([I[I)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:isScalar()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.ProglangType:isArray()Z
daikon.Quant:concat([I[I)[I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_sets()I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 2763 | = null
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | STATEMENT | 10772 | stmt -> ;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:memberOf(I[I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
362 2 1 2 281 4 660 2 802 2 744 2 390 2 751 2 759 2 
738 6 457 6 298 6 800 2 804 2 260 2 294 2 537 2 276 2 246 2 832 2 
265 2 309 2 769 2 2 2 805 6 744 2 790 4 495 4 711 6 759 2 323 6 682 6 128 2 
247 2 370 2 705 16 114 4 885 16 686 2 685 10 759 6 120 2 287 29 689 26 661 4 716 10 427 8 96 10 204 2 504 8 797 2 861 10 290 16 900 12 133 10 744 6 443 4 444 6 644 8 242 4 726 8 54 6 414 2 
547 6 462 4 
116 2 
474 2 148 2 285 2 575 2 272 2 646 2 731 2 904 2 762 2 424 2 337 2 782 2 522 2 511 2 155 2 581 4 97 2 
628 2 111 2 370 2 705 32 752 6 817 4 885 32 685 16 759 4 287 54 637 4 68 2 689 48 94 4 716 16 893 4 795 2 96 16 179 6 860 6 861 16 290 32 530 4 900 22 133 6 533 6 744 4 444 4 445 6 237 6 644 6 134 2 210 2 242 2 726 18 54 4 878 4 27 8 783 4 
473 2 502 2 97 2 
143 2 884 22 38 2 313 2 6 2 222 2 675 2 190 2 874 10 735 2 909 2 882 2 95 2 831 2 
705 2 885 2 197 2 685 2 287 6 761 2 794 2 689 4 124 2 716 2 467 2 96 2 230 2 861 2 290 2 472 2 900 2 133 4 444 2 672 2 135 2 242 2 726 2 
861 4 705 8 290 8 900 4 114 2 885 8 445 6 685 4 361 2 287 16 94 4 689 12 716 4 648 2 96 4 783 4 860 6 
1 2 820 2 789 2 253 2 89 2 5 2 66 34 399 4 288 2 662 2 320 4 576 2 522 2 228 2 431 2 692 4 523 2 502 2 581 2 97 8 473 6 99 6 833 2 902 10 209 2 618 2 240 2 136 2 451 4 566 2 60 2 167 4 
57 2 608 2 454 2 895 2 368 2 
787 4 216 4 788 1 573 1 352 2 220 2 7 2 464 2 466 2 127 1 799 2 231 2 475 4 233 2 480 1 483 8 140 6 366 2 141 6 816 2 597 2 707 1 598 2 602 2 823 2 714 1 378 1 719 2 505 2 49 2 383 1 158 6 507 1 53 1 390 2 392 2 391 1 843 2 278 1 283 2 513 2 728 6 63 1 849 1 518 2 853 1 397 2 856 2 401 2 526 2 76 2 744 26 297 2 80 2 873 2 302 2 650 4 654 1 554 2 657 2 419 1 757 2 759 24 92 2 659 4 325 2 326 1 439 2 771 2 564 1 328 2 329 1 333 2 213 5 
744 2 850 2 
188 2 211 2 744 4 
448 2 
785 2 0 2 218 32 570 32 348 2 684 106 119 2 223 2 123 2 14 2 468 2 229 2 16 106 358 2 586 4 21 2 803 2 698 2 238 2 243 2 139 8 592 2 365 2 812 10 487 2 703 12 489 2 367 2 813 32 369 2 30 12 248 2 818 22 599 22 493 4 371 12 494 32 254 2 41 2 496 2 257 2 43 2 607 2 830 2 380 2 156 22 506 2 720 2 834 2 724 16 836 14 160 4 839 8 388 32 622 6 389 18 626 18 59 8 844 8 845 32 627 38 846 2 169 40 516 2 631 2 635 2 848 2 400 32 175 2 176 2 402 10 69 32 177 2 178 2 404 10 73 2 642 2 742 2 866 2 183 2 292 32 293 2 295 2 536 32 538 2 541 18 79 32 871 12 545 32 548 2 192 2 749 2 307 2 651 4 553 2 887 4 314 2 90 4 760 2 766 106 428 2 665 18 768 2 897 4 98 12 206 4 772 2 441 2 327 4 332 22 677 2 107 2 678 2 453 2 908 2 568 18 569 2 
284 1 185 2 697 2 613 2 
624 2 697 2 
280 2 312 2 697 2 443 2 910 2 687 2 97 2 
591 2 910 2 
697 2 154 2 910 2 
640 2 185 2 31 2 
697 2 910 2 
549 2 31 2 
697 2 48 2 
814 2 185 2 31 2 
225 2 185 2 110 2 
747 2 185 2 356 2 
851 2 93 2 185 2 
321 2 185 2 580 2 
275 2 31 2 
697 2 194 2 
18 2 110 2 
747 2 792 2 
93 2 906 2 
33 2 321 2 
31 2 117 2 
827 2 321 2 
557 2 93 2 
747 2 615 2 
702 2 110 2 
814 2 145 2 185 2 31 2 
814 2 145 2 85 2 185 2 31 2 
185 2 673 2 31 2 
740 2 185 2 31 2 
34 2 442 2 373 2 543 2 
343 2 433 2 884 6 252 2 721 2 420 2 65 2 446 2 187 4 52 2 620 2 286 2 606 2 763 2 199 2 500 2 550 4 907 2 
828 2 185 2 
582 2 280 2 864 2 97 2 
582 2 280 2 841 2 864 2 687 2 97 2 
280 2 112 2 697 2 443 2 910 2 97 2 
250 2 334 2 
280 2 304 2 443 2 97 2 
363 2 93 2 
589 2 321 2 
706 2 110 2 
747 2 753 2 
807 2 747 2 321 2 
432 2 747 2 321 2 
747 2 321 2 501 2 
747 2 321 2 758 2 
280 2 149 2 611 6 579 2 97 2 694 2 727 6 452 2 
31 2 604 2 
352 2 
787 4 216 4 4 2 121 2 464 2 13 2 466 2 475 4 483 4 140 6 593 2 26 2 366 2 141 4 490 2 816 2 597 6 707 2 598 2 251 2 147 2 39 2 42 2 715 2 261 2 377 2 719 2 505 2 49 2 383 2 158 2 842 2 390 2 843 2 515 2 728 2 172 4 518 2 856 6 858 2 401 2 526 2 865 2 76 6 532 6 744 26 540 4 297 2 80 2 302 2 880 2 877 2 554 2 657 2 310 2 316 2 759 26 659 4 664 4 894 2 668 2 325 2 439 2 771 2 438 2 565 2 449 2 328 2 778 2 336 2 106 2 683 2 
787 4 216 4 4 2 121 2 464 2 13 2 466 2 475 4 483 4 140 6 593 2 26 2 366 2 141 6 490 2 816 2 597 6 707 2 598 2 251 2 147 2 39 2 40 2 42 2 715 2 261 2 377 2 719 2 505 2 49 2 383 2 158 2 842 2 390 2 843 2 515 2 728 2 172 4 518 2 397 2 856 6 858 2 401 2 859 2 526 2 865 2 408 2 76 6 532 6 744 26 540 4 297 2 80 2 302 2 880 2 554 2 657 2 310 2 759 26 92 2 659 4 664 4 894 2 668 2 325 2 439 2 771 2 438 2 449 2 328 2 778 2 336 2 106 2 683 2 342 2 
601 2 
258 2 417 2 
457 6 345 8 787 2 216 2 629 8 170 2 351 2 464 2 11 2 857 2 734 2 403 2 738 6 129 2 800 4 476 2 477 2 77 2 744 12 537 2 539 4 297 2 80 2 298 6 701 2 138 2 140 4 302 2 245 4 416 2 246 2 819 2 552 4 656 2 146 4 554 2 658 2 657 2 421 2 150 2 759 6 890 2 259 4 260 4 717 2 430 2 612 2 262 2 324 10 381 2 437 2 439 2 159 2 671 2 837 2 838 2 161 2 680 4 509 2 215 2 
457 6 345 8 787 2 216 2 629 8 170 2 351 2 688 4 464 2 11 2 857 2 734 2 403 2 72 2 738 8 129 2 800 4 476 2 477 2 77 2 744 12 294 2 537 2 539 4 297 2 80 2 298 8 701 2 138 2 140 4 302 2 245 4 416 2 246 2 819 2 552 4 656 2 146 4 554 2 35 2 658 2 657 2 150 2 759 6 890 2 259 4 260 4 717 2 612 2 262 2 324 10 381 2 437 2 439 2 159 2 671 2 837 2 838 2 161 2 680 4 509 2 215 2 
457 2 738 2 819 2 552 2 800 2 656 2 437 2 351 2 539 4 838 2 890 2 161 2 138 2 857 2 245 4 260 2 509 2 262 2 
457 4 345 4 787 2 216 2 629 4 170 2 351 2 464 2 11 2 857 2 734 2 403 2 738 6 129 2 800 4 476 2 477 2 77 2 744 12 294 2 539 4 297 2 80 2 298 6 701 2 138 2 140 4 302 2 245 4 416 2 246 2 819 2 552 4 656 2 146 4 554 2 658 2 657 2 421 2 150 2 759 6 890 2 259 4 260 4 717 2 430 2 612 2 262 2 324 6 381 2 437 2 439 2 159 2 671 2 837 2 838 2 161 2 680 4 509 2 215 2 
457 6 345 4 787 2 216 2 629 4 170 2 351 2 464 2 11 2 857 2 734 2 403 2 738 4 129 2 800 4 476 2 477 2 804 2 77 2 744 12 539 4 297 2 80 2 298 6 701 2 138 2 140 4 302 2 245 4 416 2 246 2 819 2 552 4 656 2 146 4 554 2 658 2 657 2 421 2 150 2 759 6 890 2 259 4 260 4 717 2 430 2 612 2 262 2 324 6 381 2 437 2 439 2 159 2 671 2 837 2 838 2 161 2 680 4 509 2 215 2 
457 6 345 8 787 2 216 2 629 4 170 2 351 2 464 2 11 2 857 2 734 2 403 2 738 6 129 2 800 4 476 2 477 2 77 2 744 12 537 2 539 4 297 2 80 2 298 6 701 2 138 2 140 4 302 2 245 4 416 2 246 2 819 2 552 4 656 2 146 4 554 2 658 2 657 2 421 2 150 2 759 6 890 2 259 4 260 4 717 2 430 2 612 2 262 2 324 6 381 2 437 2 439 2 159 2 671 2 837 2 838 2 161 2 680 4 509 2 215 2 
457 8 345 8 787 2 216 2 629 8 170 2 351 2 464 2 11 2 857 2 734 2 403 2 738 6 129 2 800 4 476 2 477 2 804 2 77 2 744 12 537 2 539 4 297 2 80 2 298 8 701 2 138 2 140 4 302 2 245 4 416 2 246 2 819 2 552 4 656 2 146 4 554 2 658 2 657 2 421 2 150 2 759 6 890 2 259 4 260 4 717 2 430 2 612 2 262 2 324 10 381 2 437 2 439 2 159 2 671 2 837 2 838 2 161 2 680 4 509 2 215 2 
457 6 345 8 787 2 216 2 629 8 170 2 351 2 464 2 11 2 857 2 734 2 403 2 738 6 129 2 800 4 476 2 477 2 77 2 744 12 537 2 539 4 297 2 80 2 298 6 701 2 138 2 140 4 302 2 245 4 416 2 246 2 819 2 552 4 656 2 146 4 554 2 658 2 657 2 421 2 150 2 759 6 890 2 259 4 260 4 717 2 430 2 612 2 262 2 324 10 381 2 437 2 439 2 159 2 671 2 837 2 838 2 161 2 680 4 509 2 215 2 
457 8 216 4 464 2 11 2 224 6 466 2 690 2 691 4 475 4 476 2 477 2 695 6 25 2 482 2 483 2 701 2 244 1 245 4 246 4 490 4 32 2 39 2 498 2 712 6 715 2 259 4 260 4 717 2 719 2 262 2 505 2 49 2 51 1 509 2 510 2 514 2 515 2 728 2 518 2 519 2 734 4 521 2 525 2 526 2 738 4 737 2 289 6 75 1 76 8 532 4 77 2 744 46 539 4 542 2 297 2 80 2 298 12 300 6 302 2 551 6 305 2 306 2 552 4 554 2 315 6 759 24 92 2 765 2 322 6 559 6 561 2 325 2 324 2 771 2 563 2 103 1 777 7 328 2 778 2 339 6 109 1 345 2 787 4 350 7 351 2 121 2 129 2 585 6 800 4 804 4 360 2 588 2 138 2 364 2 140 6 366 2 141 6 816 2 597 6 598 2 819 2 147 2 146 6 150 2 377 2 612 2 614 2 381 2 158 2 159 2 838 2 837 2 386 6 161 2 625 2 390 2 843 12 630 2 395 2 396 2 170 2 634 2 850 6 397 2 856 6 857 2 638 6 401 2 403 2 641 1 410 1 869 1 411 2 416 2 881 1 655 2 656 2 657 2 658 2 886 2 890 2 659 4 198 2 425 2 664 4 430 2 205 4 898 8 436 2 669 2 439 2 437 2 671 2 448 6 903 2 211 6 212 10 680 8 215 4 
457 8 345 6 787 4 216 4 351 2 121 4 464 2 11 2 224 6 690 2 466 2 691 4 129 2 585 6 800 4 475 4 476 2 477 2 695 6 360 2 25 2 588 2 482 2 483 2 701 2 364 2 138 2 140 6 245 4 366 2 246 4 141 6 32 2 490 4 816 2 597 6 819 2 598 2 146 6 147 4 39 4 150 2 498 2 712 6 715 2 259 4 717 2 260 4 377 2 719 2 612 2 614 2 262 2 505 2 381 2 49 2 158 2 159 2 386 6 837 2 838 2 161 2 625 2 509 2 390 2 510 2 843 12 630 2 514 2 395 2 515 2 396 2 728 2 170 2 633 2 634 2 850 6 518 2 397 2 519 2 856 6 638 6 857 2 734 4 521 2 401 2 403 2 525 2 526 2 289 6 737 2 738 8 76 8 532 8 744 48 77 2 537 4 411 2 539 4 540 2 542 2 297 2 298 12 80 2 300 6 302 2 875 2 416 2 305 2 551 6 306 2 655 2 552 4 656 2 554 2 658 2 657 2 886 2 315 6 759 26 890 2 92 2 659 4 198 2 425 2 765 2 559 6 322 6 664 4 561 2 430 2 205 4 324 2 898 8 325 2 669 2 436 2 771 2 437 2 439 2 563 2 671 2 448 6 328 2 778 2 903 2 211 6 339 6 212 10 680 8 215 4 
457 8 345 6 787 4 216 4 351 2 121 4 464 2 11 2 224 6 690 2 466 2 691 4 129 2 585 6 800 4 475 4 476 2 477 2 695 6 360 2 25 2 588 2 482 2 483 2 701 2 364 2 138 2 140 6 245 4 366 2 246 4 141 6 32 2 490 4 816 2 597 6 819 2 598 2 146 6 147 4 39 4 150 2 498 2 712 6 715 2 259 4 717 2 260 4 377 2 612 2 719 2 614 2 262 2 505 2 381 2 49 2 158 2 159 2 386 6 837 2 838 2 161 2 625 2 509 2 390 2 510 2 843 12 629 4 630 2 514 2 395 2 515 2 396 2 728 2 170 2 633 2 634 2 850 6 518 2 397 2 519 2 856 6 638 6 857 2 734 4 521 2 401 2 403 2 525 2 526 2 289 6 737 2 738 8 76 8 532 8 744 48 77 2 537 4 411 2 539 4 540 2 542 2 297 2 298 12 80 2 300 6 302 2 875 2 416 2 305 2 551 6 306 2 655 2 552 4 656 2 554 2 658 2 657 2 886 2 315 6 759 26 890 2 92 2 659 4 198 2 425 2 765 2 559 6 322 6 664 4 561 2 430 2 205 4 898 8 325 2 324 6 669 2 436 2 771 2 437 2 439 2 563 2 671 2 448 6 328 2 778 2 903 2 211 6 339 6 212 10 680 8 215 4 
457 10 216 4 3 2 10 2 464 2 11 2 224 6 12 6 466 2 690 2 691 4 475 4 476 2 477 2 695 6 481 6 25 2 482 2 483 4 701 2 245 4 246 4 490 4 32 4 39 4 256 6 498 2 712 6 715 2 499 2 259 4 260 4 717 2 719 2 262 2 505 2 49 2 509 2 510 2 514 4 515 2 728 4 518 2 732 2 519 2 734 4 521 2 525 2 526 2 738 10 737 2 289 12 741 2 76 12 532 10 77 2 744 52 294 2 537 4 539 4 296 6 540 2 542 2 297 2 80 2 298 16 300 12 302 2 551 6 305 2 306 2 552 4 554 2 315 12 759 24 92 2 765 2 322 6 559 6 561 2 324 6 325 2 771 2 563 2 328 2 778 2 339 6 345 6 787 4 351 2 121 4 129 2 585 6 800 4 804 2 360 2 588 2 138 2 364 2 140 6 366 2 141 6 816 2 597 8 596 6 598 2 819 2 147 4 146 6 150 2 605 6 377 2 612 2 614 2 381 2 158 4 159 2 838 2 837 2 386 6 840 6 161 2 625 2 390 2 843 10 629 4 630 2 395 2 396 2 170 2 633 2 850 12 397 2 174 2 856 8 857 2 638 6 398 6 401 2 403 2 411 2 412 6 875 2 416 2 655 2 656 2 657 2 658 2 886 2 888 2 890 2 659 4 198 2 425 2 664 6 430 2 205 4 898 8 436 2 669 2 439 2 437 2 440 2 671 2 448 12 903 2 211 12 212 8 680 8 215 4 
457 6 345 6 819 2 146 2 656 2 629 4 658 2 11 2 857 2 259 2 717 2 403 2 260 4 430 2 612 2 262 2 738 6 381 2 324 4 129 2 800 4 476 2 477 2 437 2 744 4 77 2 537 2 671 2 539 2 838 2 298 4 161 2 245 2 680 2 246 2 
457 6 345 6 787 4 216 4 459 3 460 2 352 2 464 2 11 2 466 2 129 2 800 4 475 4 476 2 477 2 483 3 140 6 245 2 246 2 366 2 141 6 490 2 816 2 597 6 819 2 598 2 146 2 374 2 715 2 259 2 717 2 260 4 377 2 719 2 612 2 262 2 381 2 505 2 49 2 158 3 838 2 387 2 161 2 390 2 58 2 843 4 728 3 170 2 634 2 518 2 397 2 856 6 857 2 401 2 403 2 524 2 526 2 738 6 76 8 744 28 77 2 537 2 539 2 297 2 298 4 80 2 299 2 873 2 302 2 554 2 656 2 658 2 657 2 759 24 92 2 659 4 664 4 430 2 896 2 325 2 324 2 439 2 771 2 437 2 671 2 328 2 778 2 212 2 680 2 
381 2 754 2 11 2 
381 2 754 2 11 2 
457 12 345 6 787 4 216 4 121 4 464 2 11 4 466 2 691 2 800 4 475 4 476 2 359 2 804 4 25 2 483 2 138 2 140 6 245 2 366 2 246 4 141 6 490 6 815 2 816 2 597 2 598 2 819 2 146 4 147 4 37 2 39 4 255 2 498 2 715 2 259 2 260 4 717 2 719 2 381 6 505 2 49 2 159 2 725 2 837 2 838 2 509 2 390 2 843 4 629 4 515 4 518 2 730 2 397 2 856 2 734 2 858 4 401 2 736 4 526 2 738 12 409 2 76 2 532 4 744 24 294 4 537 4 539 2 645 2 297 2 80 2 298 16 302 2 647 2 876 2 416 2 415 2 653 4 754 2 552 4 554 2 656 4 657 2 759 16 891 2 92 2 659 4 322 2 205 2 325 2 324 6 100 2 669 2 439 2 771 2 773 2 102 2 207 2 328 2 778 2 212 2 679 2 680 4 215 4 
205 2 815 2 83 2 409 2 630 2 395 2 744 4 725 2 239 2 759 2 258 2 890 2 464 2 567 2 212 2 322 2 843 2 
457 12 345 6 787 4 216 4 121 4 464 2 11 4 466 2 691 2 800 4 475 4 476 2 359 2 804 4 25 2 483 4 701 2 138 2 140 6 245 2 366 2 246 4 141 6 490 6 815 2 816 2 597 2 598 2 819 2 146 4 147 4 37 2 39 4 255 2 498 2 715 2 259 2 260 4 717 2 719 2 381 6 505 2 49 2 159 2 725 2 837 2 838 2 509 2 390 2 843 2 629 4 515 4 518 2 397 2 856 2 734 4 858 4 401 2 736 4 526 2 738 12 409 2 76 2 867 2 532 4 744 24 294 4 537 4 870 2 539 2 645 2 297 2 80 2 298 16 302 2 647 2 416 2 415 2 653 4 754 2 552 4 554 2 656 4 657 2 87 2 759 16 891 2 92 2 659 4 322 2 325 2 324 6 100 2 669 2 439 2 771 2 901 2 773 2 207 4 328 2 778 2 105 2 680 4 215 4 
457 12 345 6 787 4 216 4 793 2 8 2 121 4 464 2 11 4 354 2 466 2 691 2 800 4 475 4 476 2 232 2 359 2 804 4 25 2 483 2 701 2 138 2 140 6 245 2 366 2 246 4 141 6 490 6 815 2 816 2 597 2 598 2 819 2 146 4 147 4 37 2 39 4 255 2 498 2 715 2 259 2 260 4 717 2 719 2 381 6 505 2 49 2 159 2 725 2 837 2 838 2 509 2 390 2 843 4 629 4 515 4 518 2 397 2 856 2 734 4 858 4 401 2 736 4 526 2 738 12 409 2 76 2 532 4 744 24 294 4 537 4 539 2 645 2 297 2 80 2 298 16 302 2 647 2 416 2 415 2 653 4 754 2 552 4 554 2 656 4 756 2 657 2 759 16 891 2 92 2 659 4 322 2 205 2 325 2 324 6 100 2 669 2 439 2 771 2 773 2 207 2 328 2 778 2 212 2 680 4 215 4 
786 2 787 4 216 4 217 2 346 2 113 2 459 2 349 2 460 2 461 4 685 2 118 2 221 2 464 2 689 6 355 2 466 2 577 2 578 2 475 2 22 4 806 2 24 2 23 2 235 2 236 2 588 2 482 2 808 2 590 4 241 2 483 6 810 22 484 2 811 2 140 6 594 4 142 2 141 4 32 6 490 2 704 2 705 4 816 2 597 10 600 2 374 2 152 2 46 2 715 2 716 2 609 2 375 2 376 12 829 2 377 2 379 4 503 12 264 2 267 2 505 2 157 6 49 2 269 2 158 6 617 2 508 4 726 4 163 2 623 2 390 2 843 2 393 2 61 2 168 6 514 6 515 2 396 2 728 6 632 2 171 2 729 2 517 2 518 2 852 4 636 2 854 2 287 8 397 2 856 10 639 4 180 2 525 2 860 6 526 2 737 2 861 2 182 2 406 6 290 4 291 2 184 2 76 16 532 16 868 2 744 28 411 2 186 2 297 2 544 4 80 2 299 2 302 2 81 4 649 2 308 2 652 2 84 2 554 2 86 2 885 4 657 2 318 2 423 2 759 22 92 2 659 2 558 2 94 4 663 2 664 8 896 2 96 2 203 2 325 2 900 4 101 2 436 2 439 2 771 2 775 1 104 2 328 2 450 2 210 4 451 2 336 4 335 6 340 4 214 2 
32 6 597 2 282 2 708 2 219 2 728 3 759 2 856 2 826 2 226 2 664 2 666 2 377 2 382 2 643 2 132 2 76 2 158 3 744 2 621 3 483 3 413 2 676 2 274 4 
32 6 597 2 282 2 708 2 219 2 728 2 759 2 856 2 826 2 226 2 664 2 666 2 377 2 382 2 643 2 132 2 76 2 158 2 744 2 621 2 483 2 413 2 676 2 274 4 
32 6 597 2 282 2 708 2 219 2 728 2 759 2 856 2 826 2 226 2 664 2 666 2 377 2 382 2 643 2 132 2 76 2 158 2 744 2 621 2 483 2 413 2 676 2 274 4 
64 2 685 2 353 4 287 6 733 2 689 4 226 2 125 2 71 2 862 3 861 2 863 2 290 2 739 4 76 2 696 2 744 10 78 2 644 4 700 6 483 3 546 2 705 2 885 2 821 2 88 2 555 4 759 4 825 3 716 2 377 2 96 2 770 2 158 3 774 4 54 2 273 2 780 2 165 4 455 3 
64 2 685 2 353 4 287 4 733 2 689 4 226 2 125 2 71 2 862 2 861 2 863 2 290 2 739 4 76 2 696 2 744 10 78 2 644 4 700 6 483 2 546 2 705 2 370 2 885 2 821 2 88 2 555 4 759 4 825 2 716 2 377 2 96 2 770 2 900 2 158 2 774 4 726 2 54 2 273 2 780 2 165 4 455 2 
64 2 685 2 353 4 287 4 733 2 689 4 226 2 125 2 71 2 862 2 861 2 863 2 290 2 739 4 76 2 696 2 744 10 78 2 644 4 700 6 483 2 546 2 705 2 370 2 885 2 821 2 88 2 555 4 759 4 825 2 716 2 377 2 96 2 770 2 900 2 158 2 774 4 726 2 54 2 273 2 780 2 165 4 455 2 
64 2 685 2 353 4 287 4 733 2 689 4 226 2 125 2 71 2 862 2 861 2 863 2 290 2 739 4 76 2 696 2 744 10 78 2 644 4 700 6 483 2 546 2 705 2 370 2 885 2 821 2 88 2 555 4 759 4 825 2 716 2 377 2 96 2 770 2 900 2 158 2 774 4 726 2 54 2 273 2 780 2 165 4 455 2 
64 2 685 2 353 4 287 4 733 2 689 4 226 2 125 2 71 2 862 2 861 2 863 2 290 2 739 4 76 2 696 2 744 10 78 2 644 4 700 6 483 2 546 2 705 2 370 4 885 2 821 2 88 2 555 4 759 4 825 2 716 2 377 2 96 2 770 2 900 4 158 2 774 4 726 4 54 2 273 2 780 2 165 4 455 2 
330 2 418 2 531 2 879 2 108 2 423 2 
527 2 336 2 347 2 196 2 531 2 796 2 17 2 
249 1 791 1 315 2 759 8 67 2 465 2 153 2 202 2 70 2 528 2 434 2 529 2 743 2 744 10 535 2 209 1 674 2 136 1 779 2 872 2 189 1 301 2 302 2 486 2 488 2 29 2 
344 2 705 6 370 2 84 2 86 2 311 2 885 6 685 6 556 2 759 6 287 16 689 12 94 2 893 2 716 6 469 2 470 2 96 6 860 4 861 6 693 2 290 6 900 3 744 6 533 4 644 4 726 2 54 2 81 2 27 2 
883 2 584 2 130 2 801 2 270 2 722 2 774 2 745 3 478 2 353 2 463 2 9 2 165 2 
130 2 883 2 584 2 74 2 801 2 587 2 270 2 722 2 744 1 774 2 745 6 478 2 759 1 353 2 463 4 151 1 9 2 165 2 
883 2 584 2 130 4 74 2 801 2 587 2 270 4 722 2 774 2 745 6 478 4 353 2 463 4 9 2 165 2 
883 2 584 2 130 8 74 6 801 2 587 8 270 8 722 2 744 1 774 2 745 10 478 8 759 1 353 2 463 4 151 1 9 2 165 2 
456 2 518 2 397 2 357 1 405 2 475 2 744 8 748 2 195 1 141 6 816 2 709 2 372 1 822 2 759 8 92 2 659 2 713 2 200 1 263 2 723 2 619 2 328 2 331 2 56 2 905 2 
394 2 456 2 512 4 847 2 571 6 458 2 115 2 62 2 572 4 574 2 518 2 397 1 173 2 855 2 122 2 520 2 15 2 227 4 126 2 181 2 583 2 405 2 19 2 471 4 798 4 20 2 407 2 475 20 131 2 744 46 234 2 534 2 479 2 746 4 699 6 809 2 137 2 485 2 191 2 193 6 28 2 195 2 750 2 141 43 491 2 816 2 595 2 144 4 492 4 709 2 710 2 372 2 36 2 822 2 317 2 889 2 603 2 422 2 497 2 759 44 92 1 659 20 44 2 824 2 45 2 319 2 892 2 764 2 47 2 426 2 201 2 560 2 429 2 667 2 767 2 266 2 562 2 268 2 616 2 271 2 384 2 835 2 670 2 328 2 55 2 56 38 164 2 338 2 277 2 341 2 166 2 784 2 
456 2 816 2 512 2 847 2 709 2 710 2 36 2 572 2 822 2 497 2 759 18 518 2 92 4 659 8 397 4 319 2 718 2 610 4 429 2 405 2 798 2 435 2 899 2 475 8 131 2 384 2 835 2 744 18 479 2 746 2 385 2 447 2 328 2 809 2 485 2 56 14 193 4 195 2 82 2 141 18 279 2 
456 2 512 2 847 2 571 4 572 4 518 2 397 5 855 2 15 2 181 2 405 2 19 2 798 4 20 2 131 2 475 10 744 24 234 2 746 4 809 2 485 2 748 4 303 2 193 6 195 2 141 31 816 2 710 2 709 2 755 2 372 2 36 2 822 2 91 2 603 2 422 2 759 22 92 5 659 10 713 6 892 2 200 2 429 2 667 2 263 2 50 2 723 10 776 2 208 2 328 2 619 2 331 2 162 2 56 12 905 2 681 2 277 2 166 2 
781 2 

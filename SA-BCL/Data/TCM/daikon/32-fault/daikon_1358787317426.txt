#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 401 
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (217,250) (217,250) 227 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V ERROR java.lang.NullPointerException (310,545) 251 
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 397 397 107 107 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V FAILED junit.framework.AssertionFailedError 
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR utilMDE.Assert$AssertionException (217,250) 585 (117,659) (321,554) (321,554) 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testPpts1Ppts2()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testPpts1Ppts3()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testInvs1Invs2()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 596 (74,342) 346 (104,577) (74,342) 199 (104,577) 442 109 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR utilMDE.Assert$AssertionException (217,250) 585 (117,659) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR utilMDE.Assert$AssertionException (217,250) 585 (117,659) (117,659) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR utilMDE.Assert$AssertionException (217,250) 585 (117,659) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 386 103 256 518 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 102 196 306 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 102 196 306 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 102 196 306 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 102 196 306 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 53476 | = null
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:sameLength([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quant:eltsLT([II)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.Invariant:getConfidence()D
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Debug:logOn()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:lt(II)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:memberOf(I[I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:subsetOf([D[D)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern:intern([I)[I
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.MathMDE:negate(I)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ValueTuple:isMissing(I)Z
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1007 | = null
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14490 | = null
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode; | ASSIGN | 22146 | = null
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.Invariant:justified()Z
daikon.diff.RootNode:RootNode()V
utilMDE.ArraysMDE:sum([I)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:memberOf(S[S)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:eq(JJ)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice1:num_samples()I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | OPERATOR | 4882 | == -> <
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:intersection([I[I)[I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quant:setEqual([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.PptSlice0:arity()I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.Invariants:Invariants()V
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsGT([II)Z
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2124 | return null
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:lexLTE([I[I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:eq(DD)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:setDiff([I[I)[I | ASSIGN | 154150 | = null
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaCharStream:getEndLine()I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:lexLT([I[I)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant; | RETURN | 609 | return null
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_ntk()I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaCharStream:backup(I)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.Invariant:logOn()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:eq(II)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:subsetOf([B[I)Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I | CONSTANT | 65761 | 0 -> 1
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.MathMDE:sign(I)I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | RETURN | 3858 | return null
daikon.Quant:subsetOf([D[F)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:split(I)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:lte(II)Z
daikon.ProglangType:isIntegral()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Ppt:Ppt()V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.Intern:intern([J)[J
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:lexGT([I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:num_vars()I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:eltsLTE([II)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.ProglangType:isScalar()Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndColumn()I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14830 | if (x) -> if (!x)
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseGTE([I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus; | CONDITION | 18510 | if (x) -> if (!x)
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 17104 | = null
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:max([I)I
daikon.inv.ValueSet:ValueSet(I)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:gt(II)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.MathMDE:gcd([I)I
jtb.JavaCharStream:readChar()C
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.WeakHasherMap:size()I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:memberOf(D[F)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:concat([I[I)[I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:min([I)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.ValueTuple:size()I
daikon.ModBitTracker:num_sets()I
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfo:new_ppt()V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([D)[D
daikon.Quant:eltsLtIndex([I)Z
daikon.ProglangType:isPseudoArray()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.ProglangType:isArray()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.InvariantFormatTester:execute()Z
utilMDE.MathMDE:pow(II)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Debug:logDetail()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ModBitTracker:num_samples()I
daikon.Quant:memberOf(F[D)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.LimitedSizeIntSet:size()I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:relate_var()V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern:numIntArrays()I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:noDups([I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:eltsEqual([II)Z | OPERATOR | 161601 | < -> >
daikon.inv.Invariant:logDetail()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaCharStream:getBeginColumn()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:eltsGTE([II)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaCharStream:FillBuff()V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaCharStream:ReadByte()C
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaCharStream:BeginToken()C
daikon.diff.Node:Node()V
daikon.Quant:subsetOf([J[J)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.MathMDE:modulus([I)[I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:gte(II)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:memberOf(J[J)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
140 2 555 4 12 2 389 2 194 2 217 2 279 2 130 2 250 2 
174 2 595 2 25 6 426 2 233 2 234 6 125 2 693 2 191 6 23 2 173 2 
514 4 182 2 223 6 530 2 691 6 644 2 467 6 217 2 9 6 118 2 250 2 73 2 239 4 
315 10 421 16 337 2 372 6 93 8 642 12 375 8 455 30 535 16 33 2 230 16 250 6 282 8 484 2 383 26 516 2 462 10 257 4 80 6 413 8 329 4 211 10 264 2 545 2 650 2 189 4 310 4 267 10 217 6 417 10 
38 6 231 4 
208 2 
315 2 421 2 450 2 93 2 642 2 618 2 455 6 535 2 622 2 602 2 230 2 383 4 162 2 628 2 462 2 80 2 211 2 329 2 489 2 267 4 392 2 567 2 417 2 
539 4 383 12 315 4 421 8 317 2 477 2 462 4 642 6 455 14 535 8 211 4 538 4 189 2 190 6 230 8 311 6 417 4 
674 4 63 2 298 6 419 4 636 2 551 2 2 2 643 4 557 62 72 2 322 2 481 2 510 4 646 8 432 10 457 4 384 4 687 4 308 4 629 2 688 2 541 2 519 2 327 4 438 2 631 2 186 10 347 2 666 2 609 4 236 4 126 2 41 2 632 2 84 2 331 4 21 4 611 2 350 2 334 14 
316 2 497 2 422 2 24 2 208 2 401 2 501 2 20 2 588 2 483 2 381 2 
314 2 614 2 637 2 593 2 194 2 1 2 551 2 553 2 55 2 198 2 225 2 247 2 574 2 681 2 643 4 403 2 228 2 157 2 429 2 646 2 624 2 457 2 407 4 363 2 661 2 11 2 434 2 187 2 668 2 124 2 466 2 650 2 522 2 333 2 312 4 525 2 494 2 
394 2 240 6 315 16 421 32 505 4 372 4 642 22 93 18 455 54 535 32 356 6 201 8 97 6 538 4 480 2 230 32 250 4 143 4 282 6 383 48 539 4 516 2 309 2 287 4 462 16 520 2 80 4 211 16 212 6 329 2 416 4 468 4 190 6 217 4 267 6 311 6 565 2 351 2 417 16 
298 2 688 2 646 2 
410 2 434 2 244 2 663 10 207 2 437 2 412 2 96 2 43 2 202 2 379 2 566 2 172 22 603 2 
0 2 615 2 449 2 616 2 91 3 272 1 454 5 531 2 273 2 620 2 619 1 355 14 3 2 5 2 358 1 278 1 359 6 279 2 623 4 10 2 281 14 101 2 180 2 461 2 183 2 463 1 15 1 630 1 185 4 365 2 543 3 18 1 469 4 547 2 369 2 294 6 548 2 111 1 549 3 296 2 193 6 299 6 30 2 478 2 34 2 377 2 559 2 119 1 305 2 485 2 206 1 486 3 561 2 560 2 563 2 214 2 128 2 42 3 217 32 44 2 391 2 219 2 491 2 570 28 52 3 398 2 54 2 139 2 496 2 227 2 404 2 578 1 57 2 58 2 580 2 61 19 145 1 414 2 147 2 237 2 672 3 590 2 502 2 238 2 503 2 335 2 152 2 64 2 420 2 67 2 598 3 340 14 155 2 680 1 249 2 70 4 430 2 431 4 511 14 159 2 250 30 433 2 77 2 515 2 252 2 163 2 254 25 78 1 261 2 82 3 166 2 265 1 444 19 87 2 446 2 88 1 
660 2 
217 2 301 2 
217 4 579 2 492 2 
473 2 653 2 134 2 396 2 594 2 51 2 53 2 370 2 453 2 423 2 639 2 424 2 29 2 534 2 275 2 156 2 200 2 682 18 599 2 343 2 284 2 364 2 459 2 76 2 626 18 606 2 411 2 288 2 14 2 608 2 439 18 262 2 544 2 291 2 610 2 266 2 633 2 295 2 270 2 443 2 652 2 651 2 
415 1 304 2 655 2 28 2 
517 2 304 2 
385 2 508 2 646 2 464 2 
89 2 385 2 508 2 646 2 464 2 318 2 
251 2 310 2 
581 2 1 2 
16 2 508 2 310 2 646 2 
220 2 354 2 
605 2 56 2 
683 2 35 2 
436 2 380 2 
285 2 436 2 56 2 
243 2 436 2 56 2 
436 2 374 2 56 2 
436 2 689 2 56 2 
135 2 572 6 508 2 646 2 280 6 204 2 584 2 568 2 
552 2 184 2 
89 2 65 2 160 2 508 2 310 2 304 2 646 2 
65 2 304 2 165 2 
65 2 221 2 304 2 
552 2 79 2 28 2 
65 2 304 2 
586 2 
304 2 604 2 
552 2 28 2 136 2 
49 2 683 2 28 2 
286 2 436 2 28 2 
490 2 28 2 354 2 
300 2 56 2 28 2 
50 2 552 2 
304 2 649 2 
90 2 683 2 
675 2 436 2 
583 2 354 2 
409 2 56 2 
552 2 665 2 
26 2 56 2 
482 2 354 2 
436 2 470 2 
506 2 683 2 
427 2 552 2 28 2 136 2 
427 2 62 2 552 2 28 2 136 2 
85 2 552 2 28 2 
552 2 28 2 382 2 
232 2 158 2 86 2 36 2 
336 2 133 2 307 2 529 2 27 2 245 4 640 2 68 2 141 2 692 2 537 2 589 2 131 2 110 2 169 2 172 6 635 4 458 2 
277 2 28 2 
128 2 
449 2 620 2 94 2 355 6 3 2 5 2 177 2 359 6 279 2 8 2 180 2 106 2 185 4 366 2 367 2 107 2 368 2 469 4 547 2 294 2 548 2 192 2 472 2 193 4 550 2 299 2 114 2 479 2 37 2 305 2 485 2 487 2 561 2 560 2 214 2 563 8 217 26 44 2 391 6 219 2 570 6 397 2 54 2 224 2 137 4 573 2 227 2 406 4 580 2 662 2 325 2 59 2 145 2 149 2 335 2 152 2 64 2 676 2 67 2 339 2 248 2 70 4 430 2 431 4 250 26 433 2 515 2 254 4 164 2 690 2 166 2 265 2 268 4 613 2 
449 2 620 2 274 2 94 2 355 6 3 2 5 2 177 2 359 6 279 2 8 2 180 2 106 2 185 4 366 2 367 2 368 2 469 4 547 2 294 2 548 2 192 2 472 2 193 5 550 2 299 2 114 2 479 2 37 2 305 2 485 2 487 2 561 2 560 2 214 2 563 8 217 26 44 2 391 6 491 1 219 2 570 6 48 2 54 2 224 2 137 4 573 2 227 2 406 4 408 2 580 2 662 2 325 2 145 2 149 2 335 2 152 2 64 2 676 2 67 2 339 2 248 2 69 2 70 4 430 2 431 4 250 26 433 2 515 2 163 1 254 4 164 2 690 2 166 2 265 2 268 4 613 2 
542 2 
500 2 390 2 
571 2 451 2 175 2 620 2 321 2 98 2 359 4 577 2 362 8 181 2 180 2 104 2 105 2 326 2 585 2 185 2 234 6 330 2 293 6 634 4 191 6 548 2 109 2 23 4 152 2 241 2 25 6 373 4 476 2 679 6 67 2 154 2 116 2 302 2 554 2 117 2 199 2 342 2 645 4 431 2 433 2 250 6 686 2 75 2 205 2 561 2 209 2 388 2 123 4 81 2 263 4 83 4 125 4 127 2 442 2 693 2 524 2 217 12 132 2 173 2 
113 2 241 2 451 2 175 2 25 8 476 2 679 6 116 2 302 2 554 2 117 2 321 2 645 2 98 2 657 4 686 2 362 6 181 2 205 2 585 2 326 2 233 2 234 6 123 2 83 2 263 2 125 4 147 2 127 2 293 6 693 2 634 2 217 4 191 6 524 2 151 2 23 4 132 2 173 2 
241 2 25 2 373 2 476 2 326 2 154 2 554 2 123 4 117 2 125 2 442 2 321 2 634 4 191 2 577 2 109 2 23 2 132 2 
571 2 451 2 175 2 620 2 321 2 98 2 359 4 577 2 362 6 181 2 180 2 104 2 326 2 233 2 185 2 234 4 330 2 293 4 634 4 191 2 548 2 109 2 23 2 152 2 241 2 25 4 373 4 476 2 679 4 67 2 154 2 116 2 302 2 554 2 117 2 199 2 342 2 645 2 431 2 433 2 250 6 686 2 75 2 561 2 209 2 388 2 123 4 83 2 263 2 125 2 127 2 442 2 693 2 524 2 217 8 132 2 
571 2 451 2 175 2 620 2 321 2 98 2 359 4 577 2 362 6 181 2 180 2 104 2 105 2 326 2 585 2 185 2 234 6 330 2 293 4 634 4 191 6 548 2 109 2 23 4 152 2 241 2 25 4 373 4 476 2 679 4 426 2 67 2 154 2 116 2 302 2 554 2 117 2 199 2 342 2 645 4 431 2 433 2 250 6 686 2 75 2 205 2 561 2 209 2 388 2 123 4 81 2 263 4 83 4 125 4 127 2 442 2 693 2 524 2 217 12 132 2 
571 2 451 2 175 2 620 2 321 2 98 2 359 4 577 2 362 6 181 2 180 2 104 2 105 2 326 2 585 2 185 2 234 6 330 2 293 6 634 4 191 6 548 2 109 2 23 4 152 2 241 2 25 6 373 4 476 2 679 4 67 2 154 2 116 2 302 2 554 2 117 2 199 2 342 2 645 4 431 2 433 2 250 6 686 2 75 2 205 2 561 2 209 2 388 2 123 4 81 2 263 4 83 4 125 4 127 2 442 2 693 2 524 2 217 12 132 2 173 2 
571 2 451 2 175 2 620 2 321 2 98 2 359 4 577 2 362 8 181 2 180 2 104 2 105 2 326 2 585 2 185 2 234 8 330 2 293 6 634 4 191 8 548 2 109 2 23 4 152 2 241 2 25 6 373 4 476 2 679 6 426 2 67 2 154 2 116 2 302 2 554 2 117 2 199 2 342 2 645 4 431 2 433 2 250 6 686 2 75 2 205 2 561 2 209 2 388 2 123 4 81 2 263 4 83 4 125 4 127 2 442 2 693 2 524 2 217 12 132 2 173 2 
571 2 451 2 175 2 620 2 321 2 98 2 359 4 577 2 362 8 181 2 180 2 104 2 105 2 326 2 585 2 185 2 234 6 330 2 293 6 634 4 191 6 548 2 109 2 23 4 152 2 241 2 25 6 373 4 476 2 679 6 67 2 154 2 116 2 302 2 554 2 117 2 199 2 342 2 645 4 431 2 433 2 250 6 686 2 75 2 205 2 561 2 209 2 388 2 123 4 81 2 263 4 83 4 125 4 127 2 442 2 693 2 524 2 217 12 132 2 173 2 
526 2 527 2 175 2 532 6 355 6 5 2 3 2 6 2 357 2 359 6 362 2 180 2 181 2 13 7 185 4 366 2 188 2 17 2 547 2 191 8 548 2 23 4 193 6 25 4 373 4 371 6 197 7 31 6 554 2 199 2 32 2 205 2 39 6 561 2 560 2 209 4 388 2 562 2 563 4 214 2 564 6 217 46 44 12 391 6 46 6 219 2 570 8 571 2 54 2 227 2 229 2 405 2 577 2 580 2 585 2 60 2 234 12 587 2 591 1 64 2 241 2 242 2 67 2 426 4 596 2 428 2 70 4 430 2 431 4 433 2 250 24 74 2 75 2 254 2 253 6 607 2 260 2 263 4 83 6 440 1 442 2 268 4 269 1 451 2 449 2 620 2 621 2 98 2 279 2 99 1 100 2 460 6 627 1 104 2 105 2 289 2 292 2 293 2 469 4 634 4 294 2 109 2 471 1 297 10 299 2 476 2 116 2 301 6 302 2 117 2 479 2 645 8 303 2 305 2 647 6 485 2 487 2 648 6 122 4 123 4 125 4 127 2 132 2 491 2 492 6 138 6 495 2 320 2 321 2 656 2 323 8 660 6 662 2 326 2 146 1 330 2 671 2 673 6 335 2 152 2 154 2 339 4 342 2 509 2 684 1 344 2 685 2 686 2 515 2 161 2 163 2 346 2 690 2 166 2 349 4 693 4 167 1 524 2 171 6 
526 2 527 2 449 2 451 2 175 2 532 6 620 2 355 6 3 2 5 2 621 2 6 2 357 2 279 2 98 2 359 6 100 2 362 2 181 2 180 2 460 6 104 2 105 2 185 4 289 2 366 2 17 2 188 2 292 2 293 4 547 2 634 4 469 4 294 2 191 8 548 2 109 2 23 4 297 10 193 6 299 2 25 6 371 6 373 4 476 2 301 6 116 2 31 6 302 2 554 2 117 2 199 2 32 2 479 2 645 8 303 2 647 6 305 2 485 2 205 2 39 6 487 2 560 2 561 2 648 6 122 4 388 2 209 4 123 4 562 2 125 4 563 4 127 2 214 2 564 6 217 46 44 12 132 2 46 6 391 6 492 6 219 2 491 2 570 8 571 2 54 2 138 6 495 2 320 2 227 2 321 2 229 2 656 2 405 2 577 2 323 8 660 6 580 2 662 2 585 2 326 2 60 2 234 12 330 2 587 2 671 2 673 6 335 2 152 2 64 2 241 2 242 2 426 2 67 2 596 2 154 2 339 4 428 2 342 2 509 2 70 4 430 2 344 2 431 4 685 2 250 24 433 2 686 2 74 2 75 2 515 2 161 2 253 6 254 2 163 2 607 2 346 2 260 2 690 2 83 6 263 4 166 2 442 2 349 4 693 4 268 4 524 2 171 6 173 2 
526 2 527 2 449 2 451 2 175 2 532 6 620 2 355 6 3 2 5 2 621 2 6 2 357 2 279 2 98 2 359 6 100 2 362 4 181 2 180 2 460 6 104 2 105 2 185 4 289 2 366 2 17 2 188 2 292 2 293 4 634 4 547 2 469 4 294 2 191 8 548 2 109 2 23 4 297 10 193 6 299 2 25 6 371 6 373 4 476 2 301 6 116 2 31 6 302 2 554 2 117 2 199 2 32 2 479 2 645 8 303 2 647 6 305 2 485 2 205 2 39 6 487 2 560 2 561 2 648 6 122 4 388 2 209 4 123 4 562 2 125 4 563 4 127 2 214 2 564 6 217 46 44 12 132 2 46 6 391 6 492 6 219 2 491 2 570 8 571 2 54 2 138 6 495 2 320 2 227 2 321 2 229 2 656 2 405 2 577 2 323 8 660 6 580 2 662 2 585 2 326 2 60 2 234 12 330 2 587 2 671 2 673 6 335 2 152 2 64 2 241 2 242 2 426 2 679 2 67 2 596 2 154 2 339 4 428 2 342 2 509 2 70 4 430 2 344 2 431 4 685 2 250 24 433 2 686 2 74 2 75 2 515 2 161 2 253 6 254 2 163 2 607 2 346 2 260 2 690 2 83 6 263 4 166 2 442 2 349 4 693 4 268 4 524 2 171 6 173 2 
526 2 527 2 449 2 451 2 175 2 532 6 620 2 355 8 3 2 5 2 621 2 6 2 178 2 279 2 98 2 359 6 100 2 283 2 362 2 625 2 181 2 180 2 460 6 104 2 105 2 185 4 289 2 366 2 17 2 188 2 292 2 293 4 634 4 547 2 469 4 294 4 191 8 548 2 109 2 23 4 297 8 193 6 299 4 638 2 25 6 371 6 373 4 476 2 301 6 116 2 31 6 302 2 554 2 117 2 199 2 32 2 479 2 645 8 303 2 647 6 305 2 485 2 205 2 39 6 487 2 560 2 561 2 648 6 122 4 209 2 123 4 562 2 125 4 563 4 127 2 214 2 564 6 217 44 44 10 132 2 46 6 391 8 492 6 219 2 491 2 47 2 570 12 54 2 138 6 495 2 319 2 320 2 227 2 321 2 229 2 656 2 405 2 577 2 323 8 660 6 580 2 662 2 585 2 326 2 60 2 234 12 330 2 587 2 671 2 673 6 335 2 152 2 64 2 241 2 242 2 426 2 679 2 67 2 596 2 154 2 339 4 428 2 342 2 509 2 70 4 430 2 344 2 431 4 685 2 250 22 433 2 686 2 74 2 515 2 161 2 253 6 254 4 163 2 607 2 346 2 260 2 690 2 83 6 263 4 166 2 442 2 349 4 693 4 268 6 524 2 171 6 173 2 
241 2 451 2 175 2 25 6 476 2 679 2 116 2 302 2 554 2 117 2 321 2 645 2 98 2 686 2 362 2 181 2 205 2 105 2 585 2 326 2 234 4 123 2 83 2 263 2 125 4 127 2 293 4 693 2 634 2 217 4 524 2 191 6 132 2 23 4 173 2 
449 2 451 2 175 2 273 2 620 2 176 3 355 6 5 2 357 2 7 2 359 6 279 2 98 2 362 2 181 2 180 2 461 2 105 2 185 4 293 4 634 2 547 2 469 4 191 6 294 3 548 2 23 4 297 2 193 6 299 3 25 6 476 2 116 2 302 2 554 2 117 2 645 2 305 2 485 2 205 2 487 2 561 2 560 2 387 2 123 2 125 4 127 2 214 2 128 2 217 28 44 4 132 2 391 6 491 2 570 8 54 2 399 2 227 2 321 2 580 2 662 2 585 2 326 2 234 4 330 2 590 2 335 2 152 2 592 2 64 2 241 2 67 2 339 2 70 4 430 2 600 2 431 4 250 24 433 2 686 2 515 2 163 2 254 3 83 2 263 2 693 2 268 4 524 2 173 2 
181 2 205 2 341 2 
181 2 205 2 341 2 
449 2 620 2 355 2 3 2 5 2 359 6 279 2 362 4 180 2 181 2 185 4 293 4 469 4 547 2 634 2 191 10 548 2 22 2 23 4 297 2 193 6 195 2 25 8 302 2 117 2 645 4 203 2 305 2 485 2 205 2 39 2 487 2 40 2 561 2 560 2 122 2 123 2 125 4 563 2 214 2 217 24 44 4 391 2 219 2 491 2 570 2 54 2 226 2 402 2 575 2 580 2 662 2 326 2 585 2 233 2 234 12 147 2 335 2 152 2 64 2 241 2 67 2 679 4 426 4 339 2 248 2 70 4 430 2 431 4 250 16 433 2 515 2 163 2 254 2 255 2 83 4 263 2 166 2 349 2 693 4 173 2 
180 2 39 2 195 2 597 2 154 2 465 2 596 2 258 2 122 2 390 2 601 2 217 4 656 2 44 2 250 2 271 2 297 2 
449 2 620 2 355 2 3 2 5 2 359 6 279 2 179 2 362 4 180 2 181 2 185 4 293 4 469 4 547 2 634 2 191 10 548 2 22 2 23 4 193 6 25 8 302 2 117 2 645 4 203 2 305 2 485 2 205 2 487 2 40 2 561 2 560 2 123 2 125 4 563 2 214 2 217 20 44 2 391 2 219 2 491 2 570 2 54 2 226 4 402 2 575 2 659 2 580 2 662 2 326 2 585 2 233 2 234 12 147 2 335 2 152 2 64 2 241 2 67 2 679 4 426 4 339 2 248 2 70 4 430 2 431 4 250 14 433 2 515 2 163 2 254 4 255 2 83 4 263 2 166 2 349 2 693 4 173 2 
449 2 620 2 355 2 3 2 5 2 359 6 279 2 362 4 180 2 181 2 185 4 293 4 469 4 547 2 634 2 191 10 548 2 22 2 23 4 297 2 193 6 195 2 25 8 302 2 117 2 645 4 203 2 305 2 485 2 205 2 39 2 487 2 40 2 561 2 560 2 122 2 123 2 125 4 563 2 214 2 217 24 44 4 391 2 219 2 491 2 570 2 54 2 226 2 402 2 575 2 580 2 662 2 326 2 585 2 233 2 234 12 147 2 335 2 152 2 64 2 241 2 67 2 679 4 426 4 339 2 248 2 70 4 430 2 431 4 250 16 433 2 515 2 163 2 254 2 255 2 83 4 263 2 166 2 349 2 693 4 173 2 
328 2 4 2 103 2 558 2 518 2 324 2 386 2 256 2 400 2 338 2 
570 2 418 2 299 3 222 2 425 2 533 2 355 2 227 2 376 3 250 2 658 2 513 2 540 2 435 2 254 3 499 4 690 6 210 2 213 1 148 2 523 2 294 3 268 2 217 2 391 2 
570 2 418 2 299 2 540 2 499 4 254 2 435 2 222 2 425 2 533 2 690 6 210 2 227 2 355 2 376 2 148 2 523 2 217 2 268 2 294 2 250 2 391 2 658 2 513 2 
570 2 418 2 299 2 540 2 499 4 254 2 435 2 222 2 425 2 533 2 690 6 210 2 227 2 355 2 376 2 148 2 523 2 217 2 268 2 294 2 250 2 391 2 658 2 513 2 
570 2 315 2 353 4 395 2 421 2 504 3 452 2 246 2 92 3 372 2 641 2 455 5 227 2 535 2 507 2 71 2 230 2 360 4 511 2 250 4 282 4 281 2 383 4 144 2 435 2 254 3 462 2 290 4 521 3 441 2 211 2 19 2 670 6 294 3 217 10 612 2 45 4 569 4 417 2 493 2 
570 2 315 2 353 4 395 2 421 2 504 2 452 2 246 2 92 2 372 2 641 2 93 2 642 2 455 4 227 2 535 2 507 2 71 2 230 2 360 4 511 2 250 4 282 4 281 2 383 4 144 2 516 2 435 2 254 2 462 2 290 4 521 2 441 2 211 2 19 2 670 6 294 2 217 10 612 2 45 4 569 4 417 2 493 2 
570 2 315 2 353 4 395 2 421 2 504 2 452 2 246 2 92 2 372 2 641 2 93 2 642 2 455 4 227 2 535 2 507 2 71 2 230 2 360 4 511 2 250 4 282 4 281 2 383 4 144 2 516 2 435 2 254 2 462 2 290 4 521 2 441 2 211 2 19 2 670 6 294 2 217 10 612 2 45 4 569 4 417 2 493 2 
570 2 315 2 353 4 395 2 421 2 504 2 452 2 246 2 92 2 372 2 641 2 93 2 642 2 455 4 227 2 535 2 507 2 71 2 230 2 360 4 511 2 250 4 282 4 281 2 383 4 144 2 516 2 435 2 254 2 462 2 290 4 521 2 441 2 211 2 19 2 670 6 294 2 217 10 612 2 45 4 569 4 417 2 493 2 
570 2 315 2 353 4 395 2 421 2 504 2 452 2 246 2 92 2 372 2 641 2 93 4 642 4 455 4 227 2 535 2 507 2 71 2 230 2 360 4 511 2 250 4 282 4 281 2 383 4 144 2 516 4 435 2 254 2 462 2 290 4 521 2 441 2 211 2 19 2 670 6 294 2 217 10 612 2 45 4 569 4 417 2 493 2 
550 2 654 2 115 2 216 2 112 2 259 2 445 2 
235 2 667 2 129 2 168 2 216 2 488 2 
447 1 474 2 448 2 677 2 475 2 678 1 617 2 95 2 556 2 536 2 378 2 456 2 250 8 345 2 541 1 519 1 664 2 669 2 332 2 564 2 217 10 108 1 548 2 218 2 313 2 393 2 
153 2 
352 2 498 4 528 2 66 2 121 2 290 2 348 2 546 2 142 2 217 1 150 2 360 2 250 1 512 1 170 7 361 2 120 2 569 2 
352 2 498 4 528 2 66 4 121 2 290 2 348 2 546 4 142 2 150 2 360 2 170 6 361 4 120 2 569 2 
352 2 498 4 528 2 66 8 121 2 290 2 348 8 546 8 142 2 217 1 150 6 360 2 250 1 512 1 170 10 361 8 120 2 569 2 
352 2 498 2 528 2 66 2 121 2 290 2 546 2 142 2 360 2 170 2 361 2 120 2 569 2 
5 2 276 2 102 2 582 1 469 2 335 2 193 4 196 2 70 2 250 4 306 2 515 2 163 2 215 1 217 4 491 2 
306 2 102 2 193 2 515 2 196 2 5 2 276 2 469 2 70 2 217 4 250 4 335 2 
306 2 102 2 193 2 515 2 196 2 5 2 276 2 469 2 70 2 217 4 250 4 335 2 
306 2 102 2 193 3 515 2 163 1 196 2 5 2 276 2 469 2 70 2 217 4 250 4 335 2 491 1 
576 2 

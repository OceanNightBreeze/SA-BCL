#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V ERROR java.lang.NullPointerException 456 671 
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V ERROR java.lang.IllegalArgumentException (37,123,305,408,441,446,464) 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.ClassCastException 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (407,432,555,746,755) (407,432,555,746,755) (407,432,555,746,755) (407,432,555,746,755) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 647 163 187 747 348 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 352 (246,643) (270,572) (270,572) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 352 (246,643) (270,572) (270,572) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 352 (246,643) (270,572) (270,572) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 352 (246,643) (270,572) (270,572) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 352 (246,643) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 352 (246,643) (246,643) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 352 (246,643) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.ClassCastException (37,123,305,408,441,446,464) 682 487 663 104 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR java.lang.NullPointerException 277 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR java.lang.NullPointerException 277 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR java.lang.NullPointerException 277 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 277 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 277 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 101 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 300 435 697 308 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 435 697 308 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 516 266 80 435 697 308 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:pow(II)I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfo:relate_var()V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptSlice0:arity()I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String; | RETURN | 51597 | return null
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:eltsGTE([II)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:gt(II)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:getConfidence()D
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.ProglangType:isPointerFileRep()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.simplify.SimpUtil:formatInteger(J)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z | ASSIGN | 925 | = null
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:noDups([I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.ProglangType:dimensions()I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfo:isPointer()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String; | RETURN | 119133 | return null
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:ne(II)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:setEqual([I[I)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:logOn()Z
daikon.ProglangType:isArray()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:slice([III)[I
daikon.Quant:eq(II)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | CONDITION | 9913 | if (x) -> if (!x)
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:eq(JJ)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.diff.InvMap:InvMap()V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.MathMDE:sign(I)I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.PptSlice2:arity()I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.PptName:isCombinedExitPoint()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:gte(II)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z | ASSIGN | 21165 | = null
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.ProglangType:isScalar()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object; | CONDITION | 21221 | if (x) -> if (!x)
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfo:ioa_name()Ljava.lang.String; | RETURN | 99869 | return null
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:negate(I)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:new_ppt()V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:union([I[I)[I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | OPERATOR | 4882 | == -> <
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode; | ASSIGN | 26710 | = null
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.ProglangType:baseIsFloat()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.Quant:intersection([I[I)[I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus; | RETURN | 5040 | return null
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.ProglangType:isPseudoArray()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([B[I)Z
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:gcd(II)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.Intern:intern([I)[I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaCharStream:backup(I)V
daikon.Quant:eltwiseEqual([I)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.PptSlice1:arity()I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.RootNode:RootNode()V
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:subsetOf([S[S)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName:hashCode()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:subsetOf([J[J)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.diff.Node:Node()V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:setDiff([I[I)[I
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:nonmodulus_strict([I)[I | RETURN | 23142 | return null
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_sets()I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:lt(II)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.OrderedPairIterator:setnext2()V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.ProglangType:isFloat()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Ppt:Ppt()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | CONSTANT | 51514 | 3 -> 0
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String; | RETURN | 48940 | return null
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.TestUtilMDE:lsis_test(I)V | ASSIGN | 45022 | = null
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Debug:logOn()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:lexGTE([I[I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:memberOf(S[S)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Quant:concat([I[I)[I
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:eltsGteIndex([I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern:numIntArrays()I
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.ArraysMDE:sum([D)D
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:eltwiseGTE([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V | OPERATOR | 5137 | + -> /
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
456 2 671 2 
621 6 594 2 620 2 556 6 538 2 713 6 335 2 243 2 144 2 521 2 413 2 
638 2 421 4 674 6 82 2 684 4 623 6 71 6 211 6 760 2 721 2 661 2 589 2 565 2 
269 10 322 8 0 16 232 2 765 4 26 10 82 6 471 2 55 8 56 4 408 6 85 8 86 10 330 16 565 6 281 2 751 12 154 8 429 2 127 2 93 26 354 16 356 4 777 2 486 10 244 4 734 2 464 6 317 10 102 29 
611 6 445 4 
503 2 
742 2 232 2 743 2 235 2 168 2 494 2 59 2 495 4 691 2 450 2 498 2 454 2 752 2 285 2 501 2 656 4 382 4 78 2 605 2 82 4 423 2 306 2 561 2 475 2 216 2 615 2 217 2 775 2 565 4 618 2 42 2 723 2 221 2 726 2 529 2 571 4 626 2 779 2 678 2 735 2 679 2 228 2 319 2 581 2 
269 4 0 6 26 4 441 2 82 4 55 2 305 2 446 4 37 8 330 6 565 4 751 4 93 10 354 6 486 4 530 2 317 4 194 4 134 6 102 12 
221 2 241 2 324 2 
12 2 416 2 128 22 398 2 349 2 644 2 409 10 563 2 476 2 774 2 199 2 279 2 160 2 581 2 
269 2 0 2 26 2 323 2 55 2 56 2 686 2 408 2 560 2 86 4 62 2 330 2 90 2 751 2 354 2 93 4 550 2 486 2 317 2 102 6 403 2 738 2 79 2 
123 4 269 4 21 2 751 4 0 8 765 2 26 4 441 4 354 8 93 12 486 4 317 4 111 2 519 6 194 6 330 8 102 15 
405 10 54 4 666 2 324 2 6 2 31 2 687 4 32 36 588 2 218 2 42 2 121 2 313 2 752 2 526 2 221 8 567 2 527 2 241 6 95 2 484 2 262 2 294 2 654 2 100 2 436 6 577 2 296 2 188 2 401 2 382 2 297 2 660 2 159 4 
714 2 196 2 763 2 
2 2 325 6 407 2 685 2 110 2 236 2 113 1 119 2 116 2 497 1 124 2 593 2 499 4 131 2 598 2 245 2 599 1 600 1 608 2 29 2 514 8 344 1 516 4 346 2 710 1 141 2 147 2 148 1 720 1 40 1 525 2 432 2 431 1 627 1 733 4 631 4 266 4 52 2 640 6 746 2 365 2 169 2 60 2 172 1 63 6 545 2 284 2 68 2 287 2 755 2 374 1 460 1 461 2 193 2 759 1 198 1 467 1 468 2 81 1 82 26 84 2 472 2 302 2 205 2 213 2 89 6 565 24 480 1 568 2 315 2 570 1 778 5 99 2 321 2 
82 2 712 2 
185 2 553 2 82 4 
590 2 
492 2 23 2 163 2 304 2 348 2 709 2 747 2 646 2 109 8 647 2 350 8 35 2 772 2 395 8 457 2 417 2 187 2 337 2 505 2 701 2 299 2 49 2 
192 2 261 1 370 2 451 2 
192 2 17 2 
91 2 192 2 221 2 88 2 371 2 356 2 730 2 
132 2 192 2 88 2 
192 2 88 2 597 2 
129 2 370 2 43 2 
192 2 88 2 
402 2 129 2 
231 2 192 2 
129 2 370 2 278 2 
370 2 267 2 122 2 
397 2 370 2 74 2 
424 2 177 2 370 2 
614 2 370 2 392 2 
129 2 418 2 
341 2 192 2 
210 2 267 2 
226 2 74 2 
177 2 782 2 
745 2 614 2 
133 2 129 2 
614 2 727 2 
233 2 177 2 
3 2 74 2 
200 2 267 2 
129 2 370 2 278 2 138 2 
415 2 129 2 370 2 278 2 138 2 
129 2 332 2 370 2 
737 2 129 2 370 2 
453 2 507 2 311 2 426 2 
53 2 129 2 
694 2 584 2 758 2 469 2 523 4 206 2 50 2 394 2 
106 2 370 2 
170 2 724 2 221 2 730 2 
170 2 724 2 91 2 221 2 338 2 730 2 
192 2 564 2 221 2 88 2 356 2 730 2 
105 2 529 2 
191 2 221 2 356 2 730 2 
177 2 579 2 
614 2 70 2 
267 2 224 2 
327 2 74 2 
614 2 725 2 74 2 
282 2 614 2 74 2 
614 2 761 2 74 2 
689 2 614 2 74 2 
201 2 768 6 240 2 221 2 595 6 69 2 730 2 490 2 
608 2 
103 2 2 2 234 2 325 4 685 2 7 4 326 4 110 2 116 2 119 2 124 2 592 2 695 2 499 4 242 2 131 6 598 6 703 2 705 2 512 2 22 2 606 2 29 2 514 4 516 4 345 2 610 2 711 2 710 2 141 2 715 2 147 2 719 2 425 2 722 2 525 2 617 2 427 2 430 2 156 2 438 2 631 4 266 4 636 4 161 8 443 2 640 6 365 2 275 2 169 2 60 2 61 2 63 2 545 2 284 2 68 2 287 6 179 4 374 2 289 2 459 2 461 2 189 2 468 2 385 2 300 8 82 26 472 2 302 2 303 2 89 2 565 26 315 2 99 2 229 2 681 2 
103 2 2 2 234 2 325 6 685 2 7 4 326 2 110 2 119 2 116 2 124 2 592 2 695 2 499 4 242 2 131 6 598 6 703 2 705 2 512 2 22 2 606 2 29 2 514 4 516 4 345 2 610 2 710 2 141 2 715 2 147 2 719 2 425 2 525 2 617 2 427 2 430 2 156 2 438 2 631 4 266 4 636 4 161 8 443 2 640 6 164 2 365 2 275 2 169 2 60 2 61 2 63 2 545 2 284 2 68 2 287 6 179 4 374 2 289 2 181 2 461 2 182 2 189 2 193 2 468 2 385 2 300 8 82 26 472 2 302 2 205 2 303 2 89 2 565 26 220 2 315 2 99 2 229 2 681 2 
135 2 255 2 
197 2 
270 2 442 4 406 8 640 4 643 2 166 4 169 2 367 2 60 2 112 2 116 2 119 2 413 2 11 2 414 2 544 2 543 2 373 2 594 4 499 2 290 2 130 2 295 10 551 4 506 2 76 2 77 2 250 2 468 2 136 2 25 8 82 12 83 2 667 2 556 6 30 2 302 2 558 2 769 2 713 6 208 2 144 4 352 2 670 2 716 4 215 4 565 6 312 2 481 2 621 6 620 2 314 2 353 2 569 4 316 2 572 2 99 2 631 2 230 2 362 2 
270 2 442 4 406 8 640 4 538 2 643 2 166 4 276 2 169 2 60 2 367 2 112 2 116 2 119 2 413 2 11 2 414 2 544 2 543 2 373 2 594 4 499 2 290 2 130 2 295 10 551 4 506 2 76 2 77 2 468 2 136 2 25 8 82 12 667 2 556 8 30 2 302 2 558 2 769 2 208 2 713 6 144 4 352 2 670 2 716 4 215 4 565 6 312 2 481 2 621 8 620 2 314 2 353 2 223 4 569 4 316 2 572 2 99 2 631 2 230 2 362 2 48 2 
270 2 373 2 594 2 621 2 442 4 667 2 30 2 643 2 166 2 572 2 130 2 208 2 713 2 367 2 144 2 551 4 77 2 544 2 
270 2 442 4 406 4 640 4 538 2 643 2 166 4 169 2 367 2 60 2 112 2 116 2 119 2 11 2 414 2 544 2 543 2 373 2 594 4 499 2 290 2 130 2 295 6 551 4 506 2 76 2 77 2 250 2 468 2 136 2 25 4 82 12 83 2 667 2 556 6 30 2 302 2 558 2 769 2 713 4 208 2 144 4 352 2 670 2 716 4 215 4 565 6 312 2 481 2 621 6 620 2 314 2 353 2 569 4 316 2 572 2 99 2 631 2 230 2 362 2 
270 2 442 4 406 4 640 4 643 2 166 4 169 2 367 2 60 2 112 2 116 2 119 2 11 2 414 2 544 2 543 2 373 2 594 4 499 2 290 2 130 2 295 6 551 4 506 2 76 2 77 2 250 2 468 2 136 2 25 4 82 12 83 2 667 2 556 6 30 2 302 2 558 2 769 2 713 6 208 2 144 4 352 2 670 2 716 4 521 2 215 4 565 6 312 2 481 2 621 4 620 2 314 2 353 2 569 4 316 2 572 2 99 2 631 2 230 2 362 2 
270 2 442 4 406 4 640 4 643 2 166 4 169 2 367 2 60 2 112 2 116 2 119 2 413 2 11 2 414 2 544 2 543 2 373 2 594 4 499 2 290 2 130 2 295 6 551 4 506 2 76 2 77 2 250 2 468 2 136 2 25 8 82 12 83 2 667 2 556 6 30 2 302 2 558 2 769 2 713 6 208 2 144 4 352 2 670 2 716 4 215 4 565 6 312 2 481 2 621 6 620 2 314 2 353 2 569 4 316 2 572 2 99 2 631 2 230 2 362 2 
270 2 442 4 406 8 640 4 643 2 166 4 169 2 367 2 60 2 112 2 116 2 119 2 413 2 11 2 414 2 544 2 543 2 373 2 594 4 499 2 290 2 130 2 295 10 551 4 506 2 76 2 77 2 250 2 468 2 136 2 25 8 82 12 83 2 667 2 556 8 30 2 302 2 558 2 769 2 713 8 208 2 144 4 352 2 670 2 716 4 521 2 215 4 565 6 312 2 481 2 621 6 620 2 314 2 353 2 569 4 316 2 572 2 99 2 631 2 230 2 362 2 
270 2 442 4 406 8 640 4 643 2 166 4 169 2 367 2 60 2 112 2 116 2 119 2 413 2 11 2 414 2 544 2 543 2 373 2 594 4 499 2 290 2 130 2 295 10 551 4 506 2 76 2 77 2 250 2 468 2 136 2 25 8 82 12 83 2 667 2 556 6 30 2 302 2 558 2 769 2 713 6 208 2 144 4 352 2 670 2 716 4 215 4 565 6 312 2 481 2 621 6 620 2 314 2 353 2 569 4 316 2 572 2 99 2 631 2 230 2 362 2 
270 2 136 2 300 2 161 2 25 2 82 4 83 2 442 2 556 4 610 2 643 2 326 1 208 2 713 6 367 2 144 4 352 2 670 2 112 2 716 2 521 2 215 2 414 2 543 2 481 2 373 2 695 2 620 2 594 4 621 4 353 2 289 2 290 2 676 2 316 2 572 2 551 2 76 2 77 2 
270 2 136 2 300 2 161 2 25 6 82 4 83 2 442 2 556 4 610 2 643 2 208 2 713 6 367 2 144 4 352 2 670 2 112 2 716 2 215 2 413 2 414 2 543 2 481 2 373 2 695 2 620 2 594 4 621 6 353 2 289 2 290 2 676 2 316 2 572 2 551 2 76 2 77 2 
270 2 136 2 300 2 161 2 25 6 82 4 83 2 442 2 556 4 406 4 610 2 643 2 208 2 713 6 367 2 144 4 352 2 670 2 112 2 716 2 215 2 413 2 414 2 543 2 481 2 373 2 695 2 620 2 594 4 621 6 353 2 289 2 290 2 676 2 316 2 572 2 295 4 551 2 76 2 77 2 
270 2 136 2 300 2 161 2 25 6 82 4 83 2 442 2 556 4 406 4 610 2 643 2 208 2 713 6 367 2 144 4 352 2 670 2 112 2 716 2 215 2 413 2 414 2 543 2 481 2 373 2 695 2 620 2 594 4 621 6 353 2 289 2 290 2 676 2 316 2 572 2 295 4 551 2 76 2 77 2 
270 2 136 2 25 6 82 4 83 2 442 2 556 4 406 4 643 2 208 2 713 6 367 2 144 4 352 2 670 2 112 2 716 2 215 2 413 2 414 2 543 2 481 2 373 2 620 2 621 6 594 4 353 2 569 2 290 2 316 2 572 2 295 4 551 2 76 2 77 2 
2 2 325 6 685 4 110 2 112 2 119 2 116 2 413 2 414 2 124 2 594 4 499 4 131 8 598 6 504 2 136 2 606 2 25 6 608 2 29 2 514 3 516 4 137 3 713 6 141 2 144 4 352 2 36 2 147 2 716 2 719 2 425 2 151 2 525 2 620 2 621 6 353 2 432 2 357 2 437 2 438 2 631 4 266 4 270 2 442 2 640 6 365 2 643 2 169 2 367 2 60 2 63 3 543 2 545 2 284 2 68 2 373 2 287 6 179 4 461 2 290 2 376 2 295 2 551 2 193 2 76 2 77 2 468 2 82 28 83 2 556 4 555 2 472 2 302 2 205 2 558 2 389 2 208 2 670 2 215 2 89 3 565 24 481 2 315 2 569 2 316 2 572 2 99 2 580 2 
136 2 142 2 290 2 
136 2 142 2 290 2 
2 2 325 6 406 2 685 2 326 2 110 2 119 2 116 2 120 2 413 2 124 2 695 2 594 4 499 4 131 2 598 2 136 2 251 2 25 6 28 2 29 2 514 2 516 4 610 2 713 6 141 2 256 2 144 4 352 2 147 2 716 2 719 2 425 2 525 2 621 6 620 2 438 2 631 4 158 2 266 4 161 2 442 2 640 6 365 2 643 2 169 2 60 2 367 2 545 2 284 2 68 2 286 2 287 2 289 2 651 2 461 2 290 2 295 2 189 2 551 2 193 2 468 2 300 2 82 18 472 2 556 4 302 2 205 2 208 2 670 2 215 2 565 14 315 2 99 2 
271 2 82 4 155 2 30 2 685 2 355 2 75 2 15 2 209 2 60 2 87 2 613 2 249 2 195 2 135 2 151 2 565 2 
2 2 325 6 406 2 685 2 108 2 326 1 110 2 119 2 116 2 120 2 413 2 124 2 695 2 594 4 499 4 131 2 598 2 246 2 136 2 251 2 25 6 28 2 29 2 514 4 516 4 610 2 713 6 141 2 256 2 144 4 352 2 147 2 716 2 719 2 425 2 525 2 621 6 620 2 438 2 631 4 158 2 266 4 161 2 442 2 640 6 365 2 643 2 169 2 60 2 367 2 545 2 284 2 68 2 286 2 287 2 289 2 651 4 461 2 290 2 295 2 189 2 551 2 193 2 468 2 300 2 82 18 472 2 556 4 302 2 205 2 208 2 670 2 215 2 565 14 315 2 99 2 
2 2 325 6 406 2 685 2 326 1 110 2 119 2 116 2 120 2 413 2 124 2 695 2 594 4 499 4 131 2 598 2 136 2 251 2 25 6 28 2 29 2 514 2 516 4 610 2 713 6 141 2 256 2 144 4 352 2 147 2 716 2 719 2 425 2 525 2 621 6 620 2 438 2 631 4 158 2 266 4 161 2 442 2 640 6 365 2 643 2 169 2 60 2 367 2 545 2 284 2 68 2 286 2 287 2 289 2 651 2 461 2 290 2 295 2 189 2 551 2 193 2 468 2 300 2 82 18 472 2 556 4 302 2 205 2 208 2 670 2 215 2 565 14 315 2 99 2 
0 6 404 2 2 4 1 2 8 12 237 2 591 10 592 2 13 2 239 2 14 2 598 14 16 6 602 2 603 2 18 2 19 2 22 18 606 2 422 16 26 4 27 4 29 2 33 2 36 2 258 2 425 2 39 2 619 2 427 46 259 2 433 2 624 2 625 2 628 2 438 2 630 2 629 2 631 4 45 2 633 4 266 8 439 2 635 2 268 2 269 4 55 4 640 6 273 6 274 2 275 2 645 2 447 4 60 2 63 16 284 4 67 16 68 2 287 14 72 2 461 2 462 4 73 2 293 2 294 2 464 2 296 2 298 2 468 2 663 2 300 22 82 38 472 2 302 2 303 4 305 2 309 14 669 2 474 4 89 19 672 2 477 2 479 4 673 2 483 2 92 4 675 2 315 2 93 10 94 2 96 2 677 12 97 12 98 2 99 2 486 4 487 2 488 2 317 4 681 12 320 2 102 14 491 2 682 2 104 2 103 2 683 2 325 14 685 2 493 2 688 2 326 2 690 2 110 2 114 24 116 2 119 2 328 2 693 2 330 6 123 4 125 4 124 2 499 4 696 2 698 2 131 28 504 2 700 4 508 2 512 2 340 12 706 10 343 2 514 19 515 2 345 2 516 8 137 2 708 2 517 2 710 2 141 4 518 2 351 2 143 3 715 2 519 6 147 2 146 2 520 3 718 4 522 2 525 4 152 4 154 4 354 6 156 2 729 2 731 16 736 2 531 16 532 2 157 2 361 4 533 2 739 2 535 2 741 2 161 22 364 2 536 4 365 2 167 3 539 10 748 10 169 2 749 2 540 3 173 4 368 2 369 2 545 4 751 4 754 2 178 2 180 2 179 12 374 2 376 2 377 12 549 4 548 4 756 2 379 2 757 4 193 4 762 2 383 4 764 12 552 2 203 2 387 2 204 2 205 4 557 3 207 2 559 2 562 12 391 2 565 30 776 2 219 1 573 2 225 2 574 2 227 2 781 12 401 2 783 2 784 10 580 2 
606 2 706 4 82 2 514 2 274 2 557 2 748 2 89 2 63 2 477 2 565 2 427 6 591 2 239 2 287 2 178 2 179 2 96 2 73 2 696 2 131 2 598 2 247 2 157 2 
606 2 706 4 82 2 514 2 274 2 557 2 748 2 89 2 63 2 477 2 565 2 427 6 591 2 239 2 287 2 178 2 179 2 96 2 73 2 696 2 131 2 598 2 247 2 157 2 
606 2 706 4 82 2 514 2 274 2 557 2 748 2 89 2 63 2 477 2 565 2 427 6 591 2 239 2 287 2 178 2 179 2 96 2 73 2 696 2 131 2 598 2 247 2 157 2 
269 2 0 2 24 2 536 2 606 2 26 2 744 2 82 10 470 4 514 3 167 3 540 3 277 2 541 3 115 4 310 2 89 3 150 2 616 6 565 4 330 2 152 2 154 4 455 2 222 4 93 4 354 2 622 4 696 2 131 2 486 2 186 2 358 2 464 2 317 2 420 2 702 4 383 2 102 5 384 2 
269 2 0 2 24 2 536 2 606 2 26 2 744 2 82 10 470 4 514 2 55 2 167 2 540 2 277 2 541 2 115 4 310 2 89 2 150 2 616 6 565 4 330 2 152 2 751 2 154 4 455 2 127 2 222 4 93 4 354 2 622 4 696 2 131 2 486 2 186 2 358 2 464 2 317 2 420 2 702 4 383 2 102 4 384 2 
269 2 0 2 24 2 536 2 606 2 26 2 744 2 82 10 470 4 514 2 55 2 167 2 540 2 277 2 541 2 115 4 310 2 89 2 150 2 616 6 565 4 330 2 152 2 751 2 154 4 455 2 127 2 222 4 93 4 354 2 622 4 696 2 131 2 486 2 186 2 358 2 464 2 317 2 420 2 702 4 383 2 102 4 384 2 
269 2 0 2 24 2 536 2 606 2 26 2 744 2 82 10 470 4 514 2 55 2 167 2 540 2 277 2 541 2 115 4 310 2 89 2 150 2 616 6 565 4 330 2 152 2 751 2 154 4 455 2 127 2 222 4 93 4 354 2 622 4 696 2 131 2 486 2 186 2 358 2 464 2 317 2 420 2 702 4 383 2 102 4 384 2 
269 2 0 2 24 2 536 2 606 2 26 2 744 2 82 10 470 4 514 2 55 4 167 2 540 2 277 2 541 2 115 4 310 2 89 2 150 2 616 6 565 4 330 2 152 2 751 4 154 4 455 2 127 4 222 4 93 4 354 2 622 4 696 2 131 2 486 2 186 2 358 2 464 2 317 2 420 2 702 4 383 2 102 4 384 2 
488 2 410 2 46 2 510 2 238 2 637 2 
489 2 641 2 707 2 238 2 329 2 681 2 478 2 
82 10 537 2 6 1 582 2 388 2 140 1 116 2 692 2 10 2 524 1 565 8 526 1 547 2 334 1 528 2 399 2 378 2 381 2 575 2 336 2 263 2 601 2 634 2 466 2 20 2 664 2 
269 6 0 6 26 6 55 2 446 2 34 2 519 4 450 2 38 2 372 2 330 6 123 2 751 4 154 4 127 2 93 12 354 6 501 2 729 2 486 6 464 2 317 6 700 2 134 4 603 2 101 2 102 16 
639 2 82 1 622 2 728 4 57 2 653 2 485 2 190 1 171 2 702 2 115 2 265 2 542 7 47 2 496 2 565 1 511 2 363 2 
639 2 622 2 728 4 57 2 653 2 485 4 171 2 702 2 115 2 265 2 542 6 47 2 496 4 363 2 511 4 
639 2 82 1 622 2 728 4 57 2 653 8 485 8 190 1 171 2 702 2 115 2 265 6 542 10 47 2 496 8 565 1 363 2 511 8 
639 2 622 2 728 2 57 2 485 2 171 2 702 2 115 2 542 2 47 2 496 2 363 2 511 2 
2 2 5 2 325 18 642 2 366 2 645 2 326 2 585 2 117 1 66 2 175 2 545 2 546 4 331 2 458 4 333 2 375 2 697 2 380 2 193 2 704 2 18 2 604 2 300 14 82 18 516 8 205 2 141 2 308 2 214 2 565 18 259 2 396 2 260 2 435 2 780 2 359 3 578 2 264 2 360 2 266 8 
272 2 2 2 4 6 5 2 325 36 444 2 366 2 107 4 645 2 326 2 448 4 648 2 174 4 750 2 175 2 545 2 283 4 546 2 500 4 596 2 458 8 419 2 697 2 657 2 658 2 699 2 193 8 465 2 704 2 248 4 18 2 604 2 340 10 300 14 422 2 301 2 766 2 82 28 343 2 516 14 205 8 473 2 33 2 141 2 308 2 518 6 257 2 214 6 565 26 393 2 259 2 396 6 624 2 435 2 400 4 359 2 578 6 680 2 531 10 318 2 266 14 534 4 
2 4 4 6 325 60 107 4 9 4 118 4 126 2 500 2 596 2 502 2 697 2 704 4 248 4 509 4 18 2 604 2 513 4 340 22 422 2 252 4 342 4 343 1 516 30 139 4 141 8 612 4 33 4 518 3 257 4 41 4 153 4 259 2 624 1 434 4 732 4 435 2 359 8 44 4 531 2 266 26 534 4 51 4 440 12 740 8 272 2 162 2 366 8 444 2 645 2 448 2 648 2 174 4 64 4 452 4 65 4 280 4 175 8 545 8 176 4 546 2 283 4 753 2 650 4 458 28 652 8 183 4 380 2 193 12 465 4 662 4 300 4 665 4 82 64 766 2 554 4 205 12 473 4 308 2 307 4 771 4 390 4 212 4 214 8 773 8 565 56 566 4 482 4 396 8 400 4 578 8 680 4 318 2 
2 2 5 2 325 32 165 2 107 2 583 4 326 2 645 2 586 2 58 2 587 2 449 2 411 2 412 2 174 2 545 2 649 2 458 2 288 2 291 2 292 2 697 2 655 2 463 2 184 2 659 2 193 6 248 2 18 2 764 2 604 2 339 4 300 18 80 2 253 2 254 2 386 4 607 2 82 30 202 2 767 2 609 2 516 14 347 2 205 6 668 2 770 2 141 2 308 2 145 2 717 2 214 2 149 2 565 30 428 2 483 2 259 2 396 2 435 2 576 2 578 2 266 14 
632 2 

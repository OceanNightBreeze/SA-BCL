#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V ERROR java.lang.NullPointerException 283 284 
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (48,780) (48,780) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 400 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (112,161,246,313,794) (112,161,246,313,794) (112,161,246,313,794) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (43,165) 209 356 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (43,165) 209 356 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (43,165) 209 356 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (43,165) 209 356 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (43,165) 209 356 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (43,165) 209 356 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (43,165) 209 356 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (43,165) 209 356 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (43,165) 209 356 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (43,165) 209 356 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (43,165) 209 356 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException (43,165) 209 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (43,165) 209 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException (43,165) 209 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 587 839 800 156 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.NullPointerException 469 125 (29,177) (29,177) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.NullPointerException 469 125 (29,177) (29,177) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.NullPointerException 469 125 (29,177) (29,177) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 314 874 502 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 314 874 502 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | STATEMENT | 21385 | stmt -> ;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:jj_3R_54()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:subsetOf([B[I)Z | CONDITION | 29819 | if (x) -> if (!x)
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.ProglangType:isScalar()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.ProglangType:baseIsScalar()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | OPERATOR | 41870 | != -> >=
jtb.ParseException:ParseException(Ljava.lang.String;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.Debug:logOn()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:jj_ntk()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:lte(II)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Invariant:logDetail()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.ModBitTracker:num_vars()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:noDups([I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.ModBitTracker:num_samples()I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Ppt:Ppt()V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern:internSubsequence([III)[I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONDITION | 20179 | if (x) -> if (!x)
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_161()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaCharStream:backup(I)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:lexLT([I[I)Z
daikon.inv.Invariant:logOn()Z
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.Intern:intern([I)[I
daikon.ProglangType:dimensions()I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.ArraysMDE:max([I)I
daikon.Quant:eltsGT([II)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_3_13()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:readChar()C
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V | ASSIGN | 1742 | = null
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:lt(II)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.Node:Node()V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.TestUtilMDE:lsis_test(I)V | ASSIGN | 45022 | = null
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 99177 | return null
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.diff.RootNode:RootNode()V
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gte(DD)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ProglangType:isIntegral()Z
daikon.Quant:ne(II)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | OPERATOR | 54314 | != -> ==
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.Intern:intern([D)[D
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4767 | = null
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:intersection([I[I)[I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Intern:numIntArrays()I
utilMDE.MathMDE:gcd([I)I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object; | ASSIGN | 262646 | = null
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:eltsGTE([II)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.ProglangType:baseIsIntegral()Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:gte(II)Z
utilMDE.WeakHasherMap:size()I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParser:jj_3R_51()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Intern:internSubsequence([JII)[J | STATEMENT | 23714 | stmt -> ;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.PptSlice1:arity()I
jtb.JavaCharStream:getBeginLine()I
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.Invariant:prob_and(DD)D
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.PptSlice1:num_samples()I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:jj_3_16()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V | ASSIGN | 25295 | = null
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_69()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.MathMDE:pow(II)I
utilMDE.MathMDE:pow_fast(II)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit; | ASSIGN | 3246 | = null
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.FormatTestCase:passes()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName:hashCode()I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.simplify.SimpUtil:formatInteger(J)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_sets()I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfo:relate_var()V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.ValueTuple:size()I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:esc_name()Ljava.lang.String; | STATEMENT | 100148 | stmt -> ;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:sum([[I)I
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaParser:jj_3_14()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 131294 | = null
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_3R_50()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:jj_3R_135()Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParser:jj_3R_58()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:jj_3R_47()Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:isArray()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | ASSIGN | 121018 | = null
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.PptSlice2:arity()I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode; | ASSIGN | 22225 | = null
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType; | CONDITION | 48015 | if (x) -> if (!x)
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:isReverse([I[I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaCharStream:getEndLine()I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_57()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.Invariant:justified()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfo:new_ppt()V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoAux:hashCode()I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.Invariant:getConfidence()D
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:union([I[I)[I
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:gt(II)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.ValueTuple:isMissing(I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.PptName:isEnterPoint()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.PptSlice0:arity()I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
283 2 284 2 
421 2 105 2 685 6 509 2 415 2 495 2 233 2 234 6 600 2 623 6 18 2 
48 2 95 2 511 4 204 2 51 2 652 6 552 6 842 2 174 6 780 2 411 4 410 2 71 6 
484 14 48 6 201 4 203 10 636 10 521 2 207 6 551 4 34 14 33 8 36 2 801 8 241 6 58 27 62 2 416 2 447 2 191 10 830 14 727 6 221 4 146 2 627 24 367 10 455 4 98 4 150 10 780 6 73 10 285 2 
668 6 633 4 
254 2 
253 2 814 2 48 4 740 2 487 2 3 2 748 4 160 2 210 2 390 2 445 2 604 2 337 2 395 2 173 4 225 2 226 4 610 2 780 4 399 2 229 2 72 4 784 2 231 2 508 2 291 2 790 2 711 2 521 2 354 2 355 2 473 2 716 2 38 2 675 2 42 2 624 2 306 2 418 2 147 2 590 2 100 2 631 2 101 2 
484 32 48 4 76 4 201 4 635 4 465 6 203 22 636 16 854 6 574 4 207 4 438 4 34 32 268 6 719 2 140 4 241 18 863 2 826 6 58 54 41 6 674 6 702 2 331 4 191 6 830 32 504 2 727 6 221 2 627 48 683 2 367 16 841 2 736 2 150 16 780 4 73 16 370 4 507 8 
463 2 306 2 400 2 
649 2 304 2 445 2 15 2 435 10 132 2 489 2 819 22 109 2 715 2 820 2 408 2 646 2 847 2 
484 2 203 2 636 2 352 2 5 2 321 2 207 2 553 2 34 2 241 2 362 2 58 6 191 4 830 2 221 2 220 2 394 2 627 4 367 2 776 2 248 2 150 2 73 2 
58 16 484 8 674 6 76 4 635 4 203 4 636 4 830 8 627 12 367 4 551 2 34 8 150 4 698 2 476 2 73 4 826 6 
477 2 11 4 131 2 463 2 467 2 468 2 306 2 665 2 353 2 831 2 705 2 589 2 117 2 358 2 525 6 400 2 
254 2 513 2 61 2 12 2 769 2 20 2 194 2 69 2 782 2 127 2 
48 22 817 1 692 2 379 2 161 2 639 2 162 6 384 2 496 2 211 1 825 2 122 2 273 1 332 2 448 2 605 2 279 2 66 2 398 4 779 2 506 4 780 20 128 2 788 2 351 2 515 4 133 2 516 4 794 2 32 2 141 6 619 2 302 2 88 2 526 1 413 2 583 2 419 2 682 2 366 2 307 2 313 2 735 2 539 2 591 2 427 2 872 2 
48 2 771 2 
48 4 97 2 429 2 
434 2 
634 2 743 4 544 4 545 2 546 2 750 2 4 10 206 20 638 2 326 4 757 12 641 2 760 2 765 4 557 6 123 14 562 2 218 4 16 2 222 2 653 4 21 2 456 4 227 8 569 2 23 2 346 2 461 2 659 26 130 82 661 2 470 26 666 2 237 2 138 2 803 26 804 2 363 36 808 10 585 4 145 26 810 24 482 2 252 14 592 2 256 2 257 2 815 6 260 10 693 6 694 2 52 10 380 2 491 2 597 2 382 20 164 2 601 2 267 2 602 2 821 2 388 6 271 82 166 2 167 2 59 2 503 2 608 2 835 2 282 26 286 26 848 2 614 20 850 2 404 2 293 2 615 2 517 10 178 2 83 28 298 82 84 2 523 2 183 2 406 26 85 2 300 26 528 2 90 10 721 2 414 2 305 2 622 2 190 26 625 4 532 2 626 2 731 8 629 14 732 26 312 12 630 2 734 16 198 2 426 26 428 4 320 2 
738 1 182 2 329 2 409 2 
296 2 329 2 
154 2 340 2 306 2 364 2 329 2 98 2 541 2 
329 2 816 2 541 2 
329 2 188 2 541 2 
308 2 182 2 710 2 
329 2 541 2 
753 2 308 2 
329 2 706 2 
308 2 182 2 70 2 
182 2 196 2 393 2 
182 2 373 2 846 2 
739 2 182 2 94 2 
182 2 176 2 277 2 
308 2 142 2 
323 2 329 2 
514 2 393 2 
858 2 846 2 
94 2 68 2 
598 2 277 2 
767 2 308 2 
63 2 277 2 
6 2 94 2 
846 2 575 2 
843 2 393 2 
308 2 182 2 292 2 70 2 
308 2 182 2 292 2 170 2 70 2 
308 2 182 2 295 2 
308 2 182 2 549 2 
2 2 417 2 550 2 499 2 
19 2 
182 2 717 2 
789 2 306 2 364 2 548 2 
154 2 836 2 789 2 306 2 364 2 548 2 
135 2 306 2 364 2 329 2 98 2 541 2 
711 2 118 2 
306 2 364 2 98 2 336 2 
94 2 230 2 
277 2 361 2 
744 2 393 2 
822 2 846 2 
277 2 846 2 199 2 
277 2 259 2 846 2 
277 2 275 2 846 2 
579 2 277 2 846 2 
0 2 677 2 306 2 364 2 357 2 39 6 
308 2 758 2 
448 2 
542 4 106 2 746 4 639 2 554 2 442 2 645 4 330 2 648 5 122 2 650 4 332 2 341 2 224 10 780 26 783 2 460 2 128 2 129 2 232 4 351 2 788 2 32 6 577 2 797 2 141 6 359 2 672 2 805 2 583 2 481 4 591 2 49 2 48 26 376 2 692 2 378 2 162 4 384 6 496 2 56 3 270 4 825 2 603 2 605 2 278 3 279 2 66 2 398 4 506 4 289 4 851 2 515 4 516 4 518 2 856 4 180 2 299 4 619 2 88 2 413 2 189 3 192 2 419 2 307 6 195 2 311 2 537 2 735 2 425 2 316 2 539 2 427 2 872 2 
542 4 106 2 746 4 639 2 640 2 554 2 442 2 645 4 330 2 648 4 122 2 650 4 332 2 563 2 341 2 224 10 780 26 783 2 460 2 128 2 129 2 232 4 351 2 788 2 133 2 32 6 577 2 797 2 141 6 359 2 672 2 805 2 583 2 366 2 481 4 369 2 591 2 49 2 48 26 376 2 692 2 378 2 162 6 384 6 496 2 56 2 270 4 825 2 603 2 605 2 278 2 279 2 66 2 398 4 506 4 289 4 851 2 515 4 516 4 518 2 520 2 856 4 180 2 299 4 619 2 88 2 413 2 189 2 419 2 307 6 195 2 311 2 735 2 425 2 539 2 427 2 872 2 
707 2 
594 2 505 2 
509 2 415 2 701 2 234 2 623 2 43 2 572 2 751 2 493 2 325 2 795 2 356 2 280 4 209 2 687 2 228 2 301 4 861 2 
103 2 48 8 692 2 751 2 599 2 493 2 325 2 495 2 496 2 209 2 165 2 119 2 824 4 216 2 14 2 701 2 276 2 450 2 838 2 778 2 280 4 66 2 228 2 458 2 398 2 506 2 780 6 288 2 348 2 462 2 509 2 234 2 572 2 573 2 617 2 238 2 791 2 795 2 356 2 475 2 141 4 301 4 861 4 862 2 621 4 415 2 623 4 43 2 534 4 421 2 685 4 733 2 735 2 687 2 688 6 591 2 427 2 872 2 
103 2 48 8 692 2 751 2 599 2 493 2 325 2 496 2 209 2 165 2 119 2 824 4 216 2 14 2 701 2 276 2 450 2 838 2 778 2 280 4 66 2 228 2 458 2 398 2 506 2 780 6 288 2 348 2 462 2 509 2 234 4 233 2 572 2 573 2 617 2 238 2 791 2 795 2 356 2 475 2 141 4 301 4 861 4 862 2 621 4 415 2 623 2 43 2 534 4 421 2 685 4 733 2 735 2 687 2 688 6 591 2 427 2 872 2 
103 2 48 8 692 2 751 2 599 2 493 2 325 2 496 2 209 2 165 2 119 2 824 4 216 2 14 2 701 2 276 2 450 2 18 2 838 2 778 2 280 4 66 2 228 2 458 2 398 2 506 2 780 6 288 2 348 2 462 2 509 2 234 4 572 2 573 2 617 2 238 2 791 2 795 2 356 2 475 2 141 4 301 4 861 4 862 2 621 6 415 2 623 4 43 2 534 4 421 2 685 4 733 2 735 2 687 2 688 6 591 2 427 2 872 2 
103 2 48 8 692 2 751 2 599 2 493 2 325 2 496 2 209 2 165 2 119 2 824 6 216 2 14 2 701 2 276 2 450 2 18 2 838 2 778 2 280 4 66 2 228 2 458 2 398 2 506 2 780 6 288 2 348 2 462 2 509 2 234 6 233 2 572 2 573 2 617 2 238 2 791 2 795 2 356 2 475 2 141 4 301 4 861 4 862 2 621 6 415 2 623 4 43 2 534 4 421 2 685 6 733 2 735 2 687 2 688 8 591 2 427 2 872 2 
103 2 48 8 692 2 751 2 599 2 493 2 325 2 496 2 209 2 165 2 119 2 824 6 216 2 14 2 701 2 276 2 450 2 18 2 838 2 778 2 280 4 66 2 228 2 458 2 398 2 506 2 780 6 288 2 348 2 462 2 509 2 234 4 572 2 573 2 617 2 238 2 791 2 795 2 356 2 475 2 141 4 301 4 861 4 862 2 621 6 415 2 623 4 43 2 534 4 421 2 685 4 733 2 735 2 687 2 688 8 591 2 427 2 872 2 
103 2 434 6 745 6 746 2 751 2 637 1 322 1 110 8 639 2 325 2 759 2 209 2 212 2 762 2 643 2 119 2 215 2 648 2 763 7 556 2 558 2 216 2 768 4 122 2 650 2 446 6 14 2 332 2 770 6 450 2 771 6 452 2 223 6 454 2 778 2 224 2 228 2 458 2 459 2 780 24 460 2 347 2 26 2 348 2 128 2 349 2 462 2 233 2 234 4 660 1 786 1 571 2 572 2 351 2 788 2 573 2 133 2 238 4 134 6 792 2 791 2 793 2 795 2 32 6 356 2 35 2 577 2 141 6 144 1 583 2 43 2 681 1 679 2 366 2 479 2 684 2 481 4 685 6 249 1 251 2 688 2 687 2 45 2 591 2 371 6 372 6 48 40 593 2 692 2 378 2 599 2 493 2 265 6 162 6 384 8 496 2 56 2 165 2 823 6 825 2 389 2 391 2 701 2 276 4 605 2 278 2 833 2 838 2 397 2 279 2 280 4 66 2 398 4 506 4 288 4 612 2 509 2 515 4 81 2 516 4 519 7 617 2 181 6 299 2 857 2 407 1 619 2 301 4 88 12 861 4 862 2 413 2 621 2 415 2 623 2 722 6 96 6 419 2 534 4 307 6 421 2 538 2 733 2 869 1 735 2 425 4 539 2 427 2 429 6 871 2 632 6 872 2 200 10 102 2 
103 2 434 6 745 6 746 2 751 2 110 8 639 2 325 2 759 2 209 2 212 2 762 2 645 2 643 2 119 2 215 2 648 2 556 2 558 2 216 2 768 4 122 2 650 2 446 6 14 2 332 2 770 6 450 2 771 6 452 2 18 2 223 6 454 2 778 2 655 2 224 4 228 2 458 2 459 2 780 26 460 2 347 2 26 2 348 2 128 2 349 2 462 2 234 4 571 2 572 2 351 2 788 2 573 2 133 2 238 4 134 6 792 2 791 2 793 2 795 2 32 6 356 2 35 2 577 2 141 6 583 2 43 2 679 2 366 2 479 2 684 2 481 4 685 6 251 2 688 2 687 2 45 2 591 2 371 6 372 6 48 42 593 2 692 2 378 2 599 2 493 2 54 2 265 6 162 6 384 8 496 2 56 2 165 2 823 6 825 2 389 2 391 2 701 2 276 4 605 2 278 2 833 2 838 2 397 2 279 2 280 4 66 2 398 4 506 4 288 4 612 2 509 2 515 4 81 2 516 4 617 2 181 6 299 2 857 2 619 2 301 4 88 12 861 4 862 2 413 2 621 4 415 2 623 4 722 6 96 6 419 2 534 4 307 6 421 2 538 2 733 2 735 2 425 4 539 2 427 2 429 6 871 2 632 6 872 2 200 10 102 2 
103 2 434 6 745 6 746 2 751 2 110 8 639 2 325 2 759 2 209 2 212 2 762 2 645 2 643 2 119 2 215 2 648 2 556 2 558 2 216 2 768 4 122 2 650 2 446 6 14 2 332 2 770 6 450 2 771 6 452 2 18 2 223 6 454 2 778 2 655 2 224 4 228 2 458 2 459 2 780 26 460 2 347 2 26 2 348 2 128 2 349 2 462 2 234 4 571 2 572 2 351 2 788 2 573 2 133 2 238 4 134 6 792 2 791 2 793 2 795 2 32 6 356 2 35 2 577 2 141 6 583 2 43 2 679 2 366 2 479 2 684 2 481 4 685 6 251 2 688 4 687 2 45 2 591 2 371 6 372 6 48 42 593 2 692 2 378 2 599 2 493 2 54 2 265 6 162 6 384 8 496 2 56 2 165 2 823 6 824 2 825 2 389 2 391 2 701 2 276 4 605 2 278 2 833 2 838 2 397 2 279 2 280 4 66 2 398 4 506 4 288 4 612 2 509 2 515 4 81 2 516 4 617 2 181 6 299 2 857 2 619 2 88 12 301 4 861 4 862 2 413 2 621 4 415 2 623 4 722 6 96 6 419 2 534 4 307 6 421 2 538 2 733 2 735 2 425 4 539 2 427 2 429 6 871 2 632 6 872 2 200 10 102 2 
103 2 434 12 745 6 746 4 751 2 110 8 639 2 325 2 759 2 209 2 555 6 212 2 762 2 645 2 643 2 119 2 215 2 648 4 556 2 558 2 216 2 768 4 122 2 650 2 446 12 14 2 332 2 770 6 450 2 771 12 452 2 18 2 223 6 566 2 454 2 778 2 655 2 224 6 343 6 228 2 458 2 459 2 780 24 460 2 347 2 26 2 348 2 128 2 349 2 462 2 234 4 571 2 572 2 351 2 788 2 573 2 133 2 236 6 238 4 134 6 792 2 791 2 793 2 795 2 32 8 356 2 35 2 577 2 141 6 40 6 244 6 583 2 43 2 679 2 366 2 479 2 684 2 481 6 685 6 251 2 688 4 687 2 45 2 591 2 371 12 372 12 48 46 593 2 374 6 692 2 378 2 262 6 599 2 493 2 54 2 265 6 163 2 162 6 384 12 496 2 56 4 269 6 165 2 823 6 824 2 825 2 389 2 391 2 701 2 276 4 605 2 278 4 832 2 833 2 838 2 397 2 279 2 280 4 66 2 398 4 506 4 288 4 708 2 612 2 613 2 509 2 515 4 81 2 516 4 712 6 617 2 181 6 299 4 857 2 619 2 88 10 301 4 861 4 862 2 413 2 621 4 92 2 415 2 623 4 722 6 96 6 193 2 419 2 534 4 307 8 421 2 733 2 735 2 315 2 425 4 539 2 427 2 429 12 871 2 632 6 872 2 200 8 102 2 
348 2 462 2 509 2 234 4 572 2 751 2 791 2 599 2 325 2 493 2 795 2 301 2 824 2 862 2 216 2 621 4 415 2 701 2 623 4 534 2 18 2 838 2 421 2 685 2 778 2 280 2 733 2 688 2 687 2 458 2 
751 2 112 2 639 2 325 2 644 2 648 3 216 2 122 2 332 2 448 2 335 2 18 2 778 2 458 2 780 24 781 3 460 2 128 2 348 2 462 2 234 4 572 2 351 2 788 2 573 2 133 2 791 2 795 2 32 6 577 2 141 6 583 2 246 2 366 2 685 2 481 4 687 2 688 2 591 2 48 24 692 2 378 2 599 2 264 2 493 2 162 6 384 8 494 2 496 2 56 3 825 2 701 2 605 2 278 3 838 2 279 2 280 2 66 2 67 2 398 4 506 4 509 2 515 4 516 4 616 2 619 2 301 2 88 4 862 2 413 2 621 4 415 2 623 4 419 2 534 2 307 6 421 2 733 2 538 2 735 2 425 2 539 2 427 2 872 2 200 2 
103 2 48 8 692 2 751 2 599 2 493 2 325 2 496 2 209 2 165 2 119 2 824 6 216 2 14 2 701 2 276 2 450 2 18 2 838 2 778 2 280 4 66 2 228 2 458 2 398 2 506 2 780 6 288 2 348 2 462 2 509 2 234 4 572 2 573 2 617 2 238 2 791 2 795 2 356 2 475 2 141 4 301 4 861 4 862 2 621 6 415 2 623 4 43 2 534 4 421 2 685 4 733 2 735 2 687 2 688 8 591 2 427 2 872 2 
103 2 48 8 692 2 751 2 599 2 493 2 325 2 495 2 115 2 496 2 209 2 165 2 119 2 824 6 216 2 14 2 651 2 701 2 276 2 450 2 17 4 18 2 838 2 778 2 280 4 66 2 228 2 458 2 398 2 506 2 780 6 288 2 348 2 462 2 509 2 234 4 572 2 573 2 617 2 238 2 791 2 795 2 356 2 141 4 301 4 861 4 621 6 415 2 623 6 43 2 534 4 421 2 685 6 733 2 735 2 687 2 688 8 591 2 427 2 872 2 
595 2 733 2 360 2 
595 2 733 2 360 2 
48 14 692 2 639 2 162 6 495 2 384 2 496 2 209 2 824 4 825 2 648 2 122 2 701 4 332 2 605 2 18 2 279 2 280 2 65 2 66 2 398 4 506 4 780 14 460 2 849 2 128 2 509 2 233 2 234 6 572 2 466 2 788 2 351 2 515 4 133 2 516 4 791 2 31 2 32 2 577 2 141 6 619 2 301 2 88 2 861 2 91 2 413 2 621 4 415 2 623 6 807 2 583 2 43 2 419 2 534 2 366 2 307 2 421 2 685 6 733 2 735 2 688 4 687 2 425 2 149 2 539 2 591 2 427 2 872 2 
768 2 48 4 703 2 867 2 505 2 479 2 697 2 228 2 152 2 762 2 823 2 88 2 780 2 872 2 658 2 200 2 401 2 
639 2 209 2 648 4 122 2 332 2 18 2 453 2 780 14 460 2 128 2 234 6 233 2 351 2 788 2 466 2 572 2 133 2 791 2 31 2 32 2 577 2 141 6 583 2 807 2 43 2 366 2 685 6 687 2 688 4 149 2 591 2 48 14 692 2 162 6 384 2 495 2 496 2 825 2 824 4 701 4 605 2 279 2 65 4 280 2 66 2 398 4 506 4 849 2 509 2 515 4 516 4 619 2 88 2 301 2 861 2 529 2 413 2 91 2 621 4 415 2 623 6 419 2 534 2 307 2 421 2 733 2 735 2 425 2 539 2 427 2 872 2 
48 14 692 2 639 2 162 6 495 2 384 2 496 2 209 2 824 4 825 2 648 2 122 2 701 4 332 2 605 2 18 2 279 2 280 2 65 2 66 2 398 4 506 4 780 14 460 2 849 2 128 2 509 2 233 2 234 6 572 2 466 2 788 2 351 2 515 4 133 2 516 4 791 2 31 2 32 2 577 2 141 6 619 2 301 2 88 2 861 2 91 2 413 2 621 4 415 2 623 6 807 2 583 2 43 2 419 2 534 2 366 2 307 2 421 2 685 6 733 2 735 2 688 4 687 2 425 2 149 2 539 2 591 2 427 2 872 2 
746 2 113 2 114 2 116 2 647 4 648 2 556 2 332 2 454 2 224 2 457 2 780 18 460 2 25 2 347 2 128 2 785 6 232 2 351 2 788 2 663 2 792 2 32 6 137 2 796 2 578 2 139 2 141 6 800 2 673 2 809 2 584 2 586 2 587 2 481 4 251 2 250 2 591 2 690 2 255 2 48 24 593 2 486 2 488 2 50 2 156 2 692 2 157 2 378 2 695 2 159 2 263 2 162 2 384 8 496 2 56 2 825 2 389 2 60 2 605 2 278 2 607 1 837 2 839 2 279 2 66 2 845 2 398 4 506 4 287 6 77 2 515 2 516 2 618 2 524 2 718 2 299 2 86 2 87 1 619 2 620 2 88 2 412 2 530 2 419 2 307 6 868 2 735 2 425 2 317 2 539 2 427 2 318 2 872 2 
48 2 431 2 433 1 746 6 378 2 30 2 384 2 32 2 56 3 860 2 303 3 120 2 648 3 168 2 676 2 866 2 278 3 307 2 730 2 420 2 481 2 197 2 424 4 844 2 780 2 
431 2 48 2 168 2 676 2 866 2 746 6 278 2 378 2 730 2 307 2 420 2 30 2 197 2 481 2 32 2 384 2 56 2 424 4 844 2 780 2 860 2 648 2 120 2 303 2 
431 2 48 2 168 2 676 2 866 2 746 6 278 2 378 2 730 2 307 2 420 2 30 2 197 2 481 2 32 2 384 2 56 2 424 4 844 2 780 2 860 2 648 2 120 2 303 2 
432 2 48 10 484 2 201 2 464 4 787 2 636 2 662 2 378 2 714 2 208 4 384 2 34 2 497 6 387 2 37 2 443 2 699 2 860 2 648 3 58 6 392 2 449 3 830 2 727 4 478 2 278 3 535 2 627 4 564 3 396 3 338 4 628 4 367 2 567 4 422 2 150 2 22 2 780 4 73 2 
484 2 48 10 432 2 201 2 203 2 636 2 378 2 208 4 384 2 497 6 387 2 699 2 443 2 648 2 58 4 449 2 392 2 830 2 278 2 396 2 564 2 338 4 567 4 780 4 22 2 73 2 464 4 787 2 662 2 714 2 34 2 37 2 241 2 860 2 727 4 478 2 627 4 535 2 683 2 367 2 628 4 422 2 150 2 
484 2 48 10 432 2 201 2 203 2 636 2 378 2 208 4 384 2 497 6 387 2 699 2 443 2 648 2 58 4 449 2 392 2 830 2 278 2 396 2 564 2 338 4 567 4 780 4 22 2 73 2 464 4 787 2 662 2 714 2 34 2 37 2 241 2 860 2 727 4 478 2 627 4 535 2 683 2 367 2 628 4 422 2 150 2 
484 2 48 10 432 2 201 2 203 2 636 2 378 2 208 4 384 2 497 6 387 2 699 2 443 2 648 2 58 4 449 2 392 2 830 2 278 2 396 2 564 2 338 4 567 4 780 4 22 2 73 2 464 4 787 2 662 2 714 2 34 2 37 2 241 2 860 2 727 4 478 2 627 4 535 2 683 2 367 2 628 4 422 2 150 2 
484 2 48 10 432 2 201 2 203 4 636 2 378 2 208 4 384 2 497 6 387 2 699 2 443 2 648 2 58 4 449 2 392 2 830 2 278 2 396 2 564 2 338 4 567 4 780 4 22 2 73 2 464 4 787 2 662 2 714 2 34 2 37 2 241 4 860 2 727 4 478 2 627 4 535 2 683 4 367 2 628 4 422 2 150 2 
339 2 368 2 761 2 405 2 74 2 570 2 
350 2 444 2 232 2 272 2 74 2 671 2 483 2 
691 2 1 2 104 2 48 10 290 1 852 1 468 1 467 1 108 1 266 2 187 2 859 2 501 2 214 2 9 2 243 2 829 2 559 2 806 2 725 2 533 2 840 2 126 2 591 2 780 8 371 2 
484 4 201 2 635 2 203 3 636 4 3 2 436 2 752 2 34 4 241 3 826 4 58 10 830 4 727 4 773 2 172 2 627 8 683 3 367 4 150 4 73 4 430 2 
48 1 78 2 177 2 464 2 469 4 29 2 125 2 567 2 208 2 327 5 780 1 813 1 
125 2 208 2 567 2 327 2 78 2 464 2 177 2 469 4 29 2 
125 2 208 2 567 2 327 2 78 2 464 2 177 2 469 4 29 2 
403 2 93 2 78 2 177 2 464 2 469 2 29 2 125 2 567 2 208 2 342 2 327 2 46 2 
741 4 742 4 202 1 543 8 107 4 749 4 747 4 547 4 205 2 111 32 754 8 437 4 755 4 756 4 324 4 8 2 439 2 642 16 440 4 213 4 764 2 766 10 332 2 333 10 560 2 561 6 451 4 774 4 654 4 777 4 656 4 345 10 780 70 27 4 235 24 133 26 239 2 472 4 136 8 576 4 474 4 240 2 799 4 802 16 669 24 581 10 580 10 143 2 245 4 247 4 366 28 44 11 588 16 148 4 811 28 812 4 153 8 48 78 155 4 258 4 596 4 490 4 377 2 158 2 381 8 492 24 53 2 696 6 162 102 383 4 55 4 386 4 498 2 57 4 500 4 502 2 169 8 605 6 606 16 704 8 281 10 609 4 611 2 175 6 512 4 510 4 79 4 853 4 515 36 516 44 855 2 179 2 713 4 297 12 184 8 619 6 720 4 531 6 724 10 726 4 728 4 729 2 423 4 314 2 99 2 737 2 873 2 540 2 874 2 
48 28 741 4 258 2 596 4 749 2 158 2 492 8 381 6 53 2 437 2 696 2 162 40 386 2 498 2 500 4 213 2 502 2 332 2 561 2 605 2 219 2 606 14 565 10 344 2 281 6 657 2 345 2 780 26 175 4 27 2 79 4 515 14 294 2 80 2 664 2 133 12 516 14 179 2 667 2 239 2 474 2 799 4 619 2 580 6 143 2 723 2 724 6 726 4 247 4 366 12 44 2 310 2 686 2 314 2 811 6 870 2 689 2 737 2 874 2 
741 6 742 6 543 6 107 6 547 4 747 4 749 2 205 2 754 12 437 6 755 6 324 6 756 4 8 2 440 6 213 6 332 4 561 6 774 6 565 4 654 4 777 4 656 6 344 3 657 4 345 12 780 78 27 2 235 12 664 3 133 22 471 6 239 2 474 6 240 2 799 6 802 6 669 12 670 6 580 12 678 2 245 4 247 2 366 22 44 12 148 6 811 22 686 2 812 6 48 90 155 6 375 2 258 6 596 6 490 6 818 6 377 2 158 2 492 42 381 5 53 2 696 12 383 6 162 90 55 4 385 2 386 2 498 2 500 6 57 4 502 2 169 6 605 10 606 4 281 12 609 6 175 8 79 6 515 36 516 42 82 2 713 6 297 12 619 10 720 4 724 12 726 6 728 4 729 2 310 2 314 2 737 2 874 2 
48 46 741 2 485 2 258 2 596 2 158 2 261 2 492 6 437 2 53 2 696 2 7 4 162 48 328 2 498 2 500 2 441 2 213 2 764 2 700 6 827 2 766 2 10 2 502 2 828 2 121 2 124 2 217 2 13 2 274 2 332 2 333 2 561 2 334 2 605 2 219 2 772 2 171 2 606 36 775 2 64 2 281 4 345 2 568 4 780 44 24 2 75 2 402 2 175 6 27 2 28 2 79 2 515 20 709 2 133 6 516 20 855 2 179 2 667 2 522 2 474 2 185 2 186 2 798 2 799 2 619 2 89 4 527 2 581 2 143 2 242 2 580 4 864 2 582 4 865 2 723 2 724 4 726 2 365 2 680 2 366 6 44 2 480 2 309 2 536 2 314 2 151 2 47 2 737 2 319 2 874 2 
834 2 

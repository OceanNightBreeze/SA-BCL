#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.NullPointerException 471 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (90,475) (90,475) (289,365,421,440,556) (289,365,421,440,556) (289,365,421,440,556) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V ERROR java.lang.NullPointerException 471 599 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (366,616) (366,616) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.Error 278 205 41 665 465 628 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR java.lang.NullPointerException 255 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR java.lang.NullPointerException 255 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR java.lang.NullPointerException 255 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 255 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 255 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 416 407 95 
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 567 188 652 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 567 188 652 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 567 188 652 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 567 188 652 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:eltsGT([II)Z
daikon.Quant:lexEqual([I[I)Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:union([I[I)[I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptName:isCombinedExitPoint()Z
daikon.Quant:subsetOf([S[S)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:lexGT([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.Invariant:getConfidence()D
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2268 | = null
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[D)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:negate(I)I
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:max([I)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Debug:logDetail()Z
daikon.Quant:gte(II)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:setDiff([I[I)[I
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isIntegral()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfo:relate_var()V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:jj_3_16()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:BeginToken()C
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.MathMDE:modulus([I)[I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I | ASSIGN | 67827 | = null
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I | ASSIGN | 184981 | = null
daikon.inv.Invariant:logDetail()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.Invariant:justified()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Intern:numIntArrays()I
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:size()I
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:memberOf(J[J)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:gt(II)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V | ASSIGN | 5329 | = null
jtb.JavaCharStream:FillBuff()V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:ne(II)Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 21839 | = null
jtb.JavaCharStream:readChar()C
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:eq(FF)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaCharStream:backup(I)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLT([I)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lte(II)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z | ASSIGN | 21165 | = null
utilMDE.MathMDE:sign(I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:setEqual([I[I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:eltsGteIndex([I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:lexGTE([I[I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Intern:intern([D)[D
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Ppt:Ppt()V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Debug:logOn()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:eltwiseGT([I)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.ProglangType:baseIsIntegral()Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:slice([III)[I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:eq(DD)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:isReverse([I[I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 183341 | = null
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginLine()I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsNotEqual([II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.PptName:isEnterPoint()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.ProglangType:baseIsScalar()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaCharStream:getEndLine()I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1211 | = null
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I | CONSTANT | 14318 | 112 -> 0
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:memberOf(I[I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName:hashCode()I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DDD)D
daikon.ProglangType:format()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.Invariant:logOn()Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:noDuplicates([I)Z | ASSIGN | 57082 | = null
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.Assert:assertTrue(Z)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.Intern:internSubsequence([III)[I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsGTE([II)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.ProglangType:dimensions()I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.ProglangType:isScalar()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:subsetOf([J[J)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.PptSlice2:arity()I
daikon.PptSlice0:arity()I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLTE([II)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfo:new_ppt()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.MathMDE:pow(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:eltwiseLTE([I)Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:eltsEqual([II)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:jj_ntk()I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.RootNode:RootNode()V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quant:noDups([I)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.ProglangType:isArray()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:memberOf(F[F)Z
daikon.PptSlice1:arity()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual; | CONDITION | 1462 | if (x) -> if (!x)
jtb.JavaCharStream:getEndColumn()I
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:eq(II)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Intern:intern([J)[J
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:subsetOf([B[I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
543 2 475 2 306 2 327 2 209 4 498 2 90 2 682 2 550 2 
177 6 677 2 450 6 22 2 506 6 244 2 623 2 169 2 528 2 320 2 424 2 
334 6 324 2 533 4 47 2 49 6 106 2 183 6 442 6 545 4 475 2 223 2 90 2 574 2 
625 2 58 16 59 4 2 8 123 10 482 2 386 4 670 6 107 16 630 2 8 8 395 12 90 6 204 8 155 6 620 4 207 10 363 29 138 10 429 4 494 2 285 2 495 10 475 6 32 16 18 2 369 26 604 2 411 8 383 10 
65 6 250 4 
487 2 
269 2 650 2 555 2 481 2 428 2 470 2 682 2 539 2 390 2 471 2 40 2 542 2 286 2 140 2 279 2 171 2 150 2 380 4 490 2 602 2 532 2 604 2 
144 2 58 32 60 4 3 6 123 6 482 2 241 6 313 4 391 4 670 4 107 32 8 6 420 6 130 6 374 6 672 8 395 22 613 2 90 4 583 4 674 6 323 2 155 4 399 4 207 16 620 2 363 54 138 16 591 2 495 16 475 4 273 2 215 4 32 32 646 4 603 2 369 48 383 16 411 18 
653 2 470 2 127 2 
585 2 71 2 590 2 564 2 507 10 196 2 330 2 631 2 368 2 406 2 434 2 530 2 615 22 617 2 
58 2 123 4 526 2 107 2 558 2 395 2 281 2 155 2 207 2 620 2 29 2 363 6 137 2 302 2 138 2 516 2 328 2 495 2 142 2 32 2 369 4 383 2 411 2 
58 8 399 4 3 6 207 4 363 16 429 2 138 4 439 2 129 2 107 8 495 4 395 4 32 8 646 4 674 6 369 12 383 4 
264 2 294 2 240 62 4 4 481 2 312 2 127 2 265 2 39 4 7 14 149 2 509 2 653 6 488 2 355 2 632 2 490 4 376 4 113 4 445 10 201 10 358 4 398 2 536 2 638 2 515 4 97 2 254 2 470 8 256 2 305 4 595 4 234 4 497 4 55 4 459 2 380 4 35 2 551 2 309 2 
184 2 68 2 86 2 288 2 
0 1 412 5 502 2 336 1 296 2 126 5 220 2 371 1 221 1 464 2 421 2 10 2 90 24 655 1 268 2 469 2 303 1 378 1 304 2 518 2 347 2 473 2 432 4 519 2 475 22 101 2 308 1 57 2 435 4 626 1 276 2 524 2 21 1 484 1 440 2 243 2 671 1 245 1 109 2 529 2 317 2 489 4 319 6 152 2 675 6 70 2 72 1 639 2 283 4 678 2 589 2 403 2 75 1 641 1 211 2 77 1 594 3 80 2 596 2 597 4 289 2 645 2 550 2 410 5 333 2 501 2 
405 2 90 2 
457 2 231 2 90 4 
499 2 
161 2 120 4 553 30 417 2 557 2 466 2 373 6 419 4 654 6 611 2 11 2 43 4 226 6 559 2 91 2 227 6 657 6 174 6 301 2 662 6 134 2 93 6 345 2 427 2 94 2 13 2 430 6 566 2 233 2 569 2 185 2 433 2 307 6 348 2 572 6 381 2 576 2 522 6 627 6 62 2 192 2 578 2 668 2 146 2 242 4 64 2 444 2 633 2 492 2 153 30 447 2 69 2 584 6 28 2 206 30 400 6 364 2 257 6 258 8 212 8 643 6 408 6 83 2 84 2 34 2 
178 1 131 2 311 2 640 2 
624 2 640 2 
42 2 117 2 59 2 425 2 640 2 581 2 470 2 
425 2 640 2 262 2 
397 2 425 2 640 2 
202 2 131 2 362 2 
425 2 640 2 
202 2 546 2 
640 2 375 2 
202 2 474 2 131 2 
46 2 131 2 684 2 
131 2 200 2 164 2 
131 2 249 2 148 2 
455 2 131 2 401 2 
202 2 36 2 
640 2 189 2 
46 2 237 2 
164 2 541 2 
343 2 249 2 
229 2 455 2 
202 2 143 2 
455 2 267 2 
586 2 249 2 
164 2 96 2 
46 2 618 2 
202 2 474 2 131 2 6 2 
202 2 203 2 474 2 131 2 6 2 
202 2 448 2 131 2 
202 2 131 2 461 2 
121 2 
1 2 162 2 438 2 16 2 463 2 197 2 642 2 76 2 609 2 685 2 510 2 357 4 511 4 111 2 275 2 33 2 615 6 216 2 
131 2 230 2 
117 2 377 2 351 2 470 2 
42 2 117 2 377 2 9 2 351 2 470 2 
117 2 59 2 425 2 640 2 470 2 51 2 
599 2 471 2 
117 2 59 2 470 2 352 2 
5 2 249 2 
455 2 496 2 
166 2 46 2 
164 2 521 2 
455 2 164 2 680 2 
455 2 164 2 565 2 
455 2 164 2 19 2 
455 2 164 2 270 2 
470 2 366 6 117 2 44 2 616 2 605 2 
202 2 173 2 
243 2 
502 6 412 4 337 2 266 2 508 2 610 2 10 2 614 2 90 26 179 2 181 4 98 2 347 6 519 2 101 2 435 4 276 2 523 2 524 2 104 2 23 2 199 8 109 2 354 2 635 4 283 4 639 2 451 4 116 2 210 2 211 2 367 2 548 2 644 2 645 2 550 2 217 2 296 2 126 2 220 2 371 2 224 2 469 2 135 2 304 2 472 2 473 2 475 26 238 2 57 6 382 2 315 2 317 2 246 2 489 4 394 2 319 6 248 2 321 2 675 4 70 2 73 2 589 2 679 2 403 2 77 2 259 2 79 2 80 2 597 4 601 2 410 2 501 2 333 2 
502 6 412 4 337 2 266 2 508 2 610 2 10 2 614 2 90 26 179 2 181 4 347 6 519 2 101 2 435 4 276 2 523 2 524 2 104 2 629 2 23 2 199 8 109 2 354 2 635 4 283 4 639 2 637 2 451 4 116 2 210 2 211 2 367 2 548 2 644 2 645 2 550 2 295 2 296 2 126 2 220 2 371 2 224 2 469 2 135 2 304 2 472 2 473 2 475 26 238 2 57 6 382 2 389 2 315 2 317 2 246 2 489 4 394 2 319 6 248 2 321 2 675 5 70 2 73 2 678 1 589 2 679 2 403 2 77 2 259 2 79 2 80 2 596 1 597 4 410 2 501 2 333 2 
512 2 
280 2 468 2 
218 2 648 2 504 8 338 2 505 4 506 6 168 2 169 4 170 2 341 2 90 12 424 4 228 2 562 2 133 4 469 2 344 2 177 6 271 2 180 2 15 2 304 2 379 2 431 2 473 2 52 4 519 2 475 6 191 4 103 2 145 2 483 2 666 2 387 2 22 2 580 10 393 2 528 2 110 4 356 2 319 4 634 2 636 2 587 4 208 2 283 2 252 2 450 6 589 2 74 2 402 2 454 2 31 2 213 2 80 2 597 2 290 2 409 8 501 2 263 2 
218 2 648 2 504 8 338 2 505 4 506 6 168 2 169 4 170 2 341 2 90 12 228 2 424 4 658 2 562 2 133 4 469 2 344 2 177 8 271 2 180 2 304 2 346 2 379 2 431 2 473 2 52 4 475 6 519 2 191 4 103 2 145 2 483 2 666 2 22 2 580 10 393 2 528 2 110 4 356 2 319 4 634 2 677 2 636 2 283 2 587 4 208 2 252 2 450 8 589 2 74 2 402 2 454 2 31 2 213 2 80 2 597 2 81 4 290 2 409 8 501 2 263 2 
648 2 177 2 271 2 587 4 180 2 252 2 74 2 505 2 454 2 379 2 431 2 506 2 169 2 52 4 170 2 356 2 290 2 424 2 
218 2 648 2 504 4 338 2 505 4 506 4 168 2 169 4 170 2 341 2 90 12 424 4 228 2 562 2 133 4 469 2 344 2 177 6 271 2 180 2 15 2 304 2 379 2 431 2 473 2 52 4 519 2 475 6 191 4 103 2 145 2 483 2 666 2 387 2 22 2 580 6 393 2 110 4 356 2 319 4 634 2 677 2 636 2 587 4 208 2 283 2 252 2 450 6 589 2 74 2 402 2 454 2 31 2 213 2 80 2 597 2 290 2 409 4 501 2 263 2 
218 2 648 2 504 4 338 2 505 4 506 6 168 2 169 4 170 2 341 2 90 12 424 4 228 2 562 2 133 4 469 2 344 2 177 4 271 2 180 2 15 2 304 2 379 2 431 2 473 2 52 4 519 2 475 6 191 4 103 2 145 2 483 2 666 2 387 2 22 2 580 6 393 2 244 2 110 4 356 2 319 4 634 2 636 2 587 4 208 2 283 2 252 2 450 6 589 2 74 2 402 2 454 2 31 2 213 2 80 2 597 2 290 2 409 4 501 2 263 2 
218 2 648 2 504 8 338 2 505 4 506 6 168 2 169 4 170 2 341 2 90 12 424 4 228 2 562 2 133 4 469 2 344 2 177 6 271 2 180 2 15 2 304 2 379 2 431 2 473 2 52 4 519 2 475 6 191 4 103 2 145 2 483 2 666 2 387 2 22 2 580 6 393 2 528 2 110 4 356 2 319 4 634 2 636 2 587 4 208 2 283 2 252 2 450 6 589 2 74 2 402 2 454 2 31 2 213 2 80 2 597 2 290 2 409 4 501 2 263 2 
218 2 648 2 504 8 338 2 505 4 506 8 168 2 169 4 170 2 341 2 90 12 424 4 228 2 562 2 133 4 469 2 344 2 177 6 271 2 180 2 15 2 304 2 379 2 431 2 473 2 52 4 519 2 475 6 191 4 103 2 145 2 483 2 666 2 387 2 22 2 580 10 393 2 244 2 528 2 110 4 356 2 319 4 634 2 636 2 587 4 208 2 283 2 252 2 450 8 589 2 74 2 402 2 454 2 31 2 213 2 80 2 597 2 290 2 409 8 501 2 263 2 
218 2 648 2 504 8 338 2 505 4 506 6 168 2 169 4 170 2 341 2 90 12 424 4 228 2 562 2 133 4 469 2 344 2 177 6 271 2 180 2 15 2 304 2 379 2 431 2 473 2 52 4 519 2 475 6 191 4 103 2 145 2 483 2 666 2 387 2 22 2 580 10 393 2 528 2 110 4 356 2 319 4 634 2 636 2 587 4 208 2 283 2 252 2 450 6 589 2 74 2 402 2 454 2 31 2 213 2 80 2 597 2 290 2 409 8 501 2 263 2 
502 6 335 2 337 2 504 2 505 4 338 2 506 8 168 2 169 4 170 2 508 2 10 2 341 2 12 2 344 2 177 4 176 6 513 2 514 2 180 2 14 6 517 2 347 8 519 2 186 1 191 4 349 6 350 2 524 2 22 4 23 2 195 1 527 1 199 4 356 2 25 6 359 6 208 2 31 2 210 2 211 2 213 2 547 2 550 2 218 4 220 2 38 2 224 2 225 2 45 2 228 2 562 2 561 2 231 6 379 2 568 2 52 4 570 2 236 2 57 6 384 2 577 1 387 2 580 2 393 2 244 4 66 2 70 2 587 4 589 2 252 2 74 2 402 2 403 2 405 6 79 2 80 2 597 4 596 2 260 2 600 4 261 6 410 2 263 2 412 2 413 2 87 2 418 6 608 1 610 4 423 2 614 2 90 46 424 4 271 2 431 2 101 2 435 4 103 2 276 2 109 2 110 6 443 2 634 4 449 2 282 6 635 4 636 2 639 2 283 4 450 12 115 6 454 2 287 1 119 2 290 2 645 2 648 2 649 8 122 2 124 6 296 2 126 2 128 4 462 10 661 2 660 1 659 1 469 2 133 8 304 2 139 7 473 2 475 24 141 2 664 2 145 2 483 2 666 2 147 2 314 7 315 2 317 2 489 4 318 6 319 6 673 2 493 1 675 6 325 2 156 2 158 2 678 2 679 2 681 6 683 6 499 6 501 2 333 12 
413 2 412 2 502 6 335 2 337 2 87 2 504 6 338 2 505 4 506 8 418 6 168 2 169 4 610 4 508 4 170 2 423 2 341 2 10 2 614 2 90 48 424 4 12 2 176 6 177 8 344 2 513 2 514 2 271 2 180 2 14 6 181 2 517 2 431 2 347 8 519 2 101 2 191 4 435 4 350 2 349 6 103 2 276 2 524 2 22 4 23 4 199 8 109 2 528 4 110 6 356 2 443 2 25 6 359 6 634 4 449 2 282 6 636 2 635 4 208 2 283 4 639 2 450 12 115 6 454 2 211 2 210 4 31 2 213 2 547 2 119 2 645 2 290 2 550 2 218 4 122 2 649 8 648 2 124 6 296 2 126 2 220 2 128 4 38 2 462 10 224 2 225 2 45 2 228 2 661 2 561 2 133 8 562 2 469 2 231 6 304 2 379 2 568 2 473 2 52 4 570 2 475 26 571 2 236 2 141 2 57 6 664 2 384 2 145 2 483 2 666 2 387 2 579 2 580 2 147 2 393 2 315 2 66 2 317 2 318 6 489 4 319 6 673 2 675 6 325 2 70 2 156 2 158 2 587 4 678 2 679 2 252 2 589 2 402 2 74 2 681 6 683 6 403 2 405 6 79 2 80 2 260 2 596 2 597 4 261 6 600 4 499 6 410 2 333 12 263 2 501 2 
413 2 412 2 502 6 335 2 337 2 87 2 504 6 338 2 505 4 506 8 418 6 168 2 169 4 610 4 508 4 170 2 423 2 341 2 10 2 614 2 90 48 424 4 12 2 176 6 177 8 344 2 513 2 514 2 271 2 180 2 14 6 181 2 517 2 431 2 347 8 519 2 101 2 191 4 435 4 350 2 349 6 103 2 276 2 524 2 22 4 23 4 199 8 109 2 528 4 110 6 356 2 443 2 25 6 359 6 634 4 449 2 282 6 636 2 635 4 639 2 208 2 283 4 450 12 115 6 454 2 210 4 31 2 211 2 213 2 547 2 119 2 645 2 290 2 550 2 218 4 122 2 649 8 648 2 124 6 296 2 126 2 220 2 128 4 38 2 462 10 224 2 225 2 45 2 228 2 661 2 561 2 133 8 562 2 469 2 231 6 304 2 379 2 568 2 473 2 52 4 570 2 475 26 571 2 236 2 141 2 57 6 664 2 384 2 145 2 483 2 666 2 387 2 579 2 580 6 147 2 393 2 315 2 66 2 317 2 318 6 489 4 319 6 673 2 675 6 325 2 70 2 156 2 158 2 587 4 678 2 679 2 252 2 589 2 402 2 74 2 681 6 683 6 403 2 405 6 79 2 80 2 260 2 596 2 597 4 261 6 600 4 499 6 409 4 410 2 333 12 263 2 501 2 
502 8 335 2 337 2 504 6 505 4 338 2 506 10 168 2 167 6 169 4 170 2 508 4 341 2 10 2 12 2 344 2 177 10 176 12 513 2 514 2 180 2 14 6 181 2 517 2 347 12 519 2 191 4 349 6 350 2 524 2 22 4 23 4 198 6 199 10 528 4 356 2 25 6 359 6 208 2 30 2 211 2 31 2 210 4 213 2 214 6 547 2 550 2 218 4 220 2 38 2 224 2 225 2 45 2 228 2 562 2 561 2 231 12 379 2 568 2 52 4 570 2 571 2 236 2 57 8 384 2 387 2 579 2 580 6 393 2 244 2 66 2 582 2 70 2 587 4 589 2 252 2 74 2 402 2 403 2 404 6 405 12 79 2 80 2 597 4 596 2 260 2 598 6 600 4 261 6 409 4 410 4 263 2 412 4 413 2 87 2 418 6 610 4 423 2 614 4 90 52 424 4 271 2 99 2 431 2 100 6 274 6 101 2 435 4 103 2 276 2 437 2 105 2 109 2 110 6 443 2 112 2 634 4 449 2 282 6 635 6 636 2 283 4 639 2 450 16 115 12 454 2 119 2 290 2 645 2 648 2 649 8 122 2 124 6 296 2 126 4 297 6 128 4 462 8 469 2 133 8 304 2 473 2 475 24 141 2 664 2 145 2 483 2 666 2 147 2 315 2 317 2 489 4 318 6 319 6 673 2 491 2 675 6 325 2 156 2 157 6 158 2 677 2 678 2 679 4 681 6 683 12 329 2 499 12 501 2 333 10 
191 2 103 2 145 2 483 2 387 2 22 2 580 4 504 6 506 6 168 2 169 4 528 2 170 2 110 2 90 4 228 2 424 4 133 2 562 2 344 2 177 6 208 2 271 2 587 2 450 4 252 2 402 2 74 2 431 2 379 2 31 2 52 2 290 2 409 4 263 2 
502 6 412 3 337 2 504 6 506 6 168 2 169 4 170 2 610 2 10 2 90 28 92 2 424 4 177 6 344 2 271 2 431 2 347 8 519 2 101 2 190 2 191 2 435 4 103 2 276 2 524 2 22 2 528 2 109 2 110 2 360 2 635 4 208 2 283 4 639 2 450 4 365 2 211 2 31 2 213 2 645 2 647 2 290 2 550 2 370 3 296 2 37 2 126 3 220 2 556 2 462 2 224 2 228 2 661 2 133 2 562 2 469 2 304 2 379 2 473 2 52 2 475 24 57 6 145 2 483 2 387 2 243 2 580 2 315 2 317 2 489 4 319 6 675 6 676 2 70 2 587 2 678 2 252 2 589 2 74 2 402 2 403 2 80 2 597 4 596 2 410 3 263 2 501 2 333 4 
103 2 426 2 208 2 
103 2 426 2 208 2 
502 2 412 2 163 2 337 2 504 6 505 4 165 2 506 12 169 4 508 4 610 6 170 2 10 2 90 24 424 4 177 12 426 2 180 2 431 4 347 2 519 2 17 2 101 2 435 4 20 2 191 2 103 4 436 2 276 2 524 2 277 2 104 4 22 4 23 4 441 2 199 4 109 2 528 4 110 4 356 2 25 2 26 2 634 2 636 2 208 6 283 4 639 2 450 16 453 2 210 4 211 2 645 2 550 2 218 4 296 2 125 2 220 2 128 2 462 2 222 2 224 2 469 2 562 2 133 4 48 2 304 2 473 2 52 2 475 16 476 4 236 2 478 2 573 4 57 2 666 2 669 2 580 6 147 2 393 2 244 4 67 2 317 2 489 4 319 6 673 2 675 6 70 2 677 4 587 2 678 2 589 2 588 2 252 2 253 2 403 2 79 4 80 2 596 2 597 4 600 2 409 4 501 2 333 4 263 2 
350 2 436 2 310 2 648 2 277 2 136 2 219 2 128 2 462 2 568 2 519 2 475 2 67 2 25 2 90 4 468 2 333 2 
502 2 412 4 503 2 337 2 504 6 505 4 506 12 169 4 508 4 610 6 170 2 341 2 10 2 90 24 424 4 177 12 426 2 180 2 431 4 347 2 519 2 17 2 101 2 191 2 435 4 20 2 103 4 436 2 276 2 524 2 277 2 104 4 22 4 23 4 194 2 199 4 109 2 528 4 110 4 356 2 25 2 26 2 634 4 636 2 208 6 283 4 639 2 450 16 210 4 211 2 549 2 645 2 550 2 218 4 296 2 125 2 220 2 222 2 224 2 133 4 469 2 562 2 48 4 563 2 304 2 473 2 52 2 475 16 476 4 236 2 478 2 573 4 57 2 666 2 669 2 580 6 147 2 393 2 244 4 67 2 317 2 489 4 319 6 673 2 396 2 675 6 70 2 677 4 587 2 678 2 589 2 588 2 252 2 253 2 403 2 79 4 80 2 596 2 597 4 600 2 409 4 501 2 333 2 263 2 
502 2 412 2 337 2 504 6 505 4 506 12 169 4 508 4 610 6 170 2 341 2 10 2 90 24 424 4 177 12 426 2 619 2 180 2 621 2 431 4 347 2 519 2 17 2 101 2 435 4 20 2 191 2 103 4 436 2 276 2 524 2 277 2 104 4 22 4 193 2 23 4 199 4 109 2 528 4 110 4 356 2 25 2 26 2 634 4 636 2 208 6 283 4 639 2 450 16 210 4 211 2 645 2 550 2 291 2 218 4 296 2 125 2 220 2 128 2 462 2 222 2 224 2 469 2 562 2 133 4 48 2 304 2 473 2 52 2 475 16 476 4 236 2 478 2 573 4 57 2 666 2 669 2 580 6 147 2 393 2 244 4 67 2 317 2 489 4 319 6 673 2 675 6 70 2 677 4 587 2 678 2 589 2 588 2 252 2 253 2 160 2 403 2 79 4 80 2 596 2 597 4 600 2 409 4 501 2 333 4 263 2 
552 2 628 2 326 2 205 2 665 2 278 2 251 2 182 2 41 2 24 2 353 2 465 2 458 2 90 4 154 2 
412 3 502 2 635 2 126 3 272 4 372 2 592 1 89 2 347 2 622 2 315 2 475 2 422 2 53 2 663 2 520 2 477 2 56 2 614 6 151 2 90 2 57 2 446 2 656 3 410 3 
412 2 502 2 635 2 126 2 272 4 372 2 89 2 347 2 622 2 315 2 475 2 422 2 53 2 663 2 520 2 477 2 56 2 614 6 151 2 90 2 57 2 446 2 656 2 410 2 
412 2 502 2 635 2 126 2 272 4 372 2 89 2 347 2 622 2 315 2 475 2 422 2 53 2 663 2 520 2 477 2 56 2 614 6 151 2 90 2 57 2 446 2 656 2 410 2 
412 3 58 2 293 2 606 2 63 2 414 4 278 4 667 2 126 3 88 3 670 2 107 2 392 2 486 2 299 4 8 4 315 2 612 3 132 2 90 10 322 6 534 2 207 2 363 6 284 2 50 2 159 2 138 2 255 2 544 4 495 2 593 3 347 2 475 4 456 2 477 2 32 2 500 4 369 4 383 2 
412 2 58 2 293 2 606 2 63 2 414 4 278 4 482 1 667 2 126 2 88 2 670 2 107 2 392 2 486 2 299 4 8 4 315 2 612 2 132 2 395 2 90 10 322 6 534 2 207 2 363 5 284 2 50 2 159 2 138 2 255 2 544 4 495 2 593 2 347 2 475 4 456 2 477 2 32 2 500 4 369 4 383 2 411 1 
412 2 58 2 293 2 606 2 63 2 414 4 278 4 482 1 667 2 126 2 88 2 670 2 107 2 392 2 486 2 299 4 8 4 315 2 612 2 132 2 395 1 90 10 322 6 534 2 207 2 363 4 284 2 50 2 159 2 138 2 255 2 544 4 495 2 593 2 347 2 475 4 456 2 477 2 32 2 500 4 369 4 383 2 411 1 
412 2 58 2 293 2 606 2 63 2 414 4 278 4 482 2 667 2 126 2 88 2 670 2 107 2 392 2 486 2 299 4 8 4 315 2 612 2 132 2 395 2 90 10 322 6 534 2 207 2 363 4 284 2 50 2 159 2 138 2 255 2 544 4 495 2 593 2 347 2 475 4 456 2 477 2 32 2 500 4 369 4 383 2 411 2 
412 2 58 2 293 2 606 2 63 2 414 4 278 4 482 4 667 2 126 2 88 2 670 2 107 2 392 2 486 2 299 4 8 4 315 2 612 2 132 2 395 4 90 10 322 6 534 2 207 2 363 4 284 2 50 2 159 2 138 2 255 2 544 4 495 2 593 2 347 2 475 4 456 2 477 2 32 2 500 4 369 4 383 2 411 4 
460 2 537 2 607 2 172 2 247 2 540 2 
175 2 85 2 78 2 361 2 554 2 607 2 116 2 
473 2 331 2 475 2 407 2 95 2 90 2 538 2 416 2 575 2 
58 6 61 2 482 4 651 2 388 2 241 4 107 6 670 2 8 4 316 2 672 2 395 4 90 2 583 2 674 4 342 2 114 2 399 2 207 6 363 15 138 6 232 2 452 2 495 6 475 2 187 2 32 6 102 2 369 12 479 2 383 6 411 4 
239 3 525 2 385 2 414 2 415 2 339 2 298 2 544 2 235 2 332 2 531 2 560 2 500 2 
239 6 535 2 525 2 385 2 414 2 415 2 339 4 108 2 298 2 544 2 475 1 235 2 332 2 90 1 531 2 300 1 560 2 500 2 
239 6 535 2 525 2 385 2 414 2 415 2 108 2 339 4 298 4 544 2 235 4 332 2 531 2 560 4 500 2 
239 10 535 6 525 2 385 2 414 2 415 2 108 8 339 4 298 8 544 2 475 1 235 8 332 2 90 1 531 2 300 1 560 8 500 2 
652 2 340 2 90 6 567 2 475 6 54 1 101 2 188 2 435 2 276 2 480 1 485 2 489 2 675 4 27 2 678 2 403 2 596 2 82 1 
435 2 675 2 276 2 27 2 652 2 567 2 403 2 340 2 475 6 467 2 54 2 101 2 489 2 188 2 90 6 
435 2 675 3 276 2 27 2 678 1 652 2 567 2 403 2 118 2 340 2 475 6 54 2 596 1 101 2 489 2 188 2 90 6 
435 2 675 4 276 2 27 2 678 2 652 2 567 2 403 2 118 2 340 2 475 6 596 2 101 2 489 2 188 2 90 6 
292 2 

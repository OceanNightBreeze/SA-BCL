#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.NullPointerException 283 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 755 159 273 684 846 229 
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V ERROR java.lang.NullPointerException 283 909 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V FAILED junit.framework.AssertionFailedError (82,166) 484 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 256 229 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 256 229 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (504,550) 328 387 (504,550) 213 24 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (504,550) 328 387 (504,550) 213 24 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (504,550) 328 387 (504,550) 213 24 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (504,550) 328 387 (504,550) 213 24 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (504,550) 328 387 (504,550) 213 24 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 143 (302,599) (218,624) (218,624) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 143 (302,599) (218,624) (218,624) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 143 (302,599) (218,624) (218,624) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 143 (302,599) (218,624) (218,624) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (504,550) 328 387 (504,550) 213 24 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException 49 (218,624) (218,624) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 143 (302,599) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 143 (302,599) (302,599) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 143 (302,599) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 150 667 601 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V ERROR java.lang.NullPointerException 625 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 545 898 314 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 545 898 314 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 545 898 314 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice2:arity()I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfo:relate_var()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.ValueTuple:size()I
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:gcd(II)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional; | RETURN | 7329 | return null
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode; | ASSIGN | 26710 | = null
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.FormatTestCase:passes()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 2590 | = null
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:element_range([I)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:memberOf(F[F)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:lt(II)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.ArraysMDE:max([I)I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String; | RETURN | 53026 | return null
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 182066 | = null
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoAux:hashCode()I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.ValueTuple:isMissing(I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z | ASSIGN | 37692 | = null
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.ProglangType:isArray()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:logOn()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z | ASSIGN | 57082 | = null
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String; | CONSTANT | 16315 | 0 -> -1
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:size()I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_ntk()I
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ModBitTracker:num_samples()I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern:intern([D)[D
daikon.inv.Invariant:justified()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:eq(DD)Z
daikon.Quant:ne(II)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGTE([II)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Intern:intern([I)[I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | RETURN | 100880 | return null
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ProglangType:baseIsScalar()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaCharStream:getEndColumn()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(F[D)Z
daikon.Quant:gt(II)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.ProglangType:base()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:lexGTE([I[I)Z
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:sum([[I)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaCharStream:getEndLine()I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.RootNode:RootNode()V
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V | ASSIGN | 440 | = null
daikon.ProglangType:isPointerFileRep()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.diff.Node:Node()V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:memberOf(J[J)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.Quant:eq(II)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaCharStream:getBeginLine()I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.InvMap:InvMap()V
daikon.Quant:eq(JJ)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfo:isPointer()Z
daikon.test.InvariantFormatTester:execute()Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:sameLength([I[I)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([D[F)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo; | CONDITION | 3097 | if (x) -> if (!x)
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName:hashCode()I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Assert:assertTrue(Z)V
daikon.PptSlice0:arity()I
jtb.JavaCharStream:readChar()C
daikon.ModBitTracker:num_vars()I
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:eltsLTE([II)Z
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eq(FF)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfo:new_ppt()V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfo:esc_name()Ljava.lang.String; | STATEMENT | 100148 | stmt -> ;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:dimensions()I
daikon.PptName:isEnterPoint()Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lte(II)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ProglangType:isIntegral()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:concat([I[I)[I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Quant:memberOf(D[F)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.ProglangType:isFloat()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quantify.Constant:Constant(I)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfo:isPrestate()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Intern:intern([J)[J
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 11206 | = null
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaCharStream:backup(I)V | OPERATOR | 8274 | -= -> |=
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | RETURN | 41894 | return null
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfo:isDerived()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:negate(I)I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.ArraysMDE:sum([D)D
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:noDups([I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
628 4 89 4 468 2 632 2 575 2 862 2 138 2 372 2 636 2 906 2 781 2 381 2 311 2 729 2 670 2 511 2 79 2 268 2 352 2 549 6 795 2 598 2 165 2 
453 2 167 2 89 12 872 2 35 4 729 8 510 6 670 4 511 5 79 4 862 8 371 6 352 8 549 14 852 4 795 4 165 4 
412 4 704 4 227 2 2 2 362 4 91 2 496 4 277 2 36 14 329 6 745 4 803 2 711 2 305 2 8 2 747 2 68 10 750 2 561 4 146 2 149 2 16 2 380 62 342 10 181 2 841 4 400 2 532 4 809 4 243 4 349 4 458 2 82 8 881 2 698 2 116 2 162 4 792 2 385 2 28 4 
796 2 892 2 494 2 707 2 723 2 21 2 568 2 844 2 546 2 699 2 
630 2 743 2 430 2 469 2 285 2 48 2 519 2 92 2 349 4 82 2 880 2 197 2 832 2 765 2 919 2 750 2 162 2 719 2 564 2 888 2 309 2 283 2 
628 6 89 48 860 6 35 4 416 6 862 32 575 18 657 4 831 6 371 6 338 4 836 4 153 2 837 4 45 2 382 4 381 4 729 32 670 16 510 6 511 22 79 16 591 2 158 6 513 2 268 2 113 2 594 6 245 8 764 4 352 32 27 2 549 53 406 4 795 16 852 4 854 4 165 16 126 2 
227 2 329 2 82 2 
102 2 911 2 368 2 108 22 445 2 777 2 899 2 37 2 118 2 54 10 721 2 147 2 166 2 337 2 
743 2 668 2 764 2 117 2 204 2 535 2 657 2 369 2 410 4 
429 6 415 6 432 2 672 2 394 2 730 2 211 6 189 2 420 2 770 2 191 2 
797 2 389 6 894 4 242 2 657 2 813 2 555 2 319 4 67 2 764 2 489 6 72 6 297 6 
628 10 89 26 416 8 92 2 575 8 862 16 657 6 373 2 583 8 836 6 381 6 454 2 872 4 180 8 729 16 670 10 511 12 79 10 384 4 513 2 539 2 183 2 268 4 269 2 764 6 735 4 352 16 549 28 795 10 165 10 
422 6 835 4 
707 2 
51 2 
764 2 769 2 
764 4 449 2 643 2 
250 2 467 2 3 2 129 2 470 2 4 2 472 2 799 4 366 1 131 3 370 4 684 2 577 6 475 3 7 2 141 2 476 2 255 2 9 2 256 2 804 2 805 1 375 2 585 16 376 3 13 2 14 2 690 2 262 16 18 2 263 2 22 2 23 2 159 2 695 1 817 2 487 2 822 2 701 6 273 2 168 1 390 16 499 2 278 4 604 3 829 1 608 2 716 2 609 2 282 2 724 2 179 3 728 2 842 2 402 4 514 1 404 2 50 2 622 2 846 2 289 2 185 24 848 2 186 32 188 2 293 2 294 2 627 2 741 3 192 2 57 3 631 2 301 2 303 2 66 2 522 6 524 32 307 1 751 2 527 1 69 1 423 2 310 1 426 3 644 2 755 2 645 1 873 2 646 2 208 2 313 3 534 2 758 2 538 2 761 2 764 34 648 2 438 2 886 1 224 2 891 2 650 4 773 2 896 6 229 2 655 2 657 32 776 16 658 2 232 1 96 1 233 3 556 2 234 2 235 2 662 2 100 2 236 2 779 2 910 1 780 2 668 2 669 5 343 3 567 2 914 24 917 3 346 2 457 2 785 1 353 2 788 2 920 2 922 2 923 2 124 4 247 2 
517 2 298 2 137 4 253 2 682 2 64 2 683 2 140 2 748 6 419 2 865 6 257 2 202 2 259 4 590 2 483 6 20 2 157 6 759 2 316 2 25 2 593 6 542 6 83 4 763 2 595 2 883 2 321 6 221 2 889 30 87 30 34 2 392 2 444 2 395 4 331 6 659 30 714 2 174 6 557 6 177 2 611 4 237 2 665 2 240 6 111 4 286 2 459 2 675 2 354 4 292 2 794 6 626 6 516 6 464 4 295 2 411 6 
215 1 413 2 571 2 735 2 299 2 82 2 281 2 484 2 
571 2 437 2 299 2 
571 2 299 2 425 2 
351 2 156 2 613 2 
571 2 299 2 
351 2 231 2 
571 2 619 2 
351 2 525 2 613 2 
249 2 613 2 151 2 
428 2 738 2 613 2 
772 2 613 2 244 2 
560 2 190 2 613 2 
351 2 574 2 
571 2 5 2 
249 2 65 2 
428 2 746 2 
772 2 264 2 
190 2 505 2 
351 2 482 2 
190 2 152 2 
772 2 877 2 
428 2 692 2 
249 2 144 2 
580 2 351 2 525 2 613 2 
580 2 351 2 525 2 613 2 212 2 
351 2 855 2 613 2 
351 2 686 2 613 2 
784 2 374 2 448 2 689 2 
783 2 82 2 490 2 484 2 
413 2 783 2 82 2 490 2 694 2 484 2 
571 2 735 2 299 2 358 2 82 2 484 2 
909 2 283 2 
735 2 82 2 484 2 573 2 
697 2 772 2 
360 2 190 2 
249 2 506 2 
428 2 693 2 
428 2 190 2 279 2 
428 2 610 2 190 2 
428 2 190 2 537 2 
428 2 190 2 451 2 
743 2 210 2 82 2 484 2 543 2 
351 2 106 2 
629 2 427 2 706 2 326 2 801 2 108 6 617 2 520 2 350 4 541 2 418 2 175 2 582 2 115 4 661 2 562 2 597 2 125 2 
154 2 613 2 
571 2 613 2 101 2 
571 2 581 2 
208 2 
470 2 301 2 370 4 303 2 577 2 522 6 256 2 524 2 375 2 646 2 22 2 23 2 434 2 648 2 764 18 487 2 701 2 650 4 168 2 652 2 896 4 229 2 655 2 657 18 776 6 658 2 96 2 556 2 716 2 609 2 662 2 38 2 100 2 236 2 397 2 724 2 726 2 668 2 47 2 284 2 402 4 346 6 289 2 848 2 186 6 355 2 922 2 124 4 294 2 857 4 
470 2 301 2 370 4 303 2 577 2 522 6 256 2 524 2 375 2 646 2 22 2 23 2 434 2 648 2 764 18 487 2 701 2 650 4 168 2 652 2 896 6 229 2 655 2 657 18 776 6 658 2 96 2 556 2 716 2 609 2 662 2 38 2 100 2 236 2 397 2 724 2 780 2 726 2 668 2 47 2 284 2 402 4 346 6 289 2 788 2 848 2 186 6 355 2 922 2 124 4 294 2 857 4 
415 2 251 2 553 4 672 2 24 2 211 2 49 2 213 2 521 4 218 2 866 2 624 2 596 2 688 2 189 2 504 2 856 2 599 2 
470 2 415 6 251 2 364 4 370 2 521 4 522 4 866 2 143 2 688 2 429 6 77 2 265 2 757 2 266 2 24 2 211 4 213 2 764 12 218 2 84 2 550 2 487 2 596 2 387 2 770 2 599 2 651 2 33 2 391 2 328 2 553 4 826 4 394 2 655 2 657 6 658 2 902 2 176 2 718 4 778 4 98 2 504 2 236 2 614 4 44 4 672 4 49 2 734 2 624 2 189 4 922 2 739 2 294 2 124 2 856 2 
470 2 415 4 251 2 364 4 370 2 521 4 522 4 866 2 143 2 688 2 429 6 77 2 432 2 265 2 757 2 266 2 24 2 211 6 213 2 764 12 218 2 84 2 550 2 487 2 596 2 387 2 599 2 651 2 33 2 391 2 328 2 553 4 826 4 394 2 655 2 657 6 658 2 902 2 176 2 718 4 778 4 98 2 504 2 236 2 614 4 44 4 672 4 49 2 734 2 624 2 189 4 922 2 739 2 294 2 124 2 856 2 
470 2 415 6 251 2 364 8 370 2 521 4 522 4 866 2 143 2 688 2 429 6 77 2 265 2 757 2 266 2 24 2 211 6 213 2 764 12 218 2 84 2 550 2 487 2 596 2 387 2 599 2 651 2 33 2 391 2 328 2 553 4 826 4 394 2 655 2 657 6 658 2 902 2 176 2 718 4 778 4 98 2 504 2 236 2 614 4 44 4 672 4 49 2 734 2 624 2 189 4 922 2 739 2 294 2 124 2 856 2 191 2 
470 2 415 6 251 2 364 8 370 2 521 4 522 4 866 2 143 2 688 2 429 8 77 2 432 2 265 2 757 2 266 2 24 2 211 8 213 2 764 12 218 2 84 2 550 2 487 2 596 2 387 2 599 2 651 2 33 2 391 2 328 2 553 4 826 8 394 2 655 2 657 6 658 2 902 2 176 2 718 4 778 4 98 2 504 2 236 2 614 8 44 4 672 4 49 2 734 2 624 2 189 4 922 2 739 2 294 2 124 2 856 2 191 2 
470 2 415 6 251 2 364 8 370 2 521 4 522 4 866 2 143 2 688 2 429 6 77 2 265 2 757 2 266 2 24 2 211 6 213 2 764 12 218 2 84 2 550 2 487 2 596 2 387 2 599 2 651 2 33 2 391 2 328 2 553 4 826 8 394 2 655 2 657 6 658 2 902 2 176 2 718 4 778 4 98 2 504 2 236 2 614 8 44 4 672 4 49 2 734 2 624 2 189 4 922 2 739 2 294 2 124 2 856 2 191 2 
651 2 33 2 391 2 415 4 472 2 364 2 553 2 278 2 394 2 521 2 176 2 718 2 143 2 258 2 778 2 688 2 98 2 429 4 77 2 432 2 842 2 266 2 757 2 265 2 672 4 211 6 49 2 404 2 764 4 734 2 218 2 624 2 596 2 189 4 739 2 856 2 599 2 
651 2 33 2 391 2 415 6 472 2 364 6 553 2 278 2 394 2 521 2 176 2 718 2 143 2 258 2 778 2 688 2 98 2 429 4 77 2 842 2 266 2 757 2 265 2 672 4 211 6 49 2 404 2 764 4 734 2 218 2 624 2 596 2 189 4 739 2 856 2 191 2 599 2 
651 2 33 2 391 2 415 6 472 2 364 6 553 2 826 4 278 2 394 2 521 2 176 2 718 2 143 2 258 2 778 2 688 2 98 2 614 4 429 4 77 2 842 2 266 2 757 2 265 2 672 4 211 6 49 2 404 2 764 4 734 2 218 2 624 2 596 2 189 4 739 2 856 2 191 2 599 2 
651 2 33 2 391 2 415 6 472 2 364 6 553 2 826 4 278 2 394 2 521 2 176 2 718 2 143 2 258 2 778 2 688 2 98 2 614 4 429 4 77 2 842 2 266 2 757 2 265 2 672 4 211 6 49 2 404 2 764 4 734 2 218 2 624 2 596 2 189 4 739 2 856 2 191 2 599 2 
651 2 33 2 391 2 415 6 364 6 553 2 826 4 394 2 521 2 176 2 718 2 143 2 778 2 688 2 98 2 44 2 614 4 429 4 77 2 266 2 757 2 265 2 672 4 211 6 49 2 764 4 734 2 218 2 624 2 596 2 189 4 739 2 856 2 191 2 599 2 
470 2 364 6 370 4 577 3 143 2 375 2 477 2 688 2 265 2 22 2 266 2 23 2 817 2 487 2 596 2 599 2 388 2 701 3 275 2 33 2 391 2 826 2 394 2 716 4 176 2 718 2 609 2 724 2 44 2 726 2 402 4 616 2 49 2 734 2 289 2 848 2 186 8 624 2 189 4 294 2 739 2 856 2 191 2 857 4 415 6 301 2 303 2 521 2 522 6 524 3 644 2 429 4 208 2 646 2 77 2 757 2 211 6 434 2 764 28 648 2 544 2 84 2 218 2 891 2 650 4 651 2 896 6 553 2 897 3 655 2 657 24 776 6 658 2 556 2 778 2 662 2 98 2 100 2 236 2 780 2 668 2 672 4 346 6 788 2 355 2 356 2 922 2 124 4 359 2 
470 2 415 6 251 2 364 8 370 2 521 4 522 4 866 2 143 2 688 2 429 6 77 2 265 2 757 2 266 2 24 2 211 6 213 2 764 12 218 2 84 2 550 2 487 2 596 2 387 2 599 2 651 2 33 2 391 2 328 2 553 4 826 8 394 2 655 2 657 6 658 2 902 2 176 2 718 4 778 4 98 2 504 2 236 2 614 8 44 4 672 4 49 2 734 2 624 2 189 4 922 2 739 2 294 2 124 2 856 2 191 2 
76 2 614 2 651 2 33 2 77 2 364 2 800 2 265 2 757 2 266 2 826 2 49 2 176 2 218 2 624 2 596 2 739 2 587 4 856 2 
391 2 265 2 918 2 
391 2 265 2 918 2 
470 2 472 2 364 6 136 2 370 4 375 2 143 2 688 2 22 2 265 2 23 2 487 2 596 2 599 2 391 2 826 2 278 2 394 2 716 2 718 2 609 2 724 2 726 2 614 2 842 2 402 4 404 2 845 2 289 2 848 2 186 2 189 4 409 2 294 2 191 2 415 6 303 2 521 2 522 6 524 2 73 2 429 4 871 2 870 2 646 2 211 6 434 2 764 18 648 2 885 2 650 4 896 6 553 2 655 2 657 14 656 2 776 2 658 2 556 2 662 2 778 2 98 2 100 2 236 2 780 2 668 2 672 4 346 2 788 2 355 2 922 2 124 4 
339 2 274 2 275 2 840 2 251 2 228 2 657 2 554 2 658 2 114 2 764 4 716 2 436 2 357 2 640 2 771 2 664 2 
470 2 472 2 364 6 136 4 370 4 375 2 143 2 688 2 22 2 265 2 23 2 487 2 596 2 599 2 391 2 603 2 826 2 278 2 394 2 716 2 718 2 609 2 724 2 726 2 614 2 842 2 402 4 404 2 845 2 289 2 848 2 186 2 189 4 409 2 294 2 191 2 415 6 303 2 302 2 521 2 522 6 524 4 73 2 429 4 871 2 870 2 646 2 211 6 434 2 764 18 648 2 885 2 650 4 896 6 553 2 655 2 657 14 656 2 776 2 658 2 556 2 662 2 778 2 98 2 100 2 236 2 780 2 668 2 672 4 346 2 788 2 355 2 922 2 124 4 
470 2 472 2 364 6 136 2 370 4 375 2 143 2 688 2 22 2 265 2 23 2 487 2 596 2 599 2 391 2 826 2 278 2 394 2 716 2 718 2 609 2 724 2 726 2 614 2 842 2 402 4 404 2 845 2 289 2 848 2 186 2 189 4 409 2 294 2 191 2 415 6 303 2 521 2 522 6 524 2 73 2 429 4 871 2 870 2 646 2 211 6 434 2 764 18 648 2 885 2 650 4 896 6 553 2 655 2 657 14 656 2 776 2 658 2 556 2 662 2 778 2 98 2 100 2 236 2 780 2 668 2 672 4 346 2 788 2 355 2 922 2 124 4 
1 3 470 2 471 2 680 2 252 4 681 8 254 2 684 4 6 2 685 2 9 24 10 10 477 2 12 20 261 2 262 18 479 2 17 8 480 72 481 2 19 2 22 2 267 2 270 2 485 6 486 10 26 3 487 2 488 18 700 2 30 8 31 12 491 2 701 25 703 2 492 2 493 2 704 2 495 2 708 2 278 68 500 2 709 2 501 2 715 2 716 2 717 2 720 2 280 2 503 2 722 6 38 2 39 12 42 10 724 2 725 4 726 2 43 2 45 4 507 2 729 8 284 2 509 16 510 6 511 6 512 2 731 18 287 6 733 18 52 2 290 4 736 2 53 4 55 2 294 2 296 2 742 18 58 2 59 6 518 2 300 2 301 2 61 18 62 2 63 2 304 10 523 2 522 6 524 25 526 2 528 2 752 4 529 2 70 6 71 2 753 2 531 6 74 10 75 4 754 2 312 2 533 2 78 2 756 2 79 4 317 2 318 2 760 8 540 4 762 2 764 60 547 2 548 2 549 16 551 4 90 2 89 12 325 4 327 2 93 4 94 2 776 14 95 18 96 2 556 4 332 4 97 2 559 2 561 2 335 2 334 2 563 18 336 2 100 4 566 2 780 6 782 2 341 2 344 2 107 9 345 26 110 2 569 24 346 14 348 2 112 2 570 4 788 6 352 8 789 2 790 4 791 14 119 2 356 2 122 9 795 4 123 10 124 4 359 2 362 2 363 2 365 6 367 2 130 2 575 4 134 6 133 10 135 2 370 4 577 16 578 8 142 2 584 2 375 2 806 4 377 54 145 2 379 10 150 2 588 1 589 2 808 10 811 2 591 2 814 2 815 16 160 4 161 2 818 2 819 4 386 2 820 2 165 4 600 4 388 2 601 2 168 2 602 26 169 4 390 4 393 2 825 2 824 2 605 6 827 4 606 6 828 2 607 2 609 4 833 3 612 2 397 2 836 4 839 2 399 2 615 2 402 6 618 2 620 10 403 4 621 2 843 2 623 6 848 4 186 36 187 4 850 2 407 6 852 4 408 10 857 12 412 2 859 2 414 2 861 3 416 6 193 6 417 2 862 8 863 2 633 2 634 10 196 2 198 6 637 3 638 2 199 18 200 4 639 18 203 6 421 2 868 6 424 2 869 4 206 4 646 2 209 4 647 6 878 42 879 2 434 2 214 4 648 2 882 2 217 2 884 2 887 14 220 4 440 2 222 2 225 2 650 6 226 2 442 2 443 2 653 4 652 2 896 14 897 2 655 2 657 32 658 2 230 2 446 6 900 28 901 46 904 2 903 34 447 2 907 2 663 48 236 2 452 6 666 2 668 4 667 2 670 4 455 2 915 2 456 2 916 2 243 2 673 12 674 6 246 2 461 2 676 2 922 2 463 2 678 2 466 2 
492 2 301 2 916 2 135 2 657 2 346 2 776 2 828 2 621 2 304 4 577 2 579 2 901 6 764 2 524 2 186 2 334 2 408 2 123 2 386 2 833 2 529 2 701 2 857 2 
492 2 301 2 916 2 135 2 657 2 346 2 776 2 828 2 621 2 304 4 577 2 579 2 901 6 764 2 524 2 186 2 334 2 408 2 123 2 386 2 833 2 529 2 701 2 857 2 
492 2 301 2 916 2 135 2 657 2 346 2 776 2 828 2 621 2 304 4 577 2 579 2 901 6 764 2 524 2 186 2 334 2 408 2 123 2 386 2 833 2 529 2 701 2 857 2 
89 4 390 2 654 2 416 4 301 2 862 2 657 4 710 2 95 4 306 2 199 4 524 3 378 2 334 2 563 4 663 6 834 2 41 3 262 2 836 2 104 2 729 2 670 2 107 3 79 2 733 4 460 4 290 2 764 10 352 2 737 2 186 2 85 2 676 2 549 5 795 2 122 3 740 2 165 2 701 3 
89 4 390 2 654 2 416 4 301 2 575 2 862 2 657 4 710 2 95 4 306 2 199 4 524 2 378 2 334 2 563 4 663 6 834 2 41 2 262 2 836 2 104 2 729 2 670 2 107 2 511 2 79 2 513 2 733 4 460 4 290 2 764 10 352 2 737 2 186 2 85 2 676 2 549 4 795 2 122 2 740 2 165 2 701 2 
89 4 390 2 654 2 416 4 301 2 575 2 862 2 657 4 710 2 95 4 306 2 199 4 524 2 378 2 334 2 563 4 663 6 834 2 41 2 262 2 836 2 104 2 729 2 670 2 107 2 511 2 79 2 513 2 733 4 460 4 290 2 764 10 352 2 737 2 186 2 85 2 676 2 549 4 795 2 122 2 740 2 165 2 701 2 
89 4 390 2 654 2 416 4 301 2 575 2 862 2 657 4 710 2 95 4 306 2 199 4 524 2 378 2 334 2 563 4 663 6 834 2 41 2 262 2 836 2 104 2 729 2 670 2 107 2 511 2 79 2 513 2 733 4 460 4 290 2 764 10 352 2 737 2 186 2 85 2 676 2 549 4 795 2 122 2 740 2 165 2 701 2 
89 4 390 2 654 2 416 4 301 2 575 4 862 2 657 4 710 2 95 4 306 2 199 4 524 2 378 2 334 2 563 4 663 6 834 2 41 2 262 2 836 2 104 2 729 2 670 2 107 2 511 4 79 2 513 4 733 4 460 4 290 2 764 10 352 2 737 2 186 2 85 2 676 2 549 4 795 2 122 2 740 2 165 2 701 2 
607 2 744 2 109 2 347 2 908 2 649 2 
288 2 766 2 639 2 433 2 625 2 876 2 347 2 
895 2 552 2 802 2 657 8 803 1 830 2 139 2 660 2 747 1 333 2 308 1 641 2 15 2 103 2 340 2 691 1 807 2 241 2 913 1 764 10 849 2 29 2 922 2 465 2 323 2 702 2 
89 12 416 4 775 2 862 6 575 3 657 6 99 2 836 2 837 2 666 2 207 2 105 2 729 6 510 4 670 6 511 5 79 6 536 2 403 2 513 2 814 2 245 2 594 4 764 6 352 6 549 15 852 2 795 6 165 6 126 1 127 2 
324 2 398 1 276 2 679 2 657 1 195 2 713 2 733 2 847 2 816 7 764 1 216 2 199 2 320 2 120 2 563 2 164 4 88 2 
324 4 276 4 679 2 195 2 713 4 733 2 847 2 816 6 216 2 199 2 320 2 120 2 563 2 164 4 88 2 
324 8 398 1 276 8 679 2 657 1 195 2 713 8 733 2 847 2 816 10 764 1 216 2 199 2 320 6 120 2 563 2 164 4 88 8 
324 2 276 2 679 2 195 2 713 2 733 2 847 2 816 2 216 2 199 2 120 2 563 2 164 2 
0 4 798 2 361 2 132 8 474 2 11 2 145 2 260 4 148 2 155 2 383 2 810 6 592 2 163 2 271 2 821 2 705 2 823 2 171 2 712 6 502 2 178 2 40 6 46 4 727 2 508 2 402 18 182 2 732 7 405 4 515 2 291 2 848 2 851 2 858 2 194 2 635 2 864 10 749 6 201 2 205 2 867 2 875 2 431 2 314 2 81 2 80 2 435 2 764 44 545 2 767 8 768 1 219 2 86 2 322 2 223 2 650 20 893 2 896 36 774 6 657 40 330 2 898 2 556 4 558 2 905 8 100 4 450 4 565 4 780 2 238 2 912 16 671 4 915 2 110 2 787 6 788 2 677 2 121 2 128 2 
248 2 361 2 194 6 60 2 576 2 473 2 864 8 749 2 687 4 478 2 586 4 145 2 260 2 530 2 642 2 874 2 431 2 314 2 812 2 764 28 696 2 545 2 272 4 821 2 441 10 890 2 650 14 32 4 823 2 896 36 170 2 498 2 657 26 330 2 898 2 173 2 556 2 396 10 100 2 450 6 565 6 780 8 838 2 239 2 46 6 912 14 238 2 671 2 915 2 402 14 110 2 786 4 184 6 732 2 405 2 572 2 788 8 848 2 793 4 921 4 56 4 128 2 
0 2 798 2 194 1 576 1 473 2 864 14 749 4 687 2 586 2 478 2 11 2 145 2 260 4 205 2 148 2 867 2 874 2 383 2 875 2 314 2 80 2 81 2 592 4 764 38 545 2 439 2 86 2 821 2 223 2 441 2 650 18 32 2 823 2 896 34 497 2 498 1 774 4 171 2 330 2 657 34 898 2 172 2 173 1 556 6 396 2 178 2 100 6 450 4 565 4 780 6 46 4 912 4 238 2 727 2 401 2 671 2 915 2 402 16 110 2 184 2 732 4 291 2 405 2 515 2 787 4 788 6 848 4 793 2 677 2 462 2 851 2 921 2 56 2 128 2 858 2 
650 2 912 2 238 2 431 2 896 2 314 2 402 2 657 6 898 2 556 2 764 6 545 2 848 2 853 2 100 2 
315 2 

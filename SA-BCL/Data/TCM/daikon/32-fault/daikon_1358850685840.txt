#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 16 590 
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (116,196) (116,196) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.NullPointerException 167 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 500 33 906 146 644 105 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 78 66 889 305 136 222 991 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 688 49 603 (151,277,723,731,846,923,941) (438,627) 392 316 539 381 149 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR utilMDE.Assert$AssertionException (116,196) (116,196) 579 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR utilMDE.Assert$AssertionException (116,196) (116,196) 579 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR utilMDE.Assert$AssertionException (116,196) (116,196) 579 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR utilMDE.Assert$AssertionException (116,196) (116,196) 579 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR utilMDE.Assert$AssertionException (116,196) (116,196) 579 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 688 49 603 (151,277,723,731,846,923,941) (438,627) 392 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 288 287 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 288 287 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 921 982 287 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 815 921 982 287 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:isReverse([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | CONDITION | 18478 | if (x) -> if (!x)
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String; | CONSTANT | 8912 | 0 -> -1
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:eltwiseGT([I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 2590 | = null
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_52()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:slice([III)[I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.PptSlice1:num_samples()I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:eq(DD)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice; | RETURN | 38994 | return null
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType; | ASSIGN | 47633 | = null
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_134()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoAux:hashCode()I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:lexLT([I[I)Z | CONDITION | 170646 | if (x) -> if (!x)
daikon.Quant:lte(II)Z
utilMDE.MathMDE:pow(II)I
daikon.inv.Invariant:logOn()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.RootNode:RootNode()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | RETURN | 35278 | return null
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_3_1()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Ppt:Ppt()V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.InvariantFormatTester:execute()Z
daikon.ProglangType:isPointerFileRep()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptName:isCombinedExitPoint()Z
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z | ASSIGN | 60226 | = null
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.ValueTuple:isMissing(I)Z
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfo:isDerived()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quantify.Term:esc_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.Intern:intern([J)[J
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2586 | = null
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:memberOf(D[F)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.PptSlice0:arity()I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:isIOAArray()Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V | STATEMENT | 25787 | stmt -> ;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.ProglangType:baseIsIntegral()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParser:jj_3R_135()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String; | RETURN | 119133 | return null
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_163()Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.Invariant:logDetail()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfo:isPrestate()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eq(II)Z
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:setDiff([I[I)[I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.MathMDE:pow_fast(II)I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.FormatTestCase:passes()Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:eltsGTE([II)Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.ProglangType:isFloat()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName:hashCode()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_3R_55()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:dimensions()I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:jj_2_14(I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Debug:logDetail()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | CONDITION | 7988 | if (x) -> if (!x)
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:min([I)I
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltsEqual([II)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.JavaParser:jj_3_14()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Intern:numIntArrays()I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfo:isPointer()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.MathMDE:mod_positive(JJ)J
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:sameLength([I[I)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 13092 | = null
daikon.Quantify.Constant:Constant(I)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:subsetOf([F[D)Z
jtb.JavaCharStream:BeginToken()C
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_53()Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:jj_3_16()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_162()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isScalar()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | OPERATOR | 54314 | != -> ==
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:eltwiseLT([I)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.PptSlice1:arity()I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quant:subsetOf([B[I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.ModBitTracker:num_vars()I
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.ValueTuple:size()I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:lexGTE([I[I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ModBitTracker:num_samples()I
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.Quant:eq(FF)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.MathMDE:gcd(II)I | CONDITION | 4310 | if (x) -> if (!x)
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaCharStream:getBeginLine()I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaCharStream:getEndLine()I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3_13()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.Quant:noDups([I)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:sign(I)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:ne(II)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfo:relate_var()V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltsGtIndex([I)Z
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.Quant:eltsLTE([II)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:memberOf(F[F)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:jj_2_13(I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaCharStream:getEndColumn()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 3656 | return null
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:lexGT([I[I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:Node()V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sum([D)D
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Debug:logOn()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ProglangType:isArray()Z
daikon.PptSlice2:arity()I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
603 2 352 2 273 2 898 2 692 2 723 2 182 2 517 2 221 2 661 2 484 5 49 2 82 6 255 2 764 2 631 2 675 4 796 4 953 2 63 2 319 2 
603 7 923 3 32 8 406 2 688 2 692 7 941 4 221 6 661 6 484 8 49 7 82 15 666 2 285 1 227 5 261 1 675 13 953 7 63 7 438 2 
624 2 164 2 719 2 120 2 412 2 810 2 
206 2 826 2 453 2 51 2 16 2 19 2 830 2 354 2 590 2 950 2 594 2 
171 2 610 4 741 2 626 2 196 2 507 2 294 2 434 2 116 2 
969 6 576 2 718 2 109 2 369 2 817 6 977 2 449 2 756 2 479 6 115 2 
378 2 990 4 353 2 914 4 196 2 40 2 492 6 870 2 237 6 264 2 250 6 116 2 904 6 
266 2 221 8 603 8 661 8 484 16 82 17 49 8 979 4 406 2 329 2 196 4 692 8 675 16 796 12 723 6 953 8 63 8 318 2 116 4 416 4 835 2 
81 6 302 4 
206 2 
171 2 957 2 321 2 472 2 473 2 720 2 76 2 655 2 114 2 552 2 368 4 282 2 341 2 486 2 191 2 190 2 343 2 427 2 589 2 735 2 559 2 167 2 200 2 398 2 601 2 774 2 
493 1 603 4 688 1 692 4 151 4 116 4 846 8 221 4 519 8 731 2 661 4 484 8 82 9 49 4 196 4 675 8 953 4 63 4 
659 2 403 2 473 2 
401 2 494 2 778 2 161 2 18 2 811 2 992 2 770 2 26 2 27 2 111 22 180 2 597 10 117 2 
955 2 
642 2 269 6 644 2 647 2 777 4 500 2 270 2 895 4 385 2 896 1 272 2 146 2 781 2 652 2 903 2 782 2 905 2 783 2 784 2 906 2 520 2 283 3 909 2 21 3 912 16 793 32 671 16 795 2 24 1 526 1 166 1 397 2 678 2 29 1 172 2 806 2 402 1 33 2 925 4 926 2 36 2 295 1 300 2 409 2 543 2 938 2 818 1 184 2 943 2 696 1 699 2 827 1 947 2 556 2 832 2 61 2 196 32 311 1 60 3 710 3 435 4 563 2 837 2 565 2 207 2 322 2 838 2 568 2 324 32 211 24 960 2 212 2 573 2 445 3 579 2 331 2 580 2 335 6 220 2 219 4 965 2 223 3 80 2 224 2 225 2 733 4 734 2 228 2 587 1 591 2 592 16 459 2 971 2 461 2 231 24 91 3 93 2 235 2 596 2 599 2 99 3 602 2 740 2 741 2 102 2 470 2 471 2 105 2 744 1 605 2 858 1 860 2 474 2 862 2 606 3 981 5 983 16 357 3 866 2 984 2 358 1 360 2 753 2 116 34 481 2 480 6 252 2 629 2 256 1 122 2 632 2 993 3 882 2 772 2 137 6 887 3 138 2 
317 2 116 2 
641 2 464 2 116 4 
889 2 496 10 890 2 0 2 780 4 504 2 274 4 505 6 390 82 900 2 276 10 902 2 155 14 156 10 12 2 159 2 13 2 394 10 521 2 667 2 910 26 915 82 673 26 916 2 530 2 679 2 799 2 290 20 680 4 808 2 35 2 929 2 689 8 813 2 38 4 814 26 816 2 545 26 305 2 43 4 695 6 551 2 46 2 553 2 54 26 703 4 428 24 57 6 194 26 707 12 711 2 201 2 561 4 66 2 437 2 74 36 958 20 569 2 574 16 572 2 328 2 444 2 78 2 451 4 222 2 848 10 337 2 585 20 87 2 852 2 457 2 967 4 458 2 460 2 593 2 736 26 96 6 855 10 738 26 739 26 857 2 347 2 975 26 243 82 868 2 985 8 754 2 871 14 873 12 872 2 763 2 991 2 767 10 489 2 128 2 129 2 130 4 373 28 375 26 134 2 883 2 376 2 135 2 136 2 
147 1 112 2 536 2 387 2 
186 2 387 2 
844 2 48 2 473 2 861 2 318 2 525 2 387 2 
973 2 861 2 387 2 
861 2 615 2 387 2 
14 2 536 2 819 2 
861 2 387 2 
499 2 819 2 
928 2 387 2 
554 2 536 2 819 2 
44 2 408 2 536 2 
133 2 28 2 536 2 
119 2 339 2 536 2 
292 2 536 2 142 2 
396 2 819 2 
418 2 387 2 
408 2 618 2 
709 2 133 2 
119 2 31 2 
142 2 7 2 
819 2 600 2 
351 2 142 2 
119 2 840 2 
877 2 133 2 
706 2 408 2 
554 2 712 2 536 2 819 2 
658 2 554 2 712 2 536 2 819 2 
71 2 536 2 819 2 
536 2 123 2 819 2 
785 2 685 2 609 2 562 2 
819 2 863 2 
174 2 293 2 892 2 501 2 893 2 980 4 429 2 544 2 111 6 694 2 333 2 638 2 346 2 65 4 758 2 620 2 824 2 621 2 
536 2 687 2 
83 2 473 2 669 2 525 2 
844 2 83 2 683 2 473 2 669 2 525 2 
404 2 473 2 861 2 318 2 525 2 387 2 
807 2 720 2 
39 2 473 2 318 2 525 2 
119 2 779 2 
421 2 142 2 
408 2 399 2 
133 2 854 2 
118 2 
133 2 422 2 142 2 
933 2 133 2 142 2 
676 2 133 2 142 2 
473 2 502 6 179 2 152 6 253 2 697 2 525 2 885 2 
795 2 
642 2 269 4 644 2 777 4 146 4 782 2 903 2 783 2 520 2 906 2 158 4 787 2 909 2 912 6 793 4 529 4 801 2 172 2 804 4 925 4 535 2 812 2 300 2 690 2 943 2 700 2 699 2 196 26 311 2 435 4 563 2 320 2 837 2 207 2 838 2 568 2 324 6 579 2 331 2 580 6 335 2 219 10 228 2 733 4 591 2 344 2 459 2 971 2 93 2 235 2 596 2 741 2 974 4 744 2 105 2 605 2 474 2 862 2 860 4 866 2 752 2 753 2 613 4 365 2 116 26 481 2 480 2 761 4 629 2 122 4 633 2 768 4 137 6 996 2 
642 2 269 6 644 2 777 4 146 4 148 2 782 2 903 2 783 2 520 2 906 2 158 4 787 2 909 2 912 6 793 4 529 4 801 2 172 2 804 4 925 4 812 2 300 2 690 2 184 2 550 2 943 2 700 2 699 2 196 26 311 2 435 4 563 2 837 2 207 2 838 2 568 2 324 6 579 2 331 2 580 6 335 2 219 10 228 2 733 4 734 2 591 2 344 2 459 2 971 2 93 2 235 2 596 2 741 2 974 4 744 2 105 2 605 2 474 2 862 2 860 4 749 2 866 2 753 2 613 4 365 2 116 26 481 2 480 2 761 4 629 2 122 4 259 2 633 2 768 4 137 6 996 2 
820 2 897 2 
327 2 
268 10 643 2 567 2 646 2 777 2 326 2 443 2 576 2 726 2 217 8 656 2 450 2 783 2 340 2 966 2 395 4 524 4 968 2 228 2 970 2 969 6 163 2 459 2 93 2 797 2 168 2 235 2 242 2 925 2 298 4 751 2 109 2 300 2 934 2 817 6 410 2 479 6 115 4 756 4 116 12 481 2 625 2 628 2 944 2 946 4 308 4 630 2 125 4 55 8 126 2 705 2 635 2 196 6 636 2 315 2 771 2 491 2 64 2 639 2 137 4 
268 10 643 2 567 2 646 2 777 2 326 2 443 2 576 2 726 2 217 8 656 2 450 2 783 2 340 2 966 2 395 4 524 4 968 2 228 2 970 2 969 8 459 2 93 2 797 2 168 2 235 2 242 2 925 2 298 4 751 2 300 2 109 2 934 2 817 8 361 2 410 2 185 2 42 4 115 4 479 6 756 4 116 12 481 2 625 2 944 2 628 2 946 4 369 2 308 4 630 2 55 8 125 4 126 2 196 6 635 2 636 2 315 2 771 2 491 2 64 2 639 2 137 4 
643 2 944 2 628 2 242 2 946 4 308 2 966 2 630 2 326 2 125 4 970 2 443 2 934 2 315 2 817 2 756 2 115 2 479 2 
268 6 643 2 567 2 646 2 777 2 326 2 443 2 726 2 217 4 656 2 450 2 783 2 340 2 966 2 395 4 524 4 968 2 228 2 970 2 969 6 163 2 459 2 93 2 797 2 168 2 235 2 242 2 925 2 298 4 751 2 109 2 300 2 934 2 817 6 410 2 479 4 115 4 756 4 116 12 481 2 625 2 628 2 944 2 946 4 369 2 308 4 630 2 125 4 55 4 126 2 705 2 635 2 196 6 636 2 315 2 771 2 491 2 64 2 639 2 137 4 
268 6 643 2 567 2 646 2 777 2 326 2 443 2 726 2 217 4 449 2 656 2 450 2 783 2 340 2 966 2 395 4 524 4 968 2 228 2 970 2 969 6 163 2 459 2 93 2 797 2 168 2 235 2 242 2 925 2 298 4 751 2 109 2 300 2 934 2 817 4 410 2 479 6 115 4 756 4 116 12 481 2 625 2 628 2 944 2 946 4 308 4 630 2 125 4 55 4 126 2 705 2 635 2 196 6 636 2 315 2 771 2 491 2 64 2 639 2 137 4 
268 6 643 2 567 2 646 2 777 2 326 2 443 2 576 2 726 2 217 4 656 2 450 2 783 2 340 2 966 2 395 4 524 4 968 2 228 2 970 2 969 6 163 2 459 2 93 2 797 2 168 2 235 2 242 2 925 2 298 4 751 2 109 2 300 2 934 2 817 6 410 2 479 6 115 4 756 4 116 12 481 2 625 2 628 2 944 2 946 4 308 4 630 2 125 4 55 8 126 2 705 2 635 2 196 6 636 2 315 2 771 2 491 2 64 2 639 2 137 4 
268 10 643 2 567 2 646 2 777 2 326 2 443 2 576 2 726 2 217 8 449 2 656 2 450 2 783 2 340 2 966 2 395 4 524 4 968 2 228 2 970 2 969 8 163 2 459 2 93 2 797 2 168 2 235 2 242 2 925 2 298 4 751 2 109 2 300 2 934 2 817 6 410 2 479 8 115 4 756 4 116 12 481 2 625 2 628 2 944 2 946 4 308 4 630 2 125 4 55 8 126 2 705 2 635 2 196 6 636 2 315 2 771 2 491 2 64 2 639 2 137 4 
268 10 643 2 567 2 646 2 777 2 326 2 443 2 576 2 726 2 217 8 656 2 450 2 783 2 340 2 966 2 395 4 524 4 968 2 228 2 970 2 969 6 163 2 459 2 93 2 797 2 168 2 235 2 242 2 925 2 298 4 751 2 109 2 300 2 934 2 817 6 410 2 479 6 115 4 756 4 116 12 481 2 625 2 628 2 944 2 946 4 308 4 630 2 125 4 55 8 126 2 705 2 635 2 196 6 636 2 315 2 771 2 491 2 64 2 639 2 137 4 
268 2 269 6 777 4 514 1 515 7 516 2 783 2 520 2 284 2 524 6 793 2 797 2 801 2 289 2 532 6 802 2 298 8 300 2 817 4 303 1 308 4 828 6 53 6 55 2 315 2 64 2 317 6 563 2 836 1 566 2 567 2 838 2 75 6 324 8 326 2 579 2 331 2 580 6 335 2 336 2 584 6 340 2 591 2 344 2 93 2 595 2 97 6 350 1 605 2 862 2 860 2 866 2 109 4 362 7 115 4 116 46 619 2 366 2 367 2 625 2 628 2 629 2 875 2 121 10 630 2 125 4 633 4 126 2 127 1 634 2 372 2 635 2 636 2 639 4 137 6 641 6 643 2 891 1 379 2 646 2 141 2 382 2 649 2 146 2 899 2 656 4 153 2 908 2 395 4 909 2 912 6 168 2 172 2 925 4 930 6 407 2 932 6 934 2 178 1 411 1 410 2 184 2 942 2 943 2 699 2 944 2 419 2 946 4 705 2 949 6 193 2 196 24 951 2 952 2 431 6 432 2 955 6 714 6 435 4 207 2 443 2 214 2 726 2 449 4 450 2 219 4 732 2 966 2 228 2 734 2 733 4 968 2 969 12 970 2 459 2 971 12 462 2 235 2 737 8 466 4 741 2 974 4 742 2 242 2 474 2 747 4 748 6 246 2 751 2 753 2 479 8 756 4 481 2 480 2 759 1 251 6 768 2 771 2 491 2 
641 6 268 2 269 6 643 2 379 2 646 2 141 2 777 4 382 2 649 2 146 2 899 2 153 2 656 4 516 2 783 2 520 2 908 2 284 2 395 4 909 2 524 6 793 2 912 6 797 2 168 2 289 2 801 2 532 6 802 2 172 2 925 4 930 6 932 6 407 2 298 8 300 2 934 2 817 8 410 2 184 2 942 2 943 2 419 2 944 2 699 2 946 4 828 6 308 4 53 6 55 6 193 2 949 6 705 2 196 26 951 2 431 6 952 2 315 2 432 2 317 6 64 2 714 6 955 6 435 4 563 4 566 2 207 2 567 2 838 2 75 6 324 8 326 2 214 2 443 2 576 4 446 2 579 2 331 2 726 2 580 6 335 2 450 2 336 2 219 8 584 6 732 2 340 2 966 2 968 2 733 4 734 2 228 2 970 2 969 12 344 2 591 4 971 12 459 2 462 2 93 2 595 2 235 2 737 8 97 6 466 4 974 4 741 2 742 2 242 2 605 2 860 2 862 2 747 4 474 4 748 6 246 2 866 2 751 2 109 4 753 2 756 4 115 4 479 8 619 2 480 2 116 48 481 2 366 2 251 6 625 2 367 2 628 2 629 2 875 2 258 2 121 10 122 2 630 2 125 4 633 4 126 2 372 2 634 2 768 2 635 2 636 2 771 2 491 2 639 4 137 6 
641 6 268 6 269 6 643 2 379 2 646 2 141 2 777 4 382 2 649 2 146 2 899 2 153 2 656 4 516 2 783 2 520 2 908 2 284 2 395 4 524 6 909 2 793 2 912 6 797 2 168 2 289 2 801 2 532 6 802 2 172 2 925 4 930 6 932 6 407 2 298 8 300 2 934 2 817 8 410 2 184 2 942 2 943 2 419 2 699 2 944 2 946 4 828 6 308 4 53 6 55 6 193 2 949 6 705 2 196 26 951 2 431 6 952 2 315 2 432 2 317 6 64 2 714 6 955 6 435 4 563 4 566 2 207 2 567 2 838 2 75 6 324 8 326 2 214 2 443 2 576 4 446 2 579 2 331 2 726 2 580 6 335 2 217 4 450 2 336 2 219 8 584 6 732 2 340 2 966 2 968 2 733 4 734 2 228 2 970 2 969 12 344 2 591 4 971 12 459 2 462 2 93 2 595 2 235 2 737 8 97 6 466 4 974 4 741 2 742 2 242 2 605 2 860 2 862 2 747 4 474 4 748 6 246 2 866 2 751 2 109 4 753 2 756 4 115 4 479 8 619 2 480 2 116 48 481 2 366 2 251 6 625 2 367 2 628 2 629 2 875 2 258 2 121 10 122 2 630 2 125 4 633 4 126 2 372 2 634 2 768 2 635 2 636 2 771 2 491 2 639 4 137 6 
268 6 269 6 777 4 10 2 516 2 783 2 520 2 284 2 524 6 793 4 797 2 801 2 289 2 532 6 802 2 298 8 300 2 301 6 817 10 821 6 308 4 828 6 53 12 55 6 59 6 558 2 315 2 64 2 317 12 563 4 566 2 567 2 838 2 75 6 324 12 326 2 576 4 330 2 579 2 331 2 580 8 335 4 336 2 584 12 85 2 340 2 591 4 344 2 93 2 595 2 97 6 104 6 605 2 862 2 860 4 866 2 109 4 115 4 116 52 619 2 366 2 625 2 367 2 628 2 629 2 369 2 875 2 121 8 122 2 630 2 125 4 633 4 126 2 634 2 372 2 635 2 636 2 639 4 137 6 641 12 643 2 379 2 646 2 141 2 380 2 382 2 649 2 144 6 146 2 899 2 391 6 153 2 656 4 908 2 395 4 909 2 912 8 168 2 919 6 172 2 925 4 930 6 407 2 932 6 934 2 410 2 184 2 942 2 943 2 944 2 699 2 419 2 946 4 705 2 949 6 193 2 196 24 951 2 952 2 431 12 432 2 954 2 955 12 714 6 435 4 439 2 207 2 443 2 214 2 446 2 726 2 217 4 449 2 450 2 219 10 966 2 228 2 734 2 733 4 968 2 229 2 969 16 970 2 459 2 971 10 462 2 235 2 737 8 466 4 469 6 741 2 974 6 742 2 242 2 474 4 747 4 748 6 246 2 476 6 751 2 753 2 479 10 756 4 481 2 480 4 251 6 258 2 768 4 771 2 491 2 
268 4 643 2 567 2 242 2 646 2 443 2 298 2 576 2 109 2 817 6 410 2 726 2 217 4 450 2 115 4 479 6 756 4 116 4 944 2 628 2 946 2 395 2 524 2 630 2 55 6 125 2 705 2 969 4 635 2 636 2 797 2 315 2 168 2 771 2 64 2 
268 2 269 6 643 2 646 2 777 4 647 2 781 2 783 2 520 2 395 2 788 2 524 2 909 2 912 6 793 3 795 2 797 2 168 2 801 2 172 2 922 2 925 4 34 2 298 2 300 2 817 6 410 2 184 2 943 2 699 2 944 2 946 2 55 6 705 2 196 24 313 3 315 2 64 2 435 4 207 2 70 2 567 2 838 2 324 8 571 2 443 2 576 2 579 2 331 2 726 2 580 6 335 3 450 2 732 2 733 4 734 2 228 2 969 4 344 2 459 2 971 4 93 2 235 2 741 2 974 4 242 2 605 2 862 2 751 2 866 2 109 2 753 2 756 4 479 6 115 4 481 2 116 28 480 3 628 2 629 2 121 2 630 2 125 2 633 2 635 2 636 2 771 2 772 2 137 6 
847 2 567 2 771 2 
847 2 567 2 771 2 
267 2 268 6 269 6 643 2 777 4 382 2 146 6 512 2 656 4 783 2 520 2 395 2 524 4 909 2 670 2 912 2 793 2 797 2 801 2 532 2 172 2 291 2 925 4 812 4 298 4 300 2 817 12 413 4 184 2 942 2 45 2 943 2 699 2 50 2 946 2 308 4 55 6 192 6 196 16 951 2 833 2 435 4 563 4 564 2 69 4 207 2 567 6 323 2 838 2 324 2 443 4 576 4 332 2 331 2 580 2 216 2 217 4 449 4 219 4 847 2 340 2 966 2 586 2 228 2 733 4 734 2 970 2 969 16 591 4 344 2 459 2 971 4 93 2 463 2 235 2 98 2 466 2 238 6 741 2 605 2 747 2 474 4 862 2 866 2 109 4 753 2 363 2 115 4 479 12 756 4 116 24 481 2 625 2 628 2 629 2 369 4 121 2 125 2 633 8 126 2 635 2 771 4 639 2 137 6 
518 2 69 2 323 2 121 2 326 2 913 2 246 2 971 2 300 2 196 2 248 2 820 2 413 2 466 2 153 2 116 4 532 2 
267 4 268 6 269 6 643 2 777 4 382 2 146 6 512 2 656 4 278 2 783 2 520 2 281 2 395 2 524 4 909 2 668 2 20 2 912 2 793 4 797 2 801 2 532 2 172 2 291 2 925 4 812 4 297 2 298 4 300 2 817 12 413 4 184 2 942 2 943 2 699 2 946 2 308 4 55 6 192 6 196 16 951 2 833 2 435 4 563 4 564 2 69 4 207 2 567 6 323 2 838 2 324 2 443 4 576 4 332 2 331 2 580 2 216 2 217 4 449 4 219 4 847 2 340 2 966 2 228 2 733 4 734 2 970 2 969 16 591 4 344 2 459 2 971 2 93 2 463 2 235 2 98 2 238 6 741 2 605 2 747 2 474 4 862 2 866 2 109 4 753 2 363 2 115 4 479 12 756 4 116 24 481 2 625 2 628 2 629 2 369 4 125 2 633 8 126 2 635 2 771 4 491 2 639 4 137 6 
267 2 268 6 269 6 643 2 777 4 382 2 146 6 512 2 656 4 783 2 520 2 395 2 524 4 909 2 912 2 793 2 797 2 801 2 532 2 172 2 291 2 681 2 534 2 925 4 812 4 298 4 300 2 817 12 413 4 184 2 942 2 943 2 699 2 946 2 189 2 308 4 55 6 192 6 56 2 196 16 951 2 833 2 435 4 563 4 564 2 69 4 207 2 567 6 323 2 838 2 324 2 443 4 576 4 332 2 725 2 331 2 580 2 216 2 217 4 449 4 219 4 847 2 340 2 966 2 228 2 733 4 734 2 970 2 969 16 591 4 344 2 459 2 971 4 93 2 463 2 235 2 98 2 466 2 238 6 741 2 605 2 747 2 474 4 862 2 866 2 109 4 753 2 363 2 115 4 479 12 756 4 116 24 481 2 625 2 628 2 629 2 369 4 121 2 125 2 633 8 126 2 635 2 771 4 491 2 639 4 137 6 
269 8 495 1 1 14 2 2 497 1 777 4 6 2 503 1 508 2 275 2 510 2 511 2 10 2 516 2 277 2 279 1 783 2 11 2 520 2 786 2 787 2 522 4 284 3 788 2 789 2 285 6 792 9 286 2 793 18 22 1 23 1 529 2 800 5 289 2 30 2 531 1 804 12 803 2 533 6 805 1 34 2 37 1 537 2 296 2 538 2 299 2 300 2 539 2 540 1 542 2 41 4 546 35 304 3 548 1 549 2 823 1 47 1 307 1 49 6 52 34 829 2 831 1 312 1 558 2 311 2 313 2 316 2 560 2 63 6 834 2 67 12 68 2 70 2 72 2 838 2 324 25 325 2 841 1 77 2 575 1 577 4 843 1 578 1 845 4 579 2 331 3 580 14 79 2 335 16 581 2 582 1 338 2 82 14 85 2 342 2 89 2 90 15 588 2 853 2 344 2 92 2 93 2 95 2 100 1 603 6 349 10 348 2 604 1 103 2 106 1 605 2 860 18 864 1 356 1 866 3 611 1 867 3 614 6 113 2 365 2 116 36 622 4 623 2 627 4 370 10 633 2 637 2 374 2 640 2 886 1 884 2 137 6 377 4 888 1 379 2 140 2 141 2 380 1 381 2 143 2 384 2 650 4 386 2 388 1 389 1 146 4 651 1 899 2 653 2 149 2 654 10 150 4 392 2 660 4 157 1 158 2 661 6 662 2 912 14 671 2 674 2 675 12 918 2 920 1 172 2 922 2 923 4 925 4 405 15 686 1 176 1 175 4 931 2 688 6 690 2 692 6 935 1 936 12 693 1 939 2 940 2 184 3 414 2 417 2 943 3 699 2 945 2 188 1 948 2 423 1 702 2 424 2 426 4 196 27 708 1 953 6 199 2 954 2 715 2 435 4 204 1 436 2 439 2 205 1 717 2 209 4 210 1 959 2 721 2 214 2 722 1 724 2 448 1 727 1 218 4 964 1 219 39 729 2 221 6 731 1 452 1 454 1 226 2 456 2 227 8 228 2 734 3 733 4 229 2 230 2 971 2 459 2 233 11 232 2 235 2 974 12 741 3 240 2 744 2 746 4 976 2 245 1 750 24 983 3 247 2 249 14 477 2 753 3 755 2 757 2 478 9 988 1 989 2 481 2 480 18 760 3 761 2 254 1 762 1 484 12 487 1 488 1 768 45 996 2 
974 2 348 2 349 2 324 2 77 2 247 2 477 2 579 2 654 2 937 2 304 2 580 2 335 2 755 2 480 2 116 2 581 2 11 2 945 2 370 4 912 2 793 2 196 2 768 6 
974 2 348 2 349 2 324 2 77 2 247 2 477 2 579 2 654 2 937 2 304 2 580 2 335 2 755 2 480 2 116 2 581 2 11 2 945 2 370 4 912 2 793 2 196 2 768 6 
974 2 348 2 349 2 324 2 77 2 247 2 477 2 579 2 654 2 937 2 304 2 580 2 335 2 755 2 480 2 116 2 581 2 11 2 945 2 370 4 912 2 793 2 196 2 768 6 
266 2 717 2 3 1 945 2 324 2 765 2 721 1 793 1 671 2 983 2 196 2 345 2 579 2 917 2 510 1 480 1 116 2 
266 2 717 2 196 2 345 2 945 2 917 2 579 2 324 2 765 2 116 2 983 2 671 2 
266 2 717 2 196 2 345 2 945 2 917 2 579 2 324 2 765 2 116 2 983 2 671 2 
266 2 717 2 196 2 345 2 945 2 917 2 579 2 324 2 765 2 116 2 983 2 671 2 
266 2 717 2 196 2 345 2 945 2 917 2 579 2 324 2 765 2 116 2 983 2 671 2 
374 2 94 2 986 2 15 2 617 2 475 2 
804 2 851 2 187 2 894 2 15 2 236 2 911 2 
170 2 682 2 208 2 648 2 108 2 961 2 541 1 963 2 412 1 116 10 657 2 663 2 701 2 120 1 790 2 88 2 879 1 196 8 93 2 25 2 431 2 202 2 773 2 467 2 598 1 203 2 
603 2 923 2 627 2 484 3 49 2 82 4 285 3 227 2 688 3 692 2 675 2 560 2 953 2 63 2 392 2 
157 2 173 2 452 2 745 2 665 2 876 7 978 1 607 2 383 2 213 4 8 2 575 2 196 1 197 2 527 2 415 2 116 1 265 2 
157 2 173 2 452 2 745 2 665 2 876 6 607 4 383 2 213 4 8 4 575 2 197 4 527 2 415 2 265 2 
157 2 173 6 452 2 745 2 665 2 876 10 978 1 607 8 383 2 213 4 8 8 575 2 196 1 197 8 527 2 415 8 116 1 265 2 
157 2 452 2 745 2 665 2 876 2 607 2 383 2 213 2 8 2 575 2 197 2 527 2 265 2 
269 102 775 4 776 4 645 4 139 4 498 24 4 4 5 4 271 24 901 24 9 4 513 4 280 2 664 4 160 4 393 10 523 2 791 2 17 16 672 4 165 2 528 6 798 4 287 2 677 2 169 4 288 2 531 2 921 2 684 10 809 2 177 2 547 2 184 28 183 4 822 4 825 4 943 6 698 4 420 4 555 4 309 4 425 2 310 8 704 30 58 10 557 14 196 70 62 4 314 8 198 6 430 8 713 4 433 4 435 44 716 16 956 4 440 4 441 2 442 10 839 8 842 4 570 1 215 4 962 4 331 6 582 2 583 32 849 2 850 8 84 6 86 4 733 36 734 26 972 4 234 10 465 2 468 4 856 4 101 2 743 4 107 16 244 4 982 2 865 6 864 2 355 4 612 4 753 2 869 4 364 2 987 4 616 2 116 78 482 4 874 2 878 11 257 16 766 4 124 8 371 8 769 10 262 4 263 4 994 4 490 4 131 8 995 2 881 4 997 10 
269 37 645 4 442 6 498 8 5 2 842 4 447 2 331 2 154 2 582 2 393 6 84 5 523 1 791 1 17 15 162 2 734 9 733 14 672 4 972 2 528 2 287 2 798 4 468 2 400 2 288 2 531 2 921 2 924 2 241 2 859 2 982 2 864 2 355 2 865 2 359 2 753 2 181 2 364 2 547 2 987 2 184 9 183 3 306 2 116 28 483 2 943 2 698 4 874 2 420 2 878 2 309 4 425 3 704 8 58 6 195 10 196 26 314 6 995 1 435 14 997 2 440 4 
269 61 775 4 776 4 645 4 498 28 4 4 5 2 271 8 145 4 901 8 9 4 509 4 513 4 280 2 160 4 393 8 523 2 17 4 791 2 162 2 672 4 528 4 287 2 798 2 169 4 531 2 921 2 181 2 547 2 184 13 183 2 306 1 822 4 943 8 698 4 420 4 555 4 309 4 425 2 704 22 58 8 557 12 195 2 196 56 314 3 198 1 713 4 433 4 435 30 956 4 440 4 442 8 839 4 842 4 962 4 331 8 334 2 582 2 850 4 84 6 733 26 734 13 972 4 465 2 468 2 856 4 743 4 241 2 107 4 244 4 982 2 864 2 355 4 865 8 612 4 753 4 869 4 987 4 116 64 483 1 482 4 878 8 485 2 766 4 371 8 260 4 262 4 994 4 490 4 995 2 881 4 997 8 
921 2 269 22 645 2 498 2 442 2 73 2 927 2 842 2 982 2 864 2 691 2 506 2 815 2 110 2 753 2 331 2 364 2 547 2 184 6 116 18 728 2 730 2 582 2 943 2 393 2 874 2 907 2 455 2 17 12 794 2 733 8 734 6 672 2 880 2 58 2 196 18 132 2 287 2 435 8 239 2 531 2 
608 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 333 776 151 945 531 591 637 577 937 272 854 644 163 692 390 697 726 320 370 112 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 496 496 202 202 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (1,656) (141,918) (141,918) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (1,656) (141,918) (141,918) 
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException (1,656) (141,918) (141,918) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (1,656) (141,918) (141,918) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (1,656) (141,918) (141,918) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (1,656) (141,918) (141,918) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (1,656) (141,918) (141,918) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (1,656) (141,918) (141,918) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (1,656) (141,918) (141,918) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (1,656) (141,918) (141,918) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (1,656) (141,918) (141,918) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (1,656) (141,918) (141,918) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException (1,656) (141,918) (141,918) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException (1,656) (141,918) (141,918) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 280 286 (1,656) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 280 286 (1,656) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 911 187 479 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 910 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 264 661 181 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 21 264 661 181 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 264 661 181 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 168 181 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:jj_3_4()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.Intern:numIntArrays()I
daikon.Quant:concat([I[I)[I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V | STATEMENT | 523 | stmt -> ;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_72()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:jj_3R_63()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.ModBitTracker:num_samples()I
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
daikon.diff.Node:Node()V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:eq(JJ)Z
jtb.JavaParser:jj_3R_62()Z
utilMDE.MathMDE:gcd([I)I
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:negate(I)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:jj_3R_122()Z
daikon.ProglangType:isIntegral()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:gt(II)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3_1()Z
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_61()Z
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:jj_3R_75()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_133()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_3R_97()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:memberOf(S[S)Z
daikon.Quant:eq(II)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_35()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_52()Z
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression; | STATEMENT | 66038 | stmt -> ;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String; | RETURN | 109561 | return null
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_3R_73()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:jj_3R_80()Z
jtb.JavaParser:jj_3_10()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:slice([III)[I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:min([I)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_2_14(I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_2_21(I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_3_12()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[F)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexGTE([I[I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:findNormalPpt(Ldaikon.PptMap;Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:subsetOf([B[I)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode; | CONDITION | 26193 | if (x) -> if (!x)
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ProglangType:isScalar()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3_3()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:noDups([I)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:jj_2_36(I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression; | STATEMENT | 68469 | stmt -> ;
daikon.ModBitTracker:num_vars()I
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3R_124()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eq(FF)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:jj_3R_76()Z
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:jj_3R_60()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:sameLength([I[I)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_121()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:subsetOf([F[F)Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfo:relate_var()V
daikon.Quant:ne(II)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParser:jj_3_5()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:eltsLTE([II)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String; | RETURN | 7456 | return null
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_58()Z
daikon.inv.Invariant:getConfidence()D
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:getBeginLine()I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:jj_3R_86()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:eltsLteIndex([I)Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern([J)[J
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:jj_3R_115()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_88()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:arity()I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:sign(I)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_13()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:gcd(JJ)J
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0:arity()I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4622 | = null
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:union([I[I)[I
jtb.JavaParser:jj_3R_161()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:jj_3R_116()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:sorted([I)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaCharStream:BeginToken()C
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:jj_3R_69()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.ProglangType:isArray()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:new_ppt()V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.ProglangType:isPseudoArray()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaParser:jj_2_13(I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_87()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
utilMDE.FuzzyFloat:lte(DD)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant; | RETURN | 1102 | return null
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_162()Z
daikon.Quant:eltwiseGT([I)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3_36()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.ModBitTracker:split(I)I
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | STATEMENT | 2966 | stmt -> ;
jtb.JavaParser:jj_3_21()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaCharStream:ReadByte()C
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParser:jj_3R_48()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_81()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode; | RETURN | 21283 | return null
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_25()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_85()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Ppt:Ppt()V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.Invariant:prob_or(DD)D
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:size()I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.ProglangType:dimensions()I
daikon.Quant:eltwiseLT([I)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.Invariants:Invariants()V
jtb.JavaCharStream:FillBuff()V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | STATEMENT | 3418 | stmt -> ;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_22()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:jj_3_18()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_118()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String; | RETURN | 49025 | return null
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression; | STATEMENT | 66792 | stmt -> ;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | RETURN | 1719 | return null
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:lt(II)Z
daikon.Quant:eltsGTE([II)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_2_1(I)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object; | RETURN | 20735 | return null
jtb.JavaCharStream:readChar()C
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:jj_3R_47()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:jj_3_15()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsLtIndex([I)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:logOn()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParser:jj_3R_89()Z
jtb.JavaParser:jj_2_12(I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3_27()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_2_18(I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:jj_3_28()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_68()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode; | ASSIGN | 23053 | = null
jtb.JavaParser:jj_2_5(I)Z
daikon.Quant:eq(DD)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:setDiff([I[I)[I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexLT([I[I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z | STATEMENT | 9323 | stmt -> ;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:jj_3_20()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | RETURN | 15328 | return null
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
951 2 882 2 344 2 558 2 748 4 110 2 437 2 544 2 797 2 
912 2 819 6 270 2 834 2 846 2 34 2 735 6 630 2 774 2 696 6 680 2 
321 4 497 2 671 4 907 2 14 6 473 6 522 2 754 2 154 6 951 2 882 2 678 2 241 6 
821 2 840 4 752 8 753 2 880 10 882 6 731 8 312 8 442 6 240 12 594 16 792 4 412 6 760 26 92 10 571 10 922 10 420 2 950 29 523 10 576 16 951 6 76 8 579 2 504 2 740 16 26 4 27 2 773 2 307 4 
283 6 342 4 
631 2 
400 4 838 2 471 2 234 4 728 2 535 2 113 2 732 2 346 2 659 2 595 2 734 2 289 2 914 2 662 2 795 2 797 2 416 2 667 2 597 2 123 2 126 2 551 2 605 2 504 2 256 2 305 2 194 2 79 2 509 2 882 4 314 2 567 2 262 2 203 2 89 2 885 2 887 4 217 2 705 2 328 2 767 4 951 4 527 2 
612 6 587 2 840 2 405 6 651 4 752 16 511 2 880 16 883 6 882 4 442 4 477 4 240 22 86 2 622 6 594 32 412 4 827 4 760 48 245 4 267 6 92 16 417 4 211 2 571 16 922 16 420 2 96 4 950 56 523 6 576 32 951 4 180 8 76 6 426 2 552 6 740 32 836 4 
123 2 793 2 80 2 
350 2 111 2 81 2 936 2 564 2 425 10 356 2 732 2 693 22 953 2 609 2 742 2 134 2 160 2 
435 2 840 2 752 2 880 2 240 2 845 2 594 2 412 2 760 4 92 2 10 2 494 2 571 2 922 2 676 2 807 2 950 6 523 4 576 2 740 2 302 2 581 2 58 2 
417 4 92 4 612 6 571 4 874 2 922 4 405 6 235 2 950 16 880 4 576 8 240 4 594 8 740 8 26 2 760 12 245 4 
335 4 933 4 402 2 876 4 80 2 536 4 83 2 84 2 200 10 87 2 790 2 481 4 885 4 941 2 793 6 887 4 542 2 448 4 796 2 489 2 546 2 294 2 70 62 348 4 73 2 853 2 214 10 123 8 764 2 460 2 705 2 152 4 524 14 224 2 904 2 710 2 431 4 188 4 868 4 104 2 
281 2 31 2 238 2 7 2 90 2 451 2 599 2 459 2 631 2 186 2 
716 2 230 2 469 2 718 1 588 2 589 2 232 3 470 2 721 2 724 2 725 2 842 2 590 4 341 4 236 2 116 2 119 2 852 1 488 2 856 2 124 2 603 1 21 8 22 1 253 2 505 3 257 2 130 3 131 1 864 2 506 3 865 2 259 1 361 3 611 2 29 2 507 2 870 2 747 3 363 2 749 2 508 6 32 1 37 1 38 2 510 2 615 32 512 2 43 2 513 2 882 34 374 6 517 2 627 4 763 2 144 32 893 3 49 2 387 2 52 2 385 2 900 4 54 2 635 2 638 2 636 2 901 3 769 1 158 3 526 2 905 2 779 2 60 3 783 2 908 1 167 2 787 2 786 2 409 2 653 2 654 5 64 2 788 2 172 24 658 1 794 2 541 16 544 2 175 6 176 16 296 2 921 1 300 2 179 2 927 2 810 2 77 6 814 2 677 6 303 2 304 6 554 6 555 2 308 2 681 2 818 4 557 3 561 2 822 1 562 2 689 2 311 2 566 2 939 2 824 1 444 1 445 2 88 24 568 2 93 16 943 8 829 2 944 2 95 16 453 2 209 2 700 2 215 3 327 2 946 2 218 2 574 2 831 2 97 1 951 32 330 2 833 2 580 2 582 2 101 2 332 1 954 2 465 4 837 2 712 2 955 2 713 4 
882 2 729 2 
882 4 213 2 42 2 
695 2 
466 4 0 2 229 2 468 2 719 4 233 2 723 2 472 2 726 2 3 2 6 2 475 4 480 48 242 20 8 8 246 6 485 2 12 2 491 2 492 4 495 10 738 2 16 2 250 48 252 2 28 8 746 48 751 2 40 48 757 2 514 2 516 4 46 42 47 2 519 2 762 8 520 8 271 4 272 2 274 2 51 2 276 4 277 2 55 2 528 2 57 192 776 2 529 48 59 2 61 2 531 2 63 2 284 2 285 4 785 2 532 10 538 6 539 2 789 48 68 4 545 48 799 8 298 2 72 2 802 2 803 8 804 2 299 2 805 2 75 8 549 2 812 2 811 2 813 2 556 6 820 4 559 4 560 2 310 2 82 28 565 14 85 2 316 2 317 2 825 16 320 2 570 2 94 8 828 146 326 4 329 2 577 2 835 14 333 2 106 48 839 4 340 4 112 2 591 2 844 2 345 2 847 2 849 2 850 2 851 2 120 4 854 2 855 2 857 16 604 4 859 2 353 2 354 4 127 4 128 4 355 8 608 26 606 2 610 26 357 2 359 2 132 4 867 2 133 2 869 2 362 2 613 4 872 2 136 4 873 2 365 48 364 2 875 2 138 6 878 4 368 2 879 2 369 2 370 2 619 2 621 2 373 2 623 2 884 2 625 36 376 8 888 2 890 14 379 2 380 48 892 2 628 4 895 6 382 2 147 2 149 4 151 2 388 2 389 2 390 2 632 48 633 8 634 20 637 2 639 2 903 2 641 146 395 2 396 14 644 2 647 2 162 36 401 2 648 4 164 2 163 2 165 4 408 4 410 2 655 2 657 2 913 24 660 14 174 2 663 22 665 2 666 146 668 4 919 2 669 2 672 8 673 4 675 2 422 20 423 4 185 48 428 4 430 2 189 22 190 2 434 48 191 6 686 2 436 2 438 4 935 4 688 22 690 2 937 2 199 2 441 2 692 2 940 18 446 2 694 2 449 2 942 2 697 2 207 2 452 2 212 4 454 2 456 2 457 26 945 2 216 2 704 2 220 4 949 2 221 4 706 36 464 8 226 2 711 4 714 2 
143 2 371 2 952 2 339 1 
143 2 306 2 
832 2 143 2 781 2 123 2 394 2 117 2 307 2 
143 2 394 2 858 2 
143 2 394 2 53 2 
371 2 386 2 293 2 
143 2 394 2 
743 2 386 2 
143 2 685 2 
371 2 99 2 386 2 
371 2 478 2 569 2 
371 2 107 2 192 2 
371 2 269 2 129 2 
371 2 323 2 815 2 
210 2 386 2 
143 2 707 2 
478 2 703 2 
107 2 439 2 
129 2 614 2 
815 2 575 2 
806 2 386 2 
105 2 815 2 
129 2 206 2 
440 2 107 2 
478 2 861 2 
371 2 99 2 386 2 643 2 
371 2 99 2 543 2 386 2 643 2 
371 2 386 2 228 2 
371 2 720 2 386 2 
166 2 148 2 877 2 25 2 
832 2 11 2 123 2 140 2 
832 2 11 2 515 2 123 2 117 2 140 2 
832 2 143 2 928 2 123 2 394 2 307 2 
315 2 89 2 
832 2 123 2 307 2 198 2 
129 2 150 2 
815 2 816 2 
478 2 18 2 
107 2 403 2 
107 2 930 2 815 2 
537 2 107 2 815 2 
107 2 891 2 815 2 
260 2 107 2 815 2 
35 2 848 6 268 2 493 2 123 2 739 6 832 2 222 2 
809 2 386 2 
142 2 780 4 646 2 920 4 71 2 282 2 947 2 841 2 384 2 352 2 618 2 443 2 254 2 693 6 115 2 642 2 777 2 378 2 
371 2 586 2 
763 2 
467 2 230 2 469 2 588 2 842 2 725 2 341 2 5 2 118 2 487 2 119 2 596 4 248 4 856 2 351 2 501 2 21 8 253 2 502 2 131 2 864 2 870 2 508 2 366 2 38 2 510 2 615 6 512 2 513 2 882 26 266 2 627 4 144 4 894 2 385 2 387 2 900 4 786 2 288 2 409 2 544 2 664 2 175 2 296 2 300 6 179 2 810 2 77 4 814 2 677 6 304 2 555 2 433 2 818 4 561 2 563 2 689 2 196 2 311 2 566 2 939 2 824 2 444 4 204 2 944 2 95 6 943 8 700 2 453 2 458 2 327 4 218 2 831 2 951 26 465 2 713 4 
467 2 230 2 469 2 588 2 842 2 725 2 341 2 5 2 118 2 119 2 596 4 496 2 248 4 856 2 351 2 501 2 21 8 253 2 502 2 131 2 864 2 611 2 870 2 508 2 366 2 38 2 510 2 615 6 512 2 513 2 882 26 266 2 627 4 144 4 383 2 385 2 387 2 900 4 786 2 288 2 409 2 544 2 664 2 175 2 296 2 300 6 179 2 810 2 77 6 814 2 677 6 304 2 555 2 433 2 818 4 561 2 563 2 689 2 311 2 566 2 939 2 824 2 202 2 444 2 204 2 829 2 944 2 95 6 943 8 700 2 453 2 458 2 327 4 218 2 831 2 951 26 465 2 712 2 713 4 
784 2 
347 2 461 2 
715 2 918 2 1 2 717 2 750 2 74 4 649 2 17 2 249 2 141 2 125 4 65 2 620 2 525 2 157 4 173 2 102 2 916 2 584 2 69 2 
715 2 918 2 1 2 717 2 750 2 74 4 649 2 17 2 249 2 141 2 125 4 65 2 620 2 525 2 157 4 263 2 173 2 102 2 243 2 916 2 584 2 69 2 
918 2 1 2 750 2 173 2 17 2 584 2 249 2 69 2 141 2 
918 2 1 2 750 2 173 2 17 2 584 2 249 2 69 2 141 2 
715 2 918 2 1 2 717 2 750 2 74 4 649 2 17 2 249 2 141 2 125 4 65 2 620 2 525 2 157 4 173 2 102 2 916 2 584 2 69 2 
715 2 918 2 1 2 717 2 750 2 74 4 649 2 17 2 249 2 141 2 125 4 65 2 620 2 525 2 157 4 173 2 102 2 916 2 584 2 69 2 
715 2 918 2 1 2 717 2 750 2 74 4 649 2 17 2 249 2 141 2 125 4 65 2 620 2 525 2 157 4 173 2 102 2 916 2 584 2 69 2 
715 2 918 2 1 2 717 2 750 2 74 4 649 2 17 2 249 2 141 2 125 4 65 2 620 2 525 2 157 4 173 2 102 2 916 2 584 2 69 2 
715 2 918 2 1 2 717 2 750 2 649 2 17 2 195 2 249 2 141 2 125 2 65 2 620 2 525 2 173 2 102 2 584 2 916 2 69 2 
715 2 918 2 1 2 717 2 750 2 649 2 17 2 195 2 249 2 141 2 125 2 65 2 620 2 525 2 173 2 102 2 584 2 916 2 69 2 
715 2 918 2 1 2 717 2 750 2 649 2 17 2 195 2 249 2 141 2 125 2 65 2 620 2 525 2 173 2 102 2 584 2 916 2 69 2 
715 2 918 2 1 2 717 2 750 2 649 2 17 2 195 2 249 2 141 2 125 2 65 2 620 2 525 2 173 2 102 2 584 2 916 2 69 2 
715 2 918 2 1 2 717 2 750 2 649 2 17 2 249 2 141 2 125 2 65 2 620 2 525 2 173 2 102 2 584 2 916 2 69 2 
715 2 716 2 1 2 717 2 230 2 469 2 842 2 843 2 239 2 9 2 119 2 596 4 600 2 856 2 17 2 351 2 249 2 125 2 253 2 870 4 750 2 38 2 510 2 39 3 615 8 512 2 141 2 513 2 882 24 620 2 763 2 627 4 144 3 385 2 900 4 155 2 525 2 526 2 902 2 649 2 786 2 409 2 65 2 173 2 544 2 916 2 175 3 69 2 918 2 296 2 74 2 300 6 179 2 810 2 77 6 677 6 304 3 308 2 931 2 818 4 563 2 311 2 566 2 829 2 944 2 95 6 700 2 458 2 831 2 951 24 578 2 102 2 584 2 712 2 713 4 
525 2 183 2 817 2 
525 2 183 2 817 2 
1 2 230 2 336 2 469 2 725 2 842 2 341 4 846 4 735 10 483 2 119 2 600 2 856 2 17 2 351 2 249 2 251 2 125 6 21 4 501 4 24 4 741 2 870 4 36 2 38 2 510 2 615 2 512 2 513 2 882 24 889 2 627 4 144 2 270 4 48 2 899 2 630 4 385 2 900 4 525 2 157 4 770 2 774 4 280 2 530 2 286 2 786 2 533 2 409 2 170 2 912 2 66 2 173 2 544 2 69 2 296 2 800 2 74 4 300 2 179 2 810 2 77 6 929 2 429 2 677 6 817 2 818 4 819 14 561 4 563 2 691 2 311 2 566 2 444 2 696 12 943 4 829 2 944 2 95 2 700 2 458 4 831 2 951 16 331 4 834 4 465 4 712 2 713 4 
870 2 325 2 530 2 600 2 146 2 337 2 170 2 823 2 461 2 512 2 251 2 951 2 882 4 929 2 429 2 360 2 759 2 
336 4 230 2 469 2 842 2 786 2 409 2 656 2 66 2 173 4 544 2 119 2 800 2 296 2 300 2 856 2 351 2 179 2 810 2 77 6 677 6 870 2 818 4 563 2 36 2 510 2 38 2 615 2 512 2 691 2 513 2 566 2 311 2 882 14 889 2 627 4 208 2 144 4 95 2 944 2 829 2 700 2 458 2 831 2 385 2 900 4 951 14 525 2 770 2 712 2 713 4 
1 2 230 2 336 2 469 2 725 2 842 2 341 4 846 4 735 10 483 2 119 2 600 2 856 2 17 2 351 2 249 2 251 2 125 6 21 4 501 4 24 4 741 2 870 4 36 2 38 2 510 2 615 2 512 2 513 2 882 24 889 2 627 4 144 2 270 4 48 2 899 2 630 4 385 2 900 4 525 2 157 4 770 2 774 4 280 2 530 2 286 2 786 2 533 2 409 2 170 2 912 2 66 2 173 2 544 2 69 2 296 2 800 2 74 4 300 2 179 2 810 2 77 6 929 2 429 2 677 6 817 2 818 4 819 14 561 4 563 2 691 2 311 2 566 2 444 1 696 12 943 4 829 2 944 2 95 2 700 2 458 4 831 2 951 16 331 4 834 4 465 4 712 2 713 4 
230 2 469 2 786 2 842 2 409 2 592 4 911 2 476 2 479 2 414 2 736 2 544 2 175 2 484 2 119 2 596 4 296 2 801 2 15 2 300 6 856 2 19 2 351 2 860 2 179 2 810 2 253 2 77 6 553 2 677 6 304 2 679 2 187 2 683 2 870 2 818 4 871 2 510 2 38 2 615 8 512 2 513 2 566 2 311 2 882 24 313 2 372 2 758 2 627 4 144 2 95 6 944 2 829 2 145 2 700 2 458 2 573 2 831 2 521 2 385 2 900 4 951 18 712 2 778 2 227 2 906 2 713 4 
78 2 288 6 615 2 882 2 733 4 915 2 737 2 175 3 490 2 596 2 324 1 95 2 144 3 598 2 297 3 177 2 300 2 50 2 178 2 275 2 951 2 253 2 358 2 771 2 304 3 
78 2 288 6 615 2 882 2 733 4 915 2 737 2 175 2 490 2 596 2 95 2 144 2 598 2 297 2 177 2 300 2 50 2 178 2 275 2 951 2 253 2 358 2 771 2 304 2 
78 2 288 6 615 2 882 2 733 4 915 2 737 2 175 2 490 2 596 2 95 2 144 2 598 2 297 2 177 2 300 2 50 2 178 2 275 2 951 2 253 2 358 2 771 2 304 2 
432 4 782 4 169 2 727 3 615 2 617 3 880 2 4 2 171 3 882 10 442 2 114 2 593 2 594 2 541 2 290 2 244 4 760 4 175 3 761 2 92 2 93 2 144 3 571 2 702 4 602 2 922 2 572 4 629 2 950 6 951 4 576 2 278 2 76 4 253 2 708 2 740 2 771 2 866 6 398 2 
782 4 169 2 727 2 4 2 171 2 240 2 593 2 114 2 594 2 541 2 290 2 244 4 175 2 922 2 602 2 420 2 253 2 76 4 740 2 866 6 432 4 752 2 615 2 617 2 880 2 882 10 442 2 760 4 761 2 93 2 92 2 144 2 571 2 702 4 572 4 629 2 950 4 576 2 951 4 278 2 708 2 771 2 398 2 
782 4 169 2 727 2 4 2 171 2 240 2 593 2 114 2 594 2 541 2 290 2 244 4 175 2 922 2 602 2 420 2 253 2 76 4 740 2 866 6 432 4 752 2 615 2 617 2 880 2 882 10 442 2 760 4 761 2 93 2 92 2 144 2 571 2 702 4 572 4 629 2 950 4 576 2 951 4 278 2 708 2 771 2 398 2 
782 4 169 2 727 2 4 2 171 2 240 2 593 2 114 2 594 2 541 2 290 2 244 4 175 2 922 2 602 2 420 2 253 2 76 4 740 2 866 6 432 4 752 2 615 2 617 2 880 2 882 10 442 2 760 4 761 2 93 2 92 2 144 2 571 2 702 4 572 4 629 2 950 4 576 2 951 4 278 2 708 2 771 2 398 2 
782 4 169 2 727 2 4 2 171 2 240 4 593 2 114 2 594 2 541 2 290 2 244 4 175 2 922 2 602 2 420 4 253 2 76 4 740 2 866 6 432 4 752 4 615 2 617 2 880 2 882 10 442 2 760 4 761 2 93 2 92 2 144 2 571 2 702 4 572 4 629 2 950 4 576 2 951 4 278 2 708 2 771 2 398 2 
295 2 343 2 498 2 687 2 640 2 698 2 
910 2 204 2 923 2 205 2 948 2 826 2 698 2 
932 2 404 2 62 2 137 2 139 2 882 10 474 2 45 2 886 2 482 2 291 2 377 2 119 2 546 1 699 2 418 2 626 2 121 2 830 1 13 1 674 1 951 8 863 2 100 2 104 1 334 2 
2 2 405 4 752 2 534 2 407 2 880 6 882 6 883 4 44 2 477 2 201 2 442 2 240 3 346 2 594 6 795 2 760 12 417 2 92 6 571 6 922 6 420 2 950 16 951 6 180 2 576 6 768 2 76 4 740 6 255 2 
432 2 108 2 338 2 702 2 419 2 287 2 261 4 301 1 197 2 755 2 881 2 951 1 756 2 882 1 791 2 462 2 540 7 244 2 
432 2 108 4 338 2 702 2 419 4 287 2 261 4 197 2 755 2 881 2 756 2 791 4 462 2 540 6 244 2 
432 2 108 8 338 2 702 2 419 8 287 2 261 4 301 1 197 2 755 2 881 2 951 1 756 8 882 1 791 8 462 6 540 10 244 2 
432 2 108 2 338 2 702 2 419 2 287 2 261 2 197 2 755 2 881 2 791 2 540 2 244 2 
399 1 161 4 909 1 842 4 411 2 661 2 247 2 601 1 21 4 23 2 550 2 181 2 77 12 503 2 427 2 309 1 193 2 30 2 934 2 38 4 616 1 513 4 882 12 264 2 627 6 829 4 381 2 897 1 153 2 900 6 951 12 98 2 463 2 712 4 
279 2 645 2 585 2 109 2 652 2 842 2 237 2 730 2 661 2 415 2 917 2 486 2 292 2 798 2 670 4 247 2 349 2 925 2 500 2 862 2 21 22 181 2 550 2 77 30 258 2 745 2 744 2 684 2 193 2 934 2 38 2 367 2 938 2 513 2 882 30 444 2 624 2 375 2 447 2 264 2 318 2 319 4 518 2 627 14 322 2 896 2 701 2 273 4 219 2 765 2 153 2 900 14 391 2 951 30 156 2 392 2 463 2 583 2 103 2 772 2 709 2 56 2 159 2 
161 4 231 2 193 2 33 2 722 2 934 2 842 2 406 2 38 2 41 2 513 2 882 18 413 2 447 2 661 2 264 2 265 2 322 2 627 8 829 4 601 2 548 2 701 2 455 2 499 2 219 4 153 2 900 8 424 2 21 14 951 18 181 2 550 2 503 2 77 18 427 2 184 2 463 2 258 2 775 2 712 4 
399 2 231 2 650 2 722 2 909 2 168 2 842 2 411 10 67 2 661 2 122 6 547 4 601 2 924 2 925 4 808 2 421 4 20 2 21 14 23 2 550 2 181 2 182 2 77 38 607 2 258 2 309 2 682 2 135 4 193 2 30 10 934 2 38 2 616 6 513 2 882 28 444 2 447 6 264 2 265 2 91 2 450 4 518 4 627 14 322 6 829 10 381 2 701 6 898 4 219 8 766 2 153 2 900 14 951 26 98 2 223 2 225 2 463 2 393 2 583 4 712 10 397 2 
926 2 

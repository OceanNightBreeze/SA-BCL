#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.NullPointerException 616 30 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 778 
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (120,212) (120,212) (35,66,132,425,531) (35,66,132,425,531) (35,66,132,425,531) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 626 537 292 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V ERROR java.lang.ArrayIndexOutOfBoundsException 122 
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 407 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 407 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 407 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 111 454 777 151 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 635 79 500 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 657 500 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 635 79 500 
daikon.test.VarInfoNameTest:testJML()V FAILED junit.framework.AssertionFailedError 657 500 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:subsetOf([S[S)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:subsetOf([F[F)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.InvMap:InvMap()V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern:numIntArrays()I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I | CONSTANT | 69931 | 1 -> 0
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I | STATEMENT | 65242 | stmt -> ;
daikon.Quant:gt(II)Z
daikon.Quant:gte(II)Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.Quant:noDups([I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.ValueTuple:isMissing(I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z | OPERATOR | 155198 | < -> >
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lt(II)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | ASSIGN | 24033 | = null
daikon.PptSlice0:arity()I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isIntegral()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set; | CONDITION | 16702 | if (x) -> if (!x)
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsGtIndex([I)Z | OPERATOR | 179154 | ++ -> --
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd([I)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:ne(II)Z
utilMDE.Intern:intern([J)[J
daikon.inv.Invariant:logDetail()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:eltsLtIndex([I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.PptSlice1:num_samples()I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Assert:assertTrue(Z)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaCharStream:getEndLine()I
daikon.ValueTuple:size()I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.diff.RootNode:RootNode()V
daikon.diff.Node:Node()V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eq(FF)Z
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:slice([III)[I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.ProglangType:isScalar()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:sameLength([I[I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:subsetOf([D[D)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName:applySize()Ldaikon.VarInfoName; | CONDITION | 27362 | if (x) -> if (!x)
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(D[F)Z
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Debug:logOn()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:negate(I)I
daikon.Quant:eltsLT([II)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eq(II)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.InvMap:toString()Ljava.lang.String; | ASSIGN | 3056 | = null
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_sets()I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:isReverse([I[I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.Invariant:justified()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.Prestate:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ProglangType:isArray()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:sign(I)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:eltsGT([II)Z
jtb.JavaCharStream:readChar()C | CONDITION | 5637 | if (x) -> if (!x)
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(S[S)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant; | RETURN | 7501 | return null
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_ntk()I
daikon.Debug:logDetail()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseLT([I)Z | CONSTANT | 175803 | 0 -> 1
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([D)[D
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptName:isEnterPoint()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:subsetOf([I[I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:memberOf(F[D)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:intern([I)[I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object; | RETURN | 76740 | return null
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Ppt:Ppt()V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:size()I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.ProglangType:isPseudoArray()Z
daikon.ModBitTracker:num_vars()I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.Invariant:logOn()Z
daikon.Quant:setDiff([I[I)[I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.ArraysMDE:min([I)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ModBitTracker:num_samples()I
daikon.Quant:eq(DD)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexEqual([I[I)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set; | RETURN | 94892 | return null
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:split(I)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptSlice1:arity()I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.Quant:lexLT([I[I)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.ProglangType:baseIsScalar()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.PptSlice2:arity()I
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:eltsEqual([II)Z | OPERATOR | 161601 | < -> >
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([D)D
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONSTANT | 14703 | 0 -> 1
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.FuzzyFloat:eq(DD)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
757 2 120 2 468 2 470 4 212 2 507 2 57 2 601 2 400 2 
272 6 28 2 365 2 333 2 185 2 516 2 282 2 32 2 159 6 523 2 39 6 
685 2 331 2 29 6 182 6 44 2 150 6 120 2 320 2 212 2 542 4 699 2 684 6 370 4 
345 10 463 8 687 16 660 10 373 2 442 8 3 8 183 2 280 2 445 8 212 6 581 6 725 16 161 6 524 10 499 4 526 16 12 4 144 10 753 4 145 12 240 2 563 10 96 2 290 2 120 6 737 30 248 4 544 26 461 2 
703 6 25 4 
760 2 
30 2 616 2 311 2 118 2 
345 4 144 4 145 5 687 8 660 4 304 6 563 4 70 6 434 2 737 14 192 2 248 2 751 4 725 8 262 4 544 12 526 8 
75 8 492 4 465 2 375 2 376 4 646 62 278 2 210 4 469 10 381 2 403 2 728 4 40 4 195 2 448 2 361 4 330 2 14 2 431 4 167 2 239 14 433 4 755 2 95 2 676 2 535 2 736 4 386 2 536 2 390 4 506 2 541 6 416 4 656 2 125 2 101 4 439 2 718 4 369 2 490 10 
214 2 778 2 268 2 303 2 589 2 427 2 655 2 566 2 739 2 194 2 760 2 
419 2 75 2 546 2 421 2 620 2 750 2 467 2 33 2 428 4 36 2 355 2 429 2 261 2 584 2 601 2 285 2 630 2 196 2 431 2 15 2 93 2 561 2 238 2 754 2 733 2 478 2 19 2 736 4 484 4 460 2 656 2 175 2 683 2 461 2 291 2 
345 16 372 4 660 16 687 32 510 6 442 18 550 4 183 2 104 2 648 6 156 4 445 6 599 2 9 4 212 4 751 4 581 4 725 32 161 4 260 2 524 6 262 4 526 32 12 2 144 16 701 6 145 22 148 6 16 8 705 4 304 6 384 2 563 16 504 2 70 6 120 4 737 56 21 2 544 48 
75 2 541 2 439 2 
585 2 359 2 686 2 154 2 663 2 643 2 308 10 255 2 590 2 80 2 697 2 774 2 683 2 784 22 
638 2 395 4 594 1 494 4 596 2 352 2 400 2 62 1 698 6 212 21 358 2 265 1 301 2 66 2 112 2 605 2 364 1 114 2 502 2 610 1 609 6 306 4 219 2 120 23 715 2 759 2 570 2 222 4 132 2 225 1 226 2 374 1 721 2 573 1 275 2 577 2 770 4 279 2 517 2 426 1 82 1 35 2 583 4 322 2 233 2 234 2 143 2 632 1 528 1 674 1 780 2 675 2 201 2 782 1 534 2 203 2 47 2 204 1 436 2 100 4 437 4 491 2 
51 2 
120 2 485 2 
120 4 457 2 87 2 
236 2 394 2 292 2 631 2 288 2 641 2 587 2 188 2 781 2 537 2 773 2 519 4 337 2 540 2 567 2 220 2 110 2 557 2 626 2 341 2 326 2 
763 1 158 2 310 2 397 2 
726 2 397 2 
75 2 171 2 753 2 108 2 126 2 276 2 397 2 
171 2 103 2 
171 2 397 2 564 2 
423 2 160 2 310 2 
171 2 397 2 
748 2 
401 2 397 2 
160 2 310 2 115 2 
48 2 38 2 310 2 
349 2 37 2 310 2 
83 2 310 2 729 2 
105 2 310 2 168 2 
313 2 160 2 
230 2 397 2 
545 2 
629 2 37 2 
83 2 89 2 
105 2 228 2 
160 2 475 2 
105 2 532 2 
122 2 83 2 
621 2 37 2 
181 2 38 2 
673 2 160 2 310 2 115 2 
673 2 160 2 310 2 56 2 115 2 
521 2 160 2 310 2 
160 2 310 2 440 2 
746 2 483 2 297 2 129 2 
131 2 75 2 529 2 276 2 
131 2 75 2 266 2 529 2 126 2 276 2 
628 2 75 2 171 2 753 2 276 2 397 2 
19 2 63 2 
75 2 753 2 252 2 276 2 
518 2 83 2 
105 2 679 2 
382 2 38 2 
215 2 37 2 
105 2 712 2 37 2 
105 2 37 2 269 2 
105 2 37 2 208 2 
105 2 37 2 305 2 
26 2 75 2 745 2 276 2 61 2 88 6 473 6 99 2 
160 2 611 2 
54 2 43 4 17 2 5 2 169 2 68 2 551 2 7 2 336 2 246 2 402 2 579 2 637 4 321 2 141 2 127 2 525 2 784 6 
410 2 310 2 
201 2 
395 4 494 5 294 2 596 6 399 2 400 2 109 3 698 4 212 26 301 2 112 2 605 2 114 6 502 2 609 6 306 3 117 2 119 2 120 26 710 2 613 2 309 2 715 2 123 2 312 2 222 3 226 2 424 2 517 2 522 2 322 2 234 2 143 2 634 2 332 2 241 2 533 2 534 2 47 2 437 4 247 8 638 2 249 2 346 2 253 2 352 2 644 4 257 4 64 2 358 2 360 2 69 2 172 2 271 2 759 2 765 2 77 2 275 6 768 2 279 2 281 2 665 2 772 2 580 2 380 4 583 4 586 2 780 2 675 2 203 2 100 4 391 2 682 2 491 2 
395 4 494 4 596 6 399 2 400 2 109 2 698 5 212 26 301 2 112 2 605 2 114 6 502 2 609 6 306 2 117 2 120 26 710 2 613 2 309 2 715 2 123 2 312 2 222 2 226 2 424 2 513 2 517 2 522 2 322 2 234 2 143 2 634 2 241 2 45 2 533 2 534 2 47 2 437 4 247 8 638 2 249 2 346 2 253 2 352 2 644 4 257 4 64 2 358 2 164 2 360 2 69 2 172 2 271 2 570 1 759 2 177 2 765 2 77 2 275 6 768 2 577 1 279 2 281 2 665 2 772 2 580 2 380 4 583 4 586 2 780 2 675 2 203 2 100 4 391 2 682 2 491 2 
471 2 
328 2 553 2 
27 2 363 2 28 2 766 2 272 2 432 2 595 2 231 2 735 2 243 4 244 4 10 2 498 2 582 2 523 2 39 2 761 2 90 2 
52 2 6 2 639 2 595 2 256 2 405 2 498 2 10 2 212 6 259 2 600 2 159 6 559 2 163 4 13 4 112 2 605 2 363 4 609 4 654 2 120 12 565 2 458 2 715 2 22 6 761 2 618 4 27 2 134 4 766 2 272 6 28 4 273 2 619 2 511 4 231 2 575 2 185 2 279 2 377 2 282 2 191 2 622 2 582 2 583 2 523 4 323 2 322 2 39 4 234 2 90 2 286 2 432 2 198 2 200 2 735 2 534 2 244 4 243 4 100 2 
52 2 6 2 639 2 595 2 256 2 405 2 498 2 10 2 212 6 259 2 600 2 159 6 559 2 163 4 13 4 112 2 605 2 363 4 609 4 654 2 120 12 565 2 458 2 715 2 22 6 761 2 618 4 27 2 134 4 766 2 272 4 28 4 273 2 619 2 511 4 231 2 575 2 516 2 279 2 377 2 282 2 191 2 622 2 582 2 583 2 523 4 323 2 322 2 39 6 234 2 90 2 286 2 432 2 198 2 200 2 735 2 534 2 244 4 243 4 100 2 
52 2 6 2 639 2 595 2 256 2 405 2 498 2 10 2 212 6 259 2 600 2 159 6 559 2 163 4 13 4 112 2 605 2 363 4 365 2 609 4 654 2 120 12 565 2 458 2 715 2 22 6 761 2 618 8 27 2 134 4 766 2 272 6 28 4 273 2 619 2 511 4 231 2 575 2 279 2 377 2 282 2 191 2 622 2 582 2 583 2 523 4 323 2 322 2 39 6 234 2 90 2 286 2 432 2 198 2 200 2 735 2 534 2 244 4 243 4 100 2 
52 2 6 2 639 2 595 2 256 2 405 2 498 2 10 2 212 6 259 2 600 2 159 8 559 2 163 4 13 4 112 2 605 2 363 4 365 2 609 4 654 2 120 12 565 2 458 2 715 2 22 10 761 2 618 8 27 2 134 4 766 2 272 6 28 4 273 2 619 2 511 8 231 2 575 2 516 2 279 2 377 2 282 2 191 2 622 2 582 2 583 2 523 4 323 2 322 2 39 8 234 2 90 2 286 2 432 2 198 2 200 2 735 2 534 2 244 4 243 4 100 2 
52 2 6 2 639 2 595 2 256 2 405 2 498 2 10 2 212 6 259 2 600 2 159 6 559 2 163 4 13 4 112 2 605 2 363 4 365 2 609 4 654 2 120 12 565 2 458 2 715 2 22 10 761 2 618 8 27 2 134 4 766 2 272 6 28 4 273 2 619 2 511 8 231 2 575 2 279 2 377 2 282 2 191 2 622 2 582 2 583 2 523 4 323 2 322 2 39 6 234 2 90 2 286 2 432 2 198 2 200 2 735 2 534 2 244 4 243 4 100 2 
395 4 2 2 6 2 396 2 595 2 596 8 400 2 8 2 212 24 10 2 405 4 600 2 13 8 605 2 606 6 609 6 18 2 613 2 614 6 418 6 417 6 22 2 222 2 618 2 27 2 28 4 226 2 31 1 229 2 619 2 231 2 622 2 625 7 39 8 234 2 627 10 235 6 42 2 633 2 432 2 244 4 243 4 47 2 437 4 247 4 51 6 638 2 52 2 249 2 53 6 444 2 639 2 645 2 256 2 259 2 652 2 455 4 653 6 456 2 654 2 457 6 458 4 76 2 272 4 659 6 464 2 273 2 77 2 275 6 279 2 282 4 281 2 84 8 90 2 286 2 472 7 672 2 675 2 289 1 100 4 485 6 487 2 491 2 494 2 690 2 698 6 498 2 298 2 301 2 112 2 114 6 704 1 502 2 306 2 120 46 710 4 709 2 713 1 309 2 715 2 717 4 312 2 509 2 134 6 138 6 139 6 318 2 516 4 517 2 140 2 322 2 523 4 324 6 329 1 143 2 146 1 735 2 534 2 538 2 543 2 740 2 741 2 342 1 348 2 352 2 159 12 559 2 358 12 162 2 163 4 360 2 363 4 366 6 565 2 759 2 570 2 368 1 761 2 178 2 766 2 575 2 576 2 577 2 377 2 772 2 191 2 580 2 380 4 583 4 582 2 776 2 198 2 780 2 200 2 202 2 387 2 388 1 203 2 206 6 
2 2 395 4 494 2 6 2 396 2 595 2 596 8 690 2 400 2 8 2 405 4 10 2 498 2 212 26 698 6 600 2 298 2 301 2 13 8 112 2 605 2 606 6 114 6 502 2 609 6 306 2 18 2 120 48 709 2 710 4 613 2 309 4 614 6 715 2 417 6 418 6 717 4 22 2 312 4 222 2 618 6 509 2 27 2 134 6 226 2 28 4 229 2 619 2 138 6 231 2 139 6 318 2 517 2 622 2 140 2 324 6 523 4 322 2 39 8 234 2 235 6 627 10 42 2 143 2 633 2 432 2 735 2 243 4 244 4 534 2 538 2 47 2 247 8 437 4 543 2 740 2 741 2 51 6 52 2 638 2 249 2 53 6 348 2 444 2 639 2 644 2 352 2 645 2 256 2 259 2 159 12 559 2 358 12 162 2 163 4 652 2 360 2 363 4 365 4 366 6 455 4 653 6 654 2 456 2 565 2 457 6 458 4 570 2 759 2 572 2 761 2 178 2 76 2 659 6 272 8 766 2 464 2 77 2 273 2 275 6 576 2 575 2 577 2 189 2 279 2 281 4 282 4 377 2 772 2 380 4 580 2 191 2 84 8 582 2 583 4 90 2 776 2 286 2 672 2 198 2 780 2 675 2 200 2 202 2 387 2 203 2 206 6 100 4 485 6 487 2 491 2 
2 2 395 4 494 2 6 2 396 2 595 2 596 8 690 2 400 2 8 2 405 4 10 2 498 2 212 26 698 6 600 2 298 2 301 2 13 8 112 2 605 2 606 6 114 6 502 2 609 6 306 2 18 2 120 48 709 2 710 4 613 2 309 4 614 6 715 2 417 6 418 6 717 4 312 4 22 6 222 2 618 6 509 2 27 2 134 6 226 2 28 4 229 2 619 2 511 4 138 6 231 2 139 6 318 2 517 2 622 2 140 2 324 6 523 4 322 2 39 8 234 2 235 6 627 10 42 2 143 2 633 2 432 2 735 2 243 4 244 4 534 2 538 2 47 2 247 8 437 4 543 2 740 2 741 2 51 6 52 2 638 2 249 2 53 6 348 2 444 2 639 2 644 2 352 2 645 2 256 2 259 2 159 12 559 2 358 12 162 2 163 4 652 2 360 2 363 4 365 4 366 6 455 4 653 6 654 2 456 2 565 2 457 6 458 4 759 2 570 2 572 2 761 2 178 2 76 2 659 6 272 8 766 2 464 2 77 2 273 2 275 6 576 2 575 2 577 2 189 2 279 2 281 4 282 4 377 2 772 2 380 4 580 2 191 2 84 8 582 2 583 4 90 2 776 2 286 2 672 2 198 2 780 2 675 2 200 2 202 2 387 2 203 2 206 6 100 4 485 6 487 2 491 2 
395 4 2 2 6 2 396 2 595 2 596 12 400 2 8 2 209 6 212 24 10 2 405 4 600 2 13 8 605 2 606 12 609 6 18 2 613 4 414 2 614 6 418 6 417 6 22 6 222 4 618 6 27 2 224 6 28 4 226 2 229 2 619 2 231 2 622 2 39 10 234 2 235 12 627 8 42 2 633 2 432 2 244 4 243 4 47 2 437 4 247 10 51 12 638 2 52 2 249 2 53 6 444 2 639 2 58 2 644 2 645 2 256 2 259 2 652 2 455 4 653 6 654 2 457 12 458 4 658 6 76 2 272 10 659 6 464 2 273 2 77 2 275 8 279 2 282 4 281 4 84 8 90 2 667 2 286 2 672 2 287 6 675 2 97 2 98 6 100 4 485 12 487 2 491 2 494 4 690 2 698 6 498 2 298 2 301 2 112 2 114 8 502 2 306 4 120 52 710 4 709 2 309 4 715 2 717 4 312 4 509 2 134 6 136 2 511 4 138 6 139 6 318 2 722 6 516 2 517 2 140 2 322 2 523 4 324 6 142 6 143 2 735 2 534 2 538 2 543 2 740 2 741 2 348 2 155 2 352 2 159 16 559 2 358 10 162 2 163 4 360 4 363 4 365 4 366 6 756 6 565 2 569 6 570 2 759 2 572 2 761 2 178 2 766 2 767 2 575 2 576 2 185 2 577 2 189 2 377 2 772 2 580 2 191 2 380 6 583 4 582 2 776 2 198 2 780 2 200 2 202 2 387 2 203 2 206 12 393 2 
618 6 27 2 134 2 766 2 272 6 28 4 273 2 595 2 511 4 575 2 282 2 377 2 191 2 622 2 10 2 498 2 259 2 159 4 600 2 523 4 39 6 559 2 90 2 286 2 13 2 163 2 365 2 198 2 200 2 243 2 244 2 120 4 565 2 22 4 761 2 
395 4 494 3 595 2 596 8 400 2 498 2 10 2 212 24 698 6 600 2 301 2 13 2 302 2 112 2 605 2 114 6 502 2 707 2 609 6 306 3 505 2 120 28 710 2 715 2 22 2 222 3 618 6 27 2 134 2 28 4 226 2 425 2 517 2 622 2 523 4 322 2 39 6 234 2 627 2 143 2 531 2 244 2 243 2 534 2 47 2 437 4 638 2 249 2 547 2 549 2 352 2 256 2 259 2 159 4 559 2 752 2 358 4 163 2 365 2 456 2 565 2 570 2 759 2 761 2 272 6 766 2 273 2 77 2 275 6 575 2 577 2 279 2 282 2 377 2 191 2 580 2 380 4 583 4 90 2 286 2 198 2 780 2 675 2 200 2 201 2 482 3 203 2 100 4 491 2 
52 2 6 2 639 2 595 2 256 2 405 2 498 2 10 2 212 6 259 2 600 2 159 6 559 2 163 4 13 4 112 2 605 2 363 4 365 2 609 4 654 2 120 12 565 2 458 2 715 2 22 10 761 2 618 8 27 2 134 4 766 2 272 6 28 4 273 2 619 2 511 8 231 2 575 2 279 2 377 2 282 2 191 2 622 2 582 2 583 2 523 4 323 2 322 2 39 6 234 2 90 2 286 2 432 2 198 2 200 2 735 2 534 2 244 4 243 4 100 2 
52 2 6 2 639 2 595 2 256 2 405 2 212 6 10 2 498 2 259 2 600 2 159 8 163 4 13 4 112 2 605 2 363 4 365 2 608 4 609 4 654 2 120 12 565 2 458 2 715 2 22 10 761 2 618 8 27 2 134 4 766 2 272 8 28 4 273 2 619 2 511 8 231 2 575 2 185 2 279 2 377 2 282 2 771 2 191 2 622 2 582 2 583 2 523 4 322 2 39 6 234 2 90 2 286 2 432 2 198 2 200 2 735 2 534 2 243 4 244 4 100 2 205 2 
191 2 622 2 404 2 
191 2 622 2 404 2 
395 4 494 2 6 2 496 2 596 2 400 2 404 2 405 2 698 6 212 16 10 2 498 2 298 2 407 2 301 2 13 4 112 2 605 2 501 2 114 2 502 2 609 6 120 24 710 4 309 4 715 2 717 2 23 2 312 4 22 6 618 6 27 4 135 2 134 4 226 2 28 4 511 4 515 2 516 4 517 2 622 4 324 2 322 2 523 4 39 12 234 2 627 2 143 2 633 2 432 2 732 2 735 2 534 2 243 2 244 2 435 2 47 2 247 4 437 4 543 2 50 2 638 2 249 2 744 2 639 2 351 2 352 2 555 2 649 2 159 16 358 4 449 2 163 2 450 2 363 4 365 4 455 2 654 2 172 4 565 2 367 2 458 4 570 2 759 2 462 2 272 12 275 2 185 4 577 2 279 2 281 4 282 4 772 2 580 2 191 4 86 2 583 4 286 2 780 2 675 2 203 2 100 4 207 2 491 2 
328 2 627 2 112 2 672 2 383 2 351 2 231 2 242 2 476 2 455 2 120 4 212 2 207 2 741 2 324 2 23 2 358 2 
395 4 494 4 6 2 496 2 596 2 400 2 404 2 405 4 698 6 212 16 10 2 498 2 298 2 407 2 301 2 13 4 112 2 605 2 501 2 114 2 502 2 609 6 120 24 710 4 309 4 715 2 717 2 23 2 312 4 22 6 720 2 618 6 27 4 134 4 226 2 28 4 619 2 511 4 515 2 516 4 517 2 622 4 324 2 322 2 523 4 39 12 234 2 143 2 633 2 432 2 732 2 735 2 534 2 243 2 244 2 435 2 47 2 247 4 437 4 543 2 638 2 249 2 347 2 548 2 744 4 639 2 351 2 352 2 555 2 649 2 159 16 358 2 163 2 449 2 450 2 363 4 365 4 453 2 654 2 172 4 565 2 367 2 458 4 570 2 759 2 272 12 275 2 185 4 577 2 279 2 281 4 282 4 772 2 580 2 191 4 583 4 669 2 286 2 780 2 675 2 203 2 100 4 207 2 491 2 
395 4 494 2 6 2 496 2 596 2 398 2 400 2 404 2 405 4 698 6 212 16 10 2 498 2 298 2 407 2 301 2 13 4 112 2 605 2 501 2 114 2 502 2 609 6 120 24 710 4 309 4 715 2 717 2 23 2 312 4 22 6 618 6 27 4 134 4 226 2 28 4 619 2 511 4 515 2 516 4 517 2 622 4 324 2 322 2 523 4 39 12 234 2 627 2 143 2 633 2 432 2 732 2 735 2 534 2 243 2 244 2 435 2 47 2 247 4 437 4 543 2 638 2 249 2 744 2 152 2 639 2 351 2 352 2 59 2 555 2 649 2 159 16 358 4 65 2 449 2 163 2 450 2 363 4 365 4 455 2 654 2 172 4 565 2 367 2 458 4 570 2 759 2 272 12 275 2 185 4 577 2 279 2 281 4 282 4 772 2 580 2 191 4 583 4 286 2 780 2 675 2 477 2 203 2 100 4 207 2 491 2 
668 2 454 2 111 2 157 2 107 2 777 2 413 2 151 2 747 2 
222 3 593 2 494 3 77 2 661 2 275 2 596 2 574 2 723 3 254 2 319 2 696 2 380 2 212 2 258 4 356 2 527 1 264 2 165 2 114 2 199 2 306 3 120 2 613 6 343 2 
222 2 593 2 494 2 77 2 661 2 275 2 596 2 574 2 723 2 254 2 319 2 696 2 380 2 212 2 258 4 356 2 264 2 165 2 114 2 199 2 306 2 120 2 613 6 343 2 
222 2 593 2 494 2 77 2 661 2 275 2 596 2 574 2 723 2 254 2 319 2 696 2 380 2 212 2 258 4 356 2 264 2 165 2 114 2 199 2 306 2 120 2 613 6 343 2 
592 2 0 2 345 2 222 3 314 4 593 2 251 4 660 2 494 3 687 2 77 2 153 2 295 4 662 4 596 2 184 2 277 6 445 4 60 3 623 2 212 4 725 2 161 2 299 4 526 2 430 2 144 2 562 2 503 2 563 2 149 2 120 10 737 5 338 2 678 3 591 2 716 2 124 2 544 4 571 3 
592 2 0 2 345 2 222 2 314 4 593 2 251 4 660 2 494 2 687 2 442 2 77 2 153 2 295 4 183 2 662 4 596 2 184 2 277 6 445 4 60 2 623 2 212 4 725 2 161 2 299 4 526 2 430 2 144 2 145 2 562 2 503 2 563 2 149 2 120 10 737 4 338 2 678 2 591 2 716 2 124 2 544 4 571 2 
592 2 0 2 345 2 222 2 314 4 593 2 251 4 660 2 494 2 687 2 442 2 77 2 153 2 295 4 183 2 662 4 596 2 184 2 277 6 445 4 60 2 623 2 212 4 725 2 161 2 299 4 526 2 430 2 144 2 145 2 562 2 503 2 563 2 149 2 120 10 737 4 338 2 678 2 591 2 716 2 124 2 544 4 571 2 
592 2 0 2 345 2 222 2 314 4 593 2 251 4 660 2 494 2 687 2 442 2 77 2 153 2 295 4 183 2 662 4 596 2 184 2 277 6 445 4 60 2 623 2 212 4 725 2 161 2 299 4 526 2 430 2 144 2 145 2 562 2 503 2 563 2 149 2 120 10 737 4 338 2 678 2 591 2 716 2 124 2 544 4 571 2 
592 2 0 2 345 2 222 2 314 4 593 2 251 4 660 2 494 2 687 2 442 4 77 2 153 2 295 4 183 4 662 4 596 2 184 2 277 6 445 4 60 2 623 2 212 4 725 2 161 2 299 4 526 2 430 2 144 2 145 4 562 2 503 2 563 2 149 2 120 10 737 4 338 2 678 2 591 2 716 2 124 2 544 4 571 2 
180 2 743 2 72 2 607 2 640 2 775 2 
46 2 520 2 743 2 681 2 253 2 334 2 91 2 
293 1 422 2 4 2 316 1 274 2 647 2 578 2 694 2 212 8 624 2 327 2 448 1 651 2 702 2 606 2 734 2 534 2 120 10 612 1 386 1 539 2 20 2 636 2 415 2 221 2 74 2 
345 6 687 6 660 6 442 3 689 2 183 2 317 2 445 4 379 2 599 1 212 6 406 2 725 6 556 2 161 2 262 2 408 2 526 6 144 6 145 4 16 2 148 4 530 2 197 2 705 2 563 6 70 4 120 6 737 15 173 2 544 12 
420 2 452 2 295 2 662 2 514 2 120 1 724 2 446 1 270 7 190 2 212 1 211 2 340 2 213 2 617 2 299 2 24 2 73 4 
420 2 452 2 295 2 662 2 514 2 724 2 270 6 190 2 211 4 340 2 213 2 617 4 299 2 24 4 73 4 
420 2 452 2 295 2 662 2 514 2 120 1 724 2 446 1 270 10 190 2 212 1 211 8 340 8 213 6 617 8 299 2 24 8 73 4 
420 2 452 2 295 2 662 2 514 2 724 2 270 2 190 2 211 2 617 2 299 2 24 2 73 2 
1 4 395 10 493 2 692 2 598 2 698 18 212 26 409 2 11 2 602 2 603 2 500 2 502 2 217 2 218 2 412 2 120 26 137 2 315 2 512 2 232 4 727 2 41 2 147 2 730 2 237 2 635 2 335 2 245 6 437 8 339 2 250 2 350 2 554 4 354 2 447 2 263 1 267 2 459 2 570 2 762 2 179 4 78 2 769 3 577 2 187 2 466 2 378 2 79 2 92 2 474 2 385 16 677 2 479 2 481 4 203 2 389 2 488 2 392 4 783 2 491 2 
441 2 395 14 495 4 688 2 350 6 497 4 552 4 597 4 693 2 212 30 698 40 354 6 558 2 409 4 700 12 500 2 604 2 166 2 267 2 560 2 502 2 170 2 307 6 218 2 120 32 711 4 758 2 714 2 615 2 176 4 570 8 657 2 128 2 508 2 762 4 133 4 227 2 315 6 769 2 187 2 577 8 79 2 378 2 81 2 34 2 325 4 670 4 671 2 731 12 237 2 779 2 635 2 94 2 335 2 385 14 245 8 481 2 389 2 203 2 486 2 437 14 680 8 738 4 488 2 783 2 491 2 
250 2 441 2 395 8 78 2 512 2 577 4 187 2 692 2 693 1 664 2 378 2 79 2 598 4 698 14 212 20 602 2 670 1 700 2 92 2 500 2 267 2 147 2 730 2 560 2 731 2 502 4 779 2 635 2 217 2 385 4 677 2 245 4 479 2 120 20 481 2 203 4 389 2 680 1 437 6 176 1 570 4 491 4 
395 20 495 2 688 2 497 2 597 2 691 6 106 2 296 2 695 4 698 50 212 46 300 2 409 4 11 2 500 2 113 2 411 2 216 2 502 2 706 2 116 2 307 6 218 2 708 2 120 48 121 2 615 2 719 2 508 2 130 2 223 2 137 4 315 4 325 2 237 2 635 2 335 2 245 6 738 2 437 20 49 2 344 2 742 2 443 2 350 4 55 2 642 4 552 2 749 2 353 2 354 4 650 2 558 2 357 2 362 2 67 2 166 2 267 2 451 2 71 2 174 2 459 2 568 2 570 6 657 2 371 2 762 4 764 2 186 2 769 2 187 2 577 6 378 2 79 2 193 2 283 2 85 2 666 2 284 4 671 2 385 38 588 4 480 2 481 2 389 2 203 2 488 2 783 2 489 2 491 2 102 2 
438 2 

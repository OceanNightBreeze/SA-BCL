#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 202 155 
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException 219 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (24,345) (24,345) (248,326,674,691,715) (248,326,674,691,715) (248,326,674,691,715) 
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (540,595) 525 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V FAILED junit.framework.AssertionFailedError 
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 664 (196,630) 372 (315,735) (196,630) 164 (315,735) 353 467 
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 664 (196,630) 372 (315,735) (196,630) 164 (315,735) 353 467 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 128 
daikon.test.diff.XorVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 191 605 450 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 570 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 570 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 570 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 570 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.RuntimeException (105,527) (105,527) (156,477) (156,477) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:memberOf(D[F)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_48()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | RETURN | 1511 | return null
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltwiseGT([I)Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Assert:assertTrue(Z)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:BeginToken()C
daikon.Quant:subsetOf([I[I)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant; | RETURN | 7501 | return null
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:lt(II)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaCharStream:readChar()C
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.Intern:numIntArrays()I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern:intern([I)[I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.diff.RootNode:RootNode()V
daikon.Quant:eq(JJ)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.MathMDE:pow_fast(II)I
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.Invariant:logOn()Z
daikon.Debug:logOn()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern:intern([D)[D
utilMDE.MathMDE:negate(I)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:lte(II)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_2_1(I)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant; | RETURN | 547 | return null
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3R_58()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Ppt:Ppt()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_85()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:jj_3R_47()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:eltsGtIndex([I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.Quant:eltsGTE([II)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.PptName:isEnterPoint()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.MathMDE:modulus([I)[I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:isPseudoArray()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:sameLength([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | CONDITION | 17522 | if (x) -> if (!x)
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.PptSlice2:arity()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3R_135()Z
utilMDE.MathMDE:gcd(II)I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:new_ppt()V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | ASSIGN | 60402 | = null
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaCharStream:ReadByte()C
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:eltsGT([II)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:hashCode()I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLT([I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:jj_3_16()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:split(I)I
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:eq(DD)Z
jtb.JavaCharStream:getEndColumn()I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.PptSlice0:arity()I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:eltsLTE([II)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
utilMDE.Intern:intern([J)[J
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:lexGTE([I[I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:sign(I)I
daikon.Quant:memberOf(F[F)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.ProglangType:isScalar()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParser:jj_3R_133()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:setEqual([I[I)Z | STATEMENT | 155062 | stmt -> ;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Debug:logDetail()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.Node:Node()V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.Invariant:prob_or(DD)D
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:sum([[I)I
daikon.PptSlice1:num_samples()I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.ProglangType:dimensions()I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_51()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaCharStream:FillBuff()V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | OPERATOR | 41870 | != -> >=
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.Invariant:getConfidence()D
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:concat([I[I)[I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.PptSlice1:arity()I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_1()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:slice([III)[I | CONDITION | 160611 | if (x) -> if (!x)
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:gte(II)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:intersection([I[I)[I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 1551 | = null
daikon.Quant:subsetOf([D[D)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.MathMDE:pow(II)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.ModBitTracker:num_samples()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:jj_3R_162()Z
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLT([II)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaCharStream:getEndLine()I
daikon.Quant:subsetOf([D[F)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_3R_49()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.Intern:internSubsequence([III)[I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:InvMap()V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_55()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:justified()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(II)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:noDups([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:union([I[I)[I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([F[D)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:jj_3R_57()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V | OPERATOR | 5137 | + -> /
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.ModBitTracker:num_vars()I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_sets()I
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:gt(II)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.ArraysMDE:isSubset([D[D)Z | CONDITION | 63857 | if (x) -> if (!x)
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:isArray()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:isReverse([I[I)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaCharStream:backup(I)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaCharStream:getBeginLine()I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I | CONDITION | 16434 | if (x) -> if (!x)
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
37 2 298 2 602 6 634 2 180 2 181 2 308 2 460 4 352 2 26 2 402 2 734 4 120 2 385 2 660 2 57 2 532 2 16 2 546 2 62 2 667 2 717 2 626 2 
734 12 37 8 120 5 602 15 131 2 255 6 3 2 181 4 433 4 532 4 16 8 546 4 33 4 296 2 717 4 352 8 27 6 
627 4 722 4 576 4 575 2 177 2 178 2 254 4 518 2 701 2 230 4 40 14 96 2 42 2 279 4 114 2 611 4 100 2 350 2 351 4 704 4 706 4 234 2 74 2 587 10 543 2 119 4 261 6 463 2 263 2 464 2 317 2 240 2 621 4 623 2 145 2 216 10 169 4 595 8 19 2 721 62 
11 2 427 2 429 2 202 2 241 2 321 2 155 2 693 2 670 2 194 2 401 2 
438 2 413 2 92 2 397 4 579 2 420 2 611 2 704 4 707 2 461 2 284 2 485 2 687 2 29 2 188 2 404 2 428 2 657 4 738 2 566 2 126 2 127 2 61 2 547 2 293 2 360 2 18 2 595 2 468 2 19 2 148 2 150 2 
653 6 37 32 601 2 442 4 299 4 301 2 602 53 416 4 303 4 634 2 203 6 255 6 181 16 345 4 136 2 639 2 99 4 24 4 460 6 352 32 27 6 709 2 559 2 734 48 560 6 487 6 120 22 262 6 51 8 385 18 433 4 532 16 16 32 546 16 666 4 62 4 33 4 436 2 717 16 
261 2 595 2 518 2 
462 2 414 2 333 2 264 2 239 2 383 22 540 2 144 2 592 2 168 10 389 2 157 2 329 2 84 2 
345 2 681 2 440 2 24 2 13 4 101 2 92 2 43 2 661 2 
129 6 737 6 633 2 204 2 638 2 348 2 481 2 390 2 523 6 8 2 720 2 
9 4 700 6 606 6 345 2 137 6 24 2 534 2 492 6 171 2 572 2 110 2 25 2 694 4 
36 2 37 16 299 6 602 28 634 4 203 8 181 10 345 6 182 2 24 6 460 10 352 16 424 4 734 26 404 2 120 12 385 8 622 2 386 4 593 8 16 16 532 10 546 10 62 6 361 8 436 2 513 2 717 10 296 4 673 2 
219 2 
693 2 
408 2 
345 2 471 2 
94 2 345 4 256 2 
175 1 223 2 552 1 394 2 1 2 88 2 697 1 345 23 607 1 346 2 608 2 233 4 522 4 6 4 43 2 184 2 705 2 283 1 141 4 45 1 713 2 52 2 563 2 242 2 287 1 715 2 358 1 449 4 290 2 147 4 248 2 674 2 574 2 412 2 151 2 65 1 368 1 636 2 539 2 71 2 728 2 374 1 24 21 377 1 581 1 504 1 158 2 644 2 28 1 162 4 211 2 736 2 75 2 122 2 123 6 320 2 218 2 391 2 83 2 651 6 514 4 174 2 
273 22 86 2 396 2 281 2 558 2 7 2 486 8 104 2 12 14 561 2 106 16 406 14 407 2 490 2 192 4 668 2 493 22 411 4 111 2 197 4 676 2 494 2 199 2 306 2 679 4 418 2 307 2 498 10 497 2 115 8 580 10 311 22 583 2 584 2 585 2 118 2 589 2 316 10 124 2 215 2 512 4 597 10 437 2 515 10 600 2 330 2 35 16 439 2 331 4 38 22 224 74 441 26 336 22 130 2 134 22 340 2 341 2 135 2 138 2 524 22 711 10 236 2 712 2 238 2 616 22 714 10 528 2 619 2 55 74 56 2 620 2 533 8 624 6 536 8 456 2 454 24 249 2 365 2 366 2 68 4 152 2 724 2 635 2 257 2 258 4 72 2 260 16 731 22 161 2 733 22 76 2 380 16 646 22 466 2 544 74 269 2 739 6 268 4 649 32 550 2 472 12 
314 2 595 2 659 1 525 2 453 2 
654 2 632 2 314 2 595 2 525 2 453 2 
386 2 595 2 643 2 503 2 278 2 525 2 
645 2 150 2 
541 2 92 2 595 2 525 2 
102 2 229 2 
53 2 160 2 
553 2 598 2 
688 2 292 2 
688 2 53 2 519 2 
688 2 53 2 295 2 
688 2 53 2 79 2 
688 2 309 2 53 2 
656 6 525 2 286 2 31 6 166 2 491 2 294 2 595 2 
703 2 603 2 
386 2 632 2 555 2 595 2 643 2 278 2 525 2 
362 2 
643 2 278 2 39 2 
200 2 703 2 718 2 
643 2 278 2 
703 2 448 2 
643 2 529 2 
200 2 568 2 703 2 
586 2 553 2 200 2 
688 2 373 2 200 2 
521 2 200 2 102 2 
551 2 200 2 53 2 
176 2 703 2 
395 2 643 2 
245 2 553 2 
688 2 482 2 
17 2 102 2 
457 2 53 2 
252 2 703 2 
53 2 710 2 
102 2 149 2 
688 2 107 2 
553 2 484 2 
200 2 568 2 703 2 69 2 
200 2 568 2 703 2 69 2 535 2 
200 2 703 2 173 2 
200 2 703 2 116 2 
554 2 49 2 259 2 548 2 
0 2 272 4 237 2 67 2 617 2 78 2 318 2 338 2 383 6 214 2 445 2 280 2 665 2 452 4 511 2 571 2 671 2 719 2 
200 2 658 2 
200 2 655 2 643 2 
90 2 643 2 
71 2 
473 2 394 2 393 4 88 2 1 2 276 2 476 2 6 3 184 2 187 4 563 2 488 2 565 2 489 2 662 2 290 2 193 4 410 8 412 2 574 2 205 2 24 26 501 2 505 2 422 2 684 2 123 6 32 2 320 6 432 2 218 2 217 2 220 2 322 2 223 2 695 2 345 26 608 2 346 2 41 2 347 2 609 2 233 4 522 5 43 2 141 4 713 2 50 2 52 2 242 2 449 3 246 2 147 4 363 2 364 2 151 2 250 4 628 2 369 3 539 2 458 2 154 2 459 2 158 2 378 2 162 4 732 2 736 6 75 2 77 8 384 2 391 6 172 2 83 2 651 4 174 2 
473 2 394 2 393 4 88 2 1 2 276 2 476 2 6 2 184 2 187 2 10 2 563 2 488 2 565 2 489 2 662 2 290 2 193 4 410 8 412 2 574 2 496 2 205 2 24 26 501 2 505 2 422 2 684 2 123 6 32 2 320 6 432 2 218 2 217 2 599 2 223 2 695 2 345 26 608 2 346 2 41 2 347 2 609 2 233 4 522 4 43 2 705 2 141 4 713 2 50 2 52 2 242 2 449 2 246 2 146 2 147 4 363 2 364 2 151 2 250 4 628 2 369 2 539 2 458 2 459 2 158 2 644 2 378 2 162 4 732 2 736 6 75 2 77 8 384 2 391 6 172 2 83 2 651 6 174 2 
228 2 
618 2 447 2 
353 2 66 4 723 2 737 2 315 2 689 2 415 2 633 2 381 4 319 2 165 2 58 2 467 2 481 2 349 2 625 2 523 2 185 2 
223 2 275 4 129 6 88 2 1 2 335 2 2 2 4 4 345 12 95 4 231 2 349 2 481 4 523 6 8 2 282 2 184 2 185 2 353 2 403 2 48 2 58 4 288 2 289 2 290 2 625 2 147 2 297 6 64 2 412 2 66 4 723 2 20 4 630 2 633 4 415 2 304 2 726 2 204 2 24 6 162 2 425 2 735 2 75 2 737 4 315 2 689 2 381 4 382 2 213 2 164 2 319 2 165 2 123 4 509 2 467 2 594 2 170 2 328 4 549 2 
223 2 275 4 129 6 88 2 1 2 335 2 2 2 4 4 345 12 95 4 231 2 349 2 481 4 523 4 8 2 282 2 184 2 185 2 353 2 403 2 48 2 58 4 288 2 289 2 290 2 625 2 147 2 297 6 64 2 720 2 412 2 66 4 723 2 20 4 630 2 633 4 415 2 304 2 726 2 24 6 162 2 425 2 735 2 75 2 737 6 315 2 689 2 381 4 382 2 213 2 164 2 319 2 165 2 123 4 509 2 467 2 594 2 170 2 328 4 549 2 
223 2 275 8 129 6 88 2 1 2 335 2 2 2 4 4 345 12 95 4 231 2 349 2 481 4 523 6 8 2 282 2 184 2 185 2 353 2 403 2 48 2 58 4 288 2 289 2 290 2 625 2 147 2 297 6 64 2 412 2 66 4 723 2 20 4 630 2 633 4 415 2 304 2 726 2 24 6 162 2 425 2 735 2 75 2 737 6 315 2 689 2 381 4 382 2 213 2 164 2 319 2 165 2 123 4 509 2 467 2 594 2 390 2 170 2 328 4 549 2 
223 2 275 8 129 8 88 2 1 2 335 2 2 2 4 4 345 12 95 4 231 2 349 2 481 4 523 6 8 2 282 2 184 2 185 2 353 2 403 2 48 2 58 4 288 2 289 2 290 2 625 2 147 2 297 10 64 2 720 2 412 2 66 4 723 2 20 4 630 2 633 4 415 2 304 2 726 2 24 6 162 2 425 2 735 2 75 2 737 8 315 2 689 2 381 4 382 2 213 2 164 2 319 2 165 2 123 4 509 2 467 2 594 2 390 2 170 2 328 8 549 2 
223 2 275 8 129 6 88 2 1 2 335 2 2 2 4 4 345 12 95 4 231 2 349 2 481 4 523 6 8 2 282 2 184 2 185 2 353 2 403 2 48 2 58 4 288 2 289 2 290 2 625 2 147 2 297 10 64 2 412 2 66 4 723 2 20 4 630 2 633 4 415 2 304 2 726 2 24 6 162 2 425 2 735 2 75 2 737 6 315 2 689 2 381 4 382 2 213 2 164 2 319 2 165 2 123 4 509 2 467 2 594 2 390 2 170 2 328 8 549 2 
394 2 275 2 88 2 1 2 179 4 2 2 4 8 95 4 481 4 6 2 8 4 282 2 184 2 185 2 103 2 187 1 189 2 563 2 489 2 662 2 664 2 289 2 290 2 193 4 410 2 109 2 672 2 196 2 574 2 412 2 20 6 677 2 112 2 495 2 415 2 304 2 24 18 684 2 422 2 315 2 689 2 213 2 319 2 123 6 320 6 432 2 218 2 509 2 223 2 129 12 335 2 132 2 344 2 345 28 231 2 608 2 346 2 349 2 233 4 522 2 43 2 523 4 705 2 141 4 353 2 48 2 713 2 50 2 52 2 242 2 58 4 359 2 449 2 625 2 147 4 720 4 64 2 151 2 66 4 367 2 723 2 630 2 633 4 726 2 539 2 458 2 372 2 158 2 644 2 162 4 735 2 736 8 737 8 75 2 77 2 381 4 382 2 164 2 165 2 467 2 170 2 82 2 391 6 83 4 651 6 549 2 174 2 
394 2 1 2 179 4 2 2 398 1 5 1 4 8 6 2 8 4 184 2 185 2 189 2 562 6 563 2 408 6 193 4 410 6 196 2 412 2 574 2 20 6 415 2 417 2 24 24 421 6 422 4 423 6 582 1 425 2 213 2 591 2 432 2 218 2 217 2 594 2 221 2 34 6 223 2 443 6 231 2 608 2 610 1 233 4 43 2 235 6 48 4 50 4 52 2 242 2 243 6 58 4 449 2 625 2 64 2 66 4 630 2 629 2 633 4 256 6 458 4 459 2 640 4 644 2 75 2 77 6 467 2 648 1 82 10 83 12 651 6 471 6 473 2 275 6 88 2 93 2 95 4 479 2 480 6 481 4 282 2 103 8 489 4 662 2 288 2 664 2 290 2 289 2 109 2 672 2 297 2 677 2 112 2 495 2 300 1 302 2 304 2 500 1 683 2 684 2 686 2 507 1 508 6 121 6 689 2 315 2 690 2 123 6 319 2 320 6 125 2 509 2 323 6 129 12 332 2 335 2 334 2 132 2 344 2 345 46 346 2 349 2 522 2 523 8 705 2 708 2 141 4 140 6 353 2 142 7 526 2 713 2 359 2 147 4 151 2 723 2 367 2 537 6 538 2 726 2 370 2 539 2 372 2 375 2 158 2 159 7 162 4 735 2 736 8 737 8 381 4 382 2 165 2 164 2 740 1 390 4 170 2 391 6 549 2 741 2 174 2 
473 2 394 2 275 6 88 2 1 2 179 4 2 2 93 2 4 8 95 4 479 2 480 6 481 4 6 2 8 4 282 2 184 2 185 2 103 8 189 2 562 6 563 2 489 4 662 2 288 2 664 2 408 6 289 2 290 2 193 4 410 6 109 2 672 2 196 2 297 6 574 2 412 2 20 6 677 2 112 2 495 2 415 2 302 2 304 2 417 2 421 6 24 24 683 2 423 6 684 2 422 4 686 2 425 2 508 6 121 6 315 2 689 2 690 2 591 2 213 2 319 2 123 6 125 2 320 6 432 2 217 2 218 2 509 2 594 2 323 6 221 2 328 4 34 6 223 2 129 12 332 2 443 6 334 2 335 2 132 2 344 2 345 46 231 2 346 2 608 2 349 2 233 4 522 2 43 2 523 8 708 2 705 2 235 6 140 6 141 4 353 2 526 2 48 4 713 2 50 4 52 2 242 2 243 6 58 4 359 2 449 2 625 2 147 4 64 2 151 2 66 4 537 6 367 2 723 2 629 2 630 2 633 4 538 2 726 2 370 2 256 6 539 2 458 4 372 2 459 2 640 4 375 2 158 2 644 2 162 4 735 2 736 8 75 2 737 8 77 6 381 4 382 2 164 2 165 2 467 2 170 2 390 4 82 10 391 6 83 12 651 6 741 2 549 2 471 6 174 2 
473 2 392 2 394 2 275 6 88 2 1 2 179 4 2 2 93 2 4 8 95 4 479 2 480 6 481 4 6 4 8 4 282 2 184 2 185 2 103 8 189 2 562 6 563 2 489 4 662 2 664 2 408 6 289 2 290 2 193 6 410 6 109 2 195 2 672 2 196 2 297 4 574 2 412 2 20 6 677 2 112 2 495 2 415 2 302 2 304 2 417 2 204 2 421 6 24 22 683 2 423 6 684 2 422 4 686 2 508 6 121 6 315 2 689 2 690 2 591 2 213 2 319 2 123 6 125 2 320 8 432 2 217 2 218 2 509 2 323 6 221 2 328 4 34 6 223 2 129 16 332 2 443 6 334 2 335 2 132 2 344 2 345 44 231 2 346 2 608 2 349 2 233 4 522 4 43 2 523 10 708 2 705 2 235 6 614 2 140 6 141 4 353 2 526 2 48 2 713 2 50 4 52 2 242 2 243 6 58 4 244 2 449 4 625 2 147 4 720 2 64 2 151 2 66 4 537 6 367 2 723 2 629 2 630 2 633 4 538 2 726 2 370 2 256 6 539 2 458 4 372 2 459 2 640 4 375 2 158 2 644 2 162 4 735 2 736 12 75 2 737 10 77 6 381 4 382 2 164 2 165 2 467 2 650 2 170 2 390 4 82 8 391 8 83 10 651 6 741 2 470 2 549 2 471 6 174 2 
66 2 20 2 723 2 129 4 275 6 415 2 633 4 335 2 726 2 2 2 345 4 4 2 231 2 95 2 349 2 481 4 8 2 523 6 282 2 185 2 737 6 689 2 381 2 213 2 382 2 165 2 509 2 289 2 170 2 390 2 625 2 328 4 549 2 297 4 64 2 
394 2 275 6 1 2 88 2 2 2 4 2 95 2 481 4 6 3 8 2 184 2 282 2 185 2 563 2 564 3 489 2 662 2 289 2 290 2 193 4 297 2 412 2 574 2 20 2 415 2 304 2 24 24 684 2 689 2 213 2 123 6 691 2 320 6 432 2 218 2 509 2 326 2 692 2 223 2 129 4 335 2 520 2 345 28 231 2 608 2 346 2 349 2 233 4 522 3 43 2 523 6 705 2 141 4 713 2 52 2 242 2 449 3 359 2 247 2 625 2 147 4 63 2 64 2 151 2 66 2 723 2 633 4 725 2 726 2 539 2 637 2 71 2 158 2 644 2 162 4 736 8 737 6 75 2 381 2 382 2 165 2 170 2 390 2 82 2 391 6 83 4 651 6 549 2 174 2 
223 2 275 8 129 6 88 2 1 2 335 2 2 2 4 4 345 12 95 4 231 2 349 2 481 4 523 6 8 2 282 2 184 2 185 2 353 2 403 2 48 2 58 4 288 2 289 2 290 2 625 2 147 2 297 10 64 2 412 2 66 4 723 2 20 4 630 2 633 4 415 2 304 2 726 2 24 6 162 2 425 2 735 2 75 2 737 6 315 2 689 2 381 4 382 2 213 2 164 2 319 2 165 2 123 4 509 2 467 2 594 2 390 2 170 2 328 8 549 2 
223 2 275 8 129 8 88 2 1 2 335 2 2 2 4 4 345 12 95 4 231 2 349 2 481 4 523 8 8 2 282 2 184 2 185 2 353 2 48 2 15 2 58 4 288 2 290 2 289 2 625 2 147 2 297 10 64 2 412 2 66 4 723 2 20 4 630 2 415 2 633 4 304 2 726 2 204 2 24 6 162 2 425 2 735 2 75 2 737 6 315 2 689 2 381 4 382 2 213 2 163 4 164 2 319 2 165 2 123 4 509 2 467 2 594 2 390 2 596 2 328 8 549 2 
231 2 371 2 335 2 
231 2 371 2 335 2 
394 2 275 6 88 2 1 2 276 4 179 2 4 4 95 2 97 2 98 2 481 4 8 4 184 2 185 2 187 2 563 2 489 6 662 2 288 2 663 2 290 2 289 2 291 2 410 4 108 2 109 2 297 6 412 2 574 2 20 4 112 2 577 2 204 4 24 16 422 4 313 2 315 2 213 2 123 6 320 2 432 2 218 2 594 2 328 4 223 2 128 2 129 16 225 2 443 2 335 4 444 4 133 2 345 24 231 4 608 2 346 2 349 2 233 4 522 2 43 2 523 12 705 2 141 4 353 2 48 2 713 2 615 2 50 4 356 2 52 2 242 2 58 4 60 2 625 4 147 4 720 4 151 2 66 2 633 4 539 2 458 4 371 2 372 2 459 4 640 2 158 2 644 2 162 4 735 2 736 2 75 2 737 12 77 4 381 2 164 2 167 4 390 4 82 2 391 2 83 4 469 2 651 6 652 2 174 2 742 2 
285 2 443 2 302 2 356 2 447 2 319 2 431 2 345 4 664 2 290 2 291 2 640 2 24 2 82 2 83 2 44 2 469 2 
394 2 275 6 88 2 1 2 276 4 179 2 4 4 95 2 97 2 481 4 8 4 184 2 185 2 563 2 489 6 662 2 288 2 663 2 290 2 289 2 410 4 109 2 297 6 412 2 574 2 20 4 112 2 577 2 419 2 204 4 24 14 422 4 425 2 313 2 315 2 213 2 123 6 320 2 432 2 218 2 594 2 434 2 328 4 223 2 128 2 696 2 129 16 226 2 335 4 444 4 133 2 345 20 231 6 608 2 346 2 349 2 233 4 522 4 43 2 523 12 705 2 613 2 141 4 353 2 48 4 713 2 50 4 356 2 52 2 242 2 58 4 60 4 625 4 147 4 720 4 151 2 66 2 633 4 539 2 458 4 371 2 372 2 459 4 376 2 158 2 644 2 162 4 735 2 736 2 75 2 737 12 77 4 381 2 164 2 167 4 390 4 391 2 83 2 469 2 651 6 652 2 174 2 742 2 
394 2 275 6 88 2 1 2 276 4 179 2 4 4 95 2 97 2 481 4 8 4 184 2 185 2 187 1 563 2 489 6 662 2 288 2 663 2 290 2 289 2 291 2 410 4 109 2 297 6 412 2 574 2 20 4 112 2 577 2 204 4 24 16 422 4 425 2 313 2 315 2 213 2 123 6 320 2 432 2 218 2 594 2 328 4 223 2 128 2 696 2 129 16 443 2 335 4 444 4 133 2 345 24 231 6 232 2 608 2 346 2 349 2 233 4 522 2 43 2 523 12 705 2 141 4 353 2 46 2 48 4 713 2 50 4 356 2 52 2 242 2 58 4 531 2 60 2 625 4 147 4 720 4 151 2 66 2 633 4 539 2 458 4 371 2 372 2 459 4 640 2 729 2 158 2 644 2 162 4 735 2 736 2 75 2 737 12 77 4 381 2 266 2 164 2 167 4 390 4 82 2 391 2 83 4 469 2 651 6 652 2 174 2 742 2 
223 2 85 2 394 2 87 2 88 2 1 2 132 2 605 2 344 2 702 2 345 24 346 2 608 2 233 4 522 2 6 2 43 2 184 2 141 4 186 2 713 2 14 2 52 2 563 2 489 2 242 2 191 2 449 2 290 2 193 4 450 2 147 4 672 2 574 2 412 2 151 2 675 2 367 2 677 2 495 2 727 2 539 2 113 2 24 18 206 2 73 2 209 2 158 2 730 2 684 2 162 4 312 2 736 8 30 4 75 2 588 2 123 6 320 6 432 2 218 2 387 2 391 6 83 2 651 4 174 2 
473 6 474 2 251 3 631 2 89 2 516 4 70 2 339 2 499 2 345 2 22 2 24 2 642 2 6 3 522 3 684 2 736 2 355 1 320 2 449 3 388 2 193 2 545 2 451 2 391 2 
473 6 474 2 251 2 631 2 89 2 516 4 70 2 339 2 499 2 345 2 22 2 24 2 642 2 6 2 522 2 684 2 736 2 320 2 449 2 388 2 193 2 545 2 451 2 391 2 
473 6 474 2 251 2 631 2 89 2 516 4 70 2 339 2 499 2 345 2 22 2 24 2 642 2 6 2 522 2 684 2 736 2 320 2 449 2 388 2 193 2 545 2 451 2 391 2 
37 2 299 2 602 5 277 2 227 4 91 2 203 4 337 4 181 2 345 10 153 2 23 4 557 3 24 4 183 2 400 2 522 3 502 2 483 2 352 2 684 2 379 2 734 4 736 2 265 2 465 6 430 4 190 3 59 2 647 3 716 2 80 2 532 2 16 2 449 3 546 2 325 4 451 2 270 2 717 2 
37 2 277 2 602 4 227 4 91 2 337 4 181 2 345 10 557 2 183 2 522 2 400 2 352 2 483 2 190 2 59 2 716 2 16 2 532 2 449 2 451 2 717 2 299 2 203 4 153 2 23 4 24 4 502 2 684 2 379 2 734 4 736 2 120 2 265 2 465 6 430 4 385 2 80 2 647 2 546 2 325 4 270 2 436 2 
37 2 277 2 602 4 227 4 91 2 337 4 181 2 345 10 557 2 183 2 522 2 400 2 352 2 483 2 190 2 59 2 716 2 16 2 532 2 449 2 451 2 717 2 299 2 203 4 153 2 23 4 24 4 502 2 684 2 379 2 734 4 736 2 120 2 265 2 465 6 430 4 385 2 80 2 647 2 546 2 325 4 270 2 436 2 
37 2 277 2 602 4 227 4 91 2 337 4 181 2 345 10 557 2 183 2 522 2 400 2 352 2 483 2 190 2 59 2 716 2 16 2 532 2 449 2 451 2 717 2 299 2 203 4 153 2 23 4 24 4 502 2 684 2 379 2 734 4 736 2 120 2 265 2 465 6 430 4 385 2 80 2 647 2 546 2 325 4 270 2 436 2 
37 2 277 2 602 4 227 4 91 2 337 4 181 2 345 10 557 2 183 2 522 2 400 2 352 2 483 2 190 2 59 2 716 2 16 2 532 2 449 2 451 2 717 2 299 2 203 4 153 2 23 4 24 4 502 2 684 2 379 2 734 4 736 2 120 4 265 2 465 6 430 4 385 4 80 2 647 2 546 2 325 4 270 2 436 4 
343 2 732 2 567 2 426 2 212 2 201 2 327 2 
343 2 556 2 409 2 324 2 208 2 669 2 
575 1 274 2 253 2 698 2 517 2 305 2 578 2 604 2 680 2 345 10 139 1 24 8 612 1 310 2 74 1 354 1 685 2 210 2 47 2 75 2 405 2 267 2 357 2 510 2 435 2 34 2 
37 6 678 2 299 2 602 15 303 2 255 4 203 4 181 6 345 6 639 1 478 2 542 2 24 6 682 2 352 6 117 2 734 12 446 2 120 4 143 2 262 4 51 2 590 2 530 2 385 3 16 6 532 6 546 6 33 2 436 2 717 6 
198 1 222 4 455 2 227 2 699 2 54 2 337 2 430 2 342 2 345 1 24 1 569 2 207 2 399 2 81 2 271 2 573 6 506 2 
222 4 455 2 227 2 699 4 54 2 337 2 430 2 342 2 569 4 207 2 399 2 81 2 506 2 573 6 271 4 
198 1 222 4 455 2 227 2 699 8 54 2 337 2 430 2 342 2 345 1 24 1 569 8 207 2 399 2 81 6 506 8 573 10 271 8 
222 2 455 2 227 2 699 2 54 2 337 2 430 2 342 2 569 2 207 2 399 2 573 2 271 2 
570 2 
570 2 
570 2 
570 2 
21 2 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 
527 1 105 1 475 1 641 1 156 1 477 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 137 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 83 9 344 347 130 227 178 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 201 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 201 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 201 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 201 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 201 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 297 113 392 12 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 96 141 292 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 96 141 292 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 96 141 292 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 96 141 292 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:BeginToken()C
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.InvariantFormatTester:execute()Z | ASSIGN | 8797 | = null
jtb.JavaCharStream:backup(I)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_3R_57()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:sameLength([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaCharStream:getBeginLine()I
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:memberOf(F[D)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:dimensions()I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_2_16(I)Z
daikon.ModBitTracker:num_sets()I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:gt(II)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:intersection([I[I)[I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:concat([I[I)[I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:eltsGTE([II)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType; | ASSIGN | 47633 | = null
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.Invariant:prob_or(DD)D
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:jj_3R_58()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:pow(II)I
utilMDE.Intern:intern([J)[J
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:size()I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.ArraysMDE:element_range([I)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:subsetOf([J[J)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_161()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 13092 | = null
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:jj_2_1(I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:isReverse([I[I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eq(II)Z
utilMDE.MathMDE:gcd(JJ)J
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:eq(JJ)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:jj_2_14(I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3R_163()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:eltwiseLTE([I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.ValueTuple:size()I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.ArraysMDE:min([I)I
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:lte(II)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.MathMDE:modulus([I)[I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Assert:assertTrue(Z)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:memberOf(J[J)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.ModBitTracker:split(I)I
daikon.Quant:eltwiseLT([I)Z
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:eltsGT([II)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_3_14()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:ReadByte()C
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:union([I[I)[I
jtb.JavaParser:jj_3R_48()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:memberOf(F[F)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | RETURN | 25109 | return null
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer; | RETURN | 13631 | return null
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:eq(FF)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_3R_49()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:noDups([I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.MathMDE:gcd([I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:jj_2_13(I)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3_16()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:subsetOf([D[D)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:subsetOf([I[I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
jtb.JavaParser:jj_3R_51()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:ne(II)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quant:memberOf(S[S)Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:jj_3R_56()Z
jtb.JavaCharStream:FillBuff()V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:jj_3_1()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_3R_52()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.ArraysMDE:max([I)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3R_69()Z
daikon.Quant:lexGTE([I[I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:eltsLT([II)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:memberOf(I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:gte(II)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:lt(II)Z
daikon.Quant:setEqual([I[I)Z
daikon.Quant:pairwiseLTE([I[I)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(D[F)Z
daikon.Quant:eq(DD)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.ModBitTracker:num_vars()I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:jj_3R_85()Z
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:lexGT([I[I)Z
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:slice([III)[I
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:jj_3_13()Z
utilMDE.MathMDE:gcd(II)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:eltsLteIndex([I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:eltsLTE([II)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaCharStream:getEndLine()I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:jj_3R_54()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsEqual([II)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
159 2 356 2 194 2 43 2 116 2 235 2 304 2 35 2 237 4 
107 2 434 2 205 6 38 6 274 2 187 2 349 2 328 2 282 6 320 2 79 2 
15 6 393 2 4 4 84 6 304 2 159 2 40 2 89 2 386 2 309 4 91 6 123 2 428 6 
260 10 97 2 68 8 285 29 302 6 8 16 263 4 304 6 414 2 264 4 49 2 159 6 28 10 52 10 29 4 268 10 202 8 236 10 430 2 435 4 250 2 252 2 214 26 322 12 217 16 41 8 254 8 148 16 93 6 299 2 
239 4 158 6 
306 2 
260 2 224 2 98 2 68 2 285 6 302 2 8 2 129 2 28 2 233 2 52 2 29 2 76 2 268 2 236 4 291 2 214 4 322 2 217 2 444 2 90 2 182 2 148 2 
260 2 138 2 246 2 285 5 8 2 263 2 214 4 28 2 322 1 217 2 52 2 148 2 268 2 257 4 
329 2 351 2 3 4 226 4 157 2 353 4 383 2 160 6 416 10 231 62 51 10 266 2 384 2 421 14 103 4 30 2 360 4 423 4 389 2 106 2 433 2 55 2 312 2 240 4 314 8 115 2 339 2 436 2 319 4 437 4 400 2 176 2 60 2 321 2 62 4 325 4 374 4 149 4 376 2 92 2 
128 2 306 2 101 2 31 2 243 2 247 2 272 2 343 2 175 2 445 2 
283 2 6 2 286 2 47 2 159 4 383 2 234 2 164 2 166 2 388 2 235 2 103 2 104 2 391 2 248 2 252 2 61 2 348 2 295 2 404 2 405 2 192 2 67 2 126 2 412 2 304 4 71 2 73 2 75 2 420 2 199 2 314 2 33 2 81 4 276 4 145 2 37 2 39 2 216 2 442 2 146 2 281 2 325 4 221 4 
260 4 68 2 285 13 352 6 8 8 304 4 159 4 28 4 52 4 133 2 53 8 268 4 246 4 144 4 214 12 322 6 217 8 148 8 257 6 152 2 
312 2 160 2 314 2 
225 2 206 10 364 2 245 2 67 2 69 2 335 2 411 2 118 2 318 2 185 22 350 2 95 2 65 2 
137 2 163 2 212 2 336 2 
85 2 
262 2 304 2 
307 2 11 2 304 4 
1 2 2 26 331 2 330 2 333 2 5 26 227 2 7 4 9 2 228 10 230 26 337 16 14 20 13 26 111 10 112 2 249 6 119 2 342 2 344 2 251 2 345 10 347 2 121 2 16 4 17 2 259 2 21 2 27 26 355 12 130 2 357 2 132 2 267 2 361 10 135 2 270 36 32 2 275 2 368 82 147 2 372 4 373 2 375 26 151 20 380 2 156 10 284 2 44 4 46 10 48 8 287 2 165 2 167 4 54 4 56 24 170 2 397 82 396 2 398 2 171 6 172 6 173 2 177 2 178 2 180 4 401 2 403 2 402 2 294 4 186 14 64 8 188 2 189 26 406 2 407 10 408 2 193 20 409 26 413 2 303 2 196 2 415 2 417 12 308 6 432 4 80 26 315 4 316 2 82 2 83 2 317 14 211 2 87 26 88 2 215 82 443 26 446 2 324 2 220 2 326 28 448 2 450 2 451 2 
124 2 242 2 22 2 366 1 
124 2 288 2 
26 2 72 2 314 2 210 2 
26 2 72 2 314 2 219 2 70 2 210 2 
26 2 124 2 314 2 365 2 134 2 264 2 
281 2 261 2 
26 2 314 2 410 2 264 2 
155 2 190 2 
377 2 78 2 
363 2 370 2 
441 2 58 2 
204 2 377 2 58 2 
300 2 377 2 58 2 
377 2 399 2 58 2 
358 2 377 2 58 2 
26 2 102 6 203 2 314 2 208 2 174 6 369 2 256 2 
367 2 311 2 
26 2 124 2 314 2 66 2 365 2 70 2 264 2 
124 2 365 2 378 2 
124 2 365 2 298 2 
22 2 122 2 311 2 
124 2 365 2 
311 2 452 2 
124 2 200 2 
22 2 341 2 311 2 
418 2 22 2 370 2 
379 2 22 2 58 2 
155 2 22 2 424 2 
154 2 22 2 377 2 
447 2 311 2 
124 2 57 2 
184 2 370 2 
139 2 58 2 
155 2 323 2 
280 2 377 2 
94 2 311 2 
271 2 377 2 
155 2 310 2 
58 2 426 2 
100 2 370 2 
169 2 22 2 341 2 311 2 
169 2 22 2 422 2 341 2 311 2 
22 2 311 2 36 2 
110 2 22 2 311 2 
362 2 213 2 25 2 440 2 
108 4 381 2 195 2 382 4 127 2 340 2 34 2 24 2 277 2 181 2 131 2 289 2 253 2 296 2 185 6 327 2 191 2 238 2 
22 2 269 2 
338 2 
163 2 201 2 212 2 336 2 
163 2 201 2 212 2 336 2 
150 2 229 2 431 2 
150 2 229 2 431 2 
163 2 201 2 212 2 336 2 
163 2 201 2 212 2 336 2 
163 2 201 2 212 2 336 2 
0 2 113 2 392 2 241 2 140 2 334 2 304 2 438 2 161 2 12 2 297 2 223 2 
168 2 109 2 301 2 244 2 23 2 209 2 136 2 
125 2 10 2 290 2 209 2 258 2 449 2 
20 2 45 2 304 10 50 2 159 8 162 2 265 2 425 2 427 2 429 2 390 2 394 1 273 2 436 1 143 2 439 2 86 2 293 2 371 1 179 1 279 2 255 2 183 2 222 2 92 1 153 2 
260 6 68 1 285 16 8 6 352 4 304 6 305 2 159 6 28 6 198 2 52 6 420 2 388 2 53 2 133 1 268 6 105 4 313 2 207 2 114 2 395 2 142 2 144 2 214 12 322 2 217 6 346 2 254 4 148 6 93 2 
332 2 304 1 117 2 59 2 354 7 159 1 120 2 99 2 218 4 74 2 385 2 359 1 419 2 42 2 387 2 77 2 18 2 19 2 
332 4 117 4 59 2 354 6 120 2 99 2 218 4 74 2 385 2 419 2 42 2 387 2 77 2 18 4 19 2 
332 8 304 1 117 8 59 2 354 10 159 1 120 2 99 2 218 4 74 2 385 2 359 1 419 8 42 2 387 2 77 6 18 8 19 2 
332 2 117 2 59 2 354 2 120 2 99 2 218 2 74 2 385 2 42 2 387 2 18 2 19 2 
159 2 232 2 292 2 63 1 304 2 141 2 278 1 96 2 
159 2 232 2 141 2 304 2 292 2 96 2 
159 2 232 2 141 2 304 2 292 2 96 2 
159 2 232 2 141 2 304 2 292 2 96 2 
197 2 

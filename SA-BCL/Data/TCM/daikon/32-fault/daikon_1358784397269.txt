#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 130 
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 620 569 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (303,627) 346 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 808 (34,511) 799 (314,734) (34,511) 234 (314,734) 794 32 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 808 (34,511) 799 (314,734) (34,511) 234 (314,734) 794 32 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 808 (34,511) 799 (314,734) (34,511) 234 (314,734) 794 32 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 808 (34,511) 799 (314,734) (34,511) 234 (314,734) 794 32 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V ERROR java.lang.reflect.InvocationTargetException 
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 593 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 770 605 628 60 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 438 605 628 60 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 438 605 628 60 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 438 605 628 60 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:isReverse([I[I)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:memberOf(F[D)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:union([I[I)[I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptSlice1:num_samples()I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | STATEMENT | 10772 | stmt -> ;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2146 | = null
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaCharStream:FillBuff()V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern:intern([I)[I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.PptName:isEnterPoint()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:logDetail()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:eltsLT([II)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:memberOf(S[S)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Quant:memberOf(D[F)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.Quant:intersection([I[I)[I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 19680 | = null
daikon.Quant:eltwiseEqual([I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:ne(II)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:gcd([I)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(J[J)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Debug:logOn()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.Invariant:getConfidence()D
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:noDups([I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:slice([III)[I | OPERATOR | 160615 | == -> !=
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:sameLength([I[I)Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.ProglangType:isIntegral()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.PptSlice2:arity()I
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.PptSlice0:arity()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.ProglangType:isScalar()Z
daikon.Quant:setEqual([I[I)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.ModBitTracker:num_samples()I
utilMDE.MathMDE:pow(II)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internSubsequence([III)[I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.ArraysMDE:min([I)I
utilMDE.LimitedSizeIntSet:size()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:jj_ntk()I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:eltwiseGT([I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:eq(II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:eq(DD)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.diff.InvMap:InvMap()V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.PptSlice1:arity()I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_16(I)Z
utilMDE.Intern:intern([J)[J
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:relate_var()V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaCharStream:BeginToken()C
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.ValueTuple:size()I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:eq(FF)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:pairwiseEqual([I[I)Z | STATEMENT | 165422 | stmt -> ;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaCharStream:getBeginColumn()I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Debug:logDetail()Z
utilMDE.ArraysMDE:max([I)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Ppt:Ppt()V
daikon.Quant:eltsEqual([II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaCharStream:readChar()C
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | STATEMENT | 5303 | stmt -> ;
daikon.Quant:subsetOf([F[D)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:lexLTE([I[I)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:gt(II)Z
daikon.test.InvariantFormatTester:execute()Z | ASSIGN | 5998 | = null
daikon.ProglangType:isArray()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:setDiff([I[I)[I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I | CONSTANT | 20467 | 32 -> 1
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:lte(II)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:lexGTE([I[I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V | CONDITION | 372 | if (x) -> if (!x)
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[F)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptName:isCombinedExitPoint()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.ArraysMDE:sum([I)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaCharStream:ReadByte()C
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 86983 | return null
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaCharStream:getEndLine()I
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.Invariant:justified()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:dimensions()I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.ArraysMDE:element_range([I)I
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:memberOf(I[I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.Quant:lt(II)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:lexLT([I[I)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 5636 | = null
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.ArraysMDE:sum([[I)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.Quant:eltsLteIndex([I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
305 2 407 2 675 4 105 2 525 2 364 2 627 2 686 2 420 2 576 2 739 2 690 2 487 2 633 4 801 2 325 2 540 2 805 2 431 2 184 2 384 2 275 2 27 4 278 2 191 2 282 2 238 2 81 4 816 2 287 2 823 2 141 2 342 2 712 2 200 4 91 2 44 2 556 2 512 2 610 2 663 2 467 4 303 2 352 2 
698 2 747 4 167 5 14 2 644 4 755 4 160 4 633 4 675 4 656 4 377 8 216 4 294 2 518 4 529 4 
127 2 343 2 627 2 
12 10 24 2 418 2 786 2 554 2 339 2 566 2 476 2 632 2 793 22 82 2 600 2 303 2 685 2 
747 2 698 2 642 2 644 2 754 2 755 2 215 2 56 2 284 2 164 2 84 2 529 2 167 6 603 2 316 2 89 2 656 2 269 4 427 2 21 2 662 2 327 2 518 4 
747 4 167 14 669 4 642 8 235 2 711 6 644 4 544 4 226 6 755 5 409 2 656 4 479 2 427 8 284 8 518 12 529 4 
498 62 749 4 589 2 670 4 99 4 278 2 331 14 357 2 724 2 756 2 725 2 649 4 127 2 79 10 760 4 413 2 627 8 482 4 369 2 738 2 88 2 739 4 143 2 290 2 343 6 65 2 456 2 90 4 771 4 510 2 376 2 20 4 514 4 273 2 153 4 383 10 467 4 403 2 328 2 353 2 
130 2 40 2 513 2 279 2 9 2 
659 2 636 2 527 2 243 2 66 2 385 4 275 2 675 2 633 2 
386 6 740 6 145 6 361 2 147 2 827 2 814 2 402 2 221 2 434 2 783 2 
250 6 140 2 124 6 171 6 188 4 42 2 229 2 675 2 633 2 493 2 660 4 132 6 111 2 
698 8 747 10 25 2 565 2 51 4 642 16 644 10 755 12 754 4 675 6 479 4 284 16 598 4 84 6 481 6 529 10 136 2 167 29 422 2 656 10 375 2 633 6 269 10 427 16 380 8 431 2 518 26 301 8 720 8 667 2 
146 6 175 4 
183 2 
491 2 675 2 
462 2 625 2 675 4 
242 2 
0 2 405 2 619 2 309 2 406 2 209 2 722 16 310 2 522 2 106 2 108 2 624 1 110 2 414 1 733 2 415 1 416 2 417 2 223 6 113 8 17 2 535 2 630 32 321 2 115 2 322 16 424 4 633 32 536 2 118 3 742 2 430 2 432 2 639 8 123 2 643 2 440 1 442 3 645 2 646 3 647 2 543 1 29 2 30 2 547 6 333 4 244 2 37 1 39 3 449 3 447 2 134 2 247 2 248 2 338 2 766 2 654 1 768 2 344 16 555 1 148 2 774 2 461 2 347 2 661 2 778 2 348 2 46 2 47 1 466 1 785 2 354 2 470 2 784 1 471 3 473 2 787 3 360 2 475 6 789 6 568 4 675 34 162 2 680 2 682 2 166 24 572 4 365 2 483 2 169 8 62 2 797 1 577 1 64 2 485 2 173 4 372 2 66 2 174 2 373 32 489 3 694 2 490 2 178 2 492 1 181 12 695 3 806 2 807 2 69 2 697 2 73 2 811 2 186 3 187 2 277 4 499 1 702 5 388 2 189 2 192 2 193 24 594 16 194 2 704 2 389 2 195 2 595 2 813 2 80 2 706 4 503 3 285 2 817 1 286 3 196 2 818 2 708 2 390 2 821 2 604 2 293 2 399 2 94 2 714 4 302 2 519 2 
257 2 1 6 472 4 620 2 2 4 672 2 567 28 213 28 673 6 103 6 57 2 480 2 526 6 569 2 10 6 684 6 571 2 268 8 800 2 582 6 374 2 537 2 634 2 584 2 803 2 180 2 67 4 270 2 379 6 182 6 494 6 433 6 640 6 185 2 436 2 74 2 28 2 701 2 703 2 77 4 240 2 597 4 197 2 819 2 133 2 249 6 822 2 198 4 552 2 767 2 606 2 607 4 396 2 608 2 397 2 828 2 400 6 463 6 611 2 255 4 668 28 
435 2 748 2 346 2 170 2 776 1 598 2 627 2 626 2 
435 2 748 2 366 2 
435 2 748 2 15 2 
6 2 341 2 227 2 
435 2 748 2 
548 2 227 2 
435 2 358 2 
341 2 521 2 227 2 
177 2 341 2 292 2 
341 2 651 2 592 2 
341 2 613 2 758 2 
792 2 341 2 448 2 
217 2 227 2 
435 2 723 2 
177 2 505 2 
592 2 253 2 
401 2 613 2 
792 2 101 2 
460 2 227 2 
792 2 5 2 
696 2 613 2 
592 2 826 2 
177 2 214 2 
341 2 521 2 315 2 227 2 
341 2 521 2 315 2 227 2 156 2 
341 2 741 2 227 2 
341 2 76 2 227 2 
393 2 112 2 52 2 752 2 
346 2 319 2 260 2 627 2 
346 2 16 2 319 2 260 2 627 2 626 2 
435 2 748 2 346 2 598 2 599 2 627 2 
364 2 311 2 
346 2 330 2 627 2 275 2 
791 2 613 2 
792 2 671 2 
177 2 122 2 
761 2 592 2 
802 2 792 2 592 2 
574 2 792 2 592 2 
792 2 335 2 592 2 
617 2 792 2 592 2 
641 2 363 6 31 2 627 2 137 6 773 2 346 2 179 2 
227 2 207 2 
13 2 562 2 139 2 564 2 532 2 621 2 267 2 631 2 4 2 692 2 128 2 129 2 297 2 515 2 445 4 793 6 349 4 570 2 
534 2 341 2 
435 2 266 2 341 2 
435 2 350 2 
195 2 
618 2 406 2 108 2 110 2 414 2 736 2 223 4 17 2 630 4 225 2 321 2 424 2 633 26 119 2 744 2 639 2 233 2 643 2 29 2 30 2 547 6 333 4 334 2 338 2 766 2 765 4 142 2 768 2 344 6 43 2 458 2 464 2 779 2 348 2 360 2 475 2 789 2 568 2 675 26 162 2 680 2 572 4 365 6 483 2 64 2 173 4 372 2 66 2 174 2 373 6 490 2 694 2 181 8 73 2 187 2 277 4 499 2 189 2 389 2 704 2 595 2 813 2 285 2 707 4 390 2 820 2 604 2 293 2 399 4 714 2 203 2 517 2 97 2 302 2 
406 2 108 2 110 2 414 2 736 2 223 5 17 2 630 4 225 2 321 2 424 2 633 26 430 2 119 2 744 2 639 2 643 2 29 2 30 2 547 6 333 4 446 2 36 2 338 2 766 2 765 4 142 2 768 2 344 6 43 2 458 2 464 2 779 2 348 2 360 2 475 2 789 2 568 2 675 26 162 2 680 2 572 4 365 6 483 2 64 2 173 4 372 2 66 2 174 2 373 6 490 2 694 2 181 8 806 1 73 2 187 2 277 4 499 2 189 2 194 1 389 2 704 2 595 2 813 2 285 2 707 4 390 2 820 2 604 2 293 2 399 4 714 2 203 2 298 2 517 2 97 2 302 2 
304 2 419 2 437 2 100 2 370 2 454 2 740 2 145 2 827 2 92 4 524 2 32 2 814 2 780 2 794 2 83 2 528 4 314 2 
304 4 53 2 100 2 360 2 675 12 162 2 524 2 679 2 410 2 109 2 221 2 412 2 794 2 528 4 314 2 734 2 483 2 419 2 575 4 318 2 370 2 740 4 372 2 633 6 426 2 68 2 121 2 274 4 434 2 73 2 437 2 386 6 234 2 542 4 277 2 547 4 389 2 650 2 444 2 595 2 239 2 32 2 814 4 333 2 83 2 337 4 86 2 824 6 395 2 144 2 454 2 145 6 827 4 657 2 92 4 511 2 775 2 780 2 299 2 665 4 
304 4 53 2 100 2 360 2 675 12 162 2 524 2 679 2 410 2 109 2 412 2 794 2 528 4 314 2 734 2 483 2 419 2 575 4 318 2 370 2 740 6 372 2 633 6 426 2 68 2 121 2 274 4 434 2 73 2 437 2 386 6 234 2 542 4 277 2 547 4 389 2 650 2 444 2 595 2 239 2 32 2 814 4 333 2 83 2 337 4 86 2 824 6 395 2 144 2 454 2 145 4 147 2 827 4 657 2 92 4 511 2 775 2 780 2 299 2 665 4 
304 4 53 2 100 2 360 2 675 12 162 2 524 2 679 2 410 2 109 2 412 2 794 2 528 4 314 2 734 2 483 2 419 2 575 4 318 2 370 2 740 6 372 2 633 6 426 2 68 2 121 2 274 8 434 2 73 2 437 2 386 6 234 2 542 4 277 2 547 4 389 2 650 2 444 2 595 2 239 2 32 2 814 4 333 2 83 2 337 4 86 2 824 6 395 2 144 2 454 2 145 6 827 4 657 2 92 4 511 2 775 2 780 2 299 2 665 4 783 2 
304 4 53 2 100 2 360 2 675 12 162 2 524 2 679 2 410 2 109 2 412 2 794 2 528 4 314 2 734 2 483 2 419 2 575 4 318 2 370 2 740 8 372 2 633 6 426 2 68 2 121 2 274 8 434 2 73 2 437 2 386 8 234 2 542 4 277 2 547 4 389 2 650 2 444 2 595 2 239 2 32 2 814 4 333 2 83 2 337 8 86 2 824 10 395 2 144 2 454 2 145 6 147 2 827 4 657 2 92 4 511 2 775 2 780 2 299 2 665 4 783 2 
304 4 53 2 100 2 360 2 675 12 162 2 524 2 679 2 410 2 109 2 412 2 794 2 528 4 314 2 734 2 483 2 419 2 575 4 318 2 370 2 740 6 372 2 633 6 426 2 68 2 121 2 274 8 434 2 73 2 437 2 386 6 234 2 542 4 277 2 547 4 389 2 650 2 444 2 595 2 239 2 32 2 814 4 333 2 83 2 337 8 86 2 824 10 395 2 144 2 454 2 145 6 827 4 657 2 92 4 511 2 775 2 780 2 299 2 665 4 783 2 
304 4 404 4 308 4 208 1 622 4 100 2 524 2 410 2 219 2 108 2 528 4 11 4 314 2 625 4 110 2 734 2 419 2 223 6 318 2 17 2 421 2 630 2 225 2 740 8 321 2 424 2 116 2 633 22 19 4 538 2 426 2 539 2 743 2 121 2 638 4 639 2 434 4 437 2 234 2 643 2 542 6 441 1 236 2 30 2 547 6 443 7 650 2 444 2 239 2 32 2 333 4 242 4 34 2 35 4 450 2 338 2 138 1 452 2 766 2 453 8 142 2 144 2 145 4 454 2 344 6 772 1 147 4 345 2 149 2 775 2 557 2 464 2 780 2 782 1 665 4 256 2 355 8 53 2 475 2 360 2 789 2 568 2 675 40 162 2 679 2 680 2 165 2 58 2 794 2 572 4 365 6 687 2 367 4 483 2 575 8 265 2 799 2 579 4 370 2 173 4 372 2 66 2 174 2 373 8 176 1 490 2 491 4 181 4 68 2 497 4 806 2 585 2 274 2 71 2 808 2 72 1 73 2 699 2 386 12 277 4 280 7 190 4 78 2 194 2 502 4 389 2 595 2 283 2 705 2 814 4 707 4 285 2 83 2 390 2 820 2 86 2 604 2 394 4 710 2 395 2 199 2 827 4 293 2 92 4 713 4 609 1 511 2 714 2 299 2 300 2 96 2 302 10 616 1 615 2 
304 4 404 4 308 4 622 4 100 2 524 2 410 2 219 2 108 2 528 4 11 4 314 2 625 4 110 2 734 2 419 2 223 6 318 2 17 2 421 2 630 2 225 2 740 8 321 2 424 4 116 2 633 22 19 4 538 2 426 2 539 2 743 2 121 2 638 4 639 2 434 4 437 2 234 2 643 2 542 6 236 2 30 2 547 6 650 2 444 2 239 2 32 2 333 4 242 4 34 2 35 4 450 2 338 2 452 2 766 2 453 8 142 2 144 2 145 8 454 2 344 6 345 2 149 2 775 2 557 2 464 2 780 2 665 4 256 2 783 4 355 8 53 2 475 2 360 2 789 2 568 4 675 40 162 2 679 2 680 2 165 2 58 2 794 2 572 4 365 6 687 2 367 4 483 2 575 8 265 2 799 2 579 4 370 2 173 4 372 2 66 2 174 2 373 8 490 2 491 4 181 6 68 2 497 4 806 2 585 2 274 6 71 2 808 2 73 2 699 2 386 12 277 4 190 4 78 2 194 2 502 4 389 2 595 2 283 2 705 2 814 4 707 4 285 2 83 2 390 2 820 2 86 2 604 2 394 4 710 2 395 2 199 2 827 4 293 2 92 4 713 4 511 2 714 4 299 2 300 2 96 2 302 10 615 2 
304 4 404 4 308 4 622 4 100 2 524 2 410 2 219 2 108 2 528 4 11 4 314 2 625 4 110 2 734 2 419 2 223 6 318 2 17 2 421 2 630 2 225 2 740 8 321 2 424 4 116 2 633 22 19 4 538 2 426 2 539 2 743 2 121 2 638 4 639 2 434 4 437 2 234 2 643 2 542 6 236 2 30 2 547 6 650 2 444 2 239 2 32 2 333 4 242 4 34 2 35 4 450 2 337 4 338 2 452 2 766 2 453 8 142 2 144 2 145 8 454 2 344 6 345 2 149 2 775 2 557 2 464 2 780 2 665 4 256 2 783 4 355 8 53 2 475 2 360 2 789 2 568 4 675 40 162 2 679 2 680 2 165 2 58 2 794 2 365 6 572 4 687 2 367 4 483 2 575 8 265 2 799 2 579 4 370 2 173 4 372 2 66 2 174 2 373 8 490 2 491 4 181 6 68 2 497 4 806 2 585 2 274 6 71 2 808 2 73 2 699 2 386 12 277 4 190 4 78 2 194 2 502 4 389 2 595 2 283 2 705 2 814 4 707 4 285 2 83 2 390 2 820 2 86 2 604 2 394 4 824 4 710 2 395 2 199 2 827 4 293 2 92 4 713 4 511 2 714 4 299 2 300 2 96 2 302 10 615 2 
304 4 404 4 308 4 622 4 100 2 524 2 410 2 219 2 108 2 221 2 528 4 11 4 314 2 625 4 110 2 734 2 419 2 223 6 318 2 17 2 421 2 630 4 225 2 740 10 321 2 424 4 116 2 633 20 19 4 538 2 426 2 539 2 743 2 121 2 638 4 639 2 434 4 437 2 234 2 643 2 542 6 236 2 30 2 547 6 650 2 444 2 239 2 32 2 333 4 242 4 34 2 35 4 450 2 337 4 338 2 452 2 766 2 453 8 142 2 144 2 145 10 454 2 344 8 147 2 345 2 149 2 775 2 557 2 464 2 780 2 351 2 665 4 256 2 783 4 355 6 53 2 475 4 360 2 789 4 362 2 568 4 675 38 162 2 679 2 680 2 165 2 58 2 794 2 796 2 365 8 572 4 687 2 367 4 483 2 575 8 265 2 799 2 579 4 370 2 173 4 372 2 66 2 174 2 373 12 490 2 491 4 378 2 181 6 68 2 497 4 806 2 585 2 274 6 71 2 808 2 73 2 699 2 386 16 277 4 190 4 78 2 194 2 502 4 389 2 595 2 283 2 705 2 814 4 707 6 285 2 83 2 390 2 820 2 86 2 604 2 394 4 824 4 395 2 199 2 827 4 293 2 92 4 713 4 511 2 93 2 296 2 714 4 299 2 300 2 96 2 302 8 615 2 
437 2 386 4 542 2 53 2 100 2 675 4 650 2 524 2 239 2 410 2 814 4 83 2 528 2 337 4 86 2 575 2 824 4 318 2 395 2 144 2 370 2 454 2 740 6 145 6 827 4 92 2 426 2 68 2 780 2 299 2 121 2 665 2 274 6 434 2 783 2 
100 2 524 2 410 2 108 2 528 2 110 2 223 6 318 2 630 3 740 6 321 2 633 24 426 2 121 2 745 3 434 2 437 2 542 2 643 2 439 2 30 2 547 6 650 2 239 2 333 4 447 2 248 2 338 2 766 2 144 2 142 2 145 6 454 2 344 6 775 2 778 2 464 2 780 2 665 2 783 2 355 2 53 2 360 2 475 3 54 2 789 3 675 28 162 2 680 2 572 4 365 6 483 2 261 2 575 2 370 2 372 2 173 4 580 2 66 2 174 2 373 8 490 2 68 2 806 2 274 6 809 2 73 2 386 4 277 4 194 2 195 2 389 2 595 2 814 4 285 2 707 4 83 2 390 2 820 2 86 2 604 2 824 2 395 2 710 2 827 4 293 2 92 2 299 2 302 4 
304 4 53 2 100 2 360 2 675 12 162 2 524 2 679 2 410 2 109 2 412 2 794 2 528 4 314 2 734 2 483 2 419 2 575 4 318 2 370 2 740 6 372 2 633 6 426 2 68 2 121 2 274 8 434 2 73 2 437 2 386 6 234 2 542 4 277 2 547 4 389 2 650 2 444 2 595 2 239 2 32 2 814 4 333 2 83 2 337 8 86 2 824 10 395 2 144 2 454 2 145 6 827 4 657 2 92 4 511 2 775 2 780 2 299 2 665 4 783 2 
304 4 53 2 100 2 360 2 408 4 675 12 162 2 524 2 679 2 410 2 109 2 221 2 412 2 794 2 528 4 314 2 734 2 483 2 419 2 575 4 318 2 370 2 740 6 372 2 633 6 426 2 68 2 121 2 274 8 434 2 73 2 437 2 386 8 234 2 542 4 277 2 547 4 389 2 650 2 444 2 595 2 239 2 32 2 814 4 333 2 83 2 337 8 824 10 395 2 144 2 454 2 145 8 827 4 92 4 511 2 775 2 780 2 781 2 299 2 665 4 49 2 783 2 
395 2 299 2 746 2 
395 2 299 2 746 2 
304 4 308 2 524 2 7 2 108 2 221 4 412 2 528 2 314 2 110 2 734 2 223 6 17 4 630 2 740 12 321 2 424 4 117 4 425 2 633 16 18 2 434 4 746 2 234 2 542 4 643 2 125 2 545 2 30 2 547 6 444 4 333 4 763 2 337 4 338 2 766 2 142 2 144 2 454 4 145 12 344 2 655 2 147 4 458 4 464 6 665 2 783 4 355 2 53 2 360 2 674 2 568 4 675 24 676 2 162 2 679 2 680 2 794 2 572 4 365 2 483 2 575 4 799 2 173 4 372 2 66 2 174 2 691 2 373 2 490 2 181 4 495 2 497 2 806 2 585 2 274 6 70 2 810 4 73 2 386 16 277 4 500 2 194 2 389 2 595 2 705 2 814 4 815 2 285 2 83 2 507 2 820 2 392 2 604 2 824 6 395 6 199 2 827 4 293 2 92 2 714 4 830 2 299 4 302 4 
419 2 812 2 210 2 719 2 808 2 
304 4 308 2 523 2 524 2 108 2 109 2 221 4 412 2 528 2 314 2 110 2 734 2 223 6 17 4 630 4 740 12 321 2 424 4 228 2 117 4 425 2 633 16 434 4 746 2 234 2 542 4 643 2 125 2 30 2 547 6 444 4 131 2 333 4 763 2 337 4 338 2 766 2 142 2 144 2 454 4 145 12 344 2 655 2 147 4 458 4 464 6 665 2 783 4 53 2 360 2 674 2 568 4 675 24 162 2 679 4 680 2 794 2 572 4 365 2 483 2 575 4 799 2 173 4 372 2 66 2 174 2 691 2 373 2 490 2 181 4 495 4 497 2 806 2 585 2 274 6 70 2 810 4 73 2 386 16 277 4 500 2 501 2 194 2 389 2 595 2 814 4 815 2 285 2 83 2 507 2 820 2 392 2 604 2 87 2 824 6 395 6 199 2 827 4 293 2 92 2 714 4 830 2 299 4 302 2 
304 4 308 2 524 2 108 2 109 2 221 4 412 2 528 2 314 2 110 2 734 2 223 6 17 4 630 2 740 12 321 2 424 4 117 4 324 2 425 2 633 16 434 4 746 2 26 2 234 2 542 4 643 2 125 2 30 2 547 6 444 4 333 4 763 2 337 4 338 2 766 2 142 2 144 2 454 4 145 12 344 2 655 2 147 4 45 2 458 4 464 6 665 2 783 4 355 2 53 2 360 2 674 2 568 4 675 24 162 2 679 4 680 2 794 2 572 4 365 2 688 2 483 2 575 4 799 2 173 4 372 2 66 2 174 2 691 2 373 2 490 2 181 4 272 2 495 2 497 2 806 2 585 2 274 6 70 2 810 4 73 2 386 16 277 4 500 2 194 2 389 2 595 2 705 2 814 4 815 2 285 2 83 2 507 2 820 2 392 2 604 2 824 6 395 6 199 2 827 4 293 2 92 2 714 4 830 2 299 4 302 4 
593 2 
475 3 789 3 675 2 728 1 707 2 8 2 38 2 601 2 365 2 390 2 531 2 630 3 486 4 225 6 344 2 373 2 633 2 635 2 428 2 831 2 382 2 717 2 23 2 98 3 520 2 
475 2 789 2 675 2 707 2 8 2 38 2 601 2 365 2 390 2 531 2 630 2 486 4 225 6 344 2 373 2 633 2 635 2 428 2 831 2 382 2 717 2 23 2 98 2 520 2 
475 2 789 2 675 2 707 2 8 2 38 2 601 2 365 2 390 2 531 2 630 2 486 4 225 6 344 2 373 2 633 2 635 2 428 2 831 2 382 2 717 2 23 2 98 2 520 2 
747 2 563 6 307 4 642 2 356 2 644 2 722 2 475 3 594 2 259 2 675 10 727 4 284 2 481 2 391 3 390 2 529 2 262 2 167 5 484 2 533 2 630 3 769 2 291 3 201 2 373 2 583 4 656 2 633 4 658 4 635 2 804 2 427 2 637 4 205 2 516 3 518 4 559 2 720 4 561 2 
563 6 307 4 356 2 722 2 475 2 259 2 675 10 727 4 481 2 529 2 262 2 167 4 484 2 533 2 630 2 373 2 583 4 633 4 635 2 427 2 804 2 637 4 698 2 747 2 642 2 644 2 755 2 594 2 284 2 390 2 391 2 136 2 769 2 291 2 201 2 656 2 658 4 516 2 205 2 559 2 518 4 720 4 561 2 
563 6 307 4 356 2 722 2 475 2 259 2 675 10 727 4 481 2 529 2 262 2 167 4 484 2 533 2 630 2 373 2 583 4 633 4 635 2 427 2 804 2 637 4 698 2 747 2 642 2 644 2 755 2 594 2 284 2 390 2 391 2 136 2 769 2 291 2 201 2 656 2 658 4 516 2 205 2 559 2 518 4 720 4 561 2 
563 6 307 4 356 2 722 2 475 2 259 2 675 10 727 4 481 2 529 2 262 2 167 4 484 2 533 2 630 2 373 2 583 4 633 4 635 2 427 2 804 2 637 4 698 2 747 2 642 2 644 2 755 2 594 2 284 2 390 2 391 2 136 2 769 2 291 2 201 2 656 2 658 4 516 2 205 2 559 2 518 4 720 4 561 2 
563 6 307 4 356 2 722 2 475 2 259 2 675 10 727 4 481 2 529 2 262 2 167 4 484 2 533 2 630 2 373 2 583 4 633 4 635 2 427 2 804 2 637 4 698 4 747 2 642 2 644 2 755 4 594 2 284 2 390 2 391 2 136 4 769 2 291 2 201 2 656 2 658 4 516 2 205 2 559 2 518 4 720 4 561 2 
798 2 306 2 340 2 211 2 246 2 230 2 
715 2 496 2 753 2 549 2 211 2 237 2 43 2 
3 1 477 2 126 1 675 10 313 2 162 2 504 2 413 1 411 2 683 1 59 2 652 2 709 2 368 2 369 1 264 2 825 2 508 2 455 2 172 2 633 8 19 2 150 2 152 2 381 2 560 2 
747 6 698 2 669 2 642 4 700 2 644 6 755 3 160 2 675 6 216 2 726 2 284 4 481 2 529 6 167 14 263 2 136 2 289 2 168 2 420 2 41 2 226 4 488 2 633 6 656 6 377 2 610 2 427 4 518 10 720 4 
590 2 281 4 312 2 546 2 583 2 675 1 633 1 104 2 658 2 727 2 33 2 612 2 245 1 22 2 732 2 718 2 541 2 85 7 
590 4 281 4 312 4 546 2 583 2 104 2 658 2 727 2 33 2 612 2 22 4 718 2 732 2 541 2 85 6 
590 8 281 4 312 8 546 2 583 2 675 1 633 1 104 2 658 2 727 2 33 2 612 6 245 1 22 8 718 8 732 2 541 2 85 10 
590 2 281 2 312 2 546 2 583 2 104 2 658 2 727 2 33 2 22 2 732 2 541 2 85 2 
474 3 623 2 790 2 675 14 678 2 60 2 628 2 572 6 222 2 61 2 530 2 223 12 317 2 224 2 173 6 174 2 231 2 633 14 271 2 429 2 120 2 806 2 586 6 751 2 648 2 194 2 332 2 604 2 605 2 766 2 770 2 829 1 151 2 469 2 
438 2 387 2 474 2 648 2 790 2 623 2 675 16 194 4 332 2 678 2 730 2 60 2 222 2 572 6 628 2 61 2 737 2 223 16 604 2 605 2 766 2 224 2 173 6 174 2 693 2 231 2 633 14 271 2 429 2 806 4 469 2 586 4 
474 2 158 2 359 4 675 32 678 2 478 2 163 2 730 2 731 2 60 2 222 2 628 2 572 12 61 2 735 2 629 2 573 2 223 22 578 4 224 2 173 10 423 2 174 6 693 2 231 2 323 2 633 28 271 6 429 2 120 2 806 4 586 4 329 1 438 2 276 2 387 2 75 2 591 2 648 2 194 4 332 2 596 2 762 1 550 2 336 2 551 2 653 1 602 1 604 4 135 4 605 2 766 6 398 2 151 2 777 2 206 2 252 2 469 2 468 2 154 2 
721 2 258 2 474 2 788 2 102 6 159 2 212 2 790 2 623 2 161 2 675 46 55 2 678 2 681 4 107 2 729 2 218 2 220 2 730 2 795 2 60 2 628 2 572 20 222 4 61 4 737 2 223 44 689 2 63 4 224 2 371 2 320 2 114 2 173 20 174 2 581 2 693 2 231 2 633 44 326 2 271 4 429 2 120 1 806 2 232 2 586 31 588 2 587 2 438 2 387 2 750 2 648 2 757 2 194 2 759 2 332 4 241 2 506 2 451 2 764 2 604 2 288 2 605 2 766 2 553 2 509 4 457 2 251 2 459 2 295 2 202 2 151 1 204 2 95 2 558 2 716 2 465 2 664 2 48 2 254 6 469 2 614 2 666 2 155 4 50 2 832 2 157 2 
677 2 

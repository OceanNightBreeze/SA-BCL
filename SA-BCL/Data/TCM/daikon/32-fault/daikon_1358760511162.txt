#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 637 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 509 347 447 41 480 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 717 230 44 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 717 230 44 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 308 479 635 238 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 136 28 169 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 607 169 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 136 28 169 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 607 169 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:lte(II)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName; | CONDITION | 27362 | if (x) -> if (!x)
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:gte(II)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoAux:hashCode()I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_ntk()I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakHasherMap:processQueue()V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.ModBitTracker:num_samples()I
daikon.Quant:eq(JJ)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:modulus([I)[I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONDITION | 4095 | if (x) -> if (!x)
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariants:Invariants()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.ModBitTracker:split(I)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quant:lexLTE([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.RootNode:RootNode()V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.Intern:internSubsequence([III)[I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I | ASSIGN | 71159 | = null
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:gcd([I)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.ProglangType:isScalar()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.Invariant:logDetail()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:intersection([I[I)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.ArraysMDE:sum([D)D
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.ProglangType:isArray()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:lexLT([I[I)Z | CONDITION | 170646 | if (x) -> if (!x)
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.MathMDE:mod_positive(II)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C | CONSTANT | 4375 | 0 -> 1
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Debug:logOn()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:concat([I[I)[I
daikon.ValueTuple:isMissing(I)Z
daikon.inv.Invariant:logOn()Z
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.ModBitTracker:num_vars()I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant; | ASSIGN | 41066 | = null
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:memberOf(I[I)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptName:isEnterPoint()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:lt(II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:eltsLTE([II)Z
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eq(FF)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGTE([II)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Prestate:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaCharStream:ReadByte()C
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Ppt:Ppt()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:setDiff([I[I)[I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:isReverse([I[I)Z
daikon.VarInfo:relate_var()V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.diff.Node:Node()V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:eq(II)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 64304 | return null
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.PptSlice0:arity()I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eq(DD)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.Intern:intern([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:ne(II)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | CONSTANT | 51514 | 3 -> 0
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:subsetOf([D[D)Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 127505 | = null
daikon.inv.ValueSet:ValueSet(I)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.Quant:gt(II)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:noDups([I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.ProglangType:dimensions()I
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.Invariant:getConfidence()D
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V | ASSIGN | 2809 | = null
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.PptSlice1:num_samples()I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z | ASSIGN | 9658 | = null
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.ValueTuple:size()I
daikon.Debug:logDetail()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfo:new_ppt()V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double; | ASSIGN | 17372 | = null
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:memberOf(S[S)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:gcd(II)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.PptSlice1:arity()I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.Quant:lexGTE([I[I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo; | RETURN | 315 | return null
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Intern:numIntArrays()I
jtb.JavaCharStream:FillBuff()V
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:memberOf(F[F)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName:hashCode()I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z | ASSIGN | 8607 | = null
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:union([I[I)[I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
335 2 61 2 323 2 484 2 336 4 130 2 51 2 434 2 125 2 
58 2 191 6 391 2 94 2 48 2 364 6 508 2 431 2 143 6 446 2 388 2 
690 2 244 6 484 2 625 6 651 2 310 2 352 2 591 4 220 4 130 2 50 6 520 2 620 6 
217 4 580 2 258 2 550 8 551 26 128 6 130 6 262 2 357 16 155 30 53 10 449 10 692 16 482 6 484 6 539 4 755 8 296 10 206 10 490 8 363 4 367 4 571 12 592 2 140 2 114 10 543 2 572 16 65 8 497 2 
698 4 72 6 
631 2 
721 2 465 2 627 2 683 2 551 4 288 2 261 2 357 2 53 2 155 6 449 4 482 2 692 2 564 2 734 2 539 2 755 2 296 2 206 2 571 2 114 2 572 2 641 2 
463 6 692 8 296 4 206 4 363 2 551 12 571 5 209 2 114 4 210 2 184 4 302 6 572 8 357 8 358 4 155 14 53 4 
547 2 702 4 66 2 501 2 92 8 605 4 653 2 657 10 173 4 98 62 686 6 535 4 103 2 384 2 195 4 263 2 387 4 156 4 667 2 672 2 691 2 203 2 679 2 110 4 182 4 757 4 274 14 248 10 427 4 491 2 160 2 62 2 542 2 252 2 621 4 145 2 233 2 432 2 186 4 88 2 
599 2 42 2 216 2 170 2 631 2 583 2 553 2 333 2 390 2 453 2 
325 2 147 2 43 2 92 2 3 2 376 2 579 2 477 4 384 2 422 2 689 4 201 2 335 2 484 2 735 2 592 2 249 2 494 2 743 2 306 2 703 2 702 4 349 2 606 2 130 2 222 2 401 2 75 2 77 2 226 2 264 2 671 2 33 2 514 2 138 2 757 2 319 2 760 2 234 2 280 2 324 2 282 2 
371 8 463 6 307 4 374 4 705 2 580 2 49 6 629 2 551 34 128 4 130 4 357 20 53 14 155 38 358 4 449 6 692 20 482 4 484 4 317 4 539 2 755 14 296 14 298 2 206 14 571 17 82 2 114 14 184 4 302 6 572 20 643 4 65 6 
62 2 686 2 92 2 
200 22 306 2 466 2 685 2 271 2 748 2 615 2 301 2 762 2 682 2 687 2 213 2 557 2 545 10 
670 2 637 2 
492 2 
130 2 634 2 
464 2 328 2 130 4 
41 2 480 2 483 2 701 2 16 2 684 2 284 2 347 2 47 2 504 2 139 2 377 8 126 2 570 2 509 2 99 8 63 2 709 8 764 2 87 2 314 2 447 2 
175 2 420 2 253 1 719 2 
420 2 134 2 
379 2 367 2 420 2 92 2 330 2 199 2 219 2 
420 2 292 2 330 2 
420 2 628 2 330 2 
175 2 495 2 409 2 
420 2 330 2 
522 2 495 2 
420 2 257 2 
175 2 495 2 531 2 
175 2 674 2 19 2 
175 2 562 2 95 2 
0 2 188 2 175 2 
175 2 338 2 397 2 
495 2 225 2 
420 2 440 2 
19 2 154 2 
562 2 268 2 
0 2 680 2 
430 2 338 2 
161 2 495 2 
614 2 338 2 
0 2 713 2 
562 2 76 2 
758 2 19 2 
175 2 346 2 495 2 531 2 
175 2 346 2 495 2 531 2 532 2 
175 2 295 2 495 2 
175 2 495 2 505 2 
1 2 647 2 337 2 386 2 
289 2 92 2 102 2 199 2 
379 2 289 2 92 2 102 2 751 2 199 2 
367 2 420 2 92 2 330 2 199 2 403 2 
138 2 573 2 
367 2 92 2 255 2 199 2 
0 2 695 2 
338 2 362 2 
19 2 586 2 
562 2 345 2 
245 2 
562 2 116 2 338 2 
562 2 338 2 666 2 
562 2 338 2 669 2 
343 2 467 6 92 2 69 2 70 2 536 6 135 2 199 2 
202 2 495 2 
200 6 359 2 673 2 645 2 418 2 732 2 180 2 588 4 489 2 149 2 475 4 60 2 355 2 73 2 370 2 512 2 699 2 513 2 
175 2 168 2 
45 2 
44 2 287 2 193 2 242 2 331 2 198 6 52 2 105 1 54 2 484 14 392 6 637 2 159 2 394 4 61 2 540 2 211 6 162 6 21 2 598 4 642 2 644 2 654 1 441 2 351 2 659 1 708 4 313 2 661 2 130 14 224 4 558 2 227 2 34 2 35 2 451 2 230 2 272 2 81 1 410 2 365 2 518 2 142 4 85 2 86 4 717 2 
44 2 287 2 193 2 7 2 242 2 331 2 198 6 52 2 54 2 484 14 392 6 637 2 159 2 394 6 61 2 540 2 211 6 162 6 21 2 598 4 642 2 644 2 441 2 351 2 708 4 313 2 661 2 130 14 224 4 558 2 227 2 34 2 35 2 451 2 230 2 407 2 272 2 410 2 365 2 518 2 142 4 85 2 86 4 717 2 
67 2 
157 2 763 2 
574 2 575 8 373 2 148 2 286 2 191 6 421 2 93 4 48 2 378 2 473 2 4 2 725 2 332 2 54 2 55 2 11 2 388 4 12 2 107 2 484 6 158 2 487 2 58 2 637 2 392 4 159 2 118 4 601 2 652 2 746 2 656 2 351 2 506 2 25 2 508 4 442 4 130 12 400 2 662 2 611 2 227 2 265 8 34 2 450 4 677 4 567 2 451 2 364 6 618 2 321 2 368 2 412 4 142 2 414 2 519 2 415 2 143 6 86 2 523 10 
574 2 575 8 373 2 148 2 286 2 191 8 421 2 93 4 48 2 378 2 473 2 4 2 725 2 54 2 55 2 11 2 12 2 388 4 107 2 484 6 158 2 487 2 58 2 391 2 637 2 392 4 159 2 541 2 118 4 601 2 652 2 746 2 656 2 351 2 25 2 508 4 442 4 130 12 400 2 662 2 611 2 227 2 265 8 34 2 450 4 566 2 677 4 451 2 567 2 364 8 618 2 321 2 368 2 142 2 412 4 414 2 519 2 415 2 460 4 143 6 86 2 523 10 
574 2 601 2 677 2 652 2 286 2 746 2 364 2 725 2 618 2 508 2 321 2 412 4 143 2 662 2 118 4 11 2 12 2 388 2 
574 2 575 4 373 2 148 2 286 2 191 6 421 2 93 4 48 2 378 2 473 2 4 2 725 2 332 2 54 2 55 2 11 2 388 4 12 2 107 2 484 6 158 2 487 2 391 2 637 2 392 4 159 2 118 4 601 2 652 2 746 2 656 2 351 2 506 2 25 2 508 4 442 4 130 12 400 2 662 2 611 2 227 2 265 4 34 2 450 4 677 4 567 2 451 2 364 6 618 2 321 2 368 2 412 4 142 2 414 2 519 2 415 2 143 4 86 2 523 6 
574 2 575 4 373 2 148 2 286 2 191 6 421 2 93 4 48 2 378 2 473 2 4 2 725 2 332 2 54 2 55 2 11 2 388 4 12 2 107 2 484 6 158 2 487 2 637 2 392 4 159 2 118 4 601 2 652 2 746 2 656 2 351 2 506 2 25 2 508 4 442 4 130 12 400 2 662 2 446 2 611 2 227 2 265 4 34 2 450 4 677 4 567 2 451 2 364 4 618 2 321 2 368 2 412 4 142 2 414 2 519 2 415 2 143 6 86 2 523 6 
574 2 575 8 373 2 148 2 286 2 191 6 421 2 93 4 48 2 378 2 473 2 4 2 725 2 332 2 54 2 55 2 11 2 388 4 12 2 107 2 484 6 158 2 487 2 58 2 637 2 392 4 159 2 118 4 601 2 652 2 746 2 656 2 351 2 506 2 25 2 508 4 442 4 130 12 400 2 662 2 611 2 227 2 265 4 34 2 450 4 677 4 567 2 451 2 364 6 618 2 321 2 368 2 412 4 142 2 414 2 519 2 415 2 143 6 86 2 523 6 
574 2 575 8 373 2 148 2 286 2 191 8 421 2 93 4 48 2 378 2 473 2 4 2 725 2 332 2 54 2 55 2 11 2 388 4 12 2 107 2 484 6 158 2 487 2 58 2 637 2 392 4 159 2 118 4 601 2 652 2 746 2 656 2 351 2 506 2 25 2 508 4 442 4 130 12 400 2 662 2 446 2 611 2 227 2 265 8 34 2 450 4 677 4 567 2 451 2 364 6 618 2 321 2 368 2 412 4 142 2 414 2 519 2 415 2 143 8 86 2 523 10 
574 2 575 8 373 2 148 2 286 2 191 6 421 2 93 4 48 2 378 2 473 2 4 2 725 2 332 2 54 2 55 2 11 2 388 4 12 2 107 2 484 6 158 2 487 2 58 2 637 2 392 4 159 2 118 4 601 2 652 2 746 2 656 2 351 2 506 2 25 2 508 4 442 4 130 12 400 2 662 2 611 2 227 2 265 8 34 2 450 4 677 4 567 2 451 2 364 6 618 2 321 2 368 2 412 4 142 2 414 2 519 2 415 2 143 6 86 2 523 10 
574 2 575 2 372 6 373 2 191 12 378 2 4 2 193 2 6 6 5 2 7 2 198 6 9 1 388 4 12 2 11 2 392 6 207 2 394 6 395 2 593 6 211 8 20 2 212 2 597 1 598 4 215 2 601 2 602 2 603 2 24 6 398 2 25 2 609 1 400 2 224 4 29 2 611 2 227 2 34 2 35 2 407 2 410 2 618 2 412 4 413 6 414 4 415 2 38 2 622 6 40 4 44 2 421 2 48 4 242 2 52 2 633 2 634 6 54 2 55 2 424 2 57 2 637 2 61 2 640 2 642 2 644 2 435 1 437 2 438 2 652 2 654 2 441 2 656 2 442 8 659 2 260 2 661 4 662 2 446 4 448 6 450 4 676 4 451 2 677 4 452 6 272 2 454 2 275 2 278 4 458 2 86 4 462 7 89 6 286 2 93 6 287 12 473 2 472 6 291 10 104 2 688 2 105 2 481 7 693 2 484 24 485 2 107 2 487 2 109 1 492 6 118 4 117 2 700 2 502 2 309 2 311 1 508 4 708 4 313 2 130 46 132 2 710 1 711 1 712 2 321 2 142 4 518 2 519 2 143 8 144 2 523 2 326 6 148 2 725 2 327 2 533 2 727 2 328 6 152 6 332 2 331 2 158 4 159 2 738 6 540 2 162 6 742 8 164 2 746 2 351 2 558 2 560 2 561 2 178 1 567 2 364 4 365 2 368 2 
574 2 575 6 89 6 372 6 373 2 286 2 191 12 93 6 378 2 472 6 473 2 287 12 4 2 5 2 6 6 193 2 291 10 7 2 104 2 688 4 198 6 105 2 11 2 12 2 388 4 693 2 107 2 485 2 484 26 487 2 392 6 207 2 394 6 492 6 593 6 395 2 211 8 212 2 20 2 598 4 117 4 118 4 215 2 700 4 601 2 602 2 603 2 502 2 24 6 398 2 309 2 25 2 508 4 708 4 313 2 130 48 400 2 132 2 224 4 29 2 611 2 227 2 612 2 315 2 35 2 34 2 405 2 407 2 712 2 410 2 618 2 321 2 413 6 518 2 412 4 142 4 414 4 519 2 415 2 143 8 144 2 38 2 622 6 523 2 40 4 326 6 44 2 148 2 421 2 48 4 327 2 725 2 533 2 328 6 727 2 152 6 242 2 634 6 633 2 331 2 52 2 332 2 55 2 54 2 424 2 158 4 57 2 58 4 637 2 159 2 738 6 61 2 540 2 162 6 640 2 642 2 644 2 742 8 437 2 164 2 438 2 652 2 746 2 654 2 441 2 656 2 351 2 260 2 659 2 442 8 661 4 662 2 558 2 448 6 561 2 560 2 450 4 676 8 677 4 567 2 451 2 452 6 272 2 454 2 365 2 364 8 275 2 368 2 458 2 278 4 86 4 
574 2 575 6 89 6 372 6 373 2 286 2 191 12 93 6 378 2 472 6 473 2 287 12 4 2 5 2 6 6 193 2 291 10 7 2 104 2 688 4 198 6 105 2 11 2 12 2 388 4 693 2 107 2 485 2 484 26 487 2 392 6 207 2 394 6 492 6 593 6 395 2 211 8 212 2 20 2 598 4 117 4 118 4 215 2 700 4 601 2 602 2 603 2 502 2 24 6 398 2 309 2 25 2 508 4 708 4 313 2 130 48 400 2 132 2 224 4 29 2 611 2 227 2 612 2 315 2 35 2 34 2 405 2 407 2 712 2 410 2 618 2 321 2 413 6 518 2 412 4 142 4 414 4 519 2 415 2 143 8 144 2 38 2 622 6 523 6 40 4 326 6 44 2 148 2 421 2 48 4 327 2 725 2 533 2 328 6 727 2 152 6 242 2 634 6 633 2 331 2 52 2 332 2 55 2 54 2 424 2 158 4 57 2 58 4 637 2 159 2 738 6 61 2 540 2 162 6 640 2 642 2 644 2 742 8 437 2 164 2 438 2 652 2 746 2 654 2 441 2 656 2 351 2 260 2 659 2 442 8 661 4 662 2 558 2 448 6 265 4 561 2 560 2 450 4 676 8 677 4 567 2 451 2 452 6 272 2 454 2 364 8 365 2 275 2 368 2 458 2 278 4 86 4 
574 2 575 6 372 6 373 2 191 16 378 2 4 2 193 2 6 12 5 2 7 2 198 8 388 4 12 2 11 2 391 2 392 6 207 4 589 6 394 6 395 2 593 6 211 12 20 2 212 2 598 6 215 2 396 6 22 2 601 2 602 2 603 2 24 6 398 2 25 2 400 2 224 4 29 2 611 2 227 2 612 2 34 2 35 2 405 2 406 6 407 2 408 6 410 2 618 2 412 4 413 6 414 4 415 2 38 2 622 12 40 4 44 2 421 2 48 4 242 2 52 2 633 4 634 12 55 2 54 2 424 2 57 2 58 4 637 2 61 2 640 2 642 2 644 2 437 2 438 2 652 2 256 2 654 4 441 2 656 2 442 8 659 4 260 2 661 4 662 2 446 2 448 6 265 4 450 4 676 10 451 2 677 4 452 6 270 2 272 2 454 2 455 2 278 4 458 2 86 4 89 12 91 6 286 2 93 6 287 10 473 2 472 6 291 8 104 2 688 4 105 4 693 2 107 2 484 24 485 2 694 6 487 2 492 12 115 6 118 4 117 4 700 4 500 6 502 2 309 2 508 4 708 4 313 2 130 52 511 2 132 2 315 2 515 2 712 2 321 2 142 4 518 2 519 2 143 10 144 2 523 6 525 2 326 6 148 2 725 2 327 2 533 2 727 2 328 12 152 6 332 2 331 2 158 4 159 2 738 6 540 2 162 8 742 8 164 2 746 2 548 6 351 2 354 2 558 2 561 2 560 2 567 2 365 2 364 10 368 2 
574 2 575 6 601 2 148 2 652 2 421 2 191 4 746 2 93 2 48 2 378 2 25 2 442 2 508 4 130 4 662 2 332 2 55 2 611 2 12 2 388 4 265 4 450 2 567 2 487 2 58 2 364 6 368 2 321 2 412 2 519 2 415 2 143 6 118 2 523 4 
574 2 575 6 468 3 191 4 93 2 378 2 287 4 4 2 193 2 291 2 7 2 198 6 105 3 388 4 12 2 484 24 487 2 392 6 394 6 211 8 118 2 598 4 601 2 123 2 25 2 508 4 708 4 313 2 130 28 224 4 611 2 227 2 34 2 35 2 407 2 410 2 321 2 412 2 142 4 518 2 415 2 519 2 143 6 146 2 523 2 528 2 624 2 44 2 148 2 45 2 421 2 48 2 240 2 242 2 332 2 52 2 331 2 54 2 55 2 58 2 637 2 159 2 540 2 61 2 162 6 642 2 644 2 646 2 652 2 746 2 654 3 441 2 350 2 351 2 442 2 659 3 176 2 661 2 662 2 558 2 450 2 567 2 451 2 272 2 364 6 365 2 275 2 368 2 86 4 
25 2 383 2 567 2 
25 2 383 2 567 2 
189 2 575 6 373 2 190 2 191 16 93 4 473 2 287 4 474 2 193 2 383 2 291 2 7 2 688 4 198 2 105 2 11 2 388 4 484 16 487 2 391 4 392 6 299 2 394 6 593 2 211 2 117 4 118 2 119 4 700 4 601 2 602 4 309 2 25 4 508 4 708 4 313 2 130 24 224 4 227 2 137 2 35 2 34 2 407 2 410 2 618 2 142 4 518 2 322 2 412 2 414 2 232 2 143 12 523 6 40 2 237 2 421 2 48 4 632 2 242 2 52 2 331 2 54 2 538 4 424 2 158 4 636 2 58 4 637 2 159 2 638 2 540 2 61 2 339 2 162 2 642 2 644 2 342 2 164 2 747 2 746 4 441 2 656 2 351 2 259 4 442 4 660 2 552 2 661 6 662 2 446 4 558 2 265 4 450 2 676 4 677 4 567 6 451 2 272 2 365 2 364 12 278 2 459 2 86 4 
137 2 157 2 693 2 484 2 36 2 451 2 502 2 636 2 299 2 471 2 287 2 725 2 593 2 291 2 130 4 329 2 40 2 
189 2 575 6 373 2 190 2 191 16 93 4 473 2 287 2 193 2 383 2 584 2 7 2 688 4 198 2 105 4 11 2 388 4 107 2 484 16 487 2 391 4 392 6 299 2 393 2 394 6 593 2 211 2 117 4 118 2 119 4 700 4 601 2 602 4 309 2 25 4 508 4 708 4 313 2 130 24 224 4 227 2 137 2 35 2 34 2 407 2 410 2 618 2 142 4 518 2 322 4 412 2 414 4 232 2 143 12 716 2 523 6 421 2 48 4 632 2 242 2 52 2 331 2 54 2 538 4 424 2 158 4 636 2 58 4 637 2 159 2 638 2 540 2 61 2 339 2 162 2 433 2 642 2 544 2 644 2 342 2 164 2 746 4 441 2 656 2 351 2 259 4 442 4 660 2 661 6 662 2 446 4 558 2 265 4 450 2 676 4 677 4 567 6 451 2 272 2 365 2 364 12 278 2 459 2 86 4 
189 2 575 6 373 2 190 2 191 16 93 4 192 2 473 2 287 4 193 2 383 2 291 2 7 2 688 4 198 2 105 2 11 2 388 4 107 2 484 16 487 2 391 4 392 6 299 2 394 6 593 2 211 2 117 4 118 2 119 4 700 4 601 2 602 4 309 2 25 4 508 4 708 4 313 2 130 24 224 4 227 2 137 2 35 2 34 2 407 2 410 2 617 2 618 2 142 4 518 2 322 2 412 2 414 4 232 2 143 12 523 6 40 2 421 2 48 4 632 2 242 2 52 2 331 2 54 2 538 4 729 2 424 2 158 4 636 2 58 4 637 2 159 2 638 2 540 2 61 2 339 2 162 2 642 2 644 2 342 2 164 2 746 4 441 2 656 2 351 2 259 4 442 4 660 2 661 6 662 2 446 4 558 2 265 4 450 2 676 4 677 4 567 6 451 2 272 2 759 2 365 2 364 12 278 2 459 2 86 4 461 2 
238 2 287 2 380 2 193 2 242 2 331 2 198 2 54 2 478 2 10 2 479 2 730 2 635 2 484 16 204 1 637 2 392 6 111 2 159 2 394 2 61 2 211 2 340 2 594 2 162 2 251 2 642 2 644 2 344 2 604 1 308 2 441 2 707 2 351 2 708 2 661 2 130 20 27 2 752 2 224 2 558 2 30 2 227 2 32 2 35 2 34 2 451 2 410 2 411 2 518 2 142 4 86 4 281 2 
529 3 44 2 469 2 578 4 150 2 587 6 155 5 53 2 105 3 294 3 13 4 692 2 484 4 296 2 206 2 114 2 250 4 697 2 18 2 211 2 163 2 65 4 704 2 654 3 551 4 353 2 507 1 443 2 128 2 130 10 357 2 228 2 316 3 568 4 361 2 37 2 616 2 366 2 456 4 572 2 524 2 
529 2 44 2 704 2 469 2 578 4 580 2 654 2 150 2 551 4 353 2 443 2 128 2 130 10 587 6 357 2 53 2 155 4 105 2 13 4 294 2 228 2 692 2 316 2 484 4 568 4 755 2 296 2 361 2 206 2 37 2 616 2 366 2 456 4 571 2 114 2 697 2 250 4 18 2 211 2 572 2 524 2 163 2 65 4 
529 2 44 2 704 2 469 2 578 4 580 2 654 2 150 2 551 4 353 2 443 2 128 2 130 10 587 6 357 2 53 2 155 4 105 2 13 4 294 2 228 2 692 2 316 2 484 4 568 4 755 2 296 2 361 2 206 2 37 2 616 2 366 2 456 4 571 2 114 2 697 2 250 4 18 2 211 2 572 2 524 2 163 2 65 4 
529 2 44 2 704 2 469 2 578 4 580 2 654 2 150 2 551 4 353 2 443 2 128 2 130 10 587 6 357 2 53 2 155 4 105 2 13 4 294 2 228 2 692 2 316 2 484 4 568 4 755 2 296 2 361 2 206 2 37 2 616 2 366 2 456 4 571 2 114 2 697 2 250 4 18 2 211 2 572 2 524 2 163 2 65 4 
529 2 44 2 704 2 469 2 578 4 580 4 654 2 150 2 551 4 353 2 443 2 128 2 130 10 587 6 357 2 53 2 155 4 105 2 13 4 294 2 228 2 692 2 316 2 484 4 568 4 755 4 296 2 361 2 206 2 37 2 616 2 366 2 456 4 571 4 114 2 697 2 250 4 18 2 211 2 572 2 524 2 163 2 65 4 
312 2 23 2 197 2 385 2 706 2 334 2 
283 2 744 2 267 2 129 2 382 2 488 2 706 2 
187 2 2 2 577 2 90 2 218 1 470 1 351 2 6 2 290 2 130 10 537 2 484 8 675 2 203 1 679 1 297 2 59 2 205 2 112 2 246 2 590 2 428 1 276 2 761 2 639 2 84 2 
371 2 463 4 122 2 705 1 580 4 49 4 551 12 658 2 239 2 128 2 71 2 130 6 422 2 402 2 357 6 155 15 53 6 264 2 692 6 484 6 317 2 404 2 755 5 296 6 206 6 183 2 571 5 114 6 184 2 572 6 65 4 
13 2 243 2 179 2 229 2 578 2 516 2 549 2 749 2 174 2 456 2 141 2 585 2 279 3 
13 2 243 2 179 2 484 1 229 2 578 2 516 4 549 2 749 2 320 1 174 2 456 2 141 2 534 2 714 2 130 1 585 2 279 6 
13 2 243 2 179 2 229 4 578 2 516 4 549 4 749 2 174 4 456 2 141 2 534 2 714 2 585 2 279 6 
13 2 243 2 179 2 484 1 229 8 578 2 516 4 549 8 749 2 320 1 174 8 456 2 141 2 534 6 714 8 130 1 585 2 279 10 
375 2 96 4 581 2 97 2 381 2 194 1 7 4 8 2 106 2 389 1 484 36 486 2 17 2 696 4 394 34 300 5 596 2 303 2 120 2 503 2 708 18 130 40 28 2 131 1 133 2 224 16 136 2 31 2 613 2 35 4 407 4 517 2 715 2 521 2 416 4 623 2 718 2 526 2 417 2 527 4 720 2 722 2 419 1 626 2 236 2 46 2 530 2 630 4 724 2 151 2 728 2 726 2 423 2 153 2 242 6 56 2 247 2 740 2 64 2 741 2 166 4 649 2 650 1 167 4 68 2 169 2 439 4 441 6 172 1 750 2 444 2 356 2 556 2 664 4 78 14 559 2 266 2 565 2 269 2 569 2 80 2 185 2 
527 4 235 2 722 2 576 2 236 2 46 2 530 2 285 2 723 2 630 40 724 2 97 2 151 2 476 2 726 4 728 2 153 2 196 2 242 2 8 2 731 2 389 2 56 4 484 46 108 2 15 2 426 2 113 2 696 2 208 2 300 2 394 44 429 4 739 2 214 2 496 2 546 2 304 2 305 2 600 6 165 2 648 4 166 4 649 2 169 2 439 2 441 2 124 2 607 2 608 2 26 2 399 4 127 2 708 20 444 2 221 2 445 2 510 2 177 2 28 2 130 48 356 2 555 2 74 4 554 2 223 2 224 20 556 4 663 4 665 2 78 6 668 2 136 2 559 2 563 2 753 2 35 2 79 2 565 2 181 2 269 6 318 2 678 2 756 2 231 2 273 2 83 2 619 2 416 4 185 2 
720 2 527 4 722 2 419 2 626 2 46 2 375 2 581 2 96 6 630 14 724 2 97 2 582 2 100 2 726 6 101 2 7 6 241 2 242 4 106 2 425 2 56 6 484 40 17 2 736 2 737 8 113 2 696 4 394 40 300 6 247 2 595 2 596 4 741 2 120 2 304 6 121 8 498 2 745 2 166 4 648 2 649 4 167 6 169 2 68 2 439 6 348 8 503 2 441 4 171 2 655 2 750 2 708 20 28 2 130 44 356 2 133 2 224 18 556 2 664 2 78 10 559 2 136 2 31 2 266 2 35 2 565 2 318 2 569 2 407 6 517 2 681 2 457 2 521 2 416 4 39 2 185 2 718 2 526 2 417 2 
527 6 722 2 576 2 419 8 46 2 530 4 630 14 97 2 724 2 151 4 726 4 728 4 194 4 7 10 153 4 423 2 293 2 242 2 8 4 389 2 56 4 484 30 733 2 14 2 113 2 696 2 394 42 300 2 493 2 740 12 341 2 303 12 64 2 254 2 436 4 499 2 166 6 649 2 650 4 169 2 439 2 441 2 607 2 708 14 444 4 28 2 130 32 131 2 356 2 610 2 224 14 556 2 78 8 559 2 136 2 35 2 565 2 360 4 269 6 756 2 407 10 277 2 369 2 416 6 185 2 623 2 
754 2 

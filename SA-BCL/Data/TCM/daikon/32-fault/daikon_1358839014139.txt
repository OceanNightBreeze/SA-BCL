#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 392 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (304,790) (304,790) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 603 1035 
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 205 986 369 103 441 80 216 932 1129 522 202 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (961,1136) (125,582) (125,582) 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 660 (961,1136) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 660 (961,1136) (961,1136) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 660 (961,1136) 
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (304,790) 1016 958 754 928 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 188 383 361 
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 11 913 349 (270,384,402,749,832,952,990) (341,853) 136 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 701 1076 906 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 701 1076 906 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_124()Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:jj_3R_48()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | CONDITION | 7988 | if (x) -> if (!x)
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:ne(II)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParser:jj_3R_74()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:lexNotEqual([I[I)Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_20()Z
jtb.JavaParser:jj_3R_116()Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:gcd(II)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParser:jj_3_36()Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:jj_3R_77()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_3R_49()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:jj_3R_118()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:jj_3_29()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:pairwiseLT([I[I)Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:lte(II)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_106()Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_17(I)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.JavaParser:jj_3_18()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:jj_3_5()Z
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_125()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_3R_122()Z
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments; | ASSIGN | 49480 | = null
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_161()Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
daikon.Quant:lexEqual([I[I)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:jj_3R_60()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_3R_70()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.Ppt:Ppt()V
jtb.JavaParser:jj_3R_123()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:sameLength([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:subsetOf([D[D)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfo:isPointer()Z
jtb.JavaParser:jj_3R_102()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf([F[D)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name; | RETURN | 55834 | return null
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:union([I[I)[I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.ArraysMDE:sum([[D)D
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLT([II)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:jj_3R_149()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:jj_2_10(I)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaParser:jj_3R_98()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1211 | = null
utilMDE.Intern:intern([J)[J
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.MathMDE:sign(I)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:eltsLTE([II)Z
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaParser:jj_3R_80()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_62()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.ArraysMDE:indexOf([II)I
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:logDetail()Z
jtb.JavaParser:jj_3R_61()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_10()Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:subsetOf([I[I)Z
daikon.inv.Invariant:justified()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:jj_3R_110()Z
jtb.JavaParser:jj_2_18(I)Z
daikon.Quant:lexGT([I[I)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair; | RETURN | 2847 | return null
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_3_13()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_55()Z
daikon.Debug:logOn()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_75()Z
daikon.Quant:memberOf(F[F)Z
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName:hashCode()I
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_3_19()Z
jtb.JavaParser:jj_3_14()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParser:jj_3R_72()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3R_63()Z
daikon.Debug:logDetail()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptName:isEnterPoint()Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_115()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:jj_3R_103()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfo:relate_var()V
daikon.VarInfo:new_ppt()V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_109()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.MathMDE:modulus([I)[I
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParser:jj_3R_86()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:InvMap()V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:lt(II)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_21()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String; | RETURN | 6378 | return null
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:jj_3R_56()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:min([I)I
daikon.Quant:setEqual([I[I)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | CONDITION | 18478 | if (x) -> if (!x)
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3_27()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isFloat()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_162()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3_1()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:eq(JJ)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:intersection([I[I)[I
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.Quant:memberOf(D[F)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:eq(DD)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3_28()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaParser:jj_3R_85()Z
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | STATEMENT | 12352 | stmt -> ;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_104()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:eltwiseNotEqual([I)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:arity()I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_25()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_99()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3R_114()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParser:jj_3R_101()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.WeakHasherMap:size()I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:gte(II)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eq(II)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_68()Z
daikon.PptName:isCombinedExitPoint()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:lexLT([I[I)Z
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3_15()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 105786 | = null
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_76()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 10696 | 1 -> 0
jtb.JavaParser:jj_3_3()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaParser:jj_3R_89()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:concat([I[I)[I
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | OPERATOR | 54314 | != -> ==
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:gt(II)Z
daikon.Quant:lexLTE([I[I)Z | CONDITION | 171995 | if (x) -> if (!x)
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3R_210()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.diff.Node:Node()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:jj_3R_97()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:jj_3R_148()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_3R_126()Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:eltwiseLT([I)Z
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.MathMDE:negate(I)I
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:jj_3_35()Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern:intern([I)[I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:slice([III)[I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.PptSlice0:arity()I
daikon.VarInfoName:ioa_name()Ljava.lang.String; | STATEMENT | 9132 | stmt -> ;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I | ASSIGN | 71159 | = null
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_17()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaCharStream:readChar()C
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | STATEMENT | 24560 | stmt -> ;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3R_52()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_67()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseLTE([I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_105()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:jj_2_16(I)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_100()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_4()Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.ProglangType:isScalar()Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
utilMDE.Intern:numIntArrays()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_51()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_53()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
940 2 273 2 1047 2 571 2 310 2 1138 4 790 2 303 2 304 2 
104 2 594 2 440 2 392 2 96 6 717 2 1103 4 356 4 388 2 881 2 
486 6 895 2 803 6 353 2 29 6 790 2 772 4 627 2 466 2 304 2 305 2 113 4 448 6 
380 2 586 8 349 8 308 8 913 8 368 2 1119 2 896 16 1011 4 790 4 920 4 312 8 223 17 283 8 34 17 406 12 1073 2 952 6 328 8 1059 2 304 4 
951 6 268 4 
833 2 
586 2 913 2 308 2 121 2 223 6 312 2 283 2 737 2 406 4 19 2 892 2 974 2 349 2 896 4 1127 2 34 6 1087 2 72 2 540 2 952 2 328 2 
398 1 586 6 913 7 308 7 402 3 1064 5 223 15 312 7 283 6 11 2 1073 2 349 7 639 8 853 2 896 13 34 8 270 4 325 1 684 2 328 7 
767 2 1095 8 3 2 4 4 995 6 659 2 442 4 129 14 929 2 49 10 665 4 317 4 935 2 141 2 1078 2 413 2 893 2 852 4 1043 4 94 10 27 4 1118 2 385 4 753 2 387 2 982 2 759 2 794 4 614 62 946 2 362 2 1055 2 797 2 903 4 109 2 245 4 1140 4 543 2 722 4 724 2 
1004 2 1029 2 833 2 65 2 1035 2 127 2 630 2 291 2 502 2 447 2 603 2 
0 2 399 2 3 2 926 2 79 2 15 2 410 4 17 2 232 2 23 2 234 2 785 2 852 4 97 2 1083 2 790 2 714 2 1020 2 245 2 304 2 1094 2 726 2 1095 2 120 2 311 2 964 2 252 2 1036 2 598 2 1041 2 814 2 1047 2 63 2 1053 2 757 2 207 2 69 2 68 2 154 2 327 2 329 2 544 4 
586 4 308 4 832 2 913 4 312 4 223 9 283 4 11 1 562 1 349 4 749 8 896 8 790 4 34 8 682 8 328 4 990 4 304 4 
1095 2 995 2 724 2 
366 2 1081 2 859 2 1083 2 806 10 777 2 559 2 35 2 738 2 324 2 1019 2 931 22 744 2 812 2 
159 3 831 2 160 1 162 2 837 1 282 1 838 24 164 2 286 32 166 2 842 2 999 2 560 12 1001 2 843 4 1002 16 289 2 16 2 18 2 20 2 22 2 848 16 851 2 415 2 704 2 295 2 1005 3 855 2 172 2 709 2 1009 2 173 2 31 2 419 1 861 2 33 3 1014 2 715 6 868 2 38 3 304 34 306 8 870 4 431 2 587 2 1027 3 187 2 730 2 43 1 310 2 879 2 190 1 313 2 736 3 889 2 600 1 1037 3 1038 2 745 1 54 2 201 2 55 2 450 8 57 32 61 2 755 2 1052 2 206 3 897 1 612 2 208 2 459 2 461 3 1054 6 73 2 1056 4 214 16 766 2 768 2 909 2 1062 2 911 2 623 8 914 2 915 2 475 4 222 2 626 12 477 1 476 2 78 2 224 2 225 6 927 2 629 1 86 2 631 2 632 2 1074 2 87 16 88 1 783 2 235 4 638 4 939 2 93 2 941 2 355 2 942 4 790 32 945 3 1089 2 499 4 649 2 500 1 111 2 653 2 801 1 507 3 116 2 959 2 802 2 1102 2 963 2 250 6 253 2 518 2 128 2 376 2 135 2 970 2 971 2 138 24 139 1 672 2 1114 2 382 2 1116 1 1117 2 264 2 265 5 981 2 151 2 534 2 533 2 818 1 536 3 820 2 394 2 
966 2 
227 2 304 2 
576 2 304 4 756 2 
279 2 1 2 545 2 546 2 547 2 549 2 550 2 551 2 835 2 553 4 552 2 554 2 8 2 285 4 555 2 556 2 12 2 287 20 845 2 21 2 849 2 293 32 26 2 294 2 296 2 299 2 860 44 573 2 28 4 580 2 581 2 583 2 869 2 585 2 40 158 874 2 42 54 589 2 309 4 876 2 44 2 590 2 46 2 591 2 592 4 880 2 314 2 315 54 316 14 884 2 596 16 888 54 602 12 52 2 53 10 607 2 318 2 59 2 609 2 62 26 899 2 900 4 71 2 74 2 905 10 76 2 908 4 910 10 337 2 625 2 339 24 925 2 80 2 82 2 85 2 83 18 342 40 932 2 633 2 635 4 89 2 937 2 90 12 91 2 92 6 938 2 95 10 98 2 351 2 99 2 354 4 101 2 643 2 645 4 103 2 357 2 363 6 108 4 955 2 651 2 110 2 112 54 654 2 115 4 119 12 369 4 657 4 122 2 661 158 374 4 967 2 131 2 377 12 968 2 134 4 667 2 668 4 670 2 144 2 145 2 676 2 980 2 148 2 149 2 678 4 680 32 986 6 685 2 989 2 157 2 688 2 397 54 691 2 690 6 158 4 994 26 695 2 696 2 998 2 698 2 405 2 167 4 407 2 409 54 411 2 168 26 170 2 705 2 707 2 416 2 417 12 1008 2 1010 158 418 56 1012 2 420 2 1013 2 175 2 422 4 1018 2 713 4 716 2 425 2 1021 4 426 6 178 12 427 2 718 2 180 32 1023 2 428 4 182 2 720 2 183 2 1025 2 432 26 725 2 186 18 727 2 434 2 435 2 731 2 436 2 732 14 733 4 189 2 193 4 1032 40 192 2 194 4 437 2 195 2 439 40 441 2 197 2 1040 54 199 2 200 2 449 12 1045 2 202 2 451 8 203 12 453 2 1048 44 204 54 205 2 454 2 457 2 458 4 460 2 209 54 758 26 210 2 211 2 762 2 467 2 215 266 216 2 470 2 471 30 770 2 473 2 472 2 773 2 1067 54 479 2 774 4 1069 2 1070 4 480 2 226 4 780 2 230 10 483 2 484 2 485 12 236 18 1079 4 787 2 489 2 491 30 492 2 1085 2 791 2 1086 2 792 2 1088 2 795 10 1090 2 243 2 1091 2 1092 2 506 2 1093 4 247 2 1099 2 1100 2 251 12 807 2 515 2 256 26 522 2 523 2 1109 2 1110 54 527 2 1112 2 1113 4 528 4 1120 2 1126 4 266 6 1129 2 816 2 1131 2 532 10 1132 2 271 2 272 52 537 2 1133 2 1134 2 538 2 1135 4 1137 4 824 2 276 2 825 12 
255 2 274 2 788 2 711 1 
788 2 221 2 
681 2 1034 2 380 2 1095 2 788 2 650 2 320 2 
1034 2 599 2 788 2 
1034 2 788 2 429 2 
334 2 255 2 45 2 
1034 2 788 2 
1044 2 45 2 
788 2 962 2 
255 2 45 2 478 2 
769 2 255 2 130 2 
255 2 978 2 877 2 
254 2 255 2 142 2 
565 2 255 2 664 2 
873 2 45 2 
687 2 788 2 
769 2 930 2 
877 2 1031 2 
529 2 142 2 
565 2 481 2 
45 2 679 2 
565 2 1105 2 
58 2 142 2 
530 2 877 2 
769 2 1033 2 
255 2 45 2 231 2 478 2 
255 2 84 2 45 2 231 2 478 2 
255 2 45 2 114 2 
255 2 45 2 246 2 
624 2 674 2 191 2 284 2 
1095 2 991 2 856 2 320 2 
681 2 1095 2 991 2 856 2 319 2 320 2 
883 2 1034 2 380 2 1095 2 788 2 320 2 
120 2 867 2 
380 2 957 2 1095 2 320 2 
321 2 142 2 
565 2 761 2 
769 2 347 2 
877 2 403 2 
565 2 877 2 805 2 
878 2 
565 2 438 2 877 2 
565 2 877 2 735 2 
828 2 1095 2 875 6 858 2 1050 6 320 2 866 2 395 2 
850 2 45 2 
829 2 469 2 622 2 118 2 452 2 298 2 815 2 804 4 658 2 269 2 359 2 775 2 615 2 647 2 663 4 617 2 931 6 468 2 
255 2 637 2 
116 2 
831 4 694 2 400 2 286 4 164 4 288 4 560 10 843 2 289 2 22 2 851 2 415 2 568 2 295 2 1009 2 173 2 419 2 715 4 304 26 870 2 187 2 730 2 310 2 879 2 313 2 597 2 740 4 890 2 891 2 1042 2 450 4 57 6 459 2 1054 2 73 2 1056 2 214 6 766 2 475 4 476 2 626 10 224 2 225 2 86 2 632 2 631 2 345 4 783 2 638 4 942 4 790 26 949 4 107 2 498 2 499 4 111 2 653 2 959 2 963 2 250 6 253 2 128 2 970 2 139 2 813 4 672 2 1114 6 260 4 1117 2 1121 2 534 2 533 2 818 4 984 2 393 4 394 2 
831 4 694 2 400 2 286 4 164 4 999 2 288 4 560 10 843 2 289 2 22 2 851 2 415 2 568 2 295 2 1009 2 173 2 419 2 715 6 304 26 870 2 187 2 730 2 310 2 879 2 313 2 740 4 890 2 891 2 1042 2 55 2 450 4 57 6 459 2 1054 2 73 2 1056 2 214 6 766 2 475 4 476 2 626 10 224 2 225 2 86 2 632 2 631 2 345 4 783 2 638 4 490 2 942 4 790 26 949 4 498 2 499 4 111 2 653 2 959 2 963 2 250 6 253 2 128 2 969 2 135 2 970 2 139 2 813 4 672 2 1114 6 260 4 1117 2 534 2 533 2 818 2 984 2 393 4 394 2 988 2 
396 2 
496 2 729 2 
219 2 335 4 401 10 921 2 839 2 563 2 1075 2 847 2 851 2 415 2 96 6 942 2 1084 2 641 2 173 2 790 6 102 2 356 6 863 2 32 4 1015 8 796 2 582 2 242 2 717 4 499 2 179 2 244 8 956 2 304 12 505 2 1026 2 39 4 959 2 728 2 433 2 1103 6 250 4 882 2 881 2 660 2 662 2 253 2 125 2 440 2 886 2 742 2 672 2 976 2 1117 2 1123 2 388 4 613 4 683 2 902 4 1136 2 155 2 542 4 156 2 217 2 
1026 2 39 2 728 2 433 2 335 2 401 8 921 2 338 2 1103 4 836 4 881 2 660 2 440 2 125 2 563 2 742 2 976 2 96 6 1123 2 641 2 102 2 356 6 388 4 32 2 863 2 613 2 1015 8 683 2 582 2 902 2 717 4 37 2 1136 2 179 2 244 8 156 2 304 4 
96 2 728 2 1084 2 102 2 388 2 356 2 613 4 125 2 582 2 902 4 242 2 717 2 563 2 1136 2 155 2 179 2 542 2 1075 2 
219 2 335 4 401 6 921 2 839 2 563 2 1075 2 847 2 851 2 415 2 96 4 942 2 1084 2 641 2 173 2 790 6 102 2 356 6 863 2 32 4 1015 4 796 2 582 2 242 2 717 4 499 2 179 2 244 4 956 2 304 12 505 2 1026 2 39 4 959 2 728 2 433 2 1103 6 250 4 882 2 660 2 662 2 253 2 125 2 440 2 886 2 742 2 672 2 976 2 1117 2 1123 2 1049 2 388 4 613 4 683 2 902 4 1136 2 155 2 542 4 156 2 217 2 
219 2 335 4 401 6 921 2 839 2 563 2 1075 2 847 2 851 2 415 2 96 6 942 2 1084 2 641 2 173 2 790 6 102 2 356 4 863 2 32 4 1015 4 104 2 796 2 582 2 242 2 717 4 499 2 179 2 244 4 956 2 304 12 505 2 1026 2 39 4 959 2 728 2 433 2 1103 6 250 4 882 2 660 2 662 2 253 2 125 2 440 2 886 2 742 2 672 2 976 2 1117 2 1123 2 388 4 613 4 683 2 902 4 1136 2 155 2 542 4 156 2 217 2 
219 2 335 4 401 6 921 2 839 2 563 2 1075 2 847 2 851 2 415 2 96 6 942 2 1084 2 641 2 173 2 790 6 102 2 356 6 863 2 32 4 1015 4 796 2 582 2 242 2 717 4 499 2 179 2 244 8 956 2 304 12 505 2 1026 2 39 4 959 2 728 2 433 2 1103 6 250 4 882 2 881 2 660 2 662 2 253 2 125 2 440 2 886 2 742 2 672 2 976 2 1117 2 1123 2 388 4 613 4 683 2 902 4 1136 2 155 2 542 4 156 2 217 2 
219 2 335 4 401 10 921 2 839 2 563 2 1075 2 847 2 851 2 415 2 96 8 942 2 1084 2 641 2 173 2 790 6 102 2 356 6 863 2 32 4 1015 8 104 2 796 2 582 2 242 2 717 4 499 2 179 2 244 8 956 2 304 12 505 2 1026 2 39 4 959 2 728 2 433 2 1103 8 250 4 882 2 881 2 660 2 662 2 253 2 125 2 440 2 886 2 742 2 672 2 976 2 1117 2 1123 2 388 4 613 4 683 2 902 4 1136 2 155 2 542 4 156 2 217 2 
219 2 335 4 401 10 921 2 839 2 563 2 1075 2 847 2 851 2 415 2 96 6 942 2 1084 2 641 2 173 2 790 6 102 2 356 6 863 2 32 4 1015 8 796 2 582 2 242 2 717 4 499 2 179 2 244 8 956 2 304 12 505 2 1026 2 39 4 959 2 728 2 433 2 1103 6 250 4 882 2 881 2 660 2 662 2 253 2 125 2 440 2 886 2 742 2 672 2 976 2 1117 2 1123 2 388 4 613 4 683 2 902 4 1136 2 155 2 542 4 156 2 217 2 
830 6 280 2 281 2 839 2 286 2 557 6 558 2 560 4 843 2 14 2 289 2 563 2 292 6 847 2 851 2 566 6 575 1 863 2 32 4 582 2 304 46 870 2 39 8 310 2 879 2 313 2 882 2 593 2 595 2 885 2 886 2 891 2 55 2 57 8 610 2 611 6 613 4 902 4 904 1 75 2 330 2 331 2 335 6 77 2 916 1 921 2 626 4 634 2 345 4 346 2 638 4 96 8 350 2 942 4 641 2 102 2 356 4 358 2 104 4 950 2 364 6 111 2 652 2 956 4 959 2 963 2 660 2 662 2 125 2 966 6 132 2 135 2 671 2 973 1 672 2 976 2 381 2 147 2 386 7 388 4 390 1 683 2 394 2 155 2 156 2 692 6 694 4 993 4 401 2 996 1 164 2 415 2 1009 2 173 2 421 2 715 6 717 4 179 2 430 4 1026 2 184 6 187 2 728 2 433 2 730 2 440 4 742 2 1039 2 747 6 450 2 756 6 459 12 1054 2 1056 2 214 6 217 4 766 2 219 2 474 1 475 4 476 2 224 2 225 2 227 6 1075 2 487 2 790 24 1084 2 493 2 238 1 239 2 497 7 499 4 498 2 242 2 241 2 501 2 244 2 505 2 1101 6 511 6 250 6 1103 12 513 1 253 2 519 2 1108 10 259 6 1114 6 260 2 1115 2 1117 2 263 2 1123 2 267 8 534 2 533 2 818 1 1136 2 542 4 277 6 
692 6 830 6 831 2 280 2 694 4 401 2 993 4 281 2 839 2 164 2 286 2 558 2 557 6 560 8 14 2 843 4 289 2 292 6 563 2 847 2 851 2 1003 2 566 6 415 2 1009 2 173 2 32 4 863 2 421 2 582 2 715 6 717 4 179 2 304 48 430 4 870 4 1026 2 184 6 39 8 187 2 433 2 728 2 730 2 310 2 879 2 882 2 881 4 313 2 593 2 595 2 440 4 885 2 886 2 742 2 891 2 1039 2 747 6 55 2 450 2 57 8 611 6 610 2 756 6 459 12 613 4 1054 2 902 4 1056 4 75 2 214 6 217 4 330 2 766 2 219 2 331 2 77 2 335 6 475 4 476 2 626 8 921 2 224 2 225 2 227 6 634 2 1075 2 233 2 346 2 345 4 638 4 350 2 96 8 487 2 942 4 1084 2 641 2 790 26 102 2 493 2 356 8 358 2 239 2 950 2 241 2 364 6 242 2 498 2 499 4 501 2 244 6 111 2 652 2 956 4 505 2 959 2 511 6 1101 6 963 2 1103 12 250 6 660 2 662 2 253 2 125 2 519 2 966 6 132 2 135 2 259 6 1108 10 671 2 1114 6 672 2 381 2 260 2 976 2 1115 2 147 2 263 2 1117 2 1123 2 267 8 388 4 533 2 534 2 683 2 1136 2 394 2 155 2 277 6 542 4 156 2 
692 6 830 6 831 2 280 2 694 4 993 4 401 6 281 2 839 2 164 2 286 2 558 2 557 6 560 8 14 2 843 4 289 2 292 6 563 2 847 2 851 2 1003 2 566 6 415 2 1009 2 173 2 32 4 863 2 1015 4 421 2 582 2 715 6 717 4 179 2 304 48 430 4 870 4 1026 2 184 6 39 8 187 2 433 2 728 2 730 2 310 2 879 2 882 2 881 4 313 2 593 2 595 2 440 4 885 2 886 2 742 2 891 2 1039 2 747 6 55 2 450 2 57 8 611 6 610 2 756 6 459 12 613 4 1054 2 902 4 1056 4 75 2 214 6 217 4 330 2 766 2 219 2 331 2 77 2 335 6 475 4 476 2 626 8 921 2 224 2 225 2 227 6 634 2 1075 2 233 2 346 2 345 4 638 4 350 2 96 8 487 2 942 4 1084 2 641 2 790 26 102 2 493 2 356 8 358 2 239 2 950 2 241 2 364 6 242 2 498 2 499 4 501 2 244 6 111 2 652 2 956 4 505 2 959 2 511 6 1101 6 963 2 1103 12 250 6 660 2 662 2 253 2 125 2 519 2 966 6 132 2 135 2 259 6 1108 10 671 2 1114 6 672 2 381 2 260 2 976 2 1115 2 147 2 263 2 1117 2 1123 2 267 8 388 4 533 2 534 2 683 2 1136 2 394 2 155 2 277 6 542 4 156 2 
830 6 831 2 280 2 5 6 281 2 839 2 286 4 557 12 558 2 560 10 843 4 14 2 289 2 563 2 292 6 847 2 851 2 566 6 300 6 863 2 32 4 578 2 582 2 304 52 870 4 39 8 310 2 879 2 313 2 881 4 882 2 593 2 595 2 885 2 886 2 891 2 55 2 57 12 610 2 611 6 613 4 323 6 902 4 330 2 331 2 335 6 77 2 921 2 626 10 634 2 345 6 346 2 638 4 96 10 350 2 942 4 641 2 102 2 356 10 358 2 104 2 106 6 950 2 364 6 111 2 652 2 956 4 959 2 963 2 660 2 662 2 125 2 966 12 132 2 133 6 135 2 671 2 672 2 976 2 381 2 147 2 388 4 683 2 394 2 155 2 156 2 692 6 694 4 401 6 993 4 164 2 1003 2 415 2 1009 2 173 2 1015 4 176 2 421 2 715 6 717 4 179 2 181 2 719 6 430 4 1026 2 184 12 187 2 728 2 433 2 730 2 440 4 742 2 1039 2 747 12 450 4 1049 2 756 12 459 10 1054 4 462 6 463 2 1056 4 214 8 217 4 766 2 219 2 475 4 476 2 224 2 225 4 227 12 1071 2 1075 2 233 2 487 2 790 24 1084 2 493 2 239 2 499 4 498 2 242 2 241 2 501 2 244 6 505 2 1101 6 511 6 250 6 1103 16 512 6 253 2 519 2 259 6 1108 8 1111 2 1114 8 260 4 1115 2 262 2 261 6 1117 2 263 2 1123 2 267 8 817 2 534 2 533 2 1136 2 542 4 277 6 
505 2 1026 2 39 2 433 2 728 2 335 2 401 4 921 2 1103 4 881 2 660 2 440 2 125 2 563 2 742 2 976 2 96 6 1123 2 641 2 102 2 388 4 356 6 32 2 863 2 613 2 1015 4 683 2 582 2 902 2 717 4 1136 2 179 2 244 6 156 2 304 4 
694 2 401 2 286 3 289 2 563 2 847 2 702 2 851 2 415 2 854 2 172 2 1009 2 173 2 32 2 863 2 582 2 715 6 717 4 179 2 304 28 1026 2 39 2 187 2 728 2 433 2 730 2 310 2 879 2 881 2 313 2 440 2 742 2 891 2 55 2 57 8 64 2 1052 2 66 2 613 2 459 4 1054 3 902 2 214 6 75 2 766 2 335 2 475 4 476 2 921 2 224 2 225 3 345 4 638 4 96 6 942 4 641 2 790 24 102 2 356 6 499 4 498 2 111 2 244 6 505 2 116 2 959 2 963 2 1103 4 250 6 660 2 253 2 125 2 135 2 137 2 1108 2 972 3 672 2 1114 6 976 2 1117 2 264 2 1123 2 388 4 534 2 533 2 683 2 1136 2 394 2 156 2 
712 2 1026 2 641 2 
712 2 1026 2 641 2 
694 6 993 2 401 2 9 2 164 4 286 2 841 4 560 4 843 4 289 2 563 2 851 2 415 2 568 4 1009 2 173 2 32 2 1015 2 715 6 717 4 304 24 430 2 870 4 1026 2 187 2 39 4 728 2 730 2 310 2 879 2 313 2 881 4 440 4 741 2 891 2 55 2 57 2 459 4 613 2 70 2 902 2 1056 4 214 2 1057 2 766 2 335 2 1065 4 475 4 626 4 476 2 933 2 784 4 638 4 96 10 942 4 790 16 641 2 356 8 104 2 105 2 498 2 499 4 111 2 244 6 504 4 959 2 963 2 656 2 250 6 1103 10 660 2 253 2 135 2 1108 2 259 2 672 2 1114 2 976 2 1117 2 1128 2 388 4 534 2 533 2 818 1 394 2 1136 2 
959 2 790 2 358 2 459 2 9 2 496 2 290 2 798 2 155 2 501 2 1108 2 259 2 379 2 304 4 504 2 784 2 430 2 
694 6 993 2 401 2 164 4 286 4 841 4 560 4 843 4 289 2 563 2 851 2 415 2 568 4 1009 2 173 2 32 2 1015 2 715 6 717 4 304 20 870 4 1026 2 187 2 39 4 728 2 730 2 310 2 879 2 313 2 881 4 440 4 741 2 891 2 55 2 57 2 459 2 613 2 70 4 902 2 1056 4 214 2 1057 2 766 2 335 2 1065 4 475 4 626 4 476 2 933 2 784 4 638 4 96 10 942 4 641 2 790 14 356 8 104 2 105 2 498 2 499 4 111 2 244 6 504 4 959 2 961 2 963 2 656 2 250 6 1103 10 660 2 253 2 135 2 672 2 1114 2 976 2 1117 2 1128 2 388 4 534 2 533 2 818 1 394 2 1136 2 826 2 
694 6 993 2 401 2 9 2 164 4 286 2 841 4 560 4 843 4 289 2 563 2 851 2 415 2 568 4 1009 2 173 2 32 2 1015 2 715 6 717 4 304 24 430 2 870 4 1026 2 187 2 39 4 728 2 730 2 310 2 879 2 313 2 881 4 440 4 741 2 891 2 55 2 57 2 459 4 613 2 70 2 902 2 1056 4 214 2 1057 2 766 2 335 2 1065 4 475 4 626 4 476 2 933 2 784 4 638 4 96 10 942 4 790 16 641 2 356 8 104 2 105 2 498 2 499 4 111 2 244 6 504 4 959 2 963 2 656 2 250 6 1103 10 660 2 253 2 135 2 1108 2 259 2 672 2 1114 2 976 2 1117 2 1128 2 388 4 534 2 533 2 818 1 394 2 1136 2 
278 4 548 2 4 2 6 4 7 2 283 4 286 16 11 2 560 22 13 2 289 2 851 2 857 2 570 2 574 2 577 1 34 8 578 2 864 2 865 2 302 12 584 2 304 32 586 4 872 12 307 2 308 4 310 2 879 2 312 4 313 2 885 2 317 2 601 16 50 16 890 2 891 2 605 2 55 2 894 2 57 22 896 8 610 2 64 2 66 2 326 2 325 2 901 2 328 4 903 2 907 3 619 4 620 24 331 2 621 2 332 2 913 4 336 12 626 22 919 16 341 4 923 2 928 2 346 2 345 12 348 2 638 4 349 4 352 2 942 4 642 10 943 2 949 12 954 2 111 2 655 2 958 2 117 2 959 2 960 14 368 2 963 2 373 2 124 4 126 10 375 1 132 2 135 2 136 2 137 2 378 12 139 2 972 2 669 2 671 2 672 2 146 2 385 2 150 10 983 2 391 2 984 2 985 2 153 2 987 2 393 2 394 2 693 2 694 2 400 2 402 4 161 2 164 4 697 2 404 6 1000 1 408 2 700 2 702 2 412 4 415 2 171 12 1009 2 174 2 173 2 419 2 176 2 1016 2 423 2 715 6 177 1 424 2 181 2 1022 2 721 2 187 2 730 2 443 12 445 2 740 2 446 2 1042 2 748 2 450 18 751 4 1046 2 752 6 754 2 459 2 1054 16 760 2 463 2 464 2 214 14 218 4 1060 2 766 2 1061 12 220 2 1064 8 475 4 771 2 476 2 223 10 224 2 1068 16 225 16 1071 2 779 10 482 4 786 4 1080 2 488 2 790 24 494 1 495 4 499 4 800 14 508 4 1097 2 1098 2 510 2 249 10 250 6 253 2 809 2 810 2 257 2 1106 12 1107 4 813 2 1111 2 525 2 1114 14 260 46 262 2 263 2 1117 2 1124 2 533 2 534 2 818 1 535 2 819 3 539 2 541 2 1140 2 
332 2 161 2 7 2 224 2 697 2 286 2 225 2 779 4 345 2 1114 2 260 6 894 2 1046 2 57 2 790 2 150 2 642 2 535 2 1054 2 823 2 214 2 721 2 907 2 304 2 
332 2 161 2 7 2 224 2 697 2 286 2 225 2 779 4 345 2 1114 2 260 6 894 2 1046 2 57 2 790 2 150 2 642 2 535 2 1054 2 823 2 214 2 721 2 907 2 304 2 
332 2 161 2 7 2 224 2 697 2 286 2 225 2 779 4 345 2 1114 2 260 6 894 2 1046 2 57 2 790 2 150 2 642 2 535 2 1054 2 823 2 214 2 721 2 907 2 304 2 
913 2 1063 2 223 5 283 2 163 6 286 3 224 2 11 1 1002 2 87 2 936 2 349 2 237 2 100 3 710 2 790 4 30 2 34 1 944 3 360 2 36 3 648 2 304 10 586 2 308 2 371 4 1030 1 312 2 516 4 196 2 143 2 750 2 608 4 384 2 57 2 896 4 456 2 1130 4 535 2 1054 3 328 2 822 4 763 4 
586 2 913 2 308 2 1063 2 371 4 223 4 312 2 283 2 224 2 286 2 163 6 516 4 196 2 1002 2 87 2 936 2 143 2 349 2 608 4 750 2 237 2 57 2 384 2 710 2 896 4 100 2 790 4 30 2 1130 4 456 2 34 4 944 2 535 2 1054 2 360 2 36 2 822 4 328 2 648 2 763 4 304 10 
586 2 913 2 308 2 1063 2 371 4 223 4 312 2 283 2 224 2 286 2 163 6 516 4 196 2 1002 2 87 2 936 2 143 2 349 2 608 4 750 2 237 2 57 2 384 2 710 2 896 4 100 2 790 4 30 2 1130 4 456 2 34 4 944 2 535 2 1054 2 360 2 36 2 822 4 328 2 648 2 763 4 304 10 
586 2 913 2 308 2 1063 2 371 4 223 4 312 2 283 2 224 2 286 2 163 6 516 4 196 2 1002 2 87 2 936 2 143 2 349 2 608 4 750 2 237 2 57 2 384 2 710 2 896 4 100 2 790 4 30 2 1130 4 456 2 34 4 944 2 535 2 1054 2 360 2 36 2 822 4 328 2 648 2 763 4 304 10 
586 2 913 2 308 2 1063 2 371 4 223 4 312 2 283 2 224 2 286 2 163 6 516 4 196 2 1002 2 87 2 936 2 143 2 349 2 608 4 750 2 237 2 57 2 384 2 710 2 896 4 100 2 790 4 30 2 1130 4 456 2 34 4 944 2 535 2 1054 2 360 2 36 2 822 4 328 2 648 2 763 4 304 10 
746 2 864 2 67 2 372 2 275 2 1051 2 
1017 2 949 2 1028 2 198 2 275 2 1058 2 636 2 
564 2 924 2 253 2 778 2 361 2 383 2 188 2 790 2 304 2 
586 3 308 4 913 4 1064 3 402 2 223 9 312 4 283 3 341 2 11 3 516 2 1036 1 48 1 136 2 349 4 977 1 749 1 384 1 572 1 896 7 790 3 1053 1 34 8 682 2 326 2 325 3 328 4 953 1 990 1 304 3 
526 4 169 2 992 2 708 7 790 1 918 1 1130 2 644 2 10 2 646 2 628 2 686 2 822 2 666 2 51 2 763 2 846 2 304 1 
526 4 169 4 992 2 708 6 1130 2 644 2 10 2 646 2 628 4 686 4 822 2 666 2 51 2 846 2 763 2 
526 4 169 8 992 2 708 10 790 1 918 1 1130 2 644 2 10 2 646 2 628 8 686 8 822 2 666 6 51 2 846 8 763 2 304 1 
526 2 169 2 992 2 708 2 1130 2 644 2 10 2 646 2 628 2 686 2 822 2 51 2 763 2 
560 4 699 4 701 2 297 2 577 1 579 2 715 14 177 1 304 20 313 4 50 2 601 2 55 4 606 2 60 1 898 2 322 2 212 2 616 2 906 2 765 4 912 2 917 1 475 8 1066 4 922 2 934 2 1076 2 638 6 790 20 793 2 494 1 799 2 111 4 367 2 248 2 370 2 963 4 123 2 375 1 135 4 378 2 258 2 673 4 675 2 531 2 821 2 
333 2 2 4 475 20 997 2 340 2 922 2 840 2 560 38 844 2 561 2 81 2 228 2 1072 2 229 2 701 2 934 2 1076 2 344 2 703 2 1077 2 414 2 638 20 24 2 640 2 25 2 171 6 1006 2 569 2 1007 2 1082 4 789 2 790 44 301 2 862 2 579 2 947 4 948 2 240 2 715 43 111 2 1024 2 304 46 723 2 503 4 871 2 365 2 185 2 588 2 1096 2 509 2 41 2 963 2 734 2 1104 2 313 2 123 2 514 2 965 2 517 4 739 2 47 2 520 2 887 2 521 2 444 4 808 2 135 1 811 2 524 2 140 2 743 2 975 2 604 2 55 1 56 6 675 4 60 2 1122 2 677 2 455 2 531 2 818 2 152 2 539 4 465 2 213 2 618 2 906 2 1139 2 765 6 689 2 827 2 
638 4 55 4 790 10 475 4 834 2 963 2 922 2 313 2 123 2 579 2 560 4 228 2 715 10 135 4 906 2 701 2 934 2 111 2 1076 2 304 10 
475 14 997 4 922 2 840 4 165 4 776 2 560 14 844 4 228 2 781 2 782 2 343 2 701 2 934 2 1076 2 1077 2 638 14 567 4 640 4 1006 2 790 26 301 2 577 6 494 2 579 2 947 6 715 38 177 2 799 2 111 2 1024 2 304 28 503 6 1096 4 248 2 963 2 313 2 1104 2 123 2 514 2 375 2 444 6 50 10 601 2 135 10 378 10 975 2 55 10 56 6 979 2 675 2 60 2 1122 2 1125 2 455 2 389 2 818 2 465 2 906 2 1139 4 764 2 765 8 
706 2 

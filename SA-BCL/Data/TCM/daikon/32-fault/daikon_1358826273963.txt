#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException (58,499) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V ERROR java.lang.NullPointerException 205 
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 205 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 509 795 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 142 553 613 435 111 267 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 199 229 666 39 797 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 321 692 682 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR java.lang.NullPointerException 746 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR java.lang.NullPointerException 746 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR java.lang.NullPointerException 746 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 746 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 746 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 554 398 
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NumberFormatException 703 616 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.UnsupportedOperationException 245 41 530 359 521 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 530 359 521 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 530 359 521 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 530 359 521 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 19511 | return null
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.ProglangType:baseIsIntegral()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:eq(DD)Z
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern([D)[D
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I | CONSTANT | 8702 | 0 -> -1
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.Intern:intern([J)[J
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.diff.Node:Node()V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:sameLength([I[I)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:eq(JJ)Z
daikon.inv.Invariant:logDetail()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariants:Invariants()V
daikon.PptSlice1:arity()I
daikon.Quant:union([I[I)[I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:lexLTE([I[I)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.ProglangType:isArray()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isScalar()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:gt(II)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:isPointer()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator; | ASSIGN | 2309 | = null
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 127949 | = null
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.Intern:numIntArrays()I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.LimitedSizeIntSet:size()I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:gte(II)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 9684 | = null
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice0:arity()I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([I)[I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaCharStream:BeginToken()C
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:eq(II)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Debug:logDetail()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfo:new_ppt()V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaCharStream:FillBuff()V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:memberOf(J[J)Z
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:ReadByte()C
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.MathMDE:negate(I)I
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quant:eq(FF)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.Invariant:logOn()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsLT([II)Z
utilMDE.FuzzyFloat:gte(DD)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(D[F)Z
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V | CONDITION | 919 | if (x) -> if (!x)
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaCharStream:getEndLine()I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:eltsGtIndex([I)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:isReverse([I[I)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:size()I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:max([I)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.ProglangType:dimensions()I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1095 | = null
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I | CONDITION | 488 | if (x) -> if (!x)
daikon.ProglangType:baseIsScalar()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:lt(II)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:hashCode()I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:subsetOf([F[F)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lte(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | OPERATOR | 18331 | == -> !=
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.MathMDE:gcd_differences([I)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_ntk()I
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.ProglangType:baseIsFloat()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.RootNode:RootNode()V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.InvariantFormatTester:execute()Z
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName:hashCode()I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object; | RETURN | 62299 | return null
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:ne(II)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaCharStream:readChar()C
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z | ASSIGN | 20464 | = null
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:setDiff([I[I)[I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:memberOf(F[F)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Ppt:Ppt()V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLT([I)Z | CONSTANT | 175803 | 0 -> 1
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.Invariant:getConfidence()D
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14923 | if (x) -> if (!x)
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.PptSlice1:num_samples()I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
203 2 24 2 589 2 219 4 498 2 647 2 319 2 783 2 432 2 
602 6 16 2 344 2 334 2 69 6 484 2 745 6 264 2 620 2 680 2 623 2 
216 6 503 6 137 2 121 4 70 2 432 2 389 2 787 6 789 2 495 4 498 2 379 2 277 6 
694 8 739 2 107 2 50 4 345 26 717 10 492 16 429 12 465 2 432 6 701 4 726 8 377 4 284 2 560 8 285 6 633 10 561 10 498 6 215 29 38 10 190 4 15 10 45 16 68 6 732 2 202 2 390 8 793 16 184 2 
486 6 91 4 
587 2 
200 2 136 2 529 2 58 2 567 2 499 2 
766 6 694 18 717 16 370 4 345 48 492 32 429 22 7 2 55 6 432 4 56 4 112 4 284 2 285 4 328 2 561 16 633 16 780 2 498 4 331 6 38 16 215 54 190 2 501 6 525 2 15 6 450 4 45 32 68 4 617 2 390 6 793 32 276 4 669 2 102 6 153 8 796 6 715 4 487 4 
205 2 
584 2 737 2 531 2 491 2 20 2 630 10 125 2 325 2 178 2 181 2 414 2 500 2 364 2 119 22 
694 2 717 2 345 4 718 2 492 2 429 2 282 2 518 2 400 2 214 2 285 2 165 2 561 2 633 2 38 2 215 6 190 2 523 2 15 4 45 2 759 2 549 2 793 2 
490 2 345 12 717 4 492 8 45 8 429 4 701 2 128 2 561 4 633 4 793 8 276 4 796 6 487 4 215 16 38 4 501 6 
609 2 136 2 405 2 586 6 708 2 663 2 160 2 339 2 187 2 205 2 417 2 646 2 624 2 
63 2 587 2 742 2 741 2 81 2 493 2 509 2 452 2 330 2 795 2 576 2 
600 3 294 2 516 3 109 3 111 2 517 2 699 4 297 2 399 1 9 2 300 2 14 2 524 2 406 2 17 1 18 2 613 2 308 2 526 2 21 2 709 4 221 2 226 2 310 2 228 2 27 32 29 1 419 4 420 1 422 2 626 2 428 2 532 3 430 5 238 2 432 34 721 2 240 2 434 2 435 2 324 1 33 2 129 2 34 3 134 3 442 2 443 2 444 1 637 2 445 2 446 2 248 24 44 2 138 2 139 4 46 2 142 2 143 2 251 2 145 2 454 2 147 2 254 6 456 2 152 2 735 32 156 2 259 2 553 2 462 2 463 2 57 4 556 1 349 2 262 2 653 2 559 16 470 2 472 2 266 2 471 1 748 2 169 16 355 3 476 6 267 2 752 2 566 2 754 2 478 1 661 3 171 1 172 2 71 2 361 2 174 1 480 2 758 1 179 2 573 1 575 1 278 2 279 2 767 1 672 2 769 2 79 2 281 2 771 2 372 2 677 2 774 6 376 2 498 32 583 16 189 4 502 2 194 3 681 2 504 2 784 2 92 6 93 2 507 16 508 3 683 2 288 3 98 2 592 2 510 2 289 2 788 24 203 2 206 2 597 2 392 2 207 3 393 1 
180 2 432 2 
724 2 351 2 432 4 
736 2 
604 2 4 4 698 2 347 2 346 2 744 24 162 2 558 2 519 2 303 2 707 4 659 2 660 2 757 24 220 2 615 2 411 2 666 2 26 4 415 2 312 4 229 4 577 2 317 2 489 2 82 2 373 2 494 2 283 2 632 2 679 2 329 24 728 2 193 4 246 2 39 2 730 2 40 2 448 2 540 2 684 2 685 2 96 4 97 2 337 4 593 2 199 4 451 4 253 2 551 4 797 2 291 4 
99 2 157 2 293 2 662 1 
293 2 74 2 
136 2 702 2 293 2 377 2 299 2 237 2 315 2 
293 2 401 2 315 2 
638 2 293 2 315 2 
723 2 514 2 99 2 
293 2 315 2 
723 2 601 2 
293 2 479 2 
723 2 99 2 781 2 
421 2 257 2 99 2 
99 2 453 2 175 2 
99 2 614 2 188 2 
544 2 99 2 568 2 
723 2 408 2 
293 2 131 2 
785 2 
438 2 175 2 
614 2 534 2 
407 2 568 2 
723 2 439 2 
270 2 568 2 
485 2 614 2 
87 2 175 2 
257 2 610 2 
723 2 99 2 781 2 542 2 
723 2 99 2 781 2 542 2 168 2 
723 2 84 2 99 2 
723 2 99 2 650 2 
513 2 42 2 520 2 654 2 
136 2 702 2 543 2 233 2 
136 2 702 2 299 2 543 2 141 2 233 2 
136 2 702 2 293 2 377 2 756 2 315 2 
197 2 192 2 
136 2 702 2 710 2 377 2 
772 2 614 2 
568 2 336 2 
257 2 413 2 
533 2 175 2 
568 2 103 2 175 2 
150 2 568 2 175 2 
686 2 568 2 175 2 
130 2 568 2 175 2 
105 2 395 2 163 2 702 2 195 6 136 2 356 6 763 2 
723 2 170 2 
538 2 106 2 343 2 695 4 249 2 770 2 612 2 719 2 320 2 127 2 85 2 86 2 416 2 714 2 132 2 230 2 37 4 119 6 
99 2 209 2 
310 2 
208 2 517 2 111 2 699 4 210 2 17 2 19 4 308 2 613 2 307 2 412 2 226 2 27 6 30 2 419 4 432 26 434 2 31 2 435 2 442 2 443 2 444 2 637 2 446 2 445 2 44 2 541 2 139 4 733 2 140 2 143 2 147 2 454 2 254 2 735 4 156 2 258 2 259 2 462 2 57 8 262 2 470 2 748 2 476 2 752 2 267 2 566 2 66 2 172 6 71 2 173 2 570 2 572 2 279 2 281 4 371 2 676 4 774 6 376 2 496 2 498 26 189 4 502 2 681 2 504 2 92 4 93 2 94 2 507 6 683 2 98 2 510 2 203 2 206 2 
515 2 517 2 111 2 699 4 210 2 607 2 17 2 19 4 308 2 613 2 307 2 226 2 27 6 30 2 419 4 432 26 434 2 31 2 435 2 437 2 442 2 443 2 444 2 637 2 446 2 445 2 44 2 541 2 139 4 733 2 140 2 143 2 147 2 454 2 151 2 254 2 735 4 156 2 258 2 259 2 462 2 57 8 262 2 470 2 748 2 476 2 752 2 267 2 566 2 66 2 172 6 71 2 173 2 570 2 572 2 179 2 279 2 769 2 281 4 676 4 774 6 376 2 496 2 498 26 189 4 502 2 681 2 504 2 92 6 93 2 94 2 507 6 683 2 98 2 510 2 203 2 206 2 
6 2 
332 2 5 2 
49 2 602 6 259 2 344 2 397 2 3 2 555 2 54 2 296 2 466 2 605 4 164 2 352 2 745 6 748 2 750 2 706 2 115 8 116 2 657 2 69 6 569 2 22 2 23 2 668 4 761 2 226 2 620 2 28 2 419 2 76 4 279 2 78 2 768 2 80 2 432 12 722 4 433 2 774 4 725 2 32 2 286 2 536 8 498 6 680 4 383 4 681 2 731 2 447 10 683 2 334 4 387 4 640 2 139 2 143 2 146 2 546 2 252 2 100 2 341 2 
49 2 602 8 259 2 344 2 397 2 3 2 110 2 555 2 54 2 296 2 466 2 605 4 164 2 352 2 745 8 748 2 750 2 115 8 16 2 116 2 657 2 69 6 569 2 22 2 23 2 668 4 226 2 620 2 28 2 419 2 279 2 76 4 765 4 78 2 768 2 80 2 432 12 722 4 433 2 774 4 725 2 32 2 286 2 498 6 536 8 680 4 383 4 681 2 731 2 447 10 683 2 334 4 387 4 139 2 640 2 143 2 146 2 546 2 252 2 100 2 341 2 800 2 
383 2 750 2 49 2 78 2 731 2 768 2 397 2 3 2 334 2 555 2 69 2 32 2 352 2 745 2 668 4 680 2 341 2 76 4 
49 2 602 6 259 2 397 2 3 2 555 2 54 2 296 2 466 2 605 4 164 2 352 2 745 6 748 2 750 2 706 2 115 4 16 2 116 2 657 2 69 4 569 2 22 2 23 2 668 4 761 2 226 2 620 2 28 2 419 2 76 4 279 2 78 2 768 2 80 2 432 12 722 4 433 2 774 4 725 2 32 2 286 2 536 4 498 6 680 4 383 4 681 2 731 2 447 6 683 2 334 4 387 4 640 2 139 2 143 2 146 2 546 2 252 2 100 2 341 2 
49 2 602 6 259 2 397 2 3 2 555 2 54 2 296 2 466 2 605 4 164 2 352 2 745 4 748 2 750 2 706 2 115 4 116 2 657 2 69 6 569 2 22 2 23 2 668 4 761 2 226 2 620 2 28 2 623 2 419 2 76 4 279 2 78 2 768 2 80 2 432 12 722 4 433 2 774 4 725 2 32 2 286 2 536 4 498 6 680 4 383 4 681 2 731 2 447 6 683 2 334 4 387 4 640 2 139 2 143 2 146 2 546 2 252 2 100 2 341 2 
49 2 602 6 259 2 344 2 397 2 3 2 555 2 54 2 296 2 466 2 605 4 164 2 352 2 745 6 748 2 750 2 706 2 115 4 116 2 657 2 69 6 569 2 22 2 23 2 668 4 761 2 226 2 620 2 28 2 419 2 76 4 279 2 78 2 768 2 80 2 432 12 722 4 433 2 774 4 725 2 32 2 286 2 536 8 498 6 680 4 383 4 681 2 731 2 447 6 683 2 334 4 387 4 640 2 139 2 143 2 146 2 546 2 252 2 100 2 341 2 
49 2 602 8 259 2 344 2 397 2 3 2 555 2 54 2 296 2 466 2 605 4 164 2 352 2 745 6 748 2 750 2 706 2 115 8 116 2 657 2 69 8 569 2 22 2 23 2 668 4 761 2 226 2 620 2 28 2 623 2 419 2 76 4 279 2 78 2 768 2 80 2 432 12 722 4 433 2 774 4 725 2 32 2 286 2 536 8 498 6 680 4 383 4 681 2 731 2 447 10 683 2 334 4 387 4 139 2 640 2 143 2 146 2 546 2 252 2 100 2 341 2 
49 2 602 6 259 2 344 2 397 2 3 2 555 2 54 2 296 2 466 2 605 4 164 2 352 2 745 6 748 2 750 2 706 2 115 8 116 2 657 2 69 6 569 2 22 2 23 2 668 4 761 2 226 2 620 2 28 2 419 2 76 4 279 2 78 2 768 2 80 2 432 12 722 4 433 2 774 4 725 2 32 2 286 2 536 8 498 6 680 4 383 4 681 2 731 2 447 10 683 2 334 4 387 4 640 2 139 2 143 2 146 2 546 2 252 2 100 2 341 2 
602 12 2 1 3 2 397 2 210 2 605 8 606 2 213 6 11 8 611 6 19 4 22 2 23 2 619 7 226 2 227 2 620 4 28 2 27 8 621 6 30 2 419 4 623 4 423 6 235 2 424 1 427 6 628 2 431 6 629 2 432 46 433 2 434 2 435 2 32 2 443 2 442 2 637 2 247 2 446 2 447 2 639 2 44 2 640 2 252 4 454 2 254 2 48 2 49 2 258 2 259 2 52 2 461 1 54 2 57 4 466 2 263 2 470 2 62 2 476 2 477 2 657 2 67 6 69 8 71 2 481 2 667 2 275 6 668 4 670 2 279 2 76 4 78 2 80 2 286 2 88 1 498 24 89 2 680 4 502 2 681 2 504 2 92 6 93 2 507 6 683 2 510 2 512 2 688 2 100 2 689 1 693 2 292 2 295 2 517 2 699 4 296 2 298 2 522 2 305 2 116 4 308 2 118 2 713 7 124 2 722 6 725 2 536 2 727 6 133 2 731 2 334 4 139 4 335 1 140 4 143 2 144 2 146 2 546 2 545 2 148 1 735 2 341 2 736 6 555 2 164 2 352 2 351 6 745 4 747 1 748 2 750 2 752 12 566 2 755 1 172 6 569 2 179 2 180 6 761 2 367 4 769 2 768 2 374 2 774 6 376 2 779 6 381 10 382 4 189 4 383 4 387 4 198 6 594 2 203 2 792 6 206 2 798 2 799 6 
693 2 602 12 292 2 295 2 397 2 3 2 517 4 210 2 699 4 296 2 605 8 298 2 606 2 213 6 11 8 522 2 116 4 305 2 611 6 19 4 308 2 118 2 22 2 23 2 227 2 226 2 620 4 621 6 27 8 28 2 30 2 419 4 235 2 423 6 427 6 628 2 431 6 629 2 124 2 432 48 722 6 433 2 434 2 435 2 725 2 32 2 727 6 536 6 133 2 442 2 443 2 637 2 247 2 446 2 447 2 731 2 639 2 44 2 334 4 640 2 139 4 140 4 143 2 144 2 545 2 546 2 146 2 454 2 252 4 254 2 48 2 736 6 341 2 735 2 49 2 258 2 344 4 259 2 52 2 555 2 464 2 54 2 466 2 57 8 652 2 164 2 351 6 263 2 352 2 745 8 470 4 748 2 750 2 62 2 476 2 477 2 752 12 657 2 566 2 67 6 69 8 172 6 71 2 569 2 481 2 179 2 180 6 275 6 667 2 761 2 668 4 670 2 367 4 76 4 279 2 78 2 768 2 769 2 80 2 281 2 374 2 774 6 376 2 779 6 286 2 498 26 89 2 381 10 680 4 382 4 189 4 502 2 383 4 681 2 504 4 92 6 93 2 507 6 683 2 387 4 198 6 510 2 688 2 512 2 594 2 203 2 792 6 100 2 206 2 799 6 798 2 
693 2 602 12 292 2 295 2 397 2 3 2 517 4 210 2 699 4 296 2 605 8 298 2 606 2 213 6 11 8 522 2 115 4 116 4 305 2 611 6 19 4 308 2 118 2 22 2 23 2 227 2 226 2 620 4 621 6 27 8 28 2 30 2 419 4 235 2 423 6 427 6 628 2 431 6 629 2 124 2 432 48 722 6 433 2 434 2 435 2 725 2 32 2 727 6 536 6 133 2 443 2 442 2 637 2 247 2 446 2 447 6 731 2 639 2 44 2 334 4 640 2 139 4 140 4 143 2 144 2 545 2 546 2 146 2 454 2 252 4 254 2 48 2 736 6 341 2 735 2 49 2 258 2 344 4 259 2 52 2 555 2 464 2 54 2 466 2 57 8 652 2 164 2 351 6 263 2 352 2 745 8 470 4 748 2 750 2 62 2 476 2 477 2 752 12 657 2 566 2 67 6 172 6 69 8 71 2 569 2 481 2 179 2 180 6 275 6 667 2 761 2 668 4 670 2 367 4 76 4 279 2 78 2 768 2 769 2 80 2 281 2 374 2 774 6 376 2 779 6 286 2 498 26 89 2 381 10 680 4 382 4 189 4 502 2 383 4 681 2 504 4 92 6 93 2 507 6 683 2 387 4 198 6 510 2 688 2 512 2 594 2 203 2 792 6 100 2 206 2 799 6 798 2 
602 16 3 2 397 2 210 2 605 8 606 2 213 6 11 8 13 2 404 6 16 2 611 6 19 6 22 2 23 2 226 2 25 2 227 2 620 4 28 2 27 12 621 6 30 4 419 4 623 2 232 2 235 2 423 6 627 2 236 2 427 12 628 2 431 6 629 2 432 52 433 2 434 2 435 2 32 2 442 2 443 2 637 2 247 2 446 2 447 6 639 2 44 2 640 2 252 4 454 4 254 4 48 2 457 6 49 2 258 2 259 2 52 2 464 2 54 2 57 10 466 2 652 2 263 2 470 4 61 6 62 2 476 4 477 2 657 2 67 6 69 10 71 2 667 2 275 6 668 4 670 2 279 2 76 4 78 2 80 2 281 2 286 2 498 24 89 2 680 4 502 2 681 2 504 4 92 6 93 2 507 8 683 2 510 2 511 2 512 2 688 2 100 2 693 2 292 2 295 2 517 4 699 4 296 2 298 2 700 6 522 2 115 4 305 2 116 4 308 2 527 6 118 2 124 2 722 6 725 2 536 6 727 6 133 2 731 2 334 4 139 4 140 4 143 2 144 2 146 2 546 2 545 2 735 4 341 2 736 12 342 6 344 4 555 2 348 6 557 6 164 2 352 2 351 12 745 10 748 2 750 2 752 10 566 2 172 8 569 2 179 2 760 2 180 12 761 2 367 4 769 2 768 2 374 2 774 6 376 2 778 2 779 12 378 6 381 8 382 4 189 4 383 4 387 4 198 6 594 2 203 2 792 6 206 2 798 2 799 12 
49 2 602 4 78 2 344 2 768 2 80 2 3 2 54 2 432 4 296 2 722 2 605 2 352 2 745 6 286 2 536 6 680 4 750 2 115 4 447 4 731 2 334 4 387 2 640 2 69 6 569 2 22 2 546 2 146 2 100 2 761 2 668 2 620 2 28 2 76 2 
602 4 294 2 3 2 210 2 699 4 296 2 605 2 19 4 308 2 22 2 226 2 310 2 620 2 27 8 418 2 28 2 419 4 234 3 432 28 722 2 434 2 725 2 536 6 442 2 443 2 637 2 446 2 447 2 731 2 44 2 334 4 640 2 139 4 140 2 143 2 546 2 146 2 255 2 254 3 152 2 735 3 49 2 258 2 460 2 344 2 259 2 54 2 349 2 352 2 745 6 265 2 748 2 750 2 476 3 752 4 566 2 69 6 172 6 569 2 71 2 481 2 179 2 761 2 668 2 76 2 279 2 78 2 769 2 768 2 80 2 774 6 376 2 286 2 498 24 680 4 381 2 189 4 502 2 681 2 92 6 93 2 507 6 683 2 387 2 510 2 203 2 100 2 206 2 691 2 
546 2 385 2 286 2 
546 2 385 2 286 2 
602 16 292 2 396 2 517 4 699 4 210 2 605 4 606 2 115 4 16 4 116 4 308 2 222 4 226 2 620 4 27 2 419 4 623 4 625 2 432 24 722 4 433 2 126 2 434 2 435 4 32 2 536 6 635 2 442 2 443 2 637 2 446 2 447 6 44 2 334 4 139 4 641 2 140 6 338 2 143 2 644 2 546 6 146 2 252 2 548 4 735 2 49 2 258 2 259 2 344 4 158 2 555 2 466 2 57 4 352 2 745 12 470 4 748 2 64 2 752 4 658 2 657 2 566 2 172 2 69 12 71 2 569 2 179 2 668 2 365 2 183 2 367 2 279 2 280 2 76 2 769 2 768 4 674 2 580 2 774 6 286 4 498 16 381 2 680 4 382 2 189 4 502 2 383 4 681 2 504 4 92 6 385 2 93 2 94 4 507 2 683 2 387 2 510 2 203 2 792 2 690 2 206 2 798 2 394 2 
738 2 65 2 752 2 580 2 5 2 641 2 629 2 432 4 144 2 792 2 498 2 365 2 381 2 537 2 341 2 279 2 367 2 
602 16 292 2 396 2 517 4 699 4 210 2 605 4 606 2 115 4 16 4 116 4 117 2 308 2 23 2 222 4 226 2 620 4 27 2 419 4 623 4 625 2 432 24 722 4 433 2 126 2 434 2 435 4 32 2 536 6 442 2 443 2 637 2 446 2 447 6 44 2 334 4 139 4 641 2 140 6 338 4 143 2 644 2 546 6 146 2 252 4 548 4 47 2 735 4 155 2 49 2 459 2 258 2 259 2 344 4 158 2 555 2 466 2 57 4 352 2 745 12 470 4 748 2 64 2 752 2 657 2 566 2 172 2 69 12 71 2 569 2 179 2 668 2 365 2 183 2 279 2 280 2 76 2 769 2 768 4 674 2 580 2 774 6 286 4 498 16 680 4 382 2 189 4 502 2 383 4 681 2 504 4 92 6 385 2 93 2 94 4 507 2 683 2 387 2 510 2 203 2 792 2 794 2 206 2 798 2 
602 16 292 2 396 2 517 4 699 4 210 2 605 4 606 2 10 2 115 4 16 4 116 4 308 2 23 2 222 4 226 2 620 4 27 2 419 4 623 4 625 2 432 24 722 4 433 2 126 2 434 2 435 4 32 2 242 2 536 6 442 2 443 2 637 2 446 2 447 6 44 2 334 4 139 4 641 2 140 6 338 2 143 2 644 2 546 6 146 2 252 4 548 4 735 2 49 2 258 2 259 2 344 4 158 2 555 2 466 2 57 4 352 2 745 12 353 2 470 4 748 2 64 2 752 4 657 2 566 2 172 2 69 12 71 2 569 2 179 2 668 2 365 2 183 2 367 2 279 2 280 2 76 2 769 2 768 4 674 2 580 2 675 2 774 6 286 4 498 16 381 2 680 4 382 2 189 4 502 2 383 4 681 2 504 4 92 6 385 2 93 2 94 4 507 2 683 2 387 2 510 2 203 2 792 2 101 2 206 2 798 2 
599 2 603 4 0 2 211 4 215 8 17 2 217 4 19 10 409 2 410 2 616 2 223 2 224 2 226 2 227 2 27 18 418 2 30 42 419 4 231 2 234 2 429 4 432 32 631 2 31 2 435 4 436 2 633 2 243 10 35 2 36 6 634 2 244 1 38 2 636 2 441 10 443 2 444 2 446 2 43 2 44 2 449 2 45 4 643 2 454 16 455 4 255 2 254 11 645 2 649 2 458 6 258 2 259 2 260 2 261 2 57 30 467 10 263 2 468 2 265 2 59 30 60 8 656 2 476 11 477 2 268 24 66 2 71 2 271 3 72 4 665 4 667 2 669 4 75 2 487 4 671 10 279 2 673 2 492 4 678 2 496 2 497 2 498 24 502 2 287 30 681 2 505 2 92 4 93 2 507 12 682 2 683 2 691 2 692 2 694 4 697 10 699 2 703 2 113 4 302 6 705 2 114 2 305 2 306 2 307 2 308 2 118 2 711 2 712 2 309 2 311 4 313 2 717 2 123 2 321 2 322 2 326 2 327 2 535 2 135 2 729 2 541 2 139 4 733 2 140 2 143 2 547 2 340 2 552 2 735 11 154 2 345 6 159 2 166 2 561 2 354 2 562 2 748 2 563 2 565 2 751 10 752 2 566 2 357 2 172 12 173 10 363 4 570 2 177 4 571 2 179 2 762 4 574 2 182 14 366 2 185 2 769 2 368 2 186 2 773 2 375 4 775 2 774 6 376 2 777 2 582 2 380 2 189 2 191 14 384 10 585 2 386 2 588 2 590 8 388 2 790 12 594 2 203 2 595 2 793 4 206 2 596 2 796 6 598 2 
185 2 0 2 369 2 432 2 322 2 376 2 35 2 243 2 498 2 114 2 384 2 476 2 507 2 357 2 19 2 172 2 271 2 595 2 254 2 27 2 313 2 30 6 735 2 671 4 
185 2 0 2 369 2 432 2 322 2 376 2 35 2 243 2 498 2 114 2 384 2 476 2 507 2 357 2 19 2 172 2 271 2 595 2 254 2 27 2 313 2 30 6 735 2 671 4 
185 2 0 2 369 2 432 2 322 2 376 2 35 2 243 2 498 2 114 2 384 2 476 2 507 2 357 2 19 2 172 2 271 2 595 2 254 2 27 2 313 2 30 6 735 2 671 4 
77 2 120 4 185 2 426 2 717 2 345 4 651 2 492 2 53 2 161 2 720 3 432 6 376 2 559 2 561 2 633 2 746 2 498 2 402 3 38 2 215 6 169 2 304 2 655 3 539 2 476 3 333 2 95 2 45 2 687 2 68 2 591 2 528 2 618 2 390 4 793 2 27 2 648 2 735 3 
694 2 77 2 120 4 185 2 426 2 717 2 345 4 651 2 492 2 53 2 429 2 161 2 720 2 432 6 376 2 559 2 284 2 561 2 633 2 746 2 498 2 402 2 38 2 215 4 169 2 304 2 655 2 539 2 476 2 333 2 95 2 45 2 687 2 68 2 591 2 528 2 618 2 390 4 793 2 27 2 648 2 735 2 
694 2 77 2 120 4 185 2 426 2 717 2 345 4 651 2 492 2 53 2 429 2 161 2 720 2 432 6 376 2 559 2 284 2 561 2 633 2 746 2 498 2 402 2 38 2 215 4 169 2 304 2 655 2 539 2 476 2 333 2 95 2 45 2 687 2 68 2 591 2 528 2 618 2 390 4 793 2 27 2 648 2 735 2 
694 2 77 2 120 4 185 2 426 2 717 2 345 4 651 2 492 2 53 2 429 2 161 2 720 2 432 6 376 2 559 2 284 2 561 2 633 2 746 2 498 2 402 2 38 2 215 4 169 2 304 2 655 2 539 2 476 2 333 2 95 2 45 2 687 2 68 2 591 2 528 2 618 2 390 4 793 2 27 2 648 2 735 2 
694 4 77 2 120 4 185 2 426 2 717 2 345 4 651 2 492 2 53 2 429 4 161 2 720 2 432 6 376 2 559 2 284 4 561 2 633 2 746 2 498 2 402 2 38 2 215 4 169 2 304 2 655 2 539 2 476 2 333 2 95 2 45 2 687 2 68 2 591 2 528 2 618 2 390 4 793 2 27 2 648 2 735 2 
241 2 449 2 12 2 90 2 362 2 764 2 
564 2 149 2 550 2 173 2 360 2 314 2 764 2 
681 2 475 1 256 2 218 1 554 2 398 2 318 2 432 4 791 2 187 1 204 2 498 4 301 1 646 1 440 2 
694 1 717 1 345 3 492 2 45 2 429 1 616 2 211 2 272 2 703 2 561 1 633 1 793 2 669 1 796 3 38 1 487 2 215 3 
304 2 425 2 316 2 474 2 740 1 539 2 1 2 581 2 753 2 432 1 642 2 591 2 483 2 73 2 664 2 274 4 498 1 403 7 
304 2 425 4 316 4 474 2 539 2 1 2 581 4 753 2 642 2 591 2 483 2 73 2 664 2 274 4 403 6 
304 2 425 8 316 8 474 2 740 1 539 2 1 2 581 8 753 2 432 1 642 2 591 2 483 2 73 8 664 6 274 4 498 1 403 10 
304 2 425 2 316 2 474 2 539 2 1 2 581 2 753 2 642 2 591 2 483 2 274 2 403 2 
696 1 51 2 108 2 699 6 743 2 8 1 350 1 212 2 521 2 469 2 704 2 473 2 608 2 749 2 358 4 359 2 482 2 176 2 530 2 179 4 225 2 622 2 578 2 579 2 488 2 769 4 716 4 122 2 432 20 83 1 239 1 498 20 782 2 245 4 189 6 446 4 196 2 41 2 92 16 506 2 250 1 44 4 786 2 201 2 290 2 206 4 391 1 734 2 104 2 
446 2 92 3 769 1 269 2 44 2 358 2 699 2 359 2 432 8 323 2 350 2 530 2 273 2 179 1 521 2 498 8 206 2 782 2 167 2 189 2 
446 2 92 4 769 2 44 2 358 2 699 2 359 2 432 6 530 2 273 2 179 2 521 2 498 6 206 2 782 2 189 2 
446 2 92 4 769 2 44 2 358 2 699 2 359 2 432 6 530 2 273 2 179 2 521 2 498 6 206 2 782 2 189 2 
776 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 269 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.ArrayIndexOutOfBoundsException 8 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 240 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 267 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 7 253 110 445 444 85 167 437 62 173 300 84 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (46,154) (46,154) 192 267 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (46,154) (46,154) 192 267 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR utilMDE.Assert$AssertionException (46,154) (46,154) 192 267 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR utilMDE.Assert$AssertionException (46,154) (46,154) 192 267 
daikon.test.diff.XorVisitorTester:testXor()V ERROR utilMDE.Assert$AssertionException (46,154) (46,154) 192 267 
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (46,154) (46,154) 192 267 282 59 224 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR utilMDE.Assert$AssertionException (46,154) (46,154) 475 42 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 408 451 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 347 106 451 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 347 106 451 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 408 451 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONDITION | 50578 | if (x) -> if (!x)
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern:intern([J)[J
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:setEqual([I[I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:eltsEqual([II)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lt(II)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:eq(II)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I | STATEMENT | 15721 | stmt -> ;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:gte(II)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaCharStream:backup(I)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:lexGTE([I[I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:negate(I)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:noDups([I)Z
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:lexGT([I[I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:lexLTE([I[I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 10696 | 1 -> 0
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.PptSlice0:arity()I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:memberOf(S[S)Z
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.ProglangType:dimensions()I
daikon.Quant:ne(II)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.test.InvariantFormatTester:execute()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName:hashCode()I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoAux:hashCode()I
utilMDE.ArraysMDE:min([I)I | CONSTANT | 860 | 0 -> -1
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:union([I[I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.MathMDE:gcd([I)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quant:eltsGteIndex([I)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:subsetOf([S[S)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:subsetOf([B[I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_ntk()I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.Invariants:Invariants()V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.MathMDE:pow(II)I
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern:intern([D)[D
jtb.JavaCharStream:readChar()C
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:eltsGT([II)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:setDiff([I[I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo; | RETURN | 315 | return null
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaCharStream:getEndColumn()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:intersection([I[I)[I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
utilMDE.WeakHasherMap:size()I
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.Quant:slice([III)[I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:memberOf(I[I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaCharStream:getBeginLine()I
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.MathMDE:gcd(JJ)J
utilMDE.WeakIdentityHashMap:indexFor(II)I | CONSTANT | 11181 | 1 -> 0
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair; | ASSIGN | 1711 | = null
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6323 | = null
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.ModBitTracker:ModBitTracker(I)V | OPERATOR | 2283 | >= -> ==
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2146 | = null
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaCharStream:ReadByte()C
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaCharStream:FillBuff()V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus([I)[I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.Quant:lte(II)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
289 2 154 2 463 2 309 2 46 2 458 2 426 2 180 2 259 4 
314 2 352 6 436 2 431 2 292 2 139 2 147 2 269 2 255 4 141 2 
455 2 135 2 198 2 430 2 8 2 9 2 
65 16 29 10 421 2 34 6 308 10 312 16 339 29 243 2 210 10 185 2 46 6 213 12 82 26 52 4 218 2 15 4 154 6 319 8 249 2 248 4 157 10 123 2 22 10 165 8 197 2 273 8 25 6 330 4 171 8 97 16 
268 4 129 6 
54 2 
240 2 
65 32 29 16 134 2 70 6 34 4 72 4 308 16 237 6 312 32 339 54 104 6 6 2 45 2 344 4 210 6 81 6 46 4 213 22 82 48 409 2 11 6 218 2 152 6 318 8 154 4 319 18 248 2 157 16 297 4 413 4 22 16 272 2 366 4 25 4 64 4 26 4 171 6 256 2 97 32 
145 2 474 2 389 2 
448 2 0 2 450 2 67 2 233 2 31 2 175 2 162 2 4 2 326 10 24 2 279 22 466 2 446 2 
65 2 29 2 34 2 308 2 312 2 339 6 144 2 404 2 403 2 210 4 316 2 245 2 82 4 120 2 157 2 222 2 22 2 302 2 203 2 97 2 
65 8 152 6 29 4 15 2 69 2 308 4 157 4 312 8 339 16 104 6 413 4 22 4 481 2 344 4 213 4 82 12 97 8 
333 2 236 4 101 2 376 4 341 2 107 2 80 4 288 2 143 4 401 2 145 6 114 4 149 2 51 2 470 2 151 4 246 2 12 10 247 4 55 2 221 4 220 2 472 2 57 4 158 2 355 4 474 8 87 4 20 62 195 2 389 2 271 14 251 10 89 2 164 4 480 2 362 2 443 4 252 2 281 2 
235 2 424 2 48 2 54 2 159 2 298 2 270 2 440 2 200 2 128 2 
267 2 388 2 
46 2 457 2 
414 2 46 4 148 2 
479 2 
133 2 173 2 454 20 419 2 99 2 331 20 420 2 176 2 36 2 456 2 399 2 142 2 290 2 7 2 110 2 405 2 186 2 187 2 116 2 189 2 434 2 84 2 437 2 85 2 122 2 441 2 300 2 301 2 478 2 253 2 367 20 62 2 444 2 392 2 445 2 393 2 167 2 394 2 
182 2 137 1 205 2 93 2 
242 2 93 2 
415 2 219 2 474 2 93 2 381 2 52 2 396 2 
415 2 38 2 93 2 
415 2 332 2 93 2 
217 2 205 2 349 2 
415 2 93 2 
217 2 58 2 
93 2 280 2 
217 2 205 2 124 2 
215 2 205 2 127 2 
299 2 205 2 348 2 
196 2 205 2 483 2 
71 2 205 2 335 2 
217 2 92 2 
244 2 93 2 
127 2 360 2 
299 2 395 2 
208 2 483 2 
295 2 71 2 
217 2 56 2 
283 2 71 2 
214 2 483 2 
299 2 418 2 
177 2 127 2 
217 2 205 2 124 2 169 2 
217 2 91 2 205 2 124 2 169 2 
217 2 368 2 205 2 
217 2 205 2 432 2 
136 2 383 2 125 2 184 2 
219 2 386 2 474 2 96 2 
219 2 386 2 474 2 96 2 250 2 381 2 
415 2 219 2 375 2 474 2 93 2 52 2 
21 2 168 2 
219 2 412 2 474 2 52 2 
369 2 483 2 
71 2 459 2 
127 2 74 2 
299 2 83 2 
299 2 71 2 156 2 
299 2 183 2 71 2 
299 2 174 2 71 2 
299 2 71 2 138 2 
68 6 467 2 219 2 121 6 19 2 474 2 361 2 365 2 
217 2 40 2 
453 2 108 2 363 2 204 2 230 2 285 2 311 4 293 2 
205 2 178 2 
435 2 
449 2 37 4 241 2 76 2 287 2 46 8 464 4 406 2 380 2 146 2 154 8 267 2 17 2 192 2 357 2 358 2 160 2 227 4 226 2 276 4 328 2 329 2 202 2 370 2 257 2 
76 2 146 2 380 2 267 2 154 8 17 2 160 2 226 2 227 4 276 4 329 2 328 2 449 2 37 4 241 2 287 2 46 8 406 2 464 5 192 2 357 2 358 2 359 1 202 2 370 2 303 1 257 2 
471 2 262 2 407 2 
471 2 262 2 407 2 
76 2 146 2 380 2 267 2 154 8 17 2 160 2 226 2 227 4 276 4 329 2 328 2 449 2 37 4 241 2 287 2 46 8 406 2 464 5 192 2 357 2 358 2 359 1 202 2 370 2 303 1 257 2 
76 2 146 2 380 2 267 2 154 8 17 2 160 2 226 2 227 4 276 4 329 2 328 2 449 2 37 4 241 2 287 2 46 8 406 2 464 6 192 2 357 2 358 2 359 2 202 2 370 2 303 2 257 2 
76 2 146 2 380 2 267 2 154 8 17 2 160 2 226 2 227 4 276 4 329 2 328 2 449 2 37 4 241 2 287 2 46 8 406 2 464 5 192 2 357 2 358 2 359 1 202 2 370 2 303 1 257 2 
1 2 424 1 265 2 317 2 380 2 146 2 382 2 154 8 267 2 17 2 160 2 439 1 224 2 227 2 229 2 274 2 166 1 276 4 329 2 170 2 282 2 449 2 235 1 37 2 239 2 241 2 181 2 287 2 462 2 46 12 464 3 406 2 188 2 294 2 192 2 193 2 358 2 359 1 59 2 417 2 482 2 202 2 370 2 303 1 
324 2 429 2 50 2 103 2 286 2 468 2 
190 2 342 2 385 2 398 2 103 2 28 2 113 2 
449 2 154 2 397 2 46 2 345 2 475 2 370 2 42 2 
260 2 65 6 29 6 32 2 308 6 237 4 263 2 312 6 339 17 338 2 104 4 78 2 344 2 46 6 82 12 318 2 154 6 157 6 225 2 22 6 228 2 364 2 25 2 64 2 94 2 171 4 97 6 
306 2 216 2 452 4 154 1 232 2 284 2 39 2 387 2 105 2 340 2 428 2 79 2 378 1 313 7 90 2 46 1 346 2 258 2 
306 4 216 2 452 4 232 2 284 2 39 2 387 2 340 2 105 4 428 4 79 2 313 6 90 2 346 2 258 2 
306 8 216 2 452 4 154 1 232 8 284 2 39 6 387 2 340 2 105 8 428 8 79 2 378 1 313 10 90 2 46 1 346 2 258 2 
306 2 216 2 452 2 284 2 387 2 340 2 105 2 428 2 79 2 313 2 90 2 346 2 258 2 
261 6 373 4 374 50 2 18 3 24 5 6 140 6 377 92 379 4 380 14 150 28 10 4 14 84 13 6 154 134 153 8 155 4 16 24 384 12 18 22 161 2 160 14 163 4 390 8 391 4 23 24 277 12 278 4 27 2 30 8 33 2 35 6 37 88 179 42 41 26 43 2 400 10 402 4 44 4 291 4 46 150 406 8 47 2 49 24 408 2 410 6 411 8 53 2 296 2 191 2 194 2 60 6 61 2 63 6 201 10 303 57 305 6 304 42 66 2 423 10 422 6 73 8 307 2 425 24 310 4 75 8 427 4 77 10 206 18 207 4 209 6 315 16 211 2 433 2 212 6 86 10 320 2 321 6 438 4 322 4 88 1 323 4 223 6 325 6 227 112 327 6 95 8 447 10 451 2 231 11 234 4 100 10 334 5 238 34 337 8 336 4 102 6 460 16 461 4 106 2 343 90 109 124 111 17 464 247 347 2 465 8 112 6 469 24 115 10 117 26 350 6 118 4 119 2 351 6 353 16 354 90 473 6 356 4 476 4 359 57 126 4 477 16 254 4 371 6 372 4 130 6 131 8 132 36 
451 2 37 4 334 2 140 2 106 2 264 2 207 2 46 12 464 8 406 2 347 2 433 2 380 2 266 2 150 6 411 2 154 12 153 2 160 2 359 2 442 2 227 4 275 2 303 2 172 2 95 2 
451 2 153 2 154 10 37 4 160 2 359 4 106 2 227 4 199 2 46 10 347 2 406 2 464 10 380 2 433 2 95 2 266 2 303 4 411 2 150 4 
66 2 423 2 2 2 310 2 140 2 77 2 315 6 211 2 380 2 433 2 266 2 150 14 13 4 153 2 154 26 86 2 320 2 18 10 322 4 160 2 163 2 323 2 390 4 391 2 325 4 227 14 95 2 451 2 231 2 37 14 334 2 238 10 337 2 43 2 460 6 106 2 109 8 111 2 46 28 465 2 347 2 406 2 464 36 408 2 115 2 411 2 350 4 53 2 191 2 296 2 353 6 194 2 473 4 359 8 477 6 416 2 201 2 371 4 303 8 130 4 131 6 132 2 
98 2 

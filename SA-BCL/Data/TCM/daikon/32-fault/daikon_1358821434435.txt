#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 630 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException (11,768) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 534 257 103 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException 727 (167,390) (154,296) (154,296) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException 727 (167,390) (154,296) (154,296) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException 727 (167,390) (154,296) (154,296) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException 727 (167,390) (154,296) (154,296) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException 727 (167,390) (154,296) (154,296) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException 727 (167,390) (154,296) (154,296) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 727 (167,390) (154,296) (154,296) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 727 (167,390) (154,296) (154,296) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 727 (167,390) (154,296) (154,296) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 727 (167,390) (154,296) (154,296) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException 727 (167,390) (154,296) (154,296) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException 727 (167,390) (154,296) (154,296) 
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException 727 (167,390) (154,296) (154,296) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException 727 (167,390) (154,296) (154,296) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 727 (167,390) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 727 (167,390) (167,390) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 727 (167,390) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 243 194 116 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (301,556) (301,556) 341 493 286 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 286 
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (301,556) (301,556) 341 493 286 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 341 493 286 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([[I)I | CONSTANT | 8702 | 0 -> -1
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.ProglangType:baseIsFloat()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:memberOf(D[F)Z
daikon.ProglangType:isArray()Z
utilMDE.MathMDE:sign(I)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfo:isPrestate()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.ProglangType:isPseudoArray()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:esc_name()Ljava.lang.String; | RETURN | 7456 | return null
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:lt(II)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator; | RETURN | 2296 | return null
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quantify.Constant:name()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quant:concat([I[I)[I
daikon.Quant:eltsLtIndex([I)Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 6337 | 1 -> 0
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.PptSlice2:arity()I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.ProglangType:isFloat()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName:hashCode()I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.ProglangType:baseIsScalar()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.Invariant:logOn()Z
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.FormatTestCase:passes()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoAux:hashCode()I
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfo:isPointer()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:lte(II)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2308 | = null
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice0:arity()I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.ModBitTracker:num_samples()I
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:slice([III)[I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:noDups([I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:memberOf(S[S)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 3578 | = null
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:eltsLTE([II)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:pairwiseLT([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:InvMap()V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.Node:Node()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfo:isDerived()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.ProglangType:isIntegral()Z
daikon.Quant:isReverse([I[I)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.ArraysMDE:max([I)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:setEqual([I[I)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.Quant:gt(II)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsEqualIndex([I)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.ValueTuple:isMissing(I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:subsetOf([D[D)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfo:new_ppt()V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken; | ASSIGN | 215280 | = null
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:modulus([I)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String; | CONSTANT | 8912 | 0 -> -1
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 43224 | 74 -> 75
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:ne(II)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:getConfidence()D
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:subsetOf([F[F)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:negate(I)I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eq(FF)Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexLTE([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([D)[D
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:eq(II)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:memberOf(F[F)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | RETURN | 3063 | return null
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.ProglangType:dimensions()I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:eq(JJ)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:lexGT([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:memberOf(F[D)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:intersection([I[I)[I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:subsetOf([B[I)Z
daikon.Quantify.Constant:Constant(I)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaCharStream:BeginToken()C
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.ProglangType:isScalar()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String; | RETURN | 6378 | return null
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.ModBitTracker:num_vars()I
utilMDE.MathMDE:mod_positive(II)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:gte(II)Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 62554 | return null
daikon.Quant:eltsGTE([II)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair; | ASSIGN | 2099 | = null
utilMDE.ArraysMDE:concat([I[I)[I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.MathMDE:pow_fast(II)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaCharStream:getBeginLine()I
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V | STATEMENT | 8634 | stmt -> ;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
693 4 556 2 301 2 347 2 830 2 458 2 757 2 192 2 435 2 
105 2 836 2 630 2 307 2 457 4 727 4 568 2 636 2 
301 2 738 6 328 2 142 4 825 2 145 4 228 6 311 2 764 6 195 6 556 2 252 2 218 2 
29 10 301 6 639 10 550 2 4 16 556 6 557 8 389 4 477 10 766 16 260 8 70 6 72 16 698 8 398 12 77 10 702 2 331 2 333 10 518 4 572 2 660 2 24 4 578 8 682 6 374 26 525 30 200 2 345 2 378 4 
2 4 745 6 
535 2 
29 2 609 2 31 2 60 2 639 2 62 2 386 2 4 2 259 2 766 2 477 4 70 2 240 2 72 2 186 2 357 2 398 2 77 2 333 2 24 2 578 2 374 4 525 6 
29 4 398 5 639 4 77 4 644 4 362 4 333 4 518 2 4 8 766 8 272 2 717 6 72 8 374 12 525 14 299 2 254 6 
711 2 181 4 794 2 85 8 255 4 584 2 88 2 586 62 258 2 388 2 212 2 151 4 35 4 305 10 15 2 431 2 777 4 400 4 626 2 778 2 308 4 267 4 700 10 813 14 728 2 538 2 229 2 466 2 573 6 839 2 312 4 816 2 817 2 54 2 340 4 57 2 668 4 521 4 58 2 27 4 
612 2 688 2 34 2 743 2 261 2 38 2 562 2 679 2 250 2 535 2 
492 2 400 2 768 2 85 2 810 2 11 2 
29 16 638 2 301 4 639 16 642 6 687 6 714 6 644 4 4 32 556 4 210 4 557 6 766 32 477 6 717 6 70 4 803 2 72 32 396 2 398 22 98 4 358 8 658 4 77 16 45 2 362 4 333 16 332 2 179 4 133 2 24 2 578 18 682 4 374 48 233 4 525 54 114 6 254 6 345 2 
573 2 85 2 54 2 
99 22 129 2 725 2 514 2 234 2 565 2 740 2 628 2 302 2 632 2 150 2 412 2 199 10 704 2 
301 32 204 2 527 2 419 2 528 2 6 1 213 2 746 2 530 2 650 1 217 2 219 2 12 2 427 2 426 2 750 2 14 1 654 6 224 2 656 2 128 4 432 3 130 2 225 2 536 2 132 2 22 2 539 1 230 4 541 2 439 1 665 2 666 8 232 2 139 2 140 6 671 2 546 2 32 2 672 2 549 2 316 2 762 2 318 3 235 16 237 2 454 3 556 34 147 2 767 4 323 2 327 2 675 2 770 24 242 2 463 2 155 2 157 3 678 3 780 2 158 1 330 4 464 2 783 6 334 2 785 1 51 2 468 1 338 2 575 6 469 16 576 6 471 2 339 4 789 2 579 2 162 12 344 4 792 5 793 2 582 3 64 24 165 3 348 2 256 2 799 2 589 32 67 2 68 2 802 2 354 2 591 2 804 2 71 2 262 32 73 2 595 2 75 2 173 2 599 2 363 2 703 2 364 2 496 2 705 2 379 1 710 3 713 2 381 16 87 16 824 2 826 3 615 4 182 3 617 2 385 1 829 2 183 1 506 2 93 1 281 1 830 2 508 2 392 2 719 3 509 1 185 1 282 2 394 2 721 2 95 4 835 2 399 2 190 2 517 2 291 3 292 2 407 2 293 2 106 1 409 2 840 2 196 8 631 2 520 2 733 2 635 2 
601 2 
556 2 193 2 
355 2 556 4 122 2 
1 18 684 2 795 2 821 2 450 2 553 2 206 2 257 2 648 18 590 2 620 2 168 2 622 2 391 2 592 2 482 2 94 2 484 2 188 2 171 18 723 2 776 2 244 2 223 2 402 2 489 2 41 2 40 2 404 2 699 2 19 2 534 2 103 2 569 2 437 2 131 2 408 2 574 2 440 2 662 2 841 2 522 2 
664 2 806 2 428 2 748 1 
664 2 9 2 
749 2 85 2 633 2 664 2 753 2 747 2 378 2 
495 2 664 2 753 2 
664 2 753 2 769 2 
559 2 470 2 806 2 
664 2 753 2 
559 2 718 2 
664 2 353 2 
559 2 372 2 806 2 
820 2 425 2 806 2 
498 2 23 2 806 2 
273 2 806 2 3 2 
329 2 152 2 806 2 
559 2 221 2 
664 2 446 2 
820 2 512 2 
498 2 189 2 
176 2 273 2 
21 2 152 2 
559 2 505 2 
787 2 152 2 
48 2 273 2 
498 2 547 2 
820 2 198 2 
559 2 324 2 372 2 806 2 
559 2 324 2 667 2 372 2 806 2 
559 2 143 2 806 2 
559 2 689 2 806 2 
560 2 325 2 8 2 160 2 
346 2 581 2 82 4 670 2 164 2 640 2 99 6 564 2 86 2 403 2 613 2 159 2 739 2 701 2 375 2 526 2 759 2 473 4 
548 2 806 2 
837 2 85 2 633 2 197 2 
500 2 837 2 85 2 633 2 197 2 747 2 
751 2 85 2 633 2 664 2 753 2 378 2 
137 2 395 2 
85 2 633 2 382 2 378 2 
251 2 273 2 
828 2 152 2 
820 2 423 2 
414 2 498 2 
498 2 25 2 152 2 
498 2 643 2 152 2 
498 2 709 2 152 2 
480 2 498 2 152 2 
85 2 690 2 90 6 169 2 532 2 567 6 271 2 633 2 
559 2 417 2 
591 2 
301 26 418 2 527 2 528 2 6 2 530 2 427 2 654 6 656 2 128 2 225 2 309 2 230 4 541 2 666 2 139 2 140 2 669 2 315 2 546 2 672 2 549 2 762 2 556 26 147 2 767 2 323 2 675 2 771 2 773 2 780 6 39 2 249 2 46 4 783 4 469 6 576 2 339 4 789 2 162 8 344 2 793 2 797 2 585 2 589 4 802 2 804 2 262 6 595 2 486 2 173 2 599 4 363 2 496 2 604 2 606 2 611 2 278 4 614 2 824 2 615 4 183 2 829 2 506 2 830 2 508 2 721 2 95 4 401 2 517 2 292 2 293 2 840 2 631 2 
301 26 418 2 527 2 528 2 6 2 530 2 427 2 654 6 656 2 128 2 225 2 309 2 230 4 541 2 542 2 666 2 139 2 140 2 669 2 315 2 546 2 672 2 316 1 549 2 762 2 556 26 147 2 767 2 323 2 675 2 771 2 773 2 463 1 780 6 249 2 46 4 783 5 469 6 576 2 471 2 339 4 789 2 162 8 344 2 793 2 797 2 585 2 589 4 351 2 802 2 804 2 262 6 595 2 486 2 173 2 599 4 363 2 496 2 604 2 606 2 278 4 824 2 615 4 183 2 829 2 506 2 830 2 508 2 721 2 95 4 401 2 516 2 517 2 292 2 293 2 840 2 631 2 
306 2 
366 2 451 2 
154 2 105 2 167 2 50 2 455 2 296 2 215 2 448 2 727 2 166 2 462 2 
834 2 154 2 277 2 61 2 287 2 448 2 551 4 727 2 166 2 570 2 105 2 167 2 50 2 410 2 455 2 296 2 215 2 605 4 462 2 472 4 170 2 201 2 
834 2 154 2 277 2 61 2 287 2 448 2 551 4 727 2 166 2 570 2 105 2 167 2 50 2 410 2 455 2 296 2 215 2 605 4 462 2 472 4 170 2 201 2 
834 2 154 2 277 2 61 2 287 2 448 2 551 4 727 2 166 2 570 2 105 2 167 2 50 2 410 2 455 2 296 2 215 2 605 4 462 2 472 4 170 2 201 2 
834 2 154 2 277 2 61 2 287 2 448 2 551 4 727 2 166 2 570 2 105 2 167 2 50 2 410 2 455 2 296 2 215 2 605 4 462 2 472 4 170 2 201 2 
834 2 154 2 277 2 61 2 287 2 448 2 551 4 727 2 166 2 570 2 105 2 167 2 50 2 410 2 455 2 296 2 215 2 605 4 462 2 472 4 170 2 201 2 
154 2 834 2 397 2 277 2 61 2 287 2 448 2 551 2 727 2 166 2 570 2 105 2 167 2 50 2 410 2 455 2 296 2 215 2 462 2 170 2 201 2 
154 2 834 2 397 2 277 2 61 2 287 2 448 2 551 2 727 2 166 2 570 2 105 2 167 2 50 2 410 2 455 2 296 2 215 2 462 2 170 2 201 2 
154 2 834 2 397 2 277 2 61 2 287 2 448 2 551 2 727 2 166 2 570 2 105 2 167 2 50 2 410 2 455 2 296 2 215 2 462 2 170 2 201 2 
154 2 834 2 397 2 277 2 61 2 287 2 448 2 551 2 727 2 166 2 570 2 105 2 167 2 50 2 410 2 455 2 296 2 215 2 462 2 170 2 201 2 
154 2 834 2 277 2 61 2 287 2 448 2 551 2 727 2 166 2 570 2 105 2 167 2 50 2 410 2 455 2 296 2 215 2 462 2 170 2 201 2 
301 24 527 2 528 2 215 2 530 2 427 2 652 2 750 2 654 6 656 2 657 3 309 2 230 4 541 2 138 2 139 2 140 3 546 2 672 2 316 2 762 2 448 2 551 2 147 2 556 24 323 2 455 2 239 2 773 2 462 2 154 2 463 2 677 2 780 6 783 6 570 2 50 2 469 6 576 3 339 4 789 4 793 2 61 2 166 2 589 3 167 2 801 2 591 2 804 2 262 8 170 2 486 2 173 2 363 2 364 2 605 2 277 2 278 4 615 4 506 2 830 2 721 2 834 2 95 4 722 2 513 2 190 2 287 2 515 2 517 2 727 2 292 2 293 2 105 2 410 2 296 2 201 2 
834 2 154 2 277 2 61 2 287 2 448 2 551 4 727 2 166 2 570 2 105 2 167 2 50 2 410 2 455 2 296 2 215 2 605 4 462 2 472 4 170 2 201 2 
277 2 415 2 61 2 551 4 448 2 166 2 555 2 167 2 455 2 215 2 170 2 462 2 154 2 834 2 287 2 727 2 570 2 105 2 50 2 410 2 519 4 296 2 605 4 472 4 201 2 
570 2 474 2 663 2 
570 2 474 2 663 2 
793 2 301 14 166 2 527 2 589 2 167 2 528 2 215 2 804 2 262 2 530 2 651 2 427 2 486 2 654 6 656 2 173 2 309 2 363 2 541 2 230 4 135 2 605 2 607 2 139 2 546 2 672 2 316 2 762 2 551 2 448 2 615 4 320 2 384 2 147 2 556 14 323 2 506 2 455 2 456 2 830 2 773 2 284 2 463 2 95 4 780 2 517 2 727 2 292 2 783 6 570 2 293 2 105 2 469 2 789 2 339 4 472 2 
0 2 430 2 510 2 264 2 301 2 174 2 289 2 361 2 763 2 588 2 293 2 661 2 556 4 366 2 270 2 789 2 239 2 
793 2 301 14 166 2 527 2 589 4 167 2 528 2 215 2 804 2 262 2 530 2 651 2 427 2 486 2 654 6 656 2 173 2 309 2 363 2 541 2 230 4 135 2 605 2 607 2 139 2 546 2 672 2 316 2 762 2 551 2 448 2 615 4 320 2 384 2 147 2 556 14 323 2 506 2 455 2 390 2 456 4 830 2 831 2 773 2 284 2 463 2 95 4 780 2 517 2 727 2 292 2 783 6 570 2 293 2 105 2 469 2 789 2 339 4 472 2 
793 2 301 14 166 2 527 2 589 2 167 2 528 2 215 2 804 2 262 2 530 2 651 2 427 2 486 2 654 6 656 2 173 2 309 2 363 2 541 2 230 4 135 2 605 2 607 2 139 2 546 2 672 2 316 2 762 2 551 2 448 2 615 4 320 2 384 2 147 2 556 14 323 2 506 2 455 2 456 2 830 2 773 2 284 2 463 2 95 4 780 2 517 2 727 2 292 2 783 6 570 2 293 2 105 2 469 2 789 2 339 4 472 2 
639 4 641 2 203 2 418 2 644 4 645 2 207 2 420 2 4 8 5 2 6 2 647 2 211 3 214 2 649 3 216 3 422 2 10 2 220 2 427 2 652 2 13 2 222 4 654 6 655 2 656 2 16 2 657 2 17 2 433 2 434 6 226 2 227 2 436 2 438 2 230 6 441 2 666 20 668 2 28 4 29 4 669 46 444 2 672 4 673 2 449 4 674 2 452 2 235 4 460 4 676 2 241 2 36 40 37 2 463 5 243 2 248 2 43 2 249 2 44 2 467 6 49 8 469 14 53 2 56 2 682 4 683 2 59 4 686 2 691 2 66 2 475 2 692 2 695 4 262 28 478 2 72 8 263 2 696 2 697 4 483 4 486 2 485 2 487 2 266 2 490 2 488 2 77 4 268 4 78 2 497 2 79 4 274 2 707 2 81 2 275 16 708 2 499 6 84 2 279 2 278 12 87 4 280 2 716 2 502 10 506 2 717 6 508 4 720 2 283 14 721 2 95 6 96 12 722 2 97 4 511 2 288 2 515 2 101 4 517 2 102 2 292 2 293 2 294 10 107 4 108 2 731 2 111 2 297 2 112 2 113 2 525 16 735 2 736 2 300 2 737 24 301 30 116 2 741 2 118 2 742 2 527 2 528 2 121 2 123 2 530 2 125 2 304 2 308 2 752 2 754 2 755 2 537 4 756 2 540 2 541 4 133 2 543 2 136 2 138 2 140 16 760 2 761 38 141 3 316 5 762 2 317 18 144 2 556 40 557 6 766 8 322 10 323 2 326 2 151 2 772 2 771 2 773 2 153 4 774 2 775 2 156 2 780 14 566 4 781 2 783 13 784 2 335 16 333 4 337 2 576 19 578 4 340 2 789 2 339 4 790 2 342 2 343 2 580 10 162 42 793 4 583 2 797 2 585 2 349 10 800 2 350 2 589 19 803 4 804 4 356 2 594 2 808 2 172 4 809 14 173 2 359 2 597 2 598 2 360 2 177 2 178 3 602 2 814 2 365 2 815 6 368 14 603 2 371 2 180 2 377 2 604 2 374 12 606 2 380 2 181 2 823 2 615 4 616 2 183 2 830 4 832 2 624 2 625 2 833 2 187 2 398 6 401 14 191 1 405 2 406 2 194 2 838 2 627 2 629 2 842 2 413 2 
140 2 669 6 141 2 301 2 278 2 823 2 349 2 589 2 420 2 556 2 322 2 478 2 262 2 303 2 833 2 721 2 359 2 780 2 752 2 294 4 469 2 576 2 629 2 297 2 
140 2 669 6 141 2 301 2 278 2 823 2 349 2 589 2 420 2 556 2 322 2 478 2 262 2 303 2 833 2 721 2 359 2 780 2 752 2 294 4 469 2 576 2 629 2 297 2 
140 2 669 6 141 2 301 2 278 2 823 2 349 2 589 2 420 2 556 2 322 2 478 2 262 2 303 2 833 2 721 2 359 2 780 2 752 2 294 4 469 2 576 2 629 2 297 2 
608 2 819 2 29 2 59 2 301 4 84 4 639 2 686 4 87 2 587 2 589 3 235 2 4 2 529 3 556 10 69 2 504 2 557 4 211 3 766 2 649 3 558 2 262 2 72 2 721 2 127 2 245 2 77 2 333 2 838 4 49 6 367 2 577 4 576 3 732 2 731 4 297 2 374 4 682 2 525 4 
59 2 301 4 639 2 686 4 587 2 589 2 4 2 529 2 211 2 69 2 649 2 262 2 72 2 127 2 77 2 367 2 374 4 608 2 29 2 819 2 84 4 87 2 235 2 556 10 557 4 504 2 766 2 558 2 721 2 398 2 245 2 333 2 49 6 838 4 576 2 577 4 578 2 731 4 732 2 297 2 682 2 525 4 345 2 
59 2 301 4 639 2 686 4 587 2 589 2 4 2 529 2 211 2 69 2 649 2 262 2 72 2 127 2 77 2 367 2 374 4 608 2 29 2 819 2 84 4 87 2 235 2 556 10 557 4 504 2 766 2 558 2 721 2 398 2 245 2 333 2 49 6 838 4 576 2 577 4 578 2 731 4 732 2 297 2 682 2 525 4 345 2 
59 2 301 4 639 2 686 4 587 2 589 2 4 2 529 2 211 2 69 2 649 2 262 2 72 2 127 2 77 2 367 2 374 4 608 2 29 2 819 2 84 4 87 2 235 2 556 10 557 4 504 2 766 2 558 2 721 2 398 2 245 2 333 2 49 6 838 4 576 2 577 4 578 2 731 4 732 2 297 2 682 2 525 4 345 2 
59 2 301 4 639 2 686 4 587 2 589 2 4 2 529 2 211 2 69 2 649 2 262 2 72 2 127 2 77 2 367 2 374 4 608 2 29 2 819 2 84 4 87 2 235 2 556 10 557 4 504 2 766 2 558 2 721 2 398 4 245 2 333 2 49 6 838 4 576 2 577 4 578 4 731 4 732 2 297 2 682 2 525 4 345 4 
80 2 411 2 124 2 112 2 811 2 798 2 
163 2 80 2 401 2 788 2 117 2 175 2 524 2 
115 1 301 8 416 1 501 2 89 2 319 2 619 1 556 10 387 2 352 2 212 1 621 2 238 2 126 2 424 2 285 2 561 2 596 2 76 2 100 2 517 2 812 2 782 2 839 1 314 2 523 2 
28 2 29 6 301 6 639 6 644 2 144 2 453 2 4 6 556 6 557 4 766 6 717 4 326 2 72 6 429 2 396 1 398 5 358 2 77 6 659 2 47 2 333 6 313 2 578 3 298 2 233 2 374 12 682 2 525 15 114 4 345 2 
276 3 33 2 686 2 91 2 503 2 838 2 765 2 231 2 507 2 731 2 55 2 149 2 843 2 
653 2 276 6 301 1 33 2 686 2 91 2 503 2 838 2 556 1 336 1 236 2 765 2 231 2 507 2 55 2 731 2 149 4 843 2 
653 2 276 6 33 2 686 2 91 2 503 4 838 2 236 2 765 2 231 4 507 2 731 2 55 4 149 4 843 2 
653 8 276 10 301 1 33 2 686 2 91 2 503 8 838 2 556 1 336 1 236 6 765 2 231 8 507 2 731 2 55 8 149 4 843 2 
637 6 301 30 119 2 646 4 208 2 120 4 10 2 433 2 533 2 18 4 20 2 230 12 541 4 26 2 544 2 443 2 545 4 30 2 672 2 316 3 447 2 552 2 554 2 146 2 321 2 556 32 463 3 465 2 783 21 680 4 786 2 341 2 161 2 796 2 476 2 804 4 805 3 479 2 481 2 265 2 491 6 600 2 269 2 493 2 369 6 494 2 373 2 376 2 818 2 706 2 610 2 383 2 827 2 715 2 618 2 92 2 393 2 720 2 623 2 95 10 724 2 286 2 726 2 290 2 730 1 109 2 110 16 634 2 844 2 
301 26 685 2 63 2 65 4 119 2 744 2 694 2 209 2 7 2 421 4 804 2 10 2 805 2 531 2 481 2 74 2 433 2 600 2 310 2 493 2 541 2 230 14 369 8 370 2 134 10 442 2 26 2 758 6 545 2 610 2 672 2 316 6 445 2 822 2 556 28 148 4 184 2 720 2 461 4 463 8 95 14 724 6 286 2 563 2 246 6 42 2 247 10 290 6 783 34 571 4 104 4 295 2 729 4 52 4 110 14 681 2 341 2 634 2 161 6 734 2 253 2 
637 4 301 28 685 1 65 2 119 2 7 2 804 6 10 2 531 2 479 2 74 1 807 2 433 2 533 2 491 4 18 2 493 2 541 6 230 14 369 6 494 2 134 2 373 2 758 1 818 2 443 2 706 2 83 2 545 2 30 2 712 2 672 4 316 5 552 2 827 2 383 2 715 2 556 30 148 2 92 2 393 2 720 2 623 2 463 5 95 12 724 2 286 2 563 1 246 2 779 2 247 2 290 2 783 25 465 2 571 2 104 2 729 2 109 2 52 2 110 4 341 2 161 2 253 2 844 4 
463 4 95 4 202 2 301 12 286 2 672 2 433 2 316 4 600 2 205 2 119 2 783 10 556 12 493 2 541 2 230 4 110 4 341 2 791 2 804 2 634 2 720 2 10 2 593 2 
459 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.Error 156 274 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V FAILED junit.framework.AssertionFailedError (234,410) 534 
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 159 562 35 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (8,119) (8,119) 544 348 489 30 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 348 489 30 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 255 348 489 30 
daikon.test.VarInfoNameTest:testSubscript()V ERROR utilMDE.Assert$AssertionException (8,119) (8,119) 88 348 489 30 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 43224 | 74 -> 75
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsEqual([II)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:slice([III)[I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.Invariant:logOn()Z
utilMDE.ArraysMDE:noDuplicates([I)Z | CONDITION | 57307 | if (x) -> if (!x)
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:isReverse([I[I)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:lt(II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.MathMDE:modulus([I)[I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | RETURN | 1511 | return null
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 24039 | return null
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:eq(II)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:subsetOf([S[S)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:lte(II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.ProglangType:isIntegral()Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I | CONSTANT | 14318 | 112 -> 0
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.ProglangType:dimensions()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quant:memberOf(J[J)Z
daikon.ProglangType:isScalar()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:concat([I[I)[I | RETURN | 37630 | return null
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 17131 | = null
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.MathMDE:gcd(JJ)J
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getBeginLine()I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Quant:eltsLT([II)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Debug:logDetail()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.Quant:union([I[I)[I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:gt(II)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:setEqual([I[I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:relate_var()V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:memberOf(F[F)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:ReadByte()C
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.ValueTuple:isMissing(I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.ModBitTracker:num_vars()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.ArraysMDE:min([I)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 10199 | = null
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:jj_2_16(I)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:setDiff([I[I)[I
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:lexEqual([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:eltwiseGTE([I)Z | CONDITION | 177097 | if (x) -> if (!x)
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:lexLTE([I[I)Z | CONDITION | 171995 | if (x) -> if (!x)
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.ModBitTracker:split(I)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([I)[I
daikon.Quant:ne(II)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | STATEMENT | 5303 | stmt -> ;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:max([I)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.PptSlice0:arity()I
daikon.PptSlice2:arity()I
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:eq(JJ)Z
utilMDE.LimitedSizeIntSet:size()I
utilMDE.WeakHasherMap:size()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eq(DD)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:backup(I)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.ProglangType:isPseudoArray()Z
daikon.PptName:isEnterPoint()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.diff.RootNode:RootNode()V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:gte(II)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 279238 | = null
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.Intern:intern([J)[J
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6369 | = null
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:subsetOf([I[I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.MathMDE:negate(I)I
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.Intern:intern([D)[D
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext1()V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isArray()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:sameLength([I[I)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.Invariant:justified()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.PptSlice1:arity()I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String; | RETURN | 69186 | return null
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:readChar()C
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaCharStream:getBeginColumn()I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 99177 | return null
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfo:new_ppt()V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.ProglangType:baseIsScalar()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.Invariants:Invariants()V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ModBitTracker:num_samples()I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:memberOf(S[S)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Debug:logOn()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Ppt:Ppt()V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:eltsGT([II)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.MathMDE:pow_fast(II)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.Invariant:logDetail()Z
jtb.JavaCharStream:getEndLine()I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName:hashCode()I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName; | RETURN | 78854 | return null
daikon.Quant:lexGTE([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoAux:hashCode()I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object; | RETURN | 76740 | return null
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.InvMap:InvMap()V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
656 2 8 2 508 2 129 2 166 2 591 2 119 2 805 2 417 4 
52 2 428 2 411 2 623 6 89 2 801 2 120 6 599 2 288 6 50 2 468 2 
483 6 8 2 672 4 45 2 119 2 173 4 162 2 637 6 16 6 580 2 557 2 512 2 36 6 
813 8 776 29 72 10 8 6 459 12 174 2 587 10 611 2 564 6 226 4 756 8 541 2 734 2 231 16 689 4 763 8 83 8 322 16 365 6 444 10 821 2 244 16 119 6 345 2 141 10 123 2 498 26 394 10 649 4 529 4 
709 6 373 4 
269 2 
39 2 332 2 354 2 356 2 311 4 664 2 508 2 510 2 385 2 387 2 339 2 410 2 669 2 490 2 297 2 116 2 245 2 497 2 345 2 346 2 277 2 837 2 
776 54 813 18 628 4 399 4 5 4 72 16 8 4 459 22 587 16 611 2 564 4 404 2 226 2 261 6 540 2 182 2 590 6 319 6 509 4 511 2 231 32 83 6 322 32 365 4 444 16 619 4 412 8 597 2 474 6 244 32 119 4 575 2 141 16 498 48 499 6 679 4 394 6 840 6 252 4 
521 2 804 2 410 2 
791 2 24 2 270 2 430 2 630 2 29 2 613 2 103 2 77 22 190 2 292 2 279 10 234 2 469 2 
813 2 776 6 72 2 459 2 587 2 178 2 226 2 361 2 463 2 264 2 231 2 668 2 593 2 341 2 365 2 322 2 444 2 244 2 275 2 141 2 418 2 498 4 394 4 
322 8 776 16 628 4 444 4 72 4 459 4 244 8 587 4 141 4 261 6 498 12 62 2 529 2 231 8 23 2 840 6 252 4 
305 4 69 2 560 2 655 2 586 4 311 4 725 2 44 2 9 2 171 2 589 2 131 2 664 2 614 2 665 4 154 2 294 2 638 10 338 4 321 14 690 4 232 2 410 8 618 4 188 10 27 2 823 4 521 6 368 4 553 4 804 2 601 62 281 2 770 2 64 2 581 2 837 4 66 4 126 4 67 2 
156 2 269 2 6 2 740 2 274 2 565 2 538 2 290 2 424 2 691 2 
3 2 533 1 8 34 127 1 128 1 536 2 726 4 727 32 632 2 433 2 537 24 228 2 730 2 731 3 20 2 732 2 134 8 229 2 438 1 736 2 440 2 136 2 548 3 235 2 236 1 737 2 237 2 238 2 551 2 137 2 26 2 242 2 447 2 742 2 744 2 247 2 745 4 32 6 146 2 650 3 653 2 355 2 456 2 150 2 755 6 754 2 658 2 358 2 46 8 47 3 49 2 259 2 260 1 566 2 757 2 465 2 667 24 762 12 364 2 761 4 670 1 268 3 367 2 473 2 675 2 56 2 369 2 370 2 476 2 278 2 161 2 371 2 677 8 769 3 771 2 63 2 283 2 167 2 284 3 584 2 482 2 681 3 285 6 172 2 484 2 783 4 73 2 75 1 784 3 685 2 486 2 179 2 688 3 181 2 487 3 384 2 293 2 184 2 82 5 790 1 491 2 298 4 595 2 795 2 391 1 495 2 802 2 805 2 94 2 808 16 697 2 603 2 810 1 194 2 811 2 607 2 814 4 400 2 401 2 704 3 706 2 505 1 314 2 612 4 315 2 616 2 207 4 107 1 112 2 110 2 517 2 210 2 520 2 824 2 118 16 326 1 119 32 717 1 718 1 720 16 832 6 420 2 423 2 626 16 722 2 838 2 219 32 
8 2 175 2 
527 2 8 4 402 2 
785 2 
333 2 532 6 287 6 169 6 10 8 432 2 11 2 381 30 786 6 337 2 291 2 183 6 21 6 388 2 692 2 85 2 738 2 596 2 240 4 797 2 741 2 300 2 449 6 301 2 347 2 809 4 393 2 34 2 251 2 604 4 699 2 651 30 352 2 253 2 700 2 42 2 457 6 561 8 100 4 101 2 403 2 48 6 317 6 318 2 466 6 109 2 267 2 516 2 323 2 518 2 620 2 158 2 826 2 272 30 827 6 273 6 674 6 831 2 121 6 124 2 422 2 833 6 372 2 835 6 773 6 
629 2 550 1 91 2 515 2 
192 2 91 2 
196 2 534 2 91 2 257 2 598 2 689 2 410 2 
91 2 217 2 598 2 
609 2 91 2 598 2 
629 2 366 2 54 2 
91 2 598 2 
366 2 12 2 
303 2 91 2 
629 2 366 2 453 2 
306 2 629 2 552 2 
629 2 214 2 531 2 
629 2 90 2 98 2 
336 2 629 2 65 2 
366 2 93 2 
130 2 91 2 
640 2 552 2 
214 2 325 2 
213 2 98 2 
343 2 
87 2 366 2 
641 2 65 2 
7 2 98 2 
768 2 214 2 
552 2 431 2 
629 2 366 2 453 2 340 2 
629 2 366 2 33 2 453 2 340 2 
629 2 142 2 366 2 
470 2 629 2 366 2 
105 2 750 2 186 2 398 2 
554 2 138 2 534 2 508 2 410 2 
554 2 204 2 138 2 
335 2 534 2 91 2 598 2 689 2 410 2 
39 2 19 2 
534 2 22 2 689 2 410 2 
764 2 98 2 
65 2 208 2 
195 2 552 2 
214 2 243 2 
214 2 309 2 65 2 
353 2 
214 2 65 2 781 2 
214 2 65 2 789 2 
534 2 359 2 410 2 215 2 836 6 558 2 330 2 
366 2 331 2 
427 2 221 2 798 2 212 2 416 2 588 2 57 2 77 6 60 2 758 2 542 4 96 2 749 2 452 4 135 2 266 2 735 2 397 2 
629 2 479 2 
495 2 
724 2 1 2 8 26 726 4 727 4 434 2 732 2 229 2 136 6 235 2 737 2 238 2 26 2 644 2 745 2 144 2 32 2 755 6 49 2 259 2 761 4 762 8 367 2 675 2 370 2 477 2 278 2 677 2 63 2 771 2 283 2 584 2 167 2 482 2 285 4 374 2 783 4 73 2 74 2 75 2 685 2 289 2 184 2 298 4 391 2 493 2 496 2 802 2 805 2 94 2 603 2 811 2 702 2 701 4 814 2 400 2 816 2 313 2 314 2 612 2 315 2 202 4 712 2 110 2 112 2 210 2 118 6 119 26 832 2 420 2 525 2 423 2 722 4 219 6 
724 2 8 26 536 2 726 4 727 4 632 2 434 2 732 2 229 2 136 6 235 2 737 2 238 2 26 2 644 2 745 2 144 2 32 2 755 6 49 2 259 2 761 4 762 8 271 2 367 2 675 2 370 2 476 2 477 2 278 2 677 2 63 2 771 2 283 2 584 2 167 2 482 2 285 6 374 2 783 4 73 2 74 2 75 2 685 2 289 2 184 2 298 4 391 2 493 2 696 2 496 2 802 2 805 2 94 2 603 2 811 2 702 2 701 4 814 2 400 2 816 2 314 2 612 2 315 2 202 4 110 2 112 2 715 2 210 2 118 6 119 26 832 2 420 2 525 2 423 2 722 4 219 6 
714 2 
585 2 407 2 
428 4 376 2 8 12 684 2 726 2 288 6 14 2 635 8 687 2 636 2 436 4 230 2 184 2 81 2 545 4 442 2 298 2 792 4 594 2 801 4 139 4 599 2 643 2 807 2 249 4 648 2 451 2 395 2 396 2 304 2 811 2 652 2 148 2 502 2 755 4 400 2 198 2 610 2 199 2 102 2 405 2 662 10 663 2 50 2 408 8 209 2 471 2 623 6 119 6 120 6 675 2 721 2 419 2 420 2 63 2 678 2 839 2 774 2 584 2 775 4 
428 4 376 2 8 12 684 2 726 2 288 8 635 8 687 2 14 2 636 2 436 4 230 2 184 2 81 2 545 4 549 2 442 2 298 2 792 4 594 2 342 4 89 2 801 4 139 4 599 2 643 2 807 2 249 4 648 2 451 2 395 2 396 2 304 2 811 2 652 2 148 2 755 4 400 2 198 2 610 2 199 2 102 2 405 2 662 10 50 2 408 8 209 2 471 2 623 6 119 6 120 8 675 2 576 2 721 2 419 2 420 2 63 2 678 2 839 2 774 2 584 2 775 4 
442 2 428 2 792 2 594 2 623 2 684 2 199 2 801 2 139 4 120 2 405 2 721 2 807 2 14 2 230 2 839 2 545 4 209 2 
428 4 376 2 8 12 684 2 726 2 288 6 14 2 635 4 687 2 636 2 436 4 230 2 184 2 81 2 545 4 442 2 298 2 792 4 594 2 89 2 801 4 139 4 599 2 643 2 807 2 249 4 648 2 451 2 395 2 396 2 304 2 811 2 652 2 148 2 502 2 755 4 400 2 198 2 610 2 199 2 102 2 405 2 662 6 663 2 408 4 209 2 471 2 623 4 119 6 120 6 675 2 721 2 419 2 420 2 63 2 678 2 839 2 774 2 584 2 775 4 
428 4 376 2 8 12 684 2 726 2 288 6 14 2 635 4 687 2 636 2 436 4 230 2 184 2 81 2 545 4 442 2 298 2 792 4 594 2 801 4 139 4 599 2 643 2 807 2 249 4 648 2 451 2 395 2 396 2 304 2 811 2 652 2 148 2 502 2 755 4 400 2 198 2 610 2 199 2 102 2 405 2 662 6 663 2 408 4 209 2 52 2 471 2 623 6 119 6 120 4 675 2 721 2 419 2 420 2 63 2 678 2 839 2 774 2 584 2 775 4 
428 4 376 2 8 12 684 2 726 2 288 6 14 2 635 4 687 2 636 2 436 4 230 2 184 2 81 2 545 4 442 2 298 2 792 4 594 2 801 4 139 4 599 2 643 2 807 2 249 4 648 2 451 2 395 2 396 2 304 2 811 2 652 2 148 2 502 2 755 4 400 2 198 2 610 2 199 2 102 2 405 2 662 6 663 2 50 2 408 8 209 2 471 2 623 6 119 6 120 6 675 2 721 2 419 2 420 2 63 2 678 2 839 2 774 2 584 2 775 4 
428 4 376 2 8 12 684 2 726 2 288 8 14 2 635 8 687 2 636 2 436 4 230 2 184 2 81 2 545 4 442 2 298 2 792 4 594 2 801 4 139 4 599 2 643 2 807 2 249 4 648 2 451 2 395 2 396 2 304 2 811 2 652 2 148 2 502 2 755 4 400 2 198 2 610 2 199 2 102 2 405 2 662 10 663 2 50 2 408 8 209 2 52 2 471 2 623 8 119 6 120 6 675 2 721 2 419 2 420 2 63 2 678 2 839 2 774 2 584 2 775 4 
428 4 376 2 8 12 684 2 726 2 288 6 14 2 635 8 687 2 636 2 436 4 230 2 184 2 81 2 545 4 442 2 298 2 792 4 594 2 801 4 139 4 599 2 643 2 807 2 249 4 648 2 451 2 395 2 396 2 304 2 811 2 652 2 148 2 502 2 755 4 400 2 198 2 610 2 199 2 102 2 405 2 662 10 663 2 50 2 408 8 209 2 471 2 623 6 119 6 120 6 675 2 721 2 419 2 420 2 63 2 678 2 839 2 774 2 584 2 775 4 
0 6 428 4 2 6 8 46 632 2 13 2 14 2 634 4 434 2 636 2 436 4 18 2 639 2 230 2 229 2 443 1 442 2 238 2 25 2 26 2 642 4 643 2 644 4 248 6 249 6 648 2 32 2 451 2 652 2 38 10 455 7 49 2 662 2 262 1 265 2 52 4 471 2 53 2 673 6 55 2 675 2 476 2 58 2 278 2 677 2 63 2 678 2 680 6 285 6 684 2 73 2 685 2 288 12 687 2 80 2 81 2 296 1 298 4 695 2 494 7 95 6 304 2 502 2 312 6 102 2 506 6 707 6 315 2 316 2 104 2 708 2 320 2 106 2 110 2 118 6 119 24 120 4 721 2 525 2 125 6 726 4 727 2 732 2 136 6 545 4 737 12 139 4 745 2 746 2 556 2 147 2 148 2 753 1 755 6 357 2 153 8 569 1 761 4 762 4 571 1 573 2 765 2 367 2 767 1 370 2 577 2 163 2 772 2 584 2 775 8 774 4 376 2 374 2 377 1 379 6 783 4 175 6 785 6 787 2 184 2 594 2 792 4 799 2 802 2 801 4 599 4 805 2 807 2 396 2 395 2 811 2 608 6 814 2 400 2 198 2 610 4 402 6 199 2 200 2 612 2 405 2 202 4 819 6 615 1 408 2 209 2 210 2 623 8 414 2 832 2 420 2 419 2 421 2 423 2 834 2 216 2 839 2 218 2 219 8 
0 6 2 6 428 4 8 48 726 4 727 2 632 2 13 2 434 2 634 4 14 2 636 2 436 4 18 2 639 2 732 2 229 2 230 2 545 4 136 6 737 12 442 2 238 2 25 2 26 2 642 4 139 4 644 4 643 2 248 6 249 6 746 2 745 4 648 2 556 2 32 2 451 2 147 2 652 2 38 10 148 2 755 6 357 2 49 2 662 2 153 8 50 4 762 8 761 4 265 2 573 2 765 2 471 2 367 2 53 2 673 6 55 2 675 2 577 2 370 2 58 2 476 2 278 2 163 2 677 2 63 2 772 2 678 2 481 2 680 6 774 4 775 8 584 2 285 6 374 2 376 2 684 2 379 6 783 4 73 2 175 6 685 2 785 6 288 12 687 2 787 2 80 2 184 2 81 2 298 4 792 4 594 2 695 2 799 2 801 4 802 2 805 2 599 4 95 6 807 2 395 2 396 2 304 2 811 2 608 6 502 2 814 4 400 2 198 2 610 4 402 6 312 6 200 2 199 2 102 2 707 6 506 6 612 4 315 2 405 2 104 2 316 2 202 4 708 2 819 6 710 2 320 2 106 2 408 6 209 2 110 2 210 2 623 8 118 6 414 2 119 26 120 8 832 2 721 2 419 2 420 2 525 2 421 2 125 6 423 2 834 2 722 2 216 2 839 2 218 2 219 8 
0 6 2 6 428 4 8 48 726 4 727 2 632 2 13 2 434 2 634 4 635 4 14 2 636 2 436 4 18 2 639 2 732 2 229 2 230 2 136 6 545 4 737 12 442 2 238 2 25 2 26 2 642 4 139 4 644 4 643 2 248 6 249 6 746 2 745 4 648 2 556 2 32 2 451 2 147 2 652 2 38 10 148 2 755 6 357 2 49 2 662 6 153 8 50 4 762 8 761 4 265 2 573 2 765 2 471 2 367 2 53 2 673 6 55 2 675 2 577 2 370 2 58 2 476 2 278 2 163 2 677 2 63 2 772 2 678 2 481 2 680 6 774 4 775 8 584 2 285 6 374 2 376 2 684 2 379 6 783 4 73 2 175 6 685 2 785 6 288 12 687 2 787 2 80 2 184 2 81 2 298 4 792 4 594 2 695 2 799 2 801 4 802 2 805 2 599 4 95 6 807 2 395 2 396 2 304 2 811 2 608 6 502 2 814 4 400 2 198 2 610 4 402 6 312 6 200 2 199 2 102 2 707 6 506 6 612 4 315 2 405 2 104 2 316 2 202 4 708 2 819 6 710 2 320 2 106 2 408 6 209 2 110 2 210 2 623 8 118 6 414 2 119 26 120 8 832 2 721 2 419 2 420 2 525 2 421 2 125 6 423 2 834 2 722 2 216 2 839 2 218 2 219 8 
0 6 428 4 2 6 8 52 632 2 13 2 633 6 14 2 635 4 634 4 434 2 435 6 636 2 15 2 436 4 18 2 639 2 230 2 229 2 442 2 238 2 25 2 26 2 642 4 643 2 644 4 248 6 249 6 648 2 32 4 451 2 652 2 38 8 49 2 662 6 50 4 265 2 52 2 471 2 53 2 673 6 55 2 675 2 476 2 58 2 676 6 278 2 677 4 63 2 678 2 481 2 680 12 285 6 684 2 73 2 685 2 288 16 687 2 80 2 81 2 298 4 695 2 89 2 95 6 500 6 304 2 502 2 312 6 102 2 506 6 707 6 315 2 507 6 316 2 104 2 708 2 710 2 320 2 106 2 110 2 324 2 118 8 119 24 120 10 328 6 524 6 721 2 525 2 125 6 722 2 726 4 727 4 732 2 545 4 136 8 737 10 139 4 745 4 746 2 556 2 147 2 751 2 148 2 755 6 357 2 152 2 153 8 761 4 762 10 572 6 573 2 765 2 367 2 370 2 577 2 163 2 164 6 772 2 775 8 584 2 774 4 376 2 374 4 379 12 783 4 175 12 785 12 787 2 184 2 594 2 792 4 799 2 802 2 801 4 599 4 805 2 189 2 807 2 396 2 395 2 811 2 605 2 608 6 814 4 400 2 198 2 610 4 402 12 199 2 200 2 612 4 405 2 202 6 406 2 819 12 408 6 209 2 210 2 623 10 414 2 832 4 420 2 419 2 423 2 834 2 216 2 839 2 218 2 219 12 220 2 
502 2 148 2 428 4 376 2 8 4 102 2 288 4 405 2 635 4 687 2 14 2 662 4 636 2 436 2 50 2 408 6 230 2 81 2 545 2 209 2 442 2 623 6 801 4 599 2 139 2 120 6 643 2 721 2 249 2 648 2 395 2 304 2 839 2 652 2 775 2 
428 4 8 28 726 4 727 3 632 2 14 2 434 2 636 2 436 2 732 2 229 2 230 2 545 2 440 2 136 6 737 4 442 2 238 2 26 2 139 2 643 2 644 2 249 2 648 2 31 2 32 3 652 2 38 2 148 2 755 6 657 3 49 2 662 2 50 2 761 4 367 2 675 2 370 2 476 2 63 2 775 2 584 2 285 6 777 2 376 2 783 4 73 2 685 2 288 4 179 2 687 2 79 2 184 2 81 2 298 4 492 2 795 2 495 2 801 4 802 2 599 2 805 2 395 2 396 2 304 2 811 2 502 2 197 2 400 2 102 2 315 2 405 2 202 4 408 6 209 2 110 2 210 2 623 6 118 6 119 24 120 6 832 3 721 2 420 2 525 2 421 2 423 2 839 2 219 8 
648 2 828 2 643 2 
648 2 828 2 643 2 
724 4 428 4 8 24 726 4 727 2 632 2 634 2 434 2 14 2 635 4 436 2 732 2 229 2 136 2 545 2 737 4 238 2 26 2 642 2 139 2 743 2 643 6 644 6 248 2 249 4 745 4 648 4 748 2 37 2 38 2 41 2 148 2 755 6 151 2 49 2 462 2 662 6 362 2 50 4 666 2 363 2 762 4 761 4 52 4 367 2 675 2 370 2 476 2 278 4 63 2 678 2 774 4 584 2 775 4 285 6 783 4 73 2 685 2 380 2 288 16 686 2 180 2 383 2 787 2 184 2 81 2 298 4 792 4 89 4 802 2 801 4 805 2 599 4 807 2 602 4 811 2 814 4 99 2 400 2 198 2 610 2 199 2 612 4 315 2 106 2 408 6 513 2 110 2 210 2 623 12 118 2 327 4 828 2 414 2 119 16 415 2 523 2 120 12 721 2 419 2 420 2 525 2 839 4 219 2 
737 2 400 2 8 4 684 2 642 2 625 2 119 2 600 2 180 2 248 2 362 2 407 2 363 2 265 2 546 2 218 2 38 2 
724 4 428 4 8 24 726 4 727 4 632 2 634 2 434 2 14 2 635 4 436 2 732 2 229 2 133 2 136 2 545 2 737 2 238 2 26 2 139 2 743 2 643 6 644 6 248 2 249 4 745 4 648 4 748 2 37 2 41 4 148 2 43 2 755 6 151 2 49 2 662 6 567 2 362 2 50 4 363 2 762 4 761 4 52 4 471 2 367 2 675 2 370 2 476 2 278 4 63 2 678 2 774 4 775 4 584 2 285 6 783 4 73 2 685 2 380 2 288 16 686 2 180 2 787 2 184 2 81 2 298 4 792 4 89 4 802 2 801 4 805 2 599 4 807 2 602 4 811 2 814 4 99 2 400 2 198 2 610 4 199 2 612 4 315 2 106 2 408 6 513 2 110 2 210 2 623 12 118 2 327 4 828 2 414 2 119 16 523 2 120 12 721 2 419 2 420 2 525 2 329 2 839 4 723 2 219 2 
724 4 428 4 8 24 223 2 726 4 727 2 632 2 634 2 434 2 14 2 635 4 436 2 732 2 229 2 136 2 545 2 737 4 238 2 26 2 642 2 139 2 743 2 643 6 644 6 248 2 249 4 745 4 648 4 748 2 37 2 38 2 41 2 148 2 755 6 151 2 49 2 662 6 362 2 50 4 363 2 762 4 761 4 52 4 471 2 367 2 675 2 370 2 476 2 278 4 63 2 678 2 774 4 584 2 775 4 285 6 375 2 783 4 73 2 685 2 380 2 288 16 686 2 180 2 787 2 184 2 81 2 386 2 298 4 792 4 299 2 89 4 802 2 801 4 92 2 805 2 599 4 807 2 602 4 811 2 814 4 99 2 400 2 198 2 610 4 199 2 612 4 315 2 106 2 408 6 513 2 110 2 210 2 623 12 118 2 327 4 828 2 414 2 119 16 523 2 120 12 721 2 419 2 420 2 525 2 839 4 219 2 
70 2 68 2 285 2 682 2 4 1 8 24 783 2 726 4 727 2 685 2 434 2 78 2 80 2 229 2 437 2 184 2 136 6 737 2 238 2 298 4 26 2 794 2 695 2 796 2 799 2 802 2 800 2 805 2 644 2 646 4 32 2 698 2 97 2 35 2 811 2 307 2 812 2 254 2 256 2 703 2 755 6 400 2 562 2 660 2 49 2 202 4 203 1 713 2 51 2 761 2 467 2 110 2 210 2 367 2 159 2 53 2 118 6 117 2 119 18 413 2 675 2 832 2 577 2 58 2 420 2 423 2 63 2 219 8 584 2 
374 6 683 2 8 2 727 3 176 2 202 2 711 2 617 2 820 2 514 2 136 2 187 2 113 2 344 3 118 2 119 2 140 2 832 3 647 2 423 2 32 3 165 4 349 1 425 2 219 2 
187 2 113 2 374 6 683 2 344 2 8 2 118 2 119 2 727 2 176 2 140 2 832 2 202 2 647 2 423 2 711 2 32 2 165 4 820 2 617 2 425 2 514 2 136 2 219 2 
187 2 113 2 374 6 683 2 344 2 8 2 118 2 119 2 727 2 176 2 140 2 832 2 202 2 647 2 423 2 711 2 32 2 165 4 820 2 617 2 425 2 514 2 136 2 219 2 
776 6 454 3 501 2 683 2 72 2 8 10 587 2 782 2 727 3 564 2 539 2 132 4 759 2 570 4 231 2 488 3 83 4 84 3 322 2 86 4 444 2 822 2 211 2 694 2 244 2 119 4 720 2 806 6 141 2 832 3 122 2 498 4 423 2 450 2 145 2 626 2 350 2 583 4 219 2 530 4 
776 4 683 2 72 2 8 10 782 2 587 2 727 2 539 2 132 4 231 2 488 2 84 2 83 4 444 2 86 4 694 2 244 2 806 6 141 2 498 4 450 2 145 2 350 2 454 2 813 2 501 2 459 2 611 2 564 2 759 2 570 4 322 2 822 2 211 2 119 4 720 2 832 2 122 2 423 2 626 2 583 4 219 2 530 4 
776 4 683 2 72 2 8 10 782 2 587 2 727 2 539 2 132 4 231 2 488 2 84 2 83 4 444 2 86 4 694 2 244 2 806 6 141 2 498 4 450 2 145 2 350 2 454 2 813 2 501 2 459 2 611 2 564 2 759 2 570 4 322 2 822 2 211 2 119 4 720 2 832 2 122 2 423 2 626 2 583 4 219 2 530 4 
776 4 683 2 72 2 8 10 782 2 587 2 727 2 539 2 132 4 231 2 488 2 84 2 83 4 444 2 86 4 694 2 244 2 806 6 141 2 498 4 450 2 145 2 350 2 454 2 813 2 501 2 459 2 611 2 564 2 759 2 570 4 322 2 822 2 211 2 119 4 720 2 832 2 122 2 423 2 626 2 583 4 219 2 530 4 
776 4 683 2 72 2 8 10 782 2 587 2 727 2 539 2 132 4 231 2 488 2 84 2 83 4 444 2 86 4 694 2 244 2 806 6 141 2 498 4 450 2 145 2 350 2 454 2 813 4 501 2 459 4 611 4 564 2 759 2 570 4 322 2 822 2 211 2 119 4 720 2 832 2 122 2 423 2 626 2 583 4 219 2 530 4 
389 2 654 2 793 2 334 2 160 2 485 2 
477 2 503 2 302 2 334 2 392 2 631 2 426 2 
8 10 460 2 76 2 360 2 205 2 729 2 17 2 760 2 439 2 114 1 390 2 574 1 766 2 716 2 829 2 119 8 276 2 61 1 747 2 280 2 770 1 581 1 282 2 680 2 584 2 752 2 
776 16 813 2 778 2 5 2 72 6 8 6 458 2 459 3 170 2 587 6 611 2 177 2 564 2 461 2 261 4 568 2 231 6 83 4 693 2 322 6 444 6 412 2 244 6 119 6 141 6 498 12 478 2 250 2 499 4 252 2 
621 2 446 2 8 1 815 2 780 7 659 2 119 1 225 2 382 1 227 2 206 2 526 4 132 2 193 2 627 2 583 2 233 2 530 2 
621 2 446 4 815 2 780 6 659 2 225 2 227 2 206 4 526 4 193 2 132 2 627 4 583 2 233 2 530 2 
621 2 446 8 8 1 815 6 780 10 659 2 119 1 225 2 382 1 227 2 206 8 526 4 193 8 132 2 627 8 583 2 233 2 530 2 
621 2 446 2 780 2 659 2 225 2 227 2 206 2 526 2 132 2 627 2 583 2 233 2 530 2 
429 2 8 38 222 2 535 2 224 2 632 4 733 2 544 2 441 2 445 2 239 2 241 2 246 2 448 4 30 2 143 2 555 4 348 2 351 2 559 2 40 2 255 4 149 1 563 2 258 2 49 4 661 2 263 2 464 2 761 14 155 2 671 2 472 2 475 1 476 4 59 2 579 12 578 2 480 2 582 1 285 30 286 2 168 2 71 1 779 2 378 2 783 16 788 2 295 2 185 2 489 2 88 2 802 6 803 2 191 3 310 2 504 2 705 2 817 4 201 2 818 2 108 2 409 2 111 1 115 1 519 2 210 6 622 2 825 2 119 34 522 2 719 4 528 2 
40 2 285 6 255 6 149 2 210 2 739 2 8 12 28 2 119 12 802 2 783 4 201 2 49 2 59 2 30 2 143 2 761 4 480 2 348 2 155 2 592 2 547 2 489 2 606 2 
285 16 255 6 8 14 783 6 818 2 201 2 632 4 49 2 728 2 543 2 761 6 155 2 592 2 489 2 157 2 239 2 210 2 119 14 830 2 802 2 719 2 645 2 448 2 476 4 191 2 579 4 30 2 555 2 143 2 348 2 480 2 351 2 
285 10 308 2 255 4 149 2 210 2 88 2 8 12 378 2 119 12 802 2 783 4 632 4 201 2 49 2 476 4 30 2 143 2 761 4 480 2 348 2 155 2 592 2 489 2 
624 2 

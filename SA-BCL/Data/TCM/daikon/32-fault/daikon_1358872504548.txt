#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.util.NoSuchElementException 566 821 283 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 545 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 353 407 435 636 358 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_intersection()V ERROR java.lang.NullPointerException 440 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V ERROR java.lang.ArrayIndexOutOfBoundsException 454 
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V ERROR java.lang.NullPointerException 416 551 
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 572 456 554 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.Error 345 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 251 238 323 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 675 675 675 251 238 323 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 251 238 323 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 291 323 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.ProglangType:format()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eq(JJ)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariants:Invariants()V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | RETURN | 17948 | return null
daikon.Quant:lexLT([I[I)Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:lt(II)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | STATEMENT | 17277 | stmt -> ;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Quant:eltsGtIndex([I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.ProglangType:isPseudoArray()Z
utilMDE.Intern:intern([D)[D
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:new_ppt()V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexGT([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V | STATEMENT | 32359 | stmt -> ;
daikon.Quant:memberOf(F[D)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(J[J)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:pairwiseBitwiseSubset([I[I)Z | STATEMENT | 149930 | stmt -> ;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.ArraysMDE:element_range([I)I
daikon.ProglangType:isArray()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:isReverse([I[I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.Quant:lexLTE([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2586 | = null
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | STATEMENT | 24560 | stmt -> ;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.ProglangType:dimensions()I
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:lexGTE([I[I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONSTANT | 17524 | 1 -> -1
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | CONSTANT | 51514 | 3 -> 0
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqual([II)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.ModBitTracker:num_vars()I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:isScalar()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.Intern:intern([J)[J
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.PptSlice1:arity()I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | CONSTANT | 11084 | 108 -> 1
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName; | RETURN | 30246 | return null
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:concat([I[I)[I | ASSIGN | 37483 | = null
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.ProglangType:baseIsScalar()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I | ASSIGN | 816 | = null
daikon.Quant:ne(II)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:eq(DD)Z
daikon.Quant:eltwiseGTE([I)Z | CONDITION | 177183 | if (x) -> if (!x)
daikon.Quant:sameLength([I[I)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:memberOf(D[F)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Debug:logDetail()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Assert:assertTrue(Z)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptName:isEnterPoint()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Debug:logOn()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaCharStream:readChar()C
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaCharStream:BeginToken()C
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.PptSlice2:arity()I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONSTANT | 14703 | 0 -> 1
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.MathMDE:pow(II)I
daikon.Quant:concat([I[I)[I
daikon.ProglangType:isIntegral()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoAux:hashCode()I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.FormatTestCase:passes()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13739 | = null
utilMDE.MathMDE:modulus([I)[I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.Invariant:logDetail()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:numIntArrays()I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.PptName:isCombinedExitPoint()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ModBitTracker:split(I)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:setDiff([I[I)[I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:eltsLT([II)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:eltsGT([II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.ValueTuple:size()I
daikon.ModBitTracker:num_sets()I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Ppt:Ppt()V
daikon.VarInfoName:hashCode()I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eq(FF)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsLTE([II)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.Invariant:justified()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:slice([III)[I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[F)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:gt(II)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.MathMDE:gcd(II)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfo:relate_var()V
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String; | RETURN | 109561 | return null
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.MathMDE:negate(I)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:union([I[I)[I | RETURN | 152296 | return null
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.PptSlice0:arity()I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:gte(II)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:setEqual([I[I)Z
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.WeakHasherMap:processQueue()V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
757 4 22 2 607 2 663 2 787 2 471 2 622 2 652 2 799 2 
716 6 780 2 577 2 68 2 180 6 368 2 266 6 267 2 481 2 173 2 560 2 
574 2 729 2 535 2 117 2 706 2 831 4 628 4 151 4 89 2 
532 8 76 16 285 6 654 4 137 2 346 4 233 10 170 26 543 2 597 10 405 8 776 12 348 16 662 8 713 16 762 10 824 10 243 2 549 29 522 4 587 2 371 6 184 2 788 8 814 2 45 10 471 6 652 6 531 2 789 4 
17 4 584 6 
94 2 
705 2 752 2 53 2 322 2 543 2 759 2 712 2 600 2 385 2 384 2 714 2 604 2 328 2 63 2 488 4 548 2 7 4 8 2 619 2 682 2 12 4 127 2 282 2 816 2 80 2 403 2 629 2 819 2 505 2 288 2 22 2 825 2 193 2 244 2 306 2 200 2 467 2 644 4 313 2 42 2 845 2 471 4 473 2 652 4 
400 4 532 18 1 2 76 32 229 4 285 4 563 6 233 16 630 2 105 2 794 4 170 48 139 4 597 16 405 6 348 32 776 22 713 32 824 16 762 6 512 6 115 6 248 6 329 4 517 4 519 2 549 54 274 2 836 2 812 4 371 4 185 8 470 6 45 16 471 4 472 6 652 4 531 2 789 2 
467 2 246 2 349 2 
751 2 474 2 273 2 197 22 433 2 367 2 156 2 37 2 479 2 313 2 23 2 823 2 494 2 90 10 
532 2 76 2 401 2 625 2 285 2 233 2 21 2 170 4 597 2 86 2 776 2 348 2 713 2 824 2 762 4 777 2 303 2 610 2 549 6 807 2 336 2 45 2 789 2 
76 8 329 4 517 4 563 6 346 2 233 4 549 16 170 12 597 4 776 4 348 8 713 8 824 4 26 2 45 4 472 6 397 2 
283 2 536 2 16 30 753 2 732 2 288 2 4 2 404 6 566 2 821 2 383 4 797 2 349 4 575 2 246 2 717 10 391 2 550 2 833 2 583 2 154 2 38 2 72 2 467 6 126 2 12 2 256 2 340 6 372 2 701 2 528 2 621 2 44 2 134 2 187 2 
624 2 539 2 755 2 676 2 332 2 94 2 738 2 545 2 226 2 136 2 98 2 
534 6 2 2 100 1 319 2 754 2 542 1 321 24 324 2 544 2 661 1 436 16 213 2 216 2 672 2 547 2 6 2 119 2 766 24 552 16 677 2 335 1 222 8 679 2 680 2 557 2 339 5 13 1 132 3 131 2 227 2 15 2 769 4 231 2 234 2 775 3 686 6 140 2 687 4 141 2 570 6 143 2 458 2 27 2 242 2 29 2 31 1 32 4 149 2 578 2 580 2 581 4 152 3 582 6 781 2 695 2 366 2 696 3 586 2 369 1 700 2 471 32 259 3 47 2 707 2 50 2 378 3 379 1 263 2 477 3 708 2 54 3 711 2 265 2 169 2 382 2 598 2 796 2 171 4 57 8 59 2 605 2 799 2 606 2 175 1 176 2 487 2 271 2 390 2 809 2 721 2 74 3 277 1 490 2 183 2 813 2 493 2 726 2 186 32 396 2 496 2 497 2 284 2 498 2 78 1 499 2 502 4 503 3 504 1 734 1 81 1 289 16 735 32 736 12 820 2 739 2 296 2 297 2 88 2 827 1 410 2 742 2 411 2 746 2 832 2 640 2 641 4 198 1 834 8 749 2 417 2 643 2 524 2 201 2 419 2 527 2 840 2 96 2 317 4 841 3 650 16 422 2 843 2 421 2 423 3 529 2 847 2 652 34 
97 2 652 2 
56 2 69 2 652 4 
121 2 
685 2 247 2 576 2 177 2 515 8 540 2 104 2 614 8 219 2 122 8 681 2 85 2 435 2 298 2 407 2 664 2 636 2 147 2 353 2 388 2 653 2 358 2 
455 2 761 2 315 1 608 2 
370 2 608 2 
441 2 190 2 
428 2 467 2 168 2 608 2 805 2 440 2 522 2 
428 2 804 2 608 2 
428 2 608 2 351 2 
294 2 455 2 441 2 
428 2 608 2 
441 2 355 2 
608 2 638 2 
455 2 441 2 130 2 
455 2 802 2 459 2 
455 2 102 2 709 2 
455 2 101 2 262 2 
290 2 455 2 60 2 
252 2 441 2 
608 2 822 2 
802 2 188 2 
786 2 709 2 
101 2 52 2 
454 2 
740 2 441 2 
432 2 60 2 
101 2 133 2 
592 2 709 2 
228 2 802 2 
455 2 308 2 441 2 130 2 
455 2 718 2 308 2 441 2 130 2 
455 2 538 2 441 2 
239 2 455 2 441 2 
91 2 830 2 771 2 108 2 
551 2 416 2 
782 2 
428 2 467 2 623 2 168 2 608 2 522 2 
193 2 506 2 
467 2 168 2 699 2 522 2 
101 2 657 2 
510 2 60 2 
639 2 802 2 
691 2 709 2 
51 2 709 2 60 2 
302 2 709 2 60 2 
145 2 709 2 60 2 
344 2 709 2 60 2 
164 2 168 2 772 6 295 2 466 6 467 2 817 2 205 2 
461 2 66 2 197 6 464 2 253 2 453 4 155 2 157 2 124 2 325 4 784 2 491 2 128 2 689 2 704 2 409 2 161 2 28 2 
182 2 455 2 
820 2 
534 2 319 4 209 4 764 2 216 2 668 2 547 2 672 2 119 2 552 6 679 2 222 2 686 6 140 2 687 4 570 4 143 2 27 2 32 4 245 2 579 2 361 2 580 2 581 2 582 2 364 2 781 2 366 6 586 2 369 2 158 2 471 26 377 2 263 2 381 2 169 2 796 2 171 4 605 2 799 2 606 2 609 2 719 2 809 2 813 2 726 2 280 2 186 4 284 2 497 2 499 2 731 2 286 4 502 2 81 2 735 6 736 8 739 2 514 2 92 2 640 2 832 2 641 4 524 2 419 2 201 2 527 2 840 2 317 2 96 2 421 2 847 2 652 26 426 2 
534 2 430 2 319 4 209 4 764 2 216 2 668 2 547 2 672 2 6 2 119 2 552 6 679 2 222 2 227 2 686 6 140 2 687 4 570 6 143 2 27 2 32 4 245 2 579 2 361 2 580 2 581 2 582 2 364 2 781 2 366 6 586 2 369 2 158 2 471 26 167 2 263 2 381 2 169 2 796 2 171 4 605 2 799 2 606 2 719 2 809 2 73 2 813 2 726 2 280 2 186 4 497 2 284 2 499 2 731 2 286 4 502 2 81 2 735 6 736 8 739 2 514 2 411 2 92 2 640 2 832 2 641 4 524 2 419 2 201 2 527 2 840 2 317 2 96 2 421 2 847 2 652 26 
99 2 402 2 
443 2 
376 2 656 2 107 2 264 2 480 2 266 6 758 2 267 4 796 2 599 4 481 2 546 8 326 2 386 2 173 4 58 2 113 2 605 2 800 2 716 6 486 2 270 2 547 2 720 2 612 2 180 6 809 2 808 4 221 2 279 4 447 2 281 2 561 2 284 2 18 4 500 2 733 2 686 4 24 2 350 2 357 2 32 2 692 2 779 4 780 2 743 2 34 4 305 2 640 2 641 2 521 2 311 10 153 8 525 2 840 2 203 2 204 2 471 6 652 12 375 2 
376 2 656 2 107 2 264 2 480 2 266 6 796 2 758 2 267 4 599 4 481 2 546 8 326 2 386 2 173 4 58 2 113 2 605 2 800 2 716 8 270 2 547 2 720 2 180 8 809 2 808 4 221 2 279 4 447 2 560 2 281 2 561 2 284 2 18 4 500 2 733 2 686 4 24 2 350 2 357 2 32 2 692 2 779 4 780 2 413 4 743 2 34 4 305 2 640 2 641 2 521 2 311 10 153 8 465 2 525 2 840 2 203 2 204 2 43 2 471 6 652 12 375 2 
716 2 34 4 305 2 656 2 720 2 521 2 733 2 107 2 525 2 266 2 267 2 599 4 24 2 350 2 279 2 203 2 173 2 375 2 
376 2 656 2 107 2 264 2 480 2 266 4 758 2 267 4 796 2 599 4 481 2 546 4 326 2 386 2 173 4 58 2 113 2 605 2 800 2 716 6 486 2 270 2 547 2 720 2 612 2 180 6 809 2 808 4 221 2 279 4 447 2 560 2 281 2 561 2 284 2 18 4 500 2 733 2 686 4 24 2 350 2 357 2 32 2 692 2 779 4 743 2 34 4 305 2 640 2 641 2 521 2 311 6 153 4 525 2 840 2 203 2 204 2 471 6 652 12 375 2 
376 2 656 2 107 2 264 2 480 2 266 6 758 2 267 4 796 2 599 4 481 2 546 4 326 2 386 2 173 4 58 2 113 2 605 2 800 2 716 4 486 2 270 2 547 2 720 2 612 2 180 6 809 2 808 4 221 2 279 4 447 2 281 2 561 2 284 2 18 4 500 2 733 2 686 4 24 2 350 2 357 2 32 2 692 2 779 4 743 2 34 4 305 2 640 2 641 2 521 2 311 6 153 4 525 2 368 2 840 2 203 2 204 2 471 6 652 12 375 2 
376 2 656 2 107 2 264 2 480 2 266 6 758 2 267 4 796 2 599 4 481 2 546 8 326 2 386 2 173 4 58 2 113 2 605 2 800 2 716 6 486 2 270 2 547 2 720 2 612 2 180 6 809 2 808 4 221 2 279 4 447 2 281 2 561 2 284 2 18 4 500 2 733 2 686 4 24 2 350 2 357 2 32 2 692 2 779 4 780 2 743 2 34 4 305 2 640 2 641 2 521 2 311 6 153 4 525 2 840 2 203 2 204 2 471 6 652 12 375 2 
376 2 656 2 107 2 264 2 480 2 266 8 758 2 267 4 796 2 599 4 481 2 546 8 326 2 386 2 173 4 58 2 113 2 605 2 800 2 716 6 486 2 270 2 547 2 720 2 612 2 180 8 809 2 808 4 221 2 279 4 447 2 281 2 561 2 284 2 18 4 500 2 733 2 686 4 24 2 350 2 357 2 32 2 692 2 779 4 780 2 743 2 34 4 305 2 640 2 641 2 521 2 311 10 153 8 525 2 368 2 840 2 203 2 204 2 471 6 652 12 375 2 
376 2 656 2 107 2 264 2 480 2 266 6 758 2 267 4 796 2 599 4 481 2 546 8 326 2 386 2 173 4 58 2 113 2 605 2 800 2 716 6 486 2 270 2 547 2 720 2 612 2 180 6 809 2 808 4 221 2 279 4 447 2 281 2 561 2 284 2 18 4 500 2 733 2 686 4 24 2 350 2 357 2 32 2 692 2 779 4 780 2 743 2 34 4 305 2 640 2 641 2 521 2 311 10 153 8 525 2 840 2 203 2 204 2 471 6 652 12 375 2 
656 2 208 2 659 2 5 2 667 1 214 1 215 2 673 2 6 2 674 1 678 1 221 2 679 2 222 2 223 2 447 2 14 6 227 2 449 10 230 6 18 8 450 2 452 1 235 2 686 6 24 2 687 4 240 2 690 2 32 4 692 2 33 6 34 4 249 6 463 2 694 4 697 2 468 2 703 2 471 24 263 2 478 2 264 2 480 2 266 8 267 4 55 2 56 6 481 4 58 2 716 4 486 2 270 2 720 2 719 2 276 2 726 2 279 4 281 2 728 2 284 2 497 2 77 6 79 6 499 12 286 4 500 2 501 2 502 2 733 2 735 8 736 4 737 2 508 1 739 2 743 2 305 2 304 8 518 1 521 2 311 2 524 2 525 2 523 6 95 7 317 2 97 6 533 2 534 2 107 2 758 2 546 2 326 4 763 6 113 2 547 2 119 2 552 6 121 6 338 6 768 2 561 2 140 2 570 6 350 2 143 2 357 2 779 6 361 2 580 2 581 2 363 2 582 2 364 2 781 2 366 6 368 4 586 2 591 1 373 2 375 2 376 2 594 2 791 2 381 4 793 2 169 2 796 2 599 4 171 4 386 4 173 4 605 2 799 2 174 6 800 2 801 2 178 2 180 12 181 6 809 2 808 4 394 4 813 2 186 2 398 1 626 6 189 6 632 2 640 2 641 4 642 2 418 7 199 2 840 2 203 2 421 2 204 2 652 46 
533 2 534 2 319 2 656 2 208 2 107 2 659 2 758 2 546 6 326 4 763 6 113 2 5 2 215 2 673 2 547 2 6 2 119 2 552 6 121 6 222 2 679 2 221 2 223 2 338 6 447 2 768 2 14 6 227 2 561 2 449 10 230 6 18 8 450 2 235 2 686 6 140 2 24 2 240 2 687 4 143 2 350 2 570 6 357 2 690 2 32 4 692 2 779 6 780 4 33 6 249 6 34 4 361 2 580 2 363 2 581 4 463 2 364 2 582 2 781 2 694 4 366 6 586 2 468 2 697 2 373 2 703 2 471 26 375 2 376 2 594 2 165 2 791 2 263 2 478 2 793 2 381 4 264 2 169 2 480 2 266 8 56 6 55 2 267 4 796 2 599 4 171 4 481 4 386 4 173 4 58 2 799 2 605 2 174 6 800 2 801 2 486 2 716 8 178 2 270 2 719 2 720 2 181 6 180 12 808 4 809 2 276 2 811 2 394 4 813 2 279 4 186 2 726 2 728 2 281 2 497 2 284 2 79 6 77 6 499 12 626 6 500 2 286 4 501 2 502 4 733 2 632 2 189 6 735 8 736 8 737 2 739 2 743 2 304 8 305 2 640 2 641 4 521 2 311 2 642 2 199 2 523 6 525 2 524 2 840 2 317 4 203 2 204 2 421 2 97 6 652 48 
533 2 534 2 319 2 656 2 208 2 107 2 659 2 758 2 546 6 326 4 763 6 113 2 5 2 215 2 673 2 547 2 6 2 119 2 552 6 121 6 222 2 679 2 221 2 223 2 338 6 447 2 768 2 14 6 227 2 561 2 449 10 230 6 18 8 450 2 235 2 686 6 140 2 24 2 240 2 687 4 143 2 350 2 570 6 357 2 690 2 32 4 692 2 779 6 780 4 33 6 249 6 34 4 361 2 580 2 363 2 581 4 463 2 364 2 582 2 781 2 153 4 694 4 366 6 586 2 468 2 697 2 373 2 703 2 471 26 375 2 376 2 594 2 165 2 791 2 263 2 478 2 793 2 381 4 264 2 169 2 480 2 266 8 56 6 55 2 267 4 796 2 599 4 171 4 481 4 386 4 173 4 58 2 799 2 605 2 174 6 800 2 801 2 486 2 716 8 178 2 270 2 719 2 720 2 181 6 180 12 808 4 809 2 276 2 811 2 394 4 813 2 279 4 186 2 726 2 728 2 281 2 497 2 284 2 79 6 77 6 499 12 626 6 500 2 286 4 501 2 502 4 733 2 632 2 189 6 735 8 736 8 737 2 739 2 743 2 304 8 305 2 640 2 641 4 521 2 311 6 642 2 199 2 523 6 525 2 524 2 840 2 317 4 203 2 204 2 421 2 97 6 652 48 
656 2 207 6 208 2 659 2 5 2 215 2 673 2 6 2 221 2 679 2 222 4 10 2 223 2 225 6 447 2 14 6 227 2 449 8 230 6 18 8 450 2 235 2 686 6 24 2 687 4 240 2 690 2 32 4 692 2 33 12 34 4 249 6 463 2 694 4 39 2 697 2 468 2 41 2 703 2 471 24 49 2 263 2 478 2 264 2 480 2 266 10 267 4 55 2 56 12 481 4 58 2 716 10 486 2 270 2 719 2 720 2 70 6 276 2 726 2 279 4 281 2 728 2 497 2 284 2 77 12 79 12 499 10 286 6 500 2 501 2 502 4 733 2 735 12 736 10 737 2 739 2 511 6 743 2 305 2 304 8 520 2 521 2 311 6 524 2 525 2 523 6 317 4 97 12 533 2 534 4 319 2 107 2 109 2 758 2 111 6 546 6 326 4 763 6 113 2 547 2 119 2 552 8 121 12 338 6 560 2 768 2 561 2 347 6 140 2 570 6 350 2 143 2 357 2 779 6 780 4 361 2 580 2 581 4 363 2 582 4 364 4 781 2 153 4 368 2 366 8 586 2 160 2 375 2 163 2 376 2 594 2 165 2 791 2 792 6 381 4 793 2 169 2 796 2 599 4 171 4 386 4 173 4 605 2 799 2 174 6 800 2 801 2 178 2 806 6 180 16 181 6 808 4 809 2 811 2 394 4 813 2 186 4 626 6 632 2 189 6 826 6 640 2 641 4 642 2 199 2 840 2 203 2 421 2 204 2 652 52 
376 2 18 2 733 2 264 2 480 2 266 6 758 2 267 4 599 2 24 2 481 2 546 6 350 2 173 4 113 2 58 2 779 2 486 2 716 6 780 2 743 2 270 2 34 2 720 2 521 2 180 4 808 2 153 4 311 4 221 2 525 2 447 2 281 2 652 4 375 2 
534 3 758 2 546 6 113 2 547 2 6 2 119 2 552 6 679 2 221 2 131 2 447 2 227 2 449 2 18 2 686 6 24 2 140 2 687 4 350 2 570 6 143 2 354 2 460 2 32 4 779 2 780 2 149 2 34 2 361 2 580 2 582 3 781 2 366 6 586 2 588 2 373 2 471 24 375 2 376 2 381 2 264 2 169 2 480 2 266 6 267 4 796 2 599 2 171 4 481 2 173 4 58 2 605 2 799 2 800 2 486 2 716 6 270 2 719 2 720 2 180 4 808 2 809 2 813 2 726 2 186 3 281 2 497 2 284 2 499 4 286 4 733 2 735 8 820 2 293 2 739 2 743 2 640 2 196 3 641 4 521 2 311 2 524 2 525 2 840 2 649 2 421 2 529 2 652 28 
192 2 270 2 58 2 
192 2 270 2 58 2 
427 2 533 2 656 2 208 2 546 6 326 2 113 2 671 2 547 2 6 2 119 2 331 4 552 2 679 2 338 2 560 4 227 2 561 2 449 2 18 4 20 2 686 6 24 2 687 4 570 6 143 2 350 2 356 2 573 2 32 4 692 2 779 4 780 4 34 2 361 2 580 2 250 2 581 4 781 2 153 4 694 2 366 2 368 4 586 2 589 2 258 2 471 16 263 4 478 2 381 6 169 2 596 2 480 2 266 12 796 2 267 4 599 2 171 4 481 4 386 4 173 4 58 4 387 2 605 2 799 2 716 12 270 6 719 2 180 16 809 2 808 2 394 2 813 2 279 4 726 2 725 2 186 2 497 2 284 2 499 4 627 2 502 4 83 2 735 2 736 4 192 2 739 2 300 2 299 4 513 2 92 4 640 2 641 4 415 2 93 2 311 6 524 2 525 4 840 2 317 4 203 2 204 2 421 2 652 24 
427 2 449 2 99 2 499 2 671 2 305 2 106 2 632 2 694 2 796 2 338 2 341 2 318 2 471 2 356 2 652 4 690 2 
427 2 533 2 103 2 656 2 208 2 546 6 326 4 113 2 671 2 547 2 6 2 119 2 331 4 552 2 679 2 338 2 560 4 227 2 561 2 18 4 686 6 24 2 687 4 570 6 143 2 350 2 356 2 357 2 573 2 32 4 692 2 779 4 780 4 34 2 361 2 580 2 250 2 581 4 781 2 153 4 366 2 368 4 586 2 589 2 258 2 471 16 263 4 478 2 381 6 169 2 596 2 480 2 266 12 796 2 267 4 599 2 171 4 481 4 386 4 173 4 58 4 387 4 483 2 605 2 799 2 716 12 270 6 719 2 180 16 808 2 809 2 394 2 813 2 279 4 726 2 725 2 186 4 399 2 497 2 284 2 499 2 502 4 735 2 736 4 192 2 739 2 299 4 513 2 92 4 640 2 641 4 415 2 93 2 311 6 524 2 525 4 750 2 316 2 840 2 317 4 203 2 204 2 421 2 652 24 
427 2 533 2 656 2 208 2 546 6 326 4 113 2 671 2 547 2 6 2 119 2 331 4 552 2 679 2 555 2 338 2 560 4 227 2 561 2 449 2 18 4 686 6 24 2 687 4 570 6 143 2 350 2 356 2 357 2 573 2 32 4 692 2 779 4 780 4 34 2 361 2 580 2 250 2 581 4 781 2 153 4 694 2 366 2 368 4 586 2 589 2 698 2 258 2 471 16 263 4 478 2 381 6 169 2 596 2 480 2 266 12 796 2 267 4 599 2 171 4 481 4 386 4 173 4 58 4 387 2 605 2 799 2 716 12 803 2 270 6 719 2 180 16 809 2 808 2 394 2 813 2 279 4 726 2 725 2 186 2 497 2 284 2 499 4 502 4 735 2 736 4 192 2 509 2 739 2 299 4 513 2 92 4 640 2 641 4 415 2 93 2 311 6 524 2 525 4 840 2 647 2 317 4 203 2 204 2 421 2 652 24 
534 2 659 2 211 2 116 2 765 4 547 2 673 2 549 6 333 2 552 6 554 2 679 2 556 2 559 2 342 2 562 2 563 4 345 2 232 2 233 2 564 2 237 2 686 6 456 2 348 2 140 2 687 2 570 2 143 2 146 2 572 2 32 4 148 1 361 2 580 2 363 2 582 2 254 1 366 6 586 2 469 2 703 2 45 2 471 20 162 6 261 2 475 2 380 2 381 2 710 2 170 4 169 2 597 2 796 2 171 2 713 2 603 2 605 2 799 2 61 2 801 2 611 2 64 2 613 2 71 2 809 2 813 2 724 2 726 2 186 2 728 2 495 2 76 2 284 2 499 2 286 4 287 2 735 8 739 2 408 2 824 2 301 2 194 2 517 2 744 2 307 1 640 2 641 4 524 2 840 2 651 2 652 26 
770 3 534 3 166 2 330 4 286 2 150 2 414 2 364 6 582 3 82 2 552 2 735 2 366 2 140 2 314 2 839 2 688 2 601 2 268 2 186 3 352 2 798 2 471 2 652 2 
770 2 534 2 166 2 330 4 286 2 150 2 414 2 364 6 582 2 82 2 552 2 735 2 366 2 140 2 314 2 839 2 688 2 601 2 268 2 186 2 352 2 798 2 471 2 652 2 
770 2 534 2 166 2 330 4 286 2 150 2 414 2 364 6 582 2 82 2 552 2 735 2 366 2 140 2 314 2 839 2 688 2 601 2 268 2 186 2 352 2 798 2 471 2 652 2 
170 4 795 3 597 2 713 2 436 2 485 4 179 3 272 2 218 3 549 6 275 2 617 2 337 4 123 2 723 2 445 2 129 2 683 4 186 3 75 4 76 2 233 2 138 2 735 2 289 2 236 2 348 2 140 2 405 4 688 2 406 4 824 2 571 6 745 2 582 3 645 2 371 2 471 4 45 2 652 10 
532 2 76 2 233 2 138 2 289 2 735 2 236 2 170 4 795 2 597 2 776 2 405 4 140 2 348 2 688 2 406 4 713 2 824 2 436 2 571 6 485 4 745 2 179 2 272 2 549 4 218 2 275 2 582 2 617 2 337 4 123 2 645 2 723 2 371 2 445 2 683 4 129 2 186 2 75 4 45 2 471 4 652 10 531 2 
532 2 76 2 233 2 138 2 289 2 735 2 236 2 170 4 795 2 597 2 776 2 405 4 140 2 348 2 688 2 406 4 713 2 824 2 436 2 571 6 485 4 745 2 179 2 272 2 549 4 218 2 275 2 582 2 617 2 337 4 123 2 645 2 723 2 371 2 445 2 683 4 129 2 186 2 75 4 45 2 471 4 652 10 531 2 
532 2 76 2 233 2 138 2 289 2 735 2 236 2 170 4 795 2 597 2 776 2 405 4 140 2 348 2 688 2 406 4 713 2 824 2 436 2 571 6 485 4 745 2 179 2 272 2 549 4 218 2 275 2 582 2 617 2 337 4 123 2 645 2 723 2 371 2 445 2 683 4 129 2 186 2 75 4 45 2 471 4 652 10 531 2 
532 4 76 2 233 2 138 2 289 2 735 2 236 2 170 4 795 2 597 2 776 4 405 4 140 2 348 2 688 2 406 4 713 2 824 2 436 2 571 6 485 4 745 2 179 2 272 2 549 4 218 2 275 2 582 2 617 2 337 4 123 2 645 2 723 2 371 2 445 2 683 4 129 2 186 2 75 4 45 2 471 4 652 10 531 4 
684 2 429 2 125 2 537 2 773 2 3 2 
668 2 773 2 658 2 828 2 46 2 631 2 507 2 
595 2 790 2 565 2 437 2 602 2 829 2 715 2 669 2 670 2 360 2 33 2 550 1 809 2 312 2 442 1 810 2 616 2 646 2 395 2 257 1 702 2 767 2 846 1 134 1 471 8 652 10 
0 2 76 2 730 2 744 2 517 2 345 2 563 4 233 2 549 5 287 2 170 4 597 2 776 1 348 2 713 2 824 2 45 2 
359 4 818 2 485 2 195 2 451 2 320 2 220 2 835 2 633 2 337 2 567 1 406 2 444 2 593 2 648 7 420 2 471 1 652 1 
359 4 818 4 485 2 195 2 451 4 320 2 220 2 835 2 633 2 337 2 406 2 444 2 593 2 648 6 420 4 
359 4 818 8 485 2 195 2 451 8 320 2 220 2 835 2 633 8 337 2 567 1 406 2 444 2 593 6 648 10 420 8 471 1 652 1 
359 2 818 2 485 2 195 2 451 2 320 2 220 2 835 2 337 2 406 2 444 2 648 2 420 2 
48 2 541 2 323 2 169 2 760 2 171 8 660 4 110 2 112 2 666 4 389 2 6 2 65 2 67 2 615 1 9 2 618 3 224 2 813 2 278 2 446 2 227 2 634 2 238 2 191 2 457 16 568 2 687 8 241 2 142 2 569 2 570 16 144 2 778 2 251 2 362 2 747 4 310 2 585 2 586 2 159 2 471 18 652 18 530 2 
541 2 323 2 169 2 760 2 171 10 660 6 62 2 666 2 217 2 118 2 6 4 65 2 67 2 675 6 393 2 618 2 722 2 224 2 813 2 492 2 446 2 343 2 227 4 135 2 774 2 634 4 238 2 457 12 568 4 687 10 569 2 570 30 412 2 693 2 251 2 365 2 310 2 36 2 585 4 837 2 586 2 838 2 526 2 844 2 374 2 471 20 260 2 652 22 424 2 530 2 
541 2 774 1 323 2 169 4 238 2 292 2 760 2 457 4 687 6 171 6 212 1 570 12 112 2 778 2 666 2 389 2 462 1 118 2 516 2 251 2 6 4 747 4 675 2 255 1 586 4 558 2 224 2 813 4 471 12 227 4 652 12 530 2 
48 2 431 2 476 2 655 2 541 2 206 2 756 2 434 2 323 2 169 2 210 2 760 2 171 20 660 6 110 2 482 2 327 2 112 1 665 2 438 2 114 2 269 2 484 2 666 3 62 2 439 2 6 3 67 2 120 2 65 2 489 2 334 2 553 2 392 4 9 2 618 2 722 2 224 2 492 2 813 2 11 2 446 2 620 2 727 2 815 2 448 4 227 3 135 2 19 2 84 2 634 4 291 2 635 6 238 2 25 2 457 37 87 2 568 4 687 20 241 2 144 2 570 45 569 2 637 2 741 2 30 2 412 2 693 2 251 2 35 2 309 2 310 2 748 4 36 2 585 4 586 2 837 6 783 2 838 2 40 2 590 4 842 2 202 2 785 2 844 2 374 2 471 44 260 2 424 2 425 2 652 46 530 2 
172 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.ArrayIndexOutOfBoundsException 307 151 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 108 265 579 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V ERROR java.lang.ArrayIndexOutOfBoundsException 592 
daikon.test.TestQuant:test_eltsLteIndex()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V ERROR java.lang.ArrayIndexOutOfBoundsException 187 752 
daikon.test.TestQuant:test_union()V ERROR java.lang.ArrayIndexOutOfBoundsException 187 752 287 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V ERROR java.lang.ArrayIndexOutOfBoundsException (43,260,326,334,386) 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 19 635 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 19 635 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 19 24 (193,430) 642 (114,200) (193,430) 304 (114,200) 302 325 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 19 24 (193,430) 642 (114,200) (193,430) 304 (114,200) 302 325 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 19 24 (193,430) 642 (114,200) (193,430) 304 (114,200) 302 325 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 624 661 231 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 497 329 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 186 210 544 550 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 210 544 550 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 186 186 186 186 210 544 550 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z | ASSIGN | 37734 | = null
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Debug:logDetail()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaCharStream:getBeginLine()I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eltsLT([II)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >=
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow(II)I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 10682 | = null
daikon.VarInfo:new_ppt()V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.Debug:logOn()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.Intern:intern([I)[I
daikon.PptName:isCombinedExitPoint()Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:justified()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.ProglangType:dimensions()I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:eltsGT([II)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken; | ASSIGN | 215280 | = null
daikon.PptSlice0:arity()I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.Invariants:Invariants()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.MathMDE:modulus([I)[I
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:eltwiseGT([I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:slice([III)[I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I | CONSTANT | 37587 | 0 -> 1
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | OPERATOR | 54314 | != -> ==
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:lexGT([I[I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.Invariant:logOn()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:subsetOf([B[I)Z
daikon.PptSlice1:arity()I
daikon.Ppt:Ppt()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:eltsGTE([II)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([J)[J
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.Invariant:prob_and(DD)D
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z | CONSTANT | 1896 | 0 -> -1
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaCharStream:readChar()C
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:eq(II)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:subsetOf([I[I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z | STATEMENT | 9323 | stmt -> ;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.MathMDE:sign(I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:jj_ntk()I
daikon.VarInfo:relate_var()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:min([I)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:eltwiseLTE([I)Z
daikon.PptSlice1:num_samples()I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqual([II)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern:intern([D)[D
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:sameLength([I[I)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet; | ASSIGN | 2825 | = null
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:eltsLteIndex([I)Z | CONDITION | 178697 | if (x) -> if (!x)
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:setDiff([I[I)[I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.PptSlice2:arity()I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z | CONDITION | 5354 | if (x) -> if (!x)
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.MathMDE:gcd(II)I
daikon.Quant:noDups([I)Z
utilMDE.ArraysMDE:noDuplicates([D)Z | ASSIGN | 57849 | = null
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String; | RETURN | 23802 | return null
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:eltsGtIndex([I)Z | OPERATOR | 179154 | ++ -> --
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:isPseudoArray()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.ArraysMDE:sum([I)I
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.FormatTestCase:passes()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseLT([I)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.Node:Node()V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lte(II)Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Options.OptionInfo:argument_required()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.MathMDE:pow_fast(II)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:getEndLine()I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaCharStream:FillBuff()V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([D)D
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:concat([I[I)[I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:hashCode()I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:ReadByte()C
utilMDE.Assert:assertTrue(Z)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
204 2 428 4 1 2 235 2 399 2 130 2 13 2 306 2 769 2 
486 6 244 2 129 2 349 2 440 6 539 2 173 2 689 2 163 6 189 2 562 2 
480 6 678 2 410 6 119 2 71 4 616 6 572 2 474 6 728 2 269 2 41 4 13 2 769 2 
409 4 679 2 97 26 190 8 465 10 38 2 7 10 243 8 169 2 246 8 487 2 419 10 65 2 13 6 195 2 88 16 686 10 596 8 90 6 765 16 132 28 297 4 523 12 77 10 767 2 139 4 279 6 551 4 504 16 769 6 
724 4 736 6 
226 2 
603 2 0 2 37 2 83 2 658 2 357 2 85 4 169 2 421 2 542 2 424 2 68 2 519 2 718 2 392 2 16 2 452 2 668 2 137 2 204 2 619 2 455 2 111 2 320 2 
527 4 97 43 656 2 190 19 444 3 465 15 588 8 755 6 7 15 466 4 332 2 419 15 590 2 289 6 270 6 13 4 640 4 88 28 686 6 596 6 90 4 765 28 132 46 18 5 177 4 523 22 77 15 672 4 674 8 767 2 139 2 279 4 346 4 504 28 769 4 747 4 
137 2 9 2 681 2 
365 2 626 2 391 2 628 2 411 22 6 2 704 2 705 2 534 2 723 2 766 2 467 10 115 2 319 2 
97 4 190 2 465 2 121 2 7 2 756 2 419 2 420 2 305 2 88 2 686 4 90 2 520 2 765 2 132 6 693 2 744 2 523 2 180 2 77 2 22 2 139 2 504 2 
97 12 14 2 765 8 132 16 465 4 7 4 177 4 523 6 454 2 77 4 419 4 270 6 551 2 289 6 504 8 747 4 88 8 
239 2 677 2 555 2 240 2 144 2 145 4 324 4 630 4 53 2 37 2 120 2 681 6 9 2 85 4 416 4 540 10 126 2 61 4 64 4 42 4 225 2 292 4 426 14 197 2 152 4 519 4 545 2 229 2 548 4 274 4 473 10 233 2 315 2 397 2 137 8 745 2 577 62 93 2 581 2 259 2 
31 2 412 2 8 2 659 2 535 2 245 2 537 2 561 2 226 2 549 2 
479 1 95 3 2 2 382 2 286 2 485 2 683 10 100 1 684 1 488 2 13 32 490 16 196 2 293 2 294 2 109 2 201 2 692 2 599 3 600 2 601 2 205 2 502 2 503 2 113 3 116 4 404 2 604 22 212 1 406 1 301 2 33 2 702 3 703 2 607 2 218 3 220 16 418 2 611 2 422 2 127 2 222 2 306 2 515 2 307 2 517 2 614 2 310 2 618 2 722 1 136 1 317 2 322 1 735 2 443 2 633 12 536 2 147 2 60 2 150 12 639 6 151 2 739 6 337 2 446 1 543 1 450 2 547 2 72 2 154 2 155 2 156 4 456 2 78 2 344 2 653 3 552 2 654 2 347 2 750 3 458 2 350 12 262 6 264 2 754 3 165 2 352 5 557 2 461 2 356 1 167 1 86 2 758 4 563 2 564 4 566 6 761 2 567 2 664 1 568 2 569 1 367 1 273 4 571 2 275 22 574 2 278 1 280 2 476 1 769 30 
13 2 131 2 
13 4 285 2 423 2 
451 2 
283 2 143 2 627 2 117 2 506 2 379 2 407 2 32 2 528 2 263 2 381 2 464 2 82 2 682 2 265 2 706 2 101 2 512 2 417 2 360 2 267 2 102 2 593 2 171 2 663 2 429 2 687 2 615 2 108 2 496 2 645 2 316 18 620 2 673 2 675 2 768 18 157 2 208 2 579 2 401 2 402 2 732 18 
142 2 737 1 495 2 369 2 
369 2 224 2 
526 2 184 2 137 2 76 2 409 2 374 2 369 2 
526 2 708 2 369 2 
526 2 386 2 369 2 
336 2 495 2 321 2 
526 2 369 2 
336 2 460 2 
92 2 369 2 
336 2 135 2 495 2 
168 2 495 2 395 2 
11 2 495 2 559 2 
146 2 495 2 657 2 
495 2 655 2 641 2 
336 2 138 2 
369 2 277 2 
395 2 647 2 
11 2 435 2 
161 2 657 2 
641 2 28 2 
336 2 740 2 
641 2 313 2 
592 2 657 2 
510 2 
312 2 395 2 
336 2 582 2 135 2 495 2 
355 2 336 2 582 2 135 2 495 2 
336 2 495 2 35 2 
336 2 698 2 495 2 
439 2 107 2 380 2 194 2 
752 2 187 2 
752 2 187 2 287 2 
526 2 137 2 409 2 374 2 369 2 513 2 
541 2 16 2 
137 2 178 2 409 2 374 2 
106 2 657 2 
268 2 641 2 
40 2 395 2 
11 2 39 2 
148 2 11 2 641 2 
11 2 641 2 525 2 
236 2 11 2 641 2 
509 2 11 2 641 2 
699 2 511 6 338 2 272 2 20 2 137 2 725 6 374 2 
336 2 34 2 
21 2 700 2 260 2 43 2 334 2 290 2 326 4 
495 2 748 2 
517 2 
3 2 735 2 382 2 443 2 635 2 683 6 60 2 13 18 639 2 151 2 739 2 741 2 15 2 546 4 450 2 547 2 72 2 109 2 19 2 156 4 155 2 600 2 456 2 344 2 654 2 116 4 347 2 604 2 261 2 262 6 703 2 461 2 415 2 86 2 758 4 418 2 611 2 306 2 566 4 613 2 664 2 567 6 761 2 666 2 273 4 570 2 275 6 136 2 317 2 769 18 
3 2 735 2 382 2 443 2 635 2 683 6 60 2 13 18 639 2 151 2 739 2 741 2 15 2 546 4 547 2 450 2 72 2 109 2 19 2 156 4 155 2 600 2 456 2 344 2 654 2 116 4 347 2 604 2 261 2 262 6 165 2 703 2 461 2 415 2 86 2 758 4 418 2 611 2 306 2 222 2 566 6 613 2 664 2 567 6 761 2 666 2 273 4 570 2 275 6 136 2 317 2 769 18 
715 2 
648 2 213 2 
323 4 482 4 440 6 325 2 629 8 4 2 441 2 189 2 382 2 193 2 328 2 383 8 486 6 539 4 288 2 331 2 12 2 591 2 248 2 13 12 445 2 491 2 389 2 105 2 689 4 644 4 690 2 547 2 295 2 200 2 73 2 691 10 109 2 600 2 156 2 650 4 114 2 116 2 118 4 348 2 405 2 262 4 302 2 163 6 703 2 463 2 461 2 707 2 304 2 221 2 608 2 611 2 469 4 173 2 764 2 434 2 91 2 575 2 437 2 769 6 
323 4 482 4 440 6 325 2 629 8 4 2 441 2 189 2 382 2 193 2 328 2 383 8 486 8 539 4 288 2 331 2 12 2 591 2 248 2 13 12 445 2 491 2 389 2 643 2 105 2 742 4 689 4 644 4 690 2 547 2 295 2 200 2 73 2 109 2 691 10 600 2 156 2 650 4 114 2 116 2 118 4 348 2 405 2 349 2 262 4 302 2 163 8 703 2 463 2 461 2 707 2 304 2 608 2 221 2 611 2 469 4 173 2 434 2 575 2 47 2 437 2 769 6 
323 2 105 2 440 2 325 2 689 2 302 2 690 2 4 2 328 2 486 2 539 2 575 2 221 2 437 2 650 4 114 2 248 2 469 4 
323 4 482 4 440 4 325 2 629 4 4 2 441 2 382 2 193 2 328 2 383 4 486 6 539 4 288 2 331 2 12 2 591 2 248 2 13 12 445 2 491 2 389 2 105 2 689 4 644 4 690 2 547 2 295 2 200 2 73 2 691 6 109 2 600 2 156 2 650 4 114 2 116 2 118 4 348 2 405 2 349 2 262 4 302 2 163 6 703 2 463 2 461 2 707 2 304 2 221 2 608 2 611 2 469 4 173 2 764 2 434 2 91 2 575 2 437 2 769 6 
323 4 482 4 440 6 325 2 629 4 4 2 441 2 382 2 193 2 328 2 383 4 486 4 244 2 539 4 288 2 331 2 12 2 591 2 248 2 13 12 445 2 491 2 389 2 105 2 689 4 644 4 690 2 547 2 295 2 200 2 73 2 691 6 109 2 600 2 156 2 650 4 114 2 116 2 118 4 348 2 405 2 262 4 302 2 163 6 703 2 463 2 461 2 707 2 304 2 221 2 608 2 611 2 469 4 173 2 764 2 434 2 91 2 575 2 437 2 769 6 
323 4 482 4 440 6 325 2 629 8 4 2 441 2 189 2 382 2 193 2 328 2 383 4 486 6 539 4 288 2 331 2 12 2 591 2 248 2 13 12 445 2 491 2 389 2 105 2 689 4 644 4 690 2 547 2 295 2 200 2 73 2 691 6 109 2 600 2 156 2 650 4 114 2 116 2 118 4 348 2 405 2 262 4 302 2 163 6 703 2 463 2 461 2 707 2 304 2 221 2 608 2 611 2 469 4 173 2 764 2 434 2 91 2 575 2 437 2 769 6 
323 4 482 4 440 8 325 2 629 8 4 2 441 2 189 2 382 2 193 2 328 2 383 8 486 6 244 2 539 4 288 2 331 2 12 2 591 2 248 2 13 12 445 2 491 2 389 2 105 2 689 4 644 4 690 2 547 2 295 2 200 2 73 2 691 10 109 2 600 2 156 2 650 4 114 2 116 2 118 4 348 2 405 2 262 4 302 2 163 8 703 2 463 2 461 2 707 2 304 2 221 2 608 2 611 2 469 4 173 2 764 2 434 2 91 2 575 2 437 2 769 6 
323 4 482 4 440 6 325 2 629 8 4 2 441 2 189 2 382 2 193 2 328 2 383 8 486 6 539 4 288 2 331 2 12 2 591 2 248 2 13 12 445 2 491 2 389 2 105 2 689 4 644 4 690 2 547 2 295 2 200 2 73 2 691 10 109 2 600 2 156 2 650 4 114 2 116 2 118 4 348 2 405 2 262 4 302 2 163 6 703 2 463 2 461 2 707 2 304 2 221 2 608 2 611 2 469 4 173 2 764 2 434 2 91 2 575 2 437 2 769 6 
4 2 192 1 382 2 191 6 193 2 12 2 591 2 13 46 387 2 389 2 200 2 201 2 17 6 202 7 203 6 600 2 25 6 24 2 27 2 604 2 30 2 405 2 221 2 608 2 609 6 418 2 611 2 222 2 613 2 430 2 434 2 436 6 234 1 437 2 238 2 440 8 241 2 629 2 441 2 242 10 54 2 443 2 57 2 244 4 636 2 60 2 248 2 445 2 639 2 66 2 69 2 642 2 644 6 450 2 72 2 73 2 451 6 75 2 456 2 255 2 649 2 650 4 457 1 654 2 80 6 458 4 261 4 262 6 461 2 463 4 86 12 469 4 666 2 89 7 273 4 275 8 276 2 281 2 676 6 482 4 96 4 680 8 285 6 486 4 683 6 288 2 491 4 685 2 104 4 105 2 689 4 690 2 295 2 296 2 109 2 691 2 692 4 114 2 116 4 118 8 300 2 508 2 302 2 703 2 123 1 707 2 304 2 306 2 514 2 311 2 719 2 131 6 133 2 134 1 317 2 729 2 731 2 733 2 141 2 323 4 529 2 325 2 531 1 735 2 533 2 328 2 536 2 539 4 331 2 151 2 739 2 337 2 546 4 547 2 743 1 153 6 343 1 156 4 155 2 344 2 554 6 347 2 348 2 753 6 163 12 165 2 166 2 758 4 170 6 566 6 565 2 761 2 567 6 173 4 764 2 573 1 176 1 179 2 181 6 575 2 769 24 
482 4 96 4 4 2 285 6 680 8 189 4 191 6 382 2 193 2 486 8 683 6 288 2 12 2 591 2 13 46 387 2 491 2 685 2 104 4 105 2 689 4 690 2 295 2 296 2 200 2 109 2 201 4 692 6 17 6 203 6 694 2 19 2 600 2 24 2 25 6 114 2 27 2 116 4 30 2 604 2 300 2 118 8 508 2 302 2 703 2 707 2 304 2 609 6 608 2 221 2 418 2 611 2 306 2 222 2 514 2 613 2 430 2 311 2 719 2 434 2 133 2 131 6 436 6 729 2 437 2 317 2 731 2 733 2 238 2 141 2 323 4 440 8 241 2 325 2 629 6 529 2 441 2 735 2 242 10 533 2 54 2 443 2 57 2 328 2 636 2 536 4 539 4 60 2 331 2 248 2 639 2 445 2 66 2 151 2 69 2 739 2 642 2 337 4 644 6 546 4 450 2 547 2 153 6 73 2 72 2 451 6 155 2 156 4 75 2 456 2 255 2 649 2 344 2 650 4 654 2 554 6 80 6 347 2 458 6 348 2 753 6 261 4 262 6 163 12 165 2 463 2 461 2 166 2 86 12 758 4 469 4 170 6 566 6 567 6 761 2 764 2 173 4 174 2 666 2 273 4 275 8 276 2 179 2 181 6 575 2 676 6 281 2 769 24 
482 4 96 4 4 2 285 6 680 8 189 4 191 6 382 2 193 2 383 4 486 8 683 6 288 2 12 2 591 2 13 46 387 2 491 2 685 2 104 4 105 2 689 4 690 2 295 2 296 2 200 2 691 4 109 2 201 4 692 6 17 6 203 6 694 2 19 2 600 2 24 2 25 6 114 2 27 2 116 4 30 2 604 2 300 2 118 8 508 2 302 2 703 2 707 2 304 2 609 6 608 2 221 2 418 2 611 2 306 2 222 2 514 2 613 2 430 2 311 2 719 2 434 2 133 2 131 6 436 6 729 2 437 2 317 2 731 2 733 2 238 2 141 2 323 4 440 8 241 2 325 2 629 6 529 2 441 2 735 2 242 10 533 2 54 2 443 2 57 2 328 2 636 2 536 4 539 4 60 2 331 2 248 2 639 2 445 2 66 2 151 2 69 2 739 2 642 2 337 4 644 6 546 4 450 2 547 2 153 6 72 2 73 2 451 6 155 2 156 4 75 2 456 2 255 2 649 2 344 2 650 4 654 2 554 6 80 6 347 2 458 6 348 2 753 6 261 4 262 6 163 12 165 2 463 2 461 2 166 2 86 12 758 4 469 4 170 6 566 6 567 6 761 2 764 2 173 4 174 2 666 2 273 4 275 8 276 2 179 2 181 6 575 2 676 6 281 2 769 24 
482 4 96 4 4 2 285 6 680 8 189 4 191 6 382 2 193 2 383 4 486 10 683 8 288 2 12 2 591 2 13 44 489 2 491 2 685 2 104 4 105 2 689 4 690 2 295 2 296 2 200 2 691 4 109 2 201 4 692 6 17 6 203 6 694 2 19 2 600 2 24 2 25 6 114 2 27 2 116 4 30 2 604 4 300 2 118 8 508 2 302 2 703 2 707 2 304 2 609 6 608 2 221 2 418 2 611 2 306 2 222 2 514 2 711 2 613 2 430 2 311 2 719 2 434 2 133 2 131 6 232 2 436 6 729 2 437 2 317 2 731 2 733 2 238 2 141 2 323 4 440 10 241 2 325 2 629 6 529 2 441 2 735 2 242 8 533 2 54 2 443 2 57 2 328 2 636 2 244 2 536 4 539 4 60 2 331 2 248 2 639 4 445 2 66 2 151 2 69 2 739 4 642 2 337 4 340 2 644 6 546 6 547 2 450 2 153 6 72 2 73 2 646 2 451 6 155 2 156 4 75 2 456 2 255 2 649 2 344 2 650 4 654 2 554 6 80 6 347 2 458 6 348 2 753 6 349 2 261 4 262 6 163 16 165 2 463 2 461 2 354 2 166 2 86 10 758 4 469 4 170 6 566 6 567 8 761 2 764 2 173 4 174 2 666 2 273 4 275 12 276 2 179 2 181 6 575 2 676 6 281 2 769 22 
118 2 482 2 348 2 440 6 629 6 163 4 4 2 441 2 189 2 383 4 328 2 486 6 539 4 288 2 608 2 221 2 331 2 12 2 591 2 13 4 248 2 445 2 469 2 105 2 644 2 764 2 173 2 689 4 295 2 434 2 73 2 691 4 575 2 437 2 650 2 
482 2 2 2 4 2 189 2 382 2 486 6 683 6 288 2 12 2 591 2 13 28 387 2 105 2 689 4 295 2 109 2 691 2 600 2 503 2 116 4 604 3 118 2 33 2 703 2 707 2 221 2 608 2 418 2 611 2 222 2 306 2 612 2 613 2 517 2 717 3 434 2 314 2 317 2 437 2 440 6 734 2 629 6 441 2 735 2 242 2 443 2 328 2 539 4 331 2 60 2 248 2 639 3 445 2 151 2 739 3 644 2 546 4 450 2 547 2 72 2 73 2 156 4 155 2 453 2 456 2 650 2 344 2 654 2 347 2 459 2 348 2 261 2 262 6 163 4 165 2 461 2 86 4 758 4 469 2 566 6 761 2 567 6 764 2 173 2 666 2 273 4 275 8 575 2 769 24 
162 2 288 2 591 2 
162 2 288 2 591 2 
481 2 482 2 96 2 4 2 189 4 191 2 382 2 587 2 383 4 384 2 486 12 683 2 288 6 103 2 12 2 591 4 13 24 491 4 104 2 689 4 295 2 200 2 109 2 691 6 201 4 692 4 600 2 398 2 501 2 114 2 116 4 604 2 118 4 405 2 302 2 703 2 304 2 221 2 418 2 611 2 222 2 306 2 514 2 128 2 613 2 311 6 134 1 46 4 730 2 317 2 48 4 141 2 323 4 440 12 629 6 735 2 242 2 327 2 443 2 536 4 244 4 539 4 60 2 247 2 250 2 642 2 337 4 644 4 450 2 547 2 72 2 155 2 156 4 456 2 344 2 650 2 654 2 345 2 749 6 347 2 458 4 162 2 349 4 261 8 262 6 163 16 351 6 165 2 463 2 461 2 462 2 86 4 758 4 469 2 566 6 172 4 761 2 567 2 173 4 666 2 273 4 275 2 670 2 575 4 376 2 769 16 
250 2 172 2 213 2 96 2 690 2 719 2 109 2 242 2 191 2 586 2 86 2 24 2 159 2 48 2 13 4 580 2 769 2 
481 2 482 2 4 2 189 4 191 2 382 2 587 4 383 4 486 12 683 2 288 6 103 2 12 2 591 4 13 24 491 4 389 2 104 2 689 4 295 2 200 2 109 2 691 6 201 4 692 4 600 2 398 2 501 2 114 2 116 4 604 4 118 4 405 2 302 2 703 2 304 2 221 2 418 2 611 2 222 2 306 2 514 2 128 2 613 2 311 6 433 2 230 2 726 2 46 4 317 2 48 4 625 2 141 2 323 4 440 12 629 6 735 2 443 2 330 2 536 4 244 4 539 4 60 2 250 2 642 2 337 4 644 4 450 2 547 2 72 2 155 2 156 4 456 2 344 2 650 2 654 2 345 2 749 6 347 2 458 4 162 2 349 4 261 8 262 6 163 16 351 6 165 2 463 4 461 2 462 2 86 2 758 4 469 2 566 6 172 4 761 2 567 2 173 4 666 2 273 4 275 2 670 2 575 4 376 2 769 16 
481 2 482 2 96 2 4 2 189 4 191 2 382 2 587 2 383 4 486 12 683 2 288 6 103 2 12 2 591 4 13 24 491 4 389 2 104 2 688 2 689 4 295 2 200 2 109 2 691 6 201 4 692 4 499 2 600 2 398 2 501 2 114 2 116 4 604 2 118 4 405 2 302 2 703 2 304 2 221 2 418 2 611 2 222 2 306 2 514 2 128 2 613 2 227 2 311 6 134 1 46 4 317 2 48 4 141 2 323 4 440 12 629 6 735 2 242 2 443 2 536 4 244 4 539 4 60 2 250 2 642 2 337 4 644 4 450 2 547 2 72 2 155 2 156 4 456 2 344 2 650 2 654 2 345 2 749 6 347 2 458 4 162 2 349 4 261 8 262 6 163 16 351 6 165 2 463 4 461 2 462 2 353 2 86 4 758 4 361 2 469 2 566 6 172 4 761 2 567 2 173 4 666 2 273 4 275 2 670 2 575 4 376 2 769 16 
186 2 378 2 97 4 583 2 584 2 190 1 188 2 382 2 7 2 683 6 10 2 590 1 13 26 685 2 493 2 109 2 692 2 110 2 598 6 600 2 207 2 403 2 504 2 116 4 604 2 300 2 507 1 408 2 605 2 703 2 36 2 217 2 219 2 419 2 418 2 611 2 222 2 306 2 516 2 132 4 231 2 721 2 134 1 523 1 727 4 317 2 438 2 238 2 624 2 50 2 632 2 735 2 442 2 533 2 443 2 636 2 60 2 639 2 151 2 66 2 739 2 335 2 341 2 546 4 450 2 547 2 72 2 156 4 155 2 77 2 456 2 344 2 79 2 654 2 347 2 747 2 458 2 81 2 261 2 262 6 165 2 461 2 465 2 166 2 84 2 86 2 758 4 759 2 660 2 270 4 363 2 661 2 760 2 88 2 566 8 761 2 567 6 666 2 765 2 273 4 275 8 276 2 472 2 370 2 671 2 281 2 182 2 282 2 769 20 478 2 
604 3 52 2 358 2 683 2 636 6 13 2 638 2 639 3 712 3 151 2 739 3 427 2 662 2 567 2 714 2 762 2 546 2 342 2 275 2 521 2 396 4 746 2 400 2 769 2 
604 2 52 2 358 2 683 2 636 6 13 2 638 2 639 2 712 2 151 2 739 2 427 2 662 2 567 2 714 2 762 2 546 2 342 2 275 2 521 2 396 4 746 2 400 2 769 2 
604 2 52 2 358 2 683 2 636 6 13 2 638 2 639 2 712 2 151 2 739 2 427 2 662 2 567 2 714 2 762 2 546 2 342 2 275 2 521 2 396 4 746 2 400 2 769 2 
299 2 604 3 701 2 97 4 98 4 216 2 465 2 7 2 633 2 58 4 358 2 419 2 87 3 62 4 150 2 13 10 639 3 151 2 88 2 251 2 665 2 308 2 366 2 228 6 596 4 175 2 765 2 132 6 275 2 597 2 498 2 523 2 77 2 651 3 257 3 279 2 29 4 524 2 769 4 504 2 505 4 
97 4 98 4 190 2 633 2 7 2 58 4 13 10 150 2 62 4 639 2 151 2 251 2 596 4 597 2 498 2 77 2 257 2 651 2 504 2 29 4 505 4 604 2 299 2 701 2 465 2 216 2 358 2 419 2 87 2 88 2 308 2 665 2 366 2 228 6 765 2 175 2 132 4 275 2 523 2 767 2 279 2 769 4 524 2 
97 4 98 4 190 2 633 2 7 2 58 4 13 10 150 2 62 4 639 2 151 2 251 2 596 4 597 2 498 2 77 2 257 2 651 2 504 2 29 4 505 4 604 2 299 2 701 2 465 2 216 2 358 2 419 2 87 2 88 2 308 2 665 2 366 2 228 6 765 2 175 2 132 4 275 2 523 2 767 2 279 2 769 4 524 2 
97 4 98 4 190 2 633 2 7 2 58 4 13 10 150 2 62 4 639 2 151 2 251 2 596 4 597 2 498 2 77 2 257 2 651 2 504 2 29 4 505 4 604 2 299 2 701 2 465 2 216 2 358 2 419 2 87 2 88 2 308 2 665 2 366 2 228 6 765 2 175 2 132 4 275 2 523 2 767 2 279 2 769 4 524 2 
97 4 98 4 190 4 633 2 7 2 58 4 13 10 150 2 62 4 639 2 151 2 251 2 596 4 597 2 498 2 77 2 257 2 651 2 504 2 29 4 505 4 604 2 299 2 701 2 465 2 216 2 358 2 419 2 87 2 88 2 308 2 665 2 366 2 228 6 765 2 175 2 132 4 275 2 523 4 767 4 279 2 769 4 524 2 
606 2 751 2 538 2 468 2 258 2 74 2 
634 2 538 2 206 2 373 2 112 2 36 2 558 2 
329 2 214 2 497 2 
97 11 190 5 99 2 414 2 465 5 7 5 660 2 419 5 333 2 590 1 270 3 13 6 640 2 88 6 271 2 596 4 765 6 132 13 18 4 523 6 77 5 674 2 767 4 207 2 79 2 578 2 279 2 237 2 769 6 504 6 747 2 
492 2 70 2 716 6 309 1 284 2 98 2 55 2 56 2 617 2 45 2 385 4 738 2 359 2 13 1 769 1 29 2 388 2 505 2 
492 2 70 4 716 6 284 2 98 2 55 4 617 2 56 2 45 4 385 4 738 2 359 2 29 2 388 2 505 2 
492 2 70 8 716 10 309 1 284 2 98 2 55 8 617 8 56 6 45 8 385 4 738 2 359 2 13 1 769 1 29 2 388 2 505 2 
492 2 70 2 716 2 284 2 98 2 55 2 45 2 385 2 738 2 359 2 29 2 388 2 505 2 
186 2 530 2 584 2 484 1 13 6 544 2 450 2 550 2 210 2 347 2 458 2 165 2 758 2 222 2 566 6 368 1 273 2 317 2 140 2 769 6 
94 2 185 2 483 2 51 2 5 2 631 2 532 2 585 4 484 2 589 2 637 2 149 2 63 2 13 46 291 2 249 4 594 4 494 2 390 2 339 2 198 2 199 2 447 2 544 2 448 4 449 2 595 2 450 2 393 2 394 2 253 2 500 2 695 2 23 2 158 2 550 2 256 2 652 6 696 2 209 2 697 2 26 2 553 2 210 2 602 2 347 2 211 2 458 38 215 2 164 2 165 2 556 2 413 2 122 2 303 2 266 2 757 2 125 2 758 20 610 2 709 4 362 2 710 2 560 2 222 2 223 4 425 2 364 6 566 44 470 2 431 2 432 2 763 2 518 2 44 2 720 4 273 20 669 2 134 2 371 2 522 2 475 2 372 4 576 2 621 2 317 2 318 2 622 2 140 2 477 2 769 44 623 6 
566 10 185 2 458 4 544 2 518 2 450 2 165 4 273 4 122 2 371 2 59 2 758 4 550 2 317 2 222 4 13 10 140 2 210 2 769 10 347 2 
185 2 483 2 186 8 530 2 584 2 532 2 484 2 589 2 637 2 13 22 291 2 594 4 339 2 447 2 448 4 544 2 450 2 254 2 550 2 26 2 697 2 210 2 347 2 458 12 165 6 413 2 122 2 303 2 125 2 758 10 222 6 223 2 364 2 566 34 713 2 431 2 518 2 667 2 273 10 371 2 134 2 372 4 621 2 317 2 375 2 318 2 140 2 769 20 623 6 377 2 183 2 
160 2 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 
298 1 124 1 252 1 471 1 49 1 67 1 

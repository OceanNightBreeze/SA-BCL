#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArithmeticException 70 12 38 246 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (237,455) (237,455) (16,160,607) (16,160,607) (16,160,607) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V ERROR utilMDE.Assert$AssertionException (237,455) 513 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 18 603 641 587 505 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.ComparisonFailure 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (482,553) 146 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 570 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 570 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (237,455) 359 541 413 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 75 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 478 317 225 
daikon.test.VarInfoNameTest:testJML()V FAILED junit.framework.AssertionFailedError 137 225 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.ArrayIndexOutOfBoundsException 478 317 225 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 137 225 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([S[S)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z | CONSTANT | 23955 | 1 -> 0
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 5075 | = null
daikon.Quant:concat([I[I)[I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONDITION | 50578 | if (x) -> if (!x)
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:memberOf(I[I)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.ModBitTracker:num_vars()I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(JJ)J
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.MathMDE:gcd_differences([I)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:lexLT([I[I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.ProglangType:dimensions()I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:eq(JJ)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.ProglangType:isScalar()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([J)[J
utilMDE.MathMDE:gcd(II)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:lte(II)Z
daikon.Quant:gte(II)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:ne(II)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:eltsGTE([II)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | ASSIGN | 19872 | = null
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:eltsEqual([II)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:setEqual([I[I)Z | OPERATOR | 155198 | < -> >
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:sameLength([I[I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ModBitTracker:num_sets()I
utilMDE.WeakHasherMap:processQueue()V
utilMDE.MathMDE:negate(I)I
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:lexEqual([I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName; | CONDITION | 27362 | if (x) -> if (!x)
daikon.Quant:eltsLtIndex([I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.PptSlice1:arity()I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaCharStream:ReadByte()C
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE:min([I)I
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Ppt:Ppt()V
daikon.VarInfoName.Prestate:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | CONDITION | 13357 | if (x) -> if (!x)
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:union([I[I)[I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoAux:hashCode()I
utilMDE.ArraysMDE:sum([[D)D
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13739 | = null
daikon.inv.Invariant:prob_or(DD)D
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.ModBitTracker:split(I)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaCharStream:readChar()C | OPERATOR | 5855 | == -> <=
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.ModBitTracker:num_samples()I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:size()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:getConfidence()D
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaCharStream:FillBuff()V
daikon.Quant:subsetOf([D[D)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:noDups([I)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:baseIsScalar()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 283084 | = null
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ProglangType:isArray()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eq(II)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:slice([III)[I | OPERATOR | 160615 | == -> !=
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.diff.Node:Node()V
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eq(FF)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.Invariant:prob_is_ge(DD)D | STATEMENT | 6797 | stmt -> ;
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 65371 | return null
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V | ASSIGN | 956 | = null
daikon.ModBitTracker:ModBitTracker(I)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfo:new_ppt()V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.MathMDE:pow(II)I
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE:noDuplicates([D)Z | CONSTANT | 57690 | 0 -> 1
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.Invariant:justified()Z
daikon.Quant:memberOf(D[F)Z
daikon.PptSlice2:arity()I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.ProglangType:isIntegral()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName:hashCode()I
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | OPERATOR | 128699 | < -> <=
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:lexGT([I[I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Debug:logOn()Z
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 4963 | 78 -> 77
daikon.ProglangType:isPseudoArray()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice0:arity()I
daikon.Quant:memberOf(F[F)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eq(DD)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([I)[I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:lt(II)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariants:Invariants()V
daikon.VarInfo:relate_var()V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.InvMap:InvMap()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
253 2 237 2 24 2 64 4 218 2 254 2 354 2 213 2 455 2 
233 2 437 2 372 2 123 6 449 2 558 2 278 6 512 2 303 2 377 2 514 6 
592 4 138 4 368 2 320 2 47 2 305 2 387 2 322 4 493 2 
260 2 646 8 222 4 352 2 143 8 483 2 19 4 316 8 370 10 107 10 469 4 596 10 147 2 130 12 4 26 323 2 30 4 93 16 7 28 274 16 409 2 411 2 8 10 455 6 555 16 456 8 237 6 239 10 121 6 624 6 
153 6 66 4 
298 2 
367 2 289 2 62 2 161 2 483 2 544 2 484 2 125 2 269 4 396 2 24 2 376 2 324 2 172 2 111 2 379 2 175 2 553 2 54 2 434 2 481 2 36 2 644 2 241 2 
646 18 19 2 370 16 20 4 425 6 107 6 593 2 596 16 293 8 130 22 4 48 93 32 273 4 7 54 274 32 135 4 606 6 509 4 411 2 453 2 277 2 114 2 8 16 455 4 555 32 456 6 237 4 97 4 239 16 35 4 286 6 217 2 120 2 333 6 287 6 121 4 624 4 462 6 560 4 
547 2 633 2 553 2 
205 2 48 22 439 2 482 2 605 2 346 2 569 2 385 2 546 10 180 2 294 2 118 2 399 2 401 2 
646 2 392 2 19 2 370 2 543 2 107 4 594 2 596 2 292 2 130 2 4 4 169 2 93 2 7 6 274 2 381 2 8 2 555 2 239 2 386 2 389 2 203 2 624 2 
222 2 93 8 7 16 274 8 370 4 425 6 8 4 555 8 53 2 97 4 596 4 652 2 130 4 239 4 4 12 286 6 560 4 
122 10 523 2 105 4 313 2 542 2 266 2 246 2 468 2 67 4 318 10 269 2 70 8 547 6 373 2 633 2 171 60 619 4 272 2 494 2 407 4 378 2 200 2 299 2 300 4 553 8 74 2 581 4 12 2 582 2 156 2 240 2 119 2 613 2 220 2 288 2 38 4 241 2 
349 2 103 2 311 2 353 2 567 2 336 2 491 2 298 2 410 2 420 2 
160 2 371 2 87 2 89 2 44 2 599 2 472 2 253 2 49 2 50 2 550 2 635 4 607 2 636 2 608 2 477 4 10 2 96 2 557 2 559 2 519 2 16 2 561 4 186 2 224 6 648 2 524 2 144 2 110 2 574 2 32 2 536 2 235 2 455 20 330 2 331 6 237 22 538 2 77 4 417 2 37 2 539 2 204 2 
237 2 648 2 513 2 
404 2 61 2 237 4 
369 2 
603 2 40 2 587 2 52 2 637 2 281 2 267 2 357 2 505 2 167 2 307 2 641 2 388 4 435 2 419 2 252 2 18 2 432 4 
198 2 165 1 231 2 487 2 
451 2 487 2 
31 2 343 2 146 2 572 2 469 2 553 2 487 2 
31 2 216 2 
31 2 408 2 487 2 
231 2 415 2 191 2 
31 2 487 2 
214 2 191 2 
244 2 487 2 
261 2 231 2 191 2 
188 2 231 2 461 2 
231 2 163 2 526 2 
187 2 215 2 231 2 
628 2 306 2 231 2 
117 2 191 2 
653 2 487 2 
188 2 190 2 
495 2 163 2 
187 2 275 2 
628 2 649 2 
421 2 191 2 
628 2 201 2 
187 2 531 2 
142 2 163 2 
188 2 258 2 
261 2 247 2 231 2 191 2 
261 2 247 2 231 2 100 2 191 2 
231 2 34 2 191 2 
601 2 231 2 191 2 
450 2 340 2 400 2 
79 2 146 2 553 2 17 2 
79 2 146 2 572 2 363 2 553 2 17 2 
31 2 127 2 146 2 469 2 553 2 487 2 
440 2 376 2 
146 2 24 2 489 2 553 2 
185 2 187 2 
628 2 194 2 
188 2 614 2 
72 2 163 2 
628 2 83 2 163 2 
628 2 112 2 163 2 
571 2 628 2 163 2 
628 2 163 2 600 2 
226 2 335 2 467 2 427 6 146 2 69 6 553 2 219 2 
414 2 191 2 
149 2 507 2 562 2 533 4 325 2 48 6 549 2 6 2 314 2 424 2 579 2 609 2 284 2 360 2 617 4 102 2 436 2 184 2 
231 2 466 2 
50 2 
242 3 80 3 1 3 39 3 585 2 423 2 371 2 87 2 89 6 44 2 599 2 472 2 253 2 49 2 635 4 636 2 608 2 477 4 516 2 96 2 557 2 559 6 561 4 350 2 186 2 224 4 524 2 144 2 265 2 528 4 110 6 570 2 574 2 32 2 576 2 536 2 455 16 331 6 330 2 283 2 237 16 77 4 538 2 417 2 460 2 625 2 539 2 204 2 
242 2 80 2 1 2 39 2 585 2 423 2 371 2 87 2 89 6 44 2 599 2 472 2 253 2 49 2 635 4 636 2 608 2 477 4 516 2 10 2 96 2 557 2 559 6 519 2 561 4 350 2 186 2 224 6 524 2 144 2 265 2 528 4 110 6 570 2 574 2 32 2 576 2 536 2 455 16 331 6 330 2 283 2 237 16 538 2 77 4 417 2 460 2 625 2 539 2 204 2 
583 2 
154 2 383 2 
351 2 262 2 375 2 
351 2 262 2 375 2 
503 1 243 2 589 2 504 2 87 2 168 2 597 2 430 2 89 2 170 2 599 4 253 2 602 4 345 2 608 2 178 2 9 4 514 12 179 2 96 2 10 2 519 2 15 2 349 1 103 1 104 4 437 4 521 4 438 6 186 2 351 4 262 2 189 2 524 2 356 2 527 4 109 4 270 2 358 2 616 2 110 2 446 4 195 2 196 2 532 2 32 2 536 2 278 12 455 16 33 4 457 2 283 6 538 2 460 2 204 2 539 2 123 16 39 2 42 2 371 2 372 4 375 6 44 2 296 4 377 4 548 2 472 2 134 2 634 4 473 2 474 4 49 2 635 4 380 4 636 2 477 4 301 2 303 4 304 2 557 2 139 1 559 2 558 4 561 4 312 2 224 6 144 2 68 2 232 2 71 2 233 4 234 2 574 2 576 2 152 2 412 2 656 2 329 4 330 2 331 6 237 24 155 2 77 4 417 2 157 2 502 2 662 4 334 6 
548 2 473 2 312 2 575 2 412 2 608 2 355 2 455 2 356 2 154 2 228 2 457 2 166 2 237 4 444 2 248 2 599 2 
243 2 589 2 504 4 87 2 597 2 430 2 89 2 599 2 253 2 602 4 174 2 345 2 608 2 178 2 9 4 514 12 179 2 96 2 10 2 519 2 15 2 104 4 521 4 437 4 438 6 186 2 351 4 262 2 189 2 524 2 527 4 109 4 270 2 358 2 616 2 110 2 446 4 195 2 196 2 532 2 32 2 536 2 278 12 455 16 33 4 457 2 283 6 285 2 538 2 460 2 204 2 539 2 123 16 39 4 41 2 42 2 371 2 372 4 630 2 375 6 44 2 296 4 377 4 472 2 634 4 473 2 474 4 49 2 635 4 380 4 636 2 477 4 301 4 303 4 304 2 557 2 308 2 559 2 558 4 561 4 312 2 224 6 144 2 227 2 232 2 71 2 233 4 234 2 574 2 576 2 152 2 412 2 656 2 329 4 330 2 331 6 237 24 155 2 77 4 417 2 157 2 502 2 662 4 334 6 
243 2 589 2 504 4 87 2 430 2 89 2 599 4 253 2 602 4 345 2 608 2 178 2 9 4 514 12 179 2 611 2 96 2 10 2 519 2 15 2 104 2 437 4 521 4 438 6 186 2 351 4 262 2 189 2 524 2 442 2 356 2 527 4 109 4 270 2 358 2 616 2 110 2 446 4 195 2 196 2 532 2 535 2 32 2 536 2 278 12 455 16 33 4 457 2 283 6 538 2 460 2 204 2 539 2 123 16 39 2 41 2 42 2 371 2 372 4 375 6 44 2 296 4 377 4 548 2 472 2 634 4 473 2 474 4 49 2 635 4 380 4 636 2 477 4 301 2 303 4 304 2 557 2 559 2 558 4 561 4 312 2 224 6 144 2 148 2 232 2 71 2 233 4 234 2 574 2 576 2 152 2 412 2 578 2 656 2 329 4 330 2 331 6 237 24 155 2 77 4 417 2 157 2 502 2 662 4 334 6 
242 2 1 2 81 2 39 2 541 2 245 1 85 2 629 2 426 1 89 8 44 2 598 2 599 2 472 2 253 2 49 2 635 4 636 2 477 2 608 2 639 2 516 2 10 1 99 2 11 2 182 2 559 6 57 2 519 1 259 2 101 2 561 2 141 2 186 2 224 3 648 2 144 2 524 2 230 2 528 4 193 2 110 6 359 2 321 2 362 2 150 2 574 2 73 2 32 2 536 2 279 2 413 2 455 18 330 2 331 6 283 2 282 2 237 24 76 2 538 2 77 4 417 2 660 2 460 2 366 2 539 2 204 2 
242 3 1 3 39 3 511 2 497 2 455 2 650 2 516 2 237 2 528 2 110 2 25 2 559 2 501 3 89 2 
242 2 1 2 39 2 511 2 497 2 455 2 650 2 516 2 237 2 528 2 110 2 25 2 559 2 501 2 89 2 
242 2 1 2 39 2 511 2 497 2 455 2 650 2 516 2 237 2 528 2 110 2 25 2 559 2 501 2 89 2 
540 2 242 3 39 3 370 2 650 2 443 2 596 2 4 4 89 2 271 3 5 3 93 2 7 6 655 2 604 2 274 2 454 2 302 2 8 2 236 3 455 2 555 2 516 2 456 4 237 4 479 2 239 2 221 2 121 2 
540 2 646 2 242 2 39 2 650 2 443 2 130 2 4 2 89 2 271 2 5 2 93 2 7 2 655 2 604 2 274 2 411 2 454 2 302 2 236 2 455 2 555 2 516 2 456 2 237 4 479 2 221 2 121 2 
540 2 242 2 39 2 370 2 650 2 443 2 596 2 4 4 89 2 271 2 5 2 93 2 7 4 655 2 604 2 274 2 454 2 302 2 8 2 236 2 455 2 555 2 516 2 456 4 237 4 479 2 239 2 221 2 121 2 
540 2 242 2 39 2 370 1 650 2 443 2 596 1 130 1 4 3 89 2 271 2 5 2 93 2 7 3 655 2 604 2 274 2 454 2 302 2 8 1 236 2 455 2 555 2 516 2 456 3 237 4 479 2 239 1 221 2 121 2 
540 2 646 2 242 2 39 2 370 1 650 2 443 2 596 1 130 3 4 3 89 2 271 2 5 2 93 2 7 3 655 2 604 2 274 2 411 2 454 2 302 2 8 1 236 2 455 2 555 2 516 2 456 3 237 4 479 2 239 1 221 2 121 2 
60 2 534 2 223 2 63 2 56 2 337 2 
395 2 384 2 476 2 485 2 280 2 295 2 337 2 
522 2 159 2 523 1 207 2 542 1 393 2 530 2 43 1 374 2 29 2 403 2 406 2 46 1 45 2 536 2 537 2 498 2 455 8 256 2 116 2 458 2 237 10 238 2 659 2 181 2 643 1 
197 2 93 2 7 6 274 4 208 2 370 3 425 4 8 2 327 2 75 2 555 4 596 3 98 2 239 3 4 4 121 2 91 2 560 2 
627 2 564 7 297 2 136 2 638 2 499 4 455 1 545 2 394 2 488 2 610 2 237 1 429 2 131 1 361 2 480 2 90 2 402 2 
627 2 564 6 297 2 136 4 638 2 499 4 545 2 394 2 488 2 610 2 429 4 480 2 361 2 90 2 402 4 
627 2 564 10 297 2 136 8 638 2 499 4 455 1 545 6 394 2 488 2 610 2 237 1 429 8 131 1 480 8 361 2 90 2 402 8 
627 2 564 2 297 2 136 2 638 2 499 2 394 2 488 2 610 2 429 2 361 2 90 2 402 2 
422 2 0 2 584 2 162 2 586 3 84 2 590 4 338 2 428 2 86 2 595 1 249 2 341 4 250 18 251 2 506 5 173 2 94 2 176 2 515 2 257 2 10 4 518 2 519 4 183 2 14 2 13 2 186 4 525 4 615 2 23 2 28 4 27 4 445 2 529 2 448 2 618 1 620 2 276 4 452 2 113 1 455 36 622 2 364 2 459 1 626 2 464 4 465 2 124 2 291 4 210 2 128 6 631 2 632 2 470 2 211 4 475 2 49 6 552 2 382 4 477 16 212 2 554 2 556 4 478 2 309 2 58 2 561 18 59 2 647 2 391 2 563 2 224 34 315 2 317 2 225 2 65 2 566 2 486 14 651 2 568 2 229 2 397 2 654 2 405 2 573 2 574 6 577 2 580 2 326 2 657 2 658 2 237 40 418 2 78 2 
206 2 422 4 162 2 588 2 290 4 84 2 464 4 164 4 590 6 465 2 209 2 291 4 210 2 126 2 86 2 339 2 3 2 129 2 632 2 132 2 88 2 341 2 342 2 506 2 133 2 92 2 508 2 344 2 433 2 49 2 94 2 551 2 510 2 176 4 477 20 137 2 255 2 347 2 95 2 257 2 612 2 55 2 478 2 640 2 140 2 645 4 390 2 561 20 59 4 647 2 186 2 565 2 106 2 224 44 441 2 263 2 264 2 317 2 225 2 21 2 486 6 22 2 268 2 192 6 108 2 615 2 145 2 319 2 27 2 28 4 447 2 654 2 620 2 199 2 574 2 151 2 496 2 452 2 276 40 202 4 113 2 455 46 658 2 623 2 237 48 364 2 500 4 661 2 418 2 158 2 
422 2 584 2 82 2 586 4 84 2 2 2 338 2 591 8 86 4 249 2 341 4 431 2 250 14 251 2 506 6 173 2 94 2 176 6 177 2 348 8 517 2 518 2 10 6 183 2 519 6 14 2 186 2 525 2 615 2 23 2 27 6 26 2 28 4 445 2 448 2 620 2 276 14 202 2 455 40 622 4 364 2 365 2 626 2 463 2 464 4 209 2 291 4 124 2 128 6 631 2 632 2 132 6 211 2 475 2 49 4 51 2 552 2 212 2 477 18 382 6 554 2 556 6 478 2 642 2 310 2 561 20 59 6 647 2 391 2 563 2 224 40 315 2 317 2 225 2 566 2 486 10 568 2 229 2 397 2 398 2 490 2 492 8 405 2 573 2 574 4 151 2 577 2 580 2 657 4 328 2 658 2 237 44 
422 2 584 4 586 8 84 2 464 6 590 6 465 4 291 6 210 4 86 2 428 2 631 2 595 4 632 2 88 2 341 2 250 12 471 2 506 2 475 2 49 2 94 2 477 14 176 4 137 2 515 2 257 4 10 10 478 2 309 2 519 10 13 12 520 2 561 14 59 4 647 2 186 2 224 42 264 2 317 2 225 2 486 8 651 2 615 2 28 6 27 2 529 4 618 4 654 4 620 2 574 2 151 2 452 4 276 14 113 2 115 2 455 30 657 2 658 2 237 32 364 2 332 2 416 2 418 4 78 2 
621 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 13 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.ArrayIndexOutOfBoundsException 0 423 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V ERROR utilMDE.Assert$AssertionException (69,236) 122 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V ERROR java.lang.NullPointerException (199,309) 416 
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 0 423 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 0 423 
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.ArrayIndexOutOfBoundsException 0 423 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 0 423 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 0 423 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.ArrayIndexOutOfBoundsException 0 423 206 22 573 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 462 558 43 6 
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.Error 147 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 441 441 449 338 376 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V | CONSTANT | 11643 | 0 -> -1
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaCharStream:readChar()C
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.LimitedSizeIntSet:size()I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair; | ASSIGN | 2099 | = null
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1057 | = null
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(DD)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:eq(II)Z
daikon.Quant:memberOf(D[F)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.Invariants:Invariants()V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.MathMDE:pow_fast(II)I | CONDITION | 3350 | if (x) -> if (!x)
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_3R_49()Z
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:sum([I)I
daikon.ProglangType:isIntegral()Z
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.Quant:memberOf(F[F)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:slice([III)[I
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:lte(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_and(DD)D | CONSTANT | 8716 | 1 -> -1
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:eq(JJ)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:eltsGT([II)Z
daikon.Quant:memberOf(S[S)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONSTANT | 17524 | 1 -> -1
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:jj_3_1()Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaCharStream:FillBuff()V
jtb.JavaCharStream:BeginToken()C
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Intern:intern([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaCharStream:ReadByte()C
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.ProglangType:dimensions()I
daikon.VarInfoName:hashCode()I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:eq(FF)Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:jj_ntk()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaCharStream:getEndLine()I
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:lexGT([I[I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Ppt:Ppt()V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.WeakHasherMap:size()I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_48()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:eltwiseGT([I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:eltsGTE([II)Z
daikon.PptSlice0:arity()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:memberOf(J[J)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:setDiff([I[I)[I | ASSIGN | 154150 | = null
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaCharStream:getBeginLine()I
daikon.ProglangType:format()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:setEqual([I[I)Z | STATEMENT | 155062 | stmt -> ;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 5096 | = null
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexLTE([I[I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ValueTuple:size()I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z | CONDITION | 5354 | if (x) -> if (!x)
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:isReverse([I[I)Z
daikon.Quant:eltsGtIndex([I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:eltwiseLT([I)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaCharStream:backup(I)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.MathMDE:negate(I)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.WeakHasherMap.EntrySet:size()I | STATEMENT | 15721 | stmt -> ;
jtb.JavaParser:jj_3R_50()Z | STATEMENT | 169054 | stmt -> ;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
utilMDE.Intern:intern([D)[D
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3_16()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:gte(II)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoAux:hashCode()I
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
292 2 33 2 280 2 457 2 69 2 451 2 236 2 21 4 562 2 
138 4 323 2 38 4 26 2 268 2 13 2 318 2 28 2 
229 4 411 2 427 2 588 2 589 4 437 6 103 6 167 2 216 6 69 2 236 2 154 2 270 6 
173 10 199 2 334 29 512 8 304 10 9 2 356 8 121 8 518 2 409 4 359 2 146 2 309 4 189 10 231 13 413 10 86 4 556 2 576 4 469 6 52 10 192 6 195 26 69 6 499 2 106 16 236 6 490 8 386 16 540 16 
72 6 98 4 
160 2 
389 2 281 2 201 2 349 4 5 4 495 2 496 4 248 2 249 2 362 2 165 2 125 2 365 2 126 2 51 2 328 4 217 2 499 2 16 2 89 2 299 2 500 2 472 2 57 2 543 2 132 2 333 2 476 2 435 2 92 2 261 2 477 2 137 2 180 2 514 2 27 2 33 2 483 2 101 2 102 2 487 2 69 4 236 4 197 2 
502 4 173 16 174 2 475 4 222 6 334 51 436 6 512 6 23 8 24 6 304 6 516 2 143 4 121 18 409 2 146 2 555 4 189 16 413 16 231 22 14 4 346 8 52 16 469 4 327 4 192 4 595 6 417 2 539 2 195 44 69 4 106 28 405 4 236 4 386 28 540 28 
248 2 130 2 44 2 
377 2 294 2 64 2 35 2 319 2 407 10 265 22 350 2 352 2 489 2 255 2 89 2 76 2 287 2 
173 2 454 2 334 6 61 2 136 2 304 4 116 2 337 2 186 2 343 2 189 2 413 2 52 2 192 2 524 2 195 4 488 2 106 2 386 2 540 2 
502 4 173 4 334 16 189 4 231 4 413 4 436 6 576 2 52 4 252 2 327 4 571 2 595 6 195 12 106 8 386 8 540 8 
480 2 94 2 276 2 81 2 521 2 
315 2 221 2 581 2 458 2 241 2 295 2 348 2 160 2 404 2 419 2 
563 2 316 4 0 2 74 2 75 2 111 2 46 2 320 2 423 2 163 2 211 4 369 2 218 2 220 2 58 2 474 4 505 2 60 2 93 2 550 2 441 2 410 2 587 2 37 2 381 2 69 10 452 2 236 10 528 2 39 4 562 2 
421 2 69 2 
122 2 388 2 69 2 
118 2 
73 6 567 2 391 2 569 10 158 4 242 14 45 10 49 18 159 14 572 2 397 2 289 2 424 2 123 4 322 8 79 4 162 2 293 14 80 2 82 2 212 2 84 4 428 14 535 2 169 2 575 4 297 8 402 4 53 14 298 14 254 2 129 6 17 50 256 2 171 2 373 2 90 2 506 2 434 8 178 10 302 10 226 14 181 2 182 2 62 4 439 2 545 8 139 50 183 14 515 14 585 2 408 2 142 2 517 8 553 2 554 2 185 6 342 2 307 8 274 6 100 10 520 10 188 6 34 2 484 10 66 2 230 4 345 14 232 2 68 2 594 14 193 4 525 2 194 50 382 2 527 4 152 2 108 2 153 18 
258 1 549 2 112 2 70 2 
215 2 70 2 
97 2 63 4 131 2 12 2 10 2 580 2 260 2 240 2 265 6 233 2 447 2 203 2 244 2 396 2 71 2 77 4 141 2 172 2 
55 2 549 2 
251 2 248 2 384 2 134 2 
251 2 367 2 248 2 384 2 324 2 134 2 
416 2 309 2 
224 2 101 2 
248 2 309 2 117 2 384 2 
140 2 119 2 
380 2 284 2 
577 2 150 2 
394 2 87 2 
284 2 583 2 394 2 
448 2 284 2 394 2 
300 2 284 2 394 2 
284 2 394 2 440 2 
31 2 248 2 273 2 379 2 234 6 312 2 383 6 384 2 
91 2 526 2 
248 2 309 2 313 2 384 2 324 2 70 2 590 2 
433 2 
70 2 590 2 467 2 
493 2 91 2 549 2 
70 2 590 2 
91 2 310 2 
70 2 269 2 
209 2 91 2 549 2 
308 2 577 2 549 2 
394 2 549 2 456 2 
549 2 398 2 119 2 
284 2 406 2 549 2 
91 2 538 2 
336 2 70 2 
577 2 498 2 
501 2 394 2 
351 2 119 2 
284 2 453 2 
473 2 91 2 
284 2 88 2 
494 2 119 2 
144 2 394 2 
577 2 247 2 
288 2 209 2 91 2 549 2 
288 2 209 2 156 2 91 2 549 2 
442 2 91 2 549 2 
425 2 91 2 549 2 
291 2 177 2 277 2 235 2 
151 2 
563 2 316 4 0 2 74 2 75 2 111 2 46 2 423 2 163 2 211 4 536 2 369 2 218 2 220 2 58 2 474 4 505 2 60 2 93 2 550 2 441 2 410 2 587 2 37 2 381 2 69 10 452 2 236 10 528 2 39 4 562 2 
563 2 316 4 0 2 74 2 75 2 111 2 46 2 463 1 423 2 163 2 211 4 536 2 369 2 218 2 220 2 58 2 474 5 505 2 60 2 93 2 550 2 441 2 410 2 587 2 347 1 37 2 381 2 69 10 452 2 236 10 528 2 39 4 562 2 
563 2 316 4 0 2 74 2 75 2 111 2 46 2 463 1 423 2 163 2 211 4 536 2 369 2 218 2 220 2 58 2 474 5 505 2 60 2 93 2 550 2 441 2 410 2 587 2 347 1 37 2 381 2 69 10 452 2 236 10 528 2 39 4 562 2 
563 2 316 4 0 2 74 2 75 2 111 2 46 2 463 2 423 2 163 2 211 4 536 2 369 2 218 2 220 2 58 2 474 6 505 2 60 2 93 2 550 2 441 2 410 2 587 2 347 2 37 2 381 2 69 10 452 2 236 10 528 2 39 4 562 2 
563 2 316 4 0 2 74 2 75 2 111 2 46 2 463 1 423 2 163 2 211 4 536 2 369 2 218 2 220 2 58 2 474 5 505 2 60 2 93 2 550 2 441 2 410 2 587 2 347 1 37 2 381 2 69 10 452 2 236 10 528 2 39 4 562 2 
563 2 315 1 316 4 0 2 74 2 75 2 2 2 4 2 46 2 115 2 570 1 285 2 463 1 573 2 206 2 423 2 7 2 357 2 358 2 290 2 163 2 211 2 404 1 369 2 218 2 220 2 58 2 474 3 223 2 508 2 582 2 60 2 22 2 93 2 267 2 550 2 441 2 96 1 410 2 587 2 190 2 347 1 191 2 415 2 381 2 69 14 236 10 452 2 39 2 562 2 
301 2 48 2 54 2 1 2 275 2 59 2 459 2 
326 2 438 2 432 2 578 2 120 2 59 2 
99 2 81 1 163 2 43 2 202 1 94 1 523 2 114 2 558 2 462 2 6 2 253 1 69 4 586 1 236 4 385 2 355 2 
565 2 173 2 147 2 334 5 189 2 429 2 413 2 52 2 327 2 595 4 195 4 466 2 106 2 386 2 387 2 540 2 
184 2 331 1 238 2 412 2 200 2 279 2 42 2 210 2 85 4 461 2 286 2 69 1 107 2 559 7 236 1 560 2 339 2 8 2 
184 2 238 2 412 2 200 2 42 2 279 2 210 2 85 4 461 2 286 2 107 4 559 6 560 2 339 4 8 4 
184 2 331 1 238 6 412 2 200 2 42 8 279 2 210 2 85 4 461 2 286 2 69 1 107 8 559 10 236 1 560 2 339 8 8 8 
184 2 412 2 200 2 279 2 210 2 85 2 461 2 286 2 107 2 559 2 560 2 339 2 8 2 
155 6 455 4 239 4 157 6 390 6 317 30 3 14 460 6 393 30 463 42 395 30 321 2 245 6 464 6 465 4 246 6 161 12 533 6 399 4 11 2 534 4 164 2 250 2 166 2 168 4 329 8 403 12 474 164 175 4 176 2 330 38 332 2 19 60 335 6 20 1 179 12 263 19 264 2 478 6 266 10 25 24 544 6 95 6 547 2 548 6 551 2 338 2 552 4 271 4 481 4 272 2 32 3 30 2 482 6 187 10 344 2 104 2 347 42 414 6 557 7 486 6 105 4 418 6 420 4 40 2 39 62 564 4 109 10 566 3 41 6 491 4 278 2 282 6 204 2 47 6 205 2 422 3 353 12 497 12 426 8 361 6 211 74 363 2 50 62 364 6 366 4 574 12 214 38 56 4 219 12 431 2 504 16 507 4 509 66 579 12 374 6 133 6 60 14 303 6 511 8 227 4 584 4 441 8 376 2 305 2 519 26 306 6 145 6 587 14 445 18 592 2 67 3 149 8 591 26 593 13 449 2 311 6 450 6 596 2 69 116 236 104 597 6 237 2 314 8 529 2 
155 2 109 2 564 2 41 2 492 2 390 2 392 2 3 2 283 2 113 2 531 2 243 2 532 4 463 1 354 2 497 4 399 2 208 2 78 2 124 2 360 2 400 2 426 6 534 2 211 20 83 2 401 2 574 4 168 2 537 2 127 2 470 2 471 4 329 2 368 2 170 4 18 6 219 4 541 2 431 4 503 2 474 43 175 2 504 38 257 2 259 4 509 6 335 2 262 2 60 2 303 2 225 2 266 2 544 2 479 2 95 2 546 2 375 2 376 2 441 2 228 2 338 2 29 2 272 2 341 2 30 2 340 2 378 2 482 2 443 2 587 2 187 2 444 2 65 2 445 2 446 2 149 2 67 2 36 2 522 2 347 1 414 2 593 2 311 2 449 2 69 46 597 2 196 2 236 44 314 2 561 2 39 20 
155 4 239 4 157 4 390 4 317 16 530 16 3 10 393 30 460 4 463 28 395 8 245 4 464 4 465 4 246 4 533 4 399 2 468 32 78 10 164 2 325 4 168 2 15 16 470 10 541 2 474 104 175 2 542 2 19 24 335 4 179 8 478 4 25 8 544 4 95 4 338 2 552 4 271 4 30 2 482 4 485 2 344 2 347 30 414 4 486 4 105 4 418 4 420 4 39 36 566 4 198 4 41 4 491 4 110 8 568 4 282 4 283 10 47 4 422 4 353 14 207 4 497 10 208 2 426 6 211 44 50 24 364 4 366 4 574 10 430 4 213 8 128 4 370 8 219 10 431 2 371 2 372 2 504 14 507 2 509 24 579 8 510 4 374 4 133 4 135 2 60 6 303 4 227 4 584 4 513 2 441 2 376 2 306 4 587 6 145 4 65 2 445 6 148 8 522 2 593 10 449 2 311 4 69 78 597 6 236 70 237 2 529 2 
155 4 566 2 41 2 492 2 390 2 3 2 393 6 463 12 205 2 422 2 464 4 354 2 497 6 399 2 426 4 211 14 363 2 574 6 168 2 56 2 219 6 541 2 431 2 175 2 474 40 504 14 176 2 507 2 509 8 335 4 179 6 263 10 60 2 303 4 544 4 95 2 548 2 376 2 441 2 338 2 32 2 30 2 587 2 482 2 65 2 445 2 592 2 67 2 347 12 414 4 557 2 593 2 449 2 311 4 596 2 69 28 236 26 597 2 39 14 
296 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 460 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 462 688 273 637 549 612 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 508 95 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V ERROR java.lang.ArrayIndexOutOfBoundsException 370 
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (120,249) 254 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (81,560) (81,560) 147 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (81,560) (81,560) 147 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException 11 (73,434) (4,26) (4,26) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException 11 (73,434) (4,26) (4,26) 
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException 11 (73,434) (4,26) (4,26) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException 11 (73,434) (4,26) (4,26) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException 11 (73,434) (4,26) (4,26) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException 11 (73,434) (4,26) (4,26) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException 11 (73,434) (4,26) (4,26) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException 11 (73,434) (4,26) (4,26) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 11 (73,434) (4,26) (4,26) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 11 (73,434) (4,26) (4,26) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 11 (73,434) (4,26) (4,26) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 11 (73,434) (4,26) (4,26) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException 11 (73,434) (4,26) (4,26) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException 11 (73,434) (4,26) (4,26) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 11 (73,434) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 11 (73,434) (73,434) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 11 (73,434) 
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (81,560) (81,560) 147 209 747 683 326 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR utilMDE.Assert$AssertionException (81,560) (81,560) 147 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR utilMDE.Assert$AssertionException (81,560) (81,560) 147 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR utilMDE.Assert$AssertionException (81,560) (81,560) 147 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR utilMDE.Assert$AssertionException (81,560) (81,560) 147 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR utilMDE.Assert$AssertionException (81,560) (81,560) 147 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 157 80 93 
daikon.test.VarInfoNameTest:testJML()V ERROR utilMDE.Assert$AssertionException (81,560) (81,560) 539 157 80 93 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 157 80 93 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd(II)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.diff.RootNode:RootNode()V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator; | ASSIGN | 2215 | = null
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaCharStream:getEndLine()I
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:lte(II)Z
daikon.test.FormatTestCase:passes()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.ArraysMDE:max([I)I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.ModBitTracker:split(I)I
utilMDE.MathMDE:pow(II)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Ppt:Ppt()V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quant:eltsLT([II)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.ModBitTracker:num_vars()I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 64304 | return null
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107829 | = null
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaCharStream:BeginToken()C | CONSTANT | 4375 | 0 -> 1
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Assert:assertTrue(Z)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:eq(JJ)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 3656 | return null
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:lexLTE([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:setDiff([I[I)[I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.WeakHasherMap:size()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:lt(II)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 127540 | = null
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:memberOf(D[F)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.LimitedSizeIntSet:size()I
daikon.ProglangType:dimensions()I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.ArraysMDE:sum([[D)D | STATEMENT | 9149 | stmt -> ;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoAux:hashCode()I
jtb.JavaCharStream:getBeginLine()I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:lexEqual([I[I)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.ArraysMDE:sum([I)I
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.ArraysMDE:min_max([I)[I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | RETURN | 66339 | return null
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | STATEMENT | 24560 | stmt -> ;
daikon.ProglangType:isFloat()Z
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:memberOf(I[I)Z
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:pairwiseLT([I[I)Z | STATEMENT | 166805 | stmt -> ;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.ProglangType:baseIsFloat()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaCharStream:FillBuff()V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | STATEMENT | 38468 | stmt -> ;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.Quant:eq(DD)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13809 | = null
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:isReverse([I[I)Z
daikon.Quant:gt(II)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:subsetOf([B[I)Z
daikon.ProglangType:baseIsIntegral()Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern([J)[J
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:jj_ntk()I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([D)D
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.MathMDE:mod_positive(II)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:new_ppt()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfo:relate_var()V
daikon.Quant:concat([I[I)[I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.MathMDE:sign(I)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.Quant:eltsGTE([II)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.Invariant:justified()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.Quant:lexGT([I[I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2461 | return null
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([J[J)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([D[D)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaCharStream:backup(I)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.ModBitTracker:num_samples()I
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName:hashCode()I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:setEqual([I[I)Z
daikon.PptSlice1:arity()I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.Invariant:getConfidence()D
daikon.Quant:subsetOf([F[F)Z
daikon.inv.Invariants:Invariants()V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:intersection([I[I)[I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 2590 | = null
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Quant:eltsLTE([II)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([I)[I
daikon.Quant:slice([III)[I | OPERATOR | 160615 | == -> !=
daikon.ModBitTracker:num_sets()I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:gte(II)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:eq(FF)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.ProglangType:isScalar()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:negate(I)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Debug:logOn()Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:sameLength([I[I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
41 2 81 2 652 2 192 2 350 2 28 2 183 4 560 2 438 2 
0 6 208 2 178 2 318 2 525 2 234 2 618 6 99 2 79 2 63 6 518 2 
393 2 400 2 474 2 654 2 460 2 226 2 255 2 577 2 699 4 
377 2 331 8 548 10 595 10 142 2 193 8 598 4 403 2 715 6 338 2 531 12 560 6 500 16 501 6 628 16 81 6 473 2 261 4 156 10 16 2 296 8 706 10 726 4 395 26 371 16 303 10 545 2 544 8 520 4 275 29 
493 4 260 6 
222 2 
249 2 297 2 22 2 290 2 224 2 506 2 197 2 521 2 
686 2 229 6 548 16 331 6 641 4 595 16 191 4 142 2 461 6 553 6 715 4 531 22 560 4 447 4 500 32 412 8 177 4 501 4 628 32 81 4 563 4 155 2 475 2 632 2 156 6 129 4 706 16 677 4 512 2 395 48 303 16 371 32 205 6 544 18 161 6 520 2 330 2 89 6 275 54 
249 2 424 2 119 2 
339 2 188 2 83 2 691 2 564 2 203 2 422 2 453 2 695 10 301 22 182 2 175 2 428 2 120 2 
398 2 375 2 485 2 548 2 595 2 439 2 599 2 715 2 117 2 337 2 531 2 500 2 628 2 156 4 706 2 323 2 395 4 303 2 371 2 544 2 427 2 520 2 275 6 
500 8 628 8 229 6 548 4 595 4 191 4 765 2 706 4 677 4 726 2 395 12 205 6 371 8 303 4 531 4 329 2 275 16 
249 8 433 4 90 2 459 2 3 10 523 2 25 2 524 14 712 2 647 4 94 2 5 2 713 10 651 4 172 4 50 2 530 4 29 4 498 2 559 2 119 2 199 2 200 4 285 2 314 4 239 2 581 4 583 62 479 4 567 2 322 4 341 2 297 4 346 2 243 2 270 4 424 6 372 2 732 2 750 2 
458 2 648 2 167 2 407 2 282 2 149 2 86 2 132 2 222 2 271 2 
687 2 186 2 484 1 688 2 486 2 2 16 378 3 489 2 494 1 600 5 195 2 381 4 497 1 698 2 385 3 605 2 388 2 12 2 289 2 701 2 610 2 291 2 295 2 612 2 509 2 111 2 391 1 392 2 17 3 299 1 394 3 302 2 514 24 519 2 306 2 308 2 711 1 311 2 213 6 526 2 214 4 714 1 216 2 528 3 529 2 217 2 720 24 30 2 411 2 625 2 121 2 31 6 630 2 416 2 315 2 319 2 540 16 542 2 221 2 729 2 136 1 327 1 39 2 637 2 638 3 430 2 138 2 139 32 43 1 640 2 735 2 140 1 436 2 549 2 551 2 645 2 46 2 646 2 145 2 232 4 555 3 147 2 334 16 652 2 741 2 560 34 446 2 743 2 744 3 562 2 449 6 451 2 54 2 452 6 60 2 746 2 343 2 348 2 159 3 160 2 749 2 748 1 65 1 355 2 754 2 755 2 162 2 574 2 163 1 357 2 666 4 576 4 462 2 74 2 465 2 761 3 762 2 168 3 171 2 174 2 763 2 366 2 578 1 259 2 81 32 472 32 85 2 477 2 675 1 766 2 481 2 267 3 266 16 680 4 772 2 273 2 374 2 
344 2 560 2 
665 2 336 2 560 4 
550 2 
593 2 307 2 401 2 250 2 47 2 667 2 253 18 95 2 194 2 650 2 169 2 116 2 740 18 215 2 78 2 150 2 387 2 722 2 503 2 33 2 126 2 294 2 14 2 508 2 58 2 369 2 112 2 423 2 586 2 483 2 18 2 681 2 613 2 373 2 137 2 246 2 457 2 64 18 
146 1 443 2 575 2 775 2 
443 2 165 2 
249 2 333 2 254 2 443 2 685 2 517 2 598 2 
333 2 443 2 671 2 
333 2 443 2 620 2 
467 2 535 2 775 2 
333 2 443 2 
535 2 379 2 
443 2 663 2 
535 2 661 2 775 2 
370 2 
554 2 468 2 775 2 
49 2 19 2 775 2 
96 2 133 2 775 2 
535 2 77 2 
443 2 108 2 
734 2 507 2 
468 2 649 2 
736 2 19 2 
133 2 207 2 
535 2 692 2 
386 2 133 2 
418 2 19 2 
1 2 468 2 
220 2 734 2 
535 2 269 2 661 2 775 2 
535 2 269 2 661 2 775 2 181 2 
535 2 280 2 775 2 
535 2 13 2 775 2 
580 2 689 2 332 2 225 2 
237 2 42 2 639 2 471 2 286 2 153 2 643 2 415 4 737 2 92 2 759 2 634 4 679 2 364 2 301 6 349 2 236 2 709 2 
684 2 775 2 
249 2 254 2 48 2 552 2 
249 2 254 2 616 2 48 2 517 2 552 2 
249 2 333 2 254 2 443 2 109 2 598 2 
9 2 697 2 
41 2 249 2 254 2 716 2 
19 2 659 2 
133 2 570 2 
734 2 37 2 
468 2 703 2 
133 2 468 2 361 2 
104 2 133 2 468 2 
133 2 468 2 617 2 
284 2 133 2 468 2 
249 2 251 2 254 2 556 6 505 6 566 2 725 2 751 2 
535 2 527 2 
481 2 
484 2 186 2 430 2 640 2 190 2 735 2 596 2 551 2 489 2 232 4 147 2 652 2 698 2 560 16 238 4 743 6 605 2 12 2 291 2 509 2 347 2 754 2 162 2 666 4 576 4 75 2 213 4 623 2 529 2 672 2 366 2 259 2 31 6 81 16 472 6 630 2 416 2 477 2 766 2 542 2 266 6 680 4 636 2 228 2 
484 2 186 2 430 2 640 2 190 2 735 2 596 2 551 2 489 2 232 4 147 2 652 2 698 2 560 16 238 4 743 6 605 2 12 2 291 2 509 2 343 2 347 2 754 2 162 2 666 4 576 4 75 2 213 6 623 2 529 2 672 2 366 2 30 2 259 2 31 6 81 16 472 6 630 2 416 2 477 2 766 2 542 2 266 6 680 4 636 2 228 2 
265 2 
406 2 491 2 
313 2 11 2 414 2 123 2 502 2 230 2 435 2 53 2 758 2 128 2 4 2 73 2 26 2 704 2 6 2 15 2 541 2 466 2 571 2 409 2 
230 2 435 2 758 2 4 2 73 2 26 2 6 2 466 2 694 4 409 2 532 2 313 2 11 2 414 2 502 2 123 2 53 2 128 2 704 2 15 2 541 2 571 2 135 2 
313 2 11 2 414 2 128 2 4 2 73 2 704 2 26 2 6 2 
313 2 11 2 414 2 123 2 502 2 230 2 435 2 53 2 758 2 128 2 4 2 73 2 26 2 704 2 6 2 15 2 541 2 466 2 571 2 409 2 
313 2 11 2 414 2 123 2 502 2 230 2 435 2 53 2 758 2 128 2 4 2 73 2 26 2 704 2 6 2 15 2 541 2 466 2 571 2 409 2 
313 2 11 2 414 2 123 2 502 2 230 2 435 2 53 2 758 2 128 2 4 2 73 2 26 2 704 2 6 2 15 2 541 2 466 2 571 2 409 2 
313 2 11 2 414 2 123 2 502 2 230 2 435 2 53 2 758 2 128 2 4 2 73 2 26 2 704 2 6 2 15 2 541 2 466 2 571 2 409 2 
313 2 11 2 414 2 123 2 502 2 230 2 435 2 53 2 758 2 128 2 4 2 73 2 26 2 704 2 6 2 15 2 541 2 466 2 571 2 409 2 
313 2 11 2 414 2 123 2 230 2 502 2 594 2 53 2 758 2 128 2 4 2 73 2 26 2 704 2 6 2 541 2 466 2 571 2 409 2 
313 2 11 2 414 2 123 2 230 2 502 2 594 2 53 2 758 2 128 2 4 2 73 2 26 2 704 2 6 2 541 2 466 2 571 2 409 2 
313 2 11 2 414 2 123 2 230 2 502 2 594 2 53 2 758 2 128 2 4 2 73 2 26 2 704 2 6 2 541 2 466 2 571 2 409 2 
313 2 11 2 414 2 123 2 230 2 502 2 594 2 53 2 758 2 128 2 4 2 73 2 26 2 704 2 6 2 541 2 466 2 571 2 409 2 
313 2 11 2 414 2 123 2 230 2 502 2 53 2 758 2 128 2 4 2 73 2 26 2 704 2 6 2 541 2 466 2 571 2 409 2 
186 2 489 2 4 2 6 2 698 2 605 2 11 2 502 2 12 2 610 2 291 2 704 2 509 2 15 2 515 2 522 2 26 2 213 6 529 2 409 2 30 2 31 6 122 2 313 2 414 2 123 2 630 2 416 2 128 2 542 2 421 3 541 2 731 2 228 2 430 2 138 2 139 3 640 2 230 2 735 2 551 2 232 4 147 2 652 2 235 2 560 24 743 6 238 4 449 3 53 2 452 3 746 2 343 2 347 2 571 2 754 2 162 2 758 2 666 4 576 4 73 2 463 2 466 2 672 2 366 2 259 2 81 24 472 8 477 2 368 2 766 4 481 2 266 6 769 2 680 4 
441 2 758 2 668 2 
441 2 758 2 668 2 
186 2 430 2 139 2 640 2 735 2 551 2 489 2 6 2 232 4 652 2 698 2 560 14 743 2 605 2 11 2 12 2 291 2 509 2 343 2 345 2 347 2 572 2 354 2 754 2 162 2 164 2 758 2 666 4 576 4 73 2 213 6 619 2 529 2 672 2 257 2 366 2 30 2 259 2 31 6 81 14 414 2 472 2 630 2 416 2 128 2 477 2 180 2 766 2 542 2 266 2 680 4 228 2 
614 2 430 2 81 2 141 2 597 2 491 2 492 2 766 2 769 2 678 2 587 2 8 2 365 2 300 2 397 2 560 4 733 2 
186 2 430 2 139 4 640 2 434 2 735 2 551 2 489 2 6 2 232 4 652 2 698 2 560 14 743 2 605 2 11 2 12 2 291 2 509 2 343 2 345 2 347 2 572 2 354 2 754 2 162 2 164 2 758 2 666 4 576 4 73 2 213 6 619 2 529 2 672 2 257 4 366 2 30 2 259 2 31 6 81 14 414 2 472 2 629 2 630 2 416 2 128 2 477 2 180 2 766 2 542 2 266 2 680 4 228 2 
186 2 430 2 139 2 640 2 735 2 551 2 489 2 6 2 232 4 652 2 698 2 560 14 743 2 605 2 11 2 12 2 291 2 509 2 343 2 345 2 347 2 572 2 354 2 754 2 162 2 164 2 758 2 666 4 576 4 73 2 213 6 619 2 529 2 672 2 257 2 366 2 30 2 259 2 31 6 81 14 414 2 472 2 630 2 416 2 128 2 477 2 180 2 766 2 542 2 266 2 680 4 228 2 
686 4 277 1 484 2 186 2 376 4 595 2 190 2 488 2 596 2 489 2 7 4 601 10 602 2 281 6 381 22 696 2 196 2 698 2 383 2 500 4 605 2 12 2 107 2 608 2 702 2 609 2 292 2 202 6 291 2 293 4 390 2 110 2 510 2 706 2 298 2 395 6 303 2 205 6 304 6 20 2 21 4 209 2 210 2 23 2 211 2 310 2 212 2 405 10 213 4 623 2 622 2 529 2 530 2 29 2 531 4 624 6 30 2 31 6 628 4 124 6 125 2 630 2 127 8 317 2 316 2 419 2 322 2 35 2 421 2 542 2 543 18 134 6 324 2 325 4 36 2 544 4 326 2 546 4 731 2 429 6 636 2 228 2 637 4 430 2 431 4 139 6 231 6 432 2 548 2 44 2 735 2 436 10 551 2 232 2 147 2 652 2 335 4 445 2 558 6 235 2 560 28 52 2 655 2 561 24 743 12 238 10 448 2 449 6 55 18 452 6 342 2 343 2 660 2 569 2 662 2 245 2 747 2 351 2 754 2 68 2 67 2 756 2 69 2 666 2 576 4 669 4 75 2 362 2 463 2 172 2 256 2 672 2 176 2 366 2 259 2 258 2 81 22 472 18 581 2 582 2 262 2 478 4 674 2 477 2 368 2 766 2 677 4 266 12 590 2 680 4 371 4 683 2 272 10 592 2 275 8 
139 3 690 2 358 2 380 2 72 4 363 2 147 2 601 6 499 2 560 2 743 2 238 2 627 2 81 2 472 2 449 3 179 2 340 2 452 3 158 2 536 2 480 3 219 2 266 2 
238 2 743 2 81 2 139 2 627 2 472 2 449 2 690 2 179 2 340 2 452 2 380 2 358 2 158 2 72 4 536 2 480 2 219 2 363 2 147 2 601 6 266 2 560 2 499 2 
238 2 743 2 81 2 139 2 627 2 472 2 449 2 690 2 179 2 340 2 452 2 380 2 358 2 158 2 72 4 536 2 480 2 219 2 363 2 147 2 601 6 266 2 560 2 499 2 
139 1 81 2 472 2 288 1 452 1 158 2 75 2 540 2 147 2 496 2 334 2 589 1 621 2 100 2 102 2 560 2 533 1 
540 2 147 2 81 2 496 2 334 2 472 2 621 2 158 2 100 2 75 2 560 2 102 2 
540 2 147 2 81 2 496 2 334 2 472 2 621 2 158 2 100 2 75 2 560 2 102 2 
540 2 147 2 81 2 496 2 334 2 472 2 621 2 158 2 100 2 75 2 560 2 102 2 
540 2 147 2 81 2 496 2 334 2 472 2 621 2 158 2 100 2 75 2 560 2 102 2 
510 2 579 2 201 2 425 2 91 2 359 2 
579 2 644 2 118 2 283 2 115 2 304 2 242 2 
278 2 523 1 24 2 25 1 71 2 444 2 382 2 717 2 673 1 560 10 103 2 81 8 154 2 656 2 218 2 264 2 59 2 542 2 511 2 635 2 591 2 773 2 274 2 664 2 248 1 38 1 
187 2 548 6 331 4 595 6 210 2 360 2 7 2 531 1 560 6 500 6 412 2 81 6 628 6 501 2 105 2 106 2 563 2 389 2 706 6 677 2 298 2 728 2 395 12 205 4 371 6 303 6 161 4 275 17 
81 1 399 2 70 2 45 7 252 1 144 2 97 2 130 2 603 4 470 2 707 2 88 2 774 2 718 2 719 2 247 2 184 2 560 1 
399 2 70 2 45 6 144 2 97 4 130 2 603 4 707 2 470 2 88 4 718 2 774 4 719 2 247 2 184 2 
81 1 399 2 70 2 45 10 252 1 144 2 97 8 130 2 603 4 707 8 470 2 88 8 718 2 774 8 719 6 247 2 184 2 560 1 
399 2 70 2 45 2 144 2 97 2 130 2 603 2 470 2 88 2 718 2 774 2 247 2 184 2 
185 2 189 2 93 2 495 4 698 4 604 2 10 2 101 2 606 3 504 2 611 4 204 2 114 1 206 2 516 4 615 2 27 2 213 32 312 2 30 4 32 1 413 2 534 2 626 2 723 2 630 6 34 2 417 4 321 2 724 2 420 2 633 2 223 2 730 2 227 2 328 2 40 1 642 2 143 5 437 2 232 16 739 4 148 4 742 4 51 2 560 38 151 2 152 2 240 2 157 2 657 2 658 2 745 2 568 2 343 4 244 2 352 2 456 4 573 2 353 1 752 2 753 2 356 1 757 2 666 18 670 2 170 2 173 4 76 2 80 2 81 34 82 2 764 2 84 2 476 2 477 6 585 2 768 4 482 2 770 14 771 2 276 2 
487 4 642 2 490 2 93 2 232 10 693 2 495 2 148 2 698 2 51 2 560 24 101 2 198 2 241 2 157 2 56 2 705 2 454 2 61 2 708 2 752 2 710 2 666 10 760 2 75 2 404 2 464 2 213 20 670 2 408 2 173 2 469 2 410 4 80 2 721 2 32 2 81 24 626 2 630 2 263 2 417 16 477 2 537 2 676 4 538 2 539 2 770 2 87 2 771 2 426 2 227 2 328 2 
185 2 189 2 642 2 143 6 437 2 93 2 232 18 739 2 279 2 440 2 495 4 98 2 148 4 557 8 742 2 51 2 698 2 560 44 198 2 151 2 607 6 504 2 152 2 700 6 450 2 157 2 658 2 57 2 565 2 611 6 568 2 343 6 204 2 113 2 114 2 455 2 396 2 516 4 206 2 456 6 573 4 752 2 66 2 757 2 402 8 666 20 166 8 27 2 213 40 312 2 670 2 173 4 76 2 80 2 30 6 413 2 367 2 534 2 81 40 764 2 723 2 630 4 84 2 631 2 476 2 34 2 417 14 477 4 320 2 724 2 420 2 585 4 633 2 482 2 768 6 131 2 268 2 770 10 588 2 223 2 682 6 227 2 276 2 
547 2 642 2 143 2 437 2 93 2 233 2 232 14 738 2 739 10 495 6 442 2 148 6 653 2 604 6 51 2 698 2 10 10 384 2 560 28 101 4 198 2 606 2 287 2 657 2 157 2 611 2 745 4 343 10 513 2 114 6 62 4 516 2 352 4 353 2 752 2 305 2 615 2 356 2 666 14 213 38 312 2 670 2 173 6 80 2 30 10 32 2 81 26 626 4 82 2 630 2 764 2 84 2 584 2 417 14 477 2 321 4 585 2 767 4 727 2 770 8 227 2 328 4 
309 2 

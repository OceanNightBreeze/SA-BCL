#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.ArrayIndexOutOfBoundsException 385 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException (120,134,323) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.ArrayIndexOutOfBoundsException 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 10 541 289 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V ERROR java.lang.ArrayIndexOutOfBoundsException (120,134,323) (477,482) 429 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 228 228 102 102 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 275 275 308 308 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.ArrayIndexOutOfBoundsException 173 (82,560) (113,494) (113,494) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.ArrayIndexOutOfBoundsException 173 (82,560) (113,494) (113,494) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.ArrayIndexOutOfBoundsException 173 (82,560) (113,494) (113,494) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.ArrayIndexOutOfBoundsException 173 (82,560) (113,494) (113,494) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.ArrayIndexOutOfBoundsException 173 (82,560) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 173 (82,560) (82,560) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 173 (82,560) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 210 129 25 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 156 254 549 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 156 254 549 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 156 254 549 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 156 254 549 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.Invariant:justified()Z
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexLT([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
daikon.Quant:subsetOf([B[I)Z
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:dimensions()I
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.Invariant:getConfidence()D
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:isReverse([I[I)Z
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:ReadByte()C
utilMDE.Intern:intern([I)[I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Ppt:Ppt()V
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | CONSTANT | 51688 | 64 -> 1
daikon.Quant:lexLTE([I[I)Z
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:union([I[I)[I | RETURN | 152296 | return null
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.MathMDE:gcd(JJ)J
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:eq(DD)Z
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:memberOf(I[I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.Quant:setEqual([I[I)Z
daikon.Quant:lte(II)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:gcd(II)I | CONDITION | 4310 | if (x) -> if (!x)
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.ModBitTracker:num_sets()I
daikon.Quant:ne(II)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.ProglangType:isIntegral()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1007 | = null
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:relate_var()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.ValueSet:ValueSet(I)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.ModBitTracker:num_vars()I
daikon.Quant:eltsLT([II)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 53476 | = null
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.ModBitTracker:num_samples()I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:size()I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:eltsLTE([II)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:eltsNotEqual([II)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.ProglangType:isScalar()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:eq(JJ)Z
daikon.PptSlice2:arity()I
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:indexFor(II)I | CONSTANT | 11181 | 1 -> 0
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.MathMDE:pow_fast(II)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.RootNode:RootNode()V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:new_ppt()V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.PptSlice0:arity()I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String; | OPERATOR | 49349 | > -> ==
daikon.PptSlice1:arity()I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([J[J)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant:logOn()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String; | RETURN | 10782 | return null
daikon.Quant:memberOf(F[D)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:subsetOf([F[D)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:slice([III)[I | OPERATOR | 160615 | == -> !=
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 99177 | return null
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.ProglangType:isArray()Z
jtb.JavaCharStream:readChar()C
daikon.ProglangType:baseIsScalar()Z
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:eltwiseLTE([I)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.Node:Node()V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:gt(II)Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.ValueTuple:size()I
daikon.Debug:logOn()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.ArraysMDE:max([I)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName:hashCode()I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | CONSTANT | 54150 | 0 -> -1
daikon.PptName:isCombinedExitPoint()Z
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsGT([II)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Intern:intern([D)[D
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.ValueTuple:isMissing(I)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltsEqual([II)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:concat([I[I)[I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:min([I)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:sameLength([I[I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.LimitedSizeIntSet:size()I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z | CONDITION | 81695 | if (x) -> if (!x)
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaCharStream:getEndLine()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:gte(II)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:jj_ntk()I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I | ASSIGN | 67827 | = null
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internSubsequence([III)[I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:eq(II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
162 2 109 2 489 4 323 2 380 2 70 2 467 2 393 2 12 2 
471 2 32 2 123 2 545 2 94 6 274 2 8 6 433 2 11 2 507 2 207 6 
547 2 276 2 64 2 351 2 385 2 542 2 63 2 
314 10 315 16 487 4 178 8 526 16 255 4 104 2 393 6 435 4 44 16 46 6 467 6 466 4 85 10 537 10 157 2 470 12 51 8 266 2 442 26 270 10 373 2 553 2 97 6 517 2 169 10 518 8 204 8 347 2 383 29 
106 6 495 4 
62 2 
314 4 315 2 427 2 526 2 148 2 255 2 398 2 44 2 257 2 46 2 221 2 537 2 85 2 470 2 510 2 442 4 270 2 195 2 231 2 23 2 169 2 204 2 383 6 
470 5 315 8 539 6 487 2 472 6 265 2 303 4 442 12 270 4 526 8 306 4 551 2 44 8 169 4 537 4 383 14 85 4 
88 2 121 2 142 2 159 2 200 2 283 2 
453 2 454 2 250 2 39 2 73 2 533 2 508 2 515 2 132 2 62 2 
229 2 298 2 209 2 413 2 414 2 477 2 478 2 527 4 163 2 529 2 110 2 323 2 342 2 327 2 171 2 505 2 281 2 484 2 347 2 117 2 
314 6 315 32 425 6 178 6 428 4 146 4 526 32 252 6 388 4 37 2 255 2 393 4 320 6 44 32 46 4 467 4 83 2 537 16 85 16 364 4 470 22 90 6 15 2 539 6 472 6 266 2 303 4 442 48 270 16 376 4 306 4 96 2 97 4 169 16 555 2 26 2 205 8 204 18 383 54 
531 2 354 2 477 2 
31 2 302 2 247 2 431 22 6 2 434 2 43 2 463 10 450 2 482 2 80 2 61 2 226 2 562 2 
141 2 0 11 424 2 287 6 7 2 294 1 295 2 155 4 300 2 445 1 446 2 19 2 305 2 447 5 164 6 165 2 167 2 22 1 310 2 312 1 313 2 176 1 180 2 33 2 34 1 455 2 318 2 456 2 183 2 319 1 185 2 461 2 467 32 48 2 187 1 190 2 194 2 54 6 480 2 56 2 483 2 344 3 203 5 346 2 492 1 65 4 217 4 497 2 357 2 219 5 223 1 360 2 509 6 366 2 513 2 368 2 232 2 380 2 236 1 382 1 242 2 100 2 101 2 384 4 523 6 245 2 251 2 391 2 393 30 394 2 396 1 108 1 259 2 403 1 404 1 536 2 538 2 264 3 408 2 271 1 543 1 273 2 416 4 417 2 130 1 135 4 420 1 561 2 
326 2 
4 2 467 2 
260 2 336 2 467 4 
3 2 524 2 211 2 214 2 286 6 253 2 289 2 10 2 45 6 504 2 75 2 534 2 154 2 437 2 332 2 439 2 541 2 17 2 367 6 267 2 192 2 369 6 335 2 234 4 57 2 59 2 419 2 345 2 
486 2 501 2 301 1 557 2 
557 2 230 2 
435 2 352 2 429 2 557 2 477 2 125 2 297 2 
557 2 136 2 125 2 
269 2 557 2 125 2 
150 2 41 2 486 2 
557 2 125 2 
150 2 457 2 
557 2 248 2 
150 2 486 2 5 2 
521 2 486 2 172 2 
486 2 386 2 196 2 
486 2 503 2 137 2 
486 2 444 2 240 2 
150 2 430 2 
53 2 557 2 
521 2 235 2 
377 2 386 2 
55 2 137 2 
145 2 444 2 
150 2 66 2 
444 2 405 2 
29 2 137 2 
410 2 386 2 
521 2 375 2 
150 2 486 2 293 2 5 2 
150 2 486 2 293 2 387 2 5 2 
150 2 486 2 112 2 
150 2 486 2 291 2 
498 2 481 2 76 2 311 2 
429 2 361 2 477 2 469 2 
84 2 
140 2 435 2 429 2 557 2 477 2 125 2 
144 2 268 2 
323 2 429 2 355 2 477 2 
423 2 137 2 
444 2 356 2 
521 2 175 2 
244 2 386 2 
16 2 386 2 444 2 
386 2 58 2 444 2 
386 2 444 2 216 2 
111 2 386 2 444 2 
429 2 389 6 151 2 325 6 261 2 158 2 91 2 477 2 
150 2 432 2 
14 2 350 2 353 2 493 2 35 2 431 2 338 4 74 2 199 2 258 2 24 2 116 2 87 2 
486 2 519 2 
190 2 
141 2 0 4 2 4 287 4 7 2 288 2 295 2 153 2 296 2 155 6 300 2 304 2 446 2 164 2 165 2 167 2 310 2 451 2 313 2 27 2 180 2 318 2 184 2 185 2 324 2 186 2 467 22 188 4 194 2 475 2 54 6 340 2 480 2 198 2 56 2 60 2 346 2 348 2 65 4 496 2 215 2 217 4 497 2 71 2 220 2 81 4 363 2 509 6 228 2 371 2 233 2 378 2 380 2 242 2 101 2 102 2 523 2 245 2 246 2 251 6 391 2 393 22 105 2 395 2 396 2 402 2 536 2 538 2 408 2 543 2 415 2 416 4 417 2 135 4 422 2 
141 2 0 4 2 4 287 5 7 2 288 2 295 2 153 2 296 2 155 6 300 2 304 2 446 2 164 2 165 2 167 2 308 2 310 2 451 2 313 2 27 2 180 2 318 2 184 2 185 2 324 2 186 2 467 22 188 4 194 2 475 2 54 6 340 2 480 2 198 2 56 2 60 2 346 2 348 2 65 4 496 1 215 2 217 4 497 2 71 2 220 2 81 4 363 2 509 6 512 2 371 2 233 2 378 2 380 2 100 1 242 2 101 2 523 2 245 2 246 2 251 6 391 2 394 1 393 22 105 2 395 2 396 2 402 2 536 2 538 2 408 2 543 2 415 2 275 2 416 4 417 2 135 4 
436 2 
479 2 473 2 
426 2 285 2 494 2 69 2 545 2 94 2 274 2 341 2 379 4 400 2 516 2 292 4 77 2 113 2 47 2 239 2 560 2 207 2 
138 4 485 2 426 2 143 2 285 2 65 2 212 2 494 2 69 2 497 2 8 6 292 4 222 2 224 2 359 2 77 2 507 2 514 6 94 6 95 2 21 2 379 4 516 2 239 4 173 2 313 2 101 2 318 2 390 4 393 6 528 2 256 2 458 2 460 2 400 2 532 2 328 2 47 2 113 2 330 4 467 12 536 2 406 2 540 2 123 2 545 4 54 4 272 4 548 4 274 4 126 2 128 2 341 2 480 2 418 2 135 2 560 2 282 2 346 2 207 4 
138 4 485 2 426 2 143 2 285 2 65 2 212 2 494 2 69 2 497 2 8 6 292 4 222 2 224 2 359 2 77 2 507 2 514 6 94 4 95 2 21 2 379 4 516 2 239 4 173 2 313 2 101 2 32 2 318 2 390 4 393 6 528 2 256 2 458 2 460 2 400 2 532 2 328 2 47 2 113 2 330 4 467 12 536 2 406 2 540 2 545 4 54 4 272 4 548 4 274 4 126 2 128 2 341 2 480 2 418 2 135 2 560 2 282 2 346 2 207 6 
138 8 485 2 426 2 143 2 285 2 65 2 212 2 494 2 69 2 497 2 8 6 292 4 222 2 224 2 359 2 77 2 507 2 514 6 94 6 95 2 21 2 379 4 516 2 239 4 173 2 313 2 101 2 318 2 390 4 393 6 528 2 256 2 458 2 460 2 400 2 532 2 328 2 47 2 113 2 330 4 467 12 536 2 406 2 471 2 540 2 545 4 54 4 272 4 548 4 274 4 126 2 128 2 341 2 480 2 418 2 135 2 560 2 282 2 346 2 207 6 
138 8 485 2 426 2 143 2 285 2 65 2 212 2 494 2 69 2 497 2 8 8 292 4 222 2 224 2 359 2 77 2 507 2 514 10 94 6 95 2 21 2 379 4 516 2 239 4 173 2 313 2 101 2 32 2 318 2 390 4 393 6 528 2 256 2 458 2 460 2 400 2 532 2 328 2 47 2 113 2 330 4 467 12 536 2 406 2 471 2 540 2 545 4 54 4 272 4 548 8 274 4 126 2 128 2 341 2 480 2 418 2 135 2 560 2 282 2 346 2 207 8 
138 8 485 2 426 2 143 2 285 2 65 2 212 2 494 2 69 2 497 2 8 6 292 4 222 2 224 2 359 2 77 2 507 2 514 10 94 6 95 2 21 2 379 4 516 2 239 4 173 2 313 2 101 2 318 2 390 4 393 6 528 2 256 2 458 2 460 2 400 2 532 2 328 2 47 2 113 2 330 4 467 12 536 2 406 2 471 2 540 2 545 4 54 4 272 4 548 8 274 4 126 2 128 2 341 2 480 2 418 2 135 2 560 2 282 2 346 2 207 6 
138 2 143 2 426 2 180 2 32 2 494 2 390 2 8 4 458 2 292 2 222 2 328 2 359 2 224 2 113 2 47 2 467 4 330 2 507 2 406 2 540 2 94 2 545 2 95 2 274 2 126 2 341 2 417 2 379 2 516 2 310 2 421 2 173 2 282 2 560 2 207 4 
138 6 143 2 426 2 180 2 494 2 390 2 8 4 458 2 292 2 222 2 328 2 359 2 224 2 113 2 47 2 467 4 330 2 507 2 406 2 540 2 471 2 94 4 545 2 95 2 274 2 126 2 341 2 417 2 379 2 516 2 310 2 421 2 173 2 282 2 560 2 207 4 
138 6 143 2 426 2 180 2 494 2 390 2 8 4 458 2 292 2 222 2 328 2 359 2 224 2 113 2 47 2 467 4 330 2 507 2 406 2 540 2 471 2 514 4 94 4 545 2 95 2 548 4 274 2 126 2 341 2 417 2 379 2 516 2 310 2 421 2 173 2 282 2 560 2 207 4 
138 6 143 2 426 2 180 2 494 2 390 2 8 4 458 2 292 2 222 2 328 2 359 2 224 2 113 2 47 2 467 4 330 2 507 2 406 2 540 2 471 2 514 4 94 4 545 2 95 2 548 4 274 2 126 2 341 2 417 2 379 2 516 2 310 2 421 2 173 2 282 2 560 2 207 4 
138 6 143 2 426 2 494 2 390 2 8 4 458 2 292 2 222 2 328 2 359 2 224 2 113 2 47 2 467 4 330 2 507 2 406 2 540 2 471 2 514 4 545 4 94 6 272 2 95 2 548 4 274 4 126 2 341 2 379 2 516 2 173 2 282 2 560 2 207 6 
138 6 141 2 0 3 426 2 143 2 2 4 287 6 7 2 8 4 292 2 295 2 155 6 300 2 446 2 19 2 164 3 165 2 167 2 173 2 313 2 317 2 318 2 38 2 458 2 185 2 324 2 461 2 328 2 47 2 330 2 467 28 468 3 331 2 190 2 471 2 194 2 54 6 341 2 480 2 56 2 343 2 202 2 346 2 207 6 65 4 494 2 497 2 217 4 222 2 224 2 359 2 507 2 509 8 514 2 94 6 370 2 95 2 379 2 380 2 516 2 242 2 100 2 101 2 523 3 245 2 246 2 249 2 251 6 390 2 391 2 393 24 394 2 105 2 113 2 536 2 406 2 538 2 540 2 408 4 545 4 272 2 274 4 416 4 126 2 128 2 135 4 560 2 282 2 561 2 
138 8 485 2 426 2 143 2 285 2 65 2 212 2 494 2 69 2 497 2 8 6 292 4 222 2 224 2 359 2 77 2 507 2 514 10 94 6 95 2 21 2 379 4 516 2 239 4 173 2 313 2 101 2 318 2 390 4 393 6 528 2 256 2 458 2 460 2 400 2 532 2 328 2 47 2 113 2 330 4 467 12 536 2 406 2 471 2 540 2 545 4 54 4 272 4 548 8 274 4 126 2 128 2 341 2 480 2 418 2 135 2 560 2 282 2 346 2 207 6 
138 8 485 2 426 2 143 2 285 2 65 2 212 2 494 2 69 2 497 2 8 8 292 4 222 2 224 2 359 2 77 2 507 2 514 10 93 4 94 8 95 2 21 2 379 4 516 2 239 4 173 2 313 2 101 2 177 2 316 2 318 2 390 4 393 6 528 2 256 2 458 2 460 2 400 2 532 2 328 2 113 2 47 2 330 4 467 12 536 2 406 2 471 2 123 2 545 4 54 4 272 4 548 8 274 4 126 2 128 2 341 2 480 2 135 2 560 2 282 2 346 2 207 6 
222 2 67 2 224 2 
222 2 67 2 224 2 
138 6 141 2 0 2 287 6 7 2 8 4 292 2 295 2 155 2 300 2 446 2 165 2 167 2 310 2 170 2 173 2 313 2 27 2 180 2 318 2 458 2 185 2 324 2 47 2 467 18 330 2 471 2 194 2 54 6 480 2 56 2 346 2 207 4 65 4 217 4 497 2 72 2 222 2 224 2 507 2 509 2 514 2 92 2 94 4 380 2 379 2 516 2 99 2 242 2 100 2 101 2 103 2 246 2 251 2 391 2 390 2 393 14 394 2 105 2 536 2 538 2 408 2 545 2 548 2 274 2 416 4 417 2 558 2 135 4 559 2 560 2 
119 2 408 2 285 2 473 2 213 2 36 2 372 2 546 2 218 2 393 2 343 2 401 2 462 2 465 2 467 4 313 2 13 2 
138 6 141 2 0 4 287 6 7 2 8 4 292 2 295 2 155 2 300 2 440 2 446 2 165 2 167 2 310 2 170 2 173 2 313 2 27 2 180 2 318 2 458 2 185 2 324 2 47 2 467 18 330 2 471 2 194 2 54 6 480 2 56 2 346 2 207 4 65 4 217 4 497 2 72 2 222 2 224 2 82 2 507 2 509 2 514 2 92 2 94 4 380 2 379 2 516 2 99 2 242 2 100 2 101 2 103 2 246 2 251 2 391 2 390 2 393 14 394 2 105 2 536 2 538 2 408 2 545 2 548 2 274 2 416 4 417 2 558 4 135 4 559 2 560 2 
138 6 141 2 0 2 287 6 7 2 8 4 292 2 295 2 155 2 300 2 446 2 165 2 167 2 310 2 170 2 173 2 313 2 27 2 180 2 318 2 458 2 185 2 324 2 47 2 467 18 330 2 471 2 194 2 54 6 480 2 56 2 346 2 207 4 65 4 217 4 497 2 72 2 222 2 224 2 507 2 509 2 514 2 92 2 94 4 380 2 379 2 516 2 99 2 242 2 100 2 101 2 103 2 246 2 251 2 391 2 390 2 393 14 394 2 105 2 536 2 538 2 408 2 545 2 548 2 274 2 416 4 417 2 558 2 135 4 559 2 560 2 
349 2 139 2 0 2 141 2 284 2 2 4 210 2 491 2 65 4 217 4 497 2 287 6 7 2 9 2 295 2 155 6 509 8 86 2 365 2 511 2 300 2 443 2 161 2 446 2 164 2 165 2 380 2 167 2 25 2 313 2 242 2 100 2 101 2 523 2 245 2 246 2 251 6 318 2 391 2 393 18 394 2 324 2 185 2 467 24 49 2 536 2 538 2 408 2 333 2 124 2 334 2 474 2 194 2 54 6 337 2 416 4 129 2 480 2 56 2 554 2 279 2 135 4 346 2 
0 3 523 3 2 2 245 2 215 6 251 2 393 2 107 2 290 2 322 2 467 2 155 2 535 2 509 2 227 1 89 2 52 2 164 3 278 4 237 2 201 2 309 3 98 2 133 2 280 2 
0 2 523 2 2 2 245 2 215 6 251 2 393 2 107 2 290 2 322 2 467 2 155 2 535 2 509 2 89 2 52 2 164 2 278 4 237 2 201 2 309 2 98 2 133 2 280 2 
0 2 523 2 2 2 245 2 215 6 251 2 393 2 107 2 290 2 322 2 467 2 155 2 535 2 509 2 89 2 52 2 164 2 278 4 237 2 201 2 309 2 98 2 133 2 280 2 
0 3 152 4 78 3 79 4 509 2 85 2 438 2 299 2 441 2 366 2 442 4 368 2 160 2 20 2 168 2 97 2 448 4 381 6 237 2 169 2 520 3 383 5 315 2 523 3 28 4 178 4 245 2 526 2 393 4 459 3 321 2 44 2 467 10 50 2 537 2 189 2 263 4 118 2 270 2 552 2 
0 2 315 2 28 4 523 2 178 4 245 2 526 2 393 4 459 2 321 2 44 2 152 4 78 2 79 4 467 10 50 2 509 2 189 2 537 2 85 2 263 4 438 2 299 2 470 2 118 2 441 2 366 2 266 2 442 4 270 2 368 2 160 2 20 2 552 2 168 2 448 4 97 2 237 2 381 6 169 2 204 2 383 4 520 2 
0 2 315 2 28 4 523 2 178 4 245 2 526 2 393 4 459 2 321 2 44 2 152 4 78 2 79 4 467 10 50 2 509 2 189 2 537 2 85 2 263 4 438 2 299 2 470 2 118 2 441 2 366 2 266 2 442 4 270 2 368 2 160 2 20 2 552 2 168 2 448 4 97 2 237 2 381 6 169 2 204 2 383 4 520 2 
0 2 315 2 28 4 523 2 178 4 245 2 526 2 393 4 459 2 321 2 44 2 152 4 78 2 79 4 467 10 50 2 509 2 189 2 537 2 85 2 263 4 438 2 299 2 470 2 118 2 441 2 366 2 266 2 442 4 270 2 368 2 160 2 20 2 552 2 168 2 448 4 97 2 237 2 381 6 169 2 204 2 383 4 520 2 
0 2 315 2 28 4 523 2 178 4 245 2 526 2 393 4 459 2 321 2 44 2 152 4 78 2 79 4 467 10 50 2 509 2 189 2 537 2 85 2 263 4 438 2 299 2 470 4 118 2 441 2 366 2 266 4 442 4 270 2 368 2 160 2 20 2 552 2 168 2 448 4 97 2 237 2 381 6 169 2 204 4 383 4 520 2 
122 2 166 2 399 2 131 2 238 2 114 2 
500 2 397 2 30 2 358 2 191 2 238 2 415 2 
522 2 490 1 243 2 181 2 149 2 393 8 42 2 464 2 329 2 467 10 362 2 506 1 115 2 536 2 225 2 262 2 407 2 159 1 193 2 412 1 339 2 197 2 449 2 556 2 283 1 174 2 
315 6 488 2 178 4 146 2 525 2 182 2 526 6 68 2 392 2 393 2 320 4 44 6 467 2 85 6 537 6 470 3 120 2 539 4 266 2 442 12 270 6 544 2 18 2 277 2 306 2 97 2 169 6 134 2 452 2 205 2 204 2 383 15 
263 2 28 2 1 2 179 2 409 2 476 2 147 7 499 2 374 2 393 1 127 2 307 1 550 4 502 2 530 2 152 2 467 1 241 2 
263 2 28 2 1 4 179 2 409 2 476 2 147 6 499 2 374 4 127 2 502 2 550 4 530 2 152 2 241 4 
263 2 28 2 1 8 179 2 409 2 476 2 147 10 499 6 374 8 393 1 127 2 307 1 502 8 550 4 530 2 152 2 467 1 241 8 
263 2 28 2 1 2 179 2 409 2 476 2 147 2 374 2 127 2 550 2 530 2 152 2 241 2 
217 2 287 2 156 2 446 2 254 2 393 4 40 1 467 4 538 2 411 1 194 2 416 2 549 2 206 2 
100 2 538 2 194 2 217 2 254 2 446 2 394 2 393 4 287 4 416 2 549 2 467 4 156 2 206 2 
100 2 538 2 194 2 217 2 254 2 446 2 394 2 393 4 287 4 416 2 549 2 467 4 156 2 206 2 
416 2 538 2 549 2 194 2 467 4 217 2 446 2 206 2 156 2 254 2 287 2 393 4 
208 2 

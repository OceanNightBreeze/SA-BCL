#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 374 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (240,253) (240,253) 368 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NegativeArraySizeException 88 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 127 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 127 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 127 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 127 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 127 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 127 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 127 175 460 241 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 362 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 410 327 48 144 108 151 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 410 327 48 144 108 151 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 144 108 151 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 410 327 48 455 112 144 108 151 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:sum([D)D
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:lte(II)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name; | CONSTANT | 55424 | 2 -> 1
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:subsetOf([D[F)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoAux:hashCode()I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:setDiff([I[I)[I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.MathMDE:gcd(JJ)J
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd([I)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String; | RETURN | 29320 | return null
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair; | ASSIGN | 1711 | = null
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.MathMDE:negate(I)I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:subsetOf([I[I)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18499 | 1 -> -1
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern:intern([J)[J
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:intern([I)[I | RETURN | 15863 | return null
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName:esc_name()Ljava.lang.String; | RETURN | 7456 | return null
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.PptSlice0:arity()I
utilMDE.ArraysMDE:max([I)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:eltsLT([II)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel; | ASSIGN | 1586 | = null
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParser:jj_scan_token(I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:lt(II)Z
daikon.Quant:lexLTE([I[I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:eltsEqual([II)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.ModBitTracker:num_samples()I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:union([I[I)[I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.MathMDE:pow(II)I
daikon.Quant:memberOf(J[J)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:noDups([I)Z
daikon.Quant:eq(II)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([B[I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_ntk()I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaCharStream:ReadByte()C
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:subsetOf([F[D)Z
utilMDE.ArraysMDE:indexOf([II)I | CONDITION | 13875 | if (x) -> if (!x)
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:lexGTE([I[I)Z
jtb.JavaCharStream:BeginToken()C
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Assert:assertTrue(Z)V
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:jj_3_16()Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:concat([I[I)[I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:memberOf(F[D)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.ModBitTracker:num_sets()I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.ValueTuple:isMissing(I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:gt(II)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:eltsGteIndex([I)Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4561 | = null
utilMDE.MathMDE:sign(I)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:eltsLTE([II)Z
daikon.Quant:isReverse([I[I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:memberOf(S[S)Z
daikon.Quant:slice([III)[I
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaCharStream:getBeginColumn()I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:gcd(II)I
jtb.JavaCharStream:getBeginLine()I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseEqual([I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 23040 | = null
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:eq(FF)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.Invariant:getConfidence()D
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.ArraysMDE:element_range([I)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:gte(II)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaCharStream:readChar()C
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:lexGT([I[I)Z
jtb.JavaCharStream:backup(I)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:hashCode()I
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.Invariant:logOn()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:eltwiseLT([I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:numIntArrays()I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(I[I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:eltsGTE([II)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | CONSTANT | 15367 | 1 -> 0
daikon.ValueTuple:size()I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Debug:logOn()Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.ModBitTracker:num_vars()I
daikon.Quant:lexEqual([I[I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eq(DD)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:ne(II)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 3923 | = null
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
211 2 126 2 244 2 240 2 376 2 283 2 424 2 285 4 253 2 
391 4 395 6 110 2 111 2 17 2 444 2 445 2 374 2 53 2 468 2 
471 2 236 4 239 2 237 6 240 2 483 6 215 2 459 6 253 2 342 2 245 4 134 6 26 2 
440 2 289 4 240 2 97 4 5 2 146 2 191 6 337 2 276 4 253 2 368 2 68 4 486 2 153 2 416 4 344 6 453 6 418 2 197 2 
462 6 42 4 
346 2 
382 2 292 2 218 2 341 2 255 2 120 2 415 2 7 2 264 2 122 2 432 4 49 2 
186 6 440 8 240 4 97 4 5 6 191 24 337 8 276 16 68 16 307 4 416 16 453 27 344 6 172 2 202 2 289 10 141 4 146 8 253 4 486 8 78 6 393 2 56 4 24 6 60 8 209 2 
415 2 282 2 323 2 
161 2 74 2 287 2 94 10 34 2 363 2 355 2 485 2 394 22 101 2 480 2 194 2 435 2 184 2 
440 2 163 2 442 2 97 2 5 2 36 2 191 4 337 2 276 2 68 2 416 2 453 6 344 4 418 2 11 2 289 2 145 2 146 2 316 2 390 2 486 2 148 2 231 2 
440 4 289 4 141 4 191 12 146 4 337 4 276 8 68 8 78 6 486 4 56 4 24 6 40 2 476 2 416 8 453 16 197 2 
63 2 1 2 349 6 44 2 332 2 82 2 75 2 164 2 88 2 315 2 
91 2 407 2 4 2 99 2 346 2 72 2 226 2 21 2 260 2 401 2 
327 4 377 2 127 2 238 6 240 2 388 2 314 2 205 2 410 4 77 2 253 2 464 2 467 2 489 2 62 2 324 2 31 2 
353 2 253 2 
71 2 454 2 253 4 
83 2 
123 10 0 2 233 12 235 2 3 4 303 2 129 4 447 8 130 12 131 4 243 2 370 8 451 2 308 2 198 10 199 2 247 12 381 2 248 4 249 10 251 4 461 2 317 2 257 4 25 4 396 38 206 8 152 8 400 12 84 12 27 12 268 2 90 2 210 4 271 2 212 38 333 2 334 12 98 2 475 12 339 6 413 12 103 2 477 2 278 2 478 2 43 4 284 2 224 2 347 4 420 12 109 6 350 12 290 2 422 2 113 2 354 2 230 2 487 18 57 2 121 2 295 38 58 10 61 4 490 8 436 4 
330 2 456 1 171 2 54 2 
143 2 171 2 
39 2 15 2 450 2 415 2 52 2 357 2 171 2 
411 2 450 2 171 2 
69 2 450 2 171 2 
482 2 330 2 319 2 
450 2 171 2 
482 2 142 2 
171 2 297 2 
482 2 330 2 373 2 
330 2 18 2 389 2 
298 2 330 2 183 2 
14 2 330 2 430 2 
138 2 64 2 330 2 
482 2 359 2 
466 2 171 2 
428 2 389 2 
298 2 189 2 
14 2 265 2 
138 2 279 2 
403 2 482 2 
138 2 302 2 
14 2 296 2 
298 2 326 2 
389 2 491 2 
482 2 470 2 330 2 373 2 
162 2 482 2 470 2 330 2 373 2 
254 2 482 2 330 2 
482 2 330 2 195 2 
213 2 221 2 59 2 86 2 
15 2 259 2 415 2 166 2 
39 2 15 2 259 2 415 2 166 2 159 2 
15 2 450 2 33 2 415 2 52 2 171 2 
170 2 364 2 
15 2 329 2 415 2 52 2 
14 2 2 2 
138 2 452 2 
125 2 389 2 
298 2 318 2 
138 2 298 2 313 2 
138 2 298 2 139 2 
138 2 298 2 399 2 
138 2 298 2 232 2 
234 2 415 2 137 2 15 2 140 2 423 6 81 6 157 2 
482 2 385 2 
328 2 378 2 312 2 165 2 448 2 366 2 217 2 394 6 371 2 192 2 222 2 169 4 479 4 263 2 28 2 320 2 136 2 266 2 
22 2 330 2 
182 2 
327 4 377 2 127 2 238 4 96 2 240 2 314 2 205 2 410 4 77 2 253 2 467 2 489 2 62 2 31 2 
327 4 377 2 127 2 238 6 96 2 240 2 388 2 314 2 205 2 410 4 77 2 253 2 464 2 467 2 489 2 62 2 31 2 
258 2 429 2 252 2 
258 2 429 2 252 2 
327 4 377 2 127 2 238 6 96 2 240 2 388 2 314 2 205 2 410 4 77 2 253 2 464 2 467 2 489 2 62 2 31 2 
437 2 16 2 288 2 301 2 204 2 240 2 116 2 38 2 253 4 79 2 119 2 167 2 414 2 41 2 465 2 9 2 375 2 
327 4 377 2 127 2 238 6 96 2 240 2 388 2 314 2 205 2 410 4 77 2 253 2 464 2 467 2 489 2 62 2 31 2 
327 4 377 2 127 2 238 6 96 2 240 2 388 2 314 2 205 2 410 4 77 2 253 2 464 2 467 2 489 2 62 2 31 2 
327 2 92 1 300 2 408 2 127 2 4 1 238 3 240 2 241 2 410 2 336 2 340 2 277 2 343 2 47 2 70 2 106 2 73 1 377 2 175 2 227 2 388 1 314 2 20 2 460 2 21 1 253 6 55 2 464 1 431 2 62 2 30 2 185 2 31 2 
201 2 404 2 417 2 228 2 37 2 89 2 
427 2 379 2 457 2 362 2 177 2 262 2 89 2 
469 2 270 2 405 2 93 2 332 1 164 1 240 8 67 1 216 2 335 2 275 2 8 1 104 2 286 2 310 2 51 1 383 2 458 2 76 2 253 10 118 2 294 2 488 2 155 2 156 2 434 2 
186 4 440 6 95 2 240 6 473 2 191 12 276 6 337 6 242 2 68 6 100 4 307 2 416 6 45 2 453 16 173 2 200 2 289 1 250 2 146 6 115 2 253 6 486 6 56 2 24 4 181 2 60 2 29 2 
438 2 32 7 443 2 472 2 351 2 273 1 240 1 474 2 253 1 132 2 293 2 6 2 193 2 46 2 360 4 158 2 402 2 12 2 
438 2 32 6 443 2 472 4 351 2 474 2 132 2 293 2 6 4 193 2 46 2 360 4 158 2 402 2 12 4 
438 2 32 10 443 2 472 8 351 2 273 1 240 1 474 6 253 1 132 2 293 8 6 8 193 2 46 2 360 4 158 2 402 2 12 8 
438 2 32 2 443 2 472 2 351 2 132 2 6 2 193 2 46 2 360 2 158 2 402 2 12 2 
124 2 128 2 238 24 240 30 367 10 369 2 133 4 135 2 246 2 377 6 380 1 144 2 19 2 388 4 386 3 147 2 253 34 150 2 149 4 151 2 256 4 397 2 398 4 154 4 31 6 269 2 409 2 274 1 35 2 410 14 412 1 168 2 281 2 48 2 50 2 174 4 421 2 176 2 291 2 178 4 179 2 439 2 65 2 299 2 66 2 446 1 306 2 196 2 309 1 314 4 80 2 464 4 87 2 207 2 208 2 327 12 214 2 338 2 223 2 481 2 348 2 108 2 112 2 352 1 484 2 114 2 356 2 
327 6 299 2 272 2 214 2 238 8 240 14 410 6 305 2 367 2 412 2 223 2 48 2 50 2 348 2 108 2 377 2 174 2 144 2 178 2 314 2 179 2 253 14 149 2 151 2 397 2 356 2 154 6 267 2 31 2 160 2 361 2 
124 2 238 40 240 40 365 2 367 10 133 6 10 2 135 2 13 2 377 4 384 2 144 2 19 2 386 6 388 6 387 2 147 4 253 44 149 4 150 2 392 8 23 6 151 2 256 2 397 2 398 6 154 14 31 4 269 2 406 2 272 2 409 2 274 4 35 2 410 20 168 6 280 6 419 2 174 4 421 4 176 4 291 2 178 4 179 2 425 8 426 6 180 2 433 2 187 2 439 2 188 2 299 2 190 2 441 2 66 2 304 2 449 2 306 2 455 2 309 5 311 2 314 2 463 6 464 6 85 2 87 2 207 2 321 2 208 2 322 2 325 2 327 18 331 2 214 2 338 2 219 4 102 2 220 2 345 2 481 2 105 2 348 2 225 8 107 2 108 2 112 14 484 2 229 2 114 2 117 2 358 2 
327 8 439 2 299 2 272 2 214 2 238 20 274 2 240 18 410 8 367 6 412 2 168 2 223 2 481 2 48 2 455 2 50 2 348 2 108 2 377 2 174 4 421 2 203 2 112 2 144 2 19 2 386 2 178 4 314 2 388 4 179 2 229 2 147 2 253 20 149 4 80 2 151 2 464 4 397 2 261 2 154 12 207 2 31 2 
372 2 

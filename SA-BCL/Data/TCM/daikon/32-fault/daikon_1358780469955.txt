#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (176,384) (176,384) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException (536,739) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.util.NoSuchElementException 605 645 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError (188,617) 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 457 67 488 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V FAILED junit.framework.AssertionFailedError 
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 416 (182,760) 168 (119,121) (182,760) 460 (119,121) 814 762 
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 416 (182,760) 168 (119,121) (182,760) 460 (119,121) 814 762 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 39 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 39 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 251 709 825 95 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 698 (41,60,114,166,171,306,418,524,603,692) 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 698 (41,60,114,166,171,306,418,524,603,692) 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 698 (41,60,114,166,171,306,418,524,603,692) 643 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 436 100 200 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 112 436 100 200 
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (176,384) (176,384) 436 100 200 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.Quant:subsetOf([D[F)Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.MathMDE:negate(I)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.Node:Node()V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Quant:subsetOf([F[F)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.Quant:subsetOf([B[I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Debug:logDetail()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | RETURN | 282442 | return null
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.ProglangType:isArray()Z
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:intersection([I[I)[I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptName:isCombinedExitPoint()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfo:relate_var()V
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:eq(II)Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Intern:intern([I)[I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Assert:assertTrue(Z)V
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:eq(FF)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfo:isDerived()Z
daikon.Quant:ne(II)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:dimensions()I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:lexEqual([I[I)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.PptSlice1:num_samples()I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfo:isIOAArray()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.ProglangType:base()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.RootNode:RootNode()V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:eltsGTE([II)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfo:new_ppt()V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:union([I[I)[I
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:slice([III)[I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd(II)I
daikon.Quant:eltwiseLT([I)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel; | RETURN | 571 | return null
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ValueTuple:size()I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | ASSIGN | 99550 | = null
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.Intern:intern([J)[J
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.Invariant:logOn()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.VarInfo:isPrestate()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant; | RETURN | 547 | return null
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:hashCode()I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:eltsLT([II)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C | CONDITION | 5637 | if (x) -> if (!x)
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([[I)I | CONSTANT | 8702 | 0 -> -1
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:lexLT([I[I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I | CONDITION | 9296 | while (x) -> while (!x)
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | CONDITION | 15342 | if (x) -> if (!x)
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V | CONDITION | 1039 | if (x) -> if (!x)
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 62554 | return null
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:gt(II)Z
utilMDE.Intern:intern([D)[D
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:size()I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String; | RETURN | 4792 | return null
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | CONSTANT | 3683 | 1 -> 0
daikon.Quant:eltsLteIndex([I)Z
daikon.PptSlice0:arity()I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Debug:logOn()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:modulus([I)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.ProglangType:isIntegral()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:gte(II)Z
daikon.test.FormatTestCase:passes()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.Invariant:logDetail()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:noDups([I)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.ProglangType:isScalar()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:Ppt()V
utilMDE.ArraysMDE:subarray([JII)[J | RETURN | 30018 | return null
daikon.ModBitTracker:num_samples()I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isPseudoArray()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String; | RETURN | 49025 | return null
daikon.diff.InvMap:InvMap()V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.Quant:eltsEqual([II)Z
daikon.Quant:lexLTE([I[I)Z
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.Quant:setEqual([I[I)Z
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptName:isEnterPoint()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quantify.Constant:Constant(I)V
daikon.Quant:eltsLtIndex([I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.PptSlice1:arity()I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:concat([I[I)[I
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:lt(II)Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z | CONDITION | 156037 | if (x) -> if (!x)
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:eq(JJ)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
48 2 176 2 77 2 358 4 482 2 555 2 287 2 384 2 38 2 
696 2 661 6 93 2 910 2 800 2 675 2 257 6 396 2 314 6 874 2 199 2 
892 6 277 6 176 2 808 6 435 2 333 4 466 4 469 6 384 2 944 2 727 2 154 2 627 2 
403 6 751 10 847 8 880 2 285 14 663 10 289 16 756 11 797 24 171 6 418 6 175 27 176 6 419 2 809 4 320 2 698 16 423 2 351 10 384 6 147 2 595 4 247 6 843 4 520 4 747 2 86 11 523 2 900 8 430 11 
220 4 259 6 
28 2 
777 2 617 2 536 2 544 2 204 2 739 2 
368 2 524 4 403 6 751 22 285 32 60 8 306 2 663 16 289 32 885 2 166 4 441 6 756 16 131 6 797 48 171 4 41 4 692 4 891 2 418 4 175 54 176 4 809 2 421 6 698 32 508 6 351 6 742 6 269 2 384 4 247 18 114 4 925 2 86 16 819 2 430 16 603 4 749 4 947 6 
617 2 422 2 875 2 
402 2 697 2 609 2 20 2 183 2 300 2 926 2 377 2 914 10 188 2 532 2 11 2 833 22 694 2 
605 2 576 2 126 2 285 2 663 2 289 2 233 2 756 2 797 4 171 2 341 2 175 5 588 2 645 2 202 2 698 2 351 4 246 2 86 2 430 2 
524 4 751 4 698 8 285 8 839 2 663 4 289 8 441 6 131 6 756 4 797 12 843 2 641 2 86 4 692 4 430 4 175 14 
26 2 656 2 128 2 334 2 554 2 167 2 234 14 856 2 804 2 506 2 77 2 617 6 835 2 16 4 346 8 422 2 699 2 842 2 391 2 572 2 541 2 875 4 677 2 
28 2 103 2 733 2 619 2 191 2 737 2 486 2 895 2 945 2 674 2 
606 2 849 2 607 6 125 2 370 3 371 2 722 2 854 2 498 1 376 3 729 8 256 2 501 2 380 2 857 3 261 1 263 5 731 2 734 2 735 2 382 1 383 2 509 2 510 4 862 2 18 2 385 4 384 34 387 2 512 4 21 1 390 2 518 3 519 2 746 6 157 2 630 1 275 2 399 3 27 4 29 3 631 2 30 2 528 4 633 2 163 2 286 32 35 2 408 2 529 2 290 2 888 3 887 1 889 2 413 1 170 2 763 2 294 1 43 2 176 32 179 2 893 2 894 2 648 2 769 2 46 2 770 2 772 2 773 2 299 2 650 1 424 16 301 2 778 12 426 2 302 2 303 24 782 1 428 2 899 1 653 1 655 2 433 2 787 4 657 3 902 2 58 2 547 2 904 2 791 2 664 2 550 2 197 2 310 2 66 2 907 2 796 2 912 8 443 2 665 2 198 8 805 2 74 16 446 32 806 2 807 2 319 2 562 1 563 2 321 2 323 2 79 16 565 2 920 2 815 3 817 2 922 1 326 2 84 2 215 2 90 2 332 4 463 2 224 6 822 2 823 1 685 2 686 2 471 2 688 2 340 2 691 16 938 2 99 3 475 2 695 3 101 6 482 2 349 2 943 3 356 2 597 24 248 2 599 2 362 1 710 2 250 4 
799 2 384 2 
689 2 384 4 342 2 
831 2 
786 2 732 2 534 4 434 2 203 2 647 2 793 2 863 2 906 2 83 2 866 2 488 2 755 2 673 2 457 2 67 2 571 2 844 2 573 2 693 2 558 2 
366 2 935 2 108 1 169 2 
169 2 495 2 
672 2 617 2 169 2 520 2 42 2 232 2 120 2 
169 2 42 2 794 2 
169 2 42 2 552 2 
366 2 868 2 
169 2 42 2 
190 2 784 2 
169 2 667 2 
190 2 366 2 802 2 
366 2 708 2 832 2 
366 2 725 2 602 2 
366 2 937 2 339 2 
241 2 366 2 845 2 
190 2 282 2 
169 2 913 2 
347 2 708 2 
502 2 602 2 
937 2 452 2 
682 2 845 2 
190 2 375 2 
19 2 845 2 
222 2 937 2 
632 2 602 2 
827 2 708 2 
190 2 366 2 235 2 802 2 
190 2 366 2 235 2 51 2 802 2 
190 2 366 2 870 2 
190 2 366 2 652 2 
929 2 17 2 49 2 923 2 
672 2 493 2 617 2 837 2 
672 2 493 2 617 2 837 2 327 2 232 2 
672 2 617 2 169 2 520 2 546 2 42 2 
728 2 853 2 
672 2 331 2 617 2 520 2 
937 2 142 2 
845 2 316 2 
708 2 531 2 
515 2 602 2 
548 2 845 2 602 2 
785 2 845 2 602 2 
212 2 845 2 602 2 
201 2 845 2 602 2 
411 2 724 6 69 6 499 2 104 2 617 2 672 2 921 2 
190 2 514 2 
369 2 56 2 577 2 701 2 933 2 884 2 36 2 185 2 706 4 392 2 458 2 337 2 8 2 85 2 239 4 927 2 833 6 557 2 
366 2 237 2 
805 2 
604 2 606 2 607 2 854 2 501 2 261 2 734 6 735 2 510 4 385 4 384 26 153 4 746 6 873 2 157 4 27 2 30 2 528 4 633 2 163 2 165 2 286 6 410 2 170 2 43 2 176 26 770 2 649 2 299 2 184 2 778 8 187 2 655 2 787 2 902 2 57 2 58 2 547 2 904 2 662 4 791 2 61 2 664 2 310 2 197 2 65 2 912 2 665 2 556 2 446 4 807 2 319 2 563 2 565 2 332 2 224 2 685 2 686 2 936 2 829 2 340 2 691 6 830 2 475 2 101 4 482 2 349 2 248 2 599 2 362 2 710 2 601 2 712 2 250 4 
604 2 2 2 606 2 607 2 854 2 501 2 261 2 734 6 735 2 510 4 385 4 384 26 390 2 153 4 746 6 873 2 157 4 27 2 30 2 528 4 633 2 163 2 165 2 286 6 410 2 290 2 170 2 43 2 176 26 770 2 299 2 184 2 778 8 302 2 187 2 655 2 787 2 902 2 58 2 547 2 904 2 662 4 791 2 61 2 664 2 197 2 310 2 65 2 912 2 665 2 556 2 446 4 807 2 319 2 563 2 565 2 332 2 224 2 467 2 685 2 686 2 936 2 829 2 340 2 691 6 830 2 475 2 101 6 482 2 348 2 349 2 248 2 599 2 362 2 710 2 712 2 250 4 
503 2 
280 2 812 2 
654 2 1 8 121 2 902 2 124 2 545 4 661 6 608 4 307 2 310 2 910 2 800 2 137 2 313 4 257 6 314 6 315 2 858 10 140 4 199 4 510 2 210 2 384 12 743 2 814 2 270 8 271 2 746 4 397 2 874 4 460 2 820 2 633 2 634 2 34 4 230 2 883 4 170 2 762 2 40 2 340 2 474 2 102 2 176 6 941 2 483 2 349 2 770 2 487 2 244 2 182 2 775 2 359 2 707 2 539 2 53 2 119 2 542 2 250 2 
654 2 1 8 121 2 902 2 545 4 661 6 608 4 307 2 310 2 910 2 800 2 137 2 313 4 257 8 314 8 315 2 858 10 140 4 199 4 510 2 210 2 384 12 743 2 814 2 270 8 271 2 746 4 397 2 874 4 398 2 460 2 219 2 633 2 634 2 34 4 230 2 581 4 883 4 170 2 762 2 40 2 340 2 474 2 102 2 176 6 941 2 696 2 483 2 349 2 770 2 487 2 244 2 182 2 775 2 359 2 707 2 539 2 53 2 119 2 250 2 542 2 
654 2 121 2 941 2 661 2 34 4 230 2 883 2 743 2 814 2 775 2 539 2 762 2 313 4 53 2 257 2 874 2 315 2 199 2 
654 2 1 4 121 2 902 2 124 2 545 4 661 4 608 4 307 2 310 2 910 2 137 2 313 4 257 6 314 6 315 2 858 6 140 4 199 4 510 2 210 2 384 12 743 2 814 2 270 4 271 2 746 4 397 2 874 4 460 2 820 2 633 2 634 2 34 4 230 2 883 4 170 2 762 2 40 2 340 2 474 2 102 2 176 6 941 2 696 2 483 2 349 2 770 2 487 2 244 2 182 2 775 2 359 2 707 2 539 2 53 2 119 2 542 2 250 2 
654 2 1 4 121 2 902 2 124 2 545 4 661 6 608 4 307 2 310 2 910 2 137 2 313 4 257 4 314 6 315 2 858 4 140 4 199 4 510 2 210 2 384 12 743 2 814 2 270 4 271 2 675 2 746 4 397 2 874 4 460 2 820 2 633 2 634 2 34 4 230 2 883 4 170 2 762 2 40 2 340 2 474 2 102 2 176 6 941 2 483 2 349 2 770 2 487 2 244 2 182 2 775 2 359 2 707 2 539 2 53 2 119 2 542 2 250 2 
654 2 1 4 121 2 902 2 124 2 545 4 661 6 608 4 307 2 310 2 910 2 800 2 137 2 313 4 257 6 314 6 315 2 858 6 140 4 199 4 510 2 210 2 384 12 743 2 814 2 270 8 271 2 746 4 397 2 874 4 460 2 820 2 633 2 634 2 34 4 230 2 883 4 170 2 762 2 40 2 340 2 474 2 102 2 176 6 941 2 483 2 349 2 770 2 487 2 244 2 182 2 775 2 359 2 707 2 539 2 53 2 119 2 542 2 250 2 
654 2 1 8 121 2 902 2 124 2 545 4 661 8 608 4 307 2 310 2 910 2 800 2 137 2 313 4 257 6 314 8 315 2 858 10 140 4 199 4 510 2 210 2 384 12 743 2 814 2 270 8 271 2 675 2 746 4 397 2 874 4 460 2 820 2 633 2 634 2 34 4 230 2 883 4 170 2 762 2 40 2 340 2 474 2 102 2 176 6 941 2 483 2 349 2 770 2 487 2 244 2 182 2 775 2 359 2 707 2 539 2 53 2 119 2 542 2 250 2 
654 2 1 8 121 2 902 2 124 2 545 4 661 6 608 4 307 2 310 2 910 2 800 2 137 2 313 4 257 6 314 6 315 2 858 10 140 4 199 4 510 2 210 2 384 12 743 2 814 2 270 8 271 2 746 4 397 2 874 4 460 2 820 2 633 2 634 2 34 4 230 2 883 4 170 2 762 2 40 2 340 2 474 2 102 2 176 6 941 2 483 2 349 2 770 2 487 2 244 2 182 2 775 2 359 2 707 2 539 2 53 2 119 2 542 2 250 2 
121 2 607 2 608 4 497 2 254 2 137 2 257 4 379 2 501 2 140 6 734 6 735 2 510 4 740 2 384 28 385 4 743 2 270 2 271 2 390 2 153 4 746 6 397 2 874 4 27 2 878 2 30 2 528 4 163 2 633 2 634 2 34 4 286 8 165 2 883 4 290 2 638 2 168 2 760 2 170 2 762 2 40 2 415 2 416 2 43 2 176 18 770 2 299 2 182 2 775 2 778 2 539 2 53 2 542 2 654 2 787 2 902 2 545 8 547 2 661 8 904 2 307 2 791 2 197 2 310 2 910 4 665 4 313 4 314 12 315 2 446 2 199 4 319 2 565 2 210 2 325 4 453 2 454 2 814 2 456 2 570 2 675 4 460 2 820 2 332 2 224 2 579 2 230 2 686 2 829 2 691 6 340 2 830 2 474 2 101 6 482 2 941 2 483 2 349 2 487 2 244 2 707 2 599 2 119 2 250 4 
717 1 497 2 254 2 721 2 257 8 730 2 501 2 734 6 735 2 736 6 268 2 510 4 740 2 743 2 270 6 271 2 272 2 746 6 27 4 30 2 528 4 34 4 286 8 530 1 290 2 760 2 40 2 762 2 43 2 296 2 770 2 299 2 775 2 778 6 539 2 53 2 542 2 787 4 545 8 58 2 59 2 547 2 307 2 791 2 62 7 310 2 799 6 800 4 313 4 314 12 315 2 78 1 319 2 81 2 565 2 566 7 325 4 814 2 570 2 330 2 820 2 821 1 332 4 575 6 579 2 829 4 340 2 830 2 831 6 342 6 101 6 102 2 349 2 359 2 360 6 599 2 119 2 121 2 607 2 608 4 132 1 137 2 379 2 140 6 858 2 616 6 620 2 621 2 385 4 384 46 150 2 390 2 153 4 394 2 395 1 397 2 874 4 156 6 876 6 400 6 878 2 879 6 633 2 163 2 634 4 165 2 883 4 886 2 638 2 168 2 412 6 170 2 415 2 416 2 417 6 176 24 180 6 182 2 654 2 902 2 659 2 904 2 661 8 438 1 440 1 197 2 910 4 912 2 665 12 199 4 446 2 447 2 669 1 210 2 453 2 454 8 456 10 460 2 224 2 229 2 230 2 231 2 686 2 236 2 470 2 691 6 474 2 476 6 941 2 482 2 483 2 487 2 244 2 249 6 707 2 712 2 250 4 714 4 
1 4 121 2 607 2 608 4 497 2 254 2 721 2 137 2 730 2 257 8 379 2 501 2 140 6 858 6 616 6 734 6 736 6 735 2 268 2 510 4 620 2 740 2 621 2 384 46 385 4 743 2 150 2 270 6 271 2 390 2 272 2 153 4 394 2 746 6 397 2 156 6 874 4 876 6 400 6 27 4 878 2 879 6 30 2 528 4 163 2 633 2 634 4 34 4 286 8 165 2 883 4 886 2 290 2 638 2 168 2 412 6 760 2 170 2 762 2 40 2 415 2 416 2 417 6 43 2 296 2 176 24 180 6 770 2 299 2 182 2 775 2 778 6 539 2 53 2 542 2 654 2 787 4 902 2 659 2 59 2 58 2 545 8 547 2 661 8 904 2 307 2 791 2 197 2 310 2 910 4 799 6 912 2 800 4 665 12 313 4 314 12 315 2 446 2 199 4 447 2 319 2 81 2 565 2 210 2 325 4 453 2 454 8 814 2 456 10 570 2 330 2 460 2 820 2 575 6 332 4 224 2 579 2 229 2 231 2 230 2 686 2 236 2 470 2 829 4 691 6 340 2 831 6 830 2 342 6 474 2 476 6 101 6 102 2 482 2 941 2 483 2 349 2 487 2 244 2 359 2 249 6 360 6 707 2 599 2 712 2 714 4 119 2 250 4 
492 2 1 4 121 2 607 4 608 4 497 2 254 2 721 2 137 2 730 2 257 10 379 2 501 2 140 6 858 4 616 6 734 8 736 6 735 2 268 2 510 4 620 2 621 2 384 44 385 4 743 2 150 2 270 6 271 2 390 2 272 2 153 6 394 2 744 2 746 6 397 2 156 6 874 4 876 6 400 6 27 4 878 2 879 6 30 2 528 4 163 2 633 2 634 2 34 4 286 12 165 2 883 4 886 2 290 2 638 2 168 2 412 6 760 2 170 2 762 2 40 2 415 2 416 2 417 6 43 2 296 2 176 22 180 6 770 2 181 2 299 2 182 2 775 2 778 6 539 2 53 2 542 2 654 2 787 4 902 2 659 2 59 2 58 2 545 8 547 2 661 10 904 2 307 2 791 2 310 2 197 2 910 4 799 6 912 2 800 4 665 10 313 4 314 16 315 2 446 4 199 4 447 2 319 2 81 2 565 2 210 2 325 4 453 2 454 8 814 2 456 8 570 2 675 2 330 2 460 2 820 2 575 6 332 4 224 4 579 2 229 2 231 2 230 2 686 2 236 2 470 2 829 4 473 2 691 8 340 2 831 6 830 2 342 6 240 2 474 2 476 6 101 6 482 2 696 2 941 2 483 2 349 2 702 2 487 2 244 2 249 6 360 6 707 2 599 2 712 2 714 4 119 2 250 4 
820 2 654 2 1 4 545 2 608 2 661 6 307 2 34 2 230 2 910 2 800 2 137 2 40 2 313 2 314 4 257 6 315 2 140 2 858 4 474 2 199 4 941 2 483 2 210 2 384 4 743 2 244 2 270 6 775 2 271 2 707 2 397 2 53 2 874 4 542 2 
716 2 849 2 607 3 608 2 850 2 372 2 137 2 257 6 501 2 140 2 858 2 734 6 735 2 510 4 740 2 384 28 385 4 743 2 270 6 390 2 271 2 153 4 746 6 397 2 874 4 30 2 528 4 633 2 163 2 34 2 165 2 286 8 290 2 170 2 763 2 40 2 43 2 176 24 770 2 299 2 775 2 53 2 542 2 654 2 432 2 902 2 545 2 547 2 661 6 904 2 307 2 791 2 197 2 310 2 910 2 800 2 665 4 313 2 314 4 315 2 805 2 199 4 446 3 319 2 920 2 565 2 210 2 456 2 816 2 820 2 224 3 230 2 686 2 829 2 340 2 691 6 830 2 474 2 101 6 941 2 482 2 483 2 349 2 487 2 244 2 707 2 599 2 711 3 250 4 
707 2 322 2 137 2 
707 2 322 2 137 2 
604 4 1 4 121 2 608 2 611 2 723 2 137 4 257 12 258 2 501 2 140 4 858 6 734 2 735 2 510 4 385 4 384 24 270 6 390 2 746 6 397 2 874 4 27 4 30 2 528 4 633 2 163 2 284 2 881 2 34 2 165 2 286 2 883 2 39 2 290 2 412 2 170 2 43 2 176 16 45 4 770 2 299 2 775 4 778 4 542 2 787 4 902 2 58 4 545 4 547 2 904 2 661 12 790 4 791 2 195 2 197 2 310 2 910 4 911 2 800 4 665 4 313 2 314 16 446 2 199 4 319 2 322 2 671 2 325 2 814 2 456 2 675 4 460 2 332 4 230 2 686 2 829 6 690 2 340 2 691 2 830 2 101 6 482 2 941 2 696 4 349 2 700 2 245 2 359 2 490 2 707 2 599 2 714 2 250 4 
176 2 280 2 658 2 633 2 284 2 683 2 384 4 245 2 456 2 624 2 723 2 412 2 665 2 539 2 394 2 416 2 714 2 
604 4 1 4 121 2 608 2 497 2 611 2 855 2 137 6 257 12 258 2 501 2 13 2 140 4 858 6 734 2 735 2 510 4 385 4 384 20 270 6 390 2 746 6 397 2 874 4 27 4 878 2 30 2 528 4 526 2 633 2 163 2 634 4 284 2 34 2 165 2 286 2 883 4 39 2 290 2 168 2 170 2 43 2 176 14 45 4 770 2 299 2 775 4 778 4 542 2 787 4 902 2 58 4 545 4 547 2 904 2 661 12 790 4 791 2 195 4 197 2 310 2 910 4 911 2 800 4 665 2 313 2 314 16 446 4 199 4 319 2 322 2 671 2 325 2 814 2 675 4 676 2 460 2 332 4 230 2 582 2 686 2 829 6 690 2 340 2 691 2 830 2 101 6 102 2 344 2 481 2 482 2 941 2 696 4 349 2 700 2 245 2 359 2 707 4 599 2 119 2 250 4 
604 4 1 4 121 2 608 2 497 2 611 2 723 2 137 6 257 12 258 2 501 2 13 2 140 4 858 6 734 2 735 2 510 4 385 4 384 24 270 6 390 2 746 6 397 2 874 4 27 4 878 2 30 2 528 4 633 2 163 2 634 4 284 2 34 2 165 2 286 2 883 4 39 2 290 2 168 2 412 2 170 2 890 2 172 2 43 2 176 16 45 4 770 2 299 2 775 4 778 4 542 2 787 4 902 2 58 4 545 4 547 2 904 2 661 12 790 4 791 2 195 2 197 2 310 2 910 4 442 2 911 2 800 4 665 4 313 2 314 16 446 2 199 4 319 2 322 2 564 2 671 2 325 2 814 2 456 2 675 4 460 2 332 4 230 2 686 2 829 6 690 2 340 2 691 2 830 2 101 6 102 2 344 2 482 2 941 2 696 4 349 2 700 2 107 2 245 2 359 2 707 4 599 2 119 2 714 2 250 4 
716 2 492 2 251 2 719 2 3 4 4 2 496 2 254 2 7 2 255 2 726 2 9 2 12 2 260 4 504 2 262 2 261 2 264 12 15 2 734 14 267 4 510 4 738 2 273 6 745 2 23 6 521 2 744 2 746 6 24 4 276 2 524 4 750 2 281 3 525 2 30 2 751 6 528 6 752 2 31 4 33 2 285 8 753 2 286 34 289 8 290 6 756 4 757 8 292 4 761 6 293 2 533 2 44 2 764 20 767 2 770 2 299 4 50 48 779 4 778 60 52 2 781 6 783 8 54 2 55 2 58 4 789 6 306 2 791 4 61 2 553 2 795 2 64 60 308 2 310 2 65 2 797 12 798 2 311 24 68 2 312 20 71 2 556 2 72 3 559 2 560 4 317 2 318 2 319 2 76 2 561 2 810 4 324 4 79 14 80 2 82 2 565 2 567 16 813 2 570 2 86 4 88 6 87 2 328 2 91 16 579 2 335 2 826 6 825 2 95 2 336 4 96 4 97 2 338 2 829 2 340 2 830 2 101 14 343 2 349 2 590 2 838 2 593 2 594 2 352 4 353 4 840 2 110 6 111 2 841 2 361 12 113 4 599 4 600 2 115 1 362 2 116 2 118 2 846 2 122 4 607 16 127 2 850 2 372 2 852 2 373 2 131 6 374 2 134 4 135 2 613 2 138 2 378 8 614 2 139 2 859 6 860 2 381 2 861 2 141 2 618 2 620 2 864 2 622 3 385 6 384 40 386 12 865 4 146 2 145 2 148 4 388 2 151 2 390 6 152 2 153 12 393 2 626 2 871 4 155 4 873 2 872 10 628 2 629 6 158 2 877 2 160 10 159 3 403 6 163 2 633 2 164 2 635 6 405 2 636 4 410 2 638 4 170 2 640 2 415 2 642 2 173 2 643 2 418 4 175 16 176 30 177 4 646 2 896 2 181 2 424 4 425 2 184 2 186 2 898 2 187 2 897 10 429 2 189 26 430 4 901 6 432 2 902 2 903 4 904 4 193 4 194 4 663 4 439 2 197 2 908 4 909 2 912 22 665 2 444 6 915 16 916 2 446 22 668 2 448 2 450 2 207 4 206 2 208 2 919 4 209 2 451 2 453 2 925 4 459 4 217 2 218 2 221 2 680 2 928 2 464 10 223 6 681 10 224 22 226 2 228 2 932 2 468 4 686 2 936 16 687 2 472 4 691 14 473 2 240 2 478 2 939 18 940 16 482 4 698 8 484 4 702 2 704 4 703 2 489 4 247 4 709 2 711 2 713 28 946 2 712 46 715 24 250 4 
221 2 224 2 681 2 607 2 286 2 97 2 691 2 12 2 446 2 615 2 176 2 343 2 141 2 734 2 448 2 622 2 565 2 384 2 145 2 393 2 153 2 897 4 872 2 712 6 
221 2 224 2 681 2 607 2 286 2 97 2 691 2 12 2 446 2 615 2 176 2 343 2 141 2 734 2 448 2 622 2 565 2 384 2 145 2 393 2 153 2 897 4 872 2 712 6 
221 2 224 2 681 2 607 2 286 2 97 2 691 2 12 2 446 2 615 2 176 2 343 2 141 2 734 2 448 2 622 2 565 2 384 2 145 2 393 2 153 2 897 4 872 2 712 6 
877 4 305 2 403 4 224 3 930 2 33 4 227 2 228 4 285 2 286 2 663 2 289 2 129 4 94 2 756 2 759 2 797 4 761 3 312 6 444 3 12 2 418 2 175 4 446 3 505 2 176 4 561 4 345 2 698 2 144 2 79 2 592 2 350 3 565 2 384 10 424 2 871 2 86 2 329 2 430 2 
305 2 663 2 129 4 797 4 312 6 444 2 12 2 446 2 505 2 561 4 79 2 144 2 565 2 384 10 269 2 871 2 86 2 329 2 877 4 403 4 751 2 224 2 930 2 227 2 33 4 285 2 228 4 286 2 289 2 94 2 756 2 759 2 761 2 418 2 175 4 176 4 345 2 698 2 350 2 592 2 424 2 247 2 430 2 
305 2 663 2 129 4 797 4 312 6 444 2 12 2 446 2 505 2 561 4 79 2 144 2 565 2 384 10 269 2 871 2 86 2 329 2 877 4 403 4 751 2 224 2 930 2 227 2 33 4 285 2 228 4 286 2 289 2 94 2 756 2 759 2 761 2 418 2 175 4 176 4 345 2 698 2 350 2 592 2 424 2 247 2 430 2 
751 2 403 2 224 2 285 2 286 2 289 2 94 2 759 2 797 2 761 2 312 2 444 2 12 2 418 2 175 2 446 2 176 2 345 2 698 2 144 2 79 2 350 2 565 2 384 4 424 2 871 2 
751 2 403 2 224 2 285 2 286 2 289 2 94 2 759 2 797 2 761 2 312 2 444 2 12 2 418 2 175 2 446 2 176 2 345 2 698 2 144 2 79 2 350 2 565 2 384 4 424 2 871 2 
318 2 291 2 535 2 136 2 117 2 37 2 
568 2 936 2 535 2 918 2 931 2 586 2 130 2 
461 2 494 2 407 2 5 2 63 1 409 2 583 2 170 2 612 2 500 2 295 2 174 2 176 8 736 2 768 2 699 1 384 10 149 2 357 2 776 1 389 2 748 2 541 1 363 2 491 2 431 1 
524 2 751 3 403 2 698 4 549 2 285 4 663 2 289 4 756 2 131 4 797 6 459 2 86 2 173 2 430 2 418 2 643 2 175 7 
877 2 176 1 365 1 75 7 178 2 644 2 561 2 228 2 591 2 252 2 741 2 384 1 684 2 133 4 517 2 73 2 678 2 25 2 
877 2 75 6 178 2 561 2 644 4 228 2 591 2 252 2 741 4 684 2 133 4 517 2 73 4 25 2 678 2 
877 2 176 1 365 1 75 10 178 2 561 2 644 8 228 2 591 2 252 6 741 8 384 1 684 2 133 4 517 2 73 8 25 8 678 2 
877 2 75 2 178 2 561 2 644 2 228 2 591 2 741 2 684 2 133 2 517 2 73 2 678 2 
364 2 719 2 6 2 610 2 143 4 266 2 385 8 384 26 511 2 390 4 867 2 869 2 274 2 161 2 162 2 528 10 32 2 288 2 637 2 290 4 414 2 176 24 420 4 766 1 299 6 537 1 651 4 436 2 904 4 791 6 792 2 68 2 200 2 205 2 211 2 455 1 213 2 216 1 87 2 89 2 578 1 580 1 225 2 100 2 101 16 479 2 589 4 105 2 836 1 354 2 109 2 112 4 
719 2 788 2 436 2 720 2 848 2 437 2 904 2 791 2 905 2 196 2 309 2 68 2 801 2 70 2 803 2 917 2 200 2 507 2 670 2 384 30 385 14 211 2 511 2 213 2 569 2 214 2 516 2 924 4 522 2 216 2 87 2 574 2 278 2 679 2 462 2 528 14 527 2 283 2 465 2 882 2 406 2 639 2 98 4 100 2 297 2 101 30 477 2 176 30 242 2 480 2 765 2 420 2 485 4 243 2 774 2 47 2 299 2 355 2 596 2 112 22 540 2 427 2 304 2 
367 4 718 2 719 2 436 2 720 2 848 2 904 2 791 4 851 2 253 2 6 2 68 2 445 2 200 2 265 2 320 2 266 2 143 2 205 2 384 32 385 10 511 1 211 2 213 3 390 4 818 2 516 2 867 2 22 4 869 2 216 1 274 4 87 2 279 2 89 2 162 2 528 12 578 2 225 2 404 2 92 2 754 2 288 2 637 2 290 4 934 2 758 2 414 2 584 2 587 2 100 2 101 22 479 2 176 30 242 2 834 2 420 6 942 2 589 6 298 2 106 4 354 2 299 4 109 2 598 2 112 15 780 2 651 6 
0 2 364 2 719 2 436 2 720 6 848 6 123 4 660 2 192 2 904 2 791 2 851 2 792 10 253 2 551 4 196 4 68 2 666 2 10 2 14 2 200 2 449 2 811 6 384 28 385 14 623 2 211 2 213 2 455 6 625 2 513 4 390 9 516 6 216 2 87 2 401 2 161 2 528 14 578 2 580 2 32 10 92 2 406 4 290 9 824 4 238 4 585 2 100 2 101 37 176 26 242 2 420 8 766 2 105 2 771 2 299 2 705 2 538 2 537 2 112 14 427 4 543 2 
828 2 

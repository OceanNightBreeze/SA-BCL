#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (630,750) (630,750) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 411 577 379 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V ERROR java.lang.NullPointerException (135,233) 165 
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR utilMDE.Assert$AssertionException (240,680) (188,404) 403 175 276 824 152 28 794 (647,668) 700 (291,355) (647,668) 195 (291,355) 385 422 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR utilMDE.Assert$AssertionException (240,680) (188,404) 403 175 276 824 152 28 794 (647,668) 700 (291,355) (647,668) 195 (291,355) 385 422 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR utilMDE.Assert$AssertionException (240,680) (188,404) 403 175 276 824 152 28 794 (647,668) 700 (291,355) (647,668) 195 (291,355) 385 422 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR utilMDE.Assert$AssertionException (240,680) (188,404) 403 175 276 824 152 28 794 (647,668) 700 (291,355) (647,668) 195 (291,355) 385 422 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 351 315 325 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 485 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 745 736 808 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 745 736 808 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 745 736 808 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 745 736 808 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.ProglangType:isArray()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:getEndLine()I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:lexLTE([I[I)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.ProglangType:baseIsScalar()Z
utilMDE.ArraysMDE:min([I)I
daikon.Quant:intersection([I[I)[I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:memberOf(D[F)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaCharStream:backup(I)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.ModBitTracker:split(I)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:isPointer()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.ProglangType:isFloat()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:setEqual([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:union([I[I)[I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eq(JJ)Z
daikon.Ppt:Ppt()V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.ModBitTracker:num_vars()I
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:internSubsequence([III)[I
daikon.PptName:isCombinedExitPoint()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.Invariant:getConfidence()D
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.Invariant:justified()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:setDiff([I[I)[I | ASSIGN | 154150 | = null
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:noDups([I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:max([I)I
daikon.Quant:memberOf(I[I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | RETURN | 14876 | return null
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.ProglangType:baseIsFloat()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus; | RETURN | 5040 | return null
daikon.ProglangType:isScalar()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eq(FF)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:Node()V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:gte(II)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.RootNode:RootNode()V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.ModBitTracker:num_sets()I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z | STATEMENT | 9323 | stmt -> ;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:gt(II)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:eltsGT([II)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.InvariantFormatTester:execute()Z
daikon.ProglangType:dimensions()I
daikon.Quant:eq(DD)Z
daikon.inv.Invariant:prob_is_ge(DD)D | CONSTANT | 6853 | 1 -> -1
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.test.FormatTestCase:passes()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:subsetOf([S[S)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.Invariants:Invariants()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:jml_name()Ljava.lang.String; | RETURN | 102411 | return null
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 24039 | return null
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.Invariant:prob_and(DD)D
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE:pow(II)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I | ASSIGN | 67827 | = null
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName:hashCode()I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:memberOf(J[J)Z
daikon.VarInfo:new_ppt()V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:memberOf(F[F)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName; | RETURN | 30246 | return null
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:eltsEqual([II)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.ArraysMDE:sum([[I)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.ValueTuple:size()I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
jtb.JavaCharStream:readChar()C
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | OPERATOR | 51862 | != -> <
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.ProglangType:isPointerFileRep()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:sameLength([I[I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:lexGT([I[I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z | STATEMENT | 149930 | stmt -> ;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:lt(II)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quant:isReverse([I[I)Z
daikon.Quant:eltwiseGT([I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61501 | = null
daikon.ProglangType:baseIsIntegral()Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.Invariant:logOn()Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I | CONSTANT | 65761 | 0 -> 1
utilMDE.Intern:intern([J)[J
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:lte(II)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Assert:assertTrue(Z)V
daikon.simplify.SimpUtil:formatInteger(J)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaCharStream:BeginToken()C
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.PptSlice1:arity()I
daikon.PptSlice2:arity()I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.PptSlice0:arity()I
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:concat([I[I)[I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1652 | = null
daikon.Quant:eq(II)Z
utilMDE.Intern:intern([D)[D
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptName:isEnterPoint()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:subsetOf([B[I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:memberOf(S[S)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.ModBitTracker:num_samples()I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.diff.InvMap:InvMap()V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexLT([I[I)Z | CONDITION | 170646 | if (x) -> if (!x)
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.WeakHasherMap:size()I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:slice([III)[I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
163 2 562 2 79 2 270 2 86 2 423 6 832 2 835 2 11 2 366 2 397 2 839 2 200 2 147 2 402 2 463 2 258 2 435 2 608 2 742 4 699 4 352 2 676 2 
163 8 463 4 431 6 69 2 270 8 608 5 440 2 554 4 742 12 611 2 423 14 86 4 501 4 11 8 806 6 397 4 839 4 
160 2 187 14 164 4 477 2 236 2 166 4 453 2 139 4 780 2 381 2 359 2 116 4 755 2 241 2 27 62 566 2 508 10 390 4 391 4 217 2 396 2 544 6 340 10 837 2 433 2 546 4 260 2 634 4 406 2 371 8 345 4 579 4 207 2 292 2 748 4 775 2 377 4 45 2 324 2 559 4 
480 2 83 2 245 2 277 2 761 2 222 2 517 2 206 2 818 2 524 2 
2 2 419 2 756 2 359 2 193 2 141 2 759 2 484 2 146 2 307 2 58 2 308 2 489 2 811 4 312 2 151 2 442 2 443 2 371 2 816 2 669 2 623 2 166 4 119 2 279 2 32 2 177 2 634 2 228 2 407 2 130 2 741 2 37 2 77 2 527 2 704 2 46 4 
163 32 79 2 270 32 239 2 680 4 240 4 81 2 7 2 243 4 86 16 423 53 567 2 362 4 832 4 784 6 11 32 712 4 366 18 806 6 397 16 839 16 737 6 463 16 431 6 605 2 694 6 608 22 229 6 553 6 742 48 554 4 717 8 699 6 19 4 670 4 747 4 751 2 501 4 22 2 
217 2 544 2 371 2 
449 2 451 2 225 2 466 2 768 2 443 2 361 2 301 2 640 10 424 2 586 2 305 2 711 22 306 2 
273 4 104 2 680 2 240 2 842 2 800 2 442 2 520 2 632 2 
845 2 671 2 264 2 94 2 421 2 673 2 540 2 852 6 50 2 56 6 90 6 
311 2 680 2 240 2 214 4 731 2 183 6 568 6 830 6 512 4 303 2 426 6 487 2 23 2 
135 4 48 2 163 16 560 2 79 4 69 4 270 16 680 6 240 6 137 2 423 28 86 10 85 8 567 2 832 6 11 16 366 8 397 10 461 4 308 2 839 10 463 10 35 2 608 12 229 8 742 26 699 10 670 6 233 2 531 8 
750 4 630 4 
524 2 
191 2 
328 2 
188 2 404 2 240 4 
1 2 294 2 80 2 296 2 8 2 653 2 299 2 538 2 197 2 10 1 425 4 198 1 541 2 427 2 542 2 656 2 762 2 12 2 13 2 428 2 660 2 661 2 309 4 429 2 663 2 437 2 97 5 16 16 771 2 203 2 666 1 100 2 667 2 102 8 209 4 672 3 210 1 109 2 778 2 563 2 112 3 680 32 331 2 26 2 333 2 118 2 334 2 782 2 687 2 689 2 121 2 785 1 123 6 220 2 124 16 341 2 464 2 576 2 695 2 343 2 128 1 36 16 468 2 469 2 580 2 584 4 588 24 703 2 702 2 234 1 797 6 240 34 594 2 358 6 140 8 244 2 52 2 481 1 597 2 710 3 143 1 248 2 55 2 364 1 253 2 600 3 252 4 367 2 809 4 604 1 812 4 368 3 607 24 62 12 150 2 149 2 814 3 262 1 153 2 612 3 613 2 263 2 372 3 154 2 155 2 494 2 156 2 819 2 498 2 617 2 158 2 619 16 620 2 268 2 622 3 376 4 625 32 505 2 159 2 162 2 825 3 725 8 506 2 271 1 727 1 272 1 730 2 384 1 169 1 834 2 172 2 631 32 281 2 399 2 739 2 178 2 75 2 841 2 518 3 409 3 842 2 844 2 289 2 412 2 521 2 846 2 850 2 853 6 646 12 
24 2 47 6 111 2 329 2 357 2 685 2 511 6 339 2 807 2 395 2 740 6 787 2 60 6 93 2 577 2 316 2 789 2 790 2 551 2 492 2 637 2 519 2 698 4 718 2 411 2 322 2 379 2 133 2 
135 2 194 2 746 2 719 2 721 2 242 1 371 2 38 2 
194 2 746 2 115 2 
194 2 746 2 645 2 
581 2 418 2 539 2 
194 2 746 2 
418 2 465 2 
746 2 344 2 
418 2 190 2 539 2 
249 2 539 2 167 2 
615 2 539 2 304 2 
714 2 539 2 677 2 
73 2 539 2 573 2 
418 2 833 2 
746 2 414 2 
249 2 275 2 
432 2 304 2 
582 2 677 2 
184 2 573 2 
418 2 71 2 
665 2 573 2 
3 2 677 2 
304 2 571 2 
249 2 708 2 
418 2 190 2 539 2 802 2 
256 2 418 2 190 2 539 2 802 2 
418 2 114 2 539 2 
418 2 495 2 539 2 
255 2 76 2 734 2 87 2 
754 2 450 2 327 4 356 2 227 2 436 2 549 2 467 2 231 4 297 2 510 2 363 2 760 2 41 2 587 2 122 2 711 6 221 2 
185 2 539 2 
735 2 474 2 721 2 371 2 
735 2 719 2 474 2 721 2 117 2 371 2 
135 2 165 2 
741 2 181 2 
135 2 721 2 371 2 838 2 
321 2 677 2 
758 2 573 2 
249 2 459 2 
696 2 304 2 
828 2 
34 2 304 2 573 2 
304 2 550 2 573 2 
304 2 475 2 573 2 
723 2 479 6 805 2 15 6 767 2 371 2 721 2 679 2 
418 2 556 2 
713 2 746 2 539 2 
746 2 145 2 
155 2 
420 4 650 2 82 2 296 2 8 2 197 2 425 4 427 2 541 2 762 2 661 2 660 2 91 2 663 2 437 2 203 2 100 2 209 2 102 2 105 2 109 2 563 2 680 26 333 2 118 2 783 2 688 2 785 4 123 6 220 6 576 2 468 2 470 4 791 2 584 2 132 2 702 2 589 2 44 2 797 2 240 26 358 4 52 2 244 2 55 2 486 2 364 2 252 4 367 2 809 4 812 2 62 8 150 2 154 2 156 2 494 2 819 2 619 6 266 2 376 4 625 4 162 2 827 2 506 2 727 2 831 2 834 2 631 6 399 2 75 4 842 2 522 2 850 2 415 2 853 2 646 8 
420 4 650 2 82 2 296 2 8 2 538 2 197 2 425 4 427 2 541 2 762 2 660 2 661 2 91 2 663 2 437 2 552 2 203 2 100 2 209 2 102 2 105 2 109 2 563 2 680 26 333 2 118 2 688 2 785 2 123 6 220 6 576 2 468 2 470 4 791 2 584 2 702 2 589 2 44 2 797 2 240 26 358 6 52 2 244 2 55 2 486 2 364 2 252 4 367 2 809 4 812 2 62 8 150 2 154 2 156 2 494 2 819 2 617 2 619 6 266 2 376 4 625 4 162 2 506 2 727 2 383 2 831 2 834 2 631 6 399 2 75 4 841 2 842 2 522 2 644 2 850 2 415 2 853 2 646 8 
598 2 
533 2 471 2 
753 2 238 4 94 2 434 2 422 2 709 2 182 2 385 2 583 2 774 2 291 2 540 2 89 2 56 2 254 4 90 2 108 2 66 2 
753 2 355 2 238 4 240 12 422 2 138 2 709 2 50 2 195 2 540 4 427 2 89 4 56 4 252 2 57 2 254 4 90 6 661 2 603 6 490 2 434 2 94 4 491 2 98 2 441 2 203 2 444 2 100 2 773 2 774 2 671 2 101 2 616 4 819 2 320 2 376 2 108 2 678 2 378 2 66 2 212 2 680 6 506 2 385 2 171 4 274 4 123 4 574 4 182 2 583 2 642 2 291 2 525 2 40 4 847 2 752 2 42 2 852 6 702 2 647 2 
753 2 355 2 238 4 421 2 240 12 422 2 138 2 709 2 50 2 195 2 540 4 427 2 89 4 56 6 252 2 57 2 254 4 90 4 661 2 603 6 490 2 434 2 94 4 491 2 98 2 441 2 203 2 444 2 100 2 773 2 774 2 101 2 616 4 819 2 320 2 376 2 108 2 678 2 378 2 66 2 212 2 680 6 506 2 385 2 171 4 274 4 123 4 574 4 182 2 583 2 642 2 291 2 525 2 40 4 847 2 752 2 42 2 852 6 702 2 647 2 
753 2 355 2 238 4 240 12 422 2 138 2 709 2 50 2 195 2 540 4 427 2 89 4 56 6 252 2 57 2 254 4 90 6 661 2 603 6 490 2 434 2 94 4 491 2 98 2 441 2 203 2 444 2 100 2 773 2 774 2 101 2 616 4 819 2 320 2 376 2 108 2 678 2 378 2 66 2 212 2 680 6 506 2 385 2 171 8 274 4 123 4 574 4 182 2 845 2 583 2 642 2 291 2 525 2 40 4 847 2 752 2 42 2 852 6 702 2 647 2 
753 2 355 2 238 4 421 2 240 12 422 2 138 2 709 2 50 2 195 2 540 4 427 2 89 4 56 8 252 2 57 2 254 4 90 6 661 2 603 10 490 2 434 2 94 4 491 2 98 2 441 2 203 2 444 2 100 2 773 2 774 2 101 2 616 4 819 2 320 2 376 2 108 2 678 2 378 2 66 2 212 2 680 6 506 2 385 2 171 8 274 4 123 4 574 8 182 2 845 2 583 2 642 2 291 2 525 2 40 4 847 2 752 2 42 2 852 8 702 2 647 2 
753 2 355 2 238 4 240 12 422 2 138 2 709 2 50 2 195 2 540 4 427 2 89 4 56 6 252 2 57 2 254 4 90 6 661 2 603 10 490 2 434 2 94 4 491 2 98 2 441 2 203 2 444 2 100 2 773 2 774 2 101 2 616 4 819 2 320 2 376 2 108 2 678 2 378 2 66 2 212 2 680 6 506 2 385 2 171 8 274 4 123 4 574 8 182 2 845 2 583 2 642 2 291 2 525 2 40 4 847 2 752 2 42 2 852 6 702 2 647 2 
753 2 532 2 421 4 422 2 191 2 652 2 8 2 195 2 197 2 425 4 540 4 427 2 89 4 762 2 90 4 660 2 661 2 92 2 545 2 94 4 434 2 547 2 664 2 663 4 437 2 98 2 441 2 444 2 203 2 100 2 773 2 668 2 774 2 102 2 209 2 101 2 320 2 555 2 678 2 108 2 110 2 563 2 680 20 328 2 332 2 333 2 781 2 120 4 688 2 28 2 220 6 123 6 31 2 576 2 226 2 470 4 347 2 791 2 583 2 584 2 40 8 794 2 700 2 701 2 702 2 705 2 797 2 355 2 238 4 49 4 240 32 358 6 50 4 709 2 142 2 55 2 599 2 56 8 252 4 57 2 254 4 490 2 809 4 812 2 491 2 62 4 152 2 154 2 156 2 616 4 819 2 617 2 265 2 619 6 266 2 374 2 824 2 376 4 625 2 378 2 66 2 162 2 380 2 506 2 385 2 171 2 274 6 834 2 276 2 631 8 175 2 399 2 404 2 403 2 841 2 842 2 843 2 182 2 522 2 642 2 291 2 525 2 847 2 850 2 752 2 852 12 853 2 646 4 647 2 
753 2 532 2 422 2 191 2 652 2 8 2 195 2 197 2 425 4 540 4 427 2 89 4 762 2 90 8 660 2 661 2 92 2 545 2 94 4 434 2 547 2 664 2 663 4 437 2 98 2 441 2 444 2 203 2 100 2 773 2 668 2 774 2 102 2 209 4 101 2 320 2 555 2 678 2 108 2 110 2 563 2 680 20 328 2 332 2 333 2 781 2 120 4 688 2 28 2 220 6 123 6 31 2 576 2 226 2 470 4 347 2 791 2 583 2 584 4 40 8 794 2 700 2 701 2 702 2 705 2 797 2 355 2 238 4 49 4 240 32 358 6 50 4 709 2 142 2 55 2 599 2 56 8 252 4 57 2 254 4 490 2 809 4 812 4 491 2 62 6 152 2 154 2 156 2 616 4 819 2 617 2 265 2 619 6 266 2 374 2 824 2 376 4 625 2 378 2 66 2 162 2 380 2 506 2 385 2 171 6 274 6 834 2 276 2 631 8 175 2 399 2 404 2 403 2 841 2 842 2 843 2 182 2 845 4 522 2 642 2 291 2 525 2 847 2 850 2 752 2 852 12 853 2 646 6 647 2 
753 2 532 2 422 2 191 2 652 2 8 2 195 2 197 2 425 4 540 4 427 2 89 4 762 2 90 8 661 2 660 2 92 2 545 2 94 4 434 2 547 2 664 2 663 4 437 2 98 2 441 2 444 2 203 2 100 2 773 2 668 2 774 2 102 2 209 4 101 2 320 2 555 2 678 2 108 2 110 2 563 2 680 20 328 2 332 2 333 2 781 2 120 4 688 2 28 2 220 6 123 6 31 2 574 4 576 2 226 2 470 4 347 2 791 2 583 2 584 4 40 8 794 2 700 2 701 2 702 2 705 2 797 2 355 2 238 4 49 4 240 32 358 6 50 4 709 2 142 2 55 2 599 2 56 8 252 4 57 2 254 4 603 4 490 2 809 4 812 4 491 2 62 6 152 2 154 2 156 2 616 4 819 2 617 2 265 2 619 6 266 2 374 2 824 2 376 4 625 2 378 2 66 2 162 2 380 2 506 2 385 2 171 6 274 6 834 2 276 2 631 8 175 2 399 2 404 2 403 2 841 2 842 2 843 2 182 2 845 4 522 2 642 2 291 2 525 2 847 2 850 2 752 2 852 12 853 2 646 6 647 2 
753 2 532 2 421 2 422 2 191 2 652 2 8 2 192 2 195 2 197 2 425 4 540 4 427 2 89 4 762 2 90 10 661 2 660 2 92 2 545 2 94 4 434 2 547 2 663 2 437 2 98 2 441 2 203 2 444 2 100 2 773 2 668 2 671 2 774 2 102 2 209 4 101 2 320 2 555 2 678 2 108 2 110 2 563 2 680 18 328 2 332 2 333 2 781 2 120 4 688 2 28 2 220 8 123 6 31 2 574 4 576 2 226 2 470 6 347 2 791 2 583 2 584 4 40 8 794 2 700 2 701 2 702 2 795 2 476 2 705 2 797 4 355 2 238 4 49 4 240 30 358 6 50 4 709 2 142 2 55 2 599 2 56 10 252 4 57 2 254 4 603 4 490 2 809 4 257 2 812 4 491 2 62 6 152 2 154 2 156 2 616 4 819 2 617 2 265 2 619 8 266 2 824 2 376 4 625 4 378 2 66 2 162 2 380 2 506 2 385 2 171 6 274 6 834 2 276 2 513 2 631 12 175 2 399 2 404 2 403 2 841 2 842 2 843 2 288 2 182 2 845 4 522 2 642 2 291 2 525 2 847 2 850 2 752 2 852 16 853 4 646 6 647 2 
753 2 238 2 240 4 50 2 709 2 171 6 274 2 540 4 56 6 254 2 90 6 603 4 574 4 490 2 434 2 94 4 98 2 441 2 444 2 773 2 182 2 845 2 774 2 616 2 101 2 40 2 525 2 847 2 752 2 320 2 852 4 378 2 678 2 108 2 66 2 
753 2 653 2 299 2 197 2 425 4 540 4 427 2 762 2 90 6 660 2 661 2 94 4 434 2 663 4 664 2 437 2 98 2 441 2 203 2 444 2 100 2 773 2 445 2 774 2 101 2 320 2 678 2 108 2 21 2 563 2 680 24 330 2 333 2 688 2 123 6 220 6 576 2 343 2 470 4 791 2 40 2 702 2 797 3 238 2 799 2 240 28 358 6 50 2 709 2 55 2 56 6 252 4 254 2 603 2 490 2 809 4 491 2 154 2 155 2 156 2 616 2 819 2 617 2 619 6 374 2 376 4 378 2 625 3 66 2 162 2 506 2 733 3 170 2 171 6 274 2 834 2 631 8 399 2 841 2 842 2 182 2 845 2 522 2 525 2 847 2 850 2 752 2 852 4 853 3 
753 2 355 2 238 4 240 12 422 2 138 2 709 2 50 2 195 2 540 4 427 2 89 4 56 6 252 2 57 2 254 4 90 6 661 2 603 10 490 2 434 2 94 4 491 2 98 2 441 2 203 2 444 2 100 2 773 2 774 2 101 2 616 4 819 2 320 2 376 2 108 2 678 2 378 2 66 2 212 2 680 6 506 2 385 2 171 8 274 4 123 4 574 8 182 2 845 2 583 2 642 2 291 2 525 2 40 4 847 2 752 2 42 2 852 6 702 2 647 2 
753 2 355 2 238 4 240 12 422 2 709 2 50 2 298 2 195 2 540 4 427 2 89 4 252 2 56 6 57 2 254 4 90 8 661 2 603 10 490 2 434 2 94 4 491 2 98 2 441 2 203 2 444 2 100 2 773 2 774 2 671 2 101 2 616 4 819 2 320 2 376 2 108 2 678 2 378 2 66 2 212 2 564 2 680 6 506 2 385 2 171 8 274 4 123 4 569 4 574 8 182 2 845 2 583 2 642 2 291 2 525 2 40 4 847 2 42 2 852 8 702 2 647 2 
392 2 378 2 490 2 
392 2 378 2 490 2 
295 2 421 4 8 4 195 2 197 2 425 4 427 2 540 4 89 4 90 12 660 2 661 2 434 2 94 4 664 2 663 4 437 2 202 2 98 2 769 2 203 2 100 2 774 4 671 4 209 4 555 2 678 2 776 2 563 2 680 16 333 2 684 2 686 2 688 6 785 2 123 6 220 2 29 2 574 4 576 2 791 2 584 4 40 4 700 2 42 2 353 2 702 2 355 2 136 2 238 2 49 2 240 24 358 6 801 2 50 4 142 2 55 2 252 4 56 12 57 4 254 2 603 6 490 4 809 4 812 4 62 4 261 2 152 2 370 2 154 2 614 2 156 2 819 2 616 2 617 2 619 2 376 4 504 4 378 6 625 2 66 2 161 2 162 2 506 2 729 2 385 2 171 6 274 4 629 2 392 2 834 2 836 2 631 2 173 4 399 2 841 2 842 2 845 4 413 2 522 2 642 2 291 2 850 2 415 4 852 16 646 4 
161 2 295 2 127 2 314 2 680 2 663 2 664 2 240 4 439 2 84 2 370 2 152 2 471 2 583 2 836 2 702 2 624 2 
295 2 421 4 8 4 195 2 197 2 425 4 427 2 540 4 89 4 90 12 660 2 661 2 434 2 94 4 663 2 437 2 202 4 98 2 769 2 203 2 100 2 774 4 671 4 209 4 555 2 675 2 557 2 678 2 212 2 563 2 680 16 333 2 686 2 688 6 123 6 220 2 29 2 574 4 576 2 791 2 584 4 40 4 700 2 42 2 353 2 702 2 355 2 238 2 49 2 240 24 358 6 801 2 50 4 142 2 144 2 55 2 252 4 56 12 57 4 254 2 602 2 603 6 490 4 809 4 812 4 62 4 261 2 152 2 370 2 154 2 614 2 156 2 616 2 819 2 617 2 619 2 376 4 504 4 378 6 625 4 66 2 162 2 506 2 385 2 171 6 274 4 629 2 392 2 834 2 836 2 631 2 173 4 399 2 841 2 842 2 845 4 413 2 522 2 642 4 291 2 850 2 415 4 528 2 852 16 646 4 
0 2 295 2 421 4 8 4 195 2 197 2 425 4 427 2 540 4 657 2 89 4 90 12 660 2 661 2 434 2 94 4 664 2 663 4 437 2 202 2 98 2 769 2 203 2 100 2 774 4 671 4 209 4 555 2 678 2 212 2 563 2 680 16 333 2 686 2 688 6 457 2 785 1 123 6 220 2 29 2 574 4 576 2 791 2 584 4 40 4 700 2 42 2 353 2 702 2 355 2 238 2 49 2 240 24 358 6 801 2 50 4 142 2 55 2 252 4 56 12 57 4 254 2 603 6 490 4 809 4 812 4 369 2 62 4 261 2 152 2 370 2 154 2 614 2 156 2 819 2 616 2 617 2 619 2 376 4 504 4 378 6 625 2 66 2 161 2 162 2 506 2 829 2 385 2 171 6 274 4 629 2 392 2 834 2 836 2 631 2 173 4 399 2 841 2 842 2 845 4 413 2 522 2 642 4 291 2 850 2 415 4 852 16 646 4 
417 2 649 2 650 2 189 16 651 2 4 4 6 12 8 4 192 2 423 16 196 4 197 2 654 2 425 20 655 2 427 2 11 8 199 2 658 2 659 5 661 2 660 6 662 2 663 2 201 2 438 2 437 2 16 4 203 2 17 2 204 2 205 3 445 2 670 4 208 4 674 2 446 2 20 2 21 2 211 2 22 2 447 2 25 2 680 52 681 2 452 2 454 16 682 2 683 2 455 2 216 4 688 2 458 2 220 14 219 2 692 2 460 2 30 10 31 2 462 2 463 4 33 2 224 2 226 2 229 6 230 2 36 4 470 12 232 4 43 6 44 2 702 2 476 2 235 24 706 12 707 2 478 4 240 64 51 2 482 2 246 2 247 2 483 2 54 4 250 2 55 2 486 2 252 4 488 2 59 4 257 2 715 4 61 14 259 2 62 24 63 2 64 10 500 2 499 6 502 2 720 2 266 46 503 2 67 3 68 2 269 2 270 8 726 2 70 6 728 2 506 2 727 2 507 4 732 2 733 2 509 4 278 2 280 1 513 2 72 2 738 2 283 2 515 2 516 2 284 2 74 2 285 2 286 3 742 12 743 2 744 2 288 2 523 2 290 2 526 2 749 3 529 4 534 2 535 18 82 2 81 4 757 2 86 4 300 2 536 2 302 2 88 2 543 2 762 2 763 2 91 14 764 4 310 2 92 2 546 2 765 2 313 2 545 2 95 16 315 2 96 2 548 4 317 2 318 2 99 4 554 4 770 2 772 10 100 2 102 20 103 4 319 2 105 2 107 4 558 2 323 12 559 2 777 2 325 2 563 4 113 4 330 2 332 4 565 2 333 2 785 2 123 6 338 2 337 4 570 2 786 2 342 2 126 2 575 4 788 2 576 6 129 2 578 2 345 2 791 2 349 2 792 2 348 14 793 2 585 4 351 2 589 2 795 2 590 2 797 16 798 2 358 38 595 2 803 2 804 2 364 2 599 2 365 16 601 2 806 6 366 4 809 18 810 2 148 2 608 6 813 2 609 4 610 2 815 3 817 2 154 2 156 4 820 2 819 2 617 4 157 10 618 4 821 2 619 14 822 6 621 2 373 2 377 2 376 4 375 2 823 14 625 19 626 2 162 2 163 8 380 2 382 2 627 2 387 14 386 2 389 2 388 12 170 2 831 2 391 2 393 2 834 2 631 28 394 2 397 4 174 2 398 2 399 2 176 2 839 4 633 2 840 2 841 4 179 16 405 2 842 4 636 2 180 2 638 2 639 2 641 2 643 2 851 10 850 2 416 2 853 19 186 2 646 26 648 4 
797 2 680 2 240 2 593 2 220 2 692 2 762 2 631 2 601 2 394 2 30 2 126 2 129 2 318 2 470 2 64 2 157 4 749 2 319 2 619 2 266 6 853 2 625 2 20 2 
797 2 680 2 240 2 593 2 220 2 692 2 762 2 631 2 601 2 394 2 30 2 126 2 129 2 318 2 470 2 64 2 157 4 749 2 319 2 619 2 266 6 853 2 625 2 20 2 
797 2 680 2 240 2 593 2 220 2 692 2 762 2 631 2 601 2 394 2 30 2 126 2 129 2 318 2 470 2 64 2 157 4 749 2 319 2 619 2 266 6 853 2 625 2 20 2 
67 3 796 4 163 2 326 4 270 2 478 2 680 4 240 10 596 2 86 2 423 5 168 2 628 2 9 2 690 2 11 2 251 4 762 2 631 2 572 2 397 2 514 3 125 2 839 2 463 2 229 4 716 2 16 2 742 4 36 2 287 2 205 3 39 4 670 2 319 2 848 4 499 6 354 2 853 3 625 3 
67 2 796 4 163 2 326 4 270 2 478 2 680 4 240 10 596 2 86 2 423 4 168 2 567 2 628 2 9 2 690 2 11 2 251 4 762 2 631 2 366 2 572 2 397 2 514 2 125 2 839 2 463 2 608 2 229 4 716 2 16 2 742 4 36 2 287 2 205 2 39 4 670 2 319 2 848 4 499 6 354 2 853 2 625 2 
67 2 796 4 163 2 326 4 270 2 478 2 680 4 240 10 596 2 86 2 423 4 168 2 567 2 628 2 9 2 690 2 11 2 251 4 762 2 631 2 366 2 572 2 397 2 514 2 125 2 839 2 463 2 608 2 229 4 716 2 16 2 742 4 36 2 287 2 205 2 39 4 670 2 319 2 848 4 499 6 354 2 853 2 625 2 
67 2 796 4 163 2 326 4 270 2 478 2 680 4 240 10 596 2 86 2 423 4 168 2 567 2 628 2 9 2 690 2 11 2 251 4 762 2 631 2 366 2 572 2 397 2 514 2 125 2 839 2 463 2 608 2 229 4 716 2 16 2 742 4 36 2 287 2 205 2 39 4 670 2 319 2 848 4 499 6 354 2 853 2 625 2 
67 2 796 4 163 2 326 4 270 2 478 2 680 4 240 10 596 2 86 2 423 4 168 2 567 4 628 2 9 2 690 2 11 2 251 4 762 2 631 2 366 4 572 2 397 2 514 2 125 2 839 2 463 2 608 4 229 4 716 2 16 2 742 4 36 2 287 2 205 2 39 4 670 2 319 2 848 4 499 6 354 2 853 2 625 2 
335 2 346 2 131 2 180 2 360 2 223 2 
448 2 213 2 237 2 5 2 485 2 360 2 91 2 
134 2 705 2 724 2 779 1 592 2 680 8 240 10 241 1 537 2 218 2 336 2 661 2 401 2 400 2 606 2 766 2 406 1 493 2 18 1 350 2 496 2 849 1 106 2 65 2 267 2 722 2 
163 6 561 2 534 2 270 6 680 2 826 2 240 2 243 2 423 15 86 6 567 2 389 2 11 6 806 4 366 2 397 6 398 2 839 6 463 6 59 2 608 4 405 2 229 4 553 4 742 12 554 2 410 2 717 2 669 2 472 2 670 2 78 2 
796 2 591 2 326 2 14 2 635 2 697 2 215 2 53 2 497 3 848 2 473 2 293 2 530 2 
796 2 591 2 326 2 680 1 14 2 240 1 635 2 408 2 697 2 456 2 215 2 53 2 497 6 848 2 473 4 293 2 693 1 530 2 
796 2 591 2 326 2 14 2 635 2 408 2 697 2 456 2 215 2 53 4 497 6 848 2 473 4 293 4 530 4 
796 2 591 2 326 2 680 1 14 2 240 1 635 2 408 6 697 2 456 8 215 2 53 8 497 10 848 2 473 4 293 8 693 1 530 8 
808 2 430 2 107 1 282 1 736 2 745 2 
430 2 808 2 745 2 736 2 
430 2 808 2 745 2 736 2 
430 2 808 2 745 2 736 2 
691 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 177 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V ERROR utilMDE.Assert$AssertionException (181,631) (18,76) 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException (51,350,539,599,637) (51,350,539,599,637) (51,350,539,599,637) (51,350,539,599,637) (51,350,539,599,637) 
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V FAILED junit.framework.AssertionFailedError 
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 762 762 165 (384,615) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 762 762 165 (384,615) (384,615) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 762 762 165 (384,615) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 38 522 276 265 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 257 
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 526 
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 568 103 613 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 470 158 683 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 470 158 683 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.PptSlice2:arity()I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eq(DD)Z
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:justified()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:slice([III)[I
daikon.Quant:eltsEqualIndex([I)Z
daikon.PptSlice0:arity()I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.ProglangType:isIntegral()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_and(DDD)D | OPERATOR | 8959 | <= -> ==
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
daikon.VarInfoName:hashCode()I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:ne(II)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:memberOf(D[F)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Intern:numIntArrays()I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([D[F)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaCharStream:readChar()C
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String; | RETURN | 2498 | return null
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.Invariants:Invariants()V
daikon.Quant:eltsLT([II)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:intersection([I[I)[I
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:eq(II)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Quant:lexGTE([I[I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | RETURN | 15328 | return null
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | STATEMENT | 22110 | stmt -> ;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | RETURN | 37622 | return null
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.Intern:intern([D)[D
daikon.VarInfoAux:hashCode()I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:BeginToken()C
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:eltsEqual([II)Z
daikon.PptSlice1:arity()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:subsetOf([S[S)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Ppt:Ppt()V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:setEqual([I[I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLTE([II)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:lexGT([I[I)Z
utilMDE.Intern:intern([J)[J
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:lt(II)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.Invariant:logOn()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.Invariant:prob_or(DD)D
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eq(FF)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:memberOf(F[F)Z
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfo:relate_var()V
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:memberOf(I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:gte(II)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:noDups([I)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:concat([I[I)[I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltsNotEqualIndex([I)Z | CONSTANT | 177979 | 0 -> 1
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:isReverse([I[I)Z
jtb.JavaCharStream:getEndLine()I
jtb.JavaCharStream:getEndColumn()I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd(JJ)J
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.FormatTestCase:passes()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I | CONSTANT | 14018 | 108 -> 109
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Debug:logOn()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:lte(II)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:lexEqual([I[I)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple; | RETURN | 10267 | return null
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V | ASSIGN | 10356 | = null
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 2258 | return null
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Intern:intern([I)[I
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE:pow(II)I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:max([I)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaCharStream:backup(I)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE:min([I)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:memberOf(J[J)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.ProglangType:isArray()Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 127540 | = null
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:gt(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | STATEMENT | 5655 | stmt -> ;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:union([I[I)[I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.ProglangType:dimensions()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:jj_3_16()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakHasherMap:processQueue()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:lexLTE([I[I)Z | CONDITION | 171995 | if (x) -> if (!x)

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
441 2 443 6 490 2 312 2 617 2 744 2 745 2 567 4 571 2 271 2 356 2 122 2 95 2 753 2 126 2 729 2 667 2 39 2 552 2 668 2 531 2 703 4 557 2 
356 5 441 4 443 14 729 8 1 2 667 8 39 8 716 6 19 2 325 6 744 4 745 4 567 12 621 4 571 4 42 4 440 2 
177 2 627 2 286 2 204 6 444 2 409 2 642 2 492 2 313 4 616 2 337 2 60 2 306 2 459 2 159 2 213 2 
393 2 189 2 25 2 138 2 521 2 336 2 499 2 646 2 460 2 391 2 
287 2 137 2 190 2 463 2 714 2 560 2 472 2 661 2 200 2 202 2 382 2 476 2 725 2 726 2 628 2 155 2 732 4 631 4 630 2 580 2 485 2 215 2 396 4 263 2 445 2 447 2 113 4 313 2 170 2 116 2 743 2 597 2 502 2 35 2 360 2 181 4 320 2 553 2 277 2 41 2 128 2 456 2 607 2 517 4 
441 16 371 4 488 4 443 53 334 4 312 18 195 8 338 6 716 6 688 2 617 4 690 6 744 16 745 16 567 48 172 2 571 16 621 4 245 2 356 22 696 4 729 32 181 4 731 6 39 32 667 32 482 4 552 2 631 4 104 2 582 6 412 2 77 2 325 6 253 4 703 6 80 6 42 4 392 2 
177 2 313 2 616 2 
136 2 137 2 112 10 429 2 352 2 430 2 508 2 234 2 484 2 512 2 434 2 10 2 438 22 586 2 
760 2 711 2 181 2 455 4 327 2 377 2 631 2 660 2 553 2 
623 2 191 2 37 6 506 2 544 2 211 2 281 6 280 2 762 2 222 2 421 6 
273 2 574 4 181 2 231 6 56 4 631 2 411 6 379 2 652 2 90 6 720 6 210 2 236 2 
441 10 708 2 443 28 28 2 334 6 312 8 354 2 688 2 617 6 117 8 744 10 567 26 745 10 571 10 356 12 729 16 73 4 181 6 39 16 667 16 552 4 631 6 59 2 582 8 485 2 19 4 703 10 367 4 707 2 164 8 
300 4 275 6 
499 2 
374 2 
139 2 631 2 
226 2 76 2 18 2 631 4 
658 2 188 2 559 6 561 2 2 2 563 2 194 2 468 2 94 1 11 2 12 2 13 1 99 2 205 1 16 1 578 2 208 1 486 1 23 2 677 1 397 2 680 1 681 6 111 2 687 4 689 5 317 4 32 2 318 1 599 2 227 2 229 2 132 1 516 1 711 2 43 1 519 2 612 2 45 4 47 1 618 2 48 2 420 2 51 2 527 2 728 1 629 2 730 2 249 2 631 28 632 1 160 1 162 4 534 2 535 2 637 2 539 2 66 2 350 2 351 1 643 1 546 6 746 2 69 2 551 2 181 26 274 6 363 1 364 1 183 2 648 8 556 2 78 2 79 4 
285 2 332 2 466 6 467 6 335 2 718 2 417 2 380 6 340 2 418 4 290 2 620 2 419 4 383 2 474 2 475 6 152 6 480 6 483 6 58 2 734 2 735 2 63 2 214 6 390 2 106 2 487 2 217 6 638 4 262 6 540 2 348 2 588 2 542 6 219 4 494 6 685 6 742 2 353 2 496 2 449 2 547 2 450 2 70 2 452 2 175 8 34 2 357 2 548 28 503 2 602 6 603 6 757 2 702 6 129 28 654 6 706 2 186 28 369 2 134 2 187 4 
179 1 180 2 73 2 426 2 192 2 427 2 313 2 86 2 
192 2 301 2 427 2 
131 2 192 2 427 2 
98 2 307 2 465 2 
192 2 427 2 
266 2 98 2 
192 2 173 2 
555 2 98 2 307 2 
307 2 536 2 439 2 
701 2 307 2 44 2 
307 2 575 2 401 2 
88 2 307 2 341 2 
717 2 98 2 
464 2 192 2 
439 2 207 2 
701 2 656 2 
575 2 529 2 
341 2 256 2 
65 2 98 2 
341 2 22 2 
345 2 575 2 
701 2 321 2 
439 2 537 2 
555 2 98 2 307 2 592 2 
555 2 98 2 307 2 212 2 592 2 
96 2 98 2 307 2 
98 2 307 2 698 2 
310 2 700 2 763 2 283 2 
272 2 125 2 109 2 14 4 504 2 15 4 741 2 554 2 581 2 686 2 402 2 669 2 197 2 764 2 389 2 438 6 107 2 692 2 
307 2 182 2 
453 2 365 2 313 2 86 2 
453 2 710 2 365 2 426 2 313 2 86 2 
73 2 83 2 192 2 427 2 313 2 86 2 
472 2 451 2 
73 2 64 2 313 2 86 2 
533 2 575 2 
341 2 398 2 
163 2 439 2 
701 2 316 2 
701 2 341 2 30 2 
765 2 
701 2 341 2 333 2 
701 2 199 2 341 2 
678 6 313 2 168 2 5 6 86 2 243 2 662 2 157 2 
98 2 425 2 
8 2 307 2 192 2 
461 2 
99 2 
658 6 188 2 559 4 561 2 2 2 563 2 659 2 468 2 6 2 663 2 94 2 664 2 12 2 665 2 205 2 666 2 299 2 100 2 302 2 578 2 386 4 102 2 304 4 583 2 671 2 585 2 23 2 491 2 110 2 397 2 681 2 111 2 114 2 315 2 687 4 317 4 32 2 501 2 319 2 229 2 510 2 604 2 135 2 610 2 711 2 715 4 414 2 521 1 46 8 141 1 618 2 48 2 420 2 246 2 154 2 631 26 733 2 162 4 535 2 66 2 639 2 68 2 267 2 546 2 746 2 69 6 646 1 358 2 551 2 181 26 274 6 183 6 648 4 650 2 556 2 185 1 78 2 79 4 
658 6 188 2 559 5 561 2 2 2 563 2 194 1 659 2 468 2 6 2 89 2 663 2 94 2 664 2 12 2 665 2 205 2 666 2 299 2 100 2 578 2 386 4 102 2 304 4 583 2 671 2 585 2 23 2 491 2 110 2 397 2 681 2 111 2 114 2 315 2 687 4 317 4 32 2 501 2 319 2 229 2 230 2 604 2 135 2 610 2 711 2 715 4 46 8 147 2 618 2 149 2 48 2 420 2 246 2 154 2 249 1 631 26 733 2 162 4 535 2 66 2 639 2 68 2 267 2 546 2 746 2 69 6 358 2 551 2 181 26 274 6 183 6 648 4 650 2 556 2 78 2 79 4 
167 2 
697 2 569 2 
682 2 342 2 413 2 
682 2 342 2 413 2 
370 2 658 2 188 2 82 2 559 6 191 4 561 2 2 2 563 2 194 2 468 2 6 4 664 4 12 2 296 2 297 2 17 2 578 2 23 2 491 2 24 2 110 2 397 2 111 2 687 4 593 2 691 2 317 4 596 2 223 2 32 2 403 2 121 2 229 2 407 2 37 8 506 4 604 2 611 2 711 2 712 2 413 2 241 2 46 4 615 2 142 2 618 2 48 2 420 2 421 8 342 2 151 2 625 2 626 2 54 2 154 4 249 2 631 24 162 4 255 4 535 2 261 2 66 2 165 2 267 2 544 4 746 2 69 2 749 2 750 6 358 4 751 2 551 4 181 16 274 6 361 2 183 2 648 2 556 2 78 2 281 8 79 4 762 4 
151 2 370 2 82 2 66 2 54 2 611 2 752 2 551 2 349 2 181 2 640 2 17 2 631 4 355 2 133 2 569 2 381 2 
658 2 188 2 82 2 559 6 191 4 561 2 2 2 563 2 194 2 468 2 6 4 664 4 12 2 296 2 297 2 384 2 578 2 23 2 491 2 24 2 110 2 397 2 111 2 687 4 593 2 691 4 317 4 596 2 223 2 32 2 403 2 121 2 229 2 407 2 37 8 506 4 604 2 711 2 712 2 413 2 241 2 46 4 615 2 142 2 618 2 48 2 342 2 420 2 421 8 151 2 625 2 626 2 154 4 249 2 631 20 162 4 255 4 535 2 261 2 66 2 165 2 267 2 544 4 746 2 69 2 749 2 750 6 358 4 72 2 751 2 551 2 181 14 274 6 361 2 183 2 648 4 556 2 78 2 281 8 79 4 762 4 
370 2 658 2 188 2 82 2 559 6 191 4 561 2 2 2 563 2 194 2 468 2 6 4 664 4 12 2 296 2 297 2 17 2 578 2 23 2 491 2 24 2 110 2 397 2 111 2 687 4 593 2 691 2 317 4 596 2 223 2 32 2 403 2 121 2 229 2 407 2 37 8 506 4 604 2 611 2 711 2 712 2 413 2 241 2 46 4 615 2 142 2 618 2 48 2 420 2 421 8 342 2 151 2 625 2 626 2 54 2 154 4 249 2 631 24 162 4 255 4 535 2 261 2 66 2 165 2 267 2 544 4 746 2 69 2 749 2 750 6 358 4 751 2 551 4 181 16 274 6 361 2 183 2 648 2 556 2 78 2 281 8 79 4 762 4 
658 12 373 2 462 2 0 2 558 2 559 4 561 2 563 2 193 6 194 2 659 2 468 2 85 2 469 2 566 2 471 2 9 2 198 2 567 4 571 2 292 2 12 2 295 2 203 2 572 2 299 2 667 2 577 2 386 6 583 4 670 2 305 2 308 2 672 3 674 2 23 2 309 2 218 2 110 2 589 2 397 2 681 5 312 2 221 2 687 2 317 4 498 2 32 2 500 6 600 2 404 2 694 2 229 2 405 2 601 2 408 2 38 2 39 2 323 2 40 2 511 2 324 2 513 2 326 2 610 4 711 2 331 2 416 2 46 6 522 2 716 4 721 2 618 2 48 2 621 2 420 2 528 6 729 2 153 2 156 2 249 2 631 28 433 2 251 2 435 2 254 2 162 4 635 2 535 2 258 2 441 2 738 2 66 2 443 5 442 2 541 2 265 2 644 1 267 2 645 2 546 5 744 2 745 2 746 2 172 2 69 8 356 2 454 2 551 2 181 22 754 2 274 6 649 2 276 2 183 8 648 5 457 4 651 2 556 2 761 2 655 2 78 2 79 2 368 2 
636 2 658 2 489 2 681 3 493 2 659 2 546 3 91 2 201 4 69 2 33 2 622 3 228 2 477 2 695 2 181 2 631 2 183 2 386 2 648 3 101 2 583 6 252 2 675 2 
636 2 658 2 489 2 681 2 493 2 659 2 546 2 91 2 201 4 69 2 33 2 622 2 228 2 477 2 695 2 181 2 631 2 183 2 386 2 648 2 101 2 583 6 252 2 675 2 
636 2 658 2 489 2 681 2 493 2 659 2 546 2 91 2 201 4 69 2 33 2 622 2 228 2 477 2 695 2 181 2 631 2 183 2 386 2 648 2 101 2 583 6 252 2 675 2 
441 2 538 2 328 2 658 2 443 5 562 2 334 2 591 2 684 2 659 2 543 4 115 2 545 4 171 2 546 3 722 4 744 2 745 2 567 4 619 2 570 3 571 2 693 6 174 4 225 3 248 3 549 2 695 2 53 2 729 2 181 4 127 2 667 2 39 2 631 10 648 3 582 4 633 4 705 2 657 2 
328 2 658 2 562 2 334 2 659 2 722 4 567 4 619 2 570 2 571 2 248 2 53 2 729 2 667 2 631 10 582 4 633 4 538 2 441 2 443 4 684 2 591 2 312 2 543 4 115 2 688 2 545 4 171 2 546 2 744 2 745 2 693 6 174 4 225 2 356 2 695 2 549 2 181 4 127 2 39 2 648 2 705 2 657 2 
328 2 658 2 562 2 334 2 659 2 722 4 567 4 619 2 570 2 571 2 248 2 53 2 729 2 667 2 631 10 582 4 633 4 538 2 441 2 443 4 684 2 591 2 312 2 543 4 115 2 688 2 545 4 171 2 546 2 744 2 745 2 693 6 174 4 225 2 356 2 695 2 549 2 181 4 127 2 39 2 648 2 705 2 657 2 
328 2 658 2 562 2 334 2 659 2 722 4 567 4 619 2 570 2 571 2 248 2 53 2 729 2 667 2 631 10 582 4 633 4 538 2 441 2 443 4 684 2 591 2 312 2 543 4 115 2 688 2 545 4 171 2 546 2 744 2 745 2 693 6 174 4 225 2 356 2 695 2 549 2 181 4 127 2 39 2 648 2 705 2 657 2 
328 2 658 2 562 2 334 2 659 2 722 4 567 4 619 2 570 2 571 2 248 2 53 2 729 2 667 2 631 10 582 4 633 4 538 2 441 2 443 4 684 2 591 2 312 4 543 4 115 2 688 4 545 4 171 2 546 2 744 2 745 2 693 6 174 4 225 2 356 4 695 2 549 2 181 4 127 2 39 2 648 2 705 2 657 2 
247 2 723 2 498 2 250 2 257 2 676 2 
209 2 268 2 723 2 704 2 299 2 428 2 526 2 
123 2 286 1 627 1 108 2 36 1 181 2 613 2 564 1 631 2 87 2 103 2 339 1 568 2 48 2 598 2 
441 5 738 2 488 2 443 12 463 2 375 2 334 2 312 6 195 2 716 3 688 4 744 5 200 2 567 11 745 5 92 2 172 1 621 2 571 5 245 1 356 6 454 2 729 6 181 6 731 4 647 2 39 6 667 6 631 6 759 2 582 4 655 2 
709 2 727 1 181 1 26 2 166 2 264 4 631 1 614 2 722 2 130 2 633 2 634 7 62 2 437 2 224 2 608 2 293 2 174 2 
709 2 26 4 166 2 264 4 614 2 722 2 130 4 633 2 62 2 634 6 437 4 224 2 608 2 293 2 174 2 
709 2 727 1 181 1 26 8 166 2 264 4 631 1 614 6 722 2 130 8 633 2 62 8 634 10 437 8 224 2 608 2 293 2 174 2 
709 2 26 2 166 2 264 2 722 2 130 2 633 2 634 2 437 2 224 2 608 2 293 2 174 2 
372 2 559 36 563 2 194 2 288 2 4 2 565 2 196 2 7 4 470 2 289 10 378 1 291 2 573 2 481 2 385 6 576 6 579 4 105 6 388 2 584 6 20 4 21 2 395 2 587 4 679 8 683 2 311 2 314 2 400 2 220 2 687 18 495 2 594 2 29 4 497 2 124 2 406 2 232 2 322 2 233 2 505 2 699 2 235 4 606 8 514 2 609 2 518 2 239 2 329 2 713 2 520 2 415 2 242 2 524 16 146 2 525 2 244 2 148 7 50 2 343 2 346 4 249 2 631 44 431 8 432 2 158 2 260 2 737 2 67 6 446 2 740 2 448 2 746 4 747 2 71 2 178 3 359 4 550 6 181 40 75 2 278 4 279 2 556 4 653 2 366 2 79 20 
239 2 559 36 330 4 563 2 194 8 565 2 7 2 470 2 144 2 289 8 523 2 524 14 148 2 724 4 422 4 624 10 344 4 573 2 479 2 298 2 55 2 481 2 206 2 249 8 631 28 303 2 579 10 158 2 532 6 436 4 20 2 21 2 259 2 260 2 347 4 587 6 27 2 590 2 683 2 641 2 400 2 220 2 687 14 269 2 29 6 595 2 746 2 31 4 71 2 178 2 359 6 550 2 181 26 75 2 507 4 410 2 278 2 184 2 556 2 514 6 79 14 81 2 
372 2 239 2 238 2 329 2 559 33 713 4 330 2 520 2 563 4 288 2 194 5 84 2 140 2 242 2 7 2 143 2 470 2 523 2 289 14 524 4 244 2 148 4 724 2 343 2 624 2 344 2 346 2 573 2 479 1 55 2 385 4 249 5 206 2 631 38 579 6 432 2 158 2 105 4 532 2 436 2 20 4 21 2 260 2 395 2 737 2 587 4 590 1 683 2 740 2 314 2 448 2 400 2 220 2 594 2 687 16 495 2 29 4 746 6 31 2 497 2 176 2 71 2 178 2 359 4 550 4 406 2 181 34 75 2 232 2 322 2 505 2 233 2 507 2 699 2 278 2 556 6 235 4 514 1 79 18 609 2 
284 2 239 2 559 48 240 4 330 2 563 2 3 6 194 6 376 2 565 2 7 2 196 2 470 2 289 6 719 2 524 36 145 2 148 2 93 2 473 2 150 4 49 2 724 2 423 2 294 2 97 2 52 2 344 2 478 2 573 2 424 4 481 2 57 2 576 2 249 6 631 46 530 2 158 2 532 6 387 2 436 2 61 2 584 2 161 2 673 2 20 2 21 2 736 2 216 2 260 2 394 2 587 4 739 2 27 2 67 2 683 2 399 2 400 2 169 2 220 2 687 20 29 4 118 2 119 2 746 2 31 2 270 2 748 2 71 2 359 4 550 2 124 2 74 2 181 44 75 2 755 2 756 2 507 2 362 2 410 2 509 2 605 2 278 2 758 4 458 2 556 2 79 20 515 2 282 2 237 2 81 2 
120 2 

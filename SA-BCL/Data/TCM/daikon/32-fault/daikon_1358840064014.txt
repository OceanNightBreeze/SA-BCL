#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException (120,614) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.Error 479 61 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (140,158,340,394,426) (140,158,340,394,426) (140,158,340,394,426) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 98 373 96 555 325 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (39,235) 493 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (441,662) (441,662) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.Error 497 558 640 59 3 629 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (455,653) (455,653) 132 476 8 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 132 476 8 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 132 476 8 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 145 8 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2586 | = null
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isIntegral()Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:subsetOf([D[D)Z
daikon.inv.Invariant:justified()Z
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:lexGTE([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:eltsLTE([II)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.ProglangType:isScalar()Z
utilMDE.ArraysMDE:min([I)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.PptSlice2:arity()I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:union([I[I)[I
daikon.Quant:memberOf(D[F)Z
utilMDE.MathMDE:modulus([I)[I
daikon.ModBitTracker:num_vars()I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.Invariant:logOn()Z
utilMDE.MathMDE:pow(II)I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | OPERATOR | 52438 | != -> >=
daikon.inv.Invariant:logDetail()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:eltsNotEqual([II)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107878 | = null
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:eq(II)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.MathMDE:sign(I)I
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.WeakHasherMap:size()I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:lexGT([I[I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:noDups([I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[F)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.Invariant:getConfidence()D
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:ne(II)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseLT([I)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGT([I)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:isReverse([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfo:new_ppt()V
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 19680 | = null
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaCharStream:FillBuff()V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.Intern:numIntArrays()I
daikon.diff.Node:Node()V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:size()I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V | ASSIGN | 1742 | = null
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 3479 | = null
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object; | RETURN | 76740 | return null
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName:hashCode()I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName; | RETURN | 62448 | return null
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.Invariant:prob_and(DD)D
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:eq(DD)Z
daikon.ModBitTracker:num_sets()I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:slice([III)[I | CONDITION | 160611 | if (x) -> if (!x)
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:negate(I)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf([F[D)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.ProglangType:format()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfo:relate_var()V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:memberOf(F[F)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.RootNode:RootNode()V
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 22960 | = null
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.Intern:intern([I)[I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6369 | = null
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:subsetOf([D[F)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 17104 | = null
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.PptSlice0:arity()I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:memberOf(S[S)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.ProglangType:isArray()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:gt(II)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.ArraysMDE:max([I)I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 21839 | = null
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:eq(JJ)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I | ASSIGN | 71159 | = null
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Intern:intern([J)[J
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.Invariants:Invariants()V
daikon.Quant:subsetOf([S[S)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.InvariantFormatTester:execute()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:setDiff([I[I)[I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Assert:assertTrue(Z)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:lt(II)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 183341 | = null
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Quant:memberOf(F[D)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Debug:logOn()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:sameLength([I[I)Z
daikon.Debug:logDetail()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:concat([I[I)[I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:lte(II)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:eq(FF)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.PptSlice1:arity()I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:gte(II)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:intersection([I[I)[I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
427 4 352 2 584 2 455 2 44 2 184 2 653 2 93 2 185 2 
445 6 85 2 536 2 540 2 153 2 531 2 506 2 167 2 391 2 490 6 623 6 
10 6 119 2 633 6 450 2 466 4 413 2 653 2 652 6 114 2 83 6 455 2 106 4 533 2 
451 10 173 12 710 2 350 2 49 8 455 4 541 6 97 5 645 2 519 2 542 6 460 2 135 8 742 4 618 5 120 2 465 6 653 4 267 2 191 4 343 4 18 2 701 4 62 5 393 6 
286 4 400 6 
554 2 
212 2 560 2 4 2 515 2 613 2 614 2 454 2 455 2 667 2 184 2 279 2 228 2 357 2 412 2 469 2 56 2 58 2 104 2 577 2 731 2 235 2 733 2 63 4 22 2 25 2 489 2 432 4 431 2 252 4 743 2 336 2 120 2 383 2 653 2 37 2 161 2 270 2 39 2 749 2 551 2 168 2 702 2 
618 4 239 4 451 4 173 5 653 4 685 8 70 4 715 2 191 4 455 4 343 2 97 4 542 4 62 4 544 2 
39 2 354 2 1 2 
464 2 718 2 21 2 594 2 35 2 636 2 638 2 588 2 38 2 627 10 739 2 148 22 235 2 31 2 
258 2 150 2 103 2 314 2 290 2 675 2 295 2 670 2 335 2 
618 4 451 12 720 6 173 14 188 4 180 6 666 4 191 4 748 2 49 8 225 2 97 4 645 2 542 5 62 4 135 8 393 8 
444 4 66 2 243 4 485 4 69 2 1 2 288 2 117 4 452 62 429 10 354 6 223 4 199 4 333 4 252 4 52 4 741 2 616 2 256 2 412 2 11 2 186 2 33 2 359 4 13 2 79 2 699 4 187 4 204 14 104 4 438 2 387 2 283 2 39 8 234 2 146 2 628 2 370 2 481 10 631 2 
327 2 242 2 639 2 503 2 574 2 249 2 293 2 61 2 479 2 554 2 
447 2 605 2 609 2 398 2 610 2 45 2 175 2 403 2 352 2 353 4 455 22 134 2 317 2 456 2 671 2 463 2 140 2 620 4 321 1 57 2 414 2 230 2 16 2 60 2 324 2 678 1 477 2 679 6 192 2 484 1 111 2 486 2 684 2 330 2 491 2 641 6 591 2 257 2 158 2 595 2 76 2 653 20 340 2 268 1 342 4 86 4 344 2 
455 2 698 2 
23 2 455 4 365 2 
174 2 
661 2 325 2 304 6 284 2 373 2 565 6 402 2 569 2 96 2 318 2 98 2 410 2 461 2 499 2 100 2 281 6 361 2 727 2 575 2 600 2 555 2 236 2 
308 2 127 2 502 1 681 2 
127 2 339 2 
265 2 493 2 559 2 39 2 751 2 127 2 350 2 
265 2 384 2 127 2 
265 2 642 2 127 2 
214 2 172 2 681 2 
265 2 127 2 
160 2 172 2 
102 2 127 2 
121 2 172 2 681 2 
734 2 90 2 681 2 
504 2 17 2 681 2 
695 2 719 2 681 2 
658 2 147 2 681 2 
224 2 172 2 
127 2 218 2 
734 2 195 2 
504 2 238 2 
719 2 208 2 
700 2 658 2 
77 2 172 2 
42 2 658 2 
719 2 82 2 
504 2 745 2 
425 2 734 2 
121 2 172 2 109 2 681 2 
483 2 121 2 172 2 109 2 681 2 
0 2 172 2 681 2 
126 2 172 2 681 2 
176 2 736 2 30 2 647 2 
713 2 493 2 198 2 39 2 
713 2 64 2 493 2 559 2 198 2 39 2 
265 2 493 2 39 2 646 2 127 2 350 2 
383 2 154 2 
493 2 382 2 39 2 184 2 
138 2 719 2 
24 2 658 2 
734 2 511 2 
504 2 55 2 
504 2 428 2 658 2 
504 2 658 2 231 2 
504 2 152 2 658 2 
504 2 658 2 51 2 
110 2 662 6 151 2 493 2 441 2 39 2 
266 2 172 2 
717 2 65 2 157 2 470 2 585 2 724 2 621 2 474 2 163 4 492 2 568 2 368 4 442 2 433 2 40 2 390 2 148 6 669 2 
371 2 681 2 
684 2 
660 5 447 2 557 2 171 2 175 2 566 2 663 2 352 2 353 4 455 26 456 2 668 2 671 2 463 2 12 8 471 2 16 6 677 2 578 2 679 6 192 2 486 2 287 2 375 2 488 2 377 3 378 3 491 2 379 2 687 2 498 2 595 2 299 2 300 2 207 3 211 2 605 2 609 2 398 2 306 4 610 2 45 6 403 2 714 2 315 2 408 4 317 2 134 2 518 2 227 2 620 4 57 6 416 2 230 2 417 2 726 2 419 2 324 2 529 4 68 2 535 2 330 2 641 4 253 2 257 2 648 2 260 2 76 2 651 2 653 26 342 4 86 4 169 2 91 2 
660 4 447 2 557 2 171 2 175 2 566 2 663 2 352 2 353 4 455 26 456 2 668 2 671 2 463 2 12 8 471 2 16 6 477 1 578 2 679 6 192 2 486 2 287 2 375 2 488 2 377 2 378 2 491 2 379 2 687 2 498 2 595 2 299 2 207 2 392 2 211 2 604 2 605 2 609 2 398 2 306 4 610 2 45 6 403 2 714 2 315 2 408 4 317 2 134 2 518 2 227 2 620 4 522 2 57 6 414 1 416 2 230 2 417 2 726 2 324 2 529 4 68 2 535 2 330 2 641 5 253 2 257 2 648 2 260 2 76 2 651 2 653 26 436 2 342 4 86 4 169 2 91 2 
289 2 
424 2 590 2 
209 2 445 6 305 2 396 4 508 2 609 2 307 2 562 2 312 8 178 8 453 4 48 2 182 2 455 12 133 2 317 2 456 2 672 2 620 2 723 2 722 2 473 2 142 2 623 6 366 10 475 2 422 2 580 2 679 4 478 2 531 2 534 2 20 2 486 2 635 2 330 2 490 6 115 2 686 2 291 4 294 2 540 4 688 2 380 4 257 2 696 2 337 4 595 2 434 2 202 2 203 2 338 2 653 6 262 2 85 4 388 2 86 2 657 4 274 2 391 2 
209 2 445 8 396 4 508 2 609 2 307 2 312 8 178 8 48 2 453 4 182 2 455 12 133 2 317 2 456 2 53 2 672 2 620 2 723 2 722 2 473 2 142 2 623 6 366 10 475 2 422 2 729 2 580 2 679 4 478 2 531 2 534 2 20 2 486 2 635 2 330 2 490 8 115 2 686 2 291 4 294 2 540 4 688 2 153 2 380 4 257 2 696 2 337 4 595 2 434 2 202 2 203 2 338 2 653 6 80 4 262 2 85 4 388 2 86 2 657 4 274 2 391 2 
20 2 445 2 696 2 307 2 338 2 722 2 473 2 623 2 115 2 686 2 291 4 453 4 85 2 182 2 388 2 540 2 657 2 274 2 
209 2 445 6 305 2 396 4 508 2 609 2 307 2 562 2 312 4 178 4 453 4 48 2 182 2 455 12 133 2 317 2 456 2 672 2 620 2 723 2 722 2 473 2 142 2 623 4 366 6 475 2 422 2 580 2 679 4 478 2 531 2 534 2 20 2 486 2 635 2 330 2 490 6 115 2 686 2 291 4 294 2 540 4 688 2 153 2 380 4 257 2 696 2 337 4 595 2 434 2 202 2 203 2 338 2 653 6 262 2 85 4 388 2 86 2 657 4 274 2 
209 2 445 4 305 2 396 4 508 2 609 2 307 2 562 2 312 4 178 4 453 4 48 2 182 2 455 12 133 2 317 2 456 2 672 2 620 2 723 2 722 2 473 2 142 2 623 6 366 6 475 2 422 2 580 2 679 4 478 2 531 2 534 2 20 2 536 2 486 2 635 2 330 2 490 6 115 2 686 2 291 4 294 2 540 4 688 2 380 4 257 2 696 2 337 4 595 2 434 2 202 2 203 2 338 2 653 6 262 2 85 4 388 2 86 2 657 4 274 2 
209 2 445 6 305 2 396 4 508 2 609 2 307 2 562 2 312 8 178 4 453 4 48 2 182 2 455 12 133 2 317 2 456 2 672 2 620 2 723 2 722 2 473 2 142 2 623 6 366 6 475 2 422 2 580 2 679 4 478 2 531 2 534 2 20 2 486 2 635 2 330 2 490 6 115 2 686 2 291 4 294 2 540 4 688 2 380 4 257 2 696 2 337 4 595 2 434 2 202 2 203 2 338 2 653 6 262 2 85 4 388 2 86 2 657 4 274 2 391 2 
209 2 445 6 305 2 396 4 508 2 609 2 307 2 562 2 312 8 178 8 453 4 48 2 182 2 455 12 133 2 317 2 456 2 672 2 620 2 723 2 722 2 473 2 142 2 623 8 366 10 475 2 422 2 580 2 679 4 478 2 531 2 534 2 20 2 536 2 486 2 635 2 330 2 490 8 115 2 686 2 291 4 294 2 540 4 688 2 380 4 257 2 696 2 337 4 595 2 434 2 202 2 203 2 338 2 653 6 262 2 85 4 388 2 86 2 657 4 274 2 391 2 
209 2 445 6 305 2 396 4 508 2 609 2 307 2 562 2 312 8 178 8 453 4 48 2 182 2 455 12 133 2 317 2 456 2 672 2 620 2 723 2 722 2 473 2 142 2 623 6 366 10 475 2 422 2 580 2 679 4 478 2 531 2 534 2 20 2 486 2 635 2 330 2 490 6 115 2 686 2 291 4 294 2 540 4 688 2 380 4 257 2 696 2 337 4 595 2 434 2 202 2 203 2 338 2 653 6 262 2 85 4 388 2 86 2 657 4 274 2 391 2 
561 2 562 2 174 6 175 2 563 2 352 2 353 4 182 2 7 6 12 4 14 2 16 6 365 6 366 2 580 2 192 2 193 6 20 2 377 2 379 2 589 6 380 4 593 7 595 2 202 2 203 2 388 2 207 2 41 4 209 2 603 2 605 2 211 2 395 1 396 8 609 2 398 2 610 2 45 8 403 2 219 2 48 2 406 2 408 4 411 2 620 4 57 6 414 2 416 2 230 2 623 8 422 2 233 1 423 1 68 2 245 2 635 2 641 6 73 2 253 2 255 2 257 2 75 2 259 1 76 2 434 2 78 10 653 24 262 2 263 2 435 2 85 4 86 4 271 2 657 4 274 2 89 2 443 6 91 2 660 2 445 4 447 2 449 2 453 4 455 46 95 6 456 2 671 12 463 2 99 2 672 2 101 1 472 2 473 2 674 2 475 2 105 6 477 2 679 6 107 2 478 2 108 7 480 1 682 2 486 2 488 2 490 12 115 2 491 2 686 2 291 4 687 2 495 2 294 2 688 4 118 1 694 2 696 2 698 6 705 6 507 2 128 2 508 2 709 2 307 2 312 2 714 2 131 6 317 2 134 2 133 4 520 2 721 2 722 2 723 2 141 6 725 1 142 2 726 4 526 6 143 1 324 2 531 4 534 2 536 4 328 2 735 6 538 6 330 2 540 4 156 2 545 2 744 4 337 6 338 2 164 6 747 8 548 2 342 4 
660 2 445 8 447 2 449 2 561 2 562 2 174 6 175 2 563 2 352 2 453 4 353 4 182 2 455 48 95 6 456 2 7 6 671 12 463 2 99 2 12 8 672 2 472 2 14 2 473 2 674 2 16 6 365 6 366 2 475 2 105 6 477 2 580 2 679 6 193 6 192 2 478 2 107 2 682 2 20 2 486 2 488 2 377 2 490 12 116 2 115 2 379 2 491 2 686 2 589 6 291 4 495 2 687 4 294 2 688 4 380 4 694 2 696 2 595 2 202 2 698 6 203 2 388 2 207 2 41 4 391 4 603 2 209 2 507 2 705 6 211 4 605 2 128 2 396 8 508 2 709 2 609 2 306 2 398 2 307 2 610 2 45 8 403 2 219 2 312 6 714 4 131 6 48 2 406 2 408 4 133 4 134 2 317 2 520 2 411 2 619 2 620 4 721 2 57 6 723 2 416 2 722 2 414 2 141 6 230 2 142 2 726 4 623 8 526 6 422 2 324 2 531 4 534 2 68 2 328 2 735 6 538 6 245 2 635 2 330 2 641 6 540 4 73 2 253 2 255 2 156 2 545 2 257 2 75 2 744 4 337 6 76 2 434 2 78 10 338 2 653 26 262 2 263 2 435 2 164 6 747 8 85 4 548 2 342 4 271 2 86 4 657 4 443 6 89 2 274 2 91 2 
660 2 445 8 447 2 449 2 561 2 562 2 174 6 175 2 563 2 178 4 352 2 453 4 353 4 182 2 455 48 95 6 456 2 7 6 671 12 463 2 99 2 12 8 672 2 472 2 14 2 473 2 674 2 16 6 365 6 366 6 475 2 105 6 477 2 580 2 679 6 193 6 192 2 478 2 107 2 682 2 20 2 486 2 488 2 377 2 490 12 116 2 115 2 379 2 491 2 686 2 589 6 291 4 495 2 687 4 294 2 688 4 380 4 694 2 696 2 595 2 202 2 698 6 203 2 388 2 207 2 41 4 391 4 603 2 209 2 507 2 705 6 211 4 605 2 128 2 396 8 508 2 709 2 609 2 306 2 307 2 398 2 610 2 45 8 403 2 219 2 312 6 714 4 131 6 48 2 406 2 408 4 133 4 134 2 317 2 520 2 411 2 619 2 620 4 721 2 57 6 723 2 416 2 722 2 414 2 141 6 230 2 142 2 726 4 623 8 526 6 422 2 324 2 531 4 534 2 68 2 328 2 735 6 538 6 245 2 635 2 330 2 641 6 540 4 73 2 253 2 255 2 156 2 545 2 257 2 75 2 744 4 337 6 76 2 434 2 78 10 338 2 653 26 262 2 263 2 435 2 164 6 747 8 85 4 548 2 342 4 271 2 86 4 657 4 443 6 89 2 274 2 91 2 
561 2 562 2 174 12 175 2 563 2 178 4 352 2 353 4 182 2 7 6 12 8 14 2 573 2 16 8 365 12 366 6 580 2 192 2 193 6 20 2 583 2 377 4 379 2 197 2 589 6 380 4 595 2 202 2 203 2 597 6 388 2 207 4 602 6 391 4 41 4 209 2 605 2 211 4 396 8 609 2 398 2 610 2 45 12 403 2 219 2 612 6 48 2 406 2 407 6 408 6 411 2 619 2 620 4 57 8 414 2 416 2 230 2 623 10 422 2 68 2 245 2 635 2 247 6 641 6 73 2 643 2 253 2 255 2 257 2 75 2 76 2 434 2 261 2 78 8 653 24 262 2 263 2 435 2 85 4 86 4 271 2 657 4 274 2 89 2 443 6 91 2 660 4 445 10 447 2 449 2 276 2 453 4 455 52 95 6 456 2 671 10 463 2 99 2 672 2 472 2 473 2 674 2 475 2 105 6 477 2 679 6 107 2 478 2 682 2 486 2 488 2 490 16 116 2 115 2 491 2 686 2 291 4 687 4 495 2 294 2 688 4 694 2 696 2 698 12 705 12 507 2 128 2 508 2 709 2 306 2 307 2 311 2 312 6 714 4 131 6 317 2 134 2 133 4 520 2 521 6 137 6 721 2 723 2 722 2 141 6 142 2 726 4 526 12 324 2 528 6 531 4 534 2 536 2 328 2 735 6 538 12 329 6 330 2 332 2 540 4 153 2 156 2 545 2 744 4 337 6 338 2 164 6 747 8 548 2 342 4 
209 2 20 2 445 6 396 2 508 2 562 2 307 2 635 2 490 4 115 2 178 4 312 6 291 2 48 2 453 2 182 2 455 4 540 4 380 2 337 2 672 2 434 2 202 2 338 2 722 2 142 2 623 6 366 4 475 2 422 2 85 4 531 2 478 2 391 2 274 2 
660 3 445 6 447 2 562 2 347 2 175 2 278 2 352 2 453 2 353 4 182 2 455 28 456 2 671 4 463 2 672 2 16 6 366 2 475 2 477 2 679 6 192 2 478 2 20 2 486 2 684 2 487 2 490 4 377 3 115 2 491 2 291 2 380 2 595 2 202 2 207 3 391 2 603 2 209 2 394 2 605 2 396 2 508 2 609 2 307 2 398 2 610 2 45 8 711 2 403 2 312 6 48 2 408 4 317 2 134 2 319 3 620 4 57 6 722 2 414 2 416 2 230 2 142 2 623 6 726 2 422 2 324 2 531 2 426 2 68 2 635 2 330 2 641 6 540 4 251 2 257 2 337 2 76 2 434 2 78 2 338 2 653 24 262 2 85 4 342 4 86 4 88 2 274 2 91 2 
508 2 434 2 364 2 
508 2 434 2 364 2 
660 2 445 12 447 2 446 2 448 2 175 2 2 2 178 4 352 2 353 4 453 2 94 2 455 24 456 2 671 4 463 2 12 4 14 2 473 2 189 2 15 2 16 2 364 2 366 6 475 2 477 2 580 2 679 6 19 2 192 2 683 2 486 2 196 4 490 16 379 4 491 2 291 2 687 4 688 2 496 2 380 2 697 2 696 2 595 2 203 2 41 2 391 4 210 2 211 4 605 2 128 2 396 4 508 4 609 2 398 2 510 2 307 2 610 2 45 2 403 2 312 6 714 4 133 4 317 2 134 2 620 4 57 2 414 2 722 2 230 2 142 2 726 6 623 12 525 2 324 2 530 4 531 4 534 2 68 2 536 4 330 2 641 6 540 4 153 4 254 2 257 2 75 2 744 2 337 4 260 4 76 2 434 6 78 2 653 16 164 2 440 2 85 4 342 4 86 4 165 2 657 4 274 4 91 2 556 2 
78 2 122 2 486 2 653 2 15 2 2 2 376 2 164 2 495 2 590 2 406 2 388 2 455 4 254 2 41 2 671 2 170 2 
660 4 445 12 447 2 446 2 448 4 175 2 2 2 178 4 5 2 352 2 353 4 453 2 94 2 455 24 456 2 671 2 463 2 12 4 14 2 473 2 189 2 15 2 16 2 364 2 366 6 475 2 367 2 477 2 580 2 679 6 192 2 683 2 486 2 196 4 113 2 490 16 26 2 379 4 491 2 291 2 687 4 688 4 496 2 380 2 696 2 595 2 203 2 391 4 210 2 211 4 605 2 128 2 396 4 508 4 609 2 398 2 510 2 307 2 610 2 45 2 215 2 403 2 312 6 714 4 133 4 317 2 134 2 620 4 57 2 723 2 414 2 722 2 230 2 142 2 726 6 623 12 324 2 530 4 531 4 534 2 68 2 536 4 330 2 641 6 540 4 153 4 254 2 257 2 75 2 744 2 337 4 260 4 76 2 434 6 653 16 164 2 440 2 85 4 342 4 86 4 165 2 657 4 274 4 91 2 
660 2 445 12 447 2 446 2 448 2 175 2 2 2 178 4 6 2 352 2 353 4 453 2 94 2 455 24 456 2 671 4 463 2 12 4 14 2 473 2 189 2 15 2 16 2 364 2 366 6 475 2 477 2 580 2 679 6 192 2 581 2 683 2 486 2 196 4 490 16 379 4 491 2 291 2 687 4 688 4 496 2 380 2 690 2 696 2 595 2 203 2 41 2 391 4 210 2 211 4 605 2 128 2 396 4 508 4 609 2 398 2 510 2 307 2 610 2 45 2 403 2 312 6 714 4 133 4 317 2 134 2 620 4 57 2 723 2 414 2 722 2 230 2 142 2 726 6 623 12 322 2 324 2 530 4 531 4 534 2 68 2 536 4 330 2 641 6 540 4 153 4 254 2 257 2 75 2 744 2 337 4 260 4 76 2 434 6 78 2 653 16 164 2 440 2 85 4 342 4 86 4 165 2 657 4 552 2 274 4 91 2 
558 2 159 2 244 2 596 2 622 2 399 2 46 2 3 2 664 2 640 2 59 2 72 2 455 4 497 2 629 2 
660 3 372 2 706 2 708 2 582 2 634 2 285 1 45 2 377 3 401 2 331 2 179 2 408 2 455 2 29 2 155 2 253 6 57 2 416 2 415 2 653 2 16 2 207 3 272 4 194 3 
660 2 372 2 706 2 708 2 582 2 634 2 45 2 377 2 401 2 331 2 179 2 408 2 455 2 29 2 155 2 253 6 57 2 416 2 415 2 653 2 16 2 207 2 272 4 194 2 
660 2 372 2 706 2 708 2 582 2 634 2 45 2 377 2 401 2 331 2 179 2 408 2 455 2 29 2 155 2 253 6 57 2 416 2 415 2 653 2 16 2 207 2 272 4 194 2 
660 3 606 2 451 4 173 5 611 2 45 2 310 2 349 4 512 2 221 2 49 2 455 10 97 2 457 2 570 2 135 2 618 2 572 4 416 2 229 3 728 2 576 2 191 2 62 2 149 4 240 2 241 3 582 2 494 2 644 2 497 4 740 2 297 4 653 4 501 2 437 6 656 4 207 3 750 3 393 2 
660 2 606 2 451 4 173 4 611 2 45 2 310 2 349 4 512 2 221 2 49 2 455 10 97 2 457 2 570 2 135 2 9 2 618 2 572 4 416 2 229 2 728 2 576 2 191 2 62 2 149 4 240 2 241 2 582 2 494 2 644 2 497 4 542 2 740 2 297 4 653 4 501 2 437 6 656 4 343 2 207 2 750 2 393 2 
660 2 606 2 451 4 173 4 611 2 45 2 310 2 349 4 512 2 221 2 49 2 455 10 97 2 457 2 570 2 135 2 9 2 618 2 572 4 416 2 229 2 728 2 576 2 191 2 62 2 149 4 240 2 241 2 582 2 494 2 644 2 497 4 542 2 740 2 297 4 653 4 501 2 437 6 656 4 343 2 207 2 750 2 393 2 
660 2 606 2 451 4 173 4 611 2 45 2 310 2 349 4 512 2 221 2 49 2 455 10 97 2 457 2 570 2 135 2 9 2 618 2 572 4 416 2 229 2 728 2 576 2 191 2 62 2 149 4 240 2 241 2 582 2 494 2 644 2 497 4 542 2 740 2 297 4 653 4 501 2 437 6 656 4 343 2 207 2 750 2 393 2 
660 2 606 2 451 4 173 4 611 2 45 2 310 2 349 4 512 2 221 2 49 2 455 10 97 2 457 2 570 2 135 2 9 4 618 2 572 4 416 2 229 2 728 2 576 2 191 2 62 2 149 4 240 2 241 2 582 2 494 2 644 2 497 4 542 4 740 2 297 4 653 4 501 2 437 6 656 4 343 4 207 2 750 2 393 2 
129 2 550 2 87 2 517 2 409 2 630 2 
655 2 607 2 599 2 171 2 363 2 517 2 637 2 
705 2 707 2 67 2 397 2 330 2 737 1 738 1 455 10 316 2 226 2 50 2 54 2 462 2 691 1 693 2 33 1 201 2 79 1 36 2 653 8 84 2 269 2 579 2 301 2 369 2 680 2 
212 2 239 2 606 2 451 10 537 2 173 14 685 2 489 2 112 2 70 2 180 4 455 6 49 4 97 6 542 3 356 2 571 2 135 4 9 2 618 6 653 6 188 2 418 2 206 2 191 6 656 4 343 2 730 2 62 6 393 4 
692 2 320 2 297 2 572 2 346 2 608 1 374 2 653 1 349 2 624 7 217 2 71 2 654 2 549 2 455 1 355 2 689 2 617 4 
320 2 692 2 297 2 572 2 346 2 374 2 349 2 624 6 217 4 71 2 654 2 549 4 355 2 689 4 617 4 
320 8 692 2 297 2 572 2 346 2 608 1 374 2 653 1 349 2 624 10 217 8 71 2 654 2 549 8 455 1 355 6 689 8 617 4 
692 2 297 2 572 2 346 2 374 2 349 2 624 2 217 2 71 2 654 2 549 2 689 2 617 2 
92 2 175 6 277 2 665 2 353 12 455 34 458 1 8 2 280 4 463 4 467 2 358 2 360 2 362 2 282 2 476 2 676 2 477 4 586 2 27 2 28 2 32 2 381 2 123 2 500 2 386 2 598 5 205 1 298 2 302 4 703 4 605 6 43 2 213 2 509 12 309 2 130 2 47 2 313 2 405 2 132 2 516 2 716 2 414 4 524 2 323 1 420 2 421 1 625 2 232 2 237 1 248 2 641 24 250 2 430 2 74 2 543 2 334 4 546 2 653 30 341 2 342 14 166 2 553 1 273 2 659 2 
605 2 175 2 641 6 665 2 313 2 292 2 353 4 250 2 455 12 132 2 615 2 8 2 543 2 280 6 463 2 546 2 468 2 673 2 653 12 323 2 420 2 476 2 342 4 527 2 
345 2 275 2 92 2 348 2 175 4 351 2 665 2 567 2 353 18 181 8 455 44 458 3 8 2 459 2 280 14 463 2 467 2 360 2 362 4 282 2 190 2 476 2 676 2 477 6 586 2 587 6 27 2 28 2 200 2 32 2 381 4 123 2 500 2 598 6 205 2 298 2 125 2 389 2 302 6 703 4 303 2 704 2 605 4 509 10 309 4 712 6 216 8 47 2 405 4 313 2 220 2 132 2 615 2 516 2 716 2 136 2 139 4 414 6 523 8 420 2 625 2 232 2 144 2 532 2 632 2 326 2 246 2 539 6 641 40 250 2 430 2 74 2 334 2 546 2 649 4 653 40 547 2 81 2 439 4 162 2 341 2 342 20 166 4 273 2 
605 2 43 10 509 8 175 2 309 6 564 2 177 4 130 2 47 2 404 2 665 2 514 2 513 4 313 2 405 6 222 2 353 14 455 28 132 2 615 2 183 4 458 2 8 2 280 14 463 2 362 2 414 8 524 2 323 2 420 2 476 2 626 2 145 2 477 8 732 4 237 2 482 4 641 36 250 2 592 2 32 2 650 2 381 6 546 2 34 2 385 4 500 2 746 4 653 26 386 2 598 2 264 2 205 6 124 4 342 14 505 2 601 6 166 10 553 2 273 2 302 2 703 2 
296 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 115 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException 221 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException (54,606) 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 162 455 677 118 281 385 62 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V ERROR java.lang.ArrayIndexOutOfBoundsException (5,82,177,317,318,349,493,651) 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException (119,199) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (119,199) (119,199) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException (119,199) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.ArrayIndexOutOfBoundsException 531 346 80 683 296 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.ArrayIndexOutOfBoundsException 294 369 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.IllegalArgumentException 28 (59,176) (59,176) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.IllegalArgumentException 28 (59,176) (59,176) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.IllegalArgumentException 28 (59,176) (59,176) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.IllegalArgumentException 28 (59,176) (59,176) 
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (343,673) 26 408 546 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (343,673) 26 408 546 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_3R_49()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParser:jj_3R_57()Z
daikon.Quant:subsetOf([J[J)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaCharStream:getEndColumn()I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability; | CONDITION | 1674 | if (x) -> if (!x)
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.PptSlice2:arity()I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_52()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:intersection([I[I)[I
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[I)I | CONSTANT | 8702 | 0 -> -1
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_3R_54()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:noDups([I)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quant:lexLT([I[I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair; | ASSIGN | 2099 | = null
daikon.diff.Node:Node()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.Quant:eq(JJ)Z
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus; | ASSIGN | 17939 | = null
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:eltsGtIndex([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant:getConfidence()D
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Ppt:Ppt()V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:memberOf(I[I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_48()Z
daikon.Quant:gte(II)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType; | ASSIGN | 47633 | = null
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfo:relate_var()V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:ne(II)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:gt(II)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_1(I)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | ASSIGN | 60402 | = null
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.Invariants:Invariants()V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:eltsGT([II)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer; | RETURN | 13631 | return null
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaCharStream:BeginToken()C
daikon.ProglangType:isPseudoArray()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_135()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_163()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_161()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.Invariant:logOn()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:pow(II)I
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:pow_fast(II)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:subsetOf([D[D)Z
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:setEqual([I[I)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:eltsNotEqual([II)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.WeakHasherMap:processQueue()V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaCharStream:FillBuff()V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice0:arity()I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_3R_58()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:dimensions()I
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.ProglangType:baseIsScalar()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.MathMDE:negate(I)I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Debug:logOn()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.PptSlice1:arity()I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:lexGT([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V | CONSTANT | 2417 | 0 -> 1
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:union([I[I)[I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.MathMDE:sign(I)I
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONDITION | 43181 | if (x) -> if (!x)
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:size()I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:max([I)I
daikon.Quant:eltsLteIndex([I)Z | CONDITION | 178697 | if (x) -> if (!x)
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:eq(II)Z
utilMDE.Intern:intern([J)[J
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:eltsLTE([II)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | OPERATOR | 107346 | <= -> ==
jtb.JavaParser:jj_3R_133()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.ProglangType:isIntegral()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:jj_3R_69()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Quant:lexLTE([I[I)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName:hashCode()I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaCharStream:backup(I)V
utilMDE.WeakHasherMap:size()I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:eq(FF)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_2_14(I)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:lexGTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaCharStream:ReadByte()C
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:memberOf(F[D)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D | CONSTANT | 6853 | 1 -> -1
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:subsetOf([F[F)Z | OPERATOR | 118000 | ++ -> --
utilMDE.MathMDE:modulus([I)[I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:lt(II)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:eltsEqual([II)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.RootNode:RootNode()V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isArray()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:InvMap()V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:jj_3R_56()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:slice([III)[I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:jj_3_1()Z
utilMDE.Intern:intern([I)[I
jtb.JavaParser:jj_3_14()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
481 4 673 2 41 2 343 2 584 2 446 2 52 2 702 2 109 2 
115 2 319 2 165 4 92 2 377 4 223 2 610 2 695 2 
617 4 38 4 456 2 403 2 64 2 482 6 726 6 673 2 298 2 343 2 43 2 603 6 451 6 
528 6 264 2 51 4 360 10 429 10 29 8 206 2 673 6 730 2 514 10 99 8 731 10 434 10 515 16 682 8 705 4 123 16 436 16 684 4 416 4 544 2 440 26 314 12 172 29 711 2 742 6 343 6 129 2 375 2 590 8 
221 2 
267 2 
54 2 496 2 373 2 507 2 606 2 633 2 
155 6 47 2 246 4 360 4 429 4 673 4 514 4 434 4 254 4 515 8 564 6 276 8 682 2 123 8 436 8 440 12 172 14 314 6 343 4 89 2 
496 2 244 2 72 2 
412 2 389 2 594 2 719 2 567 2 392 22 707 2 394 10 9 2 701 2 675 2 316 2 101 2 331 2 
295 2 405 2 360 2 429 2 514 2 731 4 434 2 515 2 682 2 277 2 705 2 542 2 123 2 436 2 608 2 505 2 609 2 586 2 440 4 314 2 172 6 742 2 194 2 
434 2 515 2 155 4 123 2 684 2 436 2 246 2 440 4 360 2 429 2 172 6 602 2 514 2 
196 4 529 4 291 4 292 10 244 6 158 4 72 2 652 2 670 2 555 4 380 4 201 4 8 4 182 2 325 2 496 8 76 2 205 2 430 2 299 2 252 2 475 4 310 2 516 2 149 2 607 2 518 10 338 2 663 4 520 2 209 2 738 14 687 62 641 4 522 2 151 2 373 4 397 2 463 2 649 4 
273 2 414 2 501 2 694 2 267 2 322 2 257 2 226 2 411 2 347 2 
2 2 6 2 183 12 386 1 559 3 184 2 563 4 390 3 391 2 393 16 22 2 570 2 398 3 573 8 24 2 25 2 401 2 575 2 195 2 402 2 404 2 406 2 409 2 410 2 34 3 35 2 583 2 587 4 211 1 591 4 220 3 48 2 593 2 226 1 227 2 53 1 426 1 230 4 431 2 233 2 432 2 435 2 60 8 61 1 239 2 66 1 613 2 68 2 242 6 71 6 446 2 73 2 623 1 248 2 448 2 74 2 77 2 632 2 635 1 457 1 83 2 257 1 84 3 259 2 462 2 646 3 263 24 648 2 90 2 653 16 470 1 269 2 270 2 656 2 473 2 98 2 657 4 102 1 476 2 274 3 660 2 279 2 661 1 662 2 104 2 484 2 666 2 665 2 667 32 489 2 491 2 111 2 669 1 492 1 114 1 671 2 117 2 673 34 306 2 121 2 308 2 122 3 686 3 685 2 688 2 315 2 689 2 509 2 131 2 133 6 134 2 136 2 140 2 696 3 323 2 141 2 697 2 699 3 143 2 700 4 329 1 703 2 150 5 336 2 708 2 710 4 340 2 152 2 343 32 523 2 346 2 353 2 531 2 354 2 715 16 717 8 357 2 161 1 361 4 537 16 164 2 167 1 366 2 367 2 732 6 169 24 368 2 171 2 372 2 175 2 549 32 
644 2 
673 4 639 2 186 2 
243 2 
179 2 1 2 91 10 466 28 467 2 3 26 181 8 4 2 268 20 379 2 468 16 7 26 469 2 97 2 558 24 557 82 384 26 385 2 10 26 12 2 271 10 272 2 275 2 278 4 15 2 188 6 280 4 281 2 20 2 282 2 283 12 284 2 106 2 572 26 571 2 107 26 485 2 487 4 290 2 112 4 197 2 495 2 578 10 204 2 118 2 674 20 677 2 302 2 676 4 304 2 498 2 581 4 504 10 585 26 40 6 313 2 506 4 130 2 45 2 420 26 320 2 139 26 597 4 598 2 427 14 698 26 144 2 145 2 704 8 238 2 62 2 63 2 439 12 612 2 344 20 153 2 69 2 620 6 716 10 621 82 532 4 162 2 359 2 449 2 535 2 362 2 727 2 364 36 728 10 166 2 538 4 250 26 249 82 450 14 733 2 541 2 455 2 638 2 736 6 256 2 545 2 174 10 741 2 743 2 
740 2 527 2 497 1 624 2 
527 2 551 2 
75 2 496 2 137 2 51 2 50 2 622 2 527 2 
339 2 137 2 527 2 
137 2 527 2 349 2 
740 2 198 2 488 2 
137 2 527 2 
198 2 679 2 
345 2 527 2 
740 2 49 2 198 2 
740 2 154 2 288 2 
202 2 740 2 265 2 
740 2 645 2 105 2 
740 2 655 2 525 2 
148 2 198 2 
527 2 216 2 
154 2 124 2 
202 2 0 2 
629 2 645 2 
655 2 126 2 
261 2 198 2 
655 2 659 2 
116 2 645 2 
508 2 
255 2 154 2 
740 2 49 2 693 2 198 2 
740 2 49 2 706 2 693 2 198 2 
740 2 170 2 198 2 
740 2 650 2 198 2 
13 2 568 2 395 2 536 2 
234 2 177 2 651 2 82 2 595 2 493 2 5 4 392 4 640 2 96 2 191 2 486 2 464 2 562 2 318 2 317 2 
285 2 740 2 
496 2 300 2 622 2 739 2 
75 2 496 2 300 2 454 2 622 2 739 2 
95 2 496 2 137 2 51 2 622 2 527 2 
213 2 78 2 
496 2 734 2 51 2 622 2 
645 2 245 2 
655 2 180 2 
154 2 511 2 
202 2 530 2 
202 2 655 2 81 2 
202 2 655 2 548 2 
202 2 428 2 655 2 
202 2 655 2 600 2 
135 2 533 2 622 2 577 2 496 2 477 6 550 6 289 2 
198 2 387 2 
431 2 
183 8 270 2 656 2 657 2 184 2 100 2 476 2 563 4 479 2 480 2 22 2 666 6 665 2 667 4 25 2 401 2 575 2 402 2 203 2 406 2 672 2 297 2 673 26 407 2 409 4 30 2 305 2 579 2 308 2 580 4 685 2 214 2 419 2 509 2 131 2 591 2 133 6 48 2 593 2 227 2 230 4 697 2 233 2 700 2 58 2 237 2 435 2 336 2 710 4 340 2 343 26 346 2 444 4 68 2 531 2 242 2 717 2 71 4 446 2 159 2 161 2 448 2 361 4 537 6 632 2 366 2 732 2 457 2 171 2 175 2 462 2 86 2 549 6 648 2 
183 8 270 2 656 2 657 2 184 2 100 2 476 2 563 4 479 2 480 2 22 2 666 6 665 2 667 4 25 2 401 2 575 2 195 2 402 2 406 2 672 2 673 26 407 2 409 4 30 2 306 2 305 2 579 2 308 2 580 4 685 2 419 2 509 2 131 2 591 2 592 2 133 6 48 2 593 2 227 2 230 4 697 2 233 2 700 2 58 2 237 2 435 2 336 2 710 4 340 2 343 26 346 2 444 4 68 2 531 2 242 2 717 2 157 2 71 6 446 2 159 2 161 2 448 2 361 4 537 6 77 2 632 2 366 2 732 2 457 2 171 2 459 2 175 2 462 2 86 2 549 6 648 2 
173 2 
565 2 351 2 
85 2 46 2 712 2 
85 2 46 2 712 2 
421 2 133 6 319 2 692 2 92 2 593 2 377 4 93 2 223 2 224 2 230 4 656 2 233 2 474 2 476 2 563 4 336 2 610 2 710 4 569 2 340 2 22 2 666 2 667 2 343 14 526 2 346 2 25 2 401 2 402 2 531 2 71 6 446 2 159 2 160 2 448 2 361 4 406 2 725 2 165 4 537 2 407 2 77 2 673 14 119 2 678 2 681 2 306 2 366 2 500 2 258 4 85 2 171 2 175 2 462 2 419 2 549 2 552 2 648 2 509 2 131 2 
402 2 293 2 517 2 337 2 378 2 370 2 142 2 673 4 343 2 601 2 11 2 303 2 668 2 215 2 120 2 351 2 366 2 
421 2 133 6 319 2 692 2 92 2 593 2 377 4 93 2 223 2 224 2 230 4 656 2 233 2 474 2 476 2 563 4 336 2 610 2 710 4 569 2 340 2 22 2 666 2 240 2 667 4 343 14 526 2 346 2 25 2 401 2 402 2 531 2 71 6 446 2 159 2 199 2 160 4 448 2 361 4 406 2 725 2 165 4 537 2 407 2 77 2 673 14 119 2 678 2 681 2 306 2 366 2 500 2 258 4 85 2 171 2 175 2 462 2 419 2 549 2 552 2 648 2 509 2 131 2 
421 2 133 6 319 2 692 2 92 2 593 2 377 4 93 2 223 2 224 2 230 4 656 2 233 2 474 2 476 2 563 4 336 2 610 2 710 4 569 2 340 2 22 2 666 2 667 2 343 14 526 2 346 2 25 2 401 2 402 2 531 2 71 6 446 2 159 2 160 2 448 2 361 4 406 2 725 2 165 4 537 2 407 2 77 2 673 14 119 2 678 2 681 2 306 2 366 2 500 2 258 4 85 2 171 2 175 2 462 2 419 2 549 2 552 2 648 2 509 2 131 2 
133 4 593 2 222 2 324 2 599 2 326 2 231 2 230 2 472 2 233 2 563 2 710 2 438 2 340 2 343 8 67 2 443 2 346 2 401 2 352 2 618 2 531 2 718 2 71 3 296 2 448 2 406 2 361 2 77 1 673 12 306 1 307 2 366 2 634 1 80 2 683 2 543 2 462 2 691 2 509 2 218 1 
242 3 494 2 724 2 537 2 673 2 729 2 512 3 328 2 732 3 308 2 333 2 208 1 341 2 666 2 667 3 343 2 108 2 44 2 444 2 549 2 
308 2 732 2 242 2 333 2 494 2 724 2 341 2 537 2 673 2 666 2 729 2 343 2 667 2 512 2 328 2 44 2 108 2 444 2 549 2 
308 2 732 2 242 2 333 2 494 2 724 2 341 2 537 2 673 2 666 2 729 2 343 2 667 2 512 2 328 2 44 2 108 2 444 2 549 2 
528 2 242 3 715 2 200 3 113 2 425 2 27 6 360 2 383 4 429 2 673 10 251 2 328 2 32 3 514 2 99 4 499 2 434 2 308 2 413 2 605 2 515 2 187 4 123 2 436 2 18 2 65 4 611 3 393 2 440 4 521 2 396 2 172 6 667 3 343 4 614 2 713 4 549 2 88 2 70 4 
528 2 242 2 715 2 200 2 113 2 425 2 27 6 360 2 383 4 429 2 673 10 251 2 328 2 32 2 514 2 99 4 499 2 434 2 308 2 413 2 605 2 515 2 682 2 187 4 123 2 436 2 18 2 65 4 611 2 393 2 440 4 521 2 396 2 314 2 172 4 667 2 343 4 614 2 129 2 713 4 549 2 88 2 70 4 
528 2 242 2 715 2 200 2 113 2 425 2 27 6 360 2 383 4 429 2 673 10 251 2 328 2 32 2 514 2 99 4 499 2 434 2 308 2 413 2 605 2 515 2 682 2 187 4 123 2 436 2 18 2 65 4 611 2 393 2 440 4 521 2 396 2 314 2 172 4 667 2 343 4 614 2 129 2 713 4 549 2 88 2 70 4 
528 2 242 2 715 2 200 2 113 2 425 2 27 6 360 2 383 4 429 2 673 10 251 2 328 2 32 2 514 2 99 4 499 2 434 2 308 2 413 2 605 2 515 2 682 2 187 4 123 2 436 2 18 2 65 4 611 2 393 2 440 4 521 2 396 2 314 2 172 4 667 2 343 4 614 2 129 2 713 4 549 2 88 2 70 4 
528 2 242 2 715 2 200 2 113 2 425 2 27 6 360 2 383 4 429 2 673 10 251 2 328 2 32 2 514 2 99 4 499 2 434 2 308 2 413 2 605 2 515 2 682 4 187 4 123 2 436 2 18 2 65 4 611 2 393 2 440 4 521 2 396 2 314 4 172 4 667 2 343 4 614 2 129 4 713 4 549 2 88 2 70 4 
553 2 417 2 502 2 37 2 442 2 371 2 
627 2 229 2 237 2 442 2 128 2 400 2 94 2 
673 2 343 2 294 2 596 2 369 2 658 2 448 2 
528 2 360 6 429 6 56 2 363 2 673 6 514 6 99 4 254 2 434 6 309 4 515 6 276 2 564 4 682 4 123 6 436 6 503 2 103 2 735 2 189 2 440 12 172 15 314 5 418 2 343 6 129 4 615 2 350 2 110 2 
28 2 490 2 383 2 59 2 187 2 713 2 176 2 
28 2 490 2 383 2 59 2 673 1 636 1 187 2 343 1 713 2 176 2 
28 2 490 2 383 2 59 2 187 2 713 2 176 2 
28 2 490 2 383 2 59 2 187 2 713 2 176 2 
465 2 178 4 554 2 561 2 563 10 388 2 566 2 19 2 483 2 401 2 26 2 673 28 408 2 301 2 306 2 207 2 312 2 212 2 588 16 690 2 217 6 509 2 422 2 132 2 510 2 424 2 232 1 233 2 57 4 513 2 146 2 332 4 334 2 710 8 441 2 343 26 348 2 445 2 619 2 156 2 355 2 71 18 534 2 358 2 247 6 721 2 722 3 630 2 628 2 163 2 77 2 539 2 365 4 453 2 737 2 458 2 460 2 262 2 642 2 546 2 647 4 87 6 
132 2 423 2 321 4 225 2 556 2 382 2 55 2 233 2 57 2 560 2 513 2 330 2 433 4 185 2 146 6 388 2 563 14 235 2 478 2 16 2 335 4 17 4 21 2 710 14 192 2 343 26 524 6 399 2 241 2 348 2 401 2 714 2 356 4 71 36 576 6 26 2 358 6 247 8 626 2 625 10 722 2 163 2 77 8 408 2 673 28 31 2 306 8 452 4 582 4 415 2 312 2 737 2 260 2 458 2 588 14 642 6 643 2 546 2 42 10 547 4 690 2 509 2 
219 2 510 2 554 2 225 1 424 2 57 2 233 4 388 2 563 8 235 1 16 1 566 4 21 2 710 6 441 2 343 20 524 1 348 2 401 4 445 2 714 2 355 2 71 14 534 2 26 2 247 4 721 2 626 2 625 2 630 2 628 2 163 2 77 4 408 2 673 22 301 2 539 2 365 2 306 4 312 2 212 2 588 4 546 2 42 2 87 4 217 4 509 4 
132 2 423 2 266 2 321 2 138 2 381 2 228 2 55 2 471 2 654 2 57 3 233 2 327 2 513 2 330 2 604 2 433 2 146 4 563 20 388 2 236 2 147 2 14 2 335 2 334 2 437 4 519 2 19 2 710 20 709 2 190 2 664 2 286 2 342 2 343 44 193 2 399 2 23 2 348 2 574 2 401 2 616 2 619 2 156 2 356 2 71 45 720 2 576 6 447 2 26 2 358 4 247 6 630 1 722 2 723 2 631 2 163 2 77 3 408 2 673 46 31 2 79 4 680 2 306 3 168 2 540 4 33 2 253 2 452 2 36 2 453 2 311 2 39 2 415 2 637 4 737 2 312 2 260 2 210 2 458 2 588 37 461 2 125 2 374 6 642 4 127 2 546 2 589 2 547 2 690 2 509 2 376 2 
287 2 

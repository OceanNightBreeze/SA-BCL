#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (515,697) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.Error 275 793 
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 827 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 51 385 39 227 306 447 104 44 153 127 473 714 375 726 94 117 351 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 477 (108,454) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 477 (108,454) (108,454) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 477 (108,454) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 12 694 635 609 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR utilMDE.Assert$AssertionException (596,629) (596,629) (82,97,524,543,565,702,752) 745 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 182 501 579 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 182 501 579 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 182 501 579 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 182 501 579 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.ProglangType:isIntegral()Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:jj_3R_135()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.ModBitTracker:num_vars()I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:ne(II)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_73()Z
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression; | ASSIGN | 64275 | = null
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 10245 | = null
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_60()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:jj_3R_122()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_28()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:size()I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaCharStream:BeginToken()C
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:jj_3R_75()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:noDups([I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.Debug:logOn()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_3R_48()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_3_36()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_3R_56()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParser:jj_3R_86()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | CONDITION | 128308 | if (x) -> if (!x)
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.InvMap:InvMap()V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaCharStream:getBeginLine()I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:jj_3R_76()Z
utilMDE.MathMDE:sign(I)I
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:jj_2_35(I)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_2_12(I)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_3_3()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:subsetOf([S[S)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration; | RETURN | 1735 | return null
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:concat([I[I)[I
daikon.ProglangType:isArray()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName:hashCode()I
jtb.JavaParser:jj_3R_96()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaParser:jj_3R_72()Z
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:eltsGtIndex([I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.FormatTestCase:passes()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.Token:newToken(I)Ljtb.Token;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_2_14(I)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseLT([I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
utilMDE.MathMDE:modulus([I)[I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:arity()I
jtb.JavaParser:jj_3_19()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 17104 | = null
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3_30()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:lte(II)Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.ArraysMDE:sum([D)D
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_125()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.Node:Node()V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:jj_3R_81()Z
utilMDE.ArraysMDE:sum([I)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_115()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_36(I)Z
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:jj_3_10()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfo:relate_var()V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ModBitTracker:num_samples()I
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:jj_2_5(I)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:jj_3R_54()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:sameLength([I[I)Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
daikon.Quant:union([I[I)[I | RETURN | 152296 | return null
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Ppt:Ppt()V
jtb.JavaParser:jj_3_25()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant; | STATEMENT | 1442 | stmt -> ;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:eltsLTE([II)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:jj_3R_52()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3_18()Z
jtb.JavaParser:jj_3_20()Z
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator; | ASSIGN | 2215 | = null
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_2_21(I)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eq(JJ)Z
daikon.Quant:lt(II)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_3R_61()Z
daikon.Quant:memberOf(J[J)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:slice([III)[I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
daikon.Quant:eq(FF)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_74()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_50()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_116()Z
utilMDE.Intern:intern([J)[J
utilMDE.Intern:internStrings([Ljava.lang.String;)V | CONDITION | 534 | if (x) -> if (!x)
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_88()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:isReverse([I[I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3_16()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 19680 | = null
jtb.JavaParser:jj_3R_63()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.PptSlice0:arity()I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | OPERATOR | 46762 | && -> ||
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_15()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:jj_3_35()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_3R_133()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eltwiseEqual([I)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:jj_3R_97()Z
daikon.inv.Invariant:logOn()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParser:jj_3R_126()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLteIndex([I)Z | CONDITION | 178697 | if (x) -> if (!x)
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_62()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE:max([I)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 126289 | = null
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61946 | = null
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.Intern:intern([I)[I
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParser:jj_3R_119()Z
daikon.Quant:lexNotEqual([I[I)Z
jtb.JavaParser:jj_2_10(I)Z
daikon.Quant:memberOf(F[D)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:jj_3_13()Z
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:jj_3R_114()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | STATEMENT | 8020 | stmt -> ;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.Invariant:justified()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.PptSlice0:initInvariantsSeen()V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:negate(I)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:jj_3_27()Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_3R_69()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(II)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:lexGT([I[I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.Invariant:getConfidence()D
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:jj_2_13(I)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.ArraysMDE:sorted([I)Z | CONSTANT | 53880 | 0 -> -1
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.MathMDE:gcd([I)I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd(II)I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:eq(DD)Z
daikon.ModBitTracker:split(I)I
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3R_57()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
522 2 819 2 584 2 629 2 596 2 267 2 277 2 582 2 516 4 
583 2 732 2 736 2 560 6 419 2 154 6 286 2 469 6 678 2 446 2 712 2 
690 6 629 2 769 6 381 6 596 2 328 4 625 2 71 2 649 6 8 4 602 2 511 2 567 2 
25 10 403 4 629 6 380 2 734 10 302 4 711 2 383 4 818 10 760 2 128 10 130 26 61 16 63 16 715 2 134 8 67 29 768 4 575 10 596 6 45 8 728 12 776 8 290 8 105 2 214 2 781 2 543 6 319 16 702 6 
515 4 697 4 
652 2 
25 4 734 2 383 2 818 2 128 2 233 2 130 4 762 2 201 2 61 2 161 2 63 2 134 2 96 2 67 6 645 2 575 2 728 2 142 2 149 2 374 2 319 2 702 2 
403 2 813 6 734 4 330 1 818 4 128 4 130 12 11 2 61 8 63 8 134 1 97 4 67 14 575 4 728 5 396 6 701 2 319 8 82 4 
323 2 191 2 114 8 784 4 168 2 378 4 255 2 512 4 660 4 735 14 329 4 28 2 710 10 32 2 124 2 816 2 740 2 759 2 93 2 175 2 571 2 497 4 636 4 797 2 37 4 716 4 17 4 573 2 261 2 826 2 245 2 20 4 285 2 829 2 831 10 164 4 316 4 537 2 429 6 839 62 
812 2 275 2 327 2 86 2 157 2 652 2 793 2 838 2 592 2 81 2 
114 2 671 2 827 2 584 2 380 2 660 4 404 2 693 2 788 2 304 2 740 2 484 2 448 2 497 2 295 2 601 2 350 2 241 2 430 2 411 2 766 2 
524 8 67 5 629 4 575 4 596 4 734 4 728 4 588 2 818 4 128 4 130 4 752 2 134 2 508 4 565 4 
114 2 429 2 175 2 
55 2 721 2 84 2 152 2 775 2 287 22 129 2 131 2 294 10 794 2 76 2 763 2 556 2 765 2 
217 2 681 2 2 2 4 2 629 14 546 6 228 2 739 2 234 4 438 6 133 2 441 2 689 2 247 2 596 14 562 2 747 2 805 2 298 2 507 2 400 2 401 2 809 2 461 2 26 2 659 2 27 2 92 4 819 2 472 2 207 2 825 2 619 4 623 2 577 2 578 2 425 2 373 2 167 4 
475 2 
731 2 596 2 
596 4 643 2 289 2 
0 2 1 2 224 8 6 4 5 2 7 18 225 4 227 2 634 4 436 2 235 6 439 2 239 2 240 2 14 2 641 14 642 4 15 2 16 2 444 48 646 6 648 2 447 2 248 48 650 2 250 2 651 2 453 146 654 4 456 16 251 4 252 2 24 2 655 2 656 2 459 4 462 2 463 2 464 8 465 4 256 2 661 2 30 2 257 2 663 2 665 4 473 2 258 4 39 2 478 2 260 6 43 4 44 2 483 2 482 48 49 2 675 2 265 2 51 2 266 20 487 2 488 2 53 4 270 2 271 48 682 4 685 32 492 26 683 2 493 2 496 2 495 2 688 2 278 2 65 2 66 4 68 8 291 2 72 2 502 8 700 28 503 2 74 36 505 4 75 14 297 2 77 4 78 24 79 4 80 2 704 4 705 16 706 146 303 2 94 2 306 2 714 2 525 2 717 8 719 2 529 2 99 48 724 8 532 2 726 2 727 2 100 8 310 2 101 2 102 16 313 2 103 2 104 2 536 22 538 2 111 2 318 2 539 4 542 8 113 2 321 4 320 2 322 2 115 2 117 2 120 2 326 48 121 2 547 4 738 22 549 2 550 2 126 2 127 2 551 2 743 2 139 2 339 2 141 4 341 4 344 2 144 2 750 48 145 2 346 2 148 2 147 2 347 2 563 4 351 2 564 2 566 2 754 20 150 2 569 2 153 2 355 6 156 4 359 6 159 20 360 2 764 2 363 2 364 2 368 4 770 8 574 2 367 2 771 2 772 2 773 8 162 2 370 2 163 2 371 8 777 2 372 2 780 2 581 36 375 2 376 2 785 2 171 2 170 2 379 36 172 2 173 4 585 48 586 4 382 46 384 2 385 2 790 10 589 2 388 8 389 192 798 42 392 2 177 22 393 4 595 2 395 2 801 48 802 2 599 2 397 2 186 48 398 2 189 10 806 48 808 2 810 4 190 8 402 4 193 2 814 4 406 26 195 2 608 14 198 2 615 4 821 4 410 4 204 2 822 2 205 2 208 2 209 14 415 48 210 2 622 2 417 146 830 4 624 2 832 2 424 4 426 2 215 2 837 2 840 4 432 6 
523 1 223 2 414 2 799 2 
687 2 799 2 
114 2 40 2 639 2 230 2 
433 2 
114 2 768 2 639 2 481 2 196 2 799 2 
118 2 458 2 
114 2 768 2 639 2 509 2 
91 2 288 2 
534 2 500 2 
658 2 203 2 
504 2 457 2 
504 2 500 2 38 2 
504 2 387 2 500 2 
811 2 504 2 500 2 
504 2 500 2 280 2 
114 2 386 6 639 2 443 2 340 2 422 6 803 2 680 2 
47 2 616 2 
114 2 107 2 768 2 639 2 50 2 196 2 799 2 
192 2 196 2 799 2 
146 2 196 2 799 2 
559 2 47 2 414 2 
196 2 799 2 
47 2 605 2 
421 2 799 2 
47 2 282 2 414 2 
132 2 414 2 203 2 
504 2 414 2 206 2 
761 2 414 2 288 2 
414 2 369 2 500 2 
47 2 640 2 
450 2 799 2 
203 2 253 2 
614 2 504 2 
288 2 58 2 
530 2 500 2 
47 2 557 2 
110 2 500 2 
242 2 288 2 
673 2 
203 2 452 2 
47 2 282 2 35 2 414 2 
718 2 47 2 282 2 35 2 414 2 
47 2 414 2 468 2 
47 2 414 2 155 2 
18 2 211 2 106 2 308 2 
526 2 720 2 354 2 725 2 287 6 212 2 741 2 597 2 598 2 437 2 409 2 834 4 333 2 820 2 506 2 753 2 352 4 499 2 
414 2 52 2 
217 2 
222 2 4 6 2 6 629 26 546 4 228 2 739 2 434 4 234 4 236 2 438 6 133 2 334 1 336 5 136 2 19 2 338 2 247 2 747 2 562 6 249 2 659 2 26 2 755 2 151 2 29 2 757 2 356 2 358 2 158 3 160 2 472 2 365 2 670 2 479 2 41 2 577 2 578 2 264 2 48 2 166 2 373 2 167 4 486 2 782 2 786 2 684 2 274 2 686 2 279 4 689 2 596 26 70 3 181 8 73 2 296 2 298 2 507 2 400 2 401 2 809 2 513 2 709 4 87 2 610 2 92 4 819 2 613 3 617 2 618 2 207 2 825 2 619 4 413 4 623 2 312 8 425 2 427 1 
222 2 4 6 2 6 629 26 546 6 228 2 739 2 434 2 234 4 438 6 238 2 133 2 336 4 136 2 19 2 338 2 247 2 747 2 562 6 249 2 659 2 26 2 755 2 27 2 151 2 29 2 356 2 358 2 158 2 160 2 472 2 365 2 670 2 479 2 41 2 767 2 577 2 578 2 264 2 48 2 166 2 373 2 167 4 486 2 782 2 681 2 786 2 684 2 274 2 686 2 494 2 279 4 689 2 596 26 70 2 181 8 73 2 296 2 298 2 507 2 400 2 401 2 809 2 513 2 709 4 610 2 92 4 819 2 613 2 617 2 618 2 207 2 823 2 825 2 619 4 413 4 623 2 312 8 425 2 
604 2 828 2 548 2 
604 2 828 2 548 2 
681 2 684 2 2 2 4 2 629 14 546 6 228 2 123 2 739 2 792 2 234 4 438 6 133 2 176 2 336 2 689 2 247 2 596 14 562 2 747 2 298 2 507 2 400 2 401 2 299 2 510 2 809 2 703 2 604 2 26 2 659 2 27 2 607 2 89 2 92 4 819 2 472 2 476 2 477 2 207 2 619 4 825 2 623 2 577 2 578 2 425 2 264 2 108 2 48 2 778 2 373 2 167 4 
647 2 276 2 733 2 629 2 21 2 596 4 787 2 577 2 817 2 292 2 553 2 698 2 749 2 200 2 62 2 133 2 135 2 
681 2 684 2 2 2 4 2 629 14 546 6 228 2 123 2 739 2 232 2 792 2 234 4 438 6 133 2 176 2 336 4 689 2 247 2 596 14 562 2 747 2 454 2 298 2 507 2 400 2 401 2 299 2 510 2 809 2 703 2 604 2 26 2 659 2 27 2 607 2 89 2 92 4 819 2 472 2 476 2 477 2 207 2 619 4 825 2 623 2 577 2 578 2 425 2 264 2 108 2 48 2 778 4 373 2 167 4 
681 2 684 2 2 2 4 2 629 14 546 6 228 2 123 2 739 2 792 2 234 4 438 6 133 2 176 2 336 2 689 2 247 2 596 14 562 2 747 2 298 2 507 2 400 2 401 2 299 2 510 2 809 2 703 2 604 2 26 2 659 2 27 2 607 2 89 2 92 4 819 2 472 2 476 2 477 2 207 2 619 4 825 2 623 2 577 2 578 2 425 2 264 2 108 2 48 2 778 2 373 2 167 4 
628 2 324 2 221 2 4 6 2 8 629 20 325 2 122 2 734 2 546 6 228 2 739 2 125 2 332 2 128 2 635 2 130 4 234 4 438 6 12 2 133 2 637 2 336 2 442 2 244 2 744 2 137 2 745 2 338 2 247 2 747 2 562 6 342 2 345 6 568 2 659 2 26 2 27 2 467 2 662 2 471 2 472 2 666 2 361 2 667 2 474 2 259 2 365 2 480 2 41 2 366 2 263 2 575 2 577 2 578 2 165 2 264 2 373 2 677 2 486 2 167 4 377 2 681 2 490 2 684 2 61 2 63 2 591 2 689 2 593 2 691 2 67 6 283 2 179 2 180 1 596 26 694 2 70 2 181 2 183 2 396 4 804 2 298 2 507 2 400 2 401 2 809 2 82 2 83 2 85 2 194 2 407 2 609 2 90 2 92 4 611 2 818 2 819 2 613 2 517 2 202 2 519 2 521 2 207 2 824 2 620 2 619 4 527 4 825 2 621 2 413 4 722 2 416 2 623 2 533 2 311 2 312 2 425 2 213 2 836 2 319 2 216 2 431 2 
2 2 4 2 3 2 629 2 301 2 56 2 59 2 9 2 613 3 336 3 41 2 413 2 528 3 394 2 596 2 70 3 69 4 562 2 314 2 672 2 748 2 349 2 486 6 679 2 
2 2 4 2 3 2 629 2 301 2 56 2 59 2 9 2 613 2 336 2 41 2 413 2 528 2 394 2 596 2 70 2 69 4 562 2 314 2 672 2 748 2 349 2 486 6 679 2 
2 2 4 2 3 2 629 2 301 2 56 2 59 2 9 2 613 2 336 2 41 2 413 2 528 2 394 2 596 2 70 2 69 4 562 2 314 2 672 2 748 2 349 2 486 6 679 2 
272 4 54 2 220 4 2 2 629 4 734 2 128 2 231 2 130 4 61 2 554 4 63 2 13 2 440 2 336 3 281 3 178 4 67 6 337 2 746 2 596 10 70 3 22 2 603 2 657 2 815 3 357 2 34 4 818 2 95 2 572 2 309 2 41 2 575 2 314 2 776 4 541 6 319 2 543 2 489 3 
272 4 220 4 54 2 2 2 629 4 734 2 815 2 357 2 34 4 818 2 128 2 95 2 231 2 130 4 554 4 61 2 572 2 13 2 63 2 440 2 134 2 336 2 309 2 178 4 281 2 67 4 41 2 337 2 575 2 746 2 596 10 22 2 70 2 728 2 776 4 314 2 214 2 603 2 541 6 543 2 319 2 489 2 657 2 
272 4 220 4 54 2 2 2 629 4 734 2 815 2 357 2 34 4 818 2 128 2 95 2 231 2 130 4 554 4 61 2 572 2 13 2 63 2 440 2 134 2 336 2 309 2 178 4 281 2 67 4 41 2 337 2 575 2 746 2 596 10 22 2 70 2 728 2 776 4 314 2 214 2 603 2 541 6 543 2 319 2 489 2 657 2 
272 4 220 4 54 2 2 2 629 4 734 2 815 2 357 2 34 4 818 2 128 2 95 2 231 2 130 4 554 4 61 2 572 2 13 2 63 2 440 2 134 2 336 2 309 2 178 4 281 2 67 4 41 2 337 2 575 2 746 2 596 10 22 2 70 2 728 2 776 4 314 2 214 2 603 2 541 6 543 2 319 2 489 2 657 2 
272 4 220 4 54 2 2 2 629 4 734 2 815 2 357 2 34 4 818 2 128 2 95 2 231 2 130 4 554 4 61 2 572 2 13 2 63 2 440 2 134 4 336 2 309 2 178 4 281 2 67 4 41 2 337 2 575 2 746 2 596 10 22 2 70 2 728 4 776 4 314 2 214 4 603 2 541 6 543 2 319 2 489 2 657 2 
644 2 169 2 708 2 408 2 758 2 187 2 365 2 
638 2 31 2 758 2 331 2 632 2 633 2 
783 2 756 2 119 1 629 8 28 1 33 2 789 2 664 2 237 2 391 2 669 2 243 1 573 1 692 2 723 2 596 10 284 2 140 2 578 2 535 1 348 2 600 2 835 2 428 2 268 2 460 2 
116 1 629 2 194 2 734 6 818 6 435 2 570 2 128 6 130 10 61 4 63 4 134 4 524 2 67 13 262 2 744 2 745 2 575 6 596 2 728 4 776 4 396 4 214 3 653 2 399 2 112 2 508 2 319 4 543 2 565 2 544 2 82 2 
178 2 220 2 300 4 445 2 629 1 405 7 246 2 596 1 576 1 449 2 423 2 674 2 554 2 795 2 555 2 676 2 254 2 558 2 
178 2 220 2 300 4 445 2 405 6 246 2 449 2 423 2 674 2 554 2 795 2 555 4 676 2 254 4 558 4 
178 2 220 2 300 4 445 2 629 1 405 10 246 2 596 1 576 1 449 2 423 2 674 2 554 2 795 6 555 8 676 8 254 8 558 8 
178 2 220 2 300 2 445 2 405 2 246 2 449 2 423 2 674 2 554 2 555 2 254 2 558 2 
681 4 730 1 273 2 545 2 629 14 546 12 174 2 434 1 791 2 234 6 796 2 689 4 800 2 596 14 695 2 182 2 501 2 699 2 659 4 27 4 92 6 713 2 472 4 517 1 474 1 520 2 824 1 412 2 416 2 312 4 165 2 579 2 626 2 729 1 216 1 431 2 269 2 
681 1 218 2 219 2 273 2 491 2 629 40 226 2 630 2 631 2 546 37 737 2 587 2 229 2 434 2 57 2 552 2 60 2 10 2 234 18 742 2 498 2 796 2 335 2 590 2 689 2 594 2 800 2 596 40 561 2 696 2 182 2 343 2 143 2 501 2 184 2 699 2 293 2 185 2 23 2 455 4 751 2 807 2 659 2 353 2 27 1 606 2 707 2 466 2 514 2 88 2 197 2 92 18 470 2 611 4 305 2 471 6 472 2 307 2 518 2 36 6 668 2 520 2 98 2 42 2 531 2 774 2 418 2 46 2 420 2 312 32 579 2 485 2 626 2 580 2 315 2 317 2 833 4 779 2 627 4 540 2 
659 2 681 4 545 2 273 2 27 4 629 20 546 18 174 2 514 2 587 2 92 8 713 2 199 2 791 2 472 2 234 8 498 2 362 2 796 2 390 2 64 2 689 2 98 2 138 2 531 2 800 2 596 20 695 2 420 4 312 14 182 2 343 2 451 2 579 2 501 2 626 2 580 2 699 2 293 2 109 2 188 2 807 2 729 2 
681 4 659 2 273 2 27 4 629 10 800 2 596 10 546 10 434 2 312 4 92 4 182 2 57 2 579 2 626 2 501 2 472 2 234 4 498 2 796 2 689 2 
612 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 551 637 640 462 11 407 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 93 261 632 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V ERROR java.lang.ArrayIndexOutOfBoundsException 12 
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V FAILED junit.framework.AssertionFailedError (277,609) 239 
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 103 103 364 (278,634) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 103 103 364 (278,634) (278,634) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 103 103 364 (278,634) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 423 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 548 548 437 685 161 257 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 685 161 257 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.ArrayIndexOutOfBoundsException 685 161 257 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 548 548 548 685 161 257 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:pairwiseLT([I[I)Z | STATEMENT | 166805 | stmt -> ;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:ReadByte()C
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:eltsLT([II)Z
daikon.Quant:gt(II)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGT([I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:eltsGteIndex([I)Z
utilMDE.MathMDE:pow_fast(II)I | CONDITION | 3350 | if (x) -> if (!x)
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:size()I
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | STATEMENT | 65291 | stmt -> ;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.ArraysMDE:noDuplicates([D)Z | ASSIGN | 57849 | = null
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.MathMDE:sign(I)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:eltsEqual([II)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:lexLT([I[I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I | STATEMENT | 15721 | stmt -> ;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:subsetOf([D[D)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 11746 | = null
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice2:arity()I
daikon.inv.ValueSet:ValueSet(I)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.Invariants:Invariants()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.ArraysMDE:concat([I[I)[I | RETURN | 37630 | return null
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:subsetOf([J[J)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.PptName:isEnterPoint()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:lexGT([I[I)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.ModBitTracker:split(I)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:memberOf(F[F)Z
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:isReverse([I[I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:lexLTE([I[I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:intersection([I[I)[I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:jj_ntk()I
daikon.Quant:sameLength([I[I)Z
daikon.inv.Invariant:logOn()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern:intern([D)[D
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:lt(II)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:eltsGT([II)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | OPERATOR | 128699 | < -> <=
daikon.PptSlice0:arity()I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | STATEMENT | 46499 | stmt -> ;
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:hashCode()I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Debug:logOn()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isScalar()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:justified()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.ProglangType:isIntegral()Z
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:lexGTE([I[I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaCharStream:BeginToken()C
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.PptSlice1:arity()I
utilMDE.ArraysMDE:min([I)I
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:execute()Z | ASSIGN | 5998 | = null
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:eltsLTE([II)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:eltsLteIndex([I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndLine()I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.ProglangType:isArray()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:slice([III)[I
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String; | RETURN | 2498 | return null
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:getConfidence()D
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.ModBitTracker:num_samples()I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:eq(JJ)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | RETURN | 41719 | return null
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_vars()I
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Ppt:Ppt()V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.PptSlice1:num_samples()I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:eq(II)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[F)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(Z)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([D[F)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:gte(II)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.ValueTuple:size()I
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern:intern([I)[I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:sum([I)I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.ModBitTracker:num_sets()I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName; | RETURN | 30246 | return null
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Quant:concat([I[I)[I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eq(DD)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C | OPERATOR | 5855 | == -> <=
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Intern:numIntArrays()I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Debug:logDetail()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfo:new_ppt()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:eltsGTE([II)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.ProglangType:dimensions()I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:eltwiseLT([I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:noDups([I)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:ne(II)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:union([I[I)[I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.ArraysMDE:max([I)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissing(I)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:setEqual([I[I)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 3479 | = null
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
270 2 65 4 572 2 749 2 328 2 375 2 694 2 460 2 389 2 
244 6 371 6 307 2 135 2 660 2 598 2 459 2 124 6 526 2 103 2 521 2 
772 6 318 2 703 2 541 6 300 2 572 2 742 6 480 2 694 2 680 6 20 4 530 4 252 2 
358 10 604 6 363 4 694 6 154 16 289 8 739 8 562 8 458 2 666 16 57 26 635 2 711 10 673 2 483 10 398 8 36 2 167 10 547 16 98 2 599 10 488 2 572 6 49 12 509 4 123 29 148 4 723 2 70 4 355 6 
235 4 732 6 
774 2 
21 4 471 2 728 2 432 2 268 2 455 2 607 2 389 2 559 2 499 2 609 2 412 2 111 2 58 2 592 2 593 2 767 2 247 2 283 2 747 2 118 2 98 2 202 2 149 2 
358 16 359 2 604 4 605 2 731 2 334 4 694 4 269 4 154 32 339 6 562 6 56 8 741 4 666 32 414 6 587 2 57 48 711 6 613 4 317 2 86 2 483 16 372 6 639 4 398 18 36 2 569 4 322 6 167 16 349 6 683 4 547 32 599 16 570 6 572 4 49 22 123 54 70 2 355 4 
382 2 586 2 609 2 
419 22 615 2 277 2 464 2 527 2 397 2 387 2 92 2 282 2 644 2 55 2 380 2 351 10 392 2 
651 2 358 2 604 2 265 2 606 2 452 2 310 2 154 2 666 2 57 4 9 2 711 4 483 2 164 2 167 2 66 2 16 2 547 2 599 2 123 6 
358 4 483 4 652 2 333 2 363 2 154 8 339 6 167 4 547 8 741 4 599 4 666 8 570 6 49 4 57 12 123 16 613 4 
60 2 136 2 74 2 242 2 656 2 
308 2 211 2 26 2 481 2 444 2 507 2 617 2 774 2 174 2 69 2 
105 2 493 3 689 2 409 2 209 1 309 1 578 2 693 2 694 34 695 2 583 2 313 2 496 3 109 2 7 16 413 2 316 1 220 2 11 2 417 3 115 4 319 3 504 2 224 6 597 2 14 2 228 2 229 2 702 1 704 2 705 2 120 2 233 2 514 2 513 2 128 4 336 3 335 4 238 2 25 2 342 2 132 2 346 1 712 2 614 1 28 1 29 2 439 3 347 1 441 1 348 2 37 1 718 2 45 3 524 16 525 2 352 16 353 32 618 1 620 3 624 2 264 2 729 2 730 2 152 2 53 2 155 2 738 2 156 4 158 2 537 2 743 2 160 2 462 2 463 2 637 2 640 2 279 2 543 2 377 2 64 2 467 1 646 6 168 1 470 2 284 1 749 2 171 1 551 2 750 2 287 24 72 2 383 2 384 2 553 2 753 1 756 2 473 2 182 2 474 2 183 2 75 24 475 3 655 2 186 2 76 2 759 2 659 3 187 2 79 2 558 6 81 2 563 3 665 2 763 2 668 2 478 32 190 4 671 2 85 2 88 2 396 2 297 2 482 2 674 5 90 2 566 6 677 2 302 2 485 16 486 2 487 3 572 32 100 2 204 2 205 4 102 2 407 2 
745 2 694 2 
236 2 694 4 545 2 
47 2 
603 2 332 2 331 2 697 2 584 4 290 2 661 2 632 2 476 2 667 2 30 2 395 2 191 2 715 2 373 2 638 4 195 2 62 2 506 2 546 2 93 2 258 2 261 2 18 2 
565 2 698 1 301 2 262 2 
565 2 648 2 
239 2 565 2 609 2 259 2 556 2 203 2 148 2 
565 2 556 2 760 2 
565 2 556 2 765 2 
262 2 250 2 700 2 
565 2 556 2 
700 2 138 2 
565 2 294 2 
127 2 262 2 700 2 
12 2 
139 2 23 2 262 2 
52 2 262 2 2 2 
272 2 447 2 262 2 
222 2 700 2 
565 2 616 2 
684 2 594 2 
213 2 23 2 
52 2 38 2 
272 2 299 2 
404 2 700 2 
272 2 59 2 
52 2 393 2 
472 2 23 2 
707 2 594 2 
127 2 262 2 531 2 700 2 
127 2 262 2 177 2 531 2 700 2 
262 2 722 2 700 2 
540 2 262 2 700 2 
626 2 163 2 54 2 430 2 
239 2 192 2 625 2 609 2 389 2 
192 2 625 2 719 2 
239 2 565 2 609 2 556 2 19 2 148 2 
559 2 686 2 
239 2 609 2 501 2 148 2 
52 2 293 2 
272 2 675 2 
594 2 22 2 
23 2 429 2 
162 2 272 2 23 2 
272 2 256 2 23 2 
272 2 23 2 221 2 
272 2 23 2 388 2 
214 2 239 2 609 2 590 6 676 2 378 2 721 6 144 2 
245 2 700 2 
419 6 502 2 440 2 433 2 505 2 399 2 581 2 568 2 197 4 631 4 426 2 169 2 324 2 170 2 315 2 241 2 550 2 575 2 
262 2 3 2 
229 2 
689 2 409 2 693 4 694 26 313 2 109 2 411 2 413 2 416 2 11 2 224 2 119 2 233 2 511 2 514 2 126 2 128 4 335 4 25 2 340 2 341 2 342 2 132 2 29 2 348 6 44 4 352 6 525 2 353 6 618 2 354 2 724 2 630 2 155 2 536 2 156 4 537 2 276 2 462 2 640 2 542 2 543 2 642 4 377 2 467 2 646 2 470 2 749 2 384 2 473 2 474 2 183 2 76 2 759 2 558 6 81 2 82 2 665 2 478 4 83 2 190 4 671 2 297 2 482 2 566 4 677 2 304 2 94 2 486 2 572 26 204 2 205 8 102 2 407 2 
689 2 409 2 693 4 694 26 313 2 109 2 411 2 413 2 416 2 11 2 224 2 701 2 119 2 233 2 514 2 126 2 128 4 335 4 25 2 340 2 341 2 342 2 132 2 29 2 348 6 718 1 44 4 352 6 525 2 353 6 618 2 354 2 724 2 155 2 536 2 156 4 537 2 462 2 640 2 542 2 543 2 642 4 377 2 467 2 646 2 470 2 748 2 749 2 384 2 73 2 473 2 474 2 183 2 655 1 76 2 759 2 558 6 81 2 82 2 665 2 478 4 83 2 190 4 671 2 297 2 482 2 566 5 677 2 304 2 94 2 486 2 572 26 204 2 205 8 102 2 407 2 688 2 
469 2 
153 2 600 2 
691 2 689 2 212 2 628 2 694 12 582 2 313 2 216 2 217 4 4 8 740 2 273 2 413 2 364 2 365 4 275 2 634 2 539 2 371 6 165 2 598 4 508 10 68 2 121 2 549 2 175 2 124 6 381 2 431 4 601 2 128 2 473 2 288 2 558 4 291 8 561 2 610 2 391 2 479 2 764 2 190 2 671 2 27 4 713 2 244 6 33 2 482 2 768 2 135 2 442 2 41 4 253 4 681 2 773 2 572 6 146 2 204 2 101 2 526 4 103 2 
691 2 689 2 628 2 694 12 582 2 313 2 216 2 217 4 4 8 740 2 273 2 413 2 364 2 365 4 275 2 634 2 539 2 371 6 165 2 508 10 598 4 68 2 121 2 549 2 124 8 381 2 431 4 601 2 128 2 473 2 288 2 660 2 558 4 291 8 561 2 610 2 391 2 479 2 190 2 764 2 671 2 27 4 713 2 244 8 33 2 482 2 768 2 135 2 442 2 41 4 443 2 253 4 681 2 523 2 572 6 773 2 146 2 204 2 619 4 101 2 526 4 103 2 
244 2 33 2 371 2 691 2 768 2 165 2 628 2 217 2 598 2 773 2 365 4 146 2 549 2 634 2 101 2 526 2 381 2 431 4 
691 2 689 2 212 2 628 2 694 12 582 2 313 2 216 2 217 4 4 4 740 2 273 2 413 2 364 2 365 4 275 2 634 2 539 2 371 4 165 2 598 4 508 6 68 2 121 2 549 2 175 2 124 6 381 2 431 4 601 2 128 2 473 2 288 2 660 2 558 4 291 4 561 2 610 2 391 2 479 2 764 2 190 2 671 2 27 4 713 2 244 6 33 2 482 2 768 2 442 2 41 4 253 4 681 2 773 2 572 6 146 2 204 2 101 2 526 4 103 2 
691 2 689 2 212 2 628 2 694 12 582 2 313 2 216 2 217 4 4 4 740 2 273 2 413 2 459 2 364 2 365 4 275 2 634 2 539 2 371 6 165 2 598 4 508 6 68 2 121 2 549 2 175 2 124 6 381 2 431 4 601 2 128 2 473 2 288 2 558 4 291 4 561 2 610 2 391 2 479 2 764 2 190 2 671 2 27 4 713 2 244 4 33 2 482 2 768 2 442 2 41 4 253 4 681 2 773 2 572 6 146 2 204 2 101 2 526 4 103 2 
691 2 689 2 212 2 628 2 694 12 582 2 313 2 216 2 217 4 4 4 740 2 273 2 413 2 364 2 365 4 275 2 634 2 539 2 371 6 165 2 598 4 508 6 68 2 121 2 549 2 175 2 124 6 381 2 431 4 601 2 128 2 473 2 288 2 558 4 291 8 561 2 610 2 391 2 479 2 764 2 190 2 671 2 27 4 713 2 244 6 33 2 482 2 768 2 135 2 442 2 41 4 253 4 681 2 773 2 572 6 146 2 204 2 101 2 526 4 103 2 
691 2 689 2 212 2 628 2 694 12 582 2 313 2 216 2 217 4 4 8 740 2 273 2 413 2 459 2 364 2 365 4 275 2 634 2 539 2 371 8 165 2 598 4 508 10 68 2 121 2 549 2 175 2 124 8 381 2 431 4 601 2 128 2 473 2 288 2 558 4 291 8 561 2 610 2 391 2 479 2 190 2 764 2 671 2 27 4 713 2 244 6 33 2 482 2 768 2 135 2 442 2 41 4 253 4 681 2 773 2 572 6 146 2 204 2 101 2 526 4 103 2 
691 2 689 2 212 2 628 2 694 12 582 2 313 2 216 2 217 4 4 8 740 2 273 2 413 2 364 2 365 4 275 2 634 2 539 2 371 6 165 2 598 4 508 10 68 2 121 2 549 2 175 2 124 6 381 2 431 4 601 2 128 2 473 2 288 2 558 4 291 8 561 2 610 2 391 2 479 2 764 2 190 2 671 2 27 4 713 2 244 6 33 2 482 2 768 2 135 2 442 2 41 4 253 4 681 2 773 2 572 6 146 2 204 2 101 2 526 4 103 2 
576 2 208 7 409 2 210 2 212 2 582 2 216 2 217 4 411 4 6 2 413 2 219 2 416 2 589 1 10 2 418 7 223 2 224 2 225 2 598 4 427 2 233 2 431 4 601 2 236 6 435 2 608 2 25 2 610 2 436 1 27 8 29 2 244 4 33 2 442 2 40 2 41 6 253 4 254 2 47 6 260 1 263 10 453 6 628 2 273 2 459 4 633 6 275 2 634 2 461 1 462 2 465 2 281 2 642 4 646 2 468 1 68 2 470 2 71 6 285 2 653 2 473 2 474 2 655 2 76 2 288 2 291 2 665 2 478 2 479 4 671 2 297 2 89 2 482 2 677 2 484 2 681 4 486 2 101 2 103 4 689 2 691 2 106 6 694 46 311 6 313 2 696 4 109 2 112 2 113 2 117 1 508 2 325 6 326 2 121 2 327 2 124 12 510 1 512 1 514 2 515 2 128 4 516 6 335 4 129 2 520 2 341 2 342 12 713 2 348 6 718 2 137 2 352 6 350 4 353 8 146 2 526 4 724 2 529 6 155 2 533 2 740 2 156 4 364 2 365 4 537 2 366 6 539 2 159 6 371 8 745 6 165 2 543 2 749 2 549 2 381 2 180 2 554 2 183 2 184 2 759 2 558 6 561 2 560 6 188 6 391 2 190 4 764 2 564 1 566 6 768 2 401 2 199 6 572 24 773 2 201 2 573 8 204 2 205 4 
576 2 691 2 689 2 106 6 210 2 409 2 212 2 693 2 694 48 311 6 582 2 696 4 313 2 497 2 109 2 216 2 217 4 6 2 411 4 219 2 413 2 416 2 112 2 113 2 10 2 223 2 224 2 225 2 508 2 598 4 325 6 326 2 327 2 121 2 427 2 124 12 233 2 431 4 601 2 236 6 514 2 515 2 128 4 516 6 335 4 435 2 608 2 520 2 129 2 25 2 341 2 342 12 610 2 27 8 713 2 29 2 244 8 33 2 135 4 348 6 442 2 718 2 40 2 41 6 137 2 253 4 254 2 47 6 350 4 352 6 353 8 146 2 263 10 724 2 526 4 453 6 529 6 362 2 628 2 533 2 155 2 740 2 273 2 156 4 633 6 364 2 365 4 537 2 275 2 366 6 634 2 539 2 159 6 462 2 371 8 465 2 745 6 165 2 543 4 281 2 642 4 646 2 68 2 470 4 749 2 549 2 71 6 285 2 180 2 381 2 653 2 554 2 473 2 474 4 183 2 184 2 655 2 76 2 759 2 288 2 558 6 560 6 291 6 561 2 188 6 665 2 391 2 479 4 478 2 764 2 190 4 671 2 297 2 89 2 482 2 566 6 768 2 677 2 484 2 401 2 199 6 681 4 486 2 201 2 773 2 572 26 573 8 204 2 205 8 101 2 103 4 
576 2 691 2 689 2 106 6 210 2 409 2 212 2 693 2 694 48 311 6 582 2 696 4 313 2 497 2 109 2 216 2 217 4 4 4 6 2 411 4 219 2 413 2 416 2 112 2 113 2 10 2 223 2 224 2 225 2 508 6 598 4 325 6 326 2 327 2 121 2 427 2 124 12 233 2 431 4 601 2 236 6 514 2 515 2 128 4 516 6 335 4 435 2 608 2 520 2 129 2 25 2 341 2 342 12 610 2 27 8 713 2 29 2 244 8 33 2 135 4 348 6 442 2 718 2 40 2 41 6 137 2 253 4 254 2 47 6 350 4 352 6 353 8 146 2 263 10 724 2 526 4 453 6 529 6 362 2 628 2 533 2 155 2 740 2 273 2 156 4 633 6 364 2 365 4 537 2 275 2 366 6 634 2 539 2 159 6 462 2 371 8 465 2 745 6 165 2 543 4 281 2 642 4 646 2 68 2 470 4 749 2 549 2 71 6 285 2 180 2 381 2 653 2 554 2 473 2 474 4 183 2 184 2 655 2 76 2 759 2 288 2 558 6 560 6 291 6 561 2 188 6 665 2 391 2 479 4 478 2 764 2 190 4 671 2 297 2 89 2 482 2 566 6 768 2 677 2 484 2 401 2 199 6 681 4 486 2 201 2 773 2 572 26 573 8 204 2 205 8 101 2 103 4 
576 2 409 2 210 2 212 2 582 2 216 2 4 4 217 4 411 4 6 2 413 2 219 2 416 2 10 2 223 2 224 4 225 2 598 4 17 2 427 2 233 2 431 4 601 2 236 12 435 2 608 2 25 2 240 6 610 2 27 8 243 2 29 2 244 10 31 2 33 2 34 6 442 2 40 2 41 6 253 4 254 2 47 12 263 8 453 12 628 2 457 6 273 2 459 2 633 6 275 2 634 2 462 2 465 2 636 2 281 2 642 6 646 4 68 2 470 4 71 6 285 2 653 2 473 2 474 4 655 2 76 2 288 2 660 2 291 6 665 2 478 4 479 4 671 2 297 2 87 6 89 2 482 2 677 2 484 2 681 4 486 2 101 2 103 4 306 6 689 2 691 2 106 6 693 2 694 52 311 6 313 2 696 4 497 2 109 2 500 6 112 2 113 2 508 6 325 6 326 2 121 2 327 2 122 2 124 16 514 2 515 2 128 4 516 12 335 4 129 2 341 2 342 10 713 2 135 4 348 8 718 2 137 2 141 6 352 8 350 4 353 12 146 2 526 4 724 2 529 6 362 2 155 2 533 2 740 2 156 4 364 2 365 4 537 2 366 6 539 2 159 6 370 2 371 10 745 12 165 2 543 4 749 2 172 2 549 2 381 2 180 2 554 2 183 2 184 2 759 2 558 6 561 2 560 12 390 6 188 6 391 2 190 4 764 2 394 6 566 6 768 2 769 2 401 2 199 6 572 24 773 2 201 2 573 8 204 2 205 8 
691 2 212 2 694 4 582 2 288 2 216 2 291 6 4 4 740 2 391 2 364 2 365 2 764 2 275 2 634 2 539 2 27 2 713 2 244 6 371 6 135 2 768 2 41 2 253 2 508 4 598 4 773 2 121 2 146 2 549 2 101 2 124 4 526 4 103 2 431 2 
689 2 691 2 409 2 212 2 694 28 582 2 313 2 216 2 411 2 413 2 220 2 503 2 224 3 229 2 598 4 508 2 121 2 124 4 233 2 431 2 514 2 128 4 335 4 25 2 520 2 341 2 342 4 27 2 712 2 713 2 29 2 244 6 135 2 348 6 716 2 718 2 41 2 253 2 352 6 353 8 146 2 526 4 724 2 263 2 528 2 155 2 740 2 156 4 364 2 365 2 537 2 275 2 634 2 539 2 371 6 642 4 166 2 646 3 749 2 549 2 72 2 752 2 473 2 183 2 655 2 76 2 759 2 288 2 558 6 561 2 291 6 663 3 665 2 391 2 478 3 764 2 190 4 671 2 297 2 482 2 566 6 768 2 677 2 486 2 773 2 572 24 204 2 101 2 103 2 
96 2 764 2 288 2 
96 2 764 2 288 2 
492 2 689 2 409 2 107 2 694 24 582 2 696 2 313 2 4 2 5 2 411 2 413 2 699 2 231 2 508 2 598 4 124 8 233 2 431 2 514 2 128 4 335 4 519 2 25 2 341 2 130 2 342 4 343 2 27 4 29 2 244 8 135 4 348 2 718 2 41 2 253 2 350 2 352 2 48 2 353 2 263 2 724 2 526 4 450 2 529 2 155 2 271 2 156 4 364 2 365 2 634 2 462 2 371 8 542 4 543 4 470 4 749 2 473 2 474 4 183 2 655 2 76 2 759 2 288 2 78 2 558 6 291 6 665 2 478 2 190 4 764 2 671 2 297 2 482 2 566 6 768 2 677 2 486 2 572 16 773 2 204 2 205 4 103 4 
492 2 266 2 529 2 678 2 628 2 694 4 153 2 313 2 608 2 78 2 342 2 343 2 350 2 572 2 327 2 263 2 687 2 
689 2 409 2 107 2 694 20 582 2 696 2 313 2 4 2 5 2 411 2 413 2 699 4 231 2 508 2 598 4 124 8 233 2 431 2 514 2 128 4 335 4 519 2 25 2 341 2 130 2 342 2 343 2 27 4 29 2 244 8 135 4 348 2 718 2 41 2 253 2 352 2 48 2 353 2 724 2 526 4 450 2 155 2 271 2 156 4 364 2 365 2 634 2 462 2 371 8 278 2 542 4 641 2 543 4 470 4 749 2 473 2 474 4 183 2 655 2 76 2 759 2 288 2 78 2 558 6 291 6 665 2 478 4 764 2 190 4 671 2 297 2 482 2 566 6 768 2 677 2 486 2 572 14 773 2 204 2 205 4 103 4 
492 2 689 2 409 2 107 2 694 24 582 2 696 2 313 2 4 2 5 2 411 2 413 2 699 2 231 2 508 2 598 4 124 8 233 2 431 2 514 2 128 4 335 4 519 2 25 2 341 2 130 2 342 4 343 2 27 4 29 2 244 8 135 4 348 2 718 2 41 2 253 2 350 2 352 2 48 2 353 2 263 2 724 2 526 4 450 2 529 2 155 2 271 2 156 4 364 2 365 2 634 2 462 2 371 8 542 4 543 4 470 4 749 2 473 2 474 4 183 2 655 2 76 2 759 2 288 2 78 2 558 6 291 6 665 2 478 2 190 4 764 2 671 2 297 2 482 2 566 6 768 2 677 2 486 2 572 16 773 2 204 2 205 4 103 4 
423 2 
181 2 361 2 51 4 579 2 386 2 580 2 694 2 108 2 658 2 77 2 762 2 478 3 537 2 416 6 744 2 348 2 224 3 642 2 46 2 646 3 352 2 572 2 353 2 448 1 147 3 
181 2 361 2 51 4 579 2 386 2 580 2 694 2 108 2 658 2 77 2 762 2 478 2 537 2 416 6 744 2 348 2 224 2 642 2 46 2 646 2 352 2 572 2 353 2 147 2 
181 2 361 2 51 4 579 2 386 2 580 2 694 2 108 2 658 2 77 2 762 2 478 2 537 2 416 6 744 2 348 2 224 2 642 2 46 2 646 2 352 2 572 2 353 2 147 2 
358 2 408 4 1 2 733 4 694 10 735 2 456 2 629 2 154 2 7 2 57 4 8 2 537 2 374 2 224 3 596 6 63 2 167 2 547 2 67 2 599 2 123 6 234 4 24 4 518 3 562 4 666 2 344 2 762 2 478 3 295 2 483 2 485 2 682 4 405 2 572 4 571 3 353 2 355 2 726 3 
358 2 408 4 1 2 733 4 694 10 735 2 456 2 629 2 154 2 7 2 57 4 8 2 537 2 374 2 224 2 596 6 63 2 167 2 547 2 67 2 599 2 123 4 234 4 24 4 518 2 562 4 666 2 344 2 762 2 478 2 295 2 483 2 398 2 36 2 485 2 682 4 405 2 572 4 571 2 353 2 49 2 355 2 726 2 
358 2 408 4 1 2 733 4 694 10 735 2 456 2 629 2 154 2 7 2 57 4 8 2 537 2 374 2 224 2 596 6 63 2 167 2 547 2 67 2 599 2 123 4 234 4 24 4 518 2 562 4 666 2 344 2 762 2 478 2 295 2 483 2 398 2 36 2 485 2 682 4 405 2 572 4 571 2 353 2 49 2 355 2 726 2 
358 2 408 4 1 2 733 4 694 10 735 2 456 2 629 2 154 2 7 2 57 4 8 2 537 2 374 2 224 2 596 6 63 2 167 2 547 2 67 2 599 2 123 4 234 4 24 4 518 2 562 4 666 2 344 2 762 2 478 2 295 2 483 2 398 2 36 2 485 2 682 4 405 2 572 4 571 2 353 2 49 2 355 2 726 2 
358 2 408 4 1 2 733 4 694 10 735 2 456 2 629 2 154 2 7 2 57 4 8 2 537 2 374 2 224 2 596 6 63 2 167 2 547 2 67 2 599 2 123 4 234 4 24 4 518 2 562 4 666 2 344 2 762 2 478 2 295 2 483 2 398 4 36 4 485 2 682 4 405 2 572 4 571 2 353 2 49 4 355 2 726 2 
491 2 150 2 770 2 746 2 725 2 672 2 
200 2 119 2 50 2 454 2 746 2 330 2 758 2 
602 2 494 2 360 2 453 2 755 2 555 2 74 1 694 10 736 2 185 2 535 2 761 1 662 1 477 1 611 2 415 2 612 2 320 2 60 1 376 2 227 2 43 2 379 2 95 2 572 8 204 2 
358 6 577 2 694 6 517 2 154 6 339 4 562 4 56 2 666 6 57 12 84 2 613 2 438 2 483 6 398 2 36 2 91 2 569 2 15 2 322 4 167 6 547 6 97 2 599 6 572 6 49 3 123 16 706 2 355 2 286 2 
714 2 207 2 151 2 237 2 733 2 39 2 694 1 679 2 544 2 230 2 198 1 445 2 682 2 143 4 572 1 406 2 234 2 623 7 
714 4 207 2 151 2 237 2 733 2 39 2 679 2 544 4 230 4 445 2 682 2 143 4 406 2 234 2 623 6 
714 8 207 8 151 2 237 6 733 2 39 2 694 1 679 2 544 8 230 8 198 1 445 2 682 2 143 4 572 1 406 2 234 2 623 10 
714 2 151 2 733 2 39 2 679 2 544 2 230 2 445 2 682 2 143 2 406 2 234 2 623 2 
104 1 692 2 694 38 312 2 498 2 215 2 110 4 410 2 314 2 588 2 114 4 420 2 421 2 595 2 321 2 226 2 425 2 323 4 232 2 428 2 233 6 125 5 434 2 708 4 335 18 337 4 338 2 710 2 345 2 29 4 32 2 246 2 437 4 35 14 522 2 717 4 718 4 249 2 42 2 140 2 255 2 257 2 145 4 449 1 621 2 622 2 727 4 627 2 532 2 534 2 156 16 274 2 157 2 367 1 368 2 161 2 369 2 643 2 548 8 647 4 649 1 178 2 650 2 179 2 552 2 751 2 385 2 757 2 654 2 655 4 189 2 292 1 669 2 297 6 566 36 196 4 567 2 771 2 400 2 685 2 572 34 305 2 574 2 489 2 490 2 
385 2 692 2 267 2 694 20 495 2 335 8 737 2 657 2 532 2 189 2 585 2 534 2 131 2 110 14 274 2 156 8 669 2 670 2 161 2 297 2 29 2 298 2 566 14 422 2 35 2 194 2 196 2 61 2 323 2 402 2 685 2 645 2 647 2 257 2 99 2 572 20 173 2 649 2 490 2 176 2 178 2 233 2 
0 2 690 2 694 44 312 2 498 2 110 14 588 4 114 6 591 8 420 2 13 6 421 2 321 4 226 2 116 2 424 8 323 4 232 2 428 2 329 2 233 4 125 6 434 2 709 2 708 2 335 20 337 6 338 2 710 2 345 2 133 6 29 2 32 2 246 2 437 6 248 2 35 10 522 2 717 4 718 5 251 2 140 2 446 2 255 2 257 2 142 2 145 3 621 2 727 6 356 2 357 2 451 4 734 8 532 2 534 2 156 18 157 2 538 2 161 2 466 2 280 2 643 2 548 14 647 4 178 2 179 2 552 2 751 2 754 2 654 2 655 5 557 2 80 2 189 2 664 2 292 4 297 4 296 2 298 2 766 2 566 39 193 2 196 4 567 2 400 2 303 6 403 2 685 2 572 40 305 2 490 2 206 2 
357 2 692 2 694 22 532 2 215 2 534 2 410 2 110 12 218 2 156 10 157 2 588 2 114 2 161 2 643 2 425 2 323 4 548 6 647 4 649 2 650 2 178 2 233 2 125 2 751 2 385 2 757 2 655 5 335 10 189 2 292 2 669 2 29 2 297 2 298 2 246 2 566 31 35 6 196 4 717 2 718 5 42 2 720 2 685 2 403 2 257 2 572 20 574 2 490 2 622 2 
134 2 

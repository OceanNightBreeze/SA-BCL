#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.ArrayIndexOutOfBoundsException 349 
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (323,612) (323,612) 
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (651,656) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError (132,574) 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.Error 189 120 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 11 111 
daikon.test.inv.InvariantTester:test_prob_is_ge()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 691 42 683 410 497 636 276 443 530 406 27 361 241 196 136 445 204 652 194 487 416 570 542 210 417 585 284 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 11 111 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 11 111 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 11 111 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 11 111 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 11 111 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 11 111 573 414 294 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NumberFormatException 301 473 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (323,612) (323,612) 278 331 630 369 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 331 630 369 
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 207 369 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 207 369 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaCharStream:readChar()C
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 6337 | 1 -> 0
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V | ASSIGN | 10801 | = null
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([I[I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression; | ASSIGN | 64275 | = null
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3_12()Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:subsetOf([F[D)Z
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3R_77()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:jj_3R_58()Z
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_121()Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.JavaParser:jj_3R_114()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd_differences([I)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
jtb.JavaParser:jj_2_35(I)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaCharStream:FillBuff()V
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:jj_2_25(I)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONSTANT | 14759 | 1 -> -1
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:jj_3R_123()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName; | CONDITION | 27362 | if (x) -> if (!x)
daikon.Quant:gte(II)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_89()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:concat([I[I)[I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:setDiff([I[I)[I
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Intern:internSubsequence([III)[I | RETURN | 22902 | return null
daikon.Quant:lexLTE([I[I)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParser:jj_3R_68()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.MathMDE:gcd(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 17131 | = null
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.ModBitTracker:num_samples()I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V | CONDITION | 3675 | if (x) -> if (!x)
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:modulus([I)[I
utilMDE.ArraysMDE:fn_compose([I[I)[I | RETURN | 62242 | return null
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:memberOf(F[F)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_3_28()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:lexGT([I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:split(I)I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:union([I[I)[I
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.Ppt:Ppt()V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_61()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:jj_3R_163()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:memberOf(D[F)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:jj_2_14(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:jj_3_36()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3_25()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:subsetOf([D[D)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:slice([III)[I
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.Options.OptionInfo:argument_required()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_69()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:jj_3_15()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:jj_2_10(I)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:lexGTE([I[I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName; | RETURN | 78413 | return null
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_57()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:jj_3R_115()Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:jj_3R_50()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoAux:hashCode()I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:memberOf(S[S)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
utilMDE.MathMDE:negate(I)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer; | RETURN | 13631 | return null
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4767 | = null
jtb.JavaParser:jj_2_15(I)Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_3_27()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:jj_3R_122()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.Quant:eq(II)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaCharStream:backup(I)V
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_3R_134()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_118()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_14()Z
utilMDE.ArraysMDE:min([I)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_80()Z
jtb.JavaParser:jj_3R_56()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:pairwiseLT([I[I)Z
daikon.ModBitTracker:num_sets()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParser:jj_3R_133()Z
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:jj_3_35()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:jj_3R_54()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaCharStream:ReadByte()C
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_3R_47()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | OPERATOR | 18331 | == -> !=
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3R_125()Z
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_3R_120()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quant:lte(II)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:eltsGT([II)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_62()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParser:jj_3R_135()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.Quant:eltsEqual([II)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3_30()Z
daikon.Quant:setEqual([I[I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName:hashCode()I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParser:jj_3R_126()Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_is_ge(DD)D | CONSTANT | 6853 | 1 -> -1
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | OPERATOR | 4206 | > -> ==
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:jj_3R_88()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_2_36(I)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 12386 | = null
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:sameLength([I[I)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:memberOf(F[D)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3_1()Z
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:isReverse([I[I)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptSlice0:arity()I
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3R_81()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_3R_60()Z
utilMDE.ArraysMDE:max([I)I
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_3R_75()Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:pow(II)I
utilMDE.ArraysMDE:sum([D)D
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:jj_2_13(I)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I | CONSTANT | 11181 | 1 -> 0
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:jj_3R_116()Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3_10()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61874 | = null
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:size()I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_22()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_2_4(I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:eq(JJ)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression; | ASSIGN | 83593 | = null
daikon.Quant:eq(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_3R_63()Z
daikon.ValueTuple:size()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
554 2 224 2 323 2 649 2 679 2 612 2 39 4 277 2 59 2 
370 2 129 2 170 6 5 2 393 2 255 2 38 6 275 2 407 6 470 2 617 2 
527 2 349 2 330 2 641 2 558 2 19 2 296 2 
376 4 61 2 287 2 311 14 22 10 201 6 245 4 315 15 612 4 337 6 230 8 93 6 292 6 273 8 172 2 676 2 78 2 77 6 341 8 423 2 14 2 323 4 154 6 211 8 631 4 
651 4 656 4 
398 2 
599 2 110 4 461 2 571 2 132 2 219 2 494 2 408 2 220 2 539 2 181 2 183 2 367 2 475 4 474 2 413 2 562 2 647 2 690 2 619 2 75 2 277 4 481 2 34 4 192 2 629 2 155 2 213 2 325 2 596 2 283 2 
486 2 311 12 345 4 522 2 315 14 612 4 337 4 230 8 93 4 188 8 292 2 149 6 273 8 152 6 77 4 341 8 55 4 323 4 154 4 211 6 
513 2 238 2 132 2 
646 10 667 2 478 2 305 2 263 2 439 2 147 2 574 2 13 22 102 2 384 2 332 2 579 2 657 2 
403 2 311 4 22 4 137 2 201 2 315 6 613 2 337 2 230 2 93 2 292 2 271 2 674 2 273 2 421 2 52 2 77 2 655 2 341 2 154 2 211 2 631 2 458 2 
337 2 61 2 230 2 93 2 149 4 273 2 311 4 345 2 77 2 341 2 266 2 154 2 315 6 
215 2 513 6 17 2 436 2 238 2 4 4 132 8 686 2 219 2 344 2 662 2 409 2 642 2 246 2 540 4 560 2 449 2 448 10 368 2 91 4 186 10 451 4 673 2 295 2 420 4 587 2 257 62 34 4 628 2 677 4 281 2 282 4 354 4 192 4 15 4 356 4 97 14 212 2 300 4 303 2 
550 2 103 2 682 2 120 2 338 2 29 2 189 2 289 2 45 2 398 2 
549 4 85 2 111 2 242 4 606 2 610 2 612 4 46 2 208 2 11 2 258 2 53 2 528 1 99 2 346 2 148 5 584 2 106 1 150 2 33 2 153 2 508 4 191 2 323 4 400 2 
559 2 
532 2 612 4 307 2 
536 2 
0 146 516 4 328 4 163 4 521 6 166 8 168 2 8 2 525 2 526 4 9 2 530 2 176 6 343 2 534 2 535 2 180 4 538 4 182 48 347 2 541 2 185 48 25 4 542 2 351 4 27 2 187 48 544 2 546 2 353 2 190 2 35 2 355 2 357 14 194 2 551 8 36 24 359 8 196 2 360 4 37 6 198 36 199 2 552 4 361 2 42 2 40 2 362 8 555 16 363 4 556 2 203 2 44 4 204 2 48 26 371 2 563 2 209 2 374 2 210 2 57 12 567 2 214 4 60 2 217 146 568 2 570 2 62 2 63 4 572 2 65 2 380 48 575 2 70 14 385 48 227 2 387 4 228 2 391 4 72 14 581 48 392 2 583 4 231 2 76 8 585 2 394 44 588 4 79 2 590 2 592 22 236 4 401 8 81 2 84 4 86 2 88 28 240 8 406 2 241 2 602 22 607 2 244 4 608 4 410 2 609 2 412 8 616 2 416 2 417 2 251 4 250 2 252 36 618 2 621 8 256 4 623 4 624 48 625 2 94 48 626 2 259 2 96 2 425 48 426 2 260 2 429 2 430 4 261 2 434 10 262 2 636 2 437 190 440 6 441 4 639 2 640 4 101 2 443 2 444 2 445 2 643 4 644 6 267 2 645 8 450 4 268 8 104 20 452 14 650 6 274 14 276 2 107 2 652 2 280 2 654 2 454 146 457 2 284 2 460 4 285 2 288 22 113 2 465 4 661 2 290 2 115 2 291 10 663 2 471 2 476 2 118 36 293 48 480 2 124 4 482 2 298 2 125 2 680 42 485 8 302 2 127 2 681 16 487 2 683 2 490 20 492 4 685 4 309 16 493 2 312 2 495 48 687 2 136 2 497 2 138 8 313 4 689 2 139 2 141 48 500 2 144 2 503 2 504 2 317 20 318 2 151 2 691 2 320 4 319 2 509 2 694 2 157 24 
578 2 375 2 126 2 512 1 
375 2 164 2 
158 2 676 2 83 2 122 2 375 2 64 2 132 2 
375 2 64 2 547 2 
23 2 375 2 64 2 
578 2 197 2 598 2 
375 2 64 2 
197 2 531 2 
66 2 375 2 
221 2 578 2 197 2 
143 2 432 2 578 2 
671 2 578 2 611 2 
146 2 496 2 578 2 
578 2 488 2 226 2 
197 2 348 2 
375 2 206 2 
143 2 468 2 
671 2 557 2 
496 2 483 2 
226 2 386 2 
442 2 197 2 
358 2 226 2 
496 2 381 2 
671 2 548 2 
143 2 404 2 
339 2 221 2 578 2 197 2 
339 2 221 2 578 2 197 2 455 2 
578 2 197 2 352 2 
12 2 578 2 197 2 
389 2 561 2 524 2 634 2 
158 2 161 2 132 2 233 2 
158 2 161 2 122 2 235 2 132 2 233 2 
158 2 676 2 375 2 64 2 169 2 132 2 
183 2 464 2 
158 2 676 2 279 2 132 2 
496 2 499 2 
382 2 226 2 
143 2 519 2 
671 2 659 2 
365 2 671 2 226 2 
671 2 226 2 173 2 
229 2 671 2 226 2 
304 2 671 2 226 2 
158 2 82 2 1 2 132 2 518 2 491 2 666 6 56 6 
197 2 484 2 
336 2 580 2 350 2 668 2 49 2 253 2 272 2 20 2 489 2 31 2 114 4 545 2 67 2 13 6 68 2 222 2 108 2 692 4 
578 2 582 2 
604 2 
549 4 459 2 85 2 111 2 242 4 606 2 610 2 346 2 612 4 46 2 148 4 584 2 150 2 11 2 33 2 53 2 258 2 508 4 153 2 191 2 323 4 99 2 400 2 
549 4 459 2 85 2 111 2 242 4 606 2 610 2 612 4 46 2 11 2 258 2 53 2 528 2 99 2 346 2 148 6 584 2 150 2 106 2 33 2 153 2 508 4 191 2 323 4 400 2 
92 2 32 2 98 2 
92 2 32 2 98 2 
549 4 459 2 85 2 111 2 242 4 606 2 610 2 346 2 612 4 46 2 148 4 584 2 150 2 11 2 33 2 53 2 258 2 508 4 153 2 191 2 323 4 99 2 400 2 
549 4 459 2 85 2 111 2 242 4 606 2 610 2 612 4 46 2 11 2 258 2 53 2 528 2 99 2 346 2 148 6 584 2 150 2 106 2 33 2 153 2 508 4 191 2 323 4 400 2 
549 4 459 2 85 2 111 2 242 4 606 2 610 2 612 4 46 2 11 2 258 2 53 2 528 1 99 2 346 2 148 5 584 2 106 1 150 2 33 2 153 2 508 4 191 2 323 4 400 2 
549 2 658 2 402 2 162 2 111 2 6 1 242 4 606 2 610 2 45 1 612 8 46 2 334 2 414 2 669 2 294 2 254 2 171 2 11 2 258 2 528 1 95 2 99 2 133 2 573 2 223 2 346 2 316 2 447 2 388 2 26 1 29 1 148 3 506 2 584 2 106 1 150 2 33 2 508 2 153 2 323 4 80 2 
431 2 249 2 202 2 693 2 601 2 379 2 
249 2 415 2 435 2 160 2 105 2 58 2 466 2 
128 2 433 2 600 1 286 2 71 2 89 2 333 1 314 2 612 10 498 2 140 2 205 2 449 1 615 2 335 1 269 2 620 2 232 2 373 2 297 2 628 1 323 8 632 2 399 2 695 2 156 2 
337 2 502 2 230 2 93 2 273 2 603 2 311 4 77 2 341 2 589 4 397 2 154 2 315 5 211 1 473 2 301 2 
130 2 159 2 418 2 239 1 327 7 50 2 74 2 329 2 543 2 605 4 174 2 577 2 323 1 24 2 456 2 612 1 664 2 193 2 
130 2 159 4 418 2 327 6 50 2 74 2 329 2 543 2 605 4 174 2 577 4 24 4 456 2 664 2 193 2 
130 6 159 8 418 2 239 1 327 10 50 2 74 2 329 8 543 2 605 4 174 2 577 8 323 1 24 8 456 2 612 1 664 2 193 2 
159 2 418 2 327 2 50 2 74 2 543 2 605 2 174 2 577 2 24 2 456 2 664 2 193 2 
515 6 2 6 3 6 326 6 405 4 87 4 243 6 606 12 520 16 331 2 247 7 612 102 248 11 523 6 167 12 622 2 422 2 528 31 627 6 340 8 424 6 529 6 427 2 630 2 428 2 175 6 177 1 633 4 16 2 342 2 635 6 100 16 438 4 178 4 18 2 533 6 264 2 265 2 638 2 537 5 179 2 21 4 446 46 346 6 184 6 270 12 28 4 30 2 648 6 106 31 278 6 453 6 653 6 195 2 549 50 109 8 462 6 112 6 463 4 660 2 41 4 553 26 467 6 469 2 117 12 47 2 369 2 477 12 670 2 479 6 121 6 672 12 372 8 675 6 51 6 54 2 565 4 566 2 299 8 678 2 216 4 569 12 218 2 377 2 684 6 306 2 378 16 308 2 310 6 576 2 135 13 134 6 383 4 688 2 142 6 501 4 145 4 390 16 148 117 507 6 586 4 395 2 508 42 153 12 78 2 322 6 591 6 323 90 510 4 593 6 594 2 324 2 597 8 237 4 
549 4 342 2 178 2 479 6 264 2 148 6 419 2 200 2 606 2 69 2 153 2 508 4 331 2 383 2 7 2 565 2 323 12 346 2 665 2 612 12 428 2 630 2 594 2 369 2 
514 8 515 4 2 4 326 4 3 4 517 8 405 2 87 4 243 4 606 6 331 2 612 82 165 2 614 16 90 8 411 10 523 4 248 8 167 10 622 2 528 28 627 14 340 8 424 4 529 6 630 2 175 4 633 4 637 2 635 4 100 8 438 4 178 2 264 2 537 4 21 4 446 24 346 2 184 4 270 10 28 4 106 30 278 4 453 4 653 4 549 44 462 4 112 4 463 4 41 4 553 32 364 2 43 2 116 2 472 4 117 6 665 2 369 2 477 10 119 4 670 4 479 14 121 4 672 14 207 2 372 16 675 4 54 2 564 4 565 2 566 2 299 6 678 4 216 4 569 10 131 16 218 2 377 6 684 4 378 24 310 4 135 10 134 4 383 2 225 4 142 4 501 4 145 4 390 24 73 2 505 4 148 108 507 4 396 2 508 36 153 6 321 4 322 4 591 4 323 74 234 32 511 2 510 4 593 14 595 8 594 2 597 8 
549 14 405 2 553 6 606 2 520 12 331 2 469 2 247 4 665 2 612 32 117 2 369 2 477 6 248 8 167 6 670 2 121 4 479 14 207 2 10 2 123 2 675 4 51 4 422 2 528 12 627 4 424 4 565 2 529 2 299 4 678 2 428 2 630 2 16 2 569 2 635 4 178 2 264 2 684 2 179 2 308 2 310 2 135 2 134 4 383 2 688 2 446 8 346 2 142 4 501 4 270 6 148 44 106 12 586 2 653 2 153 2 508 14 322 2 323 30 593 4 594 2 324 2 
366 2 

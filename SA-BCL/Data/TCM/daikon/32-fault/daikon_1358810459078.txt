#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (349,458) (349,458) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.NullPointerException 126 235 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V ERROR java.lang.IllegalArgumentException (31,169,206,218,440,498,542) 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.ComparisonFailure 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 680 451 254 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 680 451 254 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 327 382 474 278 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 94 97 
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 138 582 634 117 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 138 582 634 117 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 138 582 634 117 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 138 582 634 117 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:Node()V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptSlice1:num_samples()I
daikon.Quant:eltwiseGT([I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:gte(II)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:lexEqual([I[I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:memberOf(F[F)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2297 | = null
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.PptSlice0:arity()I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:eq(DD)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.ProglangType:isArray()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:lexNotEqual([I[I)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:FillBuff()V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:relate_var()V
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:eltsLT([II)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:subsetOf([S[S)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet; | ASSIGN | 2825 | = null
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaCharStream:backup(I)V | OPERATOR | 8274 | -= -> |=
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object; | ASSIGN | 262646 | = null
utilMDE.MathMDE:pow(II)I
daikon.diff.RootNode:RootNode()V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap:size()I
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:eltsGTE([II)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:lt(II)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:justified()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.Quant:isReverse([I[I)Z
daikon.Quant:subsetOf([F[D)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant:getConfidence()D
daikon.Quant:setEqual([I[I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set; | CONDITION | 16702 | if (x) -> if (!x)
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3_16()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:subsetOf([D[F)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:eltsGtIndex([I)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:lte(II)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object; | CONDITION | 21221 | if (x) -> if (!x)
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Invariant:prob_and(DDD)D
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String; | ASSIGN | 16305 | = null
utilMDE.Intern:numIntArrays()I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaCharStream:readChar()C
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:eltsLTE([II)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:min([I)I
daikon.test.InvariantFormatTester:execute()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.MathMDE:modulus([I)[I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.ProglangType:dimensions()I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:max([I)I
daikon.ProglangType:isScalar()Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd_differences([I)I
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:noDups([I)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariants:Invariants()V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus; | CONDITION | 18510 | if (x) -> if (!x)
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.PptSlice2:arity()I
daikon.Quant:setDiff([I[I)[I
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:lexLTE([I[I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14490 | = null
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:subsetOf([F[F)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptName:isEnterPoint()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:union([I[I)[I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:eltsGT([II)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:eq(II)Z
utilMDE.MathMDE:negate(I)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V | ASSIGN | 5329 | = null
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Intern:intern([I)[I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.Assert:assertTrue(Z)V
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern:internSubsequence([III)[I | RETURN | 22902 | return null
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.ProglangType:baseIsScalar()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:gcd([I)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 283084 | = null
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:lexGTE([I[I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:eq(JJ)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:memberOf(S[S)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaCharStream:getEndLine()I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:concat([I[I)[I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Debug:logDetail()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:lexLT([I[I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:ne(II)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.ArraysMDE:sum([D)D
utilMDE.MathMDE:gcd(II)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName:hashCode()I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.Invariant:logDetail()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(D[F)Z
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE:indexOf([I[I)I | CONSTANT | 22394 | 0 -> 1
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaCharStream:getBeginLine()I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Debug:logOn()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Quant:gt(II)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:ReadByte()C
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptSlice1:arity()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.Quant:memberOf(I[I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaCharStream:BeginToken()C
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I | CONDITION | 19149 | if (x) -> if (!x)
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.Invariant:logOn()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z | ASSIGN | 8607 | = null
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
123 2 449 2 43 2 458 2 351 2 536 2 521 2 349 2 248 4 
149 2 199 2 439 6 269 2 427 2 263 2 480 2 663 2 412 6 225 6 240 2 
367 2 228 6 456 2 458 2 358 4 349 2 528 2 361 6 236 2 176 2 29 6 538 6 291 4 
48 4 230 8 325 8 458 4 606 6 349 4 653 2 440 6 631 2 655 6 265 6 466 2 543 8 213 2 148 8 34 2 181 14 677 4 155 6 678 2 407 10 132 4 385 6 44 2 647 16 
481 6 104 4 
153 2 
235 2 158 2 126 2 506 2 
230 8 325 8 181 12 155 4 369 6 209 6 606 4 631 2 549 2 192 2 655 4 265 4 169 4 206 4 543 8 647 14 148 6 
324 2 345 4 666 2 2 4 140 2 437 4 113 4 23 14 560 10 309 10 585 4 371 4 293 4 394 4 296 2 241 2 121 2 544 4 179 4 60 2 124 6 334 8 616 2 81 4 450 62 424 2 288 2 425 2 249 2 594 4 83 2 62 2 406 2 271 2 620 2 488 2 533 4 134 2 107 2 171 2 
493 2 686 2 432 2 328 2 
513 2 179 4 197 2 334 2 573 2 217 2 301 2 81 2 335 2 277 2 405 2 559 2 70 2 379 2 338 2 599 2 465 2 74 2 241 2 
253 2 230 6 325 6 369 4 604 6 458 4 606 4 349 4 655 4 265 4 542 4 543 6 31 8 148 4 181 10 155 4 218 2 169 2 385 2 647 11 
124 2 666 2 334 2 
388 2 313 2 433 10 590 2 173 2 174 2 483 22 607 2 317 2 503 2 645 2 96 2 537 2 281 2 
93 1 3 2 190 2 349 34 517 2 518 2 6 2 279 2 350 5 520 6 282 2 521 2 523 2 11 2 99 2 196 2 526 3 615 2 527 2 287 2 202 12 360 4 204 2 17 2 452 2 618 4 363 2 534 2 453 16 108 8 623 2 109 2 208 3 625 2 626 4 539 2 540 2 458 32 459 32 370 1 27 2 294 2 463 1 372 2 28 2 297 2 374 6 637 2 468 2 638 4 639 2 300 2 125 2 470 16 378 2 39 1 472 2 40 2 220 1 42 2 306 1 646 2 222 1 223 2 227 2 135 3 137 2 138 2 229 2 554 4 49 2 555 1 649 8 233 2 234 2 390 2 50 2 563 3 651 2 53 16 564 24 237 4 565 2 397 2 396 2 238 2 568 3 399 1 54 2 657 3 59 2 570 2 315 1 402 2 660 2 156 2 571 2 159 8 247 3 404 2 163 2 164 2 318 2 486 3 167 2 320 16 63 2 411 2 321 4 322 2 414 2 254 2 579 2 578 4 326 3 68 3 667 3 496 1 260 24 497 2 499 2 580 2 329 2 502 1 330 32 418 1 73 1 177 2 178 2 676 1 266 2 77 2 508 3 421 2 679 2 182 6 336 2 591 6 268 2 185 2 340 2 681 2 84 2 272 2 187 2 88 1 343 2 
78 2 
136 2 349 2 
231 2 258 2 349 4 
603 6 92 4 347 2 232 2 144 2 650 6 605 2 389 4 5 2 515 6 193 4 479 6 566 2 312 2 610 6 525 6 659 6 157 4 100 6 575 2 574 2 316 6 200 6 102 2 201 6 485 2 166 2 251 30 408 6 532 6 535 4 490 2 624 30 415 30 66 2 669 2 259 2 628 2 261 2 629 2 119 2 264 4 586 2 76 2 332 6 376 2 589 4 643 2 428 2 510 2 682 6 270 4 684 2 305 2 186 2 87 2 89 2 
111 2 85 2 423 2 348 1 
395 2 423 2 
267 2 683 2 180 2 334 2 640 2 423 2 213 2 
152 2 640 2 423 2 
640 2 423 2 675 2 
146 2 111 2 556 2 
640 2 423 2 
598 2 556 2 
52 2 423 2 
262 2 111 2 556 2 
13 2 111 2 67 2 
617 2 111 2 286 2 
198 2 111 2 482 2 
111 2 255 2 131 2 
511 2 556 2 
423 2 239 2 
13 2 154 2 
617 2 219 2 
198 2 10 2 
131 2 106 2 
619 2 556 2 
478 2 131 2 
198 2 195 2 
617 2 168 2 
284 2 13 2 
262 2 111 2 556 2 24 2 
262 2 57 2 111 2 556 2 24 2 
509 2 111 2 556 2 
111 2 26 2 556 2 
401 2 460 2 501 2 
683 2 334 2 210 2 529 2 
683 2 180 2 334 2 409 2 210 2 529 2 
683 2 334 2 640 2 423 2 373 2 213 2 
632 2 354 2 
683 2 334 2 391 2 213 2 
198 2 413 2 
128 2 131 2 
13 2 79 2 
617 2 273 2 
617 2 131 2 551 2 
617 2 131 2 380 2 
617 2 131 2 377 2 
617 2 131 2 505 2 
334 2 356 2 683 2 86 2 656 6 120 2 
311 2 556 2 
189 2 434 2 285 2 514 2 38 2 483 6 82 2 597 2 147 2 384 2 19 2 188 2 30 2 622 4 512 2 342 2 22 2 45 4 
111 2 250 2 
329 2 
137 2 138 2 3 2 438 4 349 14 517 2 651 2 237 4 280 2 520 4 521 2 570 2 615 2 403 2 451 2 163 2 360 4 167 2 453 6 414 2 254 2 626 4 458 14 578 4 459 6 627 2 28 2 636 2 77 2 374 6 468 2 637 2 125 2 680 2 336 6 40 2 185 2 84 2 42 2 306 2 272 2 223 2 
137 2 138 2 3 2 438 4 349 14 517 2 651 2 237 4 280 2 238 1 520 5 521 2 570 2 615 2 403 2 451 2 163 2 360 4 167 2 453 6 414 2 254 2 626 4 458 14 578 4 459 6 627 2 28 2 636 2 77 2 374 6 468 2 637 2 125 2 680 2 336 6 40 2 185 2 681 1 84 2 42 2 306 2 272 2 223 2 
355 2 
426 2 545 2 
122 4 150 2 243 2 346 2 4 2 302 2 439 2 7 4 269 2 118 2 441 2 41 2 489 2 170 2 663 2 64 2 412 2 491 2 
47 4 274 2 0 2 346 4 4 2 349 12 439 6 651 2 8 2 7 4 393 2 441 2 442 2 12 2 314 2 150 2 243 2 572 4 161 2 162 2 576 4 360 2 165 2 489 2 167 2 170 2 105 4 663 4 64 2 412 4 491 2 454 2 323 2 492 6 414 2 626 2 458 6 292 2 114 2 211 2 118 2 263 2 331 2 28 2 467 2 122 4 374 4 642 4 302 2 547 2 40 2 592 2 269 4 427 2 41 2 42 2 84 2 225 6 386 2 226 2 
47 4 274 2 0 2 346 4 4 2 349 12 439 4 651 2 8 2 7 4 393 2 441 2 442 2 12 2 314 2 150 2 243 2 199 2 572 4 161 2 162 2 576 4 360 2 165 2 489 2 167 2 170 2 105 4 663 4 64 2 412 6 491 2 454 2 323 2 492 6 414 2 626 2 458 6 292 2 114 2 211 2 118 2 263 2 331 2 28 2 467 2 122 4 374 4 642 4 302 2 547 2 40 2 592 2 269 4 41 2 42 2 84 2 225 6 386 2 226 2 
47 4 274 2 0 2 346 4 4 2 349 12 439 6 651 2 8 2 7 4 393 2 441 2 442 2 480 2 12 2 314 2 150 2 243 2 572 4 161 2 162 2 576 4 360 2 165 2 489 2 167 2 170 2 105 4 663 4 64 2 412 6 491 2 454 2 323 2 492 6 414 2 626 2 458 6 292 2 114 2 211 2 118 2 263 2 331 2 28 2 467 2 122 4 374 4 642 8 302 2 547 2 40 2 592 2 269 4 41 2 42 2 84 2 225 6 386 2 226 2 
47 4 274 2 0 2 346 4 4 2 349 12 439 6 651 2 8 2 7 4 393 2 441 2 442 2 480 2 12 2 314 2 150 2 243 2 199 2 572 4 161 2 162 2 576 4 360 2 165 2 489 2 167 2 170 2 105 8 663 4 64 2 412 8 491 2 454 2 323 2 492 10 414 2 626 2 458 6 292 2 114 2 211 2 118 2 263 2 331 2 28 2 467 2 122 4 374 4 642 8 302 2 547 2 40 2 592 2 269 4 41 2 42 2 84 2 225 8 386 2 226 2 
47 4 274 2 0 2 346 4 4 2 349 12 439 6 651 2 8 2 7 4 393 2 441 2 442 2 480 2 12 2 314 2 150 2 243 2 572 4 161 2 162 2 576 4 360 2 165 2 489 2 167 2 170 2 105 8 663 4 64 2 412 6 491 2 454 2 323 2 492 10 414 2 626 2 458 6 292 2 114 2 211 2 118 2 263 2 331 2 28 2 467 2 122 4 374 4 642 8 302 2 547 2 40 2 592 2 269 4 41 2 42 2 84 2 225 6 386 2 226 2 
1 2 0 2 346 4 3 2 4 2 349 46 517 2 7 4 8 2 9 6 519 2 352 4 520 6 521 2 12 2 199 4 359 2 202 4 360 4 365 1 368 1 211 2 28 2 541 6 374 6 35 6 216 6 547 2 40 2 548 2 41 2 42 2 223 2 226 2 225 12 386 2 47 4 554 2 557 6 558 1 393 4 237 4 238 2 55 2 56 7 243 2 569 1 570 2 402 2 572 8 403 2 61 2 576 6 252 2 412 8 64 2 414 2 254 2 578 4 258 6 263 4 75 2 77 2 78 6 80 2 591 2 592 2 593 2 269 4 429 2 84 2 272 2 431 2 274 2 275 2 436 2 438 4 95 2 439 4 441 2 442 2 283 2 612 2 447 6 615 12 103 6 453 6 454 2 455 2 110 1 626 4 458 24 292 2 114 2 459 8 627 4 115 2 630 1 118 2 635 2 295 1 467 4 636 2 122 4 637 2 468 2 638 2 125 2 641 2 642 2 302 2 129 2 130 2 473 6 133 4 648 2 137 2 136 6 138 2 476 8 139 2 145 6 651 2 652 2 310 6 654 1 150 2 314 2 658 6 151 6 159 2 161 2 160 2 162 2 163 2 484 6 165 2 487 2 489 2 167 2 663 4 170 2 491 2 665 2 321 2 323 2 172 2 492 2 668 2 670 7 671 2 672 10 330 2 175 2 182 2 336 6 185 2 339 1 681 2 
274 2 275 2 0 2 1 2 346 4 436 2 3 2 438 4 4 2 95 2 349 48 439 8 517 2 8 2 7 4 441 2 519 2 9 6 442 2 352 4 520 6 283 2 521 2 12 2 11 2 447 6 612 2 615 12 359 2 202 8 360 4 103 6 290 2 453 6 454 2 455 2 626 4 458 26 292 2 459 8 114 2 627 4 115 2 211 2 118 2 635 2 541 6 28 2 467 4 636 2 32 2 122 4 374 6 468 2 637 2 35 6 638 4 216 6 125 2 641 2 642 6 547 2 302 2 40 2 548 2 129 2 41 2 130 2 42 2 473 6 133 4 223 2 386 2 225 12 226 2 648 2 136 6 47 4 137 2 138 2 139 2 476 8 554 4 557 6 145 6 652 2 651 2 310 6 393 4 237 4 480 4 238 2 55 2 658 6 314 2 243 2 150 2 151 6 570 2 402 2 159 2 572 8 160 2 161 2 403 2 61 2 162 2 163 2 576 6 484 6 165 2 487 2 489 2 167 2 252 2 170 2 663 4 64 2 412 8 491 2 665 2 321 4 492 2 172 2 323 2 414 2 254 2 578 4 258 6 668 2 671 2 672 10 263 4 330 2 175 2 75 2 77 2 78 6 182 2 80 2 591 2 336 6 593 2 592 2 185 2 269 4 429 2 681 2 84 2 272 2 431 2 
274 2 275 2 0 2 1 2 346 4 436 2 3 2 438 4 4 2 95 2 349 48 517 2 439 8 8 2 7 4 441 2 519 2 9 6 442 2 352 4 520 6 283 2 521 2 12 2 11 2 447 6 612 2 615 12 359 2 202 8 360 4 103 6 290 2 453 6 105 4 454 2 455 2 626 4 458 26 292 2 459 8 114 2 627 4 115 2 211 2 118 2 635 2 541 6 28 2 467 4 636 2 32 2 122 4 374 6 468 2 637 2 35 6 638 4 216 6 125 2 641 2 642 6 547 2 302 2 40 2 548 2 129 2 41 2 130 2 42 2 473 6 133 4 223 2 386 2 225 12 226 2 648 2 136 6 47 4 137 2 138 2 139 2 476 8 554 4 557 6 145 6 652 2 651 2 310 6 393 4 237 4 480 4 238 2 55 2 658 6 314 2 243 2 150 2 151 6 570 2 402 2 159 2 572 8 160 2 161 2 403 2 61 2 162 2 163 2 576 6 484 6 165 2 487 2 489 2 167 2 252 2 170 2 663 4 64 2 412 8 491 2 665 2 321 4 172 2 492 6 323 2 414 2 254 2 578 4 258 6 668 2 671 2 672 10 263 4 330 2 175 2 75 2 77 2 78 6 182 2 80 2 591 2 336 6 593 2 592 2 185 2 269 4 429 2 681 2 84 2 272 2 431 2 
0 2 1 4 344 2 346 4 3 2 4 2 349 52 191 6 517 2 7 4 8 2 519 2 9 12 352 4 520 6 521 2 12 2 11 2 199 2 359 2 202 10 360 4 16 2 211 2 28 2 541 6 32 2 374 6 375 2 35 6 216 6 37 6 547 2 40 2 548 2 41 2 42 2 383 6 223 2 226 2 225 16 386 2 224 6 47 4 554 4 557 12 393 4 237 4 238 2 55 2 243 2 570 2 402 2 572 8 403 2 61 2 576 6 252 2 412 10 64 2 414 2 254 2 578 4 258 12 581 6 263 4 75 2 77 2 78 12 80 2 591 4 592 2 593 2 269 4 427 2 429 2 84 2 272 2 431 2 274 2 91 6 275 2 436 2 438 6 95 2 439 10 441 2 442 2 283 2 98 2 612 2 447 6 615 10 101 2 103 6 290 2 453 8 105 4 454 2 455 2 626 4 458 24 292 2 114 2 459 12 627 4 116 2 115 2 633 6 118 2 635 2 467 4 636 2 122 4 637 2 468 2 298 6 638 4 125 2 641 2 642 6 302 2 129 2 644 2 473 12 133 4 475 2 648 2 137 2 136 12 138 2 476 8 139 2 145 6 651 2 652 2 310 6 480 4 150 2 314 2 658 6 151 6 159 4 161 2 160 2 162 2 163 2 484 6 165 2 487 2 489 2 167 2 663 4 170 2 491 2 665 2 321 4 323 2 492 6 172 2 668 2 671 2 672 8 330 4 175 2 182 4 336 8 184 6 185 2 681 2 
47 2 492 4 323 2 274 2 292 2 114 2 4 2 349 4 439 6 211 2 7 2 263 2 441 2 118 2 442 2 480 2 122 2 243 2 150 2 572 2 161 2 642 6 162 2 547 2 302 2 576 2 592 2 269 4 489 2 105 4 663 4 412 6 454 2 386 2 225 4 
274 2 3 2 438 4 4 2 349 28 439 6 517 2 7 2 279 2 441 2 442 2 520 6 521 2 615 4 360 4 453 6 454 2 626 4 458 24 292 2 459 8 114 2 627 2 211 2 118 2 28 2 636 2 122 2 374 6 637 2 468 2 469 2 125 2 642 6 547 2 302 2 40 2 130 2 42 2 304 2 646 2 223 2 386 2 225 4 226 2 47 2 137 2 138 2 308 2 651 2 392 2 237 4 480 2 238 2 244 2 150 2 243 2 59 2 570 2 572 2 161 2 403 2 162 2 576 2 163 2 489 2 167 2 663 4 412 6 323 2 414 2 492 2 254 2 578 4 329 2 672 2 263 2 330 3 77 2 182 3 422 3 336 6 591 3 592 2 185 2 269 4 681 2 84 2 272 2 
47 4 274 2 0 2 346 4 4 2 349 12 439 6 651 2 8 2 7 4 393 2 441 2 442 2 480 2 12 2 314 2 150 2 243 2 572 4 161 2 162 2 576 4 360 2 165 2 489 2 167 2 170 2 105 8 663 4 64 2 412 6 491 2 454 2 323 2 492 10 414 2 626 2 458 6 292 2 114 2 211 2 118 2 263 2 331 2 28 2 467 2 122 4 374 4 642 8 302 2 547 2 40 2 592 2 269 4 41 2 42 2 84 2 225 6 386 2 226 2 
90 4 47 4 274 2 0 2 346 4 4 2 349 12 439 8 651 2 8 2 7 4 393 2 441 2 442 2 480 2 12 2 58 2 314 2 150 2 243 2 572 4 161 2 162 2 576 4 360 2 165 2 489 2 167 2 170 2 105 8 663 4 64 2 412 6 491 2 454 2 323 2 492 10 414 2 626 2 458 6 292 2 114 2 461 2 211 2 118 2 263 2 28 2 467 2 122 4 374 4 642 8 302 2 547 2 40 2 592 2 269 4 427 2 41 2 42 2 84 2 225 8 226 2 
274 2 357 2 454 2 
274 2 357 2 454 2 
274 4 346 4 3 2 4 4 349 24 517 2 439 12 8 2 7 2 352 2 520 6 446 2 521 2 522 2 12 2 199 4 615 4 357 2 530 4 202 4 360 4 621 2 453 2 105 4 207 2 454 6 626 4 458 16 459 2 627 6 28 2 467 4 636 2 122 2 374 6 637 2 468 2 638 4 299 2 125 2 642 6 471 2 302 2 547 2 40 2 42 2 133 2 552 2 223 2 553 2 225 16 137 2 47 2 138 2 554 4 142 4 651 2 393 2 237 4 238 2 480 4 242 2 314 2 151 2 570 2 402 4 661 2 572 4 245 2 246 4 662 2 403 2 162 2 576 4 163 2 489 2 167 2 410 2 170 2 663 4 64 2 412 12 665 2 321 4 414 2 492 6 578 4 495 2 257 2 668 2 672 2 583 2 263 4 330 2 417 2 77 2 80 2 336 2 185 2 269 4 427 4 681 2 84 2 272 2 
545 2 214 2 151 2 615 2 458 2 36 2 641 2 471 2 40 2 349 4 672 2 194 2 133 2 207 2 446 2 491 2 648 2 
274 4 0 2 346 4 3 2 4 4 349 24 517 2 439 12 8 2 7 2 352 2 520 6 446 2 521 2 522 2 12 2 524 2 199 4 615 2 357 2 530 4 202 4 360 4 453 2 105 4 207 2 454 6 626 4 458 16 459 2 627 6 28 2 467 4 636 2 122 2 374 6 637 2 468 2 638 4 299 2 125 2 642 6 471 2 302 2 547 2 40 2 42 2 223 2 225 16 47 2 137 2 138 2 554 4 142 4 651 2 393 4 237 4 238 2 480 4 398 2 242 2 314 2 151 2 570 2 402 4 661 4 572 4 245 2 246 4 403 2 162 2 576 4 163 2 489 2 167 2 410 2 170 2 663 4 64 2 412 12 665 2 321 4 414 2 492 6 578 4 495 2 257 2 668 2 583 2 263 4 330 4 674 2 417 2 77 2 80 2 336 2 185 2 269 4 427 4 681 2 84 2 601 2 272 2 430 2 
274 4 0 2 346 4 3 2 4 4 349 24 517 2 439 12 8 2 7 2 352 2 520 6 446 2 521 2 522 2 12 2 14 2 199 4 615 4 357 2 530 4 202 4 360 4 453 2 105 4 207 2 454 6 626 4 458 16 459 2 627 6 28 2 467 4 636 2 122 2 374 6 637 2 468 2 546 2 638 4 299 2 215 2 125 2 642 6 471 2 302 2 547 2 40 2 42 2 133 2 223 2 225 16 137 2 47 2 138 2 554 4 142 4 651 2 393 4 237 4 238 2 480 4 242 2 314 2 151 2 570 2 402 4 661 2 572 4 245 2 246 4 403 2 162 2 576 4 163 2 489 2 167 2 410 2 170 2 663 4 64 2 412 12 665 2 321 4 414 2 492 6 578 4 495 2 257 2 668 2 500 2 672 2 583 2 263 4 330 2 417 2 588 2 77 2 80 2 336 2 185 2 269 4 427 4 681 2 84 2 272 2 
46 2 382 2 443 2 141 2 600 2 474 2 327 2 278 2 203 2 307 2 
254 2 435 2 1 6 494 2 458 2 459 2 438 2 349 2 462 2 330 3 609 2 444 2 587 1 445 2 400 2 15 2 420 3 448 2 182 3 591 3 336 2 205 4 362 2 453 2 20 2 
254 2 435 2 1 6 494 2 458 2 459 2 438 2 349 2 462 2 330 2 609 2 444 2 445 2 400 2 15 2 420 2 448 2 182 2 591 2 336 2 205 4 362 2 453 2 20 2 
254 2 435 2 1 6 494 2 458 2 459 2 438 2 349 2 462 2 330 2 609 2 444 2 445 2 400 2 15 2 420 2 448 2 182 2 591 2 336 2 205 4 362 2 453 2 20 2 
366 2 65 2 230 2 254 2 325 2 112 3 143 2 256 6 458 4 459 2 606 2 498 2 71 2 349 10 51 2 25 4 212 3 584 2 53 2 330 3 416 2 655 2 504 4 265 2 543 2 148 1 507 2 333 4 613 3 181 4 155 2 183 4 470 2 591 3 337 4 596 2 319 2 341 2 364 4 20 2 647 5 
366 2 65 2 230 2 254 2 325 2 112 2 143 2 256 6 458 4 459 2 606 2 498 2 71 2 349 10 51 2 25 4 212 2 584 2 53 2 330 2 416 2 655 2 504 4 265 2 543 2 148 2 507 2 333 4 613 2 181 4 155 2 183 4 470 2 591 2 337 4 289 2 596 2 319 2 341 2 364 4 385 2 20 2 647 4 
366 2 65 2 230 2 254 2 325 2 112 2 143 2 256 6 458 4 459 2 606 2 498 2 71 2 349 10 51 2 25 4 212 2 584 2 53 2 330 2 416 2 655 2 504 4 265 2 543 2 148 2 507 2 333 4 613 2 181 4 155 2 183 4 470 2 591 2 337 4 289 2 596 2 319 2 341 2 364 4 385 2 20 2 647 4 
366 2 65 2 230 2 254 2 325 2 112 2 143 2 256 6 458 4 459 2 606 2 498 2 71 2 349 10 51 2 25 4 212 2 584 2 53 2 330 2 416 2 655 2 504 4 265 2 543 2 148 2 507 2 333 4 613 2 181 4 155 2 183 4 470 2 591 2 337 4 289 2 596 2 319 2 341 2 364 4 385 2 20 2 647 4 
366 2 65 2 230 2 254 2 325 2 112 2 143 2 256 6 458 4 459 2 606 2 498 2 71 2 349 10 51 2 25 4 212 2 584 2 53 2 330 2 416 2 655 2 504 4 265 2 543 2 148 4 507 2 333 4 613 2 181 4 155 2 183 4 470 2 591 2 337 4 289 4 596 2 319 2 341 2 364 4 385 4 20 2 647 4 
464 2 685 2 69 2 353 2 72 2 127 2 
303 2 673 2 18 2 353 2 602 2 387 2 561 2 
97 2 94 2 381 2 
562 2 
611 2 419 2 333 2 276 2 614 4 458 1 457 7 349 1 608 2 516 2 595 2 550 2 364 2 221 1 531 2 504 2 567 2 664 2 
611 2 419 4 333 2 276 2 614 4 457 6 608 2 516 2 595 2 364 2 550 4 531 2 504 2 567 2 664 4 
611 2 419 8 333 2 276 2 614 4 458 1 457 10 349 1 608 2 516 8 595 2 364 2 550 8 221 1 531 2 504 2 567 6 664 8 
611 2 419 2 333 2 276 2 614 2 457 2 608 2 595 2 364 2 550 2 531 2 504 2 664 2 
138 2 349 2 477 1 577 1 458 2 117 2 582 2 634 2 33 2 
138 2 582 2 117 2 33 2 634 2 458 2 349 2 
138 2 582 2 117 2 33 2 634 2 458 2 349 2 
138 2 582 2 117 2 33 2 634 2 458 2 349 2 
21 2 

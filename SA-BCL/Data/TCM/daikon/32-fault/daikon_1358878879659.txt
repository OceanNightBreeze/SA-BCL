#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError (64,717) 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 240 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 8 278 928 387 490 188 614 324 309 754 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.StringIndexOutOfBoundsException 745 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.Error 335 666 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.Error 335 666 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.Error 335 666 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.Error 335 666 
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (129,204) (129,204) 180 11 445 545 
daikon.test.VarInfoNameTest:testJML()V FAILED junit.framework.AssertionFailedError 237 545 
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (129,204) (129,204) 449 11 445 545 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 237 545 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:eltwiseLTE([I)Z
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.Quant:setDiff([I[I)[I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_3R_49()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaCharStream:getEndLine()I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([F[F)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:subsetOf([D[D)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3R_61()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_3R_85()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:eltwiseLT([I)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:logOn()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:new_ppt()V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaCharStream:readChar()C
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:jj_3R_69()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.Quant:eltwiseGT([I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3R_123()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
daikon.ProglangType:isPseudoArray()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice1:arity()I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.diff.RootNode:RootNode()V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.JavaCharStream:getBeginColumn()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:jj_3_14()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.ProglangType:isArray()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_15(I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getBeginLine()I
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | CONDITION | 14085 | if (x) -> if (!x)
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGT([II)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName:hashCode()I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name; | RETURN | 55834 | return null
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V | CONDITION | 3675 | if (x) -> if (!x)
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParser:jj_3_5()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.Intern:intern([J)[J
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_3_3()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_97()Z
daikon.Quant:memberOf(I[I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.Node:Node()V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_58()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z | CONDITION | 4097 | if (x) -> if (!x)
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:InvMap()V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:memberOf(S[S)Z
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_2_3(I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_63()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.Invariant:isWorthPrinting()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.WeakHasherMap:size()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quant:eq(JJ)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_4()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:gt(II)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3_10()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParser:jj_3R_47()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaCharStream:ReadByte()C
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:isMissing(I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_2_13(I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName; | RETURN | 78413 | return null
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[D)Z
daikon.Quant:gte(II)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 4877 | 40 -> 1
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.PptSlice0:arity()I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:num_samples()I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Debug:logDetail()Z
daikon.ProglangType:isScalar()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_2_4(I)Z
utilMDE.ArraysMDE:sum([I)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:lte(II)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.PptName:isCombinedExitPoint()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexLT([I[I)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3_12()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Debug:logOn()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_2_14(I)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 127949 | = null
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:FillBuff()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:jj_3R_50()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Ppt:Ppt()V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarComparabilityImplicit:toString()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | STATEMENT | 22083 | stmt -> ;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.MathMDE:negate(I)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:jj_2_5(I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsGtIndex([I)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:ne(II)Z
daikon.Quant:setEqual([I[I)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.MathMDE:gcd([I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:jj_3R_134()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.MathMDE:pow(II)I
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf([B[I)Z
daikon.test.InvariantFormatTester:execute()Z | CONSTANT | 5806 | 1 -> 0
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:intersection([I[I)[I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParser:jj_3R_122()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:jj_3R_96()Z
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:slice([III)[I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_88()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:concat([I[I)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsLT([II)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:eq(FF)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | STATEMENT | 10772 | stmt -> ;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 10778 | 3 -> 0
utilMDE.Intern:intern([I)[I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:eltsEqual([II)Z | OPERATOR | 161601 | < -> >
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_60()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.ProglangType:dimensions()I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:num_samples()I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_148()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:subsetOf([F[D)Z
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:jj_3R_54()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.ModBitTracker:num_sets()I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
29 2 204 2 644 2 653 2 156 2 273 4 129 2 789 2 757 2 
874 2 753 6 137 2 781 6 297 2 786 2 329 6 661 2 600 2 946 2 277 2 
204 2 241 2 366 2 886 6 780 6 35 6 784 6 687 2 763 2 476 4 358 4 129 2 563 2 
1 4 345 26 938 4 136 16 190 10 73 8 613 10 143 10 402 10 497 2 463 2 434 2 834 6 749 16 262 2 52 8 204 6 652 16 408 10 206 12 900 2 927 2 507 4 731 8 558 2 276 6 667 29 301 4 129 6 562 8 
120 6 46 4 
151 2 
540 2 617 2 491 2 9 2 623 2 624 2 680 2 435 2 382 4 544 2 204 4 82 2 155 2 551 2 326 2 553 2 22 2 883 2 399 2 29 2 935 4 400 2 350 2 569 2 353 2 571 2 643 2 286 2 715 2 172 4 463 2 362 2 717 2 775 2 718 2 953 2 57 4 656 2 64 2 298 2 663 2 124 2 129 4 239 2 
345 48 136 32 539 4 190 16 2 6 222 6 104 8 138 6 613 16 140 4 143 16 314 4 196 4 402 6 148 2 871 4 834 4 749 32 52 6 204 4 652 32 408 16 206 22 386 2 783 4 503 2 470 2 927 2 392 4 121 2 507 2 731 18 65 6 276 4 667 56 477 6 129 4 765 6 26 2 
257 2 64 2 932 2 
318 22 30 2 924 2 385 2 570 2 92 2 574 10 709 2 107 2 127 2 256 2 79 2 337 2 717 2 
242 2 345 4 136 2 190 2 613 2 428 2 143 2 460 2 378 2 173 2 402 4 834 2 749 2 652 2 408 2 752 2 206 2 412 2 507 2 731 2 667 6 126 2 97 2 
652 8 345 12 408 4 206 4 136 8 190 4 783 4 613 4 532 2 143 4 196 4 809 2 667 16 477 6 301 2 749 8 765 6 
29 2 305 2 264 2 422 2 724 6 594 2 889 2 90 2 64 4 108 2 662 2 733 2 227 2 257 2 737 2 650 6 932 2 720 2 
591 2 828 2 453 2 719 2 240 2 
374 16 375 2 244 1 610 2 376 2 487 2 488 32 4 3 249 1 616 2 141 1 6 2 746 2 494 2 253 2 380 2 499 2 150 3 876 2 272 3 627 6 501 1 877 3 878 2 391 2 880 1 21 1 509 1 397 2 28 1 280 2 637 6 31 1 33 2 768 2 517 2 36 2 170 3 38 2 644 2 645 1 48 2 892 1 523 2 404 2 51 2 778 12 409 2 529 2 294 2 410 2 59 2 61 6 659 2 62 4 63 3 788 1 185 2 183 2 903 32 187 2 792 2 534 2 796 2 908 3 797 2 69 3 673 2 310 2 800 16 72 2 911 2 541 2 914 8 676 1 916 2 807 2 315 2 918 2 77 2 920 2 198 2 199 16 432 2 200 2 811 1 202 3 681 2 204 34 321 4 682 4 205 4 812 2 439 2 926 2 327 2 208 2 816 3 210 24 209 2 93 1 555 16 554 2 691 4 216 2 99 2 698 2 934 2 827 2 101 2 220 2 102 1 703 2 704 2 454 2 573 2 577 2 226 4 947 3 357 8 462 2 361 2 950 2 952 6 588 2 465 2 722 5 835 2 836 2 839 4 840 2 367 3 841 2 369 2 960 2 728 2 730 2 123 2 232 8 736 4 603 2 604 2 130 2 479 2 129 32 236 24 605 2 
204 2 163 2 
204 4 502 2 888 2 
608 2 
373 2 132 4 852 18 855 2 135 2 482 4 484 10 612 2 246 14 247 2 614 2 490 2 142 120 618 4 7 2 619 16 8 38 621 2 146 4 147 6 748 2 258 4 626 6 263 2 266 14 152 2 875 2 154 2 387 2 157 8 754 2 390 2 629 4 395 10 24 20 633 2 635 4 165 2 278 102 167 2 27 4 512 4 169 8 401 38 514 2 769 4 39 46 642 22 287 2 288 2 772 2 175 2 174 120 774 2 405 2 291 4 406 2 50 36 893 4 292 2 527 2 56 4 55 2 293 2 897 24 60 10 898 2 660 10 181 14 533 2 791 2 904 2 418 2 535 2 665 2 537 4 67 38 302 2 670 4 188 2 671 4 799 2 674 20 423 4 309 2 71 4 425 120 804 4 311 4 193 36 316 30 197 4 921 4 203 2 436 2 320 2 925 4 86 2 324 2 928 2 211 36 331 2 929 2 212 2 332 2 334 8 559 2 96 4 823 4 825 2 826 2 699 38 933 20 219 2 702 2 452 4 349 2 568 24 830 14 105 2 352 2 575 4 710 2 458 38 579 24 711 6 580 4 364 2 466 4 955 2 725 4 230 4 726 24 596 2 961 2 845 2 962 22 847 36 125 36 734 38 602 2 131 2 963 2 238 4 964 10 
312 2 759 1 628 2 655 2 
333 2 628 2 
1 2 269 2 43 2 628 2 303 2 756 2 64 2 
713 2 628 2 303 2 
94 2 628 2 303 2 
712 2 25 2 655 2 
628 2 303 2 
842 2 
628 2 572 2 
133 2 712 2 655 2 
444 2 388 2 655 2 
348 2 655 2 411 2 
32 2 655 2 498 2 
41 2 655 2 902 2 
712 2 3 2 
628 2 552 2 
109 2 444 2 
0 2 411 2 
162 2 498 2 
41 2 692 2 
712 2 338 2 
41 2 669 2 
498 2 697 2 
513 2 411 2 
14 2 444 2 
133 2 712 2 654 2 655 2 
133 2 712 2 654 2 655 2 705 2 
712 2 655 2 448 2 
712 2 10 2 655 2 
837 2 831 2 625 2 279 2 
318 6 85 4 347 2 813 2 910 2 658 2 76 2 744 2 761 2 354 2 443 2 80 2 634 2 381 2 821 2 907 4 339 2 81 2 
655 2 441 2 
269 2 528 2 815 2 64 2 
269 2 43 2 528 2 500 2 815 2 64 2 
1 2 269 2 42 2 628 2 303 2 64 2 
161 2 624 2 
1 2 269 2 785 2 64 2 
498 2 223 2 
41 2 290 2 
444 2 818 2 
531 2 411 2 
41 2 508 2 411 2 
144 2 41 2 411 2 
41 2 411 2 164 2 
41 2 299 2 411 2 
887 2 189 2 708 6 269 2 16 2 296 2 182 6 64 2 
712 2 727 2 
209 2 
374 6 854 2 487 6 488 4 616 2 494 2 145 2 495 2 380 2 499 2 268 2 627 4 21 2 397 2 637 6 33 2 517 2 38 2 644 2 48 2 892 2 523 2 404 2 51 2 176 2 53 2 778 8 529 2 294 2 59 2 61 2 62 4 183 2 903 6 792 2 672 2 70 2 914 2 77 2 918 2 204 26 682 2 205 2 322 2 926 4 327 2 208 2 328 4 691 4 216 2 450 2 101 2 220 2 703 2 576 4 226 4 462 2 110 2 952 2 365 2 465 2 114 2 839 2 841 2 369 2 843 2 960 2 123 2 736 4 129 26 480 2 130 2 604 2 607 2 
374 6 854 2 487 6 488 4 616 2 494 2 145 2 380 2 499 2 268 2 627 5 21 2 760 2 397 2 637 6 33 2 517 2 38 2 644 2 48 2 892 2 523 2 404 2 51 2 176 2 53 2 778 8 529 2 294 2 59 2 61 2 62 4 183 2 903 6 792 2 672 2 70 2 803 2 914 2 916 1 77 2 918 2 204 26 682 2 205 2 322 2 926 4 327 2 208 2 328 4 691 4 216 2 346 2 101 2 220 2 703 2 454 1 576 4 226 4 462 2 952 2 365 2 465 2 835 2 114 2 839 2 841 2 369 2 843 2 960 2 123 2 736 4 129 26 480 2 130 2 604 2 607 2 
695 2 
678 2 516 2 
306 4 308 2 742 2 194 2 77 2 260 2 751 4 267 2 204 12 84 2 323 2 753 6 20 2 329 6 506 2 274 2 691 2 819 2 397 2 446 8 822 2 342 2 637 4 103 4 33 2 515 8 351 2 455 2 171 2 457 2 459 2 948 2 44 2 356 2 462 2 289 2 647 2 404 2 112 2 178 4 229 2 781 6 958 2 369 2 297 2 786 2 62 2 183 2 661 4 598 4 416 2 600 4 186 2 793 10 474 2 794 2 129 6 849 2 909 4 304 2 
306 4 308 2 742 2 377 2 194 2 77 2 260 2 751 4 267 2 204 12 84 2 323 2 753 6 20 2 329 8 274 2 691 2 819 2 397 2 446 8 822 2 277 2 342 2 637 4 103 4 33 2 515 8 351 2 455 2 171 2 457 2 459 2 948 2 44 2 462 2 356 2 289 2 647 2 404 2 178 4 229 2 781 8 958 2 369 2 297 2 62 2 786 2 183 2 661 4 598 4 416 2 600 4 186 2 905 2 793 10 474 2 794 2 129 6 849 2 851 4 909 4 304 2 
751 2 267 2 342 2 306 4 308 2 178 4 753 2 229 2 329 2 194 2 661 2 600 2 459 2 44 2 356 2 289 2 849 2 822 2 
306 4 308 2 742 2 194 2 77 2 260 2 751 4 267 2 204 12 84 2 323 2 753 4 20 2 329 6 506 2 274 2 691 2 819 2 397 2 446 4 822 2 277 2 342 2 637 4 103 4 33 2 515 4 351 2 455 2 171 2 457 2 459 2 948 2 44 2 356 2 462 2 289 2 647 2 404 2 112 2 178 4 229 2 781 6 958 2 369 2 786 2 62 2 183 2 661 4 598 4 416 2 600 4 186 2 793 6 474 2 794 2 129 6 849 2 909 4 304 2 
306 4 308 2 742 2 194 2 77 2 260 2 751 4 267 2 204 12 84 2 323 2 753 6 20 2 329 4 506 2 274 2 691 2 819 2 397 2 446 4 822 2 342 2 637 4 103 4 33 2 515 4 351 2 455 2 171 2 457 2 946 2 459 2 948 2 44 2 356 2 462 2 289 2 647 2 404 2 112 2 178 4 229 2 781 6 958 2 369 2 786 2 62 2 183 2 661 4 598 4 416 2 600 4 186 2 793 6 474 2 794 2 129 6 849 2 909 4 304 2 
306 4 308 2 742 2 194 2 77 2 260 2 751 4 267 2 204 12 84 2 323 2 753 6 20 2 329 6 506 2 274 2 691 2 819 2 397 2 446 4 822 2 342 2 637 4 103 4 33 2 515 8 351 2 455 2 171 2 457 2 459 2 948 2 44 2 356 2 462 2 289 2 647 2 404 2 112 2 178 4 229 2 781 6 958 2 369 2 297 2 786 2 62 2 183 2 661 4 598 4 416 2 600 4 186 2 793 6 474 2 794 2 129 6 849 2 909 4 304 2 
306 4 308 2 742 2 194 2 77 2 260 2 751 4 267 2 204 12 84 2 323 2 753 8 20 2 329 6 506 2 274 2 691 2 819 2 397 2 446 8 822 2 342 2 637 4 103 4 33 2 515 8 351 2 455 2 171 2 457 2 946 2 459 2 948 2 44 2 356 2 462 2 289 2 647 2 404 2 112 2 178 4 229 2 781 8 958 2 369 2 297 2 62 2 786 2 183 2 661 4 598 4 416 2 600 4 186 2 793 10 474 2 794 2 129 6 849 2 909 4 304 2 
306 4 308 2 742 2 194 2 77 2 260 2 751 4 267 2 204 12 84 2 323 2 753 6 20 2 329 6 506 2 274 2 691 2 819 2 397 2 446 8 822 2 342 2 637 4 103 4 33 2 515 8 351 2 455 2 171 2 457 2 459 2 948 2 44 2 356 2 462 2 289 2 647 2 404 2 112 2 178 4 229 2 781 6 958 2 369 2 297 2 786 2 62 2 183 2 661 4 598 4 416 2 600 4 186 2 793 10 474 2 794 2 129 6 849 2 909 4 304 2 
739 2 740 2 742 2 486 2 487 6 488 2 492 2 494 2 254 2 12 2 260 2 750 2 751 4 267 2 270 1 753 8 502 6 19 2 20 2 505 6 274 2 511 2 33 2 515 2 517 12 771 6 44 2 45 6 289 2 48 2 51 2 778 4 779 4 529 2 781 12 59 2 61 2 62 4 786 4 787 2 792 2 793 2 794 2 304 2 68 1 306 4 538 1 70 2 308 2 74 4 77 2 810 2 84 2 323 4 328 4 89 2 329 4 819 4 98 2 822 2 344 1 342 2 101 2 567 7 103 8 106 2 351 2 578 1 356 2 363 2 112 2 592 8 839 2 841 2 369 2 118 10 598 6 600 4 123 2 129 24 849 2 607 2 374 6 608 6 859 2 860 6 615 2 616 2 870 6 153 1 627 6 879 6 630 2 393 6 394 2 397 2 396 2 163 6 637 6 639 2 171 2 644 2 647 2 404 2 176 4 651 2 407 2 178 4 179 1 413 6 183 2 661 4 903 8 184 2 416 2 186 2 909 4 191 6 913 2 914 2 916 2 194 2 195 1 918 2 677 1 919 6 433 6 204 46 205 2 682 2 208 2 691 4 216 2 447 2 931 2 700 2 451 2 220 2 454 2 455 2 943 2 457 2 225 6 226 4 946 4 459 2 948 2 462 2 461 6 951 2 952 2 465 2 954 2 229 2 468 7 958 2 474 2 736 4 480 2 
739 2 374 6 740 2 608 6 486 2 742 2 859 2 487 6 488 2 615 2 860 6 616 2 492 2 494 2 12 2 254 2 870 6 260 2 750 2 751 4 267 2 753 8 627 6 502 6 19 2 20 2 879 6 505 6 274 2 393 6 630 2 394 2 396 2 397 2 163 6 511 2 637 6 33 2 515 6 639 2 517 12 171 2 771 6 644 2 45 6 44 2 289 2 48 2 647 2 404 2 176 4 51 2 651 2 407 2 778 8 779 4 178 4 529 2 781 12 61 2 59 2 297 4 786 4 62 4 413 6 787 2 184 2 903 8 661 4 183 2 416 2 186 2 793 2 792 2 794 2 909 4 304 2 306 4 70 2 308 2 191 6 74 4 913 2 914 2 194 2 916 2 918 2 77 2 919 6 810 2 433 6 204 48 682 4 205 4 84 2 323 4 926 2 208 2 89 2 328 4 329 8 691 4 819 4 561 2 98 2 216 2 822 2 447 2 931 2 700 2 342 2 451 2 101 2 220 2 103 8 454 2 106 2 455 2 351 2 943 2 225 6 457 2 226 4 459 2 948 2 461 6 356 2 462 2 363 2 951 2 952 2 954 2 465 2 112 2 592 8 115 2 839 4 229 2 841 2 958 2 369 2 118 10 598 6 600 4 123 2 474 2 736 4 480 2 129 26 849 2 607 2 
739 2 374 6 740 2 608 6 486 2 742 2 859 2 487 6 488 2 615 2 860 6 616 2 492 2 494 2 12 2 254 2 870 6 260 2 750 2 751 4 267 2 753 8 627 6 502 6 19 2 20 2 879 6 505 6 274 2 393 6 630 2 394 2 396 2 397 2 163 6 511 2 637 6 33 2 515 6 639 2 517 12 171 2 771 6 644 2 45 6 44 2 289 2 48 2 647 2 404 2 176 4 51 2 651 2 407 2 778 8 779 4 529 2 178 4 781 12 61 2 59 2 297 4 786 4 62 4 413 6 787 2 184 2 903 8 661 4 183 2 416 2 186 2 792 2 793 6 794 2 909 4 304 2 306 4 70 2 308 2 191 6 74 4 913 2 914 2 194 2 916 2 918 2 77 2 919 6 810 2 433 6 204 48 682 4 205 4 84 2 323 4 926 2 208 2 89 2 328 4 329 8 691 4 819 4 446 4 561 2 98 2 216 2 822 2 447 2 931 2 700 2 342 2 451 2 101 2 220 2 103 8 454 2 106 2 455 2 351 2 943 2 225 6 457 2 226 4 459 2 948 2 461 6 356 2 462 2 363 2 951 2 952 2 954 2 465 2 112 2 592 8 115 2 839 4 229 2 841 2 958 2 369 2 118 10 598 6 600 4 123 2 474 2 736 4 480 2 129 26 849 2 607 2 
739 2 740 2 742 2 486 2 487 8 488 4 492 2 494 2 254 2 12 2 260 2 750 2 751 4 267 2 753 10 502 12 18 2 19 2 20 2 505 6 274 2 277 2 511 2 33 2 515 6 517 10 285 6 771 6 44 2 45 12 289 2 48 2 51 2 776 6 778 10 779 4 529 2 781 16 59 2 61 4 297 4 62 4 786 4 787 2 793 6 792 2 794 2 304 2 306 4 70 2 308 2 74 4 77 2 810 2 547 2 84 2 323 4 88 6 328 6 89 2 329 10 557 6 819 4 561 2 98 2 822 2 565 2 342 2 101 2 103 8 106 2 351 2 356 2 363 2 112 2 592 8 113 2 115 2 839 4 841 2 369 2 118 8 598 6 600 4 123 2 129 24 849 2 607 4 374 8 608 12 858 6 859 2 860 6 615 2 616 2 861 2 869 2 870 12 627 6 879 6 630 2 393 12 159 6 394 2 397 2 396 2 163 12 637 6 639 2 171 2 644 2 647 2 404 2 176 4 651 2 407 2 178 4 413 6 183 2 661 4 903 12 184 2 416 2 186 2 909 4 191 6 192 6 913 2 914 4 916 2 194 2 918 2 919 6 433 6 204 52 205 4 682 4 926 2 208 2 691 4 446 4 216 2 447 2 931 2 700 2 701 2 451 2 939 6 220 2 454 2 455 2 943 2 945 6 457 2 225 6 226 4 946 2 459 2 948 2 462 2 461 6 952 4 465 2 954 2 229 2 958 2 959 2 474 2 736 4 480 2 
342 2 306 2 308 2 103 2 515 6 455 2 351 2 457 2 459 2 948 2 356 2 260 2 204 4 112 2 267 2 178 2 753 6 229 2 781 4 297 2 786 2 329 6 661 4 598 2 274 2 416 2 600 4 186 2 793 4 474 2 794 2 446 4 822 2 909 2 304 2 
374 6 487 6 488 3 616 2 250 2 494 2 260 2 259 3 267 2 753 6 627 6 274 2 397 2 637 6 280 2 33 2 515 6 517 4 644 2 48 2 404 2 51 2 176 2 178 2 529 2 781 4 59 2 61 3 297 2 786 2 62 4 661 4 183 2 903 8 416 2 186 2 792 2 793 2 664 2 534 2 794 2 909 2 304 2 306 2 70 2 308 2 916 2 77 2 204 28 84 2 208 2 328 4 329 6 209 2 817 2 554 2 691 4 216 2 822 2 342 2 101 2 220 2 103 2 454 2 455 2 351 2 457 2 226 4 459 2 948 2 356 2 462 2 951 2 952 3 465 2 112 2 229 2 841 2 369 2 117 2 118 2 598 2 600 4 123 2 474 2 736 4 129 24 480 2 372 2 
274 2 481 2 304 2 
274 2 481 2 304 2 
739 2 374 2 742 2 487 2 488 2 616 2 493 2 494 2 260 2 261 2 751 4 753 12 627 6 158 2 758 4 274 6 397 2 277 4 637 6 33 2 515 6 517 4 519 2 171 2 644 2 48 2 647 2 404 2 51 2 176 6 778 4 779 2 529 2 178 2 781 16 782 2 59 2 297 4 62 4 786 4 184 2 183 2 903 2 661 4 793 6 420 2 909 2 304 4 306 2 70 2 308 2 74 2 194 2 916 2 429 2 917 2 918 4 77 2 919 2 437 4 204 24 438 2 682 4 205 4 323 2 208 2 686 2 329 12 691 4 819 4 446 4 216 2 341 2 342 4 451 2 101 2 220 2 103 4 454 2 455 2 942 2 226 4 946 4 462 2 356 2 721 2 465 2 590 2 839 4 841 2 369 2 843 4 118 2 598 4 599 2 600 4 123 2 233 2 736 4 129 16 480 2 849 2 481 2 606 2 
651 2 341 2 204 4 17 2 74 2 517 2 118 2 224 2 688 2 919 2 44 2 462 2 678 2 233 2 420 2 129 2 511 2 
739 2 374 2 742 2 487 2 488 4 616 2 493 2 494 2 255 2 260 2 261 2 149 2 751 4 753 12 627 6 20 2 758 4 274 6 397 2 277 4 637 6 33 2 515 6 517 2 519 2 171 2 644 2 48 2 647 2 404 2 51 2 176 6 778 4 779 2 529 2 178 2 781 16 782 2 59 2 297 4 62 4 786 4 184 2 183 2 903 2 661 4 417 2 793 6 420 2 909 2 304 4 306 2 70 2 308 2 194 2 916 2 429 2 918 4 77 2 919 2 437 4 204 24 682 4 205 4 323 4 87 2 208 2 686 4 329 12 691 4 819 4 446 4 216 2 341 2 342 4 451 2 101 2 220 2 103 4 454 2 455 2 942 2 226 4 946 4 462 2 356 2 359 2 721 2 465 2 839 4 841 2 369 2 843 4 598 4 599 2 600 4 123 2 233 2 736 4 129 16 480 2 849 2 481 2 606 2 
739 2 374 2 609 2 742 2 487 2 488 2 5 2 616 2 493 2 494 2 260 2 261 2 751 4 753 12 627 6 20 2 758 4 274 6 397 2 277 4 637 6 33 2 515 6 517 4 519 2 171 2 644 2 48 2 647 2 404 2 51 2 176 6 778 4 779 2 529 2 178 2 781 16 782 2 59 2 657 2 297 4 62 4 786 4 184 2 183 2 903 2 661 4 793 6 420 2 909 2 304 4 306 2 70 2 308 2 74 2 805 2 194 2 916 2 429 2 918 4 77 2 919 2 437 4 204 24 682 4 205 4 323 4 208 2 686 2 329 12 691 4 819 4 446 4 216 2 341 2 342 4 451 2 101 2 220 2 103 4 454 2 455 2 942 2 226 4 946 4 462 2 356 2 721 2 465 2 839 4 841 2 369 2 843 4 118 2 598 4 599 2 600 4 123 2 233 2 736 4 848 2 129 16 480 2 849 2 481 2 606 2 
745 2 
374 2 856 2 485 2 487 2 488 3 489 4 912 2 941 2 430 2 863 2 543 2 524 1 952 3 383 2 922 2 204 2 549 3 61 3 328 2 469 2 903 2 729 2 792 2 129 2 607 6 
374 2 856 2 485 2 487 2 488 2 489 4 912 2 941 2 430 2 863 2 543 2 952 2 383 2 922 2 204 2 549 2 61 2 328 2 469 2 903 2 729 2 792 2 129 2 607 6 
374 2 856 2 485 2 487 2 488 2 489 4 912 2 941 2 430 2 863 2 543 2 952 2 383 2 922 2 204 2 549 2 61 2 328 2 469 2 903 2 729 2 792 2 129 2 607 6 
798 2 800 2 136 2 741 2 190 2 488 3 613 2 248 4 143 2 199 2 868 4 749 2 13 2 204 10 683 2 442 3 275 2 882 4 213 2 276 2 168 2 345 4 884 2 636 4 221 2 941 2 522 3 587 2 52 4 894 4 652 2 408 2 61 3 370 2 903 2 792 2 300 3 66 6 667 6 129 4 
798 2 345 4 168 2 636 4 884 2 800 2 136 2 741 2 190 2 221 2 488 2 248 4 613 2 941 2 143 2 522 2 199 2 868 4 749 2 587 2 13 2 894 4 52 4 204 10 652 2 408 2 206 2 683 2 370 2 61 2 927 2 442 2 903 2 731 2 792 2 300 2 275 2 213 2 882 4 66 6 667 4 276 2 129 4 
798 2 345 4 168 2 636 4 884 2 800 2 136 2 741 2 190 2 221 2 488 2 248 4 613 2 941 2 143 2 522 2 199 2 868 4 749 2 587 2 13 2 894 4 52 4 204 10 652 2 408 2 206 2 683 2 370 2 61 2 927 2 442 2 903 2 731 2 792 2 300 2 275 2 213 2 882 4 66 6 667 4 276 2 129 4 
798 2 345 4 168 2 636 4 884 2 800 2 136 2 741 2 190 2 221 2 488 2 248 4 613 2 941 2 143 2 522 2 199 2 868 4 749 2 587 2 13 2 894 4 52 4 204 10 652 2 408 2 206 2 683 2 370 2 61 2 927 2 442 2 903 2 731 2 792 2 300 2 275 2 213 2 882 4 66 6 667 4 276 2 129 4 
798 2 345 4 168 2 636 4 884 2 800 2 136 2 741 2 190 2 221 2 488 2 248 4 613 2 941 2 143 2 522 2 199 2 868 4 749 2 587 2 13 2 894 4 52 4 204 10 652 2 408 2 206 4 683 2 370 2 61 2 927 4 442 2 903 2 731 4 792 2 300 2 275 2 213 2 882 4 66 6 667 4 276 2 129 4 
689 2 379 2 368 2 668 2 820 2 464 2 
589 2 689 2 268 2 467 2 47 2 128 2 944 2 
343 2 424 2 802 2 427 2 520 1 714 1 542 2 867 2 585 2 649 2 873 2 204 10 956 2 271 2 369 2 685 2 471 2 119 2 393 2 732 2 473 1 733 1 421 2 336 2 129 8 737 1 
345 12 539 2 136 6 190 6 104 2 138 4 613 6 143 6 196 2 9 2 773 2 584 2 586 2 749 6 52 4 204 6 652 6 408 6 957 2 206 3 550 2 927 2 631 2 731 2 124 2 667 16 276 2 477 4 129 6 564 2 
340 7 317 2 204 1 829 4 636 2 248 2 472 2 906 2 419 2 335 2 214 1 666 2 868 2 129 1 648 2 872 2 
340 4 829 4 636 2 755 2 248 2 472 2 906 2 419 2 335 2 666 2 868 2 648 4 872 2 
340 4 204 1 829 4 636 2 755 2 248 2 472 2 906 2 419 2 335 2 214 1 666 2 868 2 129 1 648 4 872 2 
340 2 829 2 636 2 248 2 472 2 906 2 419 2 335 2 666 2 868 2 648 2 872 2 
853 2 134 2 857 2 483 6 245 6 611 8 743 8 862 2 620 4 494 12 864 4 747 2 865 12 622 2 11 2 496 2 384 6 15 12 627 112 389 4 504 6 762 2 881 6 23 2 160 4 632 2 885 2 34 4 766 6 638 2 518 8 284 1 283 6 37 6 640 6 521 4 40 2 646 2 891 4 49 4 177 6 777 6 54 4 295 2 180 6 58 2 899 8 901 14 414 6 795 46 307 2 801 4 675 4 75 6 916 32 313 3 806 12 808 16 679 6 201 4 545 2 546 6 204 96 319 6 548 13 814 16 440 2 91 4 330 2 690 2 95 6 445 2 215 2 216 6 824 2 693 6 694 6 217 12 218 2 696 2 100 16 566 26 937 4 454 32 940 12 706 12 707 6 226 50 582 4 583 2 949 6 228 2 111 6 465 12 723 4 838 6 593 4 116 6 371 8 595 6 231 6 844 1 122 2 846 6 475 6 736 42 234 4 129 84 850 4 
738 2 134 2 139 2 426 2 915 2 806 4 494 2 864 2 865 2 78 2 622 2 866 2 11 2 496 2 679 2 545 2 265 2 204 46 319 2 548 2 83 2 923 4 15 4 627 42 684 2 325 2 207 4 389 2 504 2 91 4 556 2 23 2 445 2 398 2 560 2 510 2 930 2 215 2 216 2 764 2 166 4 696 2 566 38 936 2 281 2 282 6 767 2 940 4 456 2 706 2 832 2 641 2 40 2 521 2 226 20 355 2 770 2 581 4 583 2 890 2 949 2 716 2 360 2 403 2 228 2 49 2 525 2 111 2 465 2 526 2 177 2 777 2 895 2 896 2 530 2 116 2 899 6 595 2 414 2 415 2 597 2 790 2 846 2 536 2 736 20 478 2 129 44 237 2 235 2 795 6 
449 2 566 4 465 2 177 2 204 14 15 2 857 2 896 2 627 10 940 2 454 4 389 2 916 4 806 2 521 2 226 4 864 2 494 2 251 2 445 2 11 2 736 4 833 2 129 14 216 2 795 2 696 2 545 2 
243 2 853 4 801 2 916 10 313 2 806 6 864 2 494 2 252 2 865 2 431 2 11 2 679 4 545 2 204 28 319 4 548 2 15 6 627 38 389 2 504 4 91 2 330 2 690 2 556 2 95 6 445 2 216 2 824 4 696 2 566 14 937 2 885 2 940 6 454 10 706 2 521 2 226 14 583 2 646 2 949 2 49 2 111 2 465 2 777 4 177 2 54 10 896 2 295 2 116 4 899 6 595 4 901 10 414 2 122 2 844 2 846 2 735 2 736 14 129 26 237 2 795 8 
601 2 

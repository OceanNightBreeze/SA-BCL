#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.IllegalArgumentException 72 72 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.util.NoSuchElementException 216 125 
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 272 (247,306) 80 (4,57,185,212,227,239,301) 315 
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NegativeArraySizeException 83 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 213 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 58 204 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NoClassDefFoundError (76,200) (76,200) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 218 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 218 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 218 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 218 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 218 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NoClassDefFoundError 25 255 248 198 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V ERROR java.lang.NullPointerException 137 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.NoClassDefFoundError (66,134) (66,134) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.NoClassDefFoundError (66,134) (66,134) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.NoClassDefFoundError (66,134) (66,134) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.NoClassDefFoundError (66,134) (66,134) 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.ExceptionInInitializerError 161 0 153 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 161 0 153 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 161 0 153 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 161 0 153 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.ValueTuple:isMissing(I)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | RETURN | 66339 | return null
daikon.Quant:intersection([I[I)[I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:lexLTE([I[I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:lexGT([I[I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:memberOf(I[I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:eltsGTE([II)Z
utilMDE.MathMDE:gcd(II)I
daikon.ValueTuple:size()I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.ModBitTracker:num_sets()I
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Quant:eq(DD)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:max([I)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
jtb.JavaCharStream:ReadByte()C
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:gt(II)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:memberOf(J[J)Z
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I | STATEMENT | 65242 | stmt -> ;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.Intern:intern([J)[J
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ModBitTracker:num_samples()I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | OPERATOR | 60487 | == -> <
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:setEqual([I[I)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:lte(II)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:mod_positive(II)I
utilMDE.MathMDE:gcd(JJ)J
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18499 | 1 -> -1
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:sameLength([I[I)Z
daikon.Quant:setDiff([I[I)[I
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName:repr()Ljava.lang.String; | OPERATOR | 14823 | == -> !=
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:memberOf(D[F)Z
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:isReverse([I[I)Z
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | CONDITION | 15342 | if (x) -> if (!x)
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Intern:numIntArrays()I
jtb.JavaCharStream:BeginToken()C
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaCharStream:getEndColumn()I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:concat([I[I)[I
daikon.Quant:eltsEqual([II)Z
daikon.Quant:gte(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I | CONSTANT | 17989 | 115 -> 1
daikon.Quant:slice([III)[I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:subsetOf([F[D)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I | ASSIGN | 2840 | = null
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | RETURN | 41894 | return null
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.ModBitTracker:split(I)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaCharStream:FillBuff()V
daikon.test.InvariantFormatTester:execute()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:negate(I)I
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 19680 | = null
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.WeakHasherMap:size()I
daikon.Quant:lt(II)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaCharStream:getEndLine()I
daikon.Quant:ne(II)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.ModBitTracker:num_vars()I
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern([I)[I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaCharStream:backup(I)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 13963 | = null
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:eltsNotEqual([II)Z | CONSTANT | 162209 | 0 -> 1
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE:min([I)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:eltsGteIndex([I)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.MathMDE:pow(II)I
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:union([I[I)[I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:subsetOf([S[S)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(JJ)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:memberOf(F[F)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.Quant:lexLT([I[I)Z | CONDITION | 170646 | if (x) -> if (!x)
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaCharStream:readChar()C
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName:hashCode()I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:noDups([I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:eq(II)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:eltsGT([II)Z
daikon.Quant:eq(FF)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
54 2 71 2 105 2 169 2 309 4 14 2 300 2 91 2 180 2 
187 2 61 6 18 6 195 6 260 2 183 2 267 2 141 2 129 2 228 2 100 2 
209 2 168 6 49 6 295 4 238 2 105 2 162 2 148 6 95 2 224 4 22 6 180 2 207 2 
10 2 155 4 297 2 276 13 235 4 234 10 110 2 261 8 113 2 57 6 280 8 239 6 79 16 80 16 121 2 318 10 62 4 63 10 247 16 306 10 85 2 101 4 177 8 229 10 105 6 326 29 272 26 230 8 131 2 180 6 
72 4 
3 2 
7 2 234 2 203 2 78 2 239 2 79 2 80 2 120 2 318 2 97 2 140 2 125 2 63 4 247 2 306 2 229 2 20 2 326 6 272 4 216 2 
318 2 185 2 276 3 234 2 227 4 247 6 306 2 84 2 101 2 322 6 229 2 315 2 326 7 272 8 79 6 179 2 80 6 
265 2 277 2 302 2 252 2 210 2 81 2 32 6 83 2 225 2 51 2 
311 2 3 2 6 2 273 2 221 2 188 2 165 2 173 2 288 2 146 2 
233 2 184 2 10 2 299 2 90 2 75 2 55 2 112 2 316 2 223 2 56 2 164 2 116 4 166 2 60 2 243 2 266 2 37 2 246 2 169 2 142 2 285 2 40 2 99 2 287 2 307 2 43 2 42 2 65 2 270 2 147 4 70 2 88 2 150 2 24 4 
4 2 318 4 276 4 234 4 212 4 301 8 194 2 306 4 229 4 105 4 326 5 115 4 272 4 230 2 180 4 
37 2 138 2 119 2 
132 2 122 2 107 2 294 2 320 2 124 2 170 22 172 10 174 2 52 2 164 2 206 2 34 2 264 2 
213 2 
284 2 
180 2 12 2 
290 2 275 2 180 4 
106 2 2 2 26 2 182 2 89 2 254 2 237 2 312 18 133 18 219 2 257 2 259 2 313 2 135 2 204 2 159 2 263 2 58 2 190 2 139 2 16 2 36 2 281 2 192 2 245 2 123 2 126 2 128 2 176 2 269 2 45 2 178 2 46 18 197 2 149 2 69 2 23 2 310 2 
325 2 86 2 256 2 268 1 
325 2 226 2 
29 2 325 2 17 2 37 2 274 2 214 2 155 2 
29 2 325 2 74 2 
29 2 325 2 253 2 
86 2 117 2 220 2 
29 2 325 2 
220 2 157 2 
258 2 
86 2 196 2 220 2 
158 2 86 2 193 2 
222 2 86 2 48 2 
102 2 77 2 86 2 
314 2 86 2 217 2 
304 2 220 2 
325 2 39 2 
158 2 250 2 
48 2 251 2 
77 2 236 2 
208 2 217 2 
186 2 220 2 
271 2 217 2 
77 2 145 2 
96 2 48 2 
158 2 211 2 
86 2 196 2 220 2 92 2 
111 2 86 2 196 2 220 2 92 2 
317 2 86 2 220 2 
86 2 163 2 220 2 
244 2 44 2 231 2 240 2 
1 2 181 2 305 2 154 4 38 4 298 2 170 6 171 2 109 2 175 2 278 2 324 2 13 2 53 2 104 2 293 2 329 2 15 2 
86 2 41 2 
37 2 214 2 156 2 64 2 
37 2 274 2 214 2 279 2 156 2 64 2 
29 2 325 2 37 2 214 2 155 2 87 2 
316 2 321 2 
37 2 214 2 160 2 155 2 
77 2 328 2 
31 2 217 2 
93 2 158 2 
48 2 282 2 
308 2 
48 2 21 2 217 2 
27 2 48 2 217 2 
48 2 108 2 217 2 
76 2 200 2 
30 2 220 2 
8 2 
218 2 
218 2 
323 2 292 2 130 2 
323 2 292 2 130 2 
218 2 
218 2 
218 2 
198 2 303 2 262 2 248 2 255 2 11 2 151 2 25 2 
73 2 28 2 82 2 50 2 201 2 167 2 
289 2 137 2 189 2 127 2 205 2 201 2 286 2 
152 1 47 2 252 1 199 2 5 2 9 2 296 2 277 1 136 1 114 2 33 2 35 2 242 2 241 2 118 2 191 2 98 2 291 2 103 2 19 2 105 8 215 1 327 2 68 2 180 10 232 2 
134 2 66 2 
134 2 66 2 
134 2 66 2 
134 2 66 2 
0 2 94 1 59 1 144 1 67 1 105 3 153 2 202 2 161 2 319 1 283 1 249 1 180 3 
202 2 0 2 153 2 161 2 105 2 180 2 
202 2 0 2 153 2 161 2 105 2 180 2 
202 2 0 2 153 2 161 2 105 2 180 2 
143 2 

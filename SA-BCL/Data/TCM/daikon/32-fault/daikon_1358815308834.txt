#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 323 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V ERROR java.lang.IllegalArgumentException (3,22,54,73,292,315,354) 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 47 (119,133) 257 (3,22,54,73,292,315,354) 247 
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 151 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 117 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 108 55 158 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V ERROR java.lang.NullPointerException 249 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 249 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NoClassDefFoundError (309,408) (309,408) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 61 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 61 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 61 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 61 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 61 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 350 48 173 427 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 1 243 
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 130 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.NoClassDefFoundError (202,296) (202,296) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.NoClassDefFoundError (202,296) (202,296) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.NoClassDefFoundError (202,296) (202,296) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.NoClassDefFoundError (202,296) (202,296) 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 263 358 137 
daikon.test.VarInfoNameTest:testJML()V ERROR utilMDE.Assert$AssertionException (77,268) (77,268) 263 358 137 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 263 358 137 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 259 137 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.ModBitTracker:split(I)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | OPERATOR | 51862 | != -> <
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | RETURN | 14876 | return null
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.Intern:numIntArrays()I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern:internSubsequence([III)[I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:memberOf(F[F)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaCharStream:BeginToken()C
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern:intern([J)[J
jtb.JavaParser:jj_ntk()I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:noDups([I)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:lt(II)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:eltsLT([II)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.ArraysMDE:min([I)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Quant:memberOf(D[F)Z
utilMDE.MathMDE:modulus([I)[I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_or(DD)D
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:eq(DD)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:sameLength([I[I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:memberOf(S[S)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.ArraysMDE:sum([[I)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:lexGTE([I[I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.ModBitTracker:num_sets()I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([S[S)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.ArraysMDE:max([I)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14830 | if (x) -> if (!x)
daikon.Quant:eltsLTE([II)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:backup(I)V
daikon.Quant:ne(II)Z
daikon.Quant:eltsGtIndex([I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:setEqual([I[I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:num_vars()I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE:negate(I)I
daikon.Quant:gte(II)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:slice([III)[I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.MathMDE:sign(I)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:setDiff([I[I)[I
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:eq(II)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:hashCode()I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.ArraysMDE:element_range([I)I
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:memberOf(J[J)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:eq(JJ)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair; | RETURN | 2847 | return null
utilMDE.WeakHasherMap:size()I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V | ASSIGN | 746 | = null
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:sum([[D)D
daikon.test.TestQuant:removeAdjacentDups([I)[I | ASSIGN | 816 | = null
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V | CONDITION | 2824 | if (x) -> if (!x)
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:lte(II)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set; | RETURN | 94892 | return null
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaCharStream:FillBuff()V
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:intersection([I[I)[I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | STATEMENT | 8020 | stmt -> ;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 9166 | 3 -> 0
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | ASSIGN | 24033 | = null
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:eltsEqual([II)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object; | CONDITION | 21221 | if (x) -> if (!x)
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.MathMDE:mod_positive(II)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:subsetOf([F[D)Z
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.MathMDE:pow(II)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.ValueTuple:size()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quant:concat([I[I)[I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:eq(FF)Z
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaCharStream:readChar()C
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I | ASSIGN | 2840 | = null
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.MathMDE:gcd([I)I
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.ModBitTracker:num_samples()I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
331 2 218 2 186 4 282 2 205 2 268 2 77 2 38 2 180 2 
323 2 357 2 382 2 19 2 468 4 241 2 206 2 116 4 262 6 94 2 
77 2 115 2 215 2 287 4 436 6 252 2 20 2 159 2 268 2 65 6 407 6 164 6 346 4 
381 2 185 8 301 10 246 2 26 2 353 10 92 9 250 10 418 2 132 2 133 16 6 4 425 29 105 4 330 13 400 4 457 2 257 16 40 16 77 6 47 26 461 8 119 10 373 8 203 10 292 6 268 6 50 4 297 3 54 6 
24 6 198 4 
399 2 
127 2 128 4 303 2 248 2 415 2 59 2 129 2 190 2 419 2 66 2 424 2 70 2 76 2 364 2 77 4 199 2 78 2 369 2 141 2 375 2 443 2 317 4 268 4 210 2 147 2 25 2 150 2 27 4 153 2 324 2 155 2 99 2 392 2 102 2 32 2 224 2 276 4 277 2 107 2 457 2 282 2 291 2 340 2 176 2 
301 4 353 4 354 2 92 2 3 8 250 4 133 6 425 12 330 4 257 6 40 6 77 4 47 10 171 6 371 4 119 4 338 2 315 4 268 4 22 2 
291 2 394 2 319 2 
88 2 213 2 110 2 463 2 95 2 28 2 440 22 155 2 316 2 393 2 135 2 345 10 163 2 197 2 
301 2 353 2 92 2 250 2 133 2 194 2 34 2 425 6 400 2 330 2 401 2 257 2 40 2 335 2 47 4 435 2 265 2 119 2 83 2 203 4 292 2 21 2 242 2 
40 6 301 2 247 2 367 2 353 2 47 8 371 6 250 2 119 2 6 2 133 6 451 2 22 4 425 8 73 2 330 2 257 6 
146 4 184 2 271 2 56 10 302 4 385 2 389 4 216 2 190 2 62 2 31 4 394 6 396 4 395 4 453 2 227 10 455 2 332 2 279 4 283 2 45 4 233 2 169 4 81 4 80 2 172 2 337 4 267 2 266 2 291 8 18 2 376 14 317 4 293 2 294 2 319 2 377 2 210 4 177 2 347 62 
151 2 437 2 238 2 17 2 420 2 222 2 84 2 103 2 33 2 399 2 362 2 
117 2 
431 2 77 2 
120 2 77 4 256 2 
93 2 
211 2 55 2 304 2 413 2 386 6 60 2 5 2 98 2 158 2 421 6 160 6 452 2 306 2 67 2 71 2 327 2 39 2 108 2 75 2 280 4 42 2 284 2 285 2 286 2 466 2 374 2 122 2 52 6 
109 2 351 1 200 2 234 2 
253 2 200 2 
291 2 423 2 322 2 200 2 249 2 105 2 191 2 
200 2 191 2 165 2 
200 2 456 2 191 2 
109 2 161 2 305 2 
200 2 191 2 
161 2 352 2 
200 2 175 2 
109 2 43 2 161 2 
109 2 178 2 288 2 
449 2 109 2 333 2 
270 2 109 2 458 2 
0 2 63 2 109 2 
318 2 161 2 
300 2 200 2 
450 2 178 2 
449 2 168 2 
270 2 240 2 
63 2 121 2 
254 2 161 2 
299 2 63 2 
270 2 162 2 
449 2 69 2 
41 2 178 2 
109 2 43 2 161 2 273 2 
109 2 43 2 161 2 273 2 87 2 
109 2 161 2 182 2 
109 2 161 2 378 2 
348 2 140 2 325 2 403 2 
447 2 183 2 281 4 383 2 261 2 412 2 114 2 79 2 235 2 118 2 217 2 237 2 440 6 29 2 101 2 207 2 104 4 145 2 
109 2 148 2 
291 2 423 2 406 2 384 2 
291 2 423 2 406 2 384 2 360 2 249 2 
291 2 423 2 200 2 105 2 196 2 191 2 
66 2 58 2 
291 2 423 2 105 2 181 2 
270 2 157 2 
63 2 311 2 
178 2 74 2 
449 2 152 2 
63 2 449 2 231 2 
63 2 449 2 391 2 
63 2 380 2 449 2 
63 2 449 2 136 2 
309 2 408 2 
433 2 161 2 
30 2 
61 2 
61 2 
134 2 355 2 328 2 
134 2 355 2 328 2 
61 2 
61 2 
61 2 
173 2 459 2 113 2 350 2 320 2 48 2 427 2 438 2 230 2 
243 2 1 2 
404 2 130 2 9 2 308 2 72 2 471 2 402 2 
244 2 349 2 214 2 385 1 388 2 2 2 219 2 422 1 7 1 454 2 307 2 332 1 138 2 167 2 139 2 44 2 77 10 336 1 201 2 170 2 82 2 289 2 465 2 268 8 209 2 53 2 
296 2 202 2 
296 2 202 2 
296 2 202 2 
296 2 202 2 
356 2 251 4 4 2 358 2 359 1 8 5 137 2 12 4 13 2 366 2 15 2 263 2 142 2 372 1 268 22 144 2 156 3 36 1 37 2 166 2 278 2 46 2 49 2 174 3 409 8 298 2 187 2 411 2 195 2 430 2 77 22 204 10 442 2 445 5 446 2 212 1 448 2 221 2 223 2 226 2 326 4 228 1 460 2 232 2 111 2 462 5 236 2 467 2 239 2 469 4 341 4 123 16 
410 2 126 2 57 2 188 4 189 2 417 2 4 2 131 2 193 4 192 2 358 2 359 2 64 2 8 2 255 4 137 2 426 2 10 2 12 2 363 2 13 2 14 2 310 2 365 2 366 2 432 2 368 2 77 36 312 2 434 2 15 2 263 2 370 2 264 2 16 2 439 4 372 2 204 16 85 2 441 2 268 36 143 2 23 2 445 2 269 2 379 2 91 2 274 2 390 2 96 2 220 2 100 2 223 2 326 28 228 2 275 4 229 2 398 2 166 2 460 2 405 2 112 2 334 2 462 2 290 2 343 2 470 2 344 2 295 2 51 2 409 16 123 32 
57 2 414 2 356 2 251 2 4 1 131 2 358 2 359 2 8 2 137 2 361 2 430 2 12 6 13 2 366 2 77 26 312 2 263 2 142 2 372 2 204 10 268 26 444 4 208 4 143 2 445 2 446 2 321 4 89 2 90 2 448 2 97 2 154 2 156 4 221 2 223 2 326 14 35 2 36 2 228 2 278 2 166 2 460 2 232 2 46 2 334 2 462 2 174 4 339 2 49 2 467 2 469 6 341 6 295 2 298 4 124 2 409 8 123 20 179 2 
187 2 411 6 245 2 414 2 416 2 131 6 4 2 192 4 358 2 64 4 8 2 68 2 137 2 429 2 428 2 11 2 12 8 13 2 259 2 258 2 366 2 260 2 77 28 312 6 263 2 313 2 204 14 314 6 442 2 86 2 268 26 143 6 445 2 144 2 149 2 89 2 272 4 154 2 156 10 223 2 225 4 226 2 326 14 36 2 397 4 37 2 329 2 106 4 166 2 460 2 405 4 111 10 334 2 462 2 236 2 464 4 174 10 239 10 342 2 409 14 123 38 125 2 
387 2 

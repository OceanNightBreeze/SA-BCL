#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 716 181 748 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (234,479) 28 394 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (234,479) 28 394 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (234,479) 28 394 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (234,479) 28 394 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (234,479) 28 394 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (234,479) 28 394 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (234,479) 28 394 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (234,479) 28 394 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (234,479) 28 394 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (234,479) 28 394 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (234,479) 28 394 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException (234,479) 28 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (234,479) 28 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException (234,479) 28 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 725 376 588 19 409 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR utilMDE.Assert$AssertionException (192,488) (192,488) 691 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR utilMDE.Assert$AssertionException (192,488) (192,488) 691 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR utilMDE.Assert$AssertionException (192,488) (192,488) 691 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR utilMDE.Assert$AssertionException (192,488) (192,488) 691 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR utilMDE.Assert$AssertionException (192,488) (192,488) 691 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 135 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (192,488) (192,488) 224 613 503 115 
daikon.test.VarInfoNameTest:testSubscript()V ERROR utilMDE.Assert$AssertionException (192,488) (192,488) 186 613 503 115 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.UnsupportedOperationException 560 530 613 503 115 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.Error 235 613 503 115 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.ModBitTracker:split(I)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern:intern([J)[J
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.ArraysMDE:sum([[I)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:element_range([I)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariants:Invariants()V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:gt(II)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:lt(II)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.Intern:numIntArrays()I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Ppt:Ppt()V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I | CONDITION | 69793 | if (x) -> if (!x)
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:hashCode()I
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.Invariant:justified()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern:intern([D)[D
utilMDE.MathMDE:gcd(JJ)J
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Debug:logOn()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | RETURN | 21417 | return null
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_ntk()I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:noDups([I)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:memberOf(D[F)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.WeakHasherMap:processQueue()V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName:hashCode()I
daikon.diff.Node:Node()V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexLT([I[I)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:getEndColumn()I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:gte(II)Z
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:ne(II)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:eq(JJ)Z
daikon.Quant:slice([III)[I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGT([II)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
utilMDE.WeakHasherMap:size()I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.ProglangType:baseIsScalar()Z
daikon.ModBitTracker:num_samples()I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.Invariant:getConfidence()D
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Debug:logDetail()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | STATEMENT | 54139 | stmt -> ;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:eq(II)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.Quant:memberOf(F[D)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaCharStream:ReadByte()C
daikon.inv.Invariant:logDetail()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.RootNode:RootNode()V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V | STATEMENT | 25787 | stmt -> ;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern([I)[I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:lexNotEqual([I[I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:eq(FF)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseGT([I)Z | OPERATOR | 176785 | + -> >>>
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.PptSlice1:arity()I
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.Quant:memberOf(J[J)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:union([I[I)[I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:lexGT([I[I)Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | OPERATOR | 51862 | != -> <
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexLTE([I[I)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 10199 | = null
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:relate_var()V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:lexEqual([I[I)Z
daikon.ProglangType:dimensions()I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.diff.InvMap:InvMap()V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.Quant:memberOf(S[S)Z
daikon.ValueTuple:size()I
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.ProglangType:isIntegral()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object; | RETURN | 62299 | return null
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.ModBitTracker:num_sets()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsEqual([II)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ProglangType:isScalar()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:lte(II)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107829 | = null
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptName:isCombinedExitPoint()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.ValueTuple:isMissing(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:eltsGTE([II)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 3656 | return null
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:setEqual([I[I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode; | ASSIGN | 22225 | = null
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.MathMDE:modulus([I)[I | OPERATOR | 8627 | % -> >>>
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaCharStream:backup(I)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfo:new_ppt()V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.Invariant:logOn()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:pow(II)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice1:num_samples()I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method; | ASSIGN | 38039 | = null
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.ProglangType:isArray()Z
jtb.JavaCharStream:getEndLine()I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
192 2 636 2 424 2 404 2 488 2 48 2 750 2 534 4 502 2 
447 6 477 2 17 2 722 2 573 2 574 6 223 2 120 2 385 2 209 2 540 6 
192 2 46 2 268 6 726 6 418 2 488 2 337 2 162 4 122 6 339 2 461 4 717 6 643 2 
23 6 192 6 344 10 658 12 563 4 545 10 637 29 249 2 739 2 174 16 206 10 76 8 176 16 602 2 128 10 180 26 413 4 671 10 316 4 535 8 674 2 518 8 488 6 398 2 264 16 610 8 400 6 749 2 462 2 635 4 
684 4 190 6 
300 2 
729 2 141 2 1 2 636 2 267 4 426 2 247 2 4 2 116 2 550 2 736 2 53 2 688 2 54 2 232 2 386 2 12 4 125 2 32 2 414 2 33 2 330 2 132 2 37 2 584 2 441 2 61 2 288 2 651 2 398 2 728 2 89 2 380 4 265 2 191 2 
23 4 192 4 344 16 342 4 47 6 563 2 658 22 465 2 545 16 25 4 467 2 637 54 147 4 638 2 200 4 74 2 525 6 29 8 206 16 174 32 598 6 176 32 602 2 180 48 128 6 603 6 671 16 60 6 605 4 697 2 535 6 40 4 517 2 335 4 488 4 264 32 610 18 399 6 400 4 
53 2 289 2 205 2 
561 2 390 10 644 2 708 2 184 2 240 2 220 2 290 2 292 2 303 2 617 2 109 22 64 2 232 2 
344 2 563 2 658 2 423 2 545 2 567 2 637 6 5 2 9 2 206 2 100 2 174 2 176 2 180 4 128 4 314 2 671 2 677 2 458 2 264 2 610 2 45 2 400 2 
657 2 344 4 658 4 180 12 545 4 605 4 671 4 60 6 637 16 335 4 174 8 206 4 384 2 264 8 399 6 176 8 635 2 
491 4 266 8 636 2 129 2 492 2 707 2 566 2 661 2 449 2 483 2 685 2 395 2 53 4 289 2 170 14 451 2 474 2 595 2 205 2 55 2 
681 2 466 2 300 2 616 2 177 2 719 2 626 2 532 2 43 2 21 2 
192 34 295 2 564 2 565 32 569 16 299 2 195 2 572 2 199 1 6 2 664 2 202 2 305 1 383 2 667 2 210 2 387 2 14 4 212 2 15 6 580 4 480 2 392 3 215 6 582 2 484 1 218 4 396 3 105 2 586 2 20 2 488 32 321 4 112 6 402 1 113 4 591 2 498 2 407 2 325 16 408 2 230 2 689 2 121 2 690 4 691 2 600 3 237 2 604 2 514 2 696 2 416 2 134 3 334 1 417 2 698 5 336 2 340 2 611 32 139 1 343 2 520 1 345 4 244 2 143 2 424 2 245 2 709 2 427 2 614 2 49 3 347 2 713 2 712 3 248 8 429 2 250 2 352 3 432 1 434 6 152 1 527 3 354 1 57 2 437 2 624 2 356 2 625 2 156 2 58 2 533 3 158 2 259 2 159 2 724 8 536 2 160 1 362 2 263 3 632 2 634 1 66 2 68 2 164 1 165 1 70 4 544 2 269 2 546 2 731 2 271 2 366 2 368 2 734 16 168 3 737 2 171 2 75 2 273 2 173 2 639 2 275 2 640 1 277 2 175 2 740 2 641 2 281 2 452 1 79 2 373 2 553 2 183 8 454 2 742 3 83 24 743 2 647 2 291 2 746 2 87 2 652 8 88 2 653 24 93 2 655 2 463 16 
192 2 621 2 
192 4 104 2 166 2 
216 2 
682 2 468 2 615 2 735 2 471 6 229 2 252 2 716 2 526 2 507 2 389 2 528 2 374 2 181 2 412 2 313 4 236 2 59 2 693 6 513 2 108 2 63 2 558 2 377 6 65 6 748 2 379 2 364 2 
351 2 353 1 627 2 280 2 
351 2 663 2 
53 2 328 2 351 2 304 2 161 2 413 2 95 2 
676 2 351 2 95 2 
351 2 666 2 95 2 
431 2 627 2 255 2 
351 2 95 2 
607 2 255 2 
24 2 351 2 
138 2 627 2 255 2 
251 2 298 2 627 2 
701 2 82 2 627 2 
361 2 627 2 622 2 
86 2 110 2 627 2 
255 2 744 2 
381 2 351 2 
251 2 94 2 
82 2 695 2 
456 2 622 2 
504 2 86 2 
51 2 255 2 
86 2 145 2 
358 2 622 2 
82 2 415 2 
251 2 512 2 
138 2 627 2 255 2 541 2 
411 2 138 2 627 2 255 2 541 2 
702 2 627 2 255 2 
627 2 255 2 673 2 
154 2 590 2 501 2 106 2 
53 2 161 2 262 2 629 2 
53 2 328 2 478 2 161 2 262 2 629 2 
53 2 351 2 161 2 413 2 95 2 188 2 
4 2 198 2 
53 2 284 2 161 2 413 2 
306 2 622 2 
86 2 662 2 
251 2 435 2 
82 2 433 2 
86 2 82 2 227 2 
86 2 82 2 519 2 
82 2 86 2 490 2 
309 2 82 2 86 2 
296 2 425 2 117 2 53 2 127 6 741 6 161 2 22 2 
255 2 254 2 
683 2 453 4 365 2 521 2 554 2 348 4 103 2 687 2 136 2 221 2 442 2 350 2 204 2 109 6 703 2 475 2 283 2 363 2 
627 2 516 2 
58 2 
192 26 564 4 659 4 565 6 569 6 299 2 570 2 470 2 6 2 664 2 305 2 211 2 14 4 212 2 15 2 312 4 580 2 215 4 582 2 218 4 586 2 488 26 321 4 112 6 113 2 494 2 498 2 407 2 121 2 123 4 599 2 691 2 130 2 131 2 604 2 514 2 696 2 417 2 606 4 704 4 611 4 140 4 345 2 424 2 245 2 427 2 614 6 713 2 434 2 151 2 437 2 624 2 157 4 158 2 159 2 724 8 536 2 261 2 160 2 66 2 68 2 448 2 544 2 70 4 546 2 277 2 175 2 79 2 553 2 183 4 291 4 746 2 93 2 91 2 
192 26 564 4 659 4 565 6 569 6 299 2 195 2 570 2 470 2 6 2 664 2 305 2 211 2 14 4 212 2 213 2 15 2 312 4 580 2 215 6 582 2 218 4 586 2 488 26 321 4 112 6 113 2 498 2 407 2 121 2 123 4 599 2 691 2 130 2 131 2 604 2 514 2 696 2 417 2 606 4 704 4 611 4 140 4 345 2 424 2 245 2 427 2 614 6 713 2 434 2 437 2 624 2 157 4 158 2 159 2 724 8 536 2 261 2 160 2 66 2 68 2 544 2 70 4 546 2 367 2 273 2 277 2 175 2 551 2 79 2 553 2 183 4 291 4 746 2 88 2 93 2 91 2 
197 2 
98 2 543 2 
234 2 391 2 155 2 568 2 257 2 394 2 17 2 547 2 382 4 38 2 28 2 324 2 219 4 574 2 120 2 678 2 540 2 111 2 
656 2 192 8 193 2 297 2 568 2 245 2 382 4 574 4 253 2 149 6 208 2 669 2 212 2 479 2 477 2 155 2 391 2 439 2 257 4 394 2 17 2 581 2 722 2 219 4 586 2 587 2 62 4 488 6 321 2 678 2 540 2 111 2 447 4 112 4 589 2 70 2 546 2 405 2 497 2 547 2 28 2 324 2 120 2 506 2 279 2 77 4 642 2 234 2 179 2 80 2 553 2 38 2 417 2 705 2 420 2 93 2 421 2 751 4 
656 2 192 8 193 2 297 2 568 2 245 2 382 4 574 2 253 2 149 6 208 2 669 2 212 2 479 2 477 2 155 2 391 2 439 2 257 4 394 2 17 2 581 2 219 4 586 2 587 2 62 4 488 6 223 2 321 2 678 2 540 4 111 2 447 4 112 4 589 2 70 2 546 2 405 2 497 2 547 2 28 2 324 2 120 2 506 2 279 2 77 4 642 2 234 2 179 2 80 2 553 2 38 2 417 2 705 2 420 2 93 2 421 2 751 4 
656 2 192 8 193 2 297 2 568 2 245 2 382 4 574 4 253 2 149 6 208 2 385 2 669 2 212 2 479 2 477 2 155 2 391 2 439 2 257 4 394 2 17 2 581 2 219 4 586 2 587 2 62 6 488 6 321 2 678 2 540 4 111 2 447 4 112 4 589 2 70 2 546 2 405 2 497 2 547 2 28 2 324 2 120 2 506 2 279 2 77 4 642 2 234 2 179 2 80 2 553 2 38 2 417 2 705 2 420 2 93 2 421 2 751 4 
656 2 192 8 193 2 297 2 568 2 245 2 382 4 574 4 253 2 149 8 208 2 385 2 669 2 212 2 479 2 477 2 155 2 391 2 439 2 257 4 394 2 17 2 581 2 219 4 586 2 587 2 62 6 488 6 223 2 321 2 678 2 540 6 111 2 447 6 112 4 589 2 70 2 546 2 405 2 497 2 547 2 28 2 324 2 120 2 506 2 279 2 77 4 642 2 234 2 179 2 80 2 553 2 38 2 417 2 705 2 420 2 93 2 421 2 751 6 
656 2 192 8 193 2 297 2 568 2 245 2 382 4 574 4 253 2 149 8 208 2 385 2 669 2 212 2 479 2 477 2 155 2 391 2 439 2 257 4 394 2 17 2 581 2 219 4 586 2 587 2 62 6 488 6 321 2 678 2 540 4 111 2 447 4 112 4 589 2 70 2 546 2 405 2 497 2 547 2 28 2 324 2 120 2 506 2 279 2 77 4 642 2 234 2 179 2 80 2 553 2 38 2 417 2 705 2 420 2 93 2 421 2 751 6 
192 40 464 2 193 2 297 2 564 2 3 6 568 2 565 8 569 6 299 2 196 2 571 2 382 4 470 4 6 2 301 2 574 2 10 2 11 6 208 4 577 1 101 1 14 4 668 6 388 7 669 2 212 2 670 6 479 2 477 2 16 6 15 2 578 1 579 6 391 2 393 2 216 6 394 2 215 6 17 2 581 2 218 4 104 6 219 4 586 2 587 2 488 24 223 2 321 4 678 2 111 2 401 2 225 2 226 2 112 6 589 2 493 2 405 2 497 4 407 2 28 2 324 2 118 6 228 2 231 2 120 2 505 6 121 2 506 4 123 4 599 2 691 2 410 2 508 2 234 2 510 1 238 7 511 2 131 2 331 6 514 2 36 6 696 2 38 2 417 2 137 4 41 2 700 10 704 2 705 2 611 2 420 2 421 2 341 2 424 2 144 6 245 2 427 2 614 6 711 6 149 2 253 2 150 2 434 2 619 2 621 6 256 2 623 2 718 2 624 2 155 2 439 2 257 4 440 1 720 6 724 2 536 2 62 2 539 2 540 4 447 6 67 2 68 2 544 2 70 4 546 2 732 1 450 2 547 2 738 2 273 2 276 2 175 12 77 4 279 2 282 2 642 2 372 2 79 2 80 2 179 2 553 2 183 2 287 1 185 2 85 2 746 2 457 2 378 2 293 1 88 2 460 1 93 2 559 8 
192 42 464 2 193 2 297 2 564 2 3 6 568 2 565 8 569 6 299 2 194 2 196 2 571 2 382 4 470 4 6 2 301 2 574 4 10 2 11 6 308 2 208 4 385 2 14 4 668 6 669 2 212 2 670 6 479 2 477 2 16 6 15 2 579 6 391 2 393 2 216 6 394 2 215 6 17 2 581 2 218 4 104 6 219 4 586 2 587 2 488 26 321 4 678 2 111 2 401 2 225 2 226 2 112 6 589 2 493 2 405 2 497 4 407 2 28 2 324 2 118 6 228 2 231 2 120 2 505 6 121 2 506 4 123 4 599 2 691 2 410 2 508 2 234 2 511 2 131 2 331 6 514 2 36 6 696 2 38 2 417 2 137 4 41 2 700 10 704 2 705 2 611 2 420 2 421 2 341 2 424 2 144 6 245 2 427 2 614 6 711 6 149 2 253 2 150 2 434 2 619 2 621 6 256 2 623 2 718 2 624 2 155 2 439 2 257 4 720 6 724 4 536 2 62 4 539 2 540 4 447 6 67 2 68 2 544 2 70 4 546 2 450 2 547 2 738 2 273 2 276 2 175 12 77 4 279 2 282 2 642 2 372 2 79 2 80 2 179 2 553 2 183 2 185 2 85 2 291 2 746 2 457 2 378 2 88 2 93 2 559 8 
192 42 464 2 193 2 297 2 564 2 3 6 568 2 565 8 569 6 299 2 194 2 196 2 571 2 382 4 470 4 6 2 301 2 574 4 10 2 11 6 308 2 208 4 385 2 14 4 668 6 669 2 212 2 670 6 479 2 477 2 16 6 15 2 579 6 391 2 393 2 216 6 394 2 215 6 17 2 581 2 218 4 104 6 219 4 586 2 587 2 488 26 321 4 678 2 111 2 401 2 225 2 226 2 112 6 589 2 493 2 405 2 497 4 407 2 28 2 324 2 118 6 228 2 231 2 120 2 505 6 121 2 506 4 123 4 599 2 691 2 410 2 508 2 234 2 511 2 131 2 331 6 514 2 36 6 696 2 38 2 417 2 137 4 41 2 700 10 704 2 705 2 611 2 420 2 421 2 341 2 424 2 144 6 245 2 427 2 614 6 711 6 149 4 253 2 150 2 434 2 619 2 621 6 256 2 623 2 718 2 624 2 155 2 439 2 257 4 720 6 724 4 536 2 62 4 539 2 540 4 447 6 67 2 68 2 544 2 70 4 546 2 450 2 547 2 738 2 273 2 276 2 175 12 77 4 279 2 282 2 642 2 372 2 79 2 80 2 179 2 553 2 183 2 185 2 85 2 291 2 746 2 457 2 378 2 88 2 93 2 559 8 751 2 
192 46 464 2 193 2 297 2 564 2 3 6 568 2 565 12 569 8 299 2 194 2 196 2 571 2 382 4 470 4 6 2 301 2 574 4 10 2 11 6 308 2 208 4 385 2 14 4 668 12 669 2 212 2 670 6 479 2 477 2 16 6 15 4 579 6 214 2 391 2 393 2 216 12 394 2 215 6 17 2 581 2 217 6 218 4 104 12 219 4 318 2 586 2 319 6 587 2 487 6 222 6 488 24 321 4 678 2 111 2 401 2 225 2 226 2 112 6 589 2 493 2 405 2 497 4 407 2 500 6 28 2 324 2 118 6 228 2 231 2 120 2 505 6 121 2 506 4 123 6 599 2 691 2 410 2 508 2 234 2 692 6 511 2 131 2 331 6 514 2 36 6 696 2 38 2 417 2 137 4 42 2 41 2 700 8 338 2 704 4 705 2 611 4 420 2 421 2 341 2 424 2 144 6 245 2 428 2 427 2 614 8 246 6 711 12 715 6 149 4 253 2 150 2 434 4 619 2 621 12 256 2 436 2 623 2 718 2 624 2 155 2 439 2 257 4 720 12 724 6 536 2 62 4 539 2 540 4 447 6 67 2 68 2 544 2 70 4 546 2 450 2 547 2 272 2 738 2 273 2 276 2 175 10 77 4 279 2 282 2 642 2 372 2 79 2 80 2 179 2 553 2 183 4 84 6 85 2 291 2 746 2 457 2 378 2 88 2 90 2 93 2 559 8 751 2 
447 2 193 2 589 2 297 2 405 2 547 2 382 2 324 2 574 4 149 2 253 2 120 2 385 2 77 2 279 2 642 2 80 2 477 2 179 2 391 2 155 2 17 2 38 2 219 2 62 4 678 2 540 4 111 2 751 2 421 2 
192 24 193 2 297 2 565 8 569 6 299 2 382 2 470 2 6 2 574 4 302 2 99 2 385 2 14 4 669 2 212 2 477 2 15 3 391 2 17 2 215 6 218 4 219 2 317 2 586 2 488 24 321 4 678 2 111 2 112 6 589 2 405 2 407 2 324 2 120 2 121 2 123 4 599 2 691 2 131 2 514 2 696 2 38 2 417 2 700 2 611 3 421 2 424 2 245 2 427 2 614 6 253 2 149 2 434 3 56 2 624 2 155 2 58 2 628 3 536 2 62 4 540 4 447 2 68 2 70 4 544 2 546 2 731 2 547 2 273 2 639 2 175 4 77 2 279 2 642 2 80 2 79 2 179 2 553 2 375 2 185 2 647 2 746 2 88 2 93 2 
656 2 192 8 193 2 297 2 568 2 245 2 382 4 574 4 253 2 149 8 208 2 385 2 669 2 212 2 479 2 477 2 155 2 391 2 439 2 257 4 394 2 17 2 581 2 219 4 586 2 587 2 62 6 488 6 321 2 678 2 540 4 111 2 447 4 112 4 589 2 70 2 546 2 405 2 497 2 547 2 28 2 324 2 120 2 506 2 279 2 77 4 642 2 234 2 179 2 80 2 553 2 38 2 417 2 705 2 420 2 93 2 421 2 751 6 
192 8 193 2 297 2 568 2 245 2 382 4 574 6 253 2 149 8 208 2 385 2 669 2 212 2 479 2 477 2 391 2 155 2 439 2 257 4 394 2 17 2 581 2 722 2 219 4 586 2 587 2 62 6 488 6 321 2 678 2 540 4 111 2 447 6 112 4 589 2 70 2 546 2 405 2 497 2 499 2 547 2 28 2 324 2 120 2 31 2 506 2 279 2 77 4 642 2 234 2 179 2 553 2 332 4 38 2 417 2 705 2 420 2 93 2 421 2 751 6 
253 2 315 2 239 2 
253 2 315 2 239 2 
192 14 562 2 565 2 569 2 299 2 382 2 470 2 6 2 8 2 574 6 385 2 14 4 212 2 477 2 215 6 17 2 218 4 219 2 586 2 18 2 488 14 223 2 321 4 678 2 112 6 405 2 592 2 407 2 28 2 120 2 121 2 599 2 234 2 131 2 514 2 696 2 417 2 39 2 609 2 611 2 422 2 424 2 245 2 427 2 614 2 253 2 149 4 624 2 155 2 257 2 722 2 536 2 62 4 540 6 447 6 68 2 544 2 70 4 546 2 547 4 273 2 175 2 77 2 79 2 553 2 746 2 88 2 93 2 751 4 
192 4 508 2 553 2 543 2 438 2 568 2 50 2 196 2 331 2 137 2 370 2 700 2 172 2 488 2 608 2 444 2 175 2 
192 14 562 2 565 2 569 2 299 2 382 2 470 2 6 2 8 2 574 6 385 2 14 4 212 2 476 2 477 2 215 6 17 2 218 4 219 2 586 2 18 2 488 14 223 2 321 4 678 2 112 6 405 2 592 2 407 2 28 2 120 2 121 2 599 2 234 2 131 2 514 2 696 2 417 2 39 2 609 2 611 4 422 4 424 2 245 2 427 2 614 2 253 2 149 4 624 2 155 2 257 2 722 2 536 2 62 4 540 6 447 6 68 2 544 2 70 4 546 2 547 4 169 2 273 2 175 2 77 2 79 2 553 2 746 2 88 2 93 2 751 4 
192 14 562 2 565 2 569 2 299 2 382 2 470 2 6 2 8 2 574 6 385 2 14 4 212 2 477 2 215 6 17 2 218 4 219 2 586 2 18 2 488 14 223 2 321 4 678 2 112 6 405 2 592 2 407 2 28 2 120 2 121 2 599 2 234 2 131 2 514 2 696 2 417 2 39 2 609 2 611 2 422 2 424 2 245 2 427 2 614 2 253 2 149 4 624 2 155 2 257 2 722 2 536 2 62 4 540 6 447 6 68 2 544 2 70 4 546 2 547 4 273 2 175 2 77 2 79 2 553 2 746 2 88 2 93 2 751 4 
192 26 294 2 565 8 569 6 299 2 470 2 6 2 206 2 14 2 212 2 15 2 215 2 671 2 218 2 397 2 586 2 19 2 488 20 321 4 399 4 112 6 226 2 588 2 407 2 686 2 593 1 409 2 231 2 121 2 123 4 124 2 691 2 233 2 511 2 131 2 605 2 694 2 696 2 417 2 699 2 44 2 241 2 611 2 344 2 424 2 346 2 245 2 427 2 614 6 523 2 434 2 531 2 360 2 260 2 725 2 727 6 536 2 631 2 537 2 264 2 633 1 446 2 163 2 68 2 545 2 70 4 546 2 71 2 637 6 450 2 548 2 167 2 371 2 174 2 175 2 176 2 178 2 372 2 180 4 553 2 376 2 556 2 746 2 457 2 650 2 93 2 
192 2 730 4 142 2 565 2 569 2 614 2 710 2 201 1 594 2 434 3 123 2 13 2 691 2 102 2 15 3 357 2 455 2 649 2 488 2 747 2 322 2 704 6 611 3 243 3 612 2 
192 2 730 4 142 2 565 2 569 2 614 2 710 2 594 2 434 2 123 2 13 2 691 2 102 2 15 2 357 2 455 2 649 2 488 2 747 2 322 2 704 6 611 2 243 2 612 2 
192 2 730 4 142 2 565 2 569 2 614 2 710 2 594 2 434 2 123 2 13 2 691 2 102 2 15 2 357 2 455 2 649 2 488 2 747 2 322 2 704 6 611 2 243 2 612 2 
192 2 403 1 522 2 565 2 710 2 133 1 35 2 734 2 325 2 107 2 665 2 488 2 434 1 611 1 242 2 691 2 323 1 
192 2 734 2 325 2 107 2 488 2 665 2 522 2 565 2 710 2 242 2 35 2 691 2 
192 2 734 2 325 2 107 2 488 2 665 2 522 2 565 2 710 2 242 2 35 2 691 2 
192 2 734 2 325 2 107 2 488 2 665 2 522 2 565 2 710 2 242 2 35 2 691 2 
192 2 734 2 325 2 107 2 488 2 665 2 522 2 565 2 710 2 242 2 35 2 691 2 
369 2 81 2 557 2 148 2 26 2 515 2 
557 2 329 2 597 2 157 2 333 2 445 2 733 2 
192 10 0 2 492 1 660 2 707 1 270 1 52 2 524 2 203 2 618 2 326 2 274 2 596 2 278 1 620 2 182 2 482 2 720 2 555 2 258 2 417 2 486 2 585 2 488 8 419 2 92 1 
23 2 344 4 658 1 545 4 2 2 72 2 637 11 174 4 206 4 176 4 178 2 233 2 180 8 311 2 531 2 605 2 671 4 359 2 135 2 535 4 538 2 264 4 399 4 
192 1 327 2 153 2 706 2 406 2 73 2 648 2 7 2 675 7 30 2 488 1 307 2 207 2 576 4 654 1 542 2 78 2 189 2 
327 2 153 4 706 4 406 2 73 2 648 4 7 2 675 6 30 2 307 2 207 2 576 4 78 2 542 2 189 2 
192 1 327 2 153 8 706 8 406 2 73 2 648 8 7 2 675 10 30 2 488 1 307 6 207 2 576 4 654 1 78 8 542 2 189 2 
327 2 153 2 706 2 406 2 73 2 648 2 7 2 675 2 30 2 207 2 576 2 542 2 189 2 
192 12 613 2 427 2 96 2 349 1 14 4 355 2 310 2 215 8 583 2 723 2 218 4 443 1 488 12 224 2 680 2 115 2 503 2 273 2 121 2 126 2 509 2 286 2 646 6 745 2 746 2 88 2 459 2 187 2 242 2 
192 12 529 2 310 2 509 2 613 2 286 2 427 2 115 2 646 4 215 10 218 4 503 2 186 2 746 2 273 4 488 12 88 4 187 2 121 2 242 2 14 4 126 2 680 2 
560 4 192 20 613 2 427 4 146 2 469 2 97 2 430 2 714 2 472 1 473 1 14 6 355 2 530 2 481 1 215 16 672 2 583 4 723 2 630 2 218 6 320 2 488 20 489 2 679 2 680 2 69 2 114 2 495 2 115 2 27 2 549 1 503 2 119 2 273 4 121 4 126 2 601 2 285 2 645 2 286 2 646 4 34 2 746 4 88 4 187 2 
192 12 613 2 496 2 427 2 115 2 96 2 503 2 575 2 273 2 121 2 14 4 126 2 355 1 552 2 310 2 235 2 509 2 286 2 215 8 646 7 583 2 723 1 485 2 218 4 745 2 746 2 488 12 88 2 187 2 680 2 
721 2 

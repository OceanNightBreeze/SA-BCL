#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 37 549 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 626 458 660 4 716 601 460 280 2 235 481 26 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V ERROR java.lang.ArrayIndexOutOfBoundsException (533,615,620,639,689) 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 724 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 245 296 240 306 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (573,630) 752 423 32 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 752 423 32 
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (573,630) 752 423 32 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 50 32 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2146 | = null
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Debug:logOn()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.MathMDE:pow_fast(II)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.MathMDE:sign(I)I
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:memberOf(I[I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:eltsLTE([II)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.ValueTuple:isMissing(I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.Quant:eltwiseGTE([I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:gt(II)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.PptSlice1:arity()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:lexGTE([I[I)Z
utilMDE.Intern:intern([I)[I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13739 | = null
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.MathMDE:pow(II)I
daikon.ProglangType:isIntegral()Z
daikon.VarInfo:relate_var()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([J)[J
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Intern:numIntArrays()I
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName:hashCode()I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:ne(II)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:intersection([I[I)[I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:eltsGtIndex([I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:concat([I[I)[I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:execute()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:eltwiseLT([I)Z
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:min([I)I
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:union([I[I)[I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:justified()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaCharStream:getEndLine()I
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Ppt:Ppt()V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.OrderedPairIterator:setnext1()V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:lte(II)Z
daikon.Quant:lexEqual([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.MathMDE:negate(I)I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.MathMDE:modulus([I)[I | OPERATOR | 8627 | % -> >>>
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaCharStream:readChar()C
daikon.Quant:lexLT([I[I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaCharStream:ReadByte()C
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.ModBitTracker:split(I)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_ntk()I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:lt(II)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.ProglangType:dimensions()I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:subsetOf([B[I)Z
jtb.JavaCharStream:getBeginLine()I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | STATEMENT | 14158 | stmt -> ;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant; | STATEMENT | 1442 | stmt -> ;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:hashCode()I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:lexLTE([I[I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.PptSlice0:arity()I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:BeginToken()C
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 7264 | = null
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaCharStream:FillBuff()V
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.ValueTuple:size()I
utilMDE.ArraysMDE:sum([D)D
jtb.JavaCharStream:getBeginColumn()I
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:noDuplicates([D)Z | CONSTANT | 57690 | 0 -> 1
daikon.inv.Invariants:Invariants()V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >=
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONDITION | 50578 | if (x) -> if (!x)
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Assert:assertTrue(Z)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([D)[D
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:size()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_vars()I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | OPERATOR | 107346 | <= -> ==
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([S[S)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.InvMap:InvMap()V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:eltsLT([II)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V | ASSIGN | 581 | = null
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I | CONSTANT | 20467 | 32 -> 1
utilMDE.ArraysMDE:sum([I)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.Quant:eq(II)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:slice([III)[I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:isReverse([I[I)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.ProglangType:isArray()Z
utilMDE.MathMDE:gcd(II)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
703 2 447 4 131 2 512 2 132 2 630 2 573 2 108 2 691 2 
191 2 510 2 410 6 182 6 440 2 203 2 350 2 714 2 531 6 693 2 509 2 
713 2 627 2 744 4 166 2 246 4 169 2 242 2 721 2 574 4 
462 16 373 8 617 10 81 10 82 16 498 4 500 2 6 26 34 2 571 8 35 2 628 2 62 2 630 6 87 4 38 12 573 6 304 4 669 2 43 16 124 10 514 8 605 8 187 6 236 4 73 2 154 6 706 10 309 29 422 10 
307 6 321 4 
220 2 
328 2 493 2 618 2 645 2 472 2 624 2 222 2 717 2 508 2 62 2 39 2 147 2 282 2 672 4 16 2 237 2 263 2 609 2 611 2 763 2 132 2 767 2 310 2 523 2 
643 4 462 32 373 6 731 8 614 2 425 4 617 16 644 4 79 4 81 16 622 2 82 32 500 2 530 4 6 48 404 6 474 2 571 18 360 2 630 4 573 4 38 22 66 6 202 4 43 32 305 6 124 16 416 2 453 2 348 6 516 6 187 4 236 2 759 6 154 4 544 4 706 6 309 54 422 16 
763 2 728 2 228 2 
589 2 90 2 118 2 402 2 314 2 393 22 443 2 51 2 359 10 565 2 211 2 520 2 420 2 156 2 
462 2 617 2 659 2 193 2 194 2 81 2 105 2 82 2 740 2 503 2 6 4 571 2 38 2 43 2 124 2 232 2 206 2 236 2 154 2 656 2 706 4 309 6 422 2 
304 2 462 8 425 4 43 8 305 6 617 4 451 2 124 4 81 4 82 8 84 2 348 6 6 12 544 4 38 4 309 16 422 4 
55 2 441 2 431 2 741 4 405 14 176 2 667 2 303 2 198 2 64 2 228 2 180 2 68 2 415 2 392 2 758 8 455 2 763 4 132 2 728 2 
750 2 254 2 492 2 229 2 549 2 125 2 220 2 298 2 485 2 37 2 613 2 
658 3 102 1 374 2 375 2 294 2 3 2 569 2 104 5 379 2 7 2 380 2 302 16 199 4 573 34 382 2 668 2 670 2 577 2 578 2 14 24 671 2 17 1 482 2 673 2 483 3 204 3 205 2 676 3 20 4 583 2 394 2 585 2 209 2 111 2 212 2 682 8 23 2 683 1 490 4 397 2 491 8 492 1 586 2 27 6 688 2 398 2 588 16 400 6 401 2 496 2 690 2 691 2 33 1 406 2 224 1 694 1 119 2 225 2 40 2 696 2 320 2 42 2 411 2 229 1 698 2 230 2 47 32 322 4 233 2 606 2 418 2 323 2 324 2 608 2 129 4 238 1 704 2 521 2 421 2 329 1 135 2 525 2 430 2 619 4 526 2 710 2 333 3 711 6 334 6 712 2 336 2 715 2 250 2 142 1 251 2 630 32 722 2 344 1 257 2 535 2 635 3 258 2 536 2 638 1 264 12 155 32 76 2 75 2 642 1 267 2 437 2 271 2 273 1 733 2 168 2 275 2 735 2 172 3 173 2 174 2 177 16 178 2 279 2 448 1 86 2 281 2 553 2 554 2 363 4 364 3 649 1 450 1 94 2 650 3 95 2 556 2 367 2 558 3 452 2 288 8 756 2 560 2 186 2 757 16 371 1 761 3 563 2 564 4 292 24 99 3 461 1 
476 2 573 2 
506 2 573 4 378 2 
760 2 
26 2 464 20 548 2 660 2 661 20 2 2 357 2 216 2 663 2 4 2 592 2 528 2 473 20 626 2 716 2 552 2 280 2 631 2 122 2 255 2 481 2 384 2 534 2 753 2 601 2 602 2 580 2 70 2 454 2 235 2 456 2 458 2 97 2 640 2 265 2 460 2 612 2 158 2 
597 2 662 2 736 2 383 1 
98 2 736 2 
0 2 223 2 763 2 109 2 87 2 218 2 736 2 
417 2 109 2 736 2 
639 2 109 2 736 2 
597 2 748 2 217 2 
109 2 736 2 
657 2 217 2 
157 2 736 2 
597 2 217 2 297 2 
597 2 285 2 755 2 
597 2 134 2 737 2 
426 2 597 2 189 2 
487 2 597 2 677 2 
217 2 63 2 
214 2 736 2 
285 2 318 2 
439 2 134 2 
664 2 426 2 
127 2 487 2 
463 2 217 2 
487 2 629 2 
426 2 231 2 
269 2 134 2 
285 2 58 2 
427 2 597 2 217 2 297 2 
593 2 427 2 597 2 217 2 297 2 
597 2 699 2 217 2 
432 2 597 2 217 2 
181 2 388 2 300 2 433 2 
148 2 615 4 689 2 620 2 766 2 566 2 533 2 
597 2 749 2 
0 2 101 2 243 2 763 2 
0 2 101 2 243 2 346 2 763 2 218 2 
0 2 763 2 109 2 87 2 736 2 707 2 
493 2 603 2 
739 2 0 2 763 2 87 2 
195 2 426 2 
487 2 71 2 
697 2 285 2 
117 2 134 2 
487 2 465 2 134 2 
487 2 134 2 575 2 
487 2 24 2 134 2 
487 2 153 2 134 2 
0 2 734 6 5 2 175 2 259 6 290 2 762 2 763 2 
163 2 217 2 
606 2 
375 2 572 2 479 2 199 4 573 26 200 2 577 2 671 2 386 4 17 2 673 4 482 2 205 2 20 2 486 2 583 2 23 2 490 2 397 2 27 2 688 2 398 2 400 6 115 2 496 2 691 2 406 2 119 2 225 2 696 2 40 2 42 2 411 2 47 6 234 2 323 2 129 2 238 2 704 6 521 2 421 2 135 2 331 4 526 2 619 4 711 2 334 4 715 2 630 26 145 2 340 2 342 2 723 2 258 2 535 2 151 2 155 4 264 8 75 2 268 2 272 2 445 2 177 6 178 2 86 2 361 2 281 2 553 2 363 4 95 2 452 2 288 2 653 2 564 4 
375 2 572 2 479 2 199 4 573 26 200 2 577 2 671 2 386 4 17 2 673 4 482 2 205 2 20 2 486 2 583 2 212 2 113 2 23 2 490 2 397 2 27 2 688 2 398 2 400 6 115 2 496 2 691 2 406 2 119 2 225 2 696 2 40 2 42 2 411 2 230 2 47 6 234 2 323 2 129 2 238 2 704 6 521 2 421 2 135 2 331 4 138 2 526 2 619 4 711 2 334 6 715 2 630 26 145 2 342 2 722 2 723 2 258 2 535 2 151 2 262 2 155 4 264 8 75 2 272 2 445 2 177 6 178 2 86 2 281 2 553 2 363 4 95 2 452 2 288 2 653 2 564 4 
100 2 
45 2 685 2 
687 2 44 2 188 2 
687 2 44 2 188 2 
191 4 375 2 467 2 8 2 572 2 480 4 199 4 573 24 577 2 671 2 579 6 203 4 205 2 675 2 308 2 110 2 20 4 395 2 212 2 23 4 490 4 687 6 398 2 400 6 494 2 116 2 31 2 496 2 313 2 501 2 691 2 403 2 693 4 317 4 119 2 408 2 225 2 695 4 227 2 509 4 696 2 42 4 410 12 44 2 230 2 47 2 126 2 323 2 702 2 515 2 129 4 704 2 521 2 54 6 424 4 135 2 136 4 330 2 428 2 526 2 619 4 529 2 60 2 334 6 714 4 531 12 61 4 719 2 630 16 145 6 634 4 723 2 256 4 724 2 258 2 636 2 151 4 349 2 260 2 264 4 155 2 641 2 266 2 75 2 547 2 440 4 80 2 276 2 177 2 178 2 86 2 281 2 553 2 283 2 363 4 182 16 557 2 452 2 561 2 370 2 457 2 655 2 188 4 564 4 
577 2 42 2 164 2 45 2 591 2 276 2 308 2 48 2 313 2 349 2 140 2 395 2 630 2 573 4 227 2 339 2 12 2 
191 4 375 2 467 2 8 2 572 2 480 4 199 4 573 24 577 2 671 2 579 6 203 4 205 2 675 2 308 2 20 4 395 2 212 2 23 4 490 4 687 6 398 2 399 2 400 6 116 2 31 2 496 2 313 2 501 2 691 2 403 2 693 4 317 4 119 2 408 2 225 2 695 4 509 4 696 2 42 2 410 12 44 2 230 2 47 2 700 2 126 2 323 2 702 2 128 2 515 2 129 4 519 2 704 2 521 2 54 6 424 4 135 2 136 4 330 2 428 2 526 2 619 4 529 2 60 2 334 6 714 4 531 12 61 4 719 2 630 16 145 6 634 4 723 2 256 4 724 2 258 2 636 2 151 4 260 2 264 4 155 4 266 2 75 2 77 2 440 4 80 2 276 2 177 2 178 2 179 2 86 2 281 2 553 2 283 2 363 4 182 16 557 2 452 2 561 2 370 4 457 2 655 4 188 4 564 4 
191 4 375 2 467 2 8 2 572 2 480 4 199 4 573 24 577 2 671 2 579 6 203 4 205 2 675 2 308 2 20 4 395 2 212 2 23 4 490 4 687 6 398 2 400 6 116 2 31 2 496 2 313 2 501 2 691 2 502 2 403 2 693 4 317 4 119 2 408 2 225 2 695 4 227 2 509 4 696 2 42 4 410 12 44 2 230 2 47 2 700 2 126 2 323 2 702 2 515 2 129 4 704 2 521 2 54 6 424 4 135 2 136 4 330 2 709 2 428 2 526 2 619 4 529 2 60 2 334 6 714 4 531 12 61 2 630 16 145 6 634 4 345 2 723 2 256 4 724 2 258 2 636 2 151 4 349 2 260 2 264 4 155 2 266 2 75 2 440 4 80 2 276 2 171 2 177 2 178 2 86 2 281 2 553 2 283 2 363 4 91 2 182 16 557 2 452 2 561 2 370 2 457 2 655 4 188 4 564 4 
462 2 466 2 103 2 375 2 376 4 570 2 296 2 6 4 479 2 573 26 199 2 577 2 306 2 671 2 385 2 386 4 387 1 19 2 205 2 484 2 21 2 486 2 210 2 212 2 488 2 309 6 27 2 398 2 400 6 30 2 496 2 315 2 691 2 504 6 594 2 119 2 120 2 121 2 696 2 319 2 409 2 43 2 42 2 413 2 230 2 47 8 124 2 323 2 52 2 704 6 240 2 521 2 241 2 421 2 133 2 326 2 422 2 135 2 617 2 244 6 245 2 621 2 619 4 526 2 139 2 332 2 711 2 334 4 630 20 145 2 65 6 723 2 150 2 538 2 348 4 541 2 261 2 264 4 155 2 544 2 545 2 75 2 436 2 161 2 162 2 165 2 274 2 81 2 82 2 442 2 738 2 551 2 647 2 742 2 85 2 743 2 177 6 178 2 746 2 86 2 88 2 284 2 363 4 449 2 183 2 93 2 452 2 288 2 96 2 562 2 564 2 764 2 765 2 
372 2 27 3 356 4 468 2 471 2 711 3 358 2 177 2 598 2 381 2 507 2 479 6 630 2 573 2 386 2 47 2 72 3 155 3 704 2 543 2 421 2 355 2 567 2 160 2 
372 2 27 2 356 4 468 2 471 2 711 2 358 2 177 2 598 2 381 2 507 2 479 6 630 2 573 2 386 2 47 2 72 2 155 2 704 2 543 2 421 2 355 2 567 2 160 2 
372 2 27 2 356 4 468 2 471 2 711 2 358 2 177 2 598 2 381 2 507 2 479 6 630 2 573 2 386 2 47 2 72 2 155 2 704 2 543 2 421 2 355 2 567 2 160 2 
438 2 462 2 373 4 27 3 732 2 617 2 81 2 470 2 82 2 316 2 6 4 9 4 197 2 747 4 598 2 302 2 630 4 573 10 13 3 43 2 365 4 412 4 366 2 47 2 46 2 674 3 124 2 286 3 152 2 757 2 187 2 208 2 680 2 155 3 517 6 421 2 309 6 422 2 311 2 489 4 
438 2 462 2 373 4 27 2 732 2 617 2 81 2 470 2 82 2 500 2 316 2 6 4 571 2 9 4 197 2 747 4 598 2 302 2 630 4 38 2 573 10 13 2 43 2 365 4 412 4 366 2 47 2 46 2 674 2 124 2 286 2 152 2 757 2 187 2 208 2 680 2 155 2 517 6 421 2 309 4 422 2 311 2 489 4 
438 2 462 2 373 4 27 2 732 2 617 2 81 2 470 2 82 2 500 2 316 2 6 4 571 2 9 4 197 2 747 4 598 2 302 2 630 4 38 2 573 10 13 2 43 2 365 4 412 4 366 2 47 2 46 2 674 2 124 2 286 2 152 2 757 2 187 2 208 2 680 2 155 2 517 6 421 2 309 4 422 2 311 2 489 4 
438 2 462 2 373 4 27 2 732 2 617 2 81 2 470 2 82 2 500 2 316 2 6 4 571 2 9 4 197 2 747 4 598 2 302 2 630 4 38 2 573 10 13 2 43 2 365 4 412 4 366 2 47 2 46 2 674 2 124 2 286 2 152 2 757 2 187 2 208 2 680 2 155 2 517 6 421 2 309 4 422 2 311 2 489 4 
438 2 462 2 373 4 27 2 732 2 617 2 81 2 470 2 82 2 500 4 316 2 6 4 571 4 9 4 197 2 747 4 598 2 302 2 630 4 38 4 573 10 13 2 43 2 365 4 412 4 366 2 47 2 46 2 674 2 124 2 286 2 152 2 757 2 187 2 208 2 680 2 155 2 517 6 421 2 309 4 422 2 311 2 489 4 
679 2 29 2 112 2 646 2 499 2 146 2 
486 2 207 2 607 2 22 2 478 2 527 2 146 2 
55 1 135 2 215 2 1 2 495 2 335 2 176 1 407 2 106 2 477 2 630 8 10 2 573 10 11 2 362 2 15 2 511 1 123 2 725 1 389 2 391 2 459 1 610 2 681 2 354 2 522 2 
462 6 731 2 730 2 373 4 616 2 617 6 79 2 81 6 139 2 82 6 500 2 6 12 404 4 743 2 571 2 532 2 36 2 630 6 573 6 38 4 409 2 43 6 124 6 368 2 369 2 348 4 187 2 544 2 309 16 422 6 
312 2 67 2 576 2 524 1 365 2 590 2 248 2 726 2 83 2 446 2 141 7 584 4 352 2 747 2 630 1 718 2 573 1 489 2 
312 4 576 2 67 4 365 2 590 2 248 2 726 2 83 2 446 2 141 6 584 4 352 2 747 2 718 4 489 2 
312 8 576 2 67 8 524 1 365 2 590 2 248 2 726 2 83 2 446 8 141 10 584 4 352 6 747 2 630 1 718 8 573 1 489 2 
312 2 576 2 67 2 365 2 590 2 248 2 726 2 83 2 141 2 584 2 747 2 718 2 489 2 
299 1 665 2 107 2 199 8 573 22 671 4 582 2 678 2 212 4 213 2 587 4 686 2 496 4 32 2 119 4 226 1 41 2 230 4 701 1 130 2 518 2 423 2 137 2 59 2 334 14 143 1 338 1 720 2 630 20 253 2 149 2 69 2 539 2 347 4 637 2 351 1 353 2 74 2 546 4 729 2 170 2 745 4 555 2 184 2 752 2 754 4 652 2 564 6 291 1 768 2 
137 2 708 2 429 2 295 2 249 2 334 25 665 2 475 2 301 2 666 2 630 28 573 28 199 12 341 2 201 2 633 2 671 2 434 2 539 2 435 4 581 2 390 2 727 2 351 2 212 1 353 2 159 2 684 2 28 2 167 2 496 2 170 2 32 2 550 2 219 2 444 4 221 2 505 2 595 2 692 2 745 20 119 2 89 4 599 2 555 2 230 1 752 2 754 2 287 2 513 2 559 2 49 2 289 2 185 2 325 2 654 2 564 12 239 2 705 2 423 2 190 2 
137 2 568 2 469 2 623 2 59 2 334 19 625 2 196 2 665 2 337 2 107 2 720 4 630 26 573 28 199 10 632 2 253 2 633 2 671 2 69 2 539 2 540 4 347 6 582 2 637 2 678 2 212 3 353 2 74 2 213 2 546 6 25 2 587 2 28 2 686 2 78 2 167 2 170 1 496 2 32 2 277 2 745 15 119 2 599 2 648 2 600 4 555 3 92 4 230 3 752 2 651 2 754 6 414 2 130 2 564 8 291 2 518 2 53 2 423 2 327 2 
137 2 192 2 56 2 377 4 247 4 57 2 334 37 665 2 475 4 666 4 252 2 143 2 144 4 338 6 630 26 573 28 199 14 201 4 343 2 633 6 149 10 671 2 18 2 537 6 539 2 351 2 212 9 353 2 396 2 270 2 28 6 114 2 78 2 167 2 496 2 497 2 32 2 277 2 278 2 596 4 745 14 119 2 226 2 599 6 41 2 555 2 751 4 184 10 230 9 752 2 754 8 701 2 604 2 652 2 50 2 564 14 291 2 419 2 293 2 53 2 423 2 768 2 
542 2 

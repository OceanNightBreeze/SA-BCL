#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V ERROR java.lang.NullPointerException 1091 813 
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (532,759) 643 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (703,985) (329,905) (329,905) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (703,985) (329,905) (329,905) 
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException (703,985) (329,905) (329,905) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (703,985) (329,905) (329,905) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (703,985) (329,905) (329,905) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (703,985) (329,905) (329,905) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (703,985) (329,905) (329,905) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (703,985) (329,905) (329,905) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (703,985) (329,905) (329,905) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (703,985) (329,905) (329,905) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (703,985) (329,905) (329,905) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (703,985) (329,905) (329,905) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException (703,985) (329,905) (329,905) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException (703,985) (329,905) (329,905) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 735 
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 286 770 552 405 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR java.lang.NullPointerException 530 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR java.lang.NullPointerException 530 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR java.lang.NullPointerException 530 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 530 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 530 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 842 335 304 873 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 335 304 873 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 842 335 304 873 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 842 335 304 873 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:subsetOf([B[I)Z | CONDITION | 29819 | if (x) -> if (!x)
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:jj_3R_106()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_3R_72()Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_22()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:jj_3R_210()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:jj_3R_125()Z
daikon.Quant:eltwiseNotEqual([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_136()Z
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:jj_3_13()Z
daikon.diff.RootNode:RootNode()V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.Invariants:Invariants()V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:jj_3R_61()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_126()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.ArraysMDE:concat([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3R_123()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:jj_3R_57()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexLTE([I[I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3R_164()Z
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_124()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:jj_3R_54()Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptSlice0:arity()I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:jj_3R_69()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_3R_67()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_70()Z
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_2_3(I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_98()Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.Quant:slice([III)[I | RETURN | 160908 | return null
jtb.JavaCharStream:ReadByte()C
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:jj_3_27()Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_121()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_3R_180()Z
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.Quant:eltsEqual([II)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:jj_3_10()Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3_21()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:gcd(II)I
daikon.ProglangType:isIntegral()Z
jtb.JavaParser:jj_3R_119()Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:present()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:gcd([I)I
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3_15()Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaParser:jj_3R_68()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.ProglangType:isArray()Z
jtb.JavaParser:jj_3_18()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeOptional:present()Z
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseLT([I)Z
jtb.JavaCharStream:readChar()C
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | ASSIGN | 24199 | = null
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:jj_2_4(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:jj_3R_62()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:lexNotEqual([I[I)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode; | ASSIGN | 23053 | = null
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus; | ASSIGN | 17939 | = null
daikon.Quant:eltwiseLTE([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_122()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_63()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_117()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParser:jj_3R_89()Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName; | RETURN | 27662 | return null
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:BeginToken()C
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice1:arity()I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_3R_149()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:jj_2_10(I)Z
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:justified()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_100()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | OPERATOR | 46762 | && -> ||
daikon.ValueTuple:size()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_115()Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_2_14(I)Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.MathMDE:gcd(JJ)J
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:lexEqual([I[I)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_25(I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3R_56()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_3R_169()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3_36()Z
daikon.Ppt:Ppt()V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z | ASSIGN | 20464 | = null
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParser:jj_3_28()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.MathMDE:pow(II)I
daikon.Quant:sameLength([I[I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:eltsGtIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:jj_3R_87()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3R_101()Z
daikon.Quant:setEqual([I[I)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.PptName:toString()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3_3()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseEqual([I)Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3R_120()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_55()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_107()Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:jj_3R_162()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.Node:Node()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3_17()Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:lexLT([I[I)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 3923 | = null
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:jj_3R_80()Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_73()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.Quant:eltsLteIndex([I)Z
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:jj_3R_118()Z
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:jj_3R_110()Z
daikon.ProglangType:isPseudoArray()Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:negate(I)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.visitor.FormatCommand:getCommand()I
jtb.JavaParser:jj_3R_88()Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:getBeginLine()I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_81()Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.MathMDE:pow_fast(II)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_53()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndColumn()I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:jj_scan_token(I)Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:concat([I[I)[I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_102()Z
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.ModBitTracker:split(I)I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_3R_77()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:noDups([I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_18(I)Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_135()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:intersection([I[I)[I
daikon.ModBitTracker:ModBitTracker(I)V
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | ASSIGN | 63682 | = null
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_50()Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsLT([II)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.PptName:getMethodName()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2586 | = null
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice2:arity()I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_15(I)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 98882 | return null
jtb.JavaParser:jj_3R_137()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfo:relate_var()V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
utilMDE.ArraysMDE:min([I)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_3R_109()Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:numIntArrays()I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern:intern([J)[J
daikon.Quant:gt(II)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_85()Z
utilMDE.ArraysMDE:indexOf([II)I | CONDITION | 13875 | if (x) -> if (!x)
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eq(II)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_104()Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_3R_103()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.JavaParser:jj_3_35()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.ProglangType:dimensions()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_2_17(I)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:ne(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:jj_3_25()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_60()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.InvMap:InvMap()V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.PptName:getSignature()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_99()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_13(I)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_105()Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.OrderedPairIterator:setnext2()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.ArraysMDE:max([I)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.Debug:logOn()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsLTE([II)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V | ASSIGN | 491 | = null
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_114()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:jj_3R_108()Z
daikon.Quant:lte(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([I)Z | ASSIGN | 57082 | = null
jtb.JavaParser:jj_3_30()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object; | RETURN | 20497 | return null
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.Intern:intern([D)[D
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.JavaParser:jj_3_12()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaCharStream:backup(I)V
utilMDE.LimitedSizeIntSet:add(I)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexGT([I[I)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.visitor.FormatCommand:getNumCommands()I
jtb.JavaParser:jj_3R_134()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParser:jj_3_20()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1122 2 562 2 488 4 1006 2 895 2 681 2 197 2 610 2 922 2 
949 6 330 2 404 2 21 2 430 2 827 2 487 2 893 2 680 6 908 2 1016 6 
525 2 278 6 203 2 562 2 589 6 236 2 615 2 714 6 52 4 895 2 35 6 669 2 365 4 
372 2 336 29 903 6 129 16 907 10 702 10 1013 2 1128 6 345 26 220 10 1101 8 463 8 58 4 854 2 20 4 562 6 248 2 282 8 472 8 747 4 495 2 193 12 857 16 791 10 1031 16 436 2 1111 10 862 2 895 6 443 4 
254 6 871 4 
713 2 
17 2 950 2 891 2 316 2 1028 2 564 4 532 2 456 2 180 2 682 2 913 2 111 2 
401 2 1046 4 877 4 336 54 337 2 655 4 903 4 848 6 129 32 769 2 1096 4 907 16 702 16 1012 4 419 6 814 2 1128 4 977 6 345 48 220 16 854 2 744 6 20 2 562 4 1105 4 148 2 282 6 472 16 857 32 676 8 193 22 711 4 601 6 1031 32 791 6 1111 16 835 6 895 4 
177 2 938 2 532 2 
113 2 981 2 688 22 264 2 531 2 627 2 302 2 859 2 356 2 69 2 285 10 305 2 1078 2 759 2 
901 2 82 2 336 6 612 2 1095 2 129 2 907 2 702 2 1128 2 345 4 220 2 221 2 20 2 527 2 1104 2 472 2 193 2 857 2 1031 2 791 4 1111 2 1035 2 932 2 
744 6 877 4 193 4 857 8 336 16 655 4 153 2 129 8 1031 8 1111 4 131 2 907 4 419 6 702 4 345 12 220 4 58 2 
168 2 605 4 580 2 509 2 1 2 800 2 204 10 83 4 408 14 334 62 454 2 972 4 694 2 177 6 733 4 45 4 938 2 1051 4 179 2 549 2 311 2 1014 4 910 10 423 2 216 2 424 4 1100 2 740 2 1132 2 316 4 1027 4 564 4 532 8 475 2 101 4 27 2 30 2 1143 4 325 2 257 2 
171 2 120 2 483 2 730 2 175 2 223 2 595 2 252 2 713 2 260 2 
725 2 724 2 1003 2 1004 2 1002 1 727 2 453 4 872 2 5 2 6 2 583 24 173 1 875 2 301 3 876 2 178 2 881 8 458 32 884 2 11 12 182 3 312 2 886 2 14 2 1025 2 187 2 315 2 23 2 1029 2 24 2 319 2 194 2 479 6 323 2 1036 2 895 32 896 2 602 3 326 2 756 16 604 3 200 4 202 2 1045 2 205 16 606 2 1048 1 484 32 339 2 209 3 48 2 342 4 49 1 617 2 1057 24 54 2 55 1 217 2 620 12 56 2 59 2 350 1 783 2 1066 3 351 4 786 4 352 2 787 4 499 2 498 2 633 2 792 4 70 2 72 4 928 3 638 2 1083 2 930 1 931 3 642 2 803 2 369 2 510 2 651 1 650 6 653 2 85 1 1093 2 1094 2 88 8 810 2 811 2 812 3 1098 2 940 1 665 2 667 2 947 2 524 2 245 16 391 2 951 2 246 2 529 6 98 2 1107 2 826 1 537 2 253 1 828 2 539 2 1112 2 681 2 542 3 400 2 839 2 258 16 968 2 114 2 1119 1 119 1 545 2 406 2 123 3 122 2 268 1 414 2 270 2 698 2 418 2 1126 2 271 2 701 5 1127 2 1129 3 551 2 979 2 141 2 1136 2 1135 1 562 34 427 1 152 2 1141 2 155 2 865 6 163 8 447 2 165 2 
562 2 834 2 
562 4 494 2 320 2 
439 2 
579 2 581 4 3 2 582 2 585 6 7 4 8 4 586 112 588 30 590 4 9 10 10 2 12 10 15 2 593 6 592 4 18 2 19 6 25 2 597 2 28 6 598 2 599 8 600 6 32 198 33 2 37 4 38 2 40 8 607 6 608 2 609 4 613 2 614 2 50 2 51 8 618 4 54 2 622 4 623 6 61 6 60 2 63 2 65 16 66 4 626 12 67 60 628 28 629 132 632 22 634 2 636 20 635 2 71 2 73 2 75 198 76 4 639 6 77 94 78 2 81 6 646 4 648 2 649 2 84 30 86 12 657 2 87 198 89 2 662 48 90 4 91 2 663 50 664 4 672 16 674 4 95 2 97 4 99 20 100 2 677 60 103 6 679 6 104 6 683 4 108 2 686 30 109 4 110 8 115 2 687 20 689 2 118 2 121 74 125 2 691 4 692 2 128 4 127 2 696 6 697 2 130 2 700 2 133 2 134 60 137 2 138 2 139 14 140 244 142 28 143 2 706 26 145 86 146 6 147 64 707 18 149 6 708 2 709 2 150 328 712 12 156 6 716 4 158 432 161 88 160 192 717 2 718 2 162 2 164 4 721 2 722 6 166 30 169 14 723 198 170 6 726 6 731 2 734 2 181 2 737 2 736 2 184 2 185 6 742 18 186 92 189 2 746 60 190 2 191 20 749 6 750 6 752 4 753 6 754 6 195 12 196 6 755 4 758 198 198 2 201 2 761 2 762 2 763 26 208 2 206 30 764 566 765 2 766 2 768 4 210 2 212 2 211 26 213 6 214 336 215 4 776 4 218 28 219 20 778 4 779 2 780 2 222 2 781 6 782 2 224 2 784 6 785 2 225 6 788 2 226 6 790 52 228 6 795 4 229 2 797 2 799 2 801 2 802 20 231 14 233 2 232 2 234 6 807 2 806 2 235 26 809 8 238 6 237 8 239 6 815 2 816 2 817 4 241 12 244 26 242 2 820 182 824 6 250 2 251 2 829 4 832 10 831 6 836 4 837 6 259 2 261 2 840 198 841 6 844 2 846 6 845 4 266 224 847 2 267 4 269 4 849 2 272 4 851 2 273 46 853 2 276 432 274 2 277 4 280 22 281 4 283 4 858 6 860 2 861 2 287 26 864 8 288 112 866 2 289 2 867 2 868 82 290 2 291 30 869 2 292 2 870 4 294 6 295 12 874 2 296 22 306 2 307 6 308 2 310 18 309 2 880 12 879 2 882 2 885 4 887 244 889 6 888 8 890 6 314 2 317 6 892 112 318 6 894 2 322 28 324 290 895 10 327 2 328 8 898 16 899 8 331 2 341 30 906 70 909 6 344 2 911 4 912 4 346 4 347 4 349 30 919 2 920 6 921 4 353 2 354 2 355 2 924 30 925 2 360 2 926 26 361 26 927 2 362 4 364 198 363 22 933 8 366 6 934 6 368 66 935 2 936 2 370 182 937 386 375 30 376 6 377 4 379 98 380 2 381 4 941 6 942 106 384 2 385 2 944 2 945 2 387 64 953 2 954 4 393 2 955 2 956 2 958 12 959 4 962 8 961 16 395 2 965 2 964 6 966 2 397 2 396 26 967 6 398 14 969 10 402 12 971 2 407 8 409 2 410 2 973 2 413 2 975 6 415 4 421 2 978 2 425 30 982 4 980 106 983 4 426 2 986 4 428 2 433 192 989 2 991 2 992 2 435 244 438 8 437 328 996 2 440 132 997 2 442 12 441 2 444 46 445 2 446 2 999 2 449 4 1001 12 450 2 451 118 1005 46 1008 4 1010 2 1011 2 459 2 1017 4 460 46 1019 2 461 4 462 14 1023 2 464 2 466 2 1024 2 465 6 468 48 469 68 470 4 473 4 476 46 477 54 1030 2 1032 204 478 6 1037 2 1040 2 1043 6 1044 2 482 2 485 4 486 6 1052 2 1054 14 1056 26 1058 2 491 4 492 8 1064 4 1069 6 1071 160 1072 2 497 2 1076 4 1075 4 500 2 501 8 1079 2 1081 204 1082 14 502 6 1084 4 508 6 1086 2 1087 2 1088 20 1090 6 1092 2 513 2 515 6 518 10 519 376 520 4 521 2 522 2 1102 10 523 6 528 2 534 28 535 2 538 2 1109 84 540 12 1110 140 1113 2 1115 2 1116 24 1117 32 1118 20 1121 228 543 4 1123 6 1124 6 546 2 1130 2 553 2 1133 2 557 4 559 8 560 2 561 4 562 10 563 4 566 4 567 2 1139 8 1138 24 1140 26 571 198 1142 2 1145 2 572 2 1146 4 575 112 1147 4 1149 2 1151 2 
917 2 550 2 474 2 685 1 
514 2 917 2 
643 2 917 2 96 2 532 2 443 2 838 2 555 2 
917 2 96 2 573 2 
94 2 917 2 96 2 
963 2 550 2 490 2 
917 2 96 2 
963 2 192 2 
917 2 878 2 
963 2 995 2 550 2 
550 2 481 2 923 2 
904 2 699 2 550 2 
1080 2 550 2 748 2 
550 2 637 2 547 2 
963 2 584 2 
39 2 917 2 
481 2 275 2 
904 2 333 2 
1080 2 1034 2 
124 2 547 2 
963 2 577 2 
262 2 547 2 
556 2 1080 2 
904 2 673 2 
481 2 796 2 
963 2 995 2 550 2 455 2 
963 2 995 2 321 2 550 2 455 2 
963 2 550 2 544 2 
963 2 550 2 64 2 
417 2 772 2 883 2 1061 2 
643 2 532 2 775 2 80 2 
643 2 1041 2 532 2 775 2 555 2 80 2 
507 2 643 2 917 2 96 2 532 2 443 2 
813 2 1091 2 
643 2 157 2 532 2 610 2 
970 2 1080 2 
1114 2 547 2 
856 2 481 2 
904 2 1049 2 
904 2 547 2 641 2 
904 2 547 2 92 2 
904 2 1137 2 547 2 
904 2 506 2 547 2 
643 2 645 6 1125 2 343 2 392 2 532 2 710 6 357 2 
963 2 1068 2 
0 2 
550 2 587 2 
14 2 
1003 2 727 2 728 2 881 2 458 6 884 2 11 8 1015 2 591 2 886 2 738 2 594 2 187 2 1029 2 319 2 479 2 895 26 200 4 1042 2 1045 2 205 6 484 4 48 2 342 2 54 2 217 6 489 2 1060 4 620 8 915 2 59 2 350 4 783 2 918 2 624 4 351 4 786 2 496 2 787 4 1074 2 499 2 498 2 792 2 72 4 510 2 650 2 85 2 1094 2 378 2 665 2 524 2 390 2 391 2 529 6 98 2 537 2 1112 2 681 2 839 2 400 2 968 2 114 2 265 2 545 2 126 2 270 2 1126 2 551 2 562 26 427 2 152 2 1141 4 155 2 865 4 159 2 447 2 
1004 2 1003 2 727 2 728 2 881 2 458 6 884 2 11 8 886 2 738 2 187 2 23 2 1029 2 319 2 479 2 895 26 326 2 200 4 1042 2 1045 2 205 6 484 4 48 2 342 2 54 2 217 6 489 2 1060 4 620 8 915 2 59 2 350 2 783 2 918 2 624 4 1067 2 351 4 786 2 496 2 787 4 1074 2 499 2 498 2 792 2 72 4 510 2 650 2 85 2 1094 2 378 2 818 2 665 2 1103 2 524 2 390 2 391 2 529 6 98 2 537 2 1112 2 681 2 400 2 839 2 968 2 114 2 265 2 545 2 126 2 270 2 1126 2 551 2 562 26 427 2 152 2 1141 4 155 2 865 6 159 2 447 2 
852 2 
804 2 684 2 
984 2 760 2 1026 2 247 2 207 2 902 2 533 4 284 2 631 2 68 2 988 2 905 2 994 2 659 4 480 2 703 2 13 4 329 2 670 2 167 2 
760 2 207 2 902 2 905 2 659 4 703 2 13 4 670 2 984 2 247 2 1026 2 22 2 533 4 284 2 432 2 68 2 631 2 988 2 994 2 480 2 329 2 167 2 
994 2 905 2 984 2 703 2 284 2 329 2 631 2 68 2 167 2 
994 2 905 2 984 2 703 2 284 2 329 2 631 2 68 2 167 2 
984 2 760 2 1026 2 247 2 207 2 902 2 533 4 284 2 631 2 68 2 988 2 905 2 994 2 659 4 480 2 703 2 13 4 329 2 670 2 167 2 
984 2 760 2 1026 2 247 2 207 2 902 2 533 4 284 2 631 2 68 2 988 2 905 2 994 2 659 4 480 2 703 2 13 4 329 2 670 2 167 2 
984 2 760 2 1026 2 247 2 207 2 902 2 533 4 284 2 631 2 68 2 988 2 905 2 994 2 659 4 480 2 703 2 13 4 329 2 670 2 167 2 
984 2 760 2 1026 2 247 2 207 2 902 2 533 4 284 2 631 2 68 2 988 2 905 2 994 2 659 4 480 2 703 2 13 4 329 2 670 2 167 2 
984 2 760 2 855 2 207 2 247 2 1026 2 902 2 284 2 631 2 68 2 988 2 905 2 994 2 480 2 703 2 13 2 329 2 670 2 167 2 
984 2 760 2 855 2 207 2 247 2 1026 2 902 2 284 2 631 2 68 2 988 2 905 2 994 2 480 2 703 2 13 2 329 2 670 2 167 2 
984 2 760 2 855 2 207 2 247 2 1026 2 902 2 284 2 631 2 68 2 988 2 905 2 994 2 480 2 703 2 13 2 329 2 670 2 167 2 
984 2 760 2 855 2 207 2 247 2 1026 2 902 2 284 2 631 2 68 2 988 2 905 2 994 2 480 2 703 2 13 2 329 2 670 2 167 2 
984 2 760 2 207 2 247 2 1026 2 902 2 284 2 631 2 68 2 988 2 905 2 994 2 480 2 703 2 13 2 329 2 670 2 167 2 
293 2 1004 2 732 2 458 8 884 2 14 2 886 2 738 2 13 2 187 2 1026 2 23 2 1029 2 480 2 479 3 895 24 329 2 200 4 1045 4 760 2 205 6 207 2 902 2 484 3 905 2 48 2 54 2 619 2 217 6 915 2 59 2 624 4 351 4 631 2 68 2 787 4 498 2 227 3 72 4 74 2 510 2 650 3 659 2 1098 2 665 2 670 2 390 2 529 6 246 2 247 2 98 2 828 2 255 2 1112 2 681 2 400 2 839 2 968 2 114 2 403 2 545 2 693 2 270 2 1126 2 703 2 984 2 562 24 284 2 988 2 152 2 993 2 994 2 155 2 865 6 167 2 
1053 2 902 2 666 2 
1053 2 902 2 666 2 
1004 2 298 2 735 2 458 2 884 2 11 4 1016 12 886 2 738 2 13 6 1020 4 467 2 187 2 21 4 23 2 471 2 1029 2 895 16 603 2 897 2 200 4 330 4 1045 4 205 2 902 4 484 2 44 4 487 4 46 2 48 2 342 4 1053 2 908 4 616 2 619 2 54 2 217 2 620 4 1062 2 915 2 916 2 350 2 351 4 786 4 787 4 68 2 631 2 630 2 498 2 792 4 72 4 929 2 230 2 510 2 805 4 512 2 659 6 382 2 1097 2 943 2 665 2 1099 2 666 6 671 2 949 16 390 6 823 2 529 6 1106 2 98 2 675 4 533 4 536 4 678 2 827 4 680 12 1112 2 681 2 107 2 400 2 839 2 968 2 114 2 404 4 265 4 545 2 411 2 270 2 976 2 1126 2 132 2 703 2 551 4 704 2 136 2 562 24 565 4 284 2 152 2 994 4 863 2 155 2 865 6 574 2 998 2 1150 2 
114 2 1045 2 117 2 823 2 562 4 411 2 512 2 102 2 338 2 976 2 863 2 53 2 939 2 895 2 619 2 684 2 388 2 
1004 2 735 2 458 2 884 2 11 4 1016 12 886 2 738 2 13 6 1020 4 467 2 187 2 21 4 23 2 1029 2 895 16 603 4 200 4 330 4 1045 2 205 2 902 4 484 4 44 4 487 4 46 2 48 2 342 4 1053 2 908 4 616 2 54 2 217 2 620 4 1062 2 915 2 916 2 62 2 1065 2 493 2 351 4 786 4 787 4 68 2 631 2 630 2 498 2 792 4 72 4 929 2 230 2 510 2 805 4 512 2 659 6 382 2 1097 2 943 2 665 2 666 6 671 4 949 16 390 6 823 2 529 6 1106 2 98 2 675 4 533 4 536 4 678 2 827 4 680 12 1112 2 681 2 107 2 400 2 839 2 968 2 114 2 404 4 265 4 545 2 270 2 976 2 1126 2 132 2 420 2 703 2 551 4 704 2 136 2 985 2 562 24 565 2 284 2 152 2 994 4 863 2 155 2 865 6 998 2 1150 2 578 2 
1004 2 735 2 458 2 884 2 11 4 1016 12 886 2 738 2 13 6 1020 4 467 2 187 2 21 4 23 2 1029 2 895 16 603 4 897 2 200 4 330 4 1045 4 205 2 41 2 902 4 484 2 44 4 487 4 46 2 48 2 342 4 1053 2 908 4 616 2 619 2 54 2 217 2 620 4 914 2 57 2 1062 2 915 2 916 2 350 1 493 2 351 4 786 4 787 4 68 2 631 2 630 2 498 2 792 4 72 4 929 2 230 2 510 2 805 4 512 2 659 6 382 2 1097 2 943 2 665 2 666 6 243 2 671 2 949 16 390 6 823 2 529 6 1106 2 98 2 675 4 533 4 536 4 678 2 827 4 680 12 1112 2 681 2 107 2 400 2 839 2 968 2 112 2 114 2 404 4 265 4 545 2 411 2 270 2 976 2 1126 2 132 2 703 2 551 4 704 2 136 2 562 24 565 4 284 2 152 2 994 4 863 2 155 2 865 6 998 2 1150 2 
656 2 548 2 770 2 405 2 576 2 552 2 596 2 1021 2 286 2 
263 2 205 2 4 1 650 3 332 2 511 2 484 3 412 2 658 2 458 2 217 2 386 2 59 2 144 3 562 2 624 2 1070 2 479 3 895 2 757 2 
59 2 263 2 144 2 562 2 205 2 624 2 332 2 650 2 484 2 511 2 1070 2 412 2 658 2 458 2 479 2 895 2 217 2 757 2 386 2 
59 2 263 2 144 2 562 2 205 2 624 2 332 2 650 2 484 2 511 2 1070 2 412 2 658 2 458 2 479 2 895 2 217 2 757 2 386 2 
263 2 650 3 172 2 690 2 174 2 484 3 1009 4 654 2 336 6 1050 2 903 2 850 2 129 2 907 2 771 3 702 2 458 2 773 2 422 2 345 4 220 2 822 2 948 2 1063 2 59 2 558 3 562 6 530 2 282 4 857 2 751 2 1031 2 1111 2 895 2 756 2 36 3 258 2 1152 2 1038 2 
263 2 650 2 172 2 690 2 174 2 484 2 1009 4 654 2 336 4 1050 2 903 2 850 2 129 2 907 2 771 2 702 2 458 2 773 2 422 2 345 4 220 2 822 2 948 2 1063 2 59 2 558 2 854 2 562 6 530 2 282 4 472 2 193 2 857 2 751 2 1031 2 1111 2 895 2 756 2 36 2 258 2 1152 2 1038 2 
263 2 650 2 172 2 690 2 174 2 484 2 1009 4 654 2 336 4 1050 2 903 2 850 2 129 2 907 2 771 2 702 2 458 2 773 2 422 2 345 4 220 2 822 2 948 2 1063 2 59 2 558 2 854 2 562 6 530 2 282 4 472 2 193 2 857 2 751 2 1031 2 1111 2 895 2 756 2 36 2 258 2 1152 2 1038 2 
263 2 650 2 172 2 690 2 174 2 484 2 1009 4 654 2 336 4 1050 2 903 2 850 2 129 2 907 2 771 2 702 2 458 2 773 2 422 2 345 4 220 2 822 2 948 2 1063 2 59 2 558 2 854 2 562 6 530 2 282 4 472 2 193 2 857 2 751 2 1031 2 1111 2 895 2 756 2 36 2 258 2 1152 2 1038 2 
263 2 650 2 172 2 690 2 174 2 484 2 1009 4 654 2 336 4 1050 2 903 2 850 2 129 2 907 2 771 2 702 2 458 2 773 2 422 2 345 4 220 2 822 2 948 2 1063 2 59 2 558 2 854 4 562 6 530 2 282 4 472 4 193 4 857 2 751 2 1031 2 1111 2 895 2 756 2 36 2 258 2 1152 2 1038 2 
1047 2 952 2 652 2 151 2 946 2 448 2 
952 2 159 2 297 2 42 2 668 2 199 2 1108 2 
1039 2 116 2 647 2 843 1 300 2 374 2 416 2 457 2 549 1 516 2 183 2 739 2 740 1 562 10 625 1 957 2 568 2 434 2 569 2 34 2 895 8 794 2 399 1 503 2 839 2 505 2 
367 2 877 2 336 16 903 2 695 2 129 6 907 6 1012 2 702 6 345 12 220 6 1022 2 744 4 854 2 562 6 526 2 429 2 282 4 472 2 676 2 857 6 193 3 1031 6 1111 6 833 2 895 6 835 4 504 2 79 2 1000 2 
948 2 741 2 621 2 562 1 431 2 960 2 1050 2 29 2 1077 2 751 2 47 2 793 7 895 1 240 2 106 1 1148 2 777 2 93 4 
948 2 741 2 621 2 431 2 960 4 1050 2 29 2 1077 2 751 2 47 2 793 6 240 4 1148 4 777 2 93 4 
948 2 741 6 621 2 562 1 431 2 960 8 1050 2 29 2 1077 2 751 2 47 2 793 10 895 1 240 8 106 1 1148 8 777 8 93 4 
948 2 621 2 431 2 960 2 1050 2 29 2 1077 2 751 2 47 2 793 2 240 2 1148 2 93 2 
1004 4 2 2 873 2 304 2 16 4 313 2 188 1 23 4 1033 2 895 26 200 10 335 2 767 1 48 6 1055 2 620 4 351 8 1073 2 498 6 789 1 359 2 640 4 798 1 1085 2 644 2 371 2 373 2 517 2 661 2 383 2 819 2 821 2 394 2 830 1 256 2 105 2 400 4 1120 2 842 2 974 2 554 2 135 2 1131 4 1134 1 562 28 279 2 987 2 990 2 154 4 1144 2 715 2 865 16 
200 4 873 2 373 2 335 2 43 2 808 2 303 2 304 2 48 2 1055 2 660 2 620 6 1018 2 348 2 821 2 350 2 562 12 825 2 351 4 990 2 498 2 358 2 256 2 865 6 895 12 105 2 541 2 640 2 400 2 
644 2 1004 5 1089 2 729 2 873 2 371 2 373 2 1007 2 808 2 303 2 176 4 304 2 661 2 383 2 819 2 16 2 389 4 821 2 743 2 745 2 23 5 394 2 249 2 26 2 31 2 256 2 895 32 105 2 541 2 400 2 200 12 1120 2 842 2 900 2 335 2 611 2 974 2 48 4 340 2 1055 2 1059 2 774 2 554 4 620 14 135 2 1131 6 348 2 705 2 562 34 279 2 987 2 351 10 498 4 789 2 154 6 570 2 1144 2 715 2 865 23 640 6 719 4 720 2 1085 2 
200 4 350 2 1004 4 842 2 562 12 873 2 23 4 351 4 299 2 335 2 303 2 304 2 498 2 48 2 1055 2 256 2 865 10 895 12 105 2 620 4 400 2 821 2 
452 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (505,640) (505,640) 
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException 239 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 378 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (505,640) (505,640) (55,159,280,442,447) (55,159,280,442,447) (55,159,280,442,447) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 363 325 234 348 379 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.IllegalArgumentException (57,367) (57,367) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (505,640) (505,640) 554 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (505,640) (505,640) 554 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 612 (553,606) (133,591) (133,591) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 612 (553,606) (133,591) (133,591) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 612 (553,606) (133,591) (133,591) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 612 (553,606) (133,591) (133,591) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 612 (553,606) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 612 (553,606) (553,606) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 612 (553,606) 
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (505,640) (505,640) 554 227 299 521 76 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 395 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.Error 631 73 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.Error 631 73 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.Error 631 73 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.Error 631 73 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.ArrayIndexOutOfBoundsException 595 123 618 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 595 123 618 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 595 123 618 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 595 123 618 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:memberOf(J[J)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarComparabilityImplicit:toString()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.ValueTuple:isMissing(I)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.RootNode:RootNode()V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey; | RETURN | 6660 | return null
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptName:isCombinedExitPoint()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:eq(FF)Z
daikon.VarInfo:new_ppt()V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexEqual([I[I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.ModBitTracker:num_sets()I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.ArraysMDE:min_max([I)[I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.Node:Node()V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:lexLT([I[I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:element_range([I)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.PptSlice2:arity()I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2461 | return null
utilMDE.MathMDE:pow(II)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoAux:hashCode()I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | OPERATOR | 127014 | + -> /
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.ProglangType:isArray()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.ValueTuple:size()I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | ASSIGN | 60402 | = null
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:eltsGTE([II)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaCharStream:FillBuff()V
daikon.Quant:memberOf(F[D)Z
daikon.Quant:subsetOf([I[I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:ne(II)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:gt(II)Z
daikon.VarInfo:relate_var()V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern:internSubsequence([III)[I | RETURN | 22902 | return null
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:setEqual([I[I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:justified()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:isFloat()Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:eq(JJ)Z
jtb.JavaCharStream:readChar()C | OPERATOR | 5855 | == -> <=
utilMDE.MathMDE:gcd(JJ)J
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([J[J)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.Invariants:Invariants()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:eltsEqual([II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:union([I[I)[I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:slice([III)[I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:memberOf(I[I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.WeakHasherMap.EntrySet:size()I | STATEMENT | 15721 | stmt -> ;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONDITION | 50578 | if (x) -> if (!x)
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | CONDITION | 281963 | if (x) -> if (!x)
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.ArraysMDE:sorted([I)Z | CONSTANT | 53880 | 0 -> -1
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:memberOf(F[F)Z
daikon.Quant:memberOf(D[F)Z
utilMDE.ArraysMDE:sum([I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:concat([I[I)[I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ModBitTracker:num_vars()I
utilMDE.WeakHasherMap:size()I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 54234 | = null
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:eltwiseLT([I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.MathMDE:gcd([I)I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:subsetOf([D[F)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Ppt:Ppt()V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.PptSlice0:arity()I
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.ProglangType:baseIsScalar()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual; | CONDITION | 1462 | if (x) -> if (!x)
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.Debug:logOn()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:eltsLTE([II)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.ProglangType:dimensions()I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isScalar()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eq(II)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 9684 | = null
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaCharStream:ReadByte()C
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:eltwiseLTE([I)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:eltsLT([II)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | RETURN | 21417 | return null
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:lt(II)Z
utilMDE.ArraysMDE:min([I)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.MathMDE:negate(I)I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.MathMDE:gcd(II)I
daikon.ProglangType:baseIsFloat()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvMap:InvMap()V
daikon.inv.Invariant:getConfidence()D
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z | CONDITION | 4097 | if (x) -> if (!x)
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.PptSlice1:arity()I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:eq(DD)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
68 4 484 2 640 2 51 2 177 2 505 2 278 2 196 2 3 2 
148 6 329 2 603 2 510 2 30 6 397 2 548 2 40 2 120 2 215 2 131 6 
640 2 176 2 342 6 113 2 505 2 47 4 375 2 517 4 179 2 377 6 86 6 369 6 107 2 
81 8 35 8 640 4 260 2 568 2 505 4 269 2 37 8 506 2 387 8 237 6 4 2 656 9 63 2 103 8 223 2 371 2 119 2 23 8 138 8 32 6 207 6 493 8 56 8 
239 2 
65 2 
470 2 338 2 212 2 410 2 268 2 38 2 158 2 3 2 593 2 378 2 79 2 456 2 102 2 358 2 128 4 598 2 637 2 11 2 382 2 435 2 530 2 
505 4 125 2 656 5 103 4 253 2 56 4 493 4 81 4 35 4 640 4 188 4 37 4 387 4 667 8 23 2 138 4 587 4 
470 2 639 2 204 2 
36 2 483 2 96 10 75 2 16 2 202 2 230 2 608 2 265 2 151 2 350 2 137 2 491 22 661 2 
237 2 656 4 103 2 359 2 152 2 32 2 383 2 493 2 56 2 337 2 81 2 35 2 37 2 557 2 423 2 306 2 22 2 138 2 71 2 
81 8 35 8 320 2 291 4 37 8 506 2 387 4 101 4 656 10 581 4 103 8 349 4 138 8 33 2 493 8 56 8 
288 4 481 2 198 2 74 4 124 4 44 2 594 4 654 2 204 6 102 2 128 4 401 4 29 2 380 2 13 62 208 2 340 4 470 8 662 14 210 2 639 2 624 4 362 4 419 4 403 2 602 2 134 2 277 10 158 4 641 2 556 2 85 4 405 4 443 2 21 2 459 2 645 2 90 2 197 2 609 10 
623 2 647 2 372 2 310 2 385 2 573 2 65 2 66 2 149 2 494 2 
500 1 0 1 199 2 312 2 98 2 505 22 314 1 203 2 100 2 5 2 398 1 399 6 49 2 507 1 6 1 467 6 205 3 434 2 59 1 516 2 640 24 278 2 438 4 114 1 159 2 280 2 644 4 20 1 442 2 370 2 563 2 406 2 479 2 520 2 287 2 286 1 324 4 170 5 289 2 412 2 448 2 376 2 487 2 416 1 296 2 525 2 223 1 526 5 451 2 527 1 620 2 254 5 577 4 495 2 386 2 259 2 664 2 228 2 84 1 347 1 539 2 195 1 307 4 91 1 351 2 629 2 
141 2 640 2 
640 4 290 2 12 2 
660 2 
325 2 234 2 533 2 411 2 363 2 157 2 279 2 303 4 164 2 247 2 379 2 498 2 564 2 348 2 52 2 24 2 461 2 58 4 
545 1 528 2 634 2 116 2 
566 2 528 2 
470 2 353 2 119 2 193 2 604 2 528 2 139 2 
353 2 273 2 528 2 
353 2 528 2 249 2 
559 2 252 2 634 2 
353 2 528 2 
339 2 252 2 
174 2 528 2 
252 2 381 2 634 2 
243 2 449 2 634 2 
258 2 232 2 634 2 
94 2 634 2 642 2 
592 2 634 2 78 2 
252 2 135 2 
528 2 646 2 
449 2 454 2 
258 2 569 2 
94 2 140 2 
592 2 429 2 
252 2 224 2 
309 2 592 2 
94 2 256 2 
258 2 246 2 
449 2 27 2 
252 2 381 2 106 2 634 2 
252 2 213 2 381 2 106 2 634 2 
252 2 666 2 634 2 
252 2 634 2 652 2 
132 2 356 2 402 2 240 2 
470 2 413 2 407 2 139 2 
470 2 413 2 407 2 344 2 604 2 139 2 
470 2 353 2 311 2 119 2 528 2 139 2 
457 2 41 2 
470 2 346 2 119 2 139 2 
94 2 221 2 
592 2 242 2 
583 2 449 2 
519 2 258 2 
258 2 592 2 153 2 
436 2 258 2 592 2 
284 2 258 2 592 2 
341 2 258 2 592 2 
57 2 470 2 190 6 643 2 367 2 580 2 518 2 139 2 
211 2 252 2 
97 2 343 2 302 2 315 4 39 2 655 4 475 2 536 2 465 2 430 2 8 2 248 2 165 2 512 2 408 2 491 6 409 2 352 2 
634 2 611 2 
296 2 
199 6 312 2 98 2 505 16 5 2 100 2 399 4 49 2 104 2 467 6 434 2 209 2 156 2 516 2 640 16 554 2 278 2 438 4 644 4 563 2 406 6 479 2 520 2 324 4 649 2 412 2 448 2 572 2 487 2 183 2 525 6 223 2 451 2 527 2 577 4 495 2 386 2 259 2 535 4 421 2 664 2 539 2 351 2 629 2 
199 6 312 2 98 2 505 16 5 2 100 2 399 6 49 2 104 2 467 6 434 2 209 2 156 2 516 2 640 16 554 2 278 2 438 4 644 4 563 2 406 6 479 2 520 2 324 4 289 2 649 2 412 2 448 2 572 2 487 2 183 2 525 6 223 2 451 2 527 2 620 2 577 4 495 2 386 2 259 2 535 4 421 2 664 2 539 2 351 2 629 2 
144 2 
466 2 529 2 
354 10 503 8 590 2 632 2 591 2 313 4 544 2 505 6 48 2 548 4 397 2 100 2 145 2 146 2 148 6 467 4 272 2 316 2 433 2 360 2 241 4 515 8 110 2 276 2 640 12 555 2 438 2 606 2 479 2 250 2 120 2 72 4 612 2 324 2 121 4 172 2 175 2 615 2 487 2 127 2 658 2 129 2 130 2 451 2 489 2 575 4 30 6 31 2 131 6 531 2 225 2 495 2 133 2 664 2 40 4 87 2 628 2 425 2 136 4 629 2 
354 10 503 8 590 2 632 2 591 2 313 4 544 2 505 6 143 2 48 2 548 4 397 2 100 2 145 2 146 2 148 8 467 4 272 2 316 2 433 2 510 2 360 2 241 4 515 8 110 2 276 2 640 12 438 2 60 4 555 2 606 2 479 2 565 2 250 2 120 2 72 4 612 2 324 2 121 4 172 2 175 2 615 2 487 2 127 2 658 2 129 2 130 2 451 2 489 2 575 4 30 6 31 2 131 8 225 2 495 2 133 2 664 2 40 4 628 2 425 2 136 4 629 2 
172 2 175 2 591 2 133 2 615 2 548 2 40 2 148 2 658 2 606 2 316 2 628 2 575 2 30 2 31 2 136 4 250 2 72 4 
354 6 503 4 590 2 632 2 591 2 313 4 544 2 505 6 48 2 548 4 100 2 145 2 146 2 148 6 467 4 272 2 316 2 433 2 510 2 360 2 241 4 515 4 110 2 276 2 640 12 555 2 438 2 606 2 479 2 250 2 120 2 72 4 612 2 324 2 121 4 172 2 175 2 615 2 487 2 127 2 658 2 129 2 130 2 451 2 489 2 575 4 30 4 31 2 131 6 531 2 225 2 495 2 133 2 664 2 40 4 87 2 628 2 425 2 136 4 629 2 
354 6 503 4 590 2 632 2 591 2 313 4 544 2 505 6 48 2 548 4 100 2 145 2 146 2 148 4 467 4 272 2 316 2 433 2 360 2 241 4 515 4 110 2 276 2 640 12 555 2 438 2 215 2 606 2 479 2 250 2 120 2 72 4 612 2 324 2 121 4 172 2 175 2 615 2 487 2 127 2 658 2 129 2 130 2 451 2 489 2 575 4 30 6 31 2 131 6 531 2 225 2 495 2 133 2 664 2 40 4 87 2 628 2 425 2 136 4 629 2 
354 6 503 4 590 2 632 2 591 2 313 4 544 2 505 6 48 2 548 4 397 2 100 2 145 2 146 2 148 6 467 4 272 2 316 2 433 2 360 2 241 4 515 8 110 2 276 2 640 12 555 2 438 2 606 2 479 2 250 2 120 2 72 4 612 2 324 2 121 4 172 2 175 2 615 2 487 2 127 2 658 2 129 2 130 2 451 2 489 2 575 4 30 6 31 2 131 6 531 2 225 2 495 2 133 2 664 2 40 4 87 2 628 2 425 2 136 4 629 2 
354 10 503 8 590 2 632 2 591 2 313 4 544 2 505 6 48 2 548 4 397 2 100 2 145 2 146 2 148 6 467 4 272 2 316 2 433 2 360 2 241 4 515 8 110 2 276 2 640 12 555 2 438 2 215 2 606 2 479 2 250 2 120 2 72 4 612 2 324 2 121 4 172 2 175 2 615 2 487 2 127 2 658 2 129 2 130 2 451 2 489 2 575 4 30 8 31 2 131 8 531 2 225 2 495 2 133 2 664 2 40 4 87 2 628 2 425 2 136 4 629 2 
354 10 503 8 590 2 632 2 591 2 313 4 544 2 505 6 48 2 548 4 397 2 100 2 145 2 146 2 148 6 467 4 272 2 316 2 433 2 360 2 241 4 515 8 110 2 276 2 640 12 555 2 438 2 606 2 479 2 250 2 120 2 72 4 612 2 324 2 121 4 172 2 175 2 615 2 487 2 127 2 658 2 129 2 130 2 451 2 489 2 575 4 30 6 31 2 131 6 531 2 225 2 495 2 133 2 664 2 40 4 87 2 628 2 425 2 136 4 629 2 
612 2 632 2 591 2 313 2 615 2 48 2 548 2 145 2 146 2 148 2 127 2 129 2 316 2 130 2 489 2 490 2 30 4 241 2 105 2 31 2 452 2 131 4 515 2 531 2 110 2 276 2 319 2 189 2 640 4 133 2 40 2 215 2 606 2 628 2 136 2 120 2 72 2 
612 2 632 2 591 2 313 2 615 2 48 2 397 2 548 2 145 2 146 2 148 4 127 2 129 2 316 2 130 2 489 2 490 2 30 4 241 2 105 2 31 2 452 2 131 4 515 6 531 2 110 2 276 2 319 2 189 2 640 4 133 2 40 2 606 2 628 2 136 2 120 2 72 2 
612 2 503 4 354 4 632 2 591 2 313 2 615 2 48 2 397 2 548 2 145 2 146 2 148 4 127 2 129 2 316 2 130 2 489 2 490 2 30 4 241 2 105 2 31 2 452 2 131 4 515 6 531 2 110 2 276 2 319 2 189 2 640 4 133 2 40 2 606 2 628 2 136 2 120 2 72 2 
612 2 503 4 354 4 632 2 591 2 313 2 615 2 48 2 397 2 548 2 145 2 146 2 148 4 127 2 129 2 316 2 130 2 489 2 490 2 30 4 241 2 105 2 31 2 452 2 131 4 515 6 531 2 110 2 276 2 319 2 189 2 640 4 133 2 40 2 606 2 628 2 136 2 120 2 72 2 
612 2 503 4 354 4 121 2 632 2 591 2 313 2 615 2 48 2 397 2 548 4 145 2 146 2 148 6 127 2 129 2 316 2 130 2 489 2 30 6 241 2 31 2 131 4 515 6 531 2 110 2 276 2 640 4 133 2 40 4 606 2 628 2 136 2 120 2 72 2 
354 2 199 6 200 2 591 2 98 2 505 24 5 2 100 2 434 2 515 6 110 2 276 2 516 4 438 4 278 2 606 2 607 2 117 3 520 2 120 2 447 2 612 2 121 2 289 2 448 2 615 2 127 2 296 2 525 6 129 2 130 2 451 2 526 3 30 6 620 2 31 2 131 4 531 2 386 2 133 2 535 4 40 4 539 2 628 2 136 2 629 2 632 2 312 2 313 2 48 2 397 2 548 4 145 2 146 2 399 6 49 2 147 2 148 6 467 6 316 2 241 2 55 2 156 2 640 28 555 2 554 2 644 4 563 2 406 8 479 2 167 2 72 2 324 4 170 3 412 2 649 2 487 2 489 2 335 2 254 3 577 4 495 2 259 2 664 2 421 2 261 2 194 2 424 2 351 2 
276 2 146 2 154 2 
276 2 146 2 154 2 
354 2 503 2 199 2 98 2 426 2 505 14 270 2 100 2 5 2 511 2 105 2 434 2 515 6 276 2 516 2 601 2 438 4 278 2 368 2 606 2 520 2 120 2 612 2 289 2 448 2 615 2 525 2 451 2 30 4 620 2 452 2 131 4 386 2 40 2 305 2 539 2 628 2 541 2 136 2 629 2 312 2 313 2 548 2 397 2 399 6 146 2 49 2 148 4 467 6 241 2 319 2 156 2 640 18 644 4 563 2 406 2 479 2 72 2 324 4 412 2 649 2 487 2 489 2 254 2 577 4 495 2 82 2 189 2 259 2 664 2 421 2 351 2 
516 2 640 4 394 2 355 2 505 2 99 2 616 2 323 2 389 2 281 2 658 2 636 2 479 2 167 2 529 2 266 2 25 2 
354 2 503 2 199 2 98 2 426 2 505 14 270 2 100 2 5 2 511 2 105 2 434 2 515 6 276 2 516 2 601 2 438 4 278 2 368 2 606 2 520 2 120 2 612 2 289 2 448 2 615 2 525 2 451 2 30 4 620 2 452 2 131 4 625 2 386 2 40 2 305 4 539 2 628 2 541 2 136 2 629 2 312 2 313 2 548 2 397 2 146 2 399 6 49 2 148 4 467 6 241 2 553 2 319 2 156 2 640 18 644 4 563 2 406 2 479 2 72 2 324 4 412 2 649 2 487 2 489 2 254 4 577 4 495 2 82 2 189 2 259 2 664 2 421 2 351 2 
354 2 503 2 199 2 98 2 426 2 505 14 270 2 100 2 5 2 511 2 105 2 434 2 515 6 276 2 516 2 601 2 438 4 278 2 368 2 606 2 520 2 120 2 612 2 289 2 448 2 615 2 525 2 451 2 30 4 620 2 452 2 131 4 386 2 40 2 305 2 539 2 628 2 541 2 136 2 629 2 312 2 313 2 548 2 397 2 399 6 146 2 49 2 148 4 467 6 241 2 319 2 156 2 640 18 644 4 563 2 406 2 479 2 72 2 324 4 412 2 649 2 487 2 489 2 254 2 577 4 495 2 82 2 189 2 259 2 664 2 421 2 351 2 
93 6 499 2 588 2 95 2 199 12 200 2 98 2 504 6 505 22 201 4 5 2 100 2 101 4 271 2 103 4 431 10 104 2 432 2 597 2 599 2 509 2 9 4 108 24 513 6 361 2 209 2 275 2 437 2 516 2 15 2 438 4 278 2 18 2 605 2 19 4 283 10 219 2 285 2 117 2 520 2 446 2 23 4 610 4 521 2 522 2 289 2 292 4 448 2 124 2 450 2 293 2 524 2 295 4 619 2 525 12 451 2 526 6 223 2 527 2 620 2 297 2 384 2 35 4 299 2 300 2 226 2 227 2 37 4 535 10 387 4 626 6 304 2 388 2 539 2 460 2 138 4 629 2 392 2 142 18 43 2 463 2 396 2 45 2 238 10 399 4 147 2 49 2 50 8 550 4 400 2 467 6 401 2 150 2 56 4 318 4 471 2 244 2 640 28 554 2 163 2 558 2 644 2 562 2 563 2 406 18 479 2 324 4 480 2 170 6 74 2 171 6 412 2 649 2 650 2 414 2 77 2 76 2 570 2 251 2 653 18 571 2 331 1 656 6 80 6 572 2 487 2 183 2 417 6 659 4 574 4 254 6 577 2 492 6 493 4 340 2 81 4 495 2 496 2 663 4 189 22 420 4 259 2 191 6 664 2 421 2 261 2 85 2 194 2 262 2 581 4 582 2 584 2 92 2 267 10 
26 2 170 3 199 2 173 2 505 2 182 3 431 6 525 2 526 3 254 3 336 2 274 2 186 2 640 2 535 2 554 2 61 2 162 4 537 2 561 2 406 2 69 2 166 2 70 2 
26 2 170 2 199 2 173 2 505 2 182 2 431 6 525 2 526 2 254 2 336 2 274 2 186 2 640 2 535 2 554 2 61 2 162 4 537 2 561 2 406 2 69 2 166 2 70 2 
26 2 170 2 199 2 173 2 505 2 182 2 431 6 525 2 526 2 254 2 336 2 274 2 186 2 640 2 535 2 554 2 61 2 162 4 537 2 561 2 406 2 69 2 166 2 70 2 
170 3 482 2 523 4 485 2 633 2 178 3 505 4 546 2 428 3 180 2 656 3 181 4 635 2 103 2 334 2 254 3 493 2 56 2 257 2 622 2 274 2 81 2 35 2 579 3 640 10 534 2 192 2 37 2 554 2 440 6 474 4 115 2 477 4 231 2 538 2 406 2 118 4 220 2 138 2 
170 2 482 2 523 4 485 2 633 2 178 2 505 4 546 2 428 2 180 2 656 2 181 4 635 2 103 2 334 2 254 2 493 2 56 2 257 2 622 2 274 2 81 2 35 2 579 2 640 10 534 2 192 2 37 2 554 2 322 2 387 2 440 6 474 4 115 2 477 4 231 2 538 2 406 2 118 4 220 2 23 2 138 2 
170 2 482 2 523 4 485 2 633 2 178 2 505 4 546 2 428 2 180 2 656 2 181 4 635 2 103 2 334 2 254 2 493 2 56 2 257 2 622 2 274 2 81 2 35 2 579 2 640 10 534 2 192 2 37 2 554 2 322 2 387 2 440 6 474 4 115 2 477 4 231 2 538 2 406 2 118 4 220 2 23 2 138 2 
170 2 482 2 523 4 485 2 633 2 178 2 505 4 546 2 428 2 180 2 656 2 181 4 635 2 103 2 334 2 254 2 493 2 56 2 257 2 622 2 274 2 81 2 35 2 579 2 640 10 534 2 192 2 37 2 554 2 322 2 387 2 440 6 474 4 115 2 477 4 231 2 538 2 406 2 118 4 220 2 23 2 138 2 
170 2 482 2 523 4 485 2 633 2 178 2 505 4 546 2 428 2 180 2 656 2 181 4 635 2 103 2 334 2 254 2 493 2 56 2 257 2 622 2 274 2 81 2 35 2 579 2 640 10 534 2 192 2 37 2 554 2 322 2 387 2 440 6 474 4 115 2 477 4 231 2 538 2 406 2 118 4 220 2 23 2 138 2 
304 2 462 2 7 2 88 2 10 2 617 2 
80 2 7 2 83 2 469 2 184 2 651 2 391 2 
481 1 235 2 326 2 169 2 648 2 486 1 505 8 374 2 2 2 126 2 451 2 109 2 210 1 187 2 640 10 301 2 665 1 404 1 422 2 214 2 160 2 455 2 478 2 67 2 264 2 586 2 
395 2 450 2 28 2 101 2 656 6 103 4 550 2 334 2 56 4 493 4 81 4 35 4 534 2 37 4 497 2 387 1 322 1 581 2 218 2 345 2 584 2 282 2 138 4 23 1 
552 1 73 2 631 2 111 7 523 2 453 4 640 1 505 1 366 2 64 2 441 2 477 2 508 2 118 2 53 2 390 2 
73 2 111 4 631 2 523 2 453 4 427 2 64 4 441 2 477 2 508 2 118 2 53 2 390 2 
552 1 73 2 111 4 631 2 523 2 453 4 640 1 505 1 427 2 64 4 441 2 477 2 508 2 118 2 53 2 390 2 
73 2 631 2 111 2 64 2 441 2 453 2 508 2 523 2 477 2 118 2 390 2 53 2 
589 2 501 2 502 2 505 34 1 2 5 4 595 2 357 5 600 1 206 2 514 4 14 2 112 2 439 2 17 2 364 2 365 2 217 2 216 2 444 2 445 2 613 2 614 2 122 2 289 4 123 2 448 6 373 4 294 1 618 2 222 4 620 4 621 2 34 2 298 2 532 2 229 2 458 2 540 1 627 2 233 2 630 2 308 4 42 2 236 2 393 4 542 2 543 2 46 2 464 2 399 32 549 2 49 6 468 2 551 2 54 4 317 4 638 2 155 2 321 4 640 38 472 2 245 1 473 10 161 4 62 2 644 16 560 1 476 2 168 2 327 2 328 2 567 2 415 2 330 2 657 2 333 2 488 14 576 2 255 2 577 18 418 4 263 4 585 2 89 4 668 2 
185 2 308 2 122 2 448 2 123 2 640 8 505 8 547 2 5 2 294 2 618 2 399 2 49 2 595 2 644 2 332 2 577 2 578 2 
308 2 289 2 122 2 448 2 123 2 640 6 505 6 547 2 5 2 618 2 399 4 49 2 595 2 644 2 620 2 577 2 
308 2 289 2 122 2 448 2 123 2 640 6 505 6 547 2 5 2 618 2 399 4 49 2 595 2 644 2 620 2 577 2 
596 2 

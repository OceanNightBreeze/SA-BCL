#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 485 (340,643) 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NegativeArraySizeException 496 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 50 225 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.ArrayIndexOutOfBoundsException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V ERROR utilMDE.Assert$AssertionException (337,380) (411,453) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 262 127 545 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V ERROR java.lang.ArrayIndexOutOfBoundsException 624 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.ArrayIndexOutOfBoundsException 624 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 164 164 427 427 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 501 501 61 61 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.ArrayIndexOutOfBoundsException 329 (339,540) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 329 (339,540) (339,540) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 329 (339,540) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.ArrayIndexOutOfBoundsException 240 170 33 612 0 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 599 124 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.ArrayIndexOutOfBoundsException 517 42 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 114 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 114 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 490 375 114 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 114 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.InvariantFormatTester:execute()Z
daikon.PptSlice1:arity()I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:subarray([III)[I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | CONDITION | 19542 | if (x) -> if (!x)
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | CONSTANT | 54150 | 0 -> -1
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.ProglangType:isScalar()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseGT([I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:lt(II)Z
daikon.inv.Invariant:justified()Z
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.ProglangType:isIntegral()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.PptSlice2:arity()I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:arity()I
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2308 | = null
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.RootNode:RootNode()V
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:relate_var()V
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.MathMDE:sign(I)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvMap:InvMap()V
jtb.JavaCharStream:FillBuff()V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaCharStream:getEndColumn()I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:backup(I)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ModBitTracker:ModBitTracker(I)V | CONSTANT | 2417 | 0 -> 1
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaCharStream:ReadByte()C
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z | CONDITION | 29819 | if (x) -> if (!x)
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:lte(II)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:concat([I[I)[I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGT([II)Z
utilMDE.Intern:intern([J)[J
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaCharStream:BeginToken()C
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:slice([III)[I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName; | RETURN | 74439 | return null
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.MathMDE:gcd([I)I
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(I[I)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakHasherMap:size()I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Ppt:Ppt()V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:eltsGTE([II)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.ProglangType:dimensions()I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:new_ppt()V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double; | RETURN | 17435 | return null
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:negate(I)I
daikon.Quant:gt(II)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | CONSTANT | 51688 | 64 -> 1
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DDD)D | OPERATOR | 8959 | <= -> ==
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:gte(II)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.ProglangType:isArray()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern:numIntArrays()I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:isReverse([I[I)Z
utilMDE.ArraysMDE:max([I)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z | CONSTANT | 40107 | 0 -> -1
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:lexGTE([I[I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Debug:logOn()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18499 | 1 -> -1
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:setDiff([I[I)[I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName:hashCode()I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:lexEqual([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.MathMDE:gcd(II)I
daikon.Quant:intersection([I[I)[I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaCharStream:readChar()C
utilMDE.Intern:intern([I)[I
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getEndLine()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | OPERATOR | 36891 | != -> ==
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:sameLength([I[I)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I | CONSTANT | 624 | 0 -> 1
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:min_max([I)[I
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
73 2 581 2 337 2 554 2 527 4 76 2 140 2 380 2 312 2 
547 2 66 2 467 2 128 6 245 6 460 2 308 2 144 2 449 2 361 2 119 6 
198 6 533 2 21 2 642 2 356 6 337 2 635 4 176 4 109 2 556 6 530 2 422 6 380 2 
451 2 333 2 229 8 273 2 231 2 55 16 577 10 41 10 299 8 337 6 145 2 6 16 618 2 597 2 372 16 303 4 559 10 282 8 306 6 626 29 590 6 429 4 357 26 431 10 35 10 541 12 36 4 656 8 380 6 228 4 
133 6 15 4 
46 2 
381 2 202 2 53 2 314 2 524 2 68 2 534 2 255 2 643 2 366 2 484 2 485 2 106 2 175 2 652 4 340 2 417 2 
229 10 55 24 455 2 577 12 41 12 337 4 5 6 6 24 257 2 597 2 372 24 559 12 621 6 123 6 282 6 306 4 626 42 351 6 30 4 590 4 13 8 472 4 429 2 357 36 35 12 431 6 477 4 541 15 592 2 401 4 380 4 571 2 
106 2 399 2 100 2 
197 10 138 2 439 2 488 2 601 2 161 2 440 2 353 2 58 2 538 2 239 2 408 2 557 22 346 2 
229 2 55 2 577 2 615 2 41 2 6 2 506 2 372 2 559 2 190 2 626 6 354 2 590 2 471 2 429 2 357 4 35 2 431 4 541 2 85 2 448 2 544 2 519 2 
621 6 55 8 626 16 351 6 577 4 30 4 41 4 472 4 95 2 357 12 35 4 6 8 541 4 372 8 303 2 196 2 559 4 
199 2 641 2 496 2 155 2 358 2 413 2 344 2 214 2 639 2 578 6 
600 2 46 2 613 2 69 2 225 2 515 2 93 2 60 2 151 2 8 2 50 2 
313 1 73 2 575 3 576 2 162 2 165 11 166 1 240 2 583 1 7 3 168 2 170 2 242 2 243 2 588 5 326 1 17 2 491 2 330 1 492 2 88 4 332 2 179 2 92 2 254 4 421 2 337 30 338 1 596 5 341 2 509 2 343 2 186 6 348 6 425 6 265 2 101 1 102 2 266 5 269 2 433 2 272 2 610 2 37 1 522 2 208 2 616 2 442 1 528 4 370 6 276 2 277 2 531 1 280 1 121 4 625 6 130 2 49 2 135 2 543 1 288 4 450 2 638 1 380 32 546 2 640 1 57 2 59 2 551 2 389 2 221 4 555 1 646 2 462 2 301 2 648 2 391 2 304 1 392 1 148 1 64 2 466 2 470 2 564 2 71 2 153 1 655 2 478 1 
387 2 380 2 
453 2 529 2 380 4 411 2 
572 2 
435 2 419 2 363 2 297 2 457 2 219 6 388 2 96 2 598 2 222 2 321 2 465 2 189 4 512 2 262 2 127 2 11 6 589 6 131 2 246 6 195 2 591 2 107 2 379 2 634 2 653 2 87 2 545 2 
611 2 369 1 454 2 284 2 
631 2 284 2 
120 2 579 2 106 2 624 2 284 2 352 2 36 2 
284 2 505 2 352 2 
284 2 136 2 352 2 
611 2 26 2 483 2 
284 2 352 2 
26 2 103 2 
154 2 284 2 
611 2 494 2 26 2 
520 2 611 2 463 2 
611 2 414 2 606 2 
611 2 252 2 345 2 
611 2 159 2 81 2 
26 2 495 2 
486 2 284 2 
654 2 463 2 
414 2 316 2 
252 2 79 2 
315 2 81 2 
26 2 376 2 
503 2 81 2 
252 2 437 2 
414 2 605 2 
463 2 542 2 
611 2 494 2 26 2 539 2 
611 2 494 2 236 2 26 2 539 2 
611 2 220 2 26 2 
31 2 611 2 26 2 
10 2 350 2 90 2 459 2 
120 2 63 2 286 2 106 2 
120 2 63 2 286 2 106 2 624 2 384 2 
120 2 106 2 284 2 352 2 514 2 36 2 
567 2 234 2 
120 2 106 2 36 2 324 2 
252 2 305 2 
374 2 81 2 
463 2 507 2 
414 2 400 2 
414 2 83 2 81 2 
414 2 264 2 81 2 
414 2 569 2 81 2 
414 2 489 2 81 2 
403 6 203 2 594 2 163 2 444 6 120 2 322 2 106 2 
25 2 26 2 
249 2 
611 2 169 2 
576 2 
73 2 1 2 164 2 165 4 3 2 238 2 240 2 168 2 584 2 170 2 242 2 243 2 17 2 173 2 491 2 177 4 492 2 88 6 19 1 20 2 336 2 254 4 421 2 256 4 337 22 186 6 348 2 602 2 425 4 603 4 427 2 102 2 29 2 105 2 268 2 433 2 522 2 112 2 116 2 208 2 616 2 443 2 528 4 370 6 277 2 278 2 121 4 625 2 213 2 129 1 536 2 215 2 130 2 48 2 135 2 288 4 289 2 380 22 51 2 139 2 57 2 59 2 551 2 644 2 555 2 646 2 462 2 648 2 391 2 147 2 64 6 65 2 564 2 149 2 153 2 474 2 570 2 
73 2 1 2 580 2 165 4 3 2 238 2 240 2 168 2 584 2 170 2 242 2 243 2 17 2 173 2 491 2 177 4 492 2 88 6 20 2 336 2 254 4 421 2 256 4 501 2 337 22 186 6 348 2 425 6 603 4 102 2 29 2 105 2 268 2 433 2 522 2 112 2 116 2 208 2 616 2 443 2 528 4 370 6 277 2 278 2 121 4 625 2 213 2 536 2 215 2 130 2 48 2 135 2 288 4 289 2 380 22 51 2 139 2 57 2 59 2 551 2 61 2 644 2 555 2 646 2 462 2 301 2 648 2 391 2 147 2 64 6 564 2 149 2 153 2 474 2 655 2 570 2 
28 2 
532 2 16 2 
355 2 499 2 156 2 
355 2 499 2 156 2 
73 2 1 2 165 2 240 2 407 2 168 2 75 2 170 2 242 2 243 2 12 2 245 4 17 2 173 2 328 2 329 2 491 2 492 2 88 2 91 2 254 4 499 2 421 2 337 14 504 2 339 2 186 2 188 2 261 2 425 6 102 2 267 2 433 2 522 2 112 2 206 2 207 2 208 2 616 2 528 4 370 6 118 2 620 2 119 4 212 2 121 4 128 4 130 2 48 2 135 2 288 4 449 2 380 18 291 6 57 2 298 2 59 2 551 2 460 2 646 2 462 2 301 2 648 2 391 2 64 2 467 2 564 2 308 2 309 2 655 2 156 2 
97 2 560 2 171 2 102 2 82 2 247 2 398 2 117 2 632 2 552 2 337 2 16 2 62 2 595 2 608 2 492 2 380 4 
73 2 1 2 165 4 240 2 407 2 168 2 75 2 170 2 242 2 243 2 12 2 245 4 17 2 173 2 328 4 329 2 491 2 492 2 88 2 91 2 254 4 499 2 421 2 337 14 504 2 339 2 186 2 188 2 261 2 425 6 102 2 267 2 433 2 522 2 111 2 112 2 206 2 207 2 208 2 616 2 528 4 370 6 118 2 620 2 119 4 212 2 121 4 128 4 130 2 48 2 135 2 540 2 288 4 449 2 380 18 291 6 57 2 298 2 59 2 551 2 460 2 646 2 462 2 301 2 648 2 391 2 64 2 467 2 564 2 308 2 309 2 655 2 156 2 
73 2 1 2 165 2 240 2 407 2 168 2 75 2 170 2 242 2 243 2 12 2 245 4 17 2 173 2 328 2 329 2 491 2 492 2 88 2 91 2 254 4 499 2 421 2 337 14 504 2 339 2 186 2 188 2 261 2 425 6 102 2 267 2 433 2 522 2 112 2 206 2 207 2 208 2 616 2 528 4 370 6 118 2 620 2 119 4 212 2 121 4 128 4 130 2 48 2 135 2 288 4 449 2 380 18 291 6 57 2 298 2 59 2 551 2 460 2 646 2 462 2 301 2 648 2 391 2 64 2 467 2 564 2 308 2 309 2 655 2 156 2 
436 2 612 2 404 2 0 2 208 2 616 2 240 2 528 4 617 2 370 4 168 2 9 2 121 4 170 2 242 2 243 2 251 2 288 2 380 12 89 2 420 2 254 2 421 2 551 2 337 8 646 2 462 2 301 1 648 2 425 5 564 2 102 2 33 2 432 2 655 1 433 2 271 2 
18 2 523 3 336 6 614 2 256 2 141 2 165 3 318 1 337 2 645 2 167 2 277 2 186 2 510 2 64 2 27 4 348 3 625 3 125 2 323 2 537 2 104 2 447 2 88 2 380 2 
18 2 523 2 336 6 614 2 256 2 141 2 165 2 337 2 645 2 167 2 277 2 186 2 510 2 64 2 27 4 348 2 625 2 125 2 323 2 537 2 104 2 447 2 88 2 380 2 
18 2 523 2 336 6 614 2 256 2 141 2 165 2 337 2 645 2 167 2 277 2 186 2 510 2 64 2 27 4 348 2 625 2 125 2 323 2 537 2 104 2 447 2 88 2 380 2 
521 2 232 2 577 2 525 2 41 2 165 3 582 4 6 2 320 6 372 2 277 2 625 3 282 4 626 6 447 2 415 3 86 4 218 2 380 10 293 2 55 2 295 4 385 4 337 4 143 3 423 2 186 2 559 2 223 2 466 2 347 2 306 2 193 2 428 2 357 4 651 4 35 2 607 3 610 2 434 2 
521 2 229 2 293 2 55 2 295 4 232 2 577 2 385 4 525 2 41 2 165 2 337 4 582 4 143 2 6 2 320 6 423 2 597 2 277 2 372 2 186 2 559 2 223 2 347 2 466 2 282 4 625 2 306 2 626 4 193 2 428 2 447 2 651 4 357 4 35 2 415 2 607 2 86 4 541 2 218 2 610 2 434 2 380 10 
521 2 229 2 293 2 55 2 295 4 232 2 577 2 385 4 525 2 41 2 165 2 337 4 582 4 143 2 6 2 320 6 423 2 597 2 277 2 372 2 186 2 559 2 223 2 347 2 466 2 282 4 625 2 306 2 626 4 193 2 428 2 447 2 651 4 357 4 35 2 415 2 607 2 86 4 541 2 218 2 610 2 434 2 380 10 
521 2 229 2 293 2 55 2 295 4 232 2 577 2 385 4 525 2 41 2 165 2 337 4 582 4 143 2 6 2 320 6 423 2 597 2 277 2 372 2 186 2 559 2 223 2 347 2 466 2 282 4 625 2 306 2 626 4 193 2 428 2 447 2 651 4 357 4 35 2 415 2 607 2 86 4 541 2 218 2 610 2 434 2 380 10 
521 2 229 4 293 2 55 2 295 4 232 2 577 2 385 4 525 2 41 2 165 2 337 4 582 4 143 2 6 2 320 6 423 2 597 4 277 2 372 2 186 2 559 2 223 2 347 2 466 2 282 4 625 2 306 2 626 4 193 2 428 2 447 2 651 4 357 4 35 2 415 2 607 2 86 4 541 4 218 2 610 2 434 2 380 10 
599 2 574 2 124 2 205 2 43 2 373 2 
122 2 47 2 116 2 191 2 377 2 364 2 43 2 
337 2 99 2 517 2 42 2 243 2 80 2 380 2 
201 2 229 4 54 2 55 6 577 6 41 6 526 2 142 2 337 6 5 4 6 6 372 6 597 4 559 6 279 2 260 2 306 2 282 4 626 15 351 4 285 2 30 2 13 2 633 2 473 2 357 12 35 6 477 2 541 4 380 6 
292 2 362 2 113 2 230 1 385 2 378 2 307 2 274 2 337 1 152 2 582 2 34 2 23 2 300 4 636 7 637 2 86 2 380 1 
292 2 362 2 113 2 385 2 378 4 307 2 274 4 152 2 582 2 34 2 300 4 636 6 23 4 637 2 86 2 
292 2 362 2 113 2 230 1 385 2 378 8 307 8 274 8 337 1 152 2 582 2 34 6 300 4 636 10 23 8 637 2 86 2 380 1 
292 2 362 2 113 2 385 2 378 2 274 2 152 2 582 2 300 2 636 2 23 2 637 2 86 2 
573 4 157 8 158 34 481 4 160 24 233 12 235 22 317 8 406 6 319 6 241 4 168 14 77 42 409 16 410 6 78 10 586 4 587 16 325 6 172 6 248 2 250 4 490 2 178 2 593 6 331 4 493 50 418 6 253 90 497 2 180 2 181 10 182 6 502 11 337 134 184 4 22 6 508 6 258 4 424 6 24 6 511 4 98 124 602 4 425 248 263 4 192 24 603 28 194 92 32 2 516 2 604 6 360 10 359 4 518 2 609 8 200 26 438 8 204 8 114 2 115 26 365 4 616 8 441 4 209 42 367 8 528 112 210 4 275 36 619 2 211 2 622 4 121 88 445 6 375 2 627 6 628 4 126 4 629 12 630 10 132 16 216 8 287 6 137 2 217 4 380 150 452 90 294 6 548 24 296 8 56 24 550 2 456 2 386 4 458 4 553 4 647 2 146 10 461 2 301 58 390 18 302 24 464 6 558 4 649 10 67 16 394 4 395 4 396 10 397 24 468 6 562 1 224 18 561 6 469 6 563 2 564 14 565 8 70 4 566 10 150 6 226 84 568 6 655 58 72 8 402 17 479 2 
38 6 480 2 39 2 438 2 114 2 405 4 482 2 40 2 74 2 616 2 2 2 367 2 4 2 528 20 275 2 487 2 168 2 409 4 78 2 45 2 44 2 121 20 445 2 446 2 375 2 283 2 412 2 585 2 535 2 587 4 630 2 172 2 132 4 327 2 490 2 174 2 134 2 84 4 416 2 380 46 52 2 418 2 382 2 383 4 334 2 294 2 335 2 497 2 181 2 548 2 549 2 56 2 296 6 498 2 458 2 183 2 94 2 337 44 146 2 461 2 301 2 390 2 464 2 558 2 649 2 259 2 393 2 98 6 349 2 602 2 426 4 513 2 425 44 603 38 396 2 397 2 650 2 469 2 564 2 566 2 227 2 310 2 475 2 430 2 568 4 360 2 476 2 655 2 72 2 609 2 402 2 
438 2 114 2 160 2 365 2 406 2 209 4 616 2 237 6 319 2 367 2 368 2 528 14 4 2 275 4 371 2 168 4 77 2 409 4 78 2 623 2 622 2 45 2 121 12 281 2 375 2 585 2 244 6 587 4 325 2 132 4 248 2 14 2 490 2 327 2 287 2 416 2 593 2 290 2 380 40 493 2 181 2 182 2 500 2 337 36 22 2 146 2 461 2 301 6 508 2 342 2 390 4 185 2 187 2 24 2 98 10 425 30 603 14 468 2 561 2 194 6 564 4 566 2 150 2 226 6 108 2 430 2 568 2 360 4 655 6 311 6 270 2 609 2 402 4 479 2 
157 4 438 2 158 10 114 2 40 2 235 10 441 2 616 2 367 2 528 14 210 2 275 2 211 2 168 2 409 6 78 2 121 14 445 4 375 2 587 6 172 4 132 6 216 2 490 2 178 2 416 2 137 2 380 28 418 4 294 4 497 2 181 2 296 6 502 2 553 2 337 26 647 2 461 2 146 2 301 10 390 2 464 4 98 8 67 6 394 4 602 2 263 2 425 38 603 14 469 4 563 2 564 2 565 2 566 2 32 2 516 2 568 2 360 2 655 10 609 2 402 2 
110 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (88,326) (88,326) 
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException 182 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (5,223,279,280,403) (5,223,279,280,403) (5,223,279,280,403) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 155 248 386 34 443 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (136,390) 566 465 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (136,390) 566 465 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (136,390) 566 465 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (136,390) 566 465 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (136,390) 566 465 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (136,390) 566 465 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (136,390) 566 465 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (136,390) 566 465 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (136,390) 566 465 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (136,390) 566 465 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (136,390) 566 465 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException (136,390) 566 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (136,390) 566 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException (136,390) 566 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.StringIndexOutOfBoundsException 610 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 724 556 58 81 731 564 15 
daikon.test.VarInfoNameTest:testJML()V ERROR utilMDE.Assert$AssertionException (88,326) (88,326) 184 731 564 15 
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:concat([I[I)[I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String; | ASSIGN | 970 | = null
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:subsetOf([F[F)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaCharStream:readChar()C
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.RootNode:RootNode()V
jtb.JavaParser:jj_ntk()I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaCharStream:ReadByte()C
daikon.Quant:lte(II)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:setEqual([I[I)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | RETURN | 3858 | return null
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfo:new_ppt()V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([I)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:lexGT([I[I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6772 | = null
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.InvMap:InvMap()V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:memberOf(J[J)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | OPERATOR | 52438 | != -> >=
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.PptSlice0:arity()I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.MathMDE:pow_fast(II)I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String; | RETURN | 48940 | return null
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsEqual([II)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | ASSIGN | 60402 | = null
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:subsetOf([S[S)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internSubsequence([III)[I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I | CONSTANT | 65761 | 0 -> 1
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.ProglangType:dimensions()I
daikon.Quant:memberOf(I[I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaCharStream:FillBuff()V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:eltsLTE([II)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:eltsGteIndex([I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:isPseudoArray()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.ModBitTracker:num_samples()I
daikon.Quant:subsetOf([F[D)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseGT([I)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:ne(II)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.Quant:eq(JJ)Z
utilMDE.Assert:assertTrue(Z)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.ArraysMDE:noDuplicates([J)Z | ASSIGN | 58337 | = null
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:memberOf(F[D)Z
utilMDE.MathMDE:gcd(II)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.PptSlice1:arity()I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:subsetOf([I[I)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J | STATEMENT | 23714 | stmt -> ;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(S[S)Z
utilMDE.MathMDE:gcd([I)I
jtb.JavaCharStream:backup(I)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:eq(FF)Z
daikon.ModBitTracker:num_vars()I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | CONSTANT | 64756 | 0 -> -1
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.ValueSet:ValueSet(I)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:sameLength([I[I)Z
daikon.Quant:lexLT([I[I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.PptSlice2:arity()I
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.Quant:slice([III)[I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.ValueTuple:size()I
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.PptSlice1:num_samples()I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:gte(II)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode; | ASSIGN | 22225 | = null
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGTE([II)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:union([I[I)[I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.MathMDE:modulus([I)[I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.PptName:isEnterPoint()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Ppt:Ppt()V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z | STATEMENT | 149930 | stmt -> ;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node()V
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:eltsGT([II)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:memberOf(D[F)Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.ValueTuple:isMissing(I)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Intern:intern([I)[I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:execute()Z | CONSTANT | 5806 | 1 -> 0
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.ProglangType:isIntegral()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.Invariant:justified()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:memberOf(F[F)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z | CONDITION | 170166 | if (x) -> if (!x)
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:eq(II)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd(JJ)J
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Debug:logDetail()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.Intern:intern([D)[D
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.ProglangType:isArray()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min([I)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:pow(II)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:setDiff([I[I)[I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.Invariants:Invariants()V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern:intern([J)[J
daikon.Quant:noDups([I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:hashCode()I
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.ArraysMDE:sum([[D)D
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:eltwiseLTE([I)Z
utilMDE.LimitedSizeIntSet:size()I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
204 2 738 4 326 2 88 2 242 2 665 2 359 2 624 2 76 2 
506 6 178 6 739 2 579 2 568 2 396 2 276 2 258 6 426 2 387 2 203 2 
240 4 71 6 534 6 193 6 638 2 326 2 490 4 88 2 626 6 690 2 661 2 607 2 616 2 
115 24 678 10 343 8 139 4 547 10 245 27 326 6 88 6 709 2 305 10 328 2 379 10 227 14 621 4 596 10 192 2 599 14 256 4 361 2 718 4 336 2 603 6 578 14 213 2 673 6 79 8 651 6 698 2 341 10 498 4 
182 2 
689 2 
242 2 321 2 374 4 524 2 89 2 159 2 41 2 332 2 733 2 356 2 25 2 52 2 686 2 602 2 473 2 295 2 336 2 172 2 605 2 695 2 218 2 238 2 111 2 
678 16 115 48 116 6 139 2 138 8 547 16 245 54 590 2 183 6 326 4 88 4 393 4 641 6 305 6 526 4 160 2 570 2 379 16 20 4 227 32 596 16 453 6 599 32 148 2 488 4 718 4 648 2 720 4 603 4 672 4 578 32 673 6 216 2 694 2 651 18 234 4 455 6 341 22 560 6 
524 2 713 2 233 2 
163 10 285 2 732 2 207 22 459 2 147 2 726 2 461 2 140 2 557 2 581 2 721 2 188 2 125 2 
268 2 678 2 115 4 139 2 547 2 245 6 11 2 305 4 379 2 450 2 227 2 596 2 128 2 599 2 316 2 691 2 603 2 578 2 651 2 517 2 236 2 341 2 112 2 
621 2 678 4 115 12 596 4 547 4 599 8 245 16 649 2 641 6 185 2 578 8 455 6 234 4 341 4 379 4 20 4 227 8 
702 2 83 2 611 2 589 2 372 2 374 4 392 2 349 10 524 8 201 4 224 2 142 2 310 2 40 4 529 2 618 2 680 4 594 10 505 4 288 4 422 2 713 6 254 2 470 2 471 4 509 4 230 14 296 4 171 2 541 2 337 4 605 2 606 4 263 4 233 2 697 2 218 4 630 2 109 62 497 2 
522 2 365 2 391 2 92 2 202 2 68 2 289 2 598 2 689 2 514 2 
118 2 61 2 156 2 2 2 119 1 303 2 440 2 10 2 441 2 394 2 484 2 21 1 620 2 162 2 398 2 714 4 572 2 399 2 167 2 76 2 211 2 259 2 212 2 540 6 403 2 81 2 408 4 220 2 724 4 725 6 35 2 223 2 326 20 88 22 462 2 644 1 279 2 145 2 98 2 333 2 229 2 424 1 556 4 472 2 428 2 107 2 432 2 
22 2 88 2 
433 2 88 4 309 2 
722 2 
179 2 44 6 155 2 366 2 34 2 367 2 1 2 479 2 347 2 373 2 668 2 537 2 248 2 30 6 443 2 59 2 252 2 474 2 617 2 519 6 386 2 283 2 
653 2 43 1 411 2 78 2 
653 2 429 2 
524 2 653 2 410 2 232 2 507 2 151 2 498 2 
653 2 232 2 67 2 
653 2 232 2 358 2 
153 2 315 2 411 2 
653 2 232 2 
315 2 181 2 
653 2 331 2 
315 2 411 2 491 2 
304 2 469 2 411 2 
411 2 707 2 476 2 
45 2 411 2 72 2 
411 2 291 2 699 2 
315 2 262 2 
653 2 237 2 
469 2 17 2 
476 2 737 2 
45 2 306 2 
291 2 452 2 
315 2 189 2 
260 2 291 2 
45 2 90 2 
740 2 476 2 
469 2 562 2 
315 2 411 2 491 2 210 2 
643 2 
531 2 315 2 411 2 
315 2 411 2 639 2 
381 2 715 2 261 2 214 2 
524 2 701 2 507 2 18 2 
524 2 701 2 410 2 507 2 18 2 521 2 
524 2 653 2 232 2 507 2 706 2 498 2 
719 2 172 2 
524 2 507 2 435 2 498 2 
45 2 580 2 
513 2 291 2 
469 2 85 2 
476 2 257 2 
291 2 412 2 476 2 
592 2 291 2 476 2 
130 2 291 2 476 2 
146 2 291 2 476 2 
241 2 727 2 524 2 312 2 284 6 571 2 507 2 219 6 
544 2 315 2 
287 2 190 2 0 2 207 6 199 2 371 2 636 2 423 2 157 2 27 2 348 2 325 2 591 2 141 2 551 4 552 2 133 4 377 2 
411 2 588 2 
440 2 
477 3 118 2 303 2 121 2 10 2 394 2 13 2 569 2 484 2 19 2 206 2 398 2 399 2 211 2 489 8 212 2 317 2 32 3 408 4 220 2 499 2 35 2 36 2 323 2 326 26 419 2 145 2 333 2 48 2 681 2 600 2 229 6 684 2 334 2 687 2 604 2 338 2 235 2 518 2 60 2 61 2 63 2 441 2 251 2 445 2 620 6 353 2 354 2 714 4 167 2 536 4 76 2 259 6 540 6 265 2 81 2 364 2 634 4 724 4 725 4 370 3 460 2 548 2 87 5 88 26 462 2 645 4 98 2 556 4 472 2 650 2 559 2 107 2 113 2 
477 2 563 2 118 2 303 2 10 2 394 2 13 2 569 2 484 2 313 2 662 2 19 2 206 2 398 2 399 2 211 2 489 8 212 2 317 2 32 2 408 4 220 2 499 2 35 2 36 2 323 2 326 26 419 2 145 2 333 2 48 2 681 2 600 2 229 6 684 2 334 2 687 2 604 2 338 2 428 2 518 2 60 2 61 2 63 2 441 2 445 2 162 2 620 6 353 2 354 2 714 4 167 2 536 4 76 2 259 6 540 6 265 2 81 2 364 2 634 4 724 4 725 6 370 2 460 2 548 2 87 4 88 26 462 2 94 2 645 4 98 2 556 4 472 2 650 2 559 2 107 2 113 2 
99 2 
683 2 75 2 
389 6 243 2 390 2 480 2 566 2 525 2 10 2 307 2 482 4 568 2 484 2 396 2 126 2 164 2 165 4 69 2 714 2 532 2 573 2 399 2 26 2 167 2 401 2 623 2 169 8 258 4 576 2 212 2 540 4 77 2 579 2 494 2 33 4 408 2 178 4 136 2 584 2 587 2 137 2 35 2 276 2 550 4 326 6 38 6 88 8 465 2 420 2 96 2 506 4 290 2 49 2 510 2 472 2 693 2 475 2 700 2 652 2 520 2 
389 6 243 2 390 2 480 2 566 2 525 2 10 2 12 4 482 4 568 2 484 2 396 2 126 2 164 2 165 4 69 2 714 2 573 2 399 2 26 2 167 2 401 2 623 2 169 8 258 6 576 2 212 2 540 4 77 2 579 2 494 2 33 4 408 2 178 4 136 2 584 2 587 2 137 2 728 2 35 2 276 2 550 4 326 6 38 6 88 8 465 2 420 2 96 2 506 6 290 2 49 2 510 2 472 2 426 2 693 2 475 2 700 2 197 2 652 2 520 2 
178 2 165 2 584 2 587 2 137 2 390 2 26 2 510 2 258 2 480 2 566 2 576 2 550 4 579 2 396 2 465 2 33 4 420 2 
389 4 243 2 390 2 480 2 566 2 525 2 10 2 307 2 482 4 568 2 484 2 396 2 126 2 164 2 165 4 69 2 714 2 532 2 573 2 399 2 26 2 167 2 401 2 623 2 169 6 258 4 576 2 212 2 540 4 77 2 579 2 494 2 33 4 408 2 178 2 136 2 584 2 587 2 137 2 35 2 550 4 326 6 38 4 88 8 465 2 420 2 96 2 506 4 290 2 49 2 510 2 472 2 426 2 693 2 475 2 700 2 652 2 520 2 
389 4 243 2 390 2 480 2 566 2 525 2 10 2 307 2 482 4 568 2 484 2 396 2 126 2 164 2 165 4 69 2 714 2 532 2 573 2 399 2 26 2 167 2 401 2 623 2 169 6 258 2 576 2 212 2 540 4 77 2 579 2 494 2 33 4 408 2 178 4 136 2 584 2 587 2 137 2 35 2 550 4 326 6 38 4 88 8 465 2 420 2 96 2 506 4 290 2 49 2 510 2 472 2 739 2 693 2 475 2 700 2 652 2 520 2 
389 4 243 2 390 2 480 2 566 2 525 2 10 2 307 2 482 4 568 2 484 2 396 2 126 2 164 2 165 4 69 2 714 2 532 2 573 2 399 2 26 2 167 2 401 2 623 2 169 6 258 4 576 2 212 2 540 4 77 2 579 2 494 2 33 4 408 2 178 4 136 2 584 2 587 2 137 2 35 2 276 2 550 4 326 6 38 6 88 8 465 2 420 2 96 2 506 4 290 2 49 2 510 2 472 2 693 2 475 2 700 2 652 2 520 2 
389 6 243 2 390 2 480 2 566 2 525 2 10 2 307 2 482 4 568 2 484 2 396 2 126 2 164 2 165 4 69 2 714 2 532 2 573 2 399 2 26 2 167 2 401 2 623 2 169 8 258 4 576 2 212 2 540 4 77 2 579 2 494 2 33 4 408 2 178 6 136 2 584 2 587 2 137 2 35 2 276 2 550 4 326 6 38 6 88 8 465 2 420 2 96 2 506 6 290 2 49 2 510 2 472 2 739 2 693 2 475 2 700 2 652 2 520 2 
389 6 243 2 390 2 480 2 566 2 525 2 10 2 307 2 482 4 568 2 484 2 396 2 126 2 164 2 165 4 69 2 714 2 532 2 573 2 399 2 26 2 167 2 401 2 623 2 169 8 258 4 576 2 212 2 540 4 77 2 579 2 494 2 33 4 408 2 178 4 136 2 584 2 587 2 137 2 35 2 276 2 550 4 326 6 38 6 88 8 465 2 420 2 96 2 506 4 290 2 49 2 510 2 472 2 693 2 475 2 700 2 652 2 520 2 
477 2 198 6 118 2 301 1 390 2 480 2 303 2 566 2 567 6 659 2 10 2 394 2 309 6 123 2 482 4 14 1 124 1 568 2 396 2 484 2 205 6 22 6 126 2 398 2 208 8 573 2 574 2 399 2 26 2 666 6 401 2 487 2 29 7 670 2 211 2 489 2 576 2 212 2 579 2 674 6 404 2 217 2 32 2 492 2 405 2 494 2 33 4 408 4 220 2 136 2 584 2 587 2 137 2 35 2 36 2 501 1 324 10 37 6 326 24 38 2 414 2 503 2 679 6 144 2 418 2 420 2 145 2 506 6 333 2 49 2 600 2 684 2 229 6 510 2 425 2 57 2 428 2 693 2 700 2 520 2 434 7 243 4 61 2 703 6 346 1 158 1 437 2 439 2 525 4 66 6 441 12 249 2 528 2 447 2 711 2 162 2 620 6 164 2 354 2 353 4 712 2 165 4 69 2 714 4 532 2 73 1 533 2 622 2 167 2 623 2 536 4 76 2 169 2 258 2 259 8 540 6 77 2 627 4 80 2 81 2 178 4 722 6 724 4 635 2 725 6 460 2 637 2 87 2 550 4 88 40 462 2 282 2 464 6 187 2 465 2 96 2 382 2 98 2 290 2 554 6 194 6 292 2 556 4 196 1 736 2 472 2 739 2 105 2 106 1 297 6 107 2 475 4 652 2 113 2 
477 2 198 6 118 2 390 2 480 2 303 2 566 2 567 6 659 2 10 2 394 2 308 2 309 6 123 2 482 4 568 2 396 2 484 2 205 6 22 6 126 2 398 2 208 8 573 2 574 2 399 2 26 2 666 6 401 2 487 2 670 2 211 2 489 4 576 2 212 2 579 2 674 6 404 2 217 2 32 2 492 2 405 2 494 2 33 4 408 4 220 2 136 2 584 2 587 2 137 2 35 2 36 2 324 10 37 6 326 26 38 4 414 2 39 2 503 2 679 6 144 2 418 2 420 2 145 2 506 6 333 2 49 2 600 2 684 2 229 6 510 2 425 2 57 2 428 2 693 2 700 2 520 2 243 4 61 2 703 6 437 2 439 2 525 4 66 6 441 12 249 2 528 2 447 2 711 2 162 2 620 6 164 2 354 2 353 4 712 2 165 4 69 2 714 4 532 2 533 2 622 2 167 2 623 2 536 4 76 2 169 2 258 4 259 8 540 6 77 2 627 4 80 2 81 2 178 4 722 6 634 2 724 4 635 2 725 6 460 2 637 2 276 2 87 2 550 4 88 42 462 2 282 2 464 6 187 2 465 2 96 2 382 2 98 2 290 2 554 6 194 6 292 2 556 4 736 2 472 2 105 2 297 6 107 2 475 4 652 2 113 2 
389 2 477 2 198 6 118 2 390 2 480 2 303 2 566 2 567 6 659 2 10 2 394 2 308 2 309 6 123 2 482 4 568 2 396 2 484 2 205 6 22 6 126 2 398 2 208 8 573 2 574 2 399 2 26 2 666 6 401 2 487 2 670 2 211 2 489 4 576 2 212 2 579 2 674 6 404 2 217 2 32 2 492 2 405 2 494 2 33 4 408 4 220 2 136 2 584 2 587 2 137 2 35 2 36 2 324 10 37 6 326 26 38 4 414 2 39 2 503 2 679 6 144 2 418 2 420 2 145 2 506 6 333 2 49 2 600 2 684 2 229 6 510 2 425 2 57 2 428 2 693 2 700 2 520 2 243 4 61 2 703 6 437 2 439 2 525 4 66 6 441 12 249 2 528 2 447 2 711 2 162 2 620 6 164 2 354 2 353 4 712 2 165 4 69 2 714 4 532 2 533 2 622 2 167 2 623 2 536 4 76 2 169 4 258 4 259 8 540 6 77 2 627 4 80 2 81 2 178 4 722 6 634 2 724 4 635 2 725 6 460 2 637 2 276 2 87 2 550 4 88 42 462 2 282 2 464 6 187 2 465 2 96 2 382 2 98 2 290 2 554 6 194 6 292 2 556 4 736 2 472 2 105 2 297 6 107 2 475 4 652 2 113 2 
389 2 477 4 198 6 118 2 390 2 480 2 303 2 566 2 8 6 567 6 659 2 10 2 660 2 394 2 308 2 309 12 123 2 482 4 568 2 396 2 484 2 205 6 22 12 126 2 398 2 208 8 573 2 574 2 399 2 26 2 666 6 401 2 487 2 670 2 211 2 489 6 576 2 212 2 579 2 674 6 676 2 404 2 217 2 32 4 492 2 405 2 494 2 33 4 677 2 408 4 220 2 136 2 584 2 587 2 137 2 35 2 36 2 322 6 324 8 37 6 326 24 38 4 414 2 39 2 503 2 679 6 144 2 418 2 420 2 145 2 506 6 333 2 49 2 600 4 601 6 684 2 229 8 510 2 425 2 56 2 57 2 428 2 693 2 700 2 520 2 243 4 61 2 703 6 437 2 439 2 525 4 66 12 441 10 249 2 442 2 528 2 448 6 711 2 162 2 620 8 164 2 354 4 353 4 712 2 165 4 69 2 714 4 532 2 533 2 357 6 255 2 622 2 167 2 623 2 536 6 76 2 169 4 258 4 259 12 170 6 540 6 77 2 627 4 80 2 81 2 632 6 178 4 633 6 722 12 634 2 724 4 635 2 725 6 460 2 637 2 276 2 87 4 550 4 88 46 462 2 282 2 464 12 187 2 465 2 96 2 382 2 98 2 290 2 554 6 194 6 195 2 292 2 647 2 556 4 736 2 472 2 294 6 105 2 297 12 107 2 475 4 652 2 113 2 
178 4 389 2 584 2 137 2 276 2 480 2 550 2 38 4 482 2 568 2 396 2 420 2 96 2 506 2 164 2 126 2 69 2 290 2 532 2 573 2 26 2 510 2 169 2 258 4 576 2 77 2 579 2 693 2 494 2 33 2 
299 2 477 3 118 2 5 2 303 2 480 2 10 2 394 2 482 2 568 2 396 2 484 2 126 2 398 2 573 2 399 2 26 2 211 2 576 2 212 2 579 2 32 3 494 2 33 2 408 4 220 2 584 2 137 2 35 2 36 2 324 2 326 24 38 4 327 2 420 2 145 2 506 2 333 2 49 2 229 6 510 2 428 2 693 2 61 2 708 2 440 2 441 4 447 2 162 2 620 6 164 2 353 2 69 2 714 4 532 2 167 2 536 4 76 2 258 4 169 2 259 8 540 6 77 2 81 2 177 3 178 4 724 4 725 6 460 2 276 2 729 2 87 3 550 2 88 24 462 2 553 2 280 2 96 2 98 2 290 2 556 4 104 2 472 2 107 2 113 2 
126 2 631 2 530 2 
126 2 631 2 530 2 
389 4 118 2 390 2 6 2 303 2 566 2 10 2 394 2 482 2 568 2 484 2 396 2 126 2 398 2 399 2 211 2 212 2 579 2 215 2 494 2 407 2 33 2 408 4 220 2 137 4 35 2 36 2 326 14 38 4 226 2 420 2 145 2 506 6 333 2 47 2 50 2 229 2 510 2 426 2 428 2 239 2 61 2 441 2 162 2 620 2 353 2 165 2 714 4 167 2 76 2 169 4 258 6 259 2 540 6 81 2 178 6 724 4 725 6 460 2 276 2 87 2 550 2 88 14 462 2 98 2 556 4 472 2 739 2 107 2 
711 2 271 2 587 2 683 2 413 2 167 2 324 2 512 2 326 2 567 2 88 4 441 2 318 2 627 2 311 2 418 2 95 2 
389 4 118 2 390 2 6 2 303 2 566 2 10 2 394 2 482 2 568 2 484 2 396 2 126 2 398 2 24 2 399 2 211 2 212 2 579 2 215 2 494 2 407 2 33 2 408 4 220 2 137 4 35 2 36 2 326 14 38 4 226 4 420 2 145 2 506 6 333 2 47 2 50 2 229 2 510 2 426 2 428 2 239 2 61 2 436 2 441 2 162 2 620 2 353 2 165 2 714 4 167 2 76 2 169 4 258 6 259 2 540 6 81 2 178 6 724 4 725 6 460 2 276 2 87 4 550 2 88 14 462 2 98 2 556 4 472 2 739 2 107 2 
389 4 118 2 390 2 6 2 303 2 566 2 10 2 394 2 482 2 568 2 484 2 396 2 126 2 398 2 399 2 211 2 212 2 579 2 215 2 494 2 407 2 33 2 408 4 220 2 137 4 35 2 36 2 326 14 38 4 226 2 420 2 145 2 506 6 333 2 47 2 50 2 229 2 510 2 426 2 428 2 239 2 61 2 441 2 162 2 620 2 353 2 165 2 714 4 167 2 76 2 169 4 258 6 259 2 540 6 81 2 178 6 724 4 725 6 460 2 276 2 87 2 550 2 88 14 462 2 98 2 556 4 472 2 739 2 107 2 
610 2 
477 3 117 3 180 2 273 2 614 2 87 3 549 2 326 2 88 2 527 2 376 2 620 2 355 2 101 2 735 2 600 6 229 2 536 2 716 4 259 2 628 2 32 3 385 1 609 2 113 2 
477 2 117 2 180 2 273 2 614 2 87 2 549 2 326 2 88 2 527 2 376 2 620 2 355 2 101 2 735 2 600 6 229 2 536 2 716 4 259 2 628 2 32 2 609 2 113 2 
477 2 117 2 180 2 273 2 614 2 87 2 549 2 326 2 88 2 527 2 376 2 620 2 355 2 101 2 735 2 600 6 229 2 536 2 716 4 259 2 628 2 32 2 609 2 113 2 
115 4 478 4 345 2 245 6 658 4 350 4 481 2 16 2 314 2 718 2 259 2 578 2 673 4 542 6 32 3 582 3 457 2 678 2 320 2 547 2 640 2 87 3 326 4 88 10 281 2 593 3 417 2 379 2 380 2 227 2 596 2 646 2 599 2 55 2 427 3 231 4 692 2 558 4 113 2 609 2 
115 4 478 4 345 2 245 4 658 4 350 4 481 2 16 2 314 2 718 2 259 2 578 2 673 4 216 2 542 6 32 2 582 2 457 2 678 2 320 2 547 2 640 2 87 2 326 4 88 10 281 2 593 2 417 2 379 2 380 2 227 2 596 2 646 2 599 2 55 2 427 2 231 4 692 2 558 4 651 2 341 2 113 2 609 2 
115 4 478 4 345 2 245 4 658 4 350 4 481 2 16 2 314 2 718 2 259 2 578 2 673 4 216 2 542 6 32 2 582 2 457 2 678 2 320 2 547 2 640 2 87 2 326 4 88 10 281 2 593 2 417 2 379 2 380 2 227 2 596 2 646 2 599 2 55 2 427 2 231 4 692 2 558 4 651 2 341 2 113 2 609 2 
115 4 478 4 345 2 245 4 658 4 350 4 481 2 16 2 314 2 718 2 259 2 578 2 673 4 216 2 542 6 32 2 582 2 457 2 678 2 320 2 547 2 640 2 87 2 326 4 88 10 281 2 593 2 417 2 379 2 380 2 227 2 596 2 646 2 599 2 55 2 427 2 231 4 692 2 558 4 651 2 341 2 113 2 609 2 
115 4 478 4 345 2 245 4 658 4 350 4 481 2 16 2 314 2 718 2 259 2 578 2 673 4 216 4 542 6 32 2 582 2 457 2 678 2 320 2 547 2 640 2 87 2 326 4 88 10 281 2 593 2 417 2 379 2 380 2 227 2 596 2 646 2 599 2 55 2 427 2 231 4 692 2 558 4 651 4 341 4 113 2 609 2 
663 2 561 2 486 2 129 2 3 2 717 2 
664 2 500 2 225 2 416 2 129 2 60 2 42 2 
409 2 62 2 244 2 613 2 275 2 438 2 326 8 9 1 88 10 247 2 66 2 329 2 378 2 451 2 595 2 286 2 97 2 166 2 102 2 384 2 171 1 212 2 173 1 431 2 697 1 319 1 
545 2 115 12 678 6 116 4 138 2 200 2 547 6 4 2 245 16 326 6 88 6 526 2 504 2 463 2 379 6 253 2 466 2 227 6 596 6 599 6 28 2 718 2 577 2 578 6 673 4 216 2 455 4 234 2 651 2 341 3 
388 2 127 2 383 2 734 2 221 1 478 2 535 4 705 2 231 2 730 2 326 1 350 2 88 1 515 2 150 7 696 2 363 2 619 2 
388 4 127 2 383 2 734 2 478 2 705 2 535 4 231 2 730 2 350 2 515 4 150 6 696 4 363 2 619 2 
388 8 127 2 383 6 734 2 221 1 478 2 705 8 535 4 231 2 730 2 326 1 350 2 88 1 515 8 150 10 696 8 363 2 619 2 
388 2 127 2 734 2 478 2 535 2 231 2 730 2 350 2 515 2 150 2 696 2 363 2 619 2 
300 4 564 2 654 6 656 12 655 6 302 12 120 6 657 2 565 2 122 6 395 12 483 2 15 2 397 6 23 12 575 4 400 6 402 2 669 2 211 10 31 2 132 22 493 2 406 2 495 2 583 4 134 2 135 4 585 2 586 4 222 4 326 80 502 6 415 4 143 4 330 6 421 6 46 2 597 6 228 4 682 4 51 2 508 2 685 6 53 12 511 8 688 2 428 20 339 6 430 2 58 2 516 6 340 8 342 6 154 13 523 2 61 10 704 6 612 6 344 6 64 6 246 4 65 6 444 2 446 12 710 6 162 20 70 12 168 6 538 6 360 6 539 12 362 2 454 6 174 42 456 4 266 4 81 4 176 3 175 2 458 4 543 1 267 6 84 2 269 4 270 6 546 6 724 44 725 90 368 2 369 2 274 6 86 6 375 1 88 92 278 6 186 6 731 2 468 2 555 12 103 4 556 38 298 12 
543 2 84 2 523 2 61 2 724 6 725 10 564 2 369 2 655 2 302 2 615 2 326 18 88 18 709 2 184 2 91 2 278 2 15 2 449 2 731 2 23 2 191 2 46 2 74 2 575 10 685 2 556 6 625 2 211 2 688 2 671 2 131 2 174 2 629 2 406 2 81 2 298 2 496 2 
114 2 300 4 564 2 654 4 656 8 655 4 302 10 120 4 7 8 565 2 122 4 395 10 15 2 397 4 23 10 575 14 400 4 667 4 209 10 402 4 211 6 132 30 675 8 406 2 495 2 134 2 135 2 586 4 222 4 326 70 502 4 415 4 143 4 330 4 421 16 46 2 228 4 682 4 508 2 685 4 53 24 54 4 511 6 149 16 688 2 335 32 428 30 339 8 516 6 152 4 340 8 608 10 342 4 154 10 523 2 61 6 704 8 612 4 344 4 64 4 246 4 65 4 250 16 351 2 161 2 446 24 352 2 710 4 162 28 70 6 74 2 539 14 538 4 360 4 454 4 456 4 174 24 264 8 266 4 81 2 82 2 269 4 84 2 270 4 723 2 546 4 272 10 724 44 725 104 274 4 86 4 88 78 277 8 642 2 278 4 93 4 186 4 731 2 467 4 468 4 103 4 556 36 741 2 742 4 108 2 298 10 110 4 
154 2 523 2 61 2 564 2 655 4 302 6 120 2 657 2 395 2 483 2 15 2 352 2 397 4 485 2 162 12 23 6 70 2 74 2 575 14 400 2 402 2 360 4 211 2 669 2 132 6 174 8 266 4 493 2 81 2 406 2 176 2 458 2 583 2 543 2 84 2 135 2 270 4 724 14 725 40 86 2 326 26 502 2 88 28 278 4 731 2 468 2 46 2 51 2 555 10 685 4 556 14 511 4 293 2 688 2 428 12 430 2 516 2 340 6 298 6 
100 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (120,261) (120,261) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NegativeArraySizeException 334 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 166 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V ERROR utilMDE.Assert$AssertionException (61,362) (158,185) 
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 358 238 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 326 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 326 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 326 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 326 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 326 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NoClassDefFoundError 287 389 392 82 163 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 34 252 244 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 34 252 244 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 34 252 244 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 34 252 244 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[F)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:setDiff([I[I)[I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.MathMDE:gcd(JJ)J
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd(II)I
daikon.ValueTuple:size()I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_ntk()I
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3_16()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:lexLT([I[I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:size()I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:gt(II)Z
daikon.Quant:eq(JJ)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.LimitedSizeIntSet:size()I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:lexNotEqual([I[I)Z | CONDITION | 170166 | if (x) -> if (!x)
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.ModBitTracker:split(I)I
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:intersection([I[I)[I
daikon.Quant:eltsGT([II)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:setEqual([I[I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:max([I)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:eq(II)Z
daikon.Quant:memberOf(J[J)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.Intern:intern([I)[I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61501 | = null
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:memberOf(D[F)Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Intern:numIntArrays()I
utilMDE.Intern:intern([J)[J
utilMDE.MathMDE:pow(II)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 43258 | 32 -> 33
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Quant:eltwiseLT([I)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern:intern([D)[D
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:lexGTE([I[I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:memberOf(F[D)Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.Invariant:prob_and(DDD)D | OPERATOR | 8959 | <= -> ==
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([III)[I
daikon.test.InvariantFormatTester:execute()Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:slice([III)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:union([I[I)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:lt(II)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.MathMDE:negate(I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration; | RETURN | 1735 | return null
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:eltsGteIndex([I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:memberOf(I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:lexGT([I[I)Z
daikon.ModBitTracker:num_samples()I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:readChar()C
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:eltsGTE([II)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:concat([I[I)[I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:memberOf(S[S)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsNotEqualIndex([I)Z | CONSTANT | 177979 | 0 -> 1
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([D[D)Z
daikon.ModBitTracker:num_vars()I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.ModBitTracker:num_sets()I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.ValueTuple:isMissingFlow(I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:min([I)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:sameLength([I[I)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaCharStream:ReadByte()C
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.MathMDE:sign(I)I
jtb.JavaCharStream:getEndLine()I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:eq(DD)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18499 | 1 -> -1
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.ValueTuple:isMissing(I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:gte(II)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V | CONDITION | 372 | if (x) -> if (!x)
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaCharStream:backup(I)V
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:eltsEqual([II)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:lexLTE([I[I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:noDups([I)Z
daikon.Quant:ne(II)Z
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.ProglangType:dimensions()I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 12386 | = null
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:eq(FF)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
362 2 61 2 381 2 28 2 42 2 246 2 84 4 47 2 356 2 
321 6 87 2 41 6 220 6 305 2 43 2 201 2 78 2 3 2 333 2 289 2 
327 2 67 4 80 2 16 6 1 2 178 4 272 6 362 2 61 2 323 2 19 6 8 2 401 6 
215 2 383 10 109 8 31 16 179 8 81 12 386 2 373 30 61 6 113 4 157 2 37 16 354 10 39 8 262 2 162 2 118 4 119 6 338 4 165 2 99 26 73 8 362 6 276 4 277 16 129 6 22 10 344 2 298 10 213 10 
261 4 120 4 
151 2 
146 2 383 2 109 2 176 2 31 2 81 2 218 2 373 6 37 2 354 2 68 2 195 2 196 2 290 2 119 2 99 4 276 2 208 2 277 2 128 2 22 4 298 2 213 2 
369 4 304 2 383 4 31 8 81 5 243 2 99 12 373 14 113 2 277 8 253 6 10 4 37 8 354 4 298 4 375 6 213 4 
35 6 111 2 127 2 328 2 164 2 147 2 130 2 334 2 191 2 384 2 
239 2 247 2 134 2 151 2 385 2 222 2 355 2 360 2 275 2 169 2 
48 2 107 2 108 2 51 2 54 2 61 4 112 2 7 2 114 2 62 2 157 2 224 2 115 2 13 2 294 2 234 2 17 2 74 2 297 2 171 2 174 2 177 2 241 2 246 2 133 2 250 2 187 2 353 2 91 2 93 4 310 2 312 4 311 2 263 4 391 2 200 4 197 2 203 2 362 4 322 2 141 2 210 2 46 2 214 2 
170 2 145 4 369 4 383 16 370 4 52 4 109 18 175 2 31 32 179 6 81 22 181 4 61 4 373 54 221 2 253 6 10 4 223 6 37 32 354 16 225 2 375 6 138 6 161 2 262 2 266 6 119 4 202 2 318 4 140 6 99 48 362 4 276 2 20 8 277 32 129 4 22 6 298 16 213 16 
125 2 51 2 15 2 
315 2 30 2 280 2 330 2 250 2 340 2 207 2 285 10 209 2 103 2 144 2 301 22 314 2 95 2 
148 2 12 2 14 2 166 2 
398 2 
362 2 351 2 
362 4 264 2 185 2 158 2 
55 2 57 2 149 6 329 6 59 2 6 4 282 4 283 6 284 6 226 2 63 2 160 2 376 2 123 2 233 6 339 2 18 2 75 6 23 2 296 2 380 4 238 2 240 28 173 2 79 2 83 2 245 6 33 2 180 28 308 2 249 2 182 6 186 8 255 2 352 2 188 6 259 4 260 2 388 2 313 2 192 6 139 6 357 2 358 2 390 2 194 2 316 4 317 2 268 2 393 6 100 2 320 28 101 6 324 6 399 2 363 6 102 4 400 4 211 2 325 4 105 2 
96 2 227 1 299 2 116 2 
273 2 
51 2 267 2 236 2 269 2 
131 2 51 2 267 2 172 2 236 2 269 2 
51 2 269 2 206 2 338 2 24 2 116 2 
377 2 187 2 
167 2 51 2 269 2 338 2 
98 2 56 2 
257 2 189 2 
347 2 72 2 
76 2 216 2 
66 2 76 2 189 2 
76 2 189 2 372 2 
76 2 189 2 230 2 
76 2 189 2 150 2 
49 6 51 2 371 6 152 2 350 2 269 2 229 2 365 2 
378 2 2 2 
131 2 97 2 51 2 269 2 206 2 338 2 116 2 
206 2 116 2 106 2 
11 2 206 2 116 2 
378 2 299 2 300 2 
206 2 116 2 
378 2 366 2 
379 2 116 2 
378 2 299 2 159 2 
265 2 347 2 299 2 
76 2 299 2 367 2 
56 2 219 2 299 2 
189 2 299 2 212 2 
65 2 378 2 
374 2 116 2 
142 2 347 2 
76 2 217 2 
0 2 56 2 
228 2 189 2 
378 2 190 2 
198 2 189 2 
56 2 319 2 
76 2 306 2 
274 2 347 2 
378 2 256 2 299 2 159 2 
86 2 
378 2 184 2 299 2 
378 2 299 2 271 2 
291 2 292 2 88 2 45 2 
117 2 29 2 270 2 396 2 331 4 153 2 235 2 364 2 126 2 156 2 155 2 77 2 9 2 278 2 258 2 237 4 38 2 301 6 
359 2 299 2 
193 2 
148 2 326 2 12 2 14 2 
148 2 326 2 12 2 14 2 
143 2 288 2 92 2 
143 2 288 2 92 2 
148 2 326 2 12 2 14 2 
148 2 326 2 12 2 14 2 
148 2 326 2 12 2 14 2 
346 2 303 2 82 2 247 1 85 2 134 1 254 2 287 2 309 2 389 2 64 2 163 2 392 2 204 2 395 2 362 4 27 2 
382 2 50 2 71 2 5 2 168 2 21 2 90 2 
135 2 382 2 32 2 70 2 232 2 40 2 
279 2 132 2 4 1 110 2 248 1 384 1 61 8 183 2 89 2 36 2 332 1 137 2 335 2 69 2 337 2 44 2 121 2 293 2 231 2 362 10 397 2 341 2 342 2 295 2 130 1 26 2 
170 1 302 2 383 6 109 1 31 6 179 4 81 1 281 2 58 2 181 2 349 2 61 6 373 15 154 2 253 4 10 2 353 2 224 2 37 6 354 6 138 4 361 2 394 2 99 12 362 6 20 2 277 6 129 2 298 6 213 6 
368 2 336 2 199 2 53 2 307 2 205 2 242 2 362 1 61 1 60 2 387 2 124 2 286 7 343 4 104 2 345 1 25 2 136 2 
368 2 336 2 199 2 53 2 307 2 205 2 242 2 60 4 387 2 124 4 286 6 343 4 104 2 136 2 25 4 
368 8 336 2 199 6 53 2 307 2 205 2 242 2 362 1 61 1 60 8 387 2 124 8 286 10 343 4 104 2 345 1 136 2 25 8 
336 2 53 2 307 2 205 2 242 2 60 2 387 2 124 2 286 2 343 2 104 2 136 2 25 2 
61 2 244 2 34 2 348 1 252 2 251 1 94 2 362 2 
362 2 61 2 252 2 244 2 94 2 34 2 
362 2 61 2 252 2 244 2 94 2 34 2 
362 2 61 2 252 2 244 2 94 2 34 2 
122 2 

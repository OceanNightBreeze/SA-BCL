#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 484 703 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 485 90 183 284 288 282 
daikon.test.inv.InvariantTester:test_prob_is_ge()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V FAILED junit.framework.AssertionFailedError (154,730) 416 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (368,700) (368,700) 442 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (368,700) (368,700) 442 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (218,304) 642 (135,583) 536 162 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (218,304) 642 (135,583) 536 162 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (218,304) 642 (135,583) 536 162 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (218,304) 642 (135,583) 536 162 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (218,304) 642 (135,583) 536 162 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (218,304) 642 (135,583) 536 162 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (218,304) 642 (135,583) 536 162 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR utilMDE.Assert$AssertionException (368,700) (108,467) 334 337 7 248 649 729 645 (218,304) 53 (135,583) (218,304) 642 (135,583) 536 162 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR utilMDE.Assert$AssertionException (368,700) (108,467) 334 337 7 248 649 729 645 (218,304) 53 (135,583) (218,304) 642 (135,583) 536 162 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR utilMDE.Assert$AssertionException (368,700) (108,467) 334 337 7 248 649 729 645 (218,304) 53 (135,583) (218,304) 642 (135,583) 536 162 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR utilMDE.Assert$AssertionException (368,700) (108,467) 334 337 7 248 649 729 645 (218,304) 53 (135,583) (218,304) 642 (135,583) 536 162 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 520 573 222 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 793 
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 598 286 143 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 733 278 10 345 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 733 278 10 345 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 733 278 10 345 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 733 278 10 345 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.ProglangType:baseIsFloat()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfo:new_ppt()V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.Invariant:logOn()Z
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.MathMDE:gcd([I)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaCharStream:ReadByte()C
daikon.Quant:subsetOf([J[J)Z
daikon.Debug:logOn()Z
daikon.Quant:eltsGT([II)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Ppt:Ppt()V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eq(II)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.WeakHasherMap:size()I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:jj_3R_161()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D | STATEMENT | 9149 | stmt -> ;
jtb.JavaParser:jj_3R_135()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:Node()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | CONSTANT | 15367 | 1 -> 0
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaCharStream:getEndLine()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:ne(II)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2297 | = null
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:union([I[I)[I
daikon.Quant:eltwiseGTE([I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String; | ASSIGN | 18974 | = null
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:jj_3R_69()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:concat([I[I)[I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z | CONSTANT | 31385 | 1 -> 0
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_57()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_3R_51()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:jj_2_5(I)Z
daikon.Quant:memberOf(I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:setDiff([I[I)[I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.Quant:memberOf(D[F)Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.ProglangType:isScalar()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.MathMDE:pow(II)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.ProglangType:isFloat()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_1(I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isArray()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_13()Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:lt(II)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_49()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:eltsLteIndex([I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:arity()I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isPseudoArray()Z
utilMDE.Intern:intern([D)[D
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple; | RETURN | 10267 | return null
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2308 | = null
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Intern:intern([J)[J
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:jj_ntk()I
daikon.Quant:subsetOf([I[I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.MathMDE:mod_positive(II)I
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.InvMap:InvMap()V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfo:relate_var()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaCharStream:getEndColumn()I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexGTE([I[I)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:lexLT([I[I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_3_16()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_5()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_15(I)Z
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParser:jj_3R_47()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:intersection([I[I)[I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.ProglangType:dimensions()I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:jj_3R_133()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:noDups([I)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:gt(II)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_3R_52()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.RootNode:RootNode()V
utilMDE.MathMDE:negate(I)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | CONDITION | 19542 | if (x) -> if (!x)
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | RETURN | 41719 | return null
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I | ASSIGN | 181361 | = null
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_3R_50()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2461 | return null
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoAux:hashCode()I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:gcd(JJ)J
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.Invariant:justified()Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaCharStream:readChar()C
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:jj_3R_58()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eltwiseLT([I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.PptSlice0:arity()I
jtb.JavaCharStream:backup(I)V
daikon.PptSlice1:num_samples()I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParser:jj_3_1()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName:hashCode()I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:Initializer()Ljtb.syntaxtree.Initializer;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_14()Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:getConfidence()D
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:memberOf(S[S)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.Quant:memberOf(F[D)Z
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:lexEqual([I[I)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptName:isEnterPoint()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:jj_3R_88()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONDITION | 14830 | if (x) -> if (!x)
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.Invariants:Invariants()V
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:gte(II)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:jj_3_15()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant:prob_is_ge(DD)D | CONSTANT | 6853 | 1 -> -1
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:lexGT([I[I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.Quant:slice([III)[I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:eq(FF)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration; | CONDITION | 25988 | if (x) -> if (!x)
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:jj_2_13(I)Z
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
47 2 590 2 277 2 368 2 700 2 4 2 743 2 728 2 373 4 
30 2 84 2 326 6 554 2 19 2 241 2 401 2 110 6 608 2 283 6 236 2 
441 6 187 2 41 6 368 2 317 4 541 6 355 2 307 4 103 2 252 2 527 2 700 2 578 6 
582 4 612 6 173 10 368 6 328 16 670 2 101 29 395 12 559 2 180 2 448 4 275 10 779 10 129 10 700 6 109 2 352 6 405 2 64 8 567 16 240 16 656 10 630 8 361 2 387 4 419 2 93 4 769 8 661 26 640 8 
594 4 169 6 
341 2 
78 2 575 2 238 2 273 2 546 2 154 2 506 2 653 2 
582 2 173 16 612 4 368 4 328 32 669 2 306 2 101 54 395 22 483 6 106 2 129 16 779 16 275 6 700 4 651 6 332 4 488 6 109 2 781 4 676 6 352 4 435 2 567 32 656 16 240 32 289 2 760 8 791 4 294 4 526 4 48 4 766 6 220 6 636 2 769 6 460 4 661 48 640 18 
154 2 790 2 196 2 
51 2 774 2 85 10 692 2 570 2 542 2 417 2 58 2 83 2 94 2 224 22 71 2 28 2 730 2 
582 2 746 2 173 2 612 2 328 2 101 6 395 2 230 2 396 2 8 2 698 2 129 2 779 2 275 4 185 2 474 2 63 2 567 2 656 2 240 2 626 2 661 4 640 2 
173 4 567 8 328 8 240 8 656 4 101 16 492 2 395 4 791 4 448 2 129 4 779 4 220 6 59 2 460 4 676 6 661 12 
481 2 154 8 175 2 776 4 201 2 271 2 558 4 422 2 105 4 273 4 54 2 399 2 379 2 57 4 621 2 38 2 782 4 61 4 285 2 490 2 213 2 786 4 65 10 454 2 164 4 757 4 114 4 790 2 572 2 260 62 360 2 736 2 321 4 20 2 740 2 196 6 577 2 365 14 302 10 609 4 
703 2 503 2 346 2 340 2 87 2 290 2 341 2 629 2 484 2 147 2 254 2 
2 2 584 2 586 1 5 2 308 2 310 2 697 2 590 2 591 1 397 2 11 2 485 2 700 32 486 2 12 2 206 3 487 2 207 2 210 2 315 2 704 1 705 2 411 2 707 2 216 3 215 2 599 2 116 3 601 2 495 4 322 2 119 2 323 2 120 2 324 2 498 2 604 32 500 2 501 6 713 4 225 2 223 2 714 2 327 1 614 3 615 2 33 2 508 2 229 2 126 2 616 6 617 16 721 1 231 2 37 6 723 4 726 4 39 2 622 2 40 2 237 2 518 2 138 2 733 2 734 2 43 16 628 4 738 2 343 2 437 2 525 2 634 1 639 2 442 2 747 2 348 2 749 1 52 1 156 24 158 2 445 2 250 2 647 2 648 2 753 1 56 2 652 1 60 24 163 2 256 2 654 1 539 2 67 2 262 1 167 3 362 3 263 16 548 2 366 32 461 2 369 2 368 34 370 2 176 2 777 2 556 1 74 3 560 1 76 2 274 2 375 3 672 2 183 2 469 2 81 5 279 2 282 2 284 2 783 2 381 2 566 3 288 2 86 3 682 4 385 3 291 2 292 2 386 2 88 16 89 2 794 2 90 2 687 3 297 1 298 2 301 6 581 2 199 1 
742 2 
368 4 108 2 467 2 
402 2 
392 40 97 2 691 2 585 18 482 12 588 2 104 2 9 24 592 22 701 4 204 12 15 2 593 8 111 2 409 2 412 10 595 2 709 2 596 2 320 2 21 2 602 32 710 8 418 18 712 2 606 2 607 18 610 2 715 2 124 2 31 106 613 4 226 2 718 32 329 2 719 2 510 4 511 2 127 18 35 32 618 6 36 2 130 22 128 32 722 2 427 22 727 2 333 2 335 8 433 4 516 2 137 2 42 4 436 2 737 2 146 2 438 2 439 32 635 2 440 2 637 2 50 32 528 2 247 2 644 2 646 2 251 2 55 14 351 4 538 2 353 42 66 2 455 2 456 32 356 2 357 14 261 2 69 2 544 2 761 2 658 18 764 2 659 2 168 8 265 2 172 4 772 2 666 2 462 2 463 2 552 10 267 12 177 12 268 2 671 12 179 2 79 2 561 2 276 32 376 18 675 2 184 2 280 2 470 2 677 2 678 2 473 2 186 2 785 2 190 2 787 32 189 106 568 106 193 2 476 4 685 4 686 32 576 32 688 2 390 32 796 2 198 2 477 2 579 2 580 2 
0 2 336 2 44 2 587 1 
44 2 166 2 
416 2 212 2 194 2 154 2 93 2 443 2 44 2 
194 2 44 2 46 2 
194 2 44 2 358 2 
336 2 148 2 26 2 
194 2 44 2 
148 2 17 2 
408 2 44 2 
336 2 504 2 148 2 
732 2 336 2 453 2 
468 2 336 2 517 2 
336 2 249 2 159 2 
272 2 336 2 233 2 
148 2 543 2 
789 2 44 2 
732 2 589 2 
468 2 325 2 
249 2 557 2 
272 2 153 2 
148 2 133 2 
272 2 638 2 
249 2 384 2 
468 2 287 2 
732 2 219 2 
336 2 504 2 674 2 148 2 
336 2 504 2 674 2 148 2 725 2 
336 2 752 2 148 2 
336 2 295 2 148 2 
489 2 70 2 673 2 243 2 
416 2 668 2 154 2 174 2 
416 2 212 2 668 2 154 2 174 2 152 2 
416 2 202 2 194 2 154 2 93 2 44 2 
459 2 600 2 
416 2 154 2 93 2 759 2 
34 2 249 2 
272 2 432 2 
732 2 423 2 
720 2 468 2 
272 2 468 2 429 2 
272 2 468 2 717 2 
468 2 272 2 756 2 
468 2 272 2 426 2 
154 2 416 2 496 2 277 2 479 2 
148 2 68 2 
731 2 515 2 1 2 667 2 32 4 258 2 349 2 762 2 534 2 91 2 49 2 724 2 234 4 660 2 208 2 797 2 171 2 224 6 
336 2 563 2 
486 2 
442 2 643 2 697 2 647 2 590 2 700 16 12 2 13 2 210 6 704 2 407 2 601 2 118 2 322 2 495 4 120 2 500 2 501 4 366 6 461 2 368 16 553 2 464 4 33 2 176 2 126 2 274 2 37 6 469 2 723 4 564 2 237 2 381 2 138 2 733 2 682 4 628 4 293 2 88 6 386 2 89 2 523 2 794 2 298 2 
442 2 643 2 697 2 647 2 590 2 700 16 12 2 13 2 210 6 704 2 705 1 407 2 601 2 118 2 322 2 495 4 120 2 324 1 500 2 501 5 366 6 461 2 368 16 553 2 464 4 33 2 176 2 126 2 274 2 37 6 469 2 723 4 564 2 237 2 381 2 138 2 733 2 682 4 628 4 293 2 88 6 386 2 89 2 523 2 794 2 298 2 
465 2 
363 2 745 2 
480 4 583 2 304 2 642 2 529 4 444 2 647 2 536 2 700 6 162 2 755 4 401 2 110 6 451 2 404 2 452 2 655 2 113 4 259 2 413 2 19 4 601 2 494 2 550 2 367 2 608 2 770 2 123 4 326 6 368 12 72 4 176 2 228 8 371 2 507 2 126 2 270 2 512 2 80 2 37 4 469 2 723 2 430 2 283 6 135 2 784 2 680 8 679 2 682 2 735 8 683 2 475 2 241 4 794 2 388 2 389 2 298 2 299 2 303 2 689 2 
480 4 583 2 304 2 642 2 529 4 444 2 647 2 536 2 700 6 162 2 755 4 401 2 110 8 451 2 404 2 452 2 655 2 113 4 259 2 413 2 19 4 601 2 494 2 217 4 550 2 367 2 608 2 770 2 30 2 123 4 326 6 368 12 72 4 176 2 228 8 371 2 507 2 126 2 270 2 512 2 80 2 37 4 469 2 723 2 132 2 430 2 283 8 135 2 623 2 680 8 682 2 735 8 683 2 475 2 241 4 794 2 388 2 389 2 298 2 299 2 303 2 689 2 
451 2 480 4 770 2 123 2 583 2 655 2 326 2 113 4 19 2 241 2 512 2 80 2 536 2 162 2 550 2 430 2 367 2 110 2 
480 4 583 2 304 2 642 2 529 4 444 2 647 2 536 2 700 6 162 2 755 4 401 2 110 6 451 2 404 2 452 2 655 2 113 4 259 2 413 2 19 4 601 2 494 2 550 2 367 2 770 2 30 2 123 4 326 4 368 12 72 4 176 2 228 4 371 2 507 2 126 2 270 2 512 2 80 2 37 4 469 2 723 2 430 2 283 6 135 2 784 2 680 4 679 2 682 2 735 4 683 2 475 2 241 4 794 2 388 2 389 2 298 2 299 2 303 2 689 2 
480 4 583 2 304 2 642 2 529 4 444 2 647 2 536 2 700 6 162 2 755 4 401 2 110 4 451 2 404 2 452 2 655 2 113 4 259 2 413 2 19 4 601 2 494 2 550 2 367 2 770 2 123 4 326 6 368 12 72 4 176 2 228 4 371 2 507 2 126 2 270 2 512 2 80 2 37 4 469 2 723 2 430 2 283 6 135 2 84 2 784 2 680 4 679 2 682 2 735 4 683 2 475 2 241 4 794 2 388 2 389 2 298 2 299 2 303 2 689 2 
480 4 583 2 304 2 642 2 529 4 444 2 647 2 536 2 700 6 162 2 755 4 401 2 110 6 451 2 404 2 452 2 655 2 113 4 259 2 413 2 19 4 601 2 494 2 550 2 367 2 608 2 770 2 123 4 326 6 368 12 72 4 176 2 228 8 371 2 507 2 126 2 270 2 512 2 80 2 37 4 469 2 723 2 430 2 283 6 135 2 784 2 680 4 679 2 682 2 735 4 683 2 475 2 241 4 794 2 388 2 389 2 298 2 299 2 303 2 689 2 
480 4 583 2 304 2 642 2 529 4 444 2 647 2 536 2 700 6 162 2 755 4 401 2 110 6 451 2 404 2 452 2 655 2 113 4 259 2 413 2 19 4 601 2 494 2 550 2 367 2 608 2 770 2 123 4 326 8 368 12 72 4 176 2 228 8 371 2 507 2 126 2 270 2 512 2 80 2 37 4 469 2 723 2 430 2 283 8 135 2 84 2 784 2 680 8 679 2 682 2 735 8 683 2 475 2 241 4 794 2 388 2 389 2 298 2 299 2 303 2 689 2 
480 4 583 2 304 2 642 2 529 4 444 2 647 2 536 2 700 6 162 2 755 4 401 2 110 6 451 2 404 2 452 2 655 2 113 4 259 2 413 2 19 4 601 2 494 2 550 2 367 2 608 2 770 2 123 4 326 6 368 12 72 4 176 2 228 8 371 2 507 2 126 2 270 2 512 2 80 2 37 4 469 2 723 2 430 2 283 6 135 2 784 2 680 8 679 2 682 2 735 8 683 2 475 2 241 4 794 2 388 2 389 2 298 2 299 2 303 2 689 2 
480 4 583 2 304 2 693 4 305 2 99 2 7 2 697 2 590 2 700 20 12 2 108 2 13 2 402 2 401 4 110 4 210 6 404 2 315 2 214 2 113 4 407 2 705 2 16 2 410 2 708 2 413 2 19 4 601 2 494 2 218 2 495 4 322 2 711 2 120 2 497 2 324 2 121 2 603 2 604 2 500 2 501 6 123 4 326 8 33 4 228 2 507 2 509 2 126 2 616 2 512 2 232 2 424 2 37 6 723 4 726 4 334 2 430 2 237 2 729 2 135 2 337 2 138 2 733 2 628 4 437 2 241 4 742 2 744 2 639 2 442 2 155 2 642 2 529 6 444 2 643 2 248 2 53 2 446 2 645 2 647 2 160 2 536 2 649 2 162 2 350 2 755 8 451 2 452 2 655 2 259 2 549 2 550 2 366 8 367 2 461 2 770 2 368 32 464 4 72 4 370 2 372 2 371 2 176 2 270 2 75 2 274 2 80 2 469 2 565 4 283 12 284 2 84 4 381 2 679 2 682 4 683 2 475 2 293 2 88 6 386 2 89 2 794 2 389 2 299 2 298 2 301 2 689 2 
480 4 583 2 304 2 693 4 305 2 99 2 7 2 697 2 590 2 700 20 12 2 108 2 13 2 402 2 401 4 110 8 210 6 404 2 315 2 214 2 113 4 407 2 705 2 16 2 410 2 708 2 413 2 19 4 601 2 494 2 218 2 495 4 322 2 711 2 120 2 497 2 324 2 121 2 603 2 604 2 500 2 501 6 608 4 123 4 326 8 33 4 228 6 507 2 509 2 126 2 616 2 512 2 232 2 424 2 37 6 723 4 726 6 334 2 430 2 237 2 729 2 135 2 337 2 138 2 733 2 628 4 437 4 241 4 742 2 744 2 639 4 442 2 155 2 642 2 529 6 444 2 643 2 248 2 53 2 446 2 645 2 647 2 160 2 536 2 649 2 162 2 350 2 755 8 451 2 452 2 655 2 259 2 549 2 550 2 366 8 367 2 461 2 770 2 368 32 464 4 72 4 370 4 372 2 371 2 176 2 270 2 75 2 274 2 80 2 469 2 565 4 283 12 284 2 381 2 679 2 682 4 683 2 475 2 293 2 88 6 386 2 89 2 794 2 389 2 299 2 298 2 301 2 689 2 
480 4 583 2 304 2 693 4 305 2 99 2 7 2 697 2 590 2 700 20 12 2 108 2 13 2 402 2 401 4 210 6 110 8 404 2 315 2 214 2 113 4 407 2 705 2 16 2 410 2 708 2 413 2 19 4 601 2 494 2 218 2 495 4 322 2 711 2 120 2 497 2 324 2 121 2 603 2 604 2 500 2 501 6 608 4 123 4 326 8 33 4 228 6 507 2 509 2 126 2 616 2 512 2 232 2 424 2 37 6 723 4 726 6 334 2 430 2 237 2 729 2 135 2 337 2 138 2 733 2 735 4 628 4 437 4 241 4 742 2 744 2 639 4 442 2 155 2 642 2 529 6 444 2 643 2 248 2 53 2 446 2 645 2 647 2 160 2 536 2 649 2 162 2 350 2 755 8 451 2 452 2 655 2 259 2 549 2 550 2 366 8 367 2 461 2 770 2 368 32 464 4 72 4 370 4 372 2 371 2 176 2 270 2 75 2 274 2 80 2 469 2 565 4 283 12 284 2 381 2 679 2 680 4 682 4 683 2 475 2 293 2 88 6 386 2 89 2 794 2 389 2 299 2 298 2 301 2 689 2 
480 4 583 2 304 2 693 4 305 2 99 2 7 2 697 2 590 2 700 18 12 2 108 2 13 2 402 2 401 4 210 8 110 10 404 2 315 2 214 2 113 4 407 2 705 2 410 2 708 2 413 2 19 4 601 2 494 2 218 2 495 4 322 2 711 2 120 2 497 2 324 2 121 2 603 2 604 4 500 2 501 6 608 4 30 2 123 4 326 10 33 2 228 6 507 2 509 2 126 2 616 4 512 2 232 2 424 2 37 6 723 4 726 6 334 2 430 2 237 2 729 2 135 2 337 2 138 2 733 2 735 4 628 4 437 4 241 4 742 2 744 2 639 4 442 2 347 2 155 2 642 2 529 6 444 2 643 2 248 2 53 2 157 2 446 2 645 2 532 2 647 2 536 2 161 2 649 2 162 2 350 2 755 8 451 2 452 2 655 2 259 2 549 2 550 2 366 12 367 2 461 2 770 2 665 2 368 30 464 6 72 4 370 4 372 2 371 2 176 2 270 2 75 2 274 2 80 2 469 2 380 2 565 4 283 16 284 2 84 2 381 2 679 2 680 4 682 4 683 2 475 2 293 2 88 8 386 2 89 2 794 2 389 2 298 2 299 2 301 4 689 2 
480 2 770 2 326 6 368 4 72 2 529 2 371 2 228 6 507 2 270 2 512 2 755 2 401 2 430 2 283 4 110 6 451 2 452 2 404 2 655 2 679 2 680 4 113 2 735 4 413 2 475 2 19 4 494 2 241 4 550 2 389 2 299 2 608 2 367 2 689 2 
480 2 310 2 697 2 590 2 312 2 700 24 486 2 12 2 702 3 205 2 13 2 401 2 110 6 210 6 404 2 113 2 705 2 407 2 16 2 413 2 19 4 601 2 494 2 495 4 322 2 120 2 324 2 604 3 500 2 501 6 608 2 326 6 33 4 228 6 507 2 126 2 616 3 512 2 330 2 37 6 723 4 430 2 40 2 237 2 138 2 733 2 735 2 628 4 241 4 442 2 529 2 647 2 160 2 755 2 451 2 452 2 655 2 457 2 359 2 550 2 366 8 367 2 461 2 770 2 368 28 72 2 464 4 371 2 176 2 777 2 270 2 274 2 469 2 283 4 381 2 679 2 682 4 683 2 475 2 293 2 386 2 88 6 89 2 794 2 389 2 298 2 299 2 301 3 689 2 
296 2 413 2 475 2 
296 2 413 2 475 2 
480 2 583 2 305 2 99 2 100 2 695 2 697 2 590 2 700 16 12 2 13 2 401 4 210 2 110 12 113 2 705 2 407 2 16 2 706 4 413 6 19 4 601 2 495 4 322 2 120 2 324 2 25 2 604 2 501 6 500 2 608 4 30 4 502 2 123 4 326 12 33 4 228 6 126 2 37 6 723 4 726 4 428 2 430 2 237 2 135 2 138 2 141 4 733 2 735 6 339 2 628 4 522 2 437 4 241 4 632 2 344 2 150 2 639 4 642 2 529 4 444 2 748 2 53 2 750 2 647 2 536 2 649 2 755 4 449 2 452 2 259 4 545 2 364 2 366 2 367 4 461 2 770 2 368 24 72 2 370 4 176 2 371 2 274 2 469 2 281 2 565 2 283 16 284 4 84 4 381 2 680 4 682 4 681 2 569 4 475 4 293 6 386 2 88 2 89 2 794 2 388 2 296 2 795 2 298 2 
139 2 368 4 16 2 33 2 748 2 414 2 192 2 601 2 545 2 80 2 195 2 699 2 700 2 795 2 649 2 25 2 745 2 
480 2 583 2 305 2 99 2 100 2 696 2 695 2 697 2 590 2 700 16 12 2 13 2 401 4 210 2 110 12 211 2 113 2 705 2 407 2 706 4 413 6 19 4 601 2 495 4 322 2 120 2 324 2 25 2 604 4 501 6 500 2 608 4 30 4 502 2 123 4 326 12 33 2 228 6 126 2 37 6 723 4 620 2 726 4 428 4 430 2 237 2 135 2 138 2 140 2 141 4 733 2 735 6 628 4 522 2 437 4 241 4 150 2 639 4 642 2 529 4 444 4 748 2 53 2 647 2 536 2 649 2 755 4 449 2 452 2 259 4 364 2 366 2 367 4 461 2 770 2 368 24 72 2 370 4 176 2 371 2 274 2 469 2 281 2 565 2 283 16 284 4 84 4 381 2 680 4 382 2 682 4 681 2 569 4 475 4 293 6 386 2 88 2 89 2 794 2 388 2 296 2 795 2 298 2 303 2 
480 2 583 2 305 2 99 2 100 2 695 2 697 2 590 2 700 16 12 2 13 2 401 4 210 2 110 12 113 2 705 2 407 2 16 2 706 4 413 6 19 4 601 2 495 4 322 2 120 2 324 2 25 2 604 2 501 6 500 2 420 2 608 4 30 4 502 2 123 4 326 12 33 4 228 6 126 2 37 6 723 4 726 4 428 2 430 2 237 2 135 2 138 2 141 4 733 2 735 6 628 4 522 2 437 4 241 4 150 2 639 4 642 2 529 4 444 4 748 2 53 2 647 2 536 2 649 2 755 4 449 2 452 2 259 4 458 2 545 2 364 2 366 2 367 4 461 2 770 2 368 24 72 2 370 4 176 2 371 2 274 2 469 2 378 2 281 2 565 2 283 16 284 4 84 4 381 2 680 4 188 2 682 4 681 2 569 4 475 4 293 6 386 2 88 2 89 2 794 2 388 2 296 2 795 2 298 2 95 2 303 2 
200 2 3 2 98 2 394 2 101 7 395 4 697 2 590 2 107 4 311 2 312 2 398 6 700 22 702 2 12 2 400 2 205 2 313 2 209 2 210 10 112 2 315 6 406 2 705 2 407 2 114 2 491 4 410 2 708 2 115 12 18 2 319 1 321 2 493 2 415 4 601 2 117 2 495 2 322 2 120 2 711 2 324 2 497 2 220 6 221 2 604 6 222 2 501 4 421 2 29 2 125 2 716 2 328 4 505 2 33 2 509 2 126 2 616 6 330 2 129 2 37 6 723 4 619 2 425 2 726 16 513 4 431 2 237 2 136 4 434 2 733 2 519 2 520 2 338 2 240 4 628 2 144 2 521 2 739 2 524 2 633 4 242 2 636 4 640 4 244 6 245 12 442 2 155 2 246 6 531 2 530 2 447 2 647 2 751 2 535 2 253 4 350 6 754 2 255 2 62 4 164 2 540 2 257 2 656 2 758 2 457 2 657 2 264 4 551 2 460 4 768 2 661 6 662 4 170 2 366 16 461 2 771 6 664 2 173 2 368 28 464 8 178 2 176 2 555 2 269 2 75 2 77 2 181 22 779 2 182 2 469 2 562 2 284 2 472 4 381 2 567 4 788 2 682 4 571 4 684 2 573 2 293 2 88 10 89 2 794 2 298 2 301 6 391 2 
442 2 368 2 775 2 464 2 694 2 616 3 700 2 350 6 235 2 210 2 316 2 354 4 627 2 792 2 88 2 763 2 145 2 547 2 197 3 499 2 604 3 301 3 366 2 798 2 
442 2 368 2 775 2 464 2 694 2 616 2 700 2 350 6 235 2 210 2 316 2 354 4 627 2 792 2 88 2 763 2 145 2 547 2 197 2 499 2 604 2 301 2 366 2 798 2 
442 2 368 2 775 2 464 2 694 2 616 2 700 2 350 6 235 2 210 2 316 2 354 4 627 2 792 2 88 2 763 2 145 2 547 2 197 2 499 2 604 2 301 2 366 2 798 2 
442 2 694 2 101 6 533 2 700 4 14 6 537 4 352 2 403 3 450 4 656 2 318 2 597 2 263 2 604 3 769 4 661 4 366 2 27 2 663 2 173 2 368 10 328 2 227 2 617 2 374 2 779 2 129 2 331 2 514 3 134 4 624 2 567 2 240 2 45 3 574 4 92 4 301 3 300 2 96 2 
442 2 694 2 101 4 395 2 533 2 700 4 14 6 537 4 109 2 352 2 403 2 450 4 656 2 318 2 597 2 263 2 604 2 769 4 661 4 366 2 27 2 663 2 173 2 368 10 328 2 227 2 617 2 374 2 779 2 129 2 331 2 514 2 134 4 624 2 567 2 240 2 45 2 574 4 92 4 301 2 300 2 96 2 640 2 
442 2 694 2 101 4 395 2 533 2 700 4 14 6 537 4 109 2 352 2 403 2 450 4 656 2 318 2 597 2 263 2 604 2 769 4 661 4 366 2 27 2 663 2 173 2 368 10 328 2 227 2 617 2 374 2 779 2 129 2 331 2 514 2 134 4 624 2 567 2 240 2 45 2 574 4 92 4 301 2 300 2 96 2 640 2 
442 2 694 2 101 4 395 2 533 2 700 4 14 6 537 4 109 2 352 2 403 2 450 4 656 2 318 2 597 2 263 2 604 2 769 4 661 4 366 2 27 2 663 2 173 2 368 10 328 2 227 2 617 2 374 2 779 2 129 2 331 2 514 2 134 4 624 2 567 2 240 2 45 2 574 4 92 4 301 2 300 2 96 2 640 2 
442 2 694 2 101 4 395 4 533 2 700 4 14 6 537 4 109 4 352 2 403 2 450 4 656 2 318 2 597 2 263 2 604 2 769 4 661 4 366 2 27 2 663 2 173 2 368 10 328 2 227 2 617 2 374 2 779 2 129 2 331 2 514 2 134 4 624 2 567 2 240 2 45 2 574 4 92 4 301 2 300 2 96 2 640 4 
540 2 650 2 466 2 191 2 102 2 631 2 
122 2 611 2 793 2 22 2 377 2 415 2 631 2 
286 2 213 1 368 2 393 1 143 2 598 2 342 2 647 2 422 1 23 2 700 2 767 2 314 1 151 2 471 1 
173 5 368 6 328 6 101 13 6 2 309 2 395 5 483 4 447 2 203 2 779 5 129 5 700 6 400 2 109 4 352 2 239 2 62 2 567 6 240 6 656 5 165 2 760 2 48 2 220 3 636 1 460 2 769 4 478 2 661 11 640 5 
450 2 690 2 773 4 641 2 368 1 73 1 383 2 778 7 574 2 765 2 741 2 700 1 24 2 266 2 780 2 82 2 537 2 605 2 
450 2 773 4 690 4 641 2 383 2 778 6 574 2 765 2 741 2 24 2 780 2 266 4 82 2 537 2 605 4 
450 2 773 4 690 8 641 2 368 1 73 1 383 6 778 10 574 2 765 2 741 2 700 1 24 2 780 8 266 8 82 2 537 2 605 8 
450 2 773 2 690 2 641 2 778 2 574 2 765 2 741 2 24 2 266 2 82 2 537 2 605 2 
10 2 700 2 368 2 278 2 131 1 733 2 625 1 149 2 345 2 
10 2 733 2 368 2 700 2 278 2 149 2 345 2 
10 2 733 2 368 2 700 2 278 2 149 2 345 2 
10 2 733 2 368 2 700 2 278 2 149 2 345 2 
142 2 

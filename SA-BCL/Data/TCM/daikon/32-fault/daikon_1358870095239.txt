#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException (170,301) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 306 117 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.ArrayIndexOutOfBoundsException 210 106 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 418 219 307 59 188 76 366 87 206 200 228 51 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 210 106 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.ArrayIndexOutOfBoundsException 210 106 
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.ArrayIndexOutOfBoundsException 210 106 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 210 106 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.ArrayIndexOutOfBoundsException 210 106 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.ArrayIndexOutOfBoundsException 210 106 387 33 257 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 272 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 317 226 139 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 317 226 139 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 317 226 139 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 317 226 139 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.MathMDE:pow(II)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:lexLTE([I[I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:subsetOf([J[J)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.ModBitTracker:num_vars()I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:eltsGT([II)Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I | ASSIGN | 184894 | = null
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:eltsNotEqual([II)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.PptSlice0:arity()I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([I)[I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:gt(II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:negate(I)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sum([D)D
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:eq(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:eltwiseGTE([I)Z
daikon.ModBitTracker:split(I)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:memberOf(I[I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:memberOf(F[D)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern:intern([D)[D
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Intern:intern([J)[J
daikon.Quant:eltsEqual([II)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:ne(II)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:union([I[I)[I | RETURN | 152296 | return null
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.ValueTuple:isMissing(I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:memberOf(S[S)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:intersection([I[I)[I
utilMDE.ArraysMDE:min([I)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:noDups([I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern:numIntArrays()I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.ModBitTracker:num_sets()I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:element_range([I)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 7917 | 3 -> 1
daikon.Quant:eq(II)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V | CONSTANT | 11643 | 0 -> -1
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.ProglangType:isIntegral()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoAux:hashCode()I
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Ppt:Ppt()V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:gte(II)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:jj_ntk()I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:lte(II)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:lt(II)Z
utilMDE.ArraysMDE:max([I)I
daikon.Quant:subsetOf([D[D)Z | CONDITION | 81695 | if (x) -> if (!x)
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaCharStream:BeginToken()C
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:memberOf(J[J)Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaCharStream:backup(I)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:eq(JJ)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.WeakHasherMap:size()I
jtb.JavaCharStream:getEndColumn()I
jtb.JavaCharStream:getBeginLine()I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.ProglangType:dimensions()I
utilMDE.MathMDE:gcd([I)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName:hashCode()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.ProglangType:isScalar()Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:subsetOf([B[I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | CONDITION | 19542 | if (x) -> if (!x)
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaCharStream:readChar()C
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1007 | = null
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | ASSIGN | 19872 | = null
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:eltsLT([II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:concat([I[I)[I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.MathMDE:sign(I)I
daikon.Quant:isReverse([I[I)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ValueTuple:size()I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:setEqual([I[I)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.Invariant:prob_or(DD)D
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaCharStream:ReadByte()C
daikon.ModBitTracker:num_samples()I
daikon.Quant:subsetOf([S[S)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 23040 | = null
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:setDiff([I[I)[I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONDITION | 50578 | if (x) -> if (!x)

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
244 4 167 2 233 2 268 2 47 2 408 2 314 2 347 2 6 2 
0 2 227 2 304 6 411 2 145 2 115 6 103 2 275 2 37 6 66 2 189 2 
373 6 268 2 269 2 159 6 224 2 249 2 305 4 154 2 167 2 184 4 292 6 293 6 171 2 
160 2 3 4 399 2 323 6 167 4 12 11 84 2 170 2 69 4 403 4 268 4 302 2 223 6 405 10 97 6 71 4 44 4 22 4 73 2 415 4 255 4 203 6 204 4 136 6 258 2 
264 6 60 4 
410 2 
158 2 319 2 167 4 262 2 381 2 170 2 329 2 268 4 70 2 383 2 15 2 270 2 388 2 176 2 389 2 180 2 23 2 27 2 137 2 344 2 397 2 140 2 236 2 285 2 347 2 240 2 86 2 402 2 356 2 357 4 242 2 91 4 243 2 301 2 95 2 193 2 407 2 42 2 201 2 46 2 202 2 48 4 315 2 50 4 
32 6 79 2 259 8 209 4 56 4 112 2 3 16 284 6 398 6 114 4 142 4 323 6 167 4 12 54 327 6 88 6 353 2 38 6 294 4 172 4 403 16 268 4 174 6 223 22 405 48 97 32 43 2 71 16 44 4 45 4 308 2 309 2 22 18 414 2 415 16 203 32 258 2 136 32 181 4 
2 2 118 2 319 2 
404 2 161 2 175 2 346 2 195 2 165 2 288 10 166 22 310 2 240 2 326 2 199 2 358 2 316 2 
343 2 3 2 321 2 323 4 325 2 12 6 403 2 151 2 223 2 405 4 97 2 194 2 71 2 229 2 44 2 22 2 415 2 276 2 26 2 203 2 258 2 136 2 372 2 
403 4 174 6 56 4 223 4 3 4 405 12 34 2 58 2 97 8 71 4 84 2 12 16 327 6 415 4 203 8 294 4 136 8 
53 4 54 4 109 2 1 2 345 2 281 2 2 2 397 2 319 8 9 2 63 2 64 2 118 6 291 4 216 4 185 2 65 4 14 2 382 2 221 2 92 2 40 4 192 10 364 2 124 4 332 4 386 4 125 4 127 2 21 4 177 62 335 2 25 10 132 14 198 2 202 4 48 4 49 2 28 2 205 2 
108 2 306 2 410 2 146 2 400 2 117 2 74 2 24 2 354 2 218 2 68 2 
111 2 318 2 57 4 162 4 211 2 210 2 6 2 213 2 62 2 215 2 167 10 169 2 122 2 268 10 222 4 134 2 138 2 238 2 290 4 349 2 39 2 295 2 360 2 300 2 96 2 41 2 98 2 99 2 105 2 208 2 106 2 
268 2 72 2 
268 4 20 2 298 2 
392 2 
59 2 80 2 289 2 260 2 261 2 87 2 150 2 188 2 219 2 190 2 220 2 267 2 191 2 245 2 384 2 363 2 331 2 303 2 366 2 385 2 228 2 251 2 334 2 196 2 307 2 311 20 394 20 312 2 370 2 200 2 76 2 277 2 278 2 371 2 51 2 279 20 206 2 418 2 
148 2 313 2 320 1 207 2 
126 2 207 2 
391 2 94 2 179 2 319 2 255 2 207 2 341 2 
94 2 375 2 207 2 
94 2 377 2 207 2 
336 2 147 2 313 2 
94 2 207 2 
147 2 143 2 
35 2 207 2 
337 2 147 2 313 2 
266 2 225 2 313 2 
313 2 379 2 52 2 
313 2 230 2 378 2 
313 2 235 2 67 2 
147 2 297 2 
296 2 207 2 
131 2 225 2 
85 2 52 2 
365 2 230 2 
235 2 77 2 
147 2 164 2 
235 2 163 2 
100 2 230 2 
340 2 52 2 
248 2 225 2 
337 2 147 2 351 2 313 2 
337 2 147 2 351 2 234 2 313 2 
412 2 147 2 313 2 
147 2 369 2 313 2 
31 2 
324 2 319 2 341 2 333 2 
149 2 
94 2 416 2 319 2 255 2 207 2 341 2 
95 2 186 2 
319 2 255 2 348 2 341 2 
19 2 230 2 
173 2 235 2 
330 2 225 2 
130 2 52 2 
241 2 235 2 52 2 
235 2 5 2 52 2 
254 2 235 2 52 2 
182 2 235 2 52 2 
319 2 113 2 246 6 17 2 252 6 133 2 156 2 341 2 
147 2 368 2 
299 2 247 2 374 2 237 2 166 2 273 2 11 4 183 2 75 2 168 2 104 2 396 2 265 2 
313 2 361 2 
30 2 
111 2 318 2 57 4 162 4 211 2 210 2 6 2 213 2 62 2 8 2 215 2 167 10 169 2 122 2 268 10 222 4 134 2 138 2 238 2 290 4 349 2 39 2 295 2 360 2 300 2 96 2 41 2 98 2 99 2 208 2 106 2 
111 2 318 2 57 6 162 4 210 2 211 2 6 2 213 2 62 2 8 2 215 2 167 10 169 2 122 2 268 10 222 4 338 2 339 2 134 2 138 2 238 2 290 4 349 2 39 2 295 2 360 2 300 2 96 2 41 2 98 2 99 2 208 2 106 2 
111 2 318 2 57 4 162 4 211 2 210 2 6 2 213 2 62 2 8 2 215 2 167 10 169 2 122 2 268 10 222 4 134 2 138 2 238 2 290 4 349 2 39 2 295 2 360 2 300 2 96 2 41 2 98 2 99 2 208 2 106 2 
111 2 318 2 57 6 162 4 210 2 211 2 6 2 213 2 62 2 8 2 215 2 167 10 169 2 122 2 268 10 222 4 338 2 339 2 134 2 138 2 238 2 290 4 349 2 39 2 295 2 360 2 300 2 96 2 41 2 98 2 99 2 208 2 106 2 
111 2 318 2 57 5 162 4 211 2 210 2 6 2 213 2 62 2 8 2 215 2 167 10 169 2 122 2 268 10 222 4 338 1 339 1 134 2 138 2 238 2 290 4 349 2 39 2 295 2 360 2 300 2 96 2 41 2 98 2 99 2 208 2 106 2 
107 2 111 2 318 2 57 3 162 2 210 2 211 2 376 2 6 2 213 2 215 2 214 2 62 2 167 10 119 2 217 2 122 2 268 14 222 4 387 2 271 2 24 1 338 1 339 1 134 2 29 2 138 2 282 2 33 2 36 2 290 2 238 2 349 2 352 2 401 2 354 1 89 2 295 2 360 2 90 1 362 2 300 2 153 2 41 2 98 2 367 2 155 1 99 2 257 2 106 2 
93 2 116 2 101 2 102 2 322 2 82 2 
7 2 55 2 123 2 263 2 135 2 82 2 61 2 
342 1 232 2 1 1 283 2 212 2 81 2 286 2 167 8 83 2 120 2 359 2 360 2 268 10 152 2 16 2 250 2 129 2 178 2 253 1 197 2 413 2 274 1 395 2 417 2 205 1 78 2 
110 2 403 3 174 4 3 3 405 4 193 2 97 4 142 2 71 2 128 2 272 2 12 6 350 2 415 3 328 2 203 4 294 2 136 2 
268 1 280 2 406 2 18 1 141 2 287 2 144 2 409 2 390 2 167 1 10 2 239 4 380 2 187 7 355 2 121 2 256 2 231 2 
280 2 406 2 141 4 287 2 144 2 409 2 390 4 10 2 239 4 380 2 187 6 355 4 121 2 256 2 231 2 
268 1 280 2 406 2 18 1 141 8 287 2 144 2 409 2 390 8 167 1 10 8 239 4 380 6 187 10 355 8 121 2 256 2 231 2 
280 2 406 2 141 2 287 2 144 2 409 2 390 2 239 2 187 2 355 2 121 2 256 2 231 2 
4 1 57 2 162 2 211 2 215 2 167 4 13 1 268 4 226 2 139 2 290 2 349 2 157 2 317 2 
268 4 139 2 226 2 57 3 162 2 211 2 215 2 167 4 290 2 349 2 338 1 339 1 157 2 317 2 
268 4 139 2 226 2 57 3 162 2 211 2 215 2 167 4 290 2 349 2 338 1 339 1 157 2 317 2 
215 2 290 2 167 4 268 4 139 2 349 2 57 2 226 2 162 2 211 2 157 2 317 2 
393 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 172 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (665,863) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError (690,967) 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.util.NoSuchElementException 880 1083 
utilMDE.TestUtilMDE:testIntern()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 548 729 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V FAILED junit.framework.ComparisonFailure 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V ERROR java.lang.ArrayIndexOutOfBoundsException 805 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V ERROR java.lang.ArrayIndexOutOfBoundsException 1118 
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.ArrayIndexOutOfBoundsException 805 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.ClassCastException 677 981 1041 43 (300,856) 268 (562,1213) (300,856) 267 (562,1213) 935 707 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.ClassCastException 677 981 1041 43 (300,856) 268 (562,1213) (300,856) 267 (562,1213) 935 707 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.ClassCastException 677 981 1041 43 (300,856) 268 (562,1213) (300,856) 267 (562,1213) 935 707 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.ClassCastException 677 981 1041 43 (300,856) 268 (562,1213) (300,856) 267 (562,1213) 935 707 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 504 466 240 670 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR utilMDE.Assert$AssertionException (589,1165) (589,1165) 1008 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR utilMDE.Assert$AssertionException (589,1165) (589,1165) 1008 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR utilMDE.Assert$AssertionException (589,1165) (589,1165) 1008 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR utilMDE.Assert$AssertionException (589,1165) (589,1165) 1008 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR utilMDE.Assert$AssertionException (589,1165) (589,1165) 1008 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 74 
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 518 1148 36 
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 222 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 921 1200 1073 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 512 921 1200 1073 
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 192 1073 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 921 1200 1073 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V FAILED junit.framework.AssertionFailedError (227,660) (227,660) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_180()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_110()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:jj_3R_128()Z
daikon.ProglangType:isArray()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer; | RETURN | 14085 | return null
utilMDE.ArraysMDE:max([I)I
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.MathMDE:gcd([I)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.PptSlice1:num_samples()I
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_3R_122()Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.Quant:eltwiseLT([I)Z
jtb.JavaCharStream:getEndLine()I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:lexLT([I[I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_26(I)Z
daikon.Quant:eq(FF)Z
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.Ppt:Ppt()V
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_3R_134()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_14()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:jj_3R_104()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.ArraysMDE:subarray([III)[I
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:present()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_3R_68()Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V | ASSIGN | 58129 | = null
daikon.Quant:eltwiseLTE([I)Z
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.ProglangType:isScalar()Z
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_27()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:sameLength([I[I)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:slice([III)[I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:subsetOf([B[I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParser:jj_3R_88()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_10(I)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice1:arity()I
daikon.ProglangType:dimensions()I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:concat([I[I)[I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:passes()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_78()Z
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParser:jj_3R_48()Z
daikon.inv.Invariants:Invariants()V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName:hashCode()I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_35()Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParser:jj_3R_60()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:subsetOf([D[D)Z
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaParser:jj_3_3()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_77()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_5()Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_67()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_98()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:jj_2_14(I)Z
daikon.Quant:eq(DD)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:lt(II)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_3R_74()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_2_36(I)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:jj_2_18(I)Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | CONDITION | 15342 | if (x) -> if (!x)
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.ProglangType:isIntegral()Z
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_114()Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.JavaParser:jj_3_17()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:jj_3R_105()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_73()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 3053 | = null
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:union([I[I)[I
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.JavaParser:jj_3R_56()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:subsetOf([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:gcd(JJ)J
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String; | RETURN | 10594 | return null
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:jj_3R_100()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:jj_2_25(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:setEqual([I[I)Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_2_17(I)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 4201 | 0 -> -1
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:eltsGT([II)Z
daikon.Quant:memberOf(J[J)Z
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
utilMDE.Options.OptionInfo:argument_required()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParser:jj_3R_106()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:eltsNotEqual([II)Z
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I | CONSTANT | 14018 | 108 -> 109
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple; | RETURN | 10267 | return null
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_3_16()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.LimitedSizeIntSet:add(I)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_133()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_47()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:jj_3_28()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_108()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.Node:Node()V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:execute()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter; | CONDITION | 5537 | if (x) -> if (!x)
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:gt(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:subsetOf([F[D)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParser:jj_3R_107()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_51()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
utilMDE.Intern:intern([J)[J
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_118()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | CONDITION | 14085 | if (x) -> if (!x)
daikon.Quant:lte(II)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.simplify.SimpUtil:formatInteger(J)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:backup(I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_109()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_18()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.PptName:isEnterPoint()Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:min_max([I)[I | CONDITION | 6730 | if (x) -> if (!x)
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.JavaParser:jj_3R_149()Z
daikon.Quant:gte(II)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_96()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParser:jj_3R_125()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.Invariant:logOn()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I | CONSTANT | 624 | 0 -> 1
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([D)[D
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_3_13()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:jj_3_29()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:noDups([I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_36()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_1()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:jj_3R_70()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaCharStream:ReadByte()C
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61874 | = null
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V | ASSIGN | 25295 | = null
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:isLiteralConstant()Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
utilMDE.WeakHasherMap:size()I
utilMDE.MathMDE:gcd(II)I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:jj_3_22()Z
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:jj_3R_89()Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_99()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:modulus([I)[I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:jj_3R_75()Z
daikon.Quant:eq(II)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | RETURN | 15328 | return null
jtb.JavaParser:jj_3_12()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_81()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_136()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String; | RETURN | 57496 | return null
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:jj_3R_124()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_102()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_169()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:jj_3R_80()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_20()Z
jtb.JavaParser:jj_2_13(I)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_72()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGTE([II)Z | OPERATOR | 163389 | == -> !=
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_161()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_52()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.PptSlice0:arity()I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.PptSlice2:arity()I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_3_26()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 3656 | return null
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:relate_var()V
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:jj_2_1(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String; | CONSTANT | 11304 | 2 -> 0
daikon.Quant:eltsGteIndex([I)Z | CONSTANT | 179520 | 0 -> -1
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3_21()Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_148()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_103()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:FillBuff()V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_ntk()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_137()Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_127()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_115()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Debug:logOn()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_164()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParser:jj_3_10()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:jj_3R_101()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String; | RETURN | 50824 | return null
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
658 2 589 2 337 2 631 2 99 2 1165 2 316 4 878 2 656 2 
172 2 824 2 289 2 819 2 160 2 247 2 
193 4 234 6 180 2 381 2 972 2 1165 2 1065 6 1063 6 476 4 1026 6 589 2 484 2 761 2 
38 6 287 4 150 2 1165 6 1201 16 568 13 606 29 1047 4 1169 2 757 16 718 6 1108 16 988 2 128 4 1061 2 508 10 549 8 621 10 513 8 907 10 1221 26 589 6 950 2 740 2 395 10 743 4 635 10 176 2 71 8 520 8 
665 4 863 4 
997 2 
1097 2 690 2 337 2 23 2 780 2 
38 4 251 6 1165 4 1201 32 418 4 606 57 568 23 1136 2 1048 6 757 32 718 4 809 4 810 6 465 6 1055 6 1108 32 730 2 508 16 621 6 1149 4 907 16 867 4 1221 48 136 4 1070 2 908 4 324 8 589 4 1032 6 395 16 278 4 743 2 141 2 1075 2 635 16 791 2 176 2 71 18 520 6 
690 2 1030 2 875 2 
1079 2 708 2 967 2 940 2 384 2 130 10 837 2 413 2 778 2 319 2 874 2 101 2 120 22 815 2 
600 2 38 2 1083 2 880 2 5 2 416 2 1201 2 606 6 757 2 88 2 1108 2 583 2 352 2 508 2 621 4 907 2 1221 4 395 2 635 2 332 2 
1047 2 22 2 
35 4 1042 2 109 2 40 14 1044 2 970 4 881 10 529 2 409 2 1203 2 498 2 373 2 892 2 1020 2 853 2 56 2 20 2 690 6 729 2 235 2 548 2 26 2 27 2 780 2 822 2 1030 2 875 4 
545 2 641 2 939 2 1089 2 684 2 1029 2 997 2 666 2 486 2 333 2 
286 4 1 6 598 1 2 2 919 2 445 2 603 2 605 2 295 3 1093 2 752 2 754 6 15 16 1099 2 1100 2 930 1 931 2 768 8 615 2 1105 2 308 2 1109 4 1110 2 937 12 1112 2 623 12 624 3 28 2 1116 2 478 2 629 2 783 2 1119 1 33 16 959 1 334 2 39 2 336 2 338 2 181 1 977 2 344 2 801 2 1137 24 979 2 185 2 1138 2 650 2 808 2 53 2 347 2 984 2 58 2 200 2 205 2 67 1 826 4 1158 3 829 2 669 3 70 2 521 2 208 2 672 2 1003 2 1002 1 834 2 211 2 524 2 526 32 528 2 213 1 1165 32 1008 2 681 2 683 2 844 2 685 1 1168 3 850 2 686 2 1014 2 539 32 1017 2 1022 2 380 2 1178 2 547 2 385 3 550 2 97 6 1183 2 698 2 699 2 394 2 99 2 1034 4 557 3 876 3 397 8 104 8 706 2 248 1 108 2 563 2 1043 1 111 1 255 2 1198 2 1046 2 1199 5 882 2 257 4 566 16 716 2 1205 2 118 4 1206 2 890 3 894 2 1207 4 893 2 423 2 264 2 1053 2 265 24 266 3 899 2 723 3 426 16 126 2 901 2 727 2 581 2 1215 1 905 2 734 1 273 4 1222 1 735 2 589 34 738 6 439 3 742 2 741 1 142 1 441 2 146 2 283 2 
589 2 858 2 
321 2 589 4 1076 2 
998 2 
0 2 599 4 3 2 601 2 602 2 604 30 9 2 11 4 13 2 14 2 608 58 611 4 16 6 614 6 17 2 616 2 618 2 619 2 24 2 620 4 622 2 628 2 30 2 632 6 633 2 636 4 37 2 639 2 640 4 42 4 41 2 45 4 645 12 644 44 646 2 48 2 49 2 52 2 54 20 55 2 59 2 60 94 62 2 66 94 662 2 668 2 671 2 673 4 675 2 76 2 676 2 679 4 678 2 79 4 80 62 81 2 82 4 84 2 85 2 87 4 687 2 89 4 92 4 691 2 692 2 95 2 96 2 696 2 697 50 100 4 701 2 702 388 103 24 704 8 705 4 107 12 711 4 712 2 115 4 715 4 116 2 717 4 119 2 719 20 121 4 122 2 720 2 123 2 721 2 722 4 125 50 725 2 127 2 129 100 132 2 135 2 138 2 736 2 139 4 739 2 140 2 744 20 143 90 144 4 746 76 748 2 152 90 153 2 154 2 756 94 156 94 157 2 760 76 162 90 163 2 764 4 765 6 769 2 771 2 166 16 776 2 777 4 167 2 779 2 168 2 169 2 171 52 781 4 785 2 784 6 786 8 787 2 174 2 790 2 175 94 793 6 178 2 177 2 797 16 798 2 799 20 183 2 800 2 184 2 802 2 186 94 187 2 189 2 190 2 812 2 194 2 198 2 818 24 821 2 203 2 823 2 828 2 209 2 836 2 216 4 215 2 217 2 839 2 840 2 841 2 220 2 847 2 221 2 845 4 848 2 851 2 226 2 855 2 857 244 232 4 860 2 237 4 864 2 866 2 871 2 873 2 242 2 243 2 244 6 246 50 884 4 885 2 887 2 886 4 888 58 259 12 889 2 891 2 261 2 896 2 900 2 904 6 906 4 271 2 272 4 274 2 276 8 277 94 912 2 913 2 914 4 280 2 916 2 281 6 282 2 920 2 923 20 924 94 294 2 925 2 296 2 298 2 297 8 928 20 929 20 302 2 933 12 305 4 306 2 309 50 938 40 312 2 313 2 942 18 943 6 318 2 320 14 944 2 948 2 323 2 326 2 327 2 953 2 331 6 956 2 958 2 960 2 963 8 335 6 965 8 339 244 968 2 971 2 974 2 341 2 978 2 345 2 982 4 986 42 350 2 983 2 353 4 991 8 993 2 358 2 359 2 360 2 362 2 364 2 366 44 1006 20 1007 2 368 2 1010 12 1011 62 1009 2 369 2 1012 2 370 50 372 2 1016 2 1018 2 1019 2 375 2 376 2 379 6 1024 36 382 2 1025 2 387 12 1027 2 392 2 1037 94 400 2 401 58 1040 4 405 8 407 2 406 4 411 30 414 2 415 2 419 4 420 94 1051 2 1054 4 425 2 1057 20 1058 2 1059 2 428 2 1062 2 432 30 1067 4 1066 94 433 2 1071 2 435 2 436 2 437 4 1074 6 438 2 440 6 444 2 443 2 1080 2 1082 54 1084 2 1085 2 446 2 1087 12 450 2 448 2 452 2 1090 2 1091 4 1092 4 1095 2 1098 16 460 2 459 4 462 2 463 4 1101 10 1102 2 1103 96 1107 2 468 4 467 4 1111 2 1113 16 475 244 1114 4 1115 4 479 2 480 2 1120 2 1121 2 485 4 1124 2 1125 2 488 16 489 2 493 4 492 2 491 4 1128 2 1127 2 1130 2 495 2 1131 18 1133 2 1134 8 501 44 1142 2 502 20 1143 2 505 4 1146 2 1145 2 510 2 511 4 1150 44 1152 2 1153 2 514 2 1151 2 515 2 1154 2 1155 42 517 2 519 2 522 2 1160 2 1163 2 1164 20 530 2 531 90 535 2 533 2 537 52 1174 2 541 62 1175 2 544 6 546 2 1180 2 1181 2 1182 2 551 2 552 2 553 2 554 2 555 6 558 4 1191 104 1192 2 1193 2 1195 4 1196 58 1197 2 567 4 1204 6 570 2 572 2 571 2 1208 4 573 36 574 30 1210 2 1211 12 1212 10 576 2 582 2 584 2 1220 6 586 2 1224 2 590 4 1226 2 592 2 594 2 
926 2 782 1 987 2 207 2 
926 2 442 2 
926 2 690 2 128 2 805 2 473 2 731 2 595 2 
926 2 532 2 595 2 
926 2 477 2 595 2 
1194 2 403 2 207 2 
926 2 595 2 
403 2 427 2 
926 2 565 2 
403 2 1052 2 207 2 
747 2 207 2 794 2 
763 2 703 2 207 2 
849 2 207 2 751 2 
390 2 207 2 1021 2 
403 2 481 2 
926 2 147 2 
65 2 794 2 
173 2 703 2 
932 2 751 2 
390 2 762 2 
403 2 663 2 
1118 2 
206 2 751 2 
210 2 703 2 
451 2 794 2 
403 2 1004 2 1052 2 207 2 
403 2 1004 2 1052 2 207 2 713 2 
403 2 694 2 207 2 
403 2 634 2 207 2 
25 2 1036 2 1123 2 18 2 
917 2 543 2 879 2 709 2 310 2 1086 2 388 4 218 2 343 2 458 2 911 2 461 2 86 2 120 6 807 4 262 2 1176 2 652 2 
1187 2 207 2 
690 2 290 2 731 2 256 2 
690 2 457 2 805 2 290 2 731 2 256 2 
926 2 690 2 128 2 188 2 731 2 595 2 
630 2 825 2 
690 2 128 2 212 2 731 2 
542 2 751 2 
1033 2 
1170 2 794 2 
275 2 703 2 
390 2 75 2 703 2 
390 2 365 2 703 2 
390 2 64 2 703 2 
390 2 703 2 285 2 
113 2 6 6 500 2 814 2 898 6 690 2 731 2 1000 2 
403 2 61 2 
58 2 
286 4 598 2 1 2 603 1 1093 2 1094 2 754 2 759 2 766 2 768 2 308 2 936 2 1109 2 1110 2 1112 2 937 8 773 2 623 8 783 2 338 2 647 2 344 2 979 2 185 6 1138 2 53 2 349 2 657 2 197 2 200 2 199 4 205 2 361 2 1003 2 672 2 208 2 834 2 211 2 526 6 528 2 1165 26 213 4 214 2 1008 2 844 2 850 2 539 4 1178 2 859 2 861 2 97 6 1183 2 698 2 394 2 99 2 1034 4 102 4 108 2 563 2 252 2 255 1 1046 2 883 2 257 4 716 2 118 2 1207 2 893 2 426 6 581 2 273 4 1222 2 589 26 738 5 441 4 146 2 1078 2 283 2 
286 4 598 2 1 2 919 2 603 2 1093 2 1094 2 754 2 759 2 766 2 768 2 308 2 936 2 1109 2 1110 2 770 2 1112 2 937 8 773 2 623 8 783 2 338 2 647 2 344 2 979 2 185 6 1138 2 53 2 197 2 200 2 199 4 205 2 361 2 1003 2 672 2 208 2 834 2 211 2 526 6 528 2 1165 26 1008 2 844 2 850 2 539 4 231 2 1178 2 859 2 861 2 97 6 1183 2 389 2 698 2 394 2 99 2 1034 4 102 4 108 2 563 2 252 2 255 2 1046 2 883 2 257 4 716 2 118 2 1207 2 893 2 426 6 581 2 273 4 1222 2 589 26 738 6 441 4 146 2 1078 2 283 2 
133 2 
846 2 832 2 
1161 2 525 2 749 2 4 2 289 4 1165 6 293 4 1093 2 534 6 300 2 1015 2 160 6 161 2 935 2 307 2 308 2 1110 2 233 2 311 2 1179 2 386 2 775 2 97 4 1185 2 947 2 391 2 954 2 1190 2 961 2 105 2 247 4 562 2 707 2 408 2 1046 2 114 10 257 2 1139 2 893 2 811 2 348 4 897 2 724 2 267 2 1213 2 580 2 1147 4 200 2 1064 2 732 2 733 8 273 2 589 12 824 6 204 4 205 2 664 4 667 8 593 4 1077 2 
1161 2 525 2 749 2 4 2 289 4 1165 6 293 4 1093 2 299 4 534 8 300 2 1015 2 161 2 160 6 935 2 307 2 308 2 1110 2 233 2 311 2 1179 2 386 2 97 4 1185 2 947 2 239 2 391 2 954 2 1190 2 961 2 105 2 247 4 562 2 707 2 408 2 1046 2 114 10 257 2 1139 2 893 2 811 2 348 4 897 2 724 2 267 2 1213 2 580 2 1147 4 200 2 354 2 1064 2 732 2 733 8 273 2 1223 2 589 12 824 8 204 4 205 2 664 4 667 8 593 4 
724 2 707 2 1213 2 580 2 311 2 408 2 289 2 4 2 386 2 293 2 824 2 664 4 161 2 160 2 593 4 105 2 935 2 247 2 
1161 2 525 2 749 2 4 2 289 4 1165 6 293 4 1093 2 534 6 300 2 160 4 161 2 935 2 307 2 308 2 1110 2 233 2 311 2 1179 2 386 2 775 2 97 4 1185 2 947 2 391 2 954 2 1190 2 961 2 105 2 247 4 562 2 707 2 408 2 1046 2 114 6 257 2 1139 2 893 2 811 2 348 4 897 2 724 2 267 2 1213 2 580 2 1147 4 200 2 354 2 1064 2 732 2 733 4 273 2 589 12 824 6 204 4 205 2 664 4 667 4 593 4 1077 2 
1161 2 525 2 749 2 4 2 289 4 1165 6 293 4 1093 2 534 6 300 2 160 6 161 2 935 2 307 2 308 2 1110 2 233 2 311 2 1179 2 386 2 775 2 97 4 1185 2 947 2 391 2 954 2 1190 2 961 2 105 2 247 4 562 2 707 2 408 2 1046 2 114 6 257 2 1139 2 893 2 811 2 348 4 897 2 724 2 267 2 1213 2 580 2 1147 4 200 2 1064 2 732 2 733 4 273 2 588 2 589 12 824 4 204 4 205 2 664 4 667 4 593 4 1077 2 
1161 2 525 2 749 2 4 2 289 4 1165 6 293 4 1093 2 534 6 300 2 1015 2 160 6 161 2 935 2 307 2 308 2 1110 2 233 2 311 2 1179 2 386 2 775 2 97 4 1185 2 947 2 391 2 954 2 1190 2 961 2 105 2 247 4 562 2 707 2 408 2 1046 2 114 6 257 2 1139 2 893 2 811 2 348 4 897 2 724 2 267 2 1213 2 580 2 1147 4 200 2 1064 2 732 2 733 8 273 2 589 12 824 6 204 4 205 2 664 4 667 4 593 4 1077 2 
1161 2 525 2 749 2 4 2 289 4 1165 6 293 4 1093 2 534 8 300 2 1015 2 160 8 161 2 935 2 307 2 308 2 1110 2 233 2 311 2 1179 2 386 2 775 2 97 4 1185 2 947 2 391 2 954 2 1190 2 961 2 105 2 247 4 562 2 707 2 408 2 1046 2 114 10 257 2 1139 2 893 2 811 2 348 4 897 2 724 2 267 2 1213 2 580 2 1147 4 200 2 1064 2 732 2 733 8 273 2 588 2 589 12 824 6 204 4 205 2 664 4 667 8 593 4 1077 2 
1161 2 525 2 749 2 4 2 289 4 1165 6 293 4 1093 2 534 6 300 2 1015 2 160 6 161 2 935 2 307 2 308 2 1110 2 233 2 311 2 1179 2 386 2 775 2 97 4 1185 2 947 2 391 2 954 2 1190 2 961 2 105 2 247 4 562 2 707 2 408 2 1046 2 114 10 257 2 1139 2 893 2 811 2 348 4 897 2 724 2 267 2 1213 2 580 2 1147 4 200 2 1064 2 732 2 733 8 273 2 589 12 824 6 204 4 205 2 664 4 667 8 593 4 1077 2 
286 4 1 2 749 2 289 4 4 2 449 1 603 2 293 4 454 2 10 1 8 2 1093 2 754 2 300 2 155 1 301 2 304 2 161 2 160 8 164 2 768 2 935 2 307 2 308 2 469 2 21 2 1109 2 1110 2 1112 2 937 4 311 2 623 4 775 2 315 2 947 2 322 1 330 2 955 7 961 2 43 2 46 2 647 2 648 7 344 2 47 2 185 6 979 2 804 4 1138 2 50 1 1140 1 51 2 1139 2 53 2 981 2 811 2 348 8 654 2 659 2 197 2 1147 4 200 2 204 6 824 4 205 2 664 4 998 2 1157 6 827 4 830 2 363 2 1161 2 1003 2 834 2 525 2 526 8 528 2 1165 20 838 2 1008 2 677 2 534 12 538 2 539 2 229 2 856 2 1023 2 1177 2 858 2 1178 6 233 2 859 2 1179 4 386 2 97 6 1185 2 391 2 698 2 99 2 394 2 1034 4 700 2 102 4 1038 1 105 2 247 4 1041 2 562 2 707 2 108 2 563 2 408 2 252 2 255 2 1046 2 257 4 118 2 1207 2 893 2 895 2 897 2 426 6 724 2 267 2 268 2 1213 2 580 2 581 2 1060 1 1214 2 430 2 1064 2 732 2 733 2 1069 2 273 4 1072 1 589 34 588 4 738 6 1076 2 593 4 283 2 
286 4 1 2 749 2 289 4 4 2 603 2 293 4 454 2 8 2 1093 2 754 2 300 2 301 2 304 2 161 2 160 8 164 2 768 2 935 2 307 2 308 2 469 2 21 2 1109 4 1110 2 1112 2 937 6 311 2 623 6 775 2 315 2 947 2 330 2 961 2 43 2 46 2 647 2 344 2 47 2 185 6 979 2 804 4 1138 2 51 2 1139 2 53 2 981 2 811 2 348 8 654 2 659 2 197 2 1147 4 200 2 204 6 824 8 205 2 664 4 998 2 1157 6 827 4 830 2 363 2 1161 2 1003 2 834 2 525 2 526 8 528 2 1165 20 838 2 1008 2 677 2 534 12 538 2 539 2 1015 4 229 2 856 2 1023 2 1177 2 858 2 1178 6 233 2 859 2 1179 4 386 2 97 6 1185 2 391 2 698 2 99 2 394 2 1034 4 700 2 102 4 105 2 247 4 1041 2 562 2 707 2 108 2 563 2 408 2 252 2 255 2 1046 2 257 4 118 4 1207 4 893 2 895 2 897 2 426 6 724 2 267 2 268 2 1213 2 580 2 581 2 1214 2 430 2 1064 2 732 2 733 6 1069 2 273 4 589 34 738 6 1076 2 593 4 283 2 
286 4 1 2 749 2 289 4 4 2 603 2 293 4 454 2 8 2 1093 2 754 2 300 2 301 2 304 2 161 2 160 8 164 2 768 2 935 2 307 2 308 2 469 2 21 2 1109 4 1110 2 1112 2 937 6 311 2 623 6 775 2 315 2 947 2 330 2 961 2 43 2 46 2 647 2 344 2 47 2 185 6 979 2 804 4 1138 2 51 2 1139 2 53 2 981 2 811 2 348 8 654 2 659 2 197 2 1147 4 200 2 204 6 824 8 205 2 664 4 998 2 1157 6 667 4 827 4 830 2 363 2 1161 2 1003 2 834 2 525 2 526 8 528 2 1165 20 838 2 1008 2 677 2 534 12 538 2 539 2 1015 4 229 2 856 2 1023 2 1177 2 858 2 1178 6 233 2 859 2 1179 4 386 2 97 6 1185 2 698 2 391 2 99 2 394 2 1034 4 700 2 102 4 105 2 247 4 1041 2 562 2 707 2 108 2 563 2 408 2 252 2 255 2 114 4 1046 2 257 4 118 4 893 2 1207 4 895 2 897 2 426 6 724 2 267 2 268 2 1213 2 580 2 581 2 1214 2 430 2 1064 2 732 2 733 6 1069 2 273 4 589 34 738 6 1076 2 593 4 283 2 
286 4 1 4 749 2 289 4 4 2 603 2 293 4 454 2 8 2 1093 2 607 2 754 4 300 2 301 2 304 2 161 2 160 10 164 2 768 2 935 2 165 2 307 2 308 2 469 2 21 2 1109 4 1110 2 1112 2 937 6 311 2 623 6 775 2 315 2 947 2 329 2 330 2 961 2 43 2 46 2 647 2 344 2 499 2 47 2 185 8 979 2 804 2 1138 2 51 2 1139 2 53 2 981 2 811 2 348 8 654 2 659 2 197 2 1147 4 200 2 354 2 824 10 204 6 205 2 664 4 998 2 1157 6 667 4 827 4 830 2 363 2 72 2 1161 2 1003 2 834 2 525 2 526 12 528 2 1165 18 838 2 1008 2 677 2 534 16 538 2 539 4 1015 4 229 2 856 2 1023 2 1177 2 858 2 1178 4 233 2 859 2 1179 4 386 2 97 6 238 2 1185 2 698 2 391 2 99 2 394 2 1034 4 700 2 102 6 105 2 247 4 1041 2 562 2 707 2 108 2 563 2 408 2 252 2 255 2 1046 2 114 4 257 4 118 4 893 2 1207 4 897 2 426 8 724 2 267 2 268 2 1213 2 580 2 581 2 1214 2 430 2 1064 2 732 2 733 6 1069 2 273 4 588 2 589 32 738 6 1076 2 593 4 283 2 
1161 2 525 2 408 2 4 2 289 4 114 4 534 4 1139 2 1015 2 811 2 161 2 160 6 348 2 307 2 724 2 233 2 580 2 1147 2 1179 2 311 2 1064 2 775 2 733 6 1185 2 947 2 391 2 589 4 204 2 824 6 664 2 667 4 593 2 961 2 105 2 247 4 
286 4 1 3 289 4 4 2 603 2 1093 2 754 3 160 6 161 2 307 2 308 2 1110 2 1112 2 311 2 772 2 775 2 629 2 947 2 961 2 979 2 185 6 1138 2 804 2 1139 2 53 2 811 2 348 2 58 2 197 2 1147 2 200 2 204 2 824 6 205 2 664 2 521 2 1003 2 1161 2 834 2 525 2 835 3 526 8 528 2 1165 24 1008 2 534 4 1013 2 1015 2 539 3 1178 4 233 2 1179 2 859 2 97 6 1185 2 698 2 1186 2 391 2 394 2 99 2 1034 4 102 4 245 2 105 2 247 4 108 2 563 2 408 2 252 2 255 2 1046 2 114 2 257 4 893 2 895 2 426 6 724 2 580 2 581 2 1064 2 732 2 733 6 273 4 434 2 735 2 589 28 738 6 593 2 283 2 
980 2 1064 2 307 2 
980 2 1064 2 307 2 
286 4 749 2 289 4 603 2 293 4 1093 2 7 2 1094 4 609 2 160 12 935 2 308 2 307 4 1109 4 1110 2 937 4 1112 2 311 4 623 4 625 2 627 2 954 2 1122 2 34 2 494 2 182 2 344 4 47 2 979 2 185 2 980 2 804 2 1138 2 803 2 53 2 811 2 348 4 654 2 653 4 351 2 196 2 1144 2 197 2 1147 2 200 2 354 4 995 2 204 4 824 12 205 2 664 2 667 4 827 2 1003 2 834 2 525 2 526 2 528 2 213 1 1165 16 219 2 223 2 534 16 538 2 539 2 1015 4 854 2 1178 4 859 2 1179 4 97 6 870 4 698 2 394 2 99 2 1034 4 247 4 560 2 562 2 108 2 563 2 408 2 252 6 255 2 1046 2 114 6 257 4 118 4 1207 4 893 2 897 4 426 2 267 2 268 2 1213 2 581 2 580 2 1064 6 733 6 273 4 910 2 589 24 588 4 738 6 593 2 283 2 
195 2 832 2 1178 2 509 2 1088 2 386 2 1165 2 1093 2 219 2 223 2 589 4 804 2 610 2 538 2 854 2 398 2 351 2 
286 4 749 4 289 4 603 2 293 4 1093 2 7 2 1094 4 609 2 160 12 464 2 935 2 308 2 307 4 1109 4 1110 2 937 4 1112 2 311 4 623 4 625 2 627 2 954 2 34 2 494 4 182 2 344 4 47 2 979 2 185 2 980 2 1138 2 803 2 53 2 811 2 348 4 654 2 653 4 351 2 197 2 1147 2 817 2 200 2 989 2 354 4 204 4 824 12 996 2 205 2 664 2 667 4 827 2 1003 2 834 2 525 2 526 2 528 2 1165 16 219 2 534 16 538 2 539 4 1015 4 854 2 93 2 1178 2 859 2 1179 4 97 6 870 4 698 2 394 2 99 2 1034 4 1190 2 247 4 560 2 562 2 108 2 563 2 408 2 252 6 255 2 1046 2 114 6 257 4 118 4 1207 4 893 2 897 4 426 2 267 2 268 2 1213 2 581 2 580 2 1064 6 733 6 273 4 910 2 589 24 588 4 738 6 593 2 283 2 
286 4 749 4 289 4 603 2 293 4 1093 2 7 2 1094 4 609 2 160 12 935 2 308 2 307 4 1109 4 1110 2 937 4 1112 2 311 4 623 4 625 2 627 2 482 2 954 2 34 2 494 2 182 2 344 4 47 2 979 2 185 2 980 2 804 2 1138 2 803 2 53 2 811 2 348 4 654 2 653 4 351 2 197 2 1147 2 200 2 354 4 204 4 824 12 205 2 664 2 667 4 827 2 1003 2 834 2 525 2 526 2 528 2 213 1 1165 16 219 2 223 2 534 16 538 2 539 2 1015 4 854 2 228 2 377 2 1178 4 859 2 1179 4 97 6 870 4 698 2 394 2 99 2 1034 4 1190 2 247 4 560 2 562 2 108 2 563 2 710 2 408 2 252 6 255 2 1046 2 114 6 257 4 118 4 1207 4 893 2 897 4 1056 2 426 2 267 2 268 2 1213 2 581 2 580 2 1064 6 733 6 273 4 910 2 589 24 588 4 738 6 593 2 283 2 
286 4 1 2 922 2 603 2 454 2 8 2 1093 2 753 2 754 2 758 2 158 2 766 2 768 2 308 2 466 2 1110 2 937 2 1112 2 471 2 470 2 474 2 623 2 315 2 1117 2 945 2 328 2 330 2 638 2 966 2 969 2 973 2 647 2 979 2 185 6 1138 2 651 2 53 2 503 2 655 2 504 2 659 2 200 2 512 2 820 2 356 4 661 2 205 2 357 2 670 2 830 2 1003 2 834 2 523 2 77 2 526 8 528 2 1165 18 78 2 1008 2 680 2 371 2 225 2 539 2 689 2 1177 2 378 2 1178 2 859 2 97 6 868 2 98 2 869 2 698 2 240 2 394 2 99 2 1034 4 102 4 399 2 877 2 559 2 402 2 108 2 563 2 250 2 404 2 252 2 255 2 410 2 1046 2 257 4 258 2 1050 2 893 2 422 2 575 2 426 6 726 2 728 2 581 2 131 2 273 4 909 2 589 24 738 6 145 2 283 2 
1 3 73 2 1081 2 795 4 526 2 340 1 1165 2 1008 2 754 3 647 6 185 2 539 3 577 2 426 2 617 2 507 2 862 2 992 2 29 2 589 2 915 2 32 2 102 2 68 2 999 3 
426 2 1 2 617 2 73 2 507 2 795 4 1081 2 862 2 526 2 1165 2 1008 2 29 2 992 2 647 6 754 2 589 2 185 2 32 2 915 2 539 2 102 2 68 2 999 2 577 2 
426 2 1 2 617 2 73 2 507 2 795 4 1081 2 862 2 526 2 1165 2 1008 2 29 2 992 2 647 6 754 2 589 2 185 2 32 2 915 2 539 2 102 2 68 2 999 2 577 2 
1 1 526 2 1165 2 1008 2 992 2 566 2 15 2 755 2 589 2 1225 2 536 2 591 2 539 1 396 1 813 1 1106 2 284 1 
15 2 589 2 755 2 1225 2 536 2 526 2 591 2 1165 2 1008 2 1106 2 992 2 566 2 
15 2 589 2 755 2 1225 2 536 2 526 2 591 2 1165 2 1008 2 1106 2 992 2 566 2 
15 2 589 2 755 2 1225 2 536 2 526 2 591 2 1165 2 1008 2 1106 2 992 2 566 2 
15 2 589 2 755 2 1225 2 536 2 526 2 591 2 1165 2 1008 2 1106 2 992 2 566 2 
516 2 994 2 393 2 44 2 303 2 487 2 
994 2 74 2 852 2 941 2 374 2 1104 2 766 2 
578 2 20 1 36 2 902 1 1148 2 1216 2 1165 2 822 1 137 1 589 2 1172 1 1035 2 518 2 613 2 893 2 
1108 2 94 2 508 2 907 2 1201 2 1221 4 908 2 606 6 222 2 757 2 421 2 395 2 1227 2 635 2 465 4 
148 2 253 2 527 4 1165 1 975 1 695 2 417 2 714 2 1135 2 117 2 589 1 556 6 1188 2 325 2 789 2 124 2 1039 2 1159 2 
148 4 253 2 527 4 695 4 417 2 714 2 117 2 1135 2 556 6 325 2 1188 4 789 2 124 2 1039 2 1159 2 
148 8 253 2 527 4 1165 1 975 1 695 8 417 2 714 2 117 8 1135 2 589 1 556 10 325 2 1188 8 789 2 124 6 1039 2 1159 2 
148 2 253 2 527 2 695 2 417 2 714 2 1135 2 556 2 325 2 1188 2 789 2 1039 2 1159 2 
286 2 1003 2 921 2 603 2 528 2 1165 6 455 2 623 2 1034 2 255 2 1200 2 342 1 581 2 1218 2 431 1 1073 2 589 6 738 4 
286 18 918 2 1003 2 1162 2 921 2 288 2 447 2 1005 2 603 2 528 2 213 2 1165 38 367 2 292 4 151 2 456 2 842 2 1096 2 224 2 758 4 159 2 1173 2 612 2 19 2 693 2 383 2 623 32 865 2 626 2 946 2 1028 4 949 2 483 2 241 2 951 2 1031 2 1034 18 952 2 792 2 106 2 637 2 962 2 964 2 490 2 796 2 642 2 643 2 254 2 255 2 976 2 1200 2 496 2 1202 2 497 2 569 2 1049 2 1209 2 191 2 424 2 985 2 506 2 579 4 581 2 903 2 63 2 429 4 1218 2 269 2 512 4 202 2 134 2 1219 2 1073 2 355 2 589 38 738 40 737 2 1228 2 597 2 
286 44 918 10 921 2 149 4 447 10 603 28 291 2 453 16 750 14 1096 2 12 16 927 4 159 2 934 8 767 8 19 24 472 6 314 6 623 42 170 4 946 2 31 4 949 4 952 4 788 4 957 10 792 4 1126 4 179 32 796 2 1129 4 1132 2 342 10 806 4 1141 4 346 4 191 10 192 2 503 4 57 4 985 4 816 4 201 2 1156 4 69 4 831 4 1003 6 1162 10 833 2 674 8 1005 4 528 2 213 3 1165 70 1166 24 682 8 843 4 1167 4 224 2 83 8 1171 2 540 2 90 4 91 4 688 8 230 4 236 4 693 10 865 6 1184 4 872 4 1034 36 106 10 561 4 249 4 110 8 112 16 255 30 412 2 1045 4 564 4 1200 2 260 4 263 4 1209 4 424 6 579 6 581 6 1217 4 1218 2 270 4 585 24 1068 4 1073 2 587 4 589 78 738 104 737 2 279 4 596 2 745 4 
286 6 561 2 1003 2 921 2 796 2 447 2 528 2 603 4 1165 16 255 4 213 2 1200 2 455 2 342 2 843 2 1096 2 224 2 649 2 1141 2 191 2 424 2 19 4 230 2 816 2 581 2 1218 2 472 2 314 2 623 10 1073 2 589 18 738 16 737 2 1034 6 957 2 106 2 
1001 2 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 
660 1 774 1 1189 1 990 1 227 1 317 1 

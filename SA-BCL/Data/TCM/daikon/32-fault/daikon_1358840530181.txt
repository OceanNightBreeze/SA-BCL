#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (254,403) (254,403) 221 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 84 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.util.NoSuchElementException 156 445 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 87 98 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 87 98 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 87 98 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 87 98 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 87 98 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 87 98 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 87 98 182 314 362 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V FAILED junit.framework.AssertionFailedError 268 226 
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 396 309 119 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 396 309 119 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 396 309 119 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 396 309 119 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.ArraysMDE:indexOf([II)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.Intern:intern([I)[I | RETURN | 15863 | return null
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:concat([I[I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParser:jj_3R_58()Z
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0:arity()I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_3R_69()Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_161()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:eltsLTE([II)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:setEqual([I[I)Z
daikon.Quant:gt(II)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:gte(II)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | CONDITION | 15342 | if (x) -> if (!x)
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:eq(II)Z
daikon.Quant:eltsGT([II)Z
daikon.inv.Invariants:Invariants()V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:jj_3R_50()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String; | OPERATOR | 49349 | > -> ==
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V | ASSIGN | 10801 | = null
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:gcd([I)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:memberOf(I[I)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaCharStream:ReadByte()C
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3R_56()Z
utilMDE.MathMDE:pow(II)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:eltwiseEqual([I)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.ArraysMDE:max([I)I
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.MathMDE:sign(I)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.WeakHasherMap:size()I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:setDiff([I[I)[I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:union([I[I)[I
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_3R_53()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Ppt:Ppt()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.ModBitTracker:num_vars()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_2_1(I)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:subsetOf([F[D)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:eq(FF)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:ne(II)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:jj_3R_47()Z
jtb.JavaCharStream:backup(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_3R_52()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_3R_162()Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:negate(I)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:lt(II)Z
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:jj_3R_49()Z
daikon.Quant:lexGTE([I[I)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V | STATEMENT | 9545 | stmt -> ;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:intersection([I[I)[I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType; | STATEMENT | 47994 | stmt -> ;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:jj_3_16()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_ntk()I
utilMDE.Intern:intern([J)[J
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:hashCode()I
jtb.JavaParser:jj_2_13(I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_1()Z
daikon.Quant:lte(II)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_163()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.MathMDE:pow_fast(II)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaCharStream:getBeginLine()I
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:sameLength([I[I)Z
daikon.Quant:subsetOf([J[J)Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | STATEMENT | 1433 | stmt -> ;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3R_48()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:memberOf(D[F)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(S[S)Z
daikon.Quant:eltsLT([II)Z
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaCharStream:readChar()C
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:eq(DD)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1007 | = null
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.ModBitTracker:num_samples()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONDITION | 20179 | if (x) -> if (!x)
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.MathMDE:gcd(II)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_85()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:memberOf(F[F)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:eltsEqual([II)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_133()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.Intern:numIntArrays()I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
67 2 84 2 254 2 403 2 393 2 188 2 336 4 215 2 384 2 
324 2 175 2 71 2 14 6 99 2 387 2 72 2 270 6 124 2 209 6 419 2 
280 6 55 2 69 6 176 2 220 2 285 6 46 4 92 6 311 2 254 2 403 2 431 4 245 2 
390 2 121 2 15 4 297 6 426 2 221 2 249 2 45 4 308 4 351 2 310 6 254 2 289 2 440 4 403 2 238 2 443 2 344 4 242 6 
44 4 139 6 
405 2 
84 2 0 2 157 2 31 4 380 2 143 2 57 2 48 2 438 2 234 2 429 2 239 2 184 2 95 2 116 2 444 2 37 2 171 2 329 2 26 2 
390 8 249 8 308 16 162 6 310 6 254 4 93 8 403 4 344 10 294 4 407 6 121 8 15 4 297 28 410 6 45 16 351 6 322 2 205 2 357 2 440 16 386 2 238 8 418 4 154 4 242 24 
61 2 429 2 342 2 
282 2 32 2 369 2 19 2 34 2 237 2 341 2 372 2 144 22 271 2 81 2 389 2 145 10 277 2 
247 2 390 2 425 2 249 2 308 2 310 4 373 2 70 2 434 2 121 2 15 2 297 6 45 2 20 2 440 2 238 2 105 2 156 2 445 2 242 4 
390 4 121 4 297 16 426 2 410 6 412 2 249 4 45 8 162 6 308 8 440 8 238 4 241 2 154 4 418 4 344 4 242 12 
28 10 136 2 334 4 367 2 158 2 89 2 31 4 91 4 395 2 370 2 5 4 286 4 225 2 166 2 10 2 312 4 61 2 430 2 429 8 342 6 290 14 313 2 316 2 195 4 65 2 319 4 261 2 409 10 127 2 380 4 204 4 128 4 354 2 206 2 266 4 234 2 153 2 274 62 243 2 51 4 
219 2 394 2 90 2 58 2 405 2 13 2 147 2 130 2 326 2 79 2 
87 2 1 2 3 2 254 4 399 2 403 4 315 4 169 2 12 2 11 2 295 4 98 2 345 2 17 4 178 4 437 2 233 2 47 2 75 2 360 2 107 2 276 2 135 2 
146 2 254 2 
254 4 113 2 353 2 
328 2 
109 10 4 20 110 6 111 20 6 2 339 14 338 2 112 2 9 20 8 2 227 2 228 26 343 14 230 84 346 2 120 2 348 2 123 84 16 2 350 2 126 2 232 2 355 6 356 4 21 34 22 2 235 2 236 2 359 8 240 12 131 26 363 2 134 2 248 16 368 2 138 6 29 2 140 26 141 2 251 2 33 2 375 26 39 2 40 2 262 8 42 2 377 4 265 2 381 4 382 2 383 2 267 2 385 84 50 2 275 10 155 2 52 2 53 2 54 2 281 6 284 4 159 2 160 4 56 10 398 2 163 14 168 2 401 16 292 12 172 26 174 2 173 2 296 2 411 2 299 2 300 2 414 2 181 26 76 4 183 2 78 2 420 2 88 2 189 2 305 2 427 2 190 2 306 10 307 2 191 2 193 2 192 28 194 2 198 26 433 30 200 2 320 12 203 2 321 26 439 2 442 26 327 26 210 26 213 2 106 4 212 4 214 10 217 2 332 2 446 10 
287 1 122 2 73 2 330 2 
43 2 73 2 
101 2 260 2 86 2 429 2 73 2 298 2 7 2 
101 2 73 2 63 2 
101 2 73 2 304 2 
330 2 161 2 223 2 
101 2 73 2 
424 2 223 2 
73 2 256 2 
330 2 223 2 38 2 
66 2 330 2 436 2 
330 2 64 2 83 2 
301 2 330 2 118 2 
246 2 151 2 330 2 
137 2 223 2 
73 2 361 2 
66 2 62 2 
255 2 64 2 
301 2 323 2 
246 2 231 2 
263 2 223 2 
246 2 132 2 
199 2 301 2 
64 2 413 2 
66 2 164 2 
23 2 330 2 223 2 38 2 
333 2 23 2 330 2 223 2 38 2 
408 2 330 2 223 2 
376 2 330 2 223 2 
148 2 80 2 317 2 97 2 
429 2 7 2 27 2 278 2 
167 2 429 2 298 2 7 2 27 2 278 2 
165 2 101 2 86 2 429 2 73 2 7 2 
264 2 108 2 
86 2 429 2 94 2 7 2 
301 2 74 2 
246 2 30 2 
66 2 379 2 
60 2 64 2 
246 2 273 2 64 2 
246 2 77 2 64 2 
246 2 2 2 64 2 
246 2 252 2 64 2 
422 6 7 2 429 2 115 2 100 2 415 6 272 2 279 2 
352 2 223 2 
68 2 391 4 201 2 202 2 335 2 378 2 250 2 416 2 358 2 152 2 144 6 388 2 374 2 417 2 197 2 331 4 185 2 133 2 
330 2 125 2 
207 2 
87 2 1 2 3 2 254 4 399 2 403 4 315 4 169 2 12 2 11 2 295 4 98 2 345 2 17 4 178 4 437 2 233 2 47 2 208 2 75 2 360 2 107 2 135 2 
1 2 3 2 399 2 403 4 169 2 11 2 12 2 295 4 345 2 178 4 17 4 233 2 75 2 360 2 135 2 87 2 254 4 315 6 98 2 437 2 47 2 208 2 441 2 211 2 107 2 
340 2 177 2 25 2 
340 2 177 2 25 2 
1 2 3 2 399 2 403 4 169 2 11 2 12 2 295 4 345 2 178 4 17 4 233 2 75 2 360 2 135 2 87 2 254 4 315 5 98 2 437 2 47 2 208 2 441 1 211 1 107 2 
1 2 3 2 399 2 403 4 169 2 11 2 12 2 295 4 345 2 178 4 17 4 233 2 75 2 360 2 135 2 87 2 254 4 315 6 98 2 437 2 47 2 208 2 441 2 211 2 107 2 
87 2 1 2 3 2 254 4 399 2 403 4 315 5 169 2 12 2 11 2 295 4 98 2 345 2 17 4 178 4 437 2 233 2 47 2 208 2 441 1 75 2 360 2 211 1 107 2 135 2 
1 2 3 2 399 2 403 4 169 2 12 2 11 2 295 4 345 2 349 2 17 4 178 4 233 2 75 2 182 2 360 2 362 2 302 2 135 2 366 2 87 2 187 2 371 2 254 8 428 2 314 2 315 5 257 2 98 2 437 2 47 2 102 2 441 1 103 2 211 1 107 2 
129 2 259 2 421 2 114 2 303 2 404 2 
421 2 35 2 24 2 318 2 96 2 229 2 365 2 
85 2 186 2 397 2 226 2 254 4 400 2 403 4 402 2 313 1 36 2 432 1 258 2 347 2 127 1 180 2 325 1 268 2 82 1 
390 4 283 2 142 2 249 4 162 4 308 4 337 2 288 2 253 2 170 2 344 2 293 2 406 2 121 4 297 10 45 4 351 2 440 4 269 4 238 4 154 2 242 8 
423 2 41 2 218 1 179 2 222 2 150 2 224 2 254 1 59 2 49 2 403 1 104 2 291 2 117 2 196 4 244 7 364 2 216 2 
423 2 41 4 179 2 222 4 150 2 224 2 59 2 49 2 104 2 291 2 117 2 196 4 244 6 364 2 216 4 
423 6 41 8 218 1 179 2 222 8 150 2 224 2 254 1 59 8 49 2 403 1 104 2 291 2 117 2 196 4 244 10 364 2 216 8 
41 2 179 2 222 2 150 2 224 2 49 2 104 2 291 2 117 2 196 2 244 2 364 2 216 2 
396 2 399 2 403 4 169 2 295 2 119 2 17 2 18 1 360 2 309 2 254 4 315 4 435 1 149 2 441 2 211 2 
119 2 17 2 149 2 309 2 396 2 254 4 399 2 403 4 360 2 169 2 315 2 295 2 
119 2 17 2 149 2 309 2 396 2 254 4 399 2 441 2 403 4 360 2 169 2 315 4 211 2 295 2 
119 2 17 2 149 2 309 2 396 2 254 4 399 2 441 2 403 4 360 2 169 2 315 4 211 2 295 2 
392 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException (444,452) 
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (39,369) (39,369) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 406 800 719 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (287,710) 101 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V FAILED junit.framework.AssertionFailedError 
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR utilMDE.Assert$AssertionException (603,874) (387,494) 505 260 677 472 94 224 686 (778,846) 399 (313,660) (778,846) 189 (313,660) 733 621 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR utilMDE.Assert$AssertionException (603,874) (387,494) 505 260 677 472 94 224 686 (778,846) 399 (313,660) (778,846) 189 (313,660) 733 621 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR utilMDE.Assert$AssertionException (603,874) (387,494) 505 260 677 472 94 224 686 (778,846) 399 (313,660) (778,846) 189 (313,660) 733 621 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR utilMDE.Assert$AssertionException (603,874) (387,494) 505 260 677 472 94 224 686 (778,846) 399 (313,660) (778,846) 189 (313,660) 733 621 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 275 
daikon.test.diff.XorVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 215 219 855 250 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V FAILED junit.framework.AssertionFailedError 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 243 
daikon.test.LinearTernaryCoreTest:test_format()V ERROR java.lang.NullPointerException 273 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 17 737 739 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 347 739 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 347 739 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quant:eltwiseGT([I)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D | CONSTANT | 6853 | 1 -> -1
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:slice([III)[I | OPERATOR | 160615 | == -> !=
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String; | RETURN | 7456 | return null
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Node:Node()V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61501 | = null
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_55()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant; | RETURN | 609 | return null
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | RETURN | 37622 | return null
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | RETURN | 41894 | return null
jtb.JavaCharStream:FillBuff()V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:memberOf(I[I)Z
jtb.JavaCharStream:ReadByte()C
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:jj_3_13()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.ModBitTracker:num_samples()I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:gt(II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Debug:logOn()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_or(DD)D
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:gte(II)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 4583 | = null
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.ProglangType:dimensions()I
daikon.PptSlice1:arity()I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14490 | = null
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.ArraysMDE:indexOf([I[I)I | CONSTANT | 22394 | 0 -> 1
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:setDiff([I[I)[I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3_16()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:lte(II)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_163()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:eq(JJ)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:eltwiseLT([I)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V | CONDITION | 32424 | if (x) -> if (!x)
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.ModBitTracker:num_vars()I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.PptSlice1:num_samples()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.PptSlice0:arity()I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:pairwiseLT([I[I)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quant:eltsLTE([II)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.MathMDE:negate(I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.PptSlice2:arity()I
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
utilMDE.Intern:numIntArrays()I
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_162()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.Quant:lexGTE([I[I)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.ProglangType:isIntegral()Z
daikon.ModBitTracker:split(I)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_49()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:getBeginLine()I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:subsetOf([D[D)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3R_50()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:lexLTE([I[I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfo:new_ppt()V
daikon.Quant:lexEqual([I[I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:eq(II)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.ParseException:getMessage()Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3R_57()Z
daikon.PptName:isCombinedExitPoint()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus; | RETURN | 17563 | return null
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsGT([II)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ModBitTracker:num_sets()I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:relate_var()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptName:isEnterPoint()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.ProglangType:baseIsScalar()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_161()Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object; | RETURN | 76740 | return null
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.RootNode:RootNode()V
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType; | STATEMENT | 47994 | stmt -> ;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ValueTuple:size()I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:subsetOf([J[J)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 22960 | = null
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:pow(II)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:subsetOf([F[F)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:jj_3_1()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName:hashCode()I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.ArraysMDE:min([I)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.InvMap:InvMap()V
jtb.JavaCharStream:getBeginColumn()I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Ppt:Ppt()V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.Invariant:justified()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:memberOf(F[D)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:union([I[I)[I | RETURN | 152296 | return null
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaCharStream:backup(I)V
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.ValueTuple:isMissing(I)Z
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
786 2 654 2 88 2 891 4 843 2 123 2 874 2 603 2 194 2 
389 2 435 2 66 6 773 6 4 2 851 2 887 2 383 2 191 6 93 2 605 2 
335 2 691 4 590 6 608 2 680 2 0 2 163 6 900 6 384 2 171 4 516 6 874 2 603 2 
731 2 552 5 455 2 533 6 492 8 165 4 370 12 593 4 374 2 823 2 115 5 603 4 770 2 717 2 771 8 864 6 578 4 671 2 647 10 648 6 871 6 550 5 444 2 307 4 874 4 
39 4 369 4 
197 2 
108 2 452 2 341 2 734 2 896 4 221 2 710 2 750 2 712 2 538 2 34 2 767 2 139 2 444 2 715 2 40 2 446 2 826 2 12 2 
552 16 129 6 336 2 881 4 368 4 533 4 218 6 492 32 283 6 370 56 31 6 141 6 229 4 398 8 115 16 603 4 231 4 770 2 771 32 359 4 545 6 642 2 864 6 811 2 409 4 208 4 578 18 548 2 647 48 841 6 550 16 868 2 871 32 648 22 279 4 307 16 874 4 844 2 76 2 
361 2 710 2 333 2 
43 2 65 2 498 10 20 2 252 2 852 2 56 2 136 2 617 2 287 2 140 2 142 2 859 2 248 22 
588 2 640 2 1 2 392 2 179 2 238 2 688 2 674 2 178 2 
129 6 552 4 433 2 771 8 368 4 492 8 370 16 208 4 647 12 841 6 648 4 550 4 871 8 374 2 597 2 307 4 115 4 
710 6 167 2 285 2 350 2 421 2 595 2 687 2 824 2 375 2 91 2 356 4 604 2 800 2 292 2 719 2 268 2 896 2 99 2 270 30 381 2 546 10 497 2 643 2 406 2 361 4 150 6 438 2 750 2 702 2 672 4 503 2 333 2 755 2 
197 2 390 2 795 2 424 2 233 2 692 2 437 2 528 2 156 2 124 2 
213 2 106 2 787 1 681 2 790 6 344 2 346 5 110 2 348 2 349 2 461 2 563 2 464 4 564 2 467 4 228 2 9 3 114 2 471 2 234 2 570 2 116 1 802 8 474 2 803 2 16 2 804 2 694 2 573 1 697 2 810 2 575 2 19 4 479 2 582 16 241 1 246 2 585 2 483 2 123 2 127 3 587 16 128 2 25 6 249 2 26 2 495 3 134 2 135 3 256 4 257 2 822 32 596 2 36 2 259 2 37 2 716 2 603 32 41 2 607 2 42 2 378 2 267 8 379 32 380 1 146 2 720 2 272 2 723 4 836 4 725 2 276 2 48 24 154 2 155 2 728 2 504 6 729 2 622 8 159 2 847 2 162 2 393 2 850 2 632 2 633 2 853 1 856 2 854 2 286 1 174 2 745 12 290 1 519 1 59 1 638 3 60 3 639 2 62 2 294 2 295 2 297 2 641 1 865 3 181 2 751 2 646 2 303 2 187 2 873 2 529 2 874 34 75 3 195 1 531 3 79 2 532 2 311 3 760 2 884 2 312 4 657 2 888 2 765 4 86 1 889 16 768 2 661 12 425 1 426 16 663 2 662 2 541 1 895 2 206 2 320 1 322 2 669 2 207 3 777 2 440 2 328 3 549 2 901 2 330 2 673 24 331 2 445 2 784 6 
14 2 
387 2 494 2 874 4 
130 2 
450 26 453 2 554 2 788 20 217 2 555 2 345 2 558 2 683 12 797 2 562 2 565 2 355 2 799 2 227 8 568 4 801 2 805 4 695 10 809 84 360 2 476 10 574 4 813 2 580 4 365 4 481 2 122 2 584 2 482 28 703 2 21 26 586 6 820 2 24 2 706 26 821 4 253 4 594 10 33 2 138 2 262 2 602 2 263 2 143 2 606 2 264 26 829 2 610 2 611 2 839 2 49 2 278 2 499 2 501 2 502 8 281 2 52 2 161 10 506 2 507 30 391 2 54 12 849 4 394 2 513 6 744 16 58 2 521 26 61 84 63 34 405 2 866 16 69 2 869 2 649 2 753 6 193 2 413 2 196 10 756 2 77 2 877 2 879 26 878 26 757 2 759 2 83 2 420 2 537 2 766 2 89 14 90 2 892 26 893 6 316 14 95 2 428 20 204 14 430 2 97 84 432 2 434 12 325 2 100 2 775 26 780 26 441 26 675 20 676 10 
862 2 490 1 477 2 701 2 
477 2 486 2 
717 2 101 2 710 2 477 2 664 2 631 2 96 2 
477 2 623 2 96 2 
840 2 477 2 96 2 
598 2 798 2 701 2 
477 2 96 2 
598 2 727 2 
477 2 776 2 
598 2 837 2 701 2 
354 2 164 2 701 2 
107 2 362 2 701 2 
736 2 255 2 701 2 
53 2 223 2 701 2 
598 2 493 2 
487 2 477 2 
164 2 280 2 
107 2 508 2 
7 2 255 2 
53 2 173 2 
544 2 598 2 
372 2 53 2 
29 2 255 2 
107 2 576 2 
404 2 164 2 
598 2 837 2 701 2 462 2 
598 2 329 2 837 2 701 2 462 2 
598 2 807 2 701 2 
598 2 833 2 701 2 
463 2 169 2 690 2 542 2 
560 2 101 2 509 2 710 2 
838 2 
717 2 101 2 710 2 477 2 96 2 225 2 
305 2 44 2 
786 2 101 2 18 2 710 2 
515 2 255 2 
53 2 240 2 
164 2 518 2 
107 2 363 2 
107 2 53 2 299 2 
107 2 53 2 456 2 
107 2 53 2 614 2 
107 2 417 2 53 2 
710 2 32 2 422 6 567 6 403 2 842 2 101 2 818 2 
15 2 598 2 
718 2 451 2 117 2 667 4 772 2 880 2 863 2 274 2 645 4 120 2 373 2 258 2 423 2 366 2 412 2 248 6 825 2 637 2 
693 2 701 2 
854 2 
213 2 338 2 790 4 344 2 349 2 461 2 464 4 466 2 467 2 228 2 114 2 471 2 234 2 570 2 803 2 802 2 236 2 697 2 696 4 119 4 575 2 815 2 123 2 585 2 128 2 591 2 25 2 708 2 26 2 256 4 822 4 257 4 259 2 37 2 261 2 603 26 42 2 379 6 146 4 612 2 723 4 836 2 725 2 504 2 850 2 742 2 286 2 745 8 639 2 295 2 641 2 749 2 181 2 751 2 873 2 874 26 653 2 79 6 312 2 765 4 87 2 661 8 426 6 663 2 206 2 436 2 321 2 669 2 899 2 440 2 549 2 330 2 212 2 331 2 445 2 784 6 
213 2 106 2 338 2 790 6 344 2 349 2 461 2 464 4 466 2 467 2 228 2 114 2 471 2 234 2 570 2 803 2 802 2 236 2 697 2 696 4 119 4 575 2 815 2 123 2 585 2 485 2 128 2 25 2 26 2 371 2 256 4 822 4 257 4 596 2 259 2 37 2 261 2 603 26 42 2 379 6 146 2 612 2 723 4 836 2 725 2 504 2 850 2 742 2 286 2 745 8 401 2 639 2 295 2 641 2 749 2 181 2 751 2 873 2 874 26 653 2 79 6 312 2 765 4 87 2 768 2 661 8 426 6 663 2 206 2 436 2 669 2 899 2 440 2 549 2 330 2 212 2 331 2 445 2 784 6 
655 2 
517 2 700 2 
730 2 846 2 343 2 389 4 733 2 216 2 344 2 4 2 792 4 629 4 630 2 349 2 464 2 566 2 228 2 57 2 523 2 803 2 293 10 748 2 64 2 808 2 66 6 575 2 644 4 577 4 867 8 814 2 189 2 191 6 874 12 484 2 589 2 198 4 592 2 26 2 883 2 313 2 764 2 256 2 660 2 38 4 603 6 605 4 435 2 668 2 148 2 773 6 323 2 382 2 670 2 779 2 500 2 330 2 443 2 620 8 332 2 621 2 551 2 784 4 
730 2 846 2 343 2 389 4 733 2 216 2 344 2 4 2 792 4 629 4 851 2 630 2 349 2 464 2 226 2 566 2 858 2 228 2 57 2 523 2 803 2 293 10 748 2 64 2 808 2 66 8 575 2 644 4 577 4 867 8 814 2 189 2 191 6 874 12 484 2 589 2 198 4 592 2 26 2 883 2 313 2 764 2 256 2 660 2 38 4 603 6 769 4 605 4 435 2 668 2 148 2 773 8 323 2 382 2 670 2 779 2 330 2 443 2 620 8 332 2 621 2 784 4 
389 2 748 2 343 2 733 2 808 2 148 2 66 2 323 2 792 2 644 4 630 2 764 2 779 2 660 2 38 4 191 2 621 2 605 2 
730 2 846 2 343 2 389 4 733 2 216 2 344 2 792 4 629 4 851 2 630 2 349 2 464 2 566 2 228 2 57 2 523 2 803 2 293 6 748 2 64 2 808 2 66 6 575 2 644 4 577 4 867 4 814 2 189 2 191 4 874 12 484 2 589 2 198 4 592 2 26 2 883 2 313 2 764 2 256 2 660 2 38 4 603 6 605 4 435 2 668 2 148 2 773 6 323 2 382 2 670 2 779 2 500 2 330 2 443 2 620 4 332 2 621 2 551 2 784 4 
730 2 846 2 343 2 389 4 733 2 216 2 344 2 792 4 629 4 630 2 349 2 464 2 566 2 228 2 57 2 523 2 803 2 293 6 748 2 64 2 808 2 66 4 575 2 644 4 577 4 867 4 814 2 189 2 191 6 874 12 484 2 589 2 198 4 592 2 26 2 883 2 313 2 764 2 256 2 660 2 38 4 603 6 605 4 435 2 668 2 148 2 773 6 323 2 382 2 670 2 383 2 779 2 500 2 330 2 443 2 620 4 332 2 621 2 551 2 784 4 
730 2 846 2 343 2 389 4 733 2 216 2 344 2 4 2 792 4 629 4 630 2 349 2 464 2 566 2 228 2 57 2 523 2 803 2 293 6 748 2 64 2 808 2 66 6 575 2 644 4 577 4 867 8 814 2 189 2 191 6 874 12 484 2 589 2 198 4 592 2 26 2 883 2 313 2 764 2 256 2 660 2 38 4 603 6 605 4 435 2 668 2 148 2 773 6 323 2 382 2 670 2 779 2 500 2 330 2 443 2 620 4 332 2 621 2 551 2 784 4 
730 2 846 2 343 2 389 4 733 2 216 2 344 2 4 2 792 4 629 4 630 2 349 2 464 2 566 2 228 2 57 2 523 2 803 2 293 10 748 2 64 2 808 2 66 6 575 2 644 4 577 4 867 8 814 2 189 2 191 8 874 12 484 2 589 2 198 4 592 2 26 2 883 2 313 2 764 2 256 2 660 2 38 4 603 6 605 4 435 2 668 2 148 2 773 8 323 2 382 2 670 2 383 2 779 2 500 2 330 2 443 2 620 8 332 2 621 2 551 2 784 4 
730 2 846 2 343 2 389 4 733 2 216 2 344 2 4 2 792 4 629 4 630 2 349 2 464 2 566 2 228 2 57 2 523 2 803 2 293 10 748 2 64 2 808 2 66 6 575 2 644 4 577 4 867 8 814 2 189 2 191 6 874 12 484 2 589 2 198 4 592 2 26 2 883 2 313 2 764 2 256 2 660 2 38 4 603 6 605 4 435 2 668 2 148 2 773 6 323 2 382 2 670 2 779 2 500 2 330 2 443 2 620 8 332 2 621 2 551 2 784 4 
338 2 106 2 343 2 454 4 216 2 790 6 344 2 557 2 792 4 224 2 794 2 461 2 349 2 464 4 686 2 466 2 566 2 467 2 228 2 114 4 471 2 472 2 14 2 802 2 803 2 806 2 808 2 237 2 696 4 575 2 577 8 364 2 478 2 123 2 484 2 589 2 25 2 491 2 130 2 592 2 26 2 494 2 256 4 822 2 596 2 260 2 37 2 259 2 38 4 603 20 377 2 605 4 42 2 379 8 148 2 382 2 723 4 836 2 383 4 618 4 504 2 619 2 386 2 621 2 505 2 730 2 732 2 846 2 389 4 733 2 850 2 629 6 630 2 745 4 399 2 57 2 523 2 639 2 295 2 64 2 748 2 66 4 181 2 644 4 751 2 867 2 71 2 873 2 189 2 411 2 191 8 874 32 653 2 79 6 310 2 198 4 312 2 418 2 313 2 84 2 764 2 659 2 765 4 660 2 661 4 315 2 426 6 663 2 94 2 435 4 668 2 773 12 547 2 323 2 670 2 326 2 778 2 779 2 549 2 330 2 212 2 443 2 331 2 103 2 445 2 677 2 551 2 784 6 
338 2 106 2 343 2 454 4 216 2 790 6 344 2 557 2 4 4 792 4 224 2 794 2 461 2 349 2 464 4 686 2 466 2 566 2 467 4 228 2 114 4 471 2 472 2 14 2 802 2 803 2 806 2 808 2 237 2 696 4 575 2 577 8 364 2 478 2 123 2 484 2 589 2 25 2 491 2 130 2 592 2 26 2 494 2 256 4 822 2 596 2 260 2 37 2 259 2 38 4 603 20 377 2 605 4 42 2 379 8 148 2 382 2 723 4 836 4 618 4 504 2 619 2 386 2 621 2 505 2 730 2 732 2 846 2 389 4 733 2 850 2 629 6 630 2 745 6 399 2 57 2 523 2 639 2 295 2 64 2 748 2 66 8 181 2 644 4 751 2 867 6 71 2 873 2 189 2 411 2 191 8 874 32 653 2 79 6 310 2 198 4 312 4 418 2 313 2 84 2 764 2 659 2 765 4 660 2 661 6 315 2 426 6 663 2 94 2 435 4 668 2 773 12 547 2 323 2 670 2 326 2 778 2 779 2 549 2 330 2 212 2 443 2 331 2 103 2 445 2 677 2 551 2 784 6 
338 2 106 2 343 2 454 4 216 2 790 6 344 2 557 2 4 4 792 4 224 2 794 2 461 2 349 2 464 4 686 2 466 2 566 2 467 4 228 2 114 4 471 2 472 2 14 2 802 2 803 2 806 2 808 2 237 2 696 4 575 2 577 8 364 2 478 2 123 2 484 2 589 2 25 2 491 2 130 2 592 2 26 2 494 2 256 4 822 2 596 2 260 2 37 2 259 2 38 4 603 20 377 2 605 4 42 2 379 8 148 2 382 2 723 4 836 4 618 4 504 2 619 2 620 4 386 2 621 2 505 2 730 2 732 2 846 2 389 4 733 2 850 2 629 6 630 2 745 6 399 2 57 2 639 2 523 2 293 4 295 2 64 2 748 2 66 8 181 2 644 4 751 2 867 6 71 2 873 2 189 2 411 2 191 8 874 32 653 2 79 6 310 2 198 4 312 4 418 2 313 2 84 2 764 2 659 2 765 4 660 2 661 6 315 2 426 6 663 2 94 2 435 4 668 2 773 12 547 2 323 2 670 2 326 2 778 2 779 2 549 2 330 2 212 2 443 2 331 2 103 2 445 2 677 2 551 2 784 6 
338 2 106 2 343 2 454 4 216 2 790 6 344 2 4 4 792 4 224 2 794 2 461 2 349 2 464 4 686 2 566 2 466 2 467 4 228 2 114 2 471 2 472 2 14 2 802 2 803 2 806 2 808 2 237 2 696 6 575 2 577 8 364 2 123 2 484 2 589 2 25 4 491 2 130 2 592 2 26 2 494 2 251 2 256 4 822 4 596 2 260 2 37 2 259 2 38 4 603 18 377 2 605 4 42 2 379 12 148 2 382 2 723 4 836 4 383 2 618 4 504 4 619 2 620 4 386 2 621 2 505 2 730 2 732 2 846 2 389 4 733 2 850 2 629 6 851 2 630 2 514 2 634 2 745 6 399 2 57 2 639 2 523 2 293 4 295 2 64 2 748 2 66 10 301 2 181 2 644 4 751 2 867 6 71 2 873 2 189 2 411 2 191 10 874 30 653 2 79 8 310 2 198 4 312 4 418 2 313 2 84 2 764 2 659 2 765 4 660 2 661 6 315 2 426 8 663 2 94 2 543 2 319 2 435 4 668 2 773 16 547 2 323 2 670 2 326 2 778 2 779 2 549 2 330 2 212 2 443 2 331 2 103 2 445 2 677 2 551 2 784 6 
730 2 589 2 198 2 343 2 389 4 216 2 4 2 629 2 764 2 566 2 38 2 57 2 605 4 523 2 293 4 64 2 748 2 435 2 808 2 773 4 148 2 66 6 382 2 323 2 670 2 577 2 644 2 867 6 779 2 443 2 620 4 191 6 874 4 484 2 551 2 
106 2 681 2 343 2 216 2 344 2 790 6 4 2 557 2 349 2 461 2 464 4 466 2 566 2 228 2 114 4 471 2 803 2 808 2 696 4 575 2 577 2 812 2 478 2 123 2 484 2 589 2 25 3 592 2 26 2 133 3 256 4 822 3 596 2 259 2 37 2 38 2 603 24 605 4 42 2 496 2 379 8 148 2 382 2 723 4 504 3 729 2 730 2 389 4 850 2 629 2 854 2 520 2 57 2 639 2 523 2 62 2 293 2 295 2 748 2 64 2 66 6 181 2 644 2 751 2 867 6 873 2 191 6 874 28 653 2 79 6 198 2 764 2 765 4 426 6 92 2 435 2 773 4 323 2 670 2 779 2 549 2 330 2 210 2 212 2 443 2 331 2 445 2 551 2 784 6 
730 2 589 2 650 2 
730 2 589 2 650 2 
337 2 106 2 343 2 790 6 344 2 216 2 557 2 4 4 792 4 222 2 349 2 461 2 464 4 353 2 466 2 467 4 228 2 114 4 803 2 575 2 577 4 817 2 123 2 589 6 26 2 131 2 709 2 256 4 822 2 596 2 259 2 37 2 261 4 38 2 603 16 605 4 42 2 266 2 379 2 146 2 147 2 148 2 382 2 721 2 723 4 152 2 836 4 275 2 383 4 618 2 620 4 730 4 389 4 733 2 850 2 629 4 851 4 738 2 397 4 745 4 399 2 175 2 639 2 293 6 295 2 66 12 181 2 644 2 751 2 867 6 71 2 872 2 72 2 873 2 650 2 189 2 752 2 191 12 874 24 875 4 653 2 79 2 198 2 312 4 313 2 658 2 85 2 765 4 660 2 661 4 426 2 663 4 94 2 435 4 668 4 773 16 326 2 779 4 549 2 330 2 212 6 332 2 331 2 445 2 784 6 
707 2 46 2 557 2 184 2 630 2 658 2 539 2 872 2 330 2 72 2 817 2 517 2 114 2 94 2 603 2 874 4 23 2 
106 2 343 2 790 6 344 2 216 2 4 4 792 4 222 2 459 2 349 2 461 2 464 4 353 2 466 2 467 4 228 2 114 2 803 2 575 2 577 4 814 2 123 2 589 6 26 2 131 2 709 2 256 4 822 4 596 2 259 2 37 2 261 4 38 2 376 2 603 14 605 4 42 2 266 2 379 2 146 1 148 2 835 2 382 2 723 4 152 2 836 4 275 2 383 4 618 2 385 2 620 4 730 4 389 4 733 2 848 2 850 2 629 4 851 4 738 2 397 4 745 4 399 2 639 2 293 6 295 2 66 12 181 2 644 2 751 2 867 6 71 2 872 2 873 2 650 2 189 2 752 2 191 12 874 20 875 4 653 2 79 2 198 2 883 2 312 4 313 2 658 2 85 4 765 4 660 2 661 4 426 2 663 4 435 4 668 4 773 16 326 2 779 4 549 2 330 2 212 6 332 2 331 2 445 2 784 6 
106 2 343 2 790 6 344 2 216 2 557 2 4 4 792 4 222 2 349 2 461 2 351 2 464 4 353 2 466 2 467 4 228 2 114 4 803 2 575 2 577 4 814 2 817 2 123 2 705 2 589 6 26 2 131 2 709 2 256 4 822 2 596 2 259 2 37 2 261 4 38 2 603 16 605 4 42 2 266 2 379 2 146 1 148 2 382 2 723 4 152 2 836 4 275 2 383 4 50 2 618 2 620 4 730 4 389 4 733 2 850 2 629 4 851 4 738 2 397 4 172 2 745 4 399 2 639 2 293 6 295 2 66 12 181 2 644 2 751 2 867 6 71 2 872 2 72 2 873 2 650 2 189 2 752 2 191 12 874 24 875 4 653 2 79 2 198 2 758 2 883 2 312 4 313 2 658 2 85 2 765 4 660 2 661 4 426 2 663 4 94 2 435 4 668 4 773 16 326 2 779 4 549 2 330 2 212 6 332 2 331 2 445 2 784 6 
160 2 78 2 740 2 855 2 215 2 242 2 698 2 5 2 219 2 250 2 
79 2 338 6 25 3 367 2 3 2 628 2 535 1 822 3 599 2 469 3 426 2 603 2 471 2 429 2 747 2 379 2 696 2 271 2 408 2 239 2 70 4 583 2 504 3 306 2 874 2 
79 2 338 6 25 2 367 2 3 2 628 2 822 2 599 2 469 2 426 2 603 2 471 2 429 2 747 2 379 2 696 2 271 2 408 2 239 2 70 4 583 2 504 2 306 2 874 2 
79 2 338 6 25 2 367 2 3 2 628 2 822 2 599 2 469 2 426 2 603 2 471 2 429 2 747 2 379 2 696 2 271 2 408 2 239 2 70 4 583 2 504 2 306 2 874 2 
552 2 214 2 25 3 511 2 492 2 370 6 31 4 822 3 201 2 35 2 137 2 115 2 603 2 471 2 771 2 747 2 379 2 296 3 831 3 149 2 409 2 68 2 647 4 582 2 550 2 871 2 192 3 307 2 874 4 447 2 587 2 
552 2 214 2 25 2 511 2 492 2 370 4 31 4 822 2 201 2 35 2 137 2 115 2 603 2 471 2 771 2 747 2 379 2 296 2 831 2 149 2 409 2 578 2 68 2 647 4 582 2 550 2 868 2 648 2 871 2 192 2 307 2 874 4 447 2 587 2 
552 2 214 2 25 2 511 2 492 2 370 4 31 4 822 2 201 2 35 2 137 2 115 2 603 2 471 2 771 2 747 2 379 2 296 2 831 2 149 2 409 2 578 2 68 2 647 4 582 2 550 2 868 2 648 2 871 2 192 2 307 2 874 4 447 2 587 2 
552 2 214 2 25 2 511 2 492 2 370 4 31 4 822 2 201 2 35 2 137 2 115 2 603 2 471 2 771 2 747 2 379 2 296 2 831 2 149 2 409 2 578 2 68 2 647 4 582 2 550 2 868 2 648 2 871 2 192 2 307 2 874 4 447 2 587 2 
552 2 214 2 25 2 511 2 492 2 370 4 31 4 822 2 201 2 35 2 137 2 115 2 603 2 471 2 771 2 747 2 379 2 296 2 831 2 149 2 409 2 578 4 68 2 647 4 582 2 550 2 868 4 648 4 871 2 192 2 307 2 874 4 447 2 587 2 
827 2 828 2 243 2 8 2 73 2 157 2 
827 2 388 2 339 2 82 2 236 2 273 2 762 2 
876 1 282 2 80 2 627 2 512 2 791 2 761 1 419 2 741 2 890 2 687 1 468 1 427 2 603 8 230 2 860 2 803 2 438 1 364 2 153 2 302 2 530 2 651 2 308 2 874 10 104 2 
552 6 342 2 368 2 492 6 370 16 31 4 141 4 398 2 603 6 115 6 540 2 11 2 232 2 771 6 359 2 298 2 409 2 578 2 726 2 277 2 616 2 647 12 841 4 871 6 550 6 648 3 868 2 307 6 874 6 309 2 
448 2 457 3 460 2 109 2 254 2 743 2 561 2 442 2 211 2 816 2 105 2 177 2 665 2 
448 2 457 6 220 2 460 2 109 2 254 2 168 1 743 2 561 2 442 2 211 2 113 2 816 4 874 1 603 1 105 2 177 2 665 2 
448 2 457 6 220 2 460 4 109 2 254 2 743 2 561 2 442 2 211 2 113 2 816 4 105 4 177 4 665 2 
448 2 457 10 220 8 460 8 109 2 254 2 168 1 743 2 561 2 442 2 211 2 113 6 816 4 874 1 603 1 105 8 177 8 665 2 
679 4 449 12 106 12 789 2 790 60 793 4 6 4 684 4 685 2 352 4 112 4 689 4 569 4 357 2 235 4 473 4 358 4 475 2 17 2 118 9 480 2 22 2 126 2 125 2 489 1 711 4 28 2 30 22 596 12 259 4 603 56 609 2 830 2 145 4 832 4 151 4 723 26 613 2 47 4 845 4 735 4 626 8 166 8 737 2 55 4 739 2 396 2 170 2 857 4 745 4 176 4 400 4 861 4 402 4 524 2 525 4 407 4 180 2 751 8 526 2 185 4 186 4 870 2 188 3 74 4 874 64 415 8 416 4 656 4 81 4 882 4 534 8 885 4 886 28 199 1 765 30 314 4 203 4 318 8 205 6 324 2 327 4 898 4 102 4 331 8 334 1 782 4 783 8 
678 2 845 2 553 2 340 2 625 2 735 2 790 42 556 2 510 2 166 2 458 2 682 2 6 2 737 2 284 2 796 2 347 2 111 2 739 2 465 2 288 2 635 4 745 38 10 2 289 2 636 2 291 2 861 2 13 2 357 2 235 2 402 2 746 2 118 2 17 2 300 2 182 2 183 4 751 2 67 2 410 2 579 2 480 2 527 2 870 2 121 2 190 2 245 2 704 2 652 2 874 46 22 4 819 2 415 2 656 2 27 2 132 2 534 4 28 2 886 6 763 2 765 20 200 6 314 2 259 2 714 2 202 2 600 2 603 44 431 2 318 4 265 4 666 2 205 6 98 2 269 2 145 2 45 2 146 2 324 2 151 2 723 20 47 2 209 2 615 2 781 2 331 2 158 4 783 4 51 2 
785 2 449 14 679 4 106 30 790 104 2 4 682 10 793 4 6 4 796 2 684 4 347 2 111 10 559 8 352 4 112 4 689 4 569 4 470 2 473 4 235 4 358 4 571 4 475 4 118 10 17 2 572 2 699 2 480 2 581 4 244 16 22 2 126 2 488 32 711 4 28 2 30 30 596 28 259 2 713 16 601 4 603 70 609 2 830 2 144 8 145 4 832 4 722 16 151 4 723 36 724 4 47 4 624 16 845 4 735 4 626 8 166 10 737 2 55 4 739 2 396 4 857 4 288 10 745 14 400 4 861 4 522 8 402 4 524 2 525 4 180 4 751 6 526 2 185 4 186 4 870 2 304 8 188 8 74 4 874 78 754 4 414 4 415 6 416 4 656 6 81 4 534 10 885 4 886 24 765 44 314 4 203 4 317 8 318 10 205 6 98 2 774 2 324 2 897 2 327 4 898 4 209 2 439 8 102 8 331 6 783 10 782 4 
678 2 845 4 106 12 789 10 790 40 735 2 166 2 6 4 737 2 347 2 739 2 685 2 396 2 745 14 861 2 235 4 402 4 475 4 17 2 118 2 180 2 751 2 480 2 870 2 188 6 247 2 874 28 22 2 125 2 415 2 489 2 656 2 534 6 28 2 886 8 30 6 199 2 536 2 765 14 596 12 314 2 259 2 603 26 894 2 318 6 609 2 205 4 98 2 145 2 146 2 45 2 834 2 324 2 151 4 723 14 613 2 47 4 331 2 783 6 
395 2 

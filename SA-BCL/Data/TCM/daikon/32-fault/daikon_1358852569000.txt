#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 70 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (64,279,314,619,622) (64,279,314,619,622) (64,279,314,619,622) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (510,517) 58 (94,110) 597 433 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (510,517) 58 (94,110) 597 433 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (510,517) 58 (94,110) 597 433 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (510,517) 58 (94,110) 597 433 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (510,517) 58 (94,110) 597 433 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (510,517) 58 (94,110) 597 433 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (510,517) 58 (94,110) 597 433 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (510,517) 58 (94,110) 597 433 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (510,517) 58 (94,110) 597 433 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (510,517) 58 (94,110) 597 433 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (510,517) 58 (94,110) 597 433 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 644 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 644 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 631 625 36 237 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 56 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 19 350 655 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 19 350 655 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 19 350 655 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 19 350 655 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | OPERATOR | 4882 | == -> <
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfo:relate_var()V
utilMDE.MathMDE:gcd([I)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 913 | = null
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:max([I)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:hashCode()I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:eq(II)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:setDiff([I[I)[I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13809 | = null
daikon.PptName:isEnterPoint()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:slice([III)[I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.ModBitTracker:num_samples()I
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.inv.ValueSet:ValueSet(I)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel; | RETURN | 571 | return null
daikon.diff.InvMap:InvMap()V
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([D[F)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.Invariant:justified()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:lexLTE([I[I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsLT([II)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.ArraysMDE:sum([I)I
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:jj_ntk()I
utilMDE.ArraysMDE:min_max([I)[I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.Debug:logDetail()Z
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.PptSlice0:arity()I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:hashCode()I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.ProglangType:dimensions()I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Ppt:Ppt()V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.Invariant:logOn()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:memberOf(F[F)Z
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:gt(II)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Intern:intern([I)[I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsEqual([II)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:setEqual([I[I)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.MathMDE:sign(I)I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:memberOf(J[J)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:subsetOf([D[D)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.ArraysMDE:min([I)I
daikon.Quant:memberOf(I[I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V | ASSIGN | 581 | = null
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:eq(FF)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.Invariant:logDetail()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:getConfidence()D
daikon.Quant:subsetOf([S[S)Z
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:eltsNotEqualIndex([I)Z | CONSTANT | 177979 | 0 -> 1
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I | CONSTANT | 65761 | 0 -> 1
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.MathMDE:negate(I)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:lte(II)Z
daikon.diff.Node:Node()V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaCharStream:getEndLine()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.ModBitTracker:num_sets()I
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.RootNode:RootNode()V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:backup(I)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:subsetOf([F[D)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.ArraysMDE:sum([D)D
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eq(JJ)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexEqual([I[I)Z
daikon.PptSlice1:arity()I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 22726 | = null
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaCharStream:BeginToken()C | CONSTANT | 4375 | 0 -> 1
daikon.Debug:logOn()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.PptSlice1:num_samples()I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 2678 | return null
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I | ASSIGN | 67827 | = null
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaCharStream:readChar()C
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ValueTuple:size()I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | OPERATOR | 15357 | == -> <
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String; | ASSIGN | 18974 | = null
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lt(II)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:eltsLTE([II)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.MathMDE:pow(II)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:ReadByte()C
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice; | RETURN | 38994 | return null
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.ModBitTracker:split(I)I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:noDups([I)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.WeakHasherMap:size()I
daikon.ProglangType:baseIsIntegral()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.Quant:concat([I[I)[I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice2:arity()I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:isReverse([I[I)Z | CONDITION | 156037 | if (x) -> if (!x)
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:gte(II)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String; | CONSTANT | 11304 | 2 -> 0
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:numIntArrays()I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.MathMDE:gcd_differences([I)I | CONSTANT | 5121 | 0 -> 1
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:sameLength([I[I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaCharStream:getBeginLine()I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType; | RETURN | 7895 | return null
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(DD)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:baseIsFloat()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.PptName:isCombinedExitPoint()Z
daikon.ModBitTracker:num_vars()I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:union([I[I)[I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V | ASSIGN | 1742 | = null
utilMDE.ArraysMDE:sum([[I)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:eltwiseGT([I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:eltsGT([II)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:eltsLtIndex([I)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:eltwiseLT([I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfo:new_ppt()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.FormatTestCase:passes()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:subsetOf([F[F)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:gcd(II)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:lexLT([I[I)Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([D)[D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:intersection([I[I)[I
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
536 2 548 4 609 2 80 2 206 2 574 2 26 2 608 2 582 2 
178 2 302 6 8 2 639 6 186 2 339 2 88 6 602 2 21 2 315 2 177 2 
457 2 634 2 70 2 381 2 75 2 1 2 505 2 547 4 112 2 
353 6 248 14 335 6 231 14 511 4 539 1 427 3 464 1 338 2 143 1 359 3 297 9 519 6 582 5 282 2 62 8 376 2 308 11 42 5 451 3 658 11 398 2 609 5 222 6 483 1 197 5 348 2 133 3 
276 6 587 4 
316 2 
535 4 136 2 336 2 233 2 185 2 142 2 340 2 7 2 412 2 281 2 282 2 375 2 616 2 586 2 65 2 588 2 380 2 506 2 292 2 456 2 25 2 204 2 422 2 461 2 642 2 38 2 122 2 41 2 127 4 608 2 329 2 568 4 481 2 331 2 300 2 263 2 532 2 
353 22 248 57 551 2 440 4 335 16 2 4 231 48 511 6 409 4 557 2 4 4 143 2 35 2 359 4 297 32 519 16 582 4 560 2 394 4 584 4 62 6 42 16 308 32 564 6 606 6 366 6 243 6 451 18 653 4 658 32 417 6 609 4 222 16 176 6 348 2 197 4 116 2 319 2 227 8 
269 2 646 2 642 2 
342 2 496 2 593 2 268 22 86 2 214 2 164 2 425 2 649 2 598 10 247 2 49 2 298 2 412 2 
403 2 353 2 248 6 293 2 335 2 231 4 490 2 512 2 297 2 519 2 521 2 149 2 62 4 42 2 308 2 310 2 47 2 651 2 451 2 658 2 222 2 348 2 197 2 
394 4 353 4 584 4 248 16 42 4 308 8 606 6 335 4 231 12 427 2 556 2 235 2 658 8 417 6 222 4 297 8 519 4 
635 6 219 2 123 2 465 2 246 2 15 2 534 2 274 2 
200 2 626 2 467 2 543 2 363 2 395 2 115 2 316 2 624 2 226 2 
179 2 137 2 491 2 371 2 372 1 100 4 577 1 582 20 279 2 344 2 497 6 585 1 498 2 14 2 64 2 244 2 155 2 346 2 347 2 620 2 622 2 379 2 453 2 504 2 195 2 590 1 317 2 320 2 207 2 424 2 76 2 600 4 34 2 80 2 39 4 643 2 365 2 328 2 256 2 128 2 171 6 93 2 92 4 402 2 482 2 609 22 174 2 
230 2 609 2 
633 2 523 2 609 4 
645 2 
385 2 97 2 460 2 509 2 423 18 271 2 163 2 489 2 118 2 79 2 296 2 82 2 469 2 471 18 37 18 431 2 559 2 581 2 603 2 121 2 447 2 473 2 343 2 11 2 124 2 12 2 126 2 309 2 43 2 546 2 257 2 46 2 502 2 172 2 657 2 18 2 66 2 400 2 401 2 419 2 67 2 290 2 
330 2 52 2 541 2 125 1 
260 2 
287 2 234 2 659 2 452 2 52 2 642 2 133 2 
234 2 52 2 215 2 
234 2 495 2 52 2 
541 2 513 2 
234 2 52 2 
202 2 580 2 
52 2 147 2 
251 2 541 2 580 2 
515 2 541 2 83 2 
541 2 194 2 485 2 
135 2 541 2 285 2 
436 2 541 2 5 2 
580 2 240 2 
52 2 595 2 
515 2 617 2 
448 2 194 2 
611 2 285 2 
436 2 159 2 
63 2 580 2 
436 2 162 2 
661 2 285 2 
194 2 526 2 
515 2 615 2 
251 2 541 2 580 2 368 2 
251 2 541 2 580 2 368 2 349 2 
9 2 541 2 580 2 
541 2 333 2 580 2 
258 2 103 2 468 2 361 2 
287 2 85 2 642 2 499 2 
287 2 85 2 452 2 573 2 642 2 499 2 
287 2 234 2 52 2 642 2 54 2 133 2 
480 2 41 2 
287 2 78 2 642 2 133 2 
613 2 285 2 
436 2 156 2 
515 2 117 2 
458 2 194 2 
436 2 640 2 194 2 
436 2 114 2 194 2 
436 2 194 2 44 2 
436 2 188 2 194 2 
23 2 542 2 642 2 472 2 563 2 528 6 287 2 131 6 
354 2 580 2 
228 2 60 2 628 2 146 4 148 2 268 6 74 2 255 2 345 2 555 4 337 2 101 2 113 2 410 2 238 2 223 2 225 2 187 2 
541 2 16 2 
128 2 
179 2 491 6 184 3 100 4 277 2 411 2 579 3 582 26 497 4 498 6 14 2 346 2 195 2 291 3 201 2 508 2 205 2 207 2 424 2 600 4 33 2 34 2 358 2 39 4 40 2 522 2 365 2 435 2 607 2 217 2 529 2 530 2 609 26 369 2 438 4 137 2 138 2 442 2 371 2 141 2 540 2 57 2 306 4 61 4 244 2 155 2 312 2 620 2 157 2 379 2 453 2 160 2 317 6 318 2 320 2 323 5 630 2 253 2 80 2 392 8 641 2 325 2 643 2 326 2 327 2 328 2 171 6 92 4 93 2 261 2 262 2 402 2 174 2 486 2 
0 2 179 2 491 6 184 2 100 4 277 2 411 2 579 2 582 26 283 2 497 5 498 6 14 2 346 2 347 1 195 2 291 2 508 2 205 2 207 2 424 2 600 4 33 2 34 2 358 2 39 4 40 2 522 2 365 2 607 2 217 2 529 2 130 2 609 26 369 2 438 4 137 2 138 2 442 2 371 2 141 2 540 2 57 2 306 4 61 4 244 2 155 2 312 2 620 2 157 2 379 2 453 2 160 2 317 6 318 2 320 2 323 4 630 2 253 2 80 2 392 8 641 2 325 2 643 2 326 2 327 2 328 2 171 6 397 2 92 4 93 2 261 2 262 2 482 1 402 2 174 2 486 2 
407 2 
520 2 405 2 
95 2 302 6 178 2 404 2 96 2 137 2 55 2 612 2 443 4 58 2 373 2 341 4 582 6 545 2 190 4 307 4 13 2 151 8 110 2 152 2 286 4 618 8 501 8 416 2 346 2 379 2 453 2 315 4 21 2 198 2 455 2 68 2 351 2 71 2 549 2 387 2 424 2 597 2 553 2 390 2 600 2 639 6 429 2 517 2 433 2 643 2 434 2 88 6 216 2 566 2 527 4 171 4 479 2 92 2 570 2 609 12 174 2 94 2 177 4 
95 2 302 8 178 2 404 2 572 4 96 2 137 2 55 2 612 2 443 4 58 2 373 2 582 6 341 4 374 2 241 2 545 2 190 4 307 4 13 2 151 8 110 2 286 4 152 2 618 8 501 8 416 2 346 2 379 2 453 2 315 4 21 2 198 2 455 2 68 2 351 2 549 2 387 2 424 2 597 2 553 2 390 2 600 2 639 8 429 2 602 2 517 2 433 2 643 2 434 2 88 6 216 2 566 2 527 4 171 4 479 2 92 2 609 12 174 2 94 2 177 4 
302 2 96 2 549 2 307 4 88 2 110 2 286 4 152 2 597 2 612 2 390 2 479 2 443 2 373 2 315 2 198 2 433 2 177 2 
95 2 302 6 178 2 404 2 96 2 137 2 55 2 612 2 443 4 58 2 373 2 341 4 582 6 545 2 190 4 307 4 13 2 151 4 110 2 152 2 286 4 618 4 501 4 416 2 346 2 379 2 453 2 315 4 198 2 455 2 68 2 351 2 71 2 549 2 387 2 424 2 597 2 553 2 390 2 600 2 639 6 429 2 602 2 517 2 433 2 643 2 434 2 88 4 216 2 566 2 527 4 171 4 479 2 92 2 570 2 609 12 174 2 94 2 177 4 
95 2 302 4 178 2 404 2 96 2 137 2 55 2 612 2 443 4 186 2 58 2 373 2 341 4 582 6 545 2 190 4 307 4 13 2 151 4 110 2 152 2 286 4 618 4 501 4 416 2 346 2 379 2 453 2 315 4 198 2 455 2 68 2 351 2 71 2 549 2 387 2 424 2 597 2 553 2 390 2 600 2 639 6 429 2 517 2 433 2 643 2 434 2 88 6 216 2 566 2 527 4 171 4 479 2 92 2 570 2 609 12 174 2 94 2 177 4 
95 2 302 6 178 2 404 2 96 2 137 2 55 2 612 2 443 4 58 2 373 2 341 4 582 6 545 2 190 4 307 4 13 2 151 8 110 2 152 2 286 4 618 4 501 4 416 2 346 2 379 2 453 2 315 4 21 2 198 2 455 2 68 2 351 2 71 2 549 2 387 2 424 2 597 2 553 2 390 2 600 2 639 6 429 2 517 2 433 2 643 2 434 2 88 6 216 2 566 2 527 4 171 4 479 2 92 2 570 2 609 12 174 2 94 2 177 4 
95 2 302 6 178 2 404 2 96 2 137 2 55 2 612 2 443 4 186 2 58 2 373 2 341 4 582 6 545 2 190 4 307 4 13 2 151 8 110 2 152 2 286 4 618 8 501 8 416 2 346 2 379 2 453 2 315 4 21 2 198 2 455 2 68 2 351 2 71 2 549 2 387 2 424 2 597 2 553 2 390 2 600 2 639 8 429 2 517 2 433 2 643 2 434 2 88 8 216 2 566 2 527 4 171 4 479 2 92 2 570 2 609 12 174 2 94 2 177 4 
95 2 302 6 178 2 404 2 96 2 137 2 55 2 612 2 443 4 58 2 373 2 341 4 582 6 545 2 190 4 307 4 13 2 151 8 110 2 152 2 286 4 618 8 501 8 416 2 346 2 379 2 453 2 315 4 21 2 198 2 455 2 68 2 351 2 71 2 549 2 387 2 424 2 597 2 553 2 390 2 600 2 639 6 429 2 517 2 433 2 643 2 434 2 88 6 216 2 566 2 527 4 171 4 479 2 92 2 570 2 609 12 174 2 94 2 177 4 
178 4 179 2 334 2 182 2 488 2 491 8 493 6 186 4 6 2 341 4 497 6 190 6 13 2 498 6 14 2 500 1 346 2 347 2 193 2 195 2 198 2 351 2 508 2 205 2 510 2 28 1 207 2 27 2 30 2 34 2 39 4 517 2 518 1 362 2 522 2 364 2 365 2 524 2 216 2 45 6 217 2 527 8 529 2 531 1 50 2 369 4 230 6 537 2 232 1 55 2 371 2 57 2 373 2 58 2 59 4 61 4 545 2 244 2 378 2 245 1 379 2 68 2 71 2 549 2 73 2 387 2 249 2 552 7 553 2 250 6 390 2 253 2 392 4 80 2 88 8 396 2 254 6 566 2 92 4 93 2 402 12 94 2 95 2 404 4 96 2 406 6 98 6 575 6 100 4 576 1 411 2 105 4 579 2 278 2 413 6 582 24 107 6 108 6 286 4 110 2 416 2 418 6 589 2 291 2 424 2 294 2 597 2 599 6 600 4 429 2 433 2 434 2 605 2 609 46 301 2 302 4 134 2 137 2 439 2 441 2 612 2 305 2 443 4 444 2 614 1 449 7 307 4 151 2 152 2 155 2 620 2 453 2 160 2 315 4 317 6 455 2 320 2 627 8 459 2 323 2 166 6 633 6 466 2 324 2 637 2 639 12 167 2 643 2 645 6 328 2 648 1 652 2 171 6 479 2 482 2 174 2 175 10 177 4 
95 2 178 4 179 2 404 4 96 2 406 6 334 2 488 2 98 6 182 2 491 8 493 6 575 6 100 4 6 2 411 4 105 4 278 2 579 2 413 6 341 4 582 26 497 6 190 6 498 6 13 2 14 2 107 6 108 6 110 2 286 4 416 2 346 2 347 2 193 2 418 6 195 2 21 4 198 2 589 2 291 2 351 2 508 4 205 4 510 2 27 2 207 2 30 2 294 2 424 2 597 2 599 6 600 4 34 2 429 2 39 4 517 2 433 2 362 2 434 2 212 2 522 2 364 2 524 2 365 2 605 2 216 2 45 6 217 2 527 8 529 2 367 2 609 48 301 2 50 2 302 8 134 2 369 4 230 6 438 2 137 2 439 2 441 2 537 2 55 2 612 2 371 2 305 2 443 4 444 2 57 2 58 2 373 2 59 4 61 4 545 2 307 4 151 6 244 2 152 2 155 2 378 2 620 2 379 2 453 2 160 2 315 4 455 2 68 2 317 6 627 8 320 2 459 2 71 2 323 2 73 2 549 2 249 2 387 2 553 2 250 6 633 6 166 6 390 2 324 2 466 2 637 2 253 2 639 12 80 2 392 8 167 2 643 2 645 6 254 6 396 2 88 8 328 2 566 2 652 2 171 6 479 2 93 2 92 4 402 12 482 2 174 2 175 10 94 2 177 4 
95 2 178 4 179 2 404 4 96 2 406 6 334 2 488 2 98 6 182 2 491 8 493 6 575 6 100 4 6 2 411 4 105 4 278 2 579 2 413 6 341 4 582 26 497 6 190 6 498 6 13 2 14 2 107 6 108 6 110 2 286 4 501 4 416 2 346 2 347 2 193 2 418 6 195 2 21 4 198 2 589 2 291 2 351 2 508 4 205 4 510 2 27 2 207 2 30 2 294 2 424 2 597 2 599 6 600 4 34 2 429 2 39 4 517 2 433 2 362 2 434 2 212 2 522 2 364 2 524 2 365 2 605 2 216 2 45 6 217 2 527 8 529 2 367 2 609 48 301 2 50 2 302 8 134 2 369 4 230 6 438 2 137 2 439 2 441 2 537 2 55 2 612 2 371 2 305 2 443 4 444 2 57 2 58 2 373 2 59 4 61 4 545 2 307 4 151 6 244 2 152 2 618 4 155 2 378 2 620 2 379 2 453 2 160 2 315 4 455 2 317 6 68 2 627 8 320 2 459 2 71 2 323 2 73 2 549 2 249 2 387 2 553 2 250 6 633 6 166 6 390 2 324 2 466 2 637 2 253 2 639 12 80 2 392 8 167 2 643 2 645 6 254 6 396 2 88 8 328 2 566 2 652 2 171 6 479 2 93 2 92 4 402 12 482 2 174 2 175 10 94 2 177 4 
178 4 179 2 334 2 182 2 488 2 491 12 493 6 186 2 6 2 341 4 497 6 190 6 13 2 498 8 14 2 191 6 501 4 17 6 503 2 346 2 347 2 193 2 195 2 21 4 198 2 351 2 508 4 205 4 510 2 207 2 27 2 30 2 32 6 34 2 39 4 517 2 362 2 212 2 522 2 364 2 365 2 524 2 216 2 45 6 217 2 527 8 529 4 367 2 50 2 369 4 230 12 537 2 55 2 538 2 371 2 57 4 373 2 58 2 59 4 61 6 545 2 244 2 378 2 379 2 68 2 71 2 549 2 73 2 387 2 249 2 553 2 250 12 390 2 253 2 392 10 80 2 562 2 88 10 396 2 254 6 566 2 92 4 93 2 399 2 402 10 94 2 95 2 404 4 96 2 406 12 270 6 98 6 575 6 100 4 411 4 105 4 579 4 278 2 413 12 582 24 415 6 107 6 108 6 286 4 110 2 416 2 418 6 589 2 591 2 291 4 592 2 424 2 294 2 597 2 426 6 599 6 600 4 429 2 602 2 432 6 433 2 434 2 605 2 609 52 301 2 302 10 134 2 438 2 137 2 439 2 441 2 139 2 612 2 305 2 443 4 444 2 145 6 307 4 151 6 450 2 152 2 155 2 618 4 620 2 453 2 160 2 315 4 455 2 317 8 320 2 627 8 459 2 323 4 166 6 633 12 324 2 466 2 637 2 639 16 643 2 645 12 328 2 477 6 652 2 171 6 479 2 482 2 174 2 175 8 177 4 
178 2 302 6 71 2 351 2 96 2 549 2 387 2 55 2 553 2 612 2 390 2 639 4 373 2 341 2 434 2 190 2 545 2 13 2 307 2 151 6 88 6 216 2 566 2 527 2 286 2 152 2 618 4 501 4 479 2 416 2 609 4 21 2 315 4 177 4 68 2 
178 2 179 2 96 2 491 8 100 4 102 2 579 3 341 2 582 24 497 6 190 2 13 2 498 6 14 2 286 2 111 2 416 2 346 2 347 2 195 2 21 2 199 2 291 3 351 2 207 2 424 2 600 4 34 2 429 2 39 4 434 2 522 2 365 2 128 2 216 2 217 2 527 2 609 28 302 6 51 3 369 2 229 2 137 2 55 2 371 2 612 2 373 2 61 4 545 2 307 2 151 6 152 2 244 2 155 2 618 2 619 2 620 2 314 2 379 2 453 2 315 4 317 6 68 2 320 2 71 2 323 3 549 2 387 2 463 2 553 2 390 2 253 2 639 4 80 2 167 2 643 2 88 6 328 2 566 2 171 6 479 2 92 4 93 2 482 2 402 4 332 2 174 2 175 2 177 4 
416 2 55 2 384 2 
416 2 55 2 384 2 
95 2 178 4 179 2 96 4 267 2 491 2 99 2 100 4 186 4 411 4 105 2 582 16 341 2 494 4 497 6 190 4 498 2 13 2 14 2 110 2 286 2 501 4 346 2 416 2 347 2 195 2 21 4 22 2 508 4 205 4 207 2 424 2 597 2 119 2 514 2 600 4 34 2 39 4 602 4 211 2 522 2 365 2 217 2 527 4 609 24 302 12 369 6 137 2 55 4 371 2 141 4 443 2 58 2 59 2 446 2 544 2 307 2 377 2 151 6 244 2 152 2 155 2 618 6 620 2 379 2 453 2 160 4 315 4 384 2 317 2 320 2 72 2 323 2 549 2 387 2 639 16 392 4 80 2 643 2 644 2 254 2 88 12 328 2 89 2 650 2 171 6 656 4 92 4 93 2 482 2 402 4 174 2 175 2 177 4 
405 2 180 2 267 2 203 2 137 2 377 2 254 2 89 2 324 2 402 2 609 4 382 2 175 2 105 2 198 2 278 2 582 2 
95 2 178 4 179 2 404 4 96 4 267 2 491 2 100 4 186 4 411 4 341 2 582 16 494 4 497 6 190 4 498 2 13 2 14 2 110 2 286 2 501 4 346 2 416 4 347 2 195 2 21 4 22 2 508 4 205 4 207 2 294 2 424 2 597 2 119 2 514 2 600 4 34 2 39 4 602 4 211 4 522 2 365 2 217 2 527 4 609 24 132 2 302 12 369 6 137 2 55 6 371 2 305 2 141 4 443 4 58 2 59 2 446 2 307 2 377 2 151 6 244 2 152 2 155 2 618 6 620 2 379 2 453 2 160 4 315 4 384 2 455 2 317 2 320 2 629 2 459 2 322 2 72 2 323 4 549 2 387 2 466 2 639 16 392 4 80 2 643 2 644 2 561 2 254 2 88 12 328 2 89 2 650 2 567 2 171 6 654 2 656 4 92 4 93 2 482 2 402 2 174 2 484 2 94 2 177 4 
178 4 179 2 404 4 96 4 267 2 491 2 100 4 186 4 411 4 105 2 582 16 341 2 494 4 497 6 190 4 498 2 13 2 14 2 284 2 110 2 286 2 501 4 346 2 416 4 347 2 288 2 195 2 21 4 22 2 508 4 205 4 207 2 294 2 424 2 597 2 119 2 514 2 600 4 34 2 601 2 39 4 602 4 211 2 522 2 365 2 217 2 527 4 609 24 302 12 369 6 137 2 55 6 371 2 305 2 141 4 443 4 236 2 58 2 59 2 446 2 242 2 307 2 377 2 151 6 244 2 152 2 155 2 618 6 620 2 379 2 453 2 160 4 315 4 384 2 455 2 317 2 320 2 629 2 459 2 72 2 323 2 549 2 387 2 466 2 639 16 392 4 80 2 643 2 644 2 254 2 88 12 328 2 89 2 650 2 171 6 656 4 92 4 93 2 482 2 402 4 174 2 484 2 175 2 94 2 177 4 
265 2 179 2 487 2 266 2 335 2 182 2 408 4 183 2 491 12 100 2 3 2 578 2 104 2 6 2 579 4 582 22 414 2 189 2 497 4 498 8 106 2 14 2 109 4 346 2 347 2 193 2 289 2 589 2 420 2 291 4 24 2 352 2 353 2 507 2 594 2 207 2 424 2 600 4 356 2 357 2 34 2 36 2 209 2 360 2 516 2 39 2 297 2 210 2 519 2 604 2 522 2 299 2 42 2 606 4 129 2 525 2 529 4 220 2 221 2 609 28 222 2 533 2 48 2 437 2 224 6 369 2 137 2 53 1 439 2 537 2 231 4 140 2 371 2 304 2 57 4 237 2 144 2 61 6 308 2 244 2 311 2 154 2 155 2 451 2 620 2 379 2 623 2 453 2 317 8 69 2 625 2 161 2 321 2 323 4 630 4 248 6 73 2 631 2 165 8 554 2 253 2 557 2 558 2 392 8 80 2 470 2 393 2 643 2 168 2 394 2 169 2 474 2 475 2 476 2 647 2 565 2 91 8 171 6 92 4 93 2 658 2 569 2 173 2 482 2 264 2 402 2 662 2 174 2 
638 2 158 2 87 2 106 2 170 2 259 2 
208 2 630 2 158 2 430 2 20 2 239 2 56 2 
303 2 610 2 386 1 272 2 389 2 29 2 391 1 252 2 465 1 428 2 31 2 81 1 295 2 445 2 413 2 582 8 123 1 10 2 213 2 90 2 478 2 621 2 609 10 453 2 660 2 571 2 
353 1 248 17 335 6 181 2 231 12 511 4 273 2 409 2 275 2 636 2 359 2 297 6 519 6 582 2 583 2 394 2 308 6 42 6 606 4 243 4 313 2 658 6 263 2 609 2 623 2 662 2 222 6 421 2 420 2 227 2 
84 2 550 2 150 2 596 2 355 1 462 2 218 7 492 2 370 4 153 2 632 2 77 2 120 2 609 1 454 2 196 2 383 2 582 1 
84 4 550 2 150 2 596 2 462 4 218 6 492 2 370 4 153 4 632 2 77 2 120 2 454 2 196 2 383 2 
84 8 550 2 150 2 596 2 355 1 462 8 218 10 492 2 370 4 153 8 632 2 77 2 120 8 609 1 454 2 196 6 383 2 582 1 
84 2 550 2 150 2 596 2 462 2 218 2 492 2 370 2 153 2 632 2 77 2 454 2 383 2 
192 1 19 2 350 2 388 1 655 2 
655 2 19 2 350 2 
655 2 19 2 350 2 
655 2 19 2 350 2 
280 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (511,716) (511,716) (511,716) 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 276 164 401 158 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V FAILED junit.framework.AssertionFailedError 126 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NumberFormatException 19 45 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.Error 360 17 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.Error 360 17 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.Error 360 17 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.Error 360 17 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 292 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 292 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 292 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 292 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:intersection([I[I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.RootNode:RootNode()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.ModBitTracker:split(I)I
daikon.Quant:setDiff([I[I)[I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:sign(I)I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:memberOf(F[F)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.MathMDE:gcd(JJ)J
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | OPERATOR | 18331 | == -> !=
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.PptSlice1:arity()I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:eltwiseLT([I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eq(JJ)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([S[S)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.Invariant:justified()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:getConfidence()D
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName:hashCode()I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.ArraysMDE:isSubset([D[D)Z | CONDITION | 63857 | if (x) -> if (!x)
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaCharStream:BeginToken()C
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.test.InvariantFormatTester:execute()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaCharStream:ReadByte()C
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_sets()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.PptName:isEnterPoint()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsLTE([II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.Intern:intern([I)[I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | CONSTANT | 64756 | 0 -> -1
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaCharStream:getEndColumn()I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarComparabilityImplicit:toString()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.MathMDE:negate(I)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.Invariant:logDetail()Z
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([J)[J
utilMDE.MathMDE:modulus([I)[I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexGTE([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 19813 | = null
daikon.Quant:concat([I[I)[I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice2:arity()I
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.ModBitTracker:num_vars()I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | ASSIGN | 24199 | = null
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:size()I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 1551 | = null
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_scan_token(I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:ne(II)Z
daikon.Quant:eq(DD)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Debug:logDetail()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:pairwiseGT([I[I)Z
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:isCombinedExitPoint()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z | CONDITION | 4097 | if (x) -> if (!x)
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:eltsEqual([II)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.diff.Node:Node()V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:jj_3_16()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:memberOf(D[F)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:lt(II)Z
utilMDE.FuzzyFloat:ne(DD)Z
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaCharStream:backup(I)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_ntk()I
daikon.inv.Invariant:logOn()Z
daikon.Quant:slice([III)[I
utilMDE.Intern:numIntArrays()I
daikon.Quant:lte(II)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfo:relate_var()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:memberOf(I[I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.ValueTuple:size()I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | OPERATOR | 36110 | * -> +
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.ArraysMDE:sum([[I)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | ASSIGN | 282204 | = null
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern:intern([D)[D
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.ProglangType:baseIsScalar()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:memberOf(J[J)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaCharStream:getEndLine()I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaCharStream:getBeginLine()I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaCharStream:readChar()C
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:sameLength([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.ModBitTracker:num_samples()I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String; | ASSIGN | 16305 | = null
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:min([I)I
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.ProglangType:isScalar()Z
daikon.Quant:subsetOf([I[I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:memberOf(F[D)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:eq(II)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:isReverse([I[I)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.PptSlice1:num_samples()I
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.PptSlice0:arity()I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:lexEqual([I[I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfo:new_ppt()V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:eq(FF)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:lexLTE([I[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:lexLT([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.InvMap:InvMap()V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Ppt:Ppt()V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([B[I)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:eltsGTE([II)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:gte(II)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
432 2 416 2 545 2 271 2 579 2 349 2 95 4 74 2 295 2 
79 2 298 2 678 2 135 2 53 2 725 6 485 2 448 6 190 2 483 2 89 6 
416 2 545 2 49 2 594 4 60 6 606 6 660 2 661 2 505 6 537 2 64 6 508 4 318 2 
545 6 726 4 593 26 309 8 311 16 474 4 286 2 140 4 596 8 732 16 623 2 142 30 66 8 246 6 436 2 367 10 686 10 735 2 146 2 416 6 150 2 659 16 504 10 297 12 212 6 51 10 235 8 375 4 31 2 332 10 
356 4 43 6 
182 2 
593 4 311 2 312 2 596 2 732 2 142 6 287 2 175 2 367 2 686 2 227 2 480 2 442 2 114 2 694 2 659 2 504 4 562 2 51 2 297 2 212 2 375 2 332 2 
249 2 593 12 659 8 474 2 311 8 363 6 384 2 297 5 51 4 374 6 412 4 92 4 732 8 142 14 367 4 686 4 332 4 
35 2 546 4 570 2 529 4 36 2 109 62 266 2 169 2 90 2 62 4 171 4 597 6 679 14 477 2 201 4 650 2 143 4 413 8 65 2 625 2 497 4 145 2 247 2 414 2 738 10 232 2 233 2 484 4 71 2 639 2 700 2 421 2 186 4 115 4 188 4 103 2 278 4 470 10 702 4 259 2 
58 2 717 2 182 2 83 2 672 2 704 2 573 2 294 2 141 2 422 2 
2 2 547 2 308 2 512 2 137 2 198 2 124 2 649 2 413 2 143 2 713 2 628 2 147 2 97 2 150 2 579 2 397 2 523 2 185 2 402 2 610 4 506 2 447 2 421 2 584 2 586 2 189 4 666 2 242 2 702 4 215 2 260 2 
619 2 243 4 545 4 407 2 284 2 593 46 309 6 311 32 168 8 363 6 286 2 596 16 732 32 92 4 412 4 142 51 246 4 367 18 686 18 600 2 416 4 270 4 48 2 524 4 371 6 659 32 296 4 504 6 51 14 212 4 297 18 374 6 257 4 375 2 75 6 191 6 332 18 544 4 
597 2 413 2 145 2 
55 2 690 2 230 2 430 10 361 2 251 2 382 2 718 2 647 2 123 2 12 22 530 2 27 2 543 2 
545 34 280 2 108 6 195 1 3 2 197 2 285 2 646 2 9 2 550 4 204 2 652 2 654 4 290 1 18 1 205 2 656 16 390 24 556 2 559 2 208 4 209 1 398 2 295 2 561 3 400 1 299 3 663 2 30 2 487 2 214 2 566 2 667 2 489 2 405 2 302 5 569 2 408 2 675 2 121 2 410 2 223 2 40 2 577 2 684 2 682 2 317 2 578 2 319 2 416 32 500 12 687 1 688 2 580 2 128 2 581 2 52 3 130 2 237 2 131 2 329 2 701 1 331 2 588 2 241 2 239 16 424 2 590 2 245 2 335 3 138 4 706 2 336 1 708 2 63 1 434 2 711 24 712 2 144 2 599 2 339 1 517 2 518 2 520 2 602 2 343 2 149 2 605 3 68 4 607 2 526 16 445 2 719 6 608 2 348 2 69 32 254 3 256 2 527 3 73 3 156 2 721 6 77 3 616 2 162 2 618 2 724 1 264 2 357 2 265 2 358 3 450 2 359 2 84 1 167 3 86 2 728 16 454 2 730 2 455 8 731 4 457 2 531 1 733 6 624 2 626 4 268 4 96 2 460 2 177 1 631 32 632 1 99 2 633 2 369 1 181 8 740 2 535 2 534 2 536 3 373 2 640 2 102 8 466 2 376 2 192 2 106 2 
366 2 
545 2 563 2 
545 4 23 2 139 2 
244 2 431 6 473 2 648 2 199 2 433 6 710 2 552 4 289 2 439 2 554 2 113 2 521 2 715 2 558 6 346 2 396 2 22 2 720 2 152 6 70 6 609 30 611 6 213 6 26 4 404 6 564 30 155 6 612 2 664 4 615 4 301 2 163 2 216 6 304 2 219 4 120 2 452 2 39 6 172 30 316 2 685 2 93 2 320 2 459 2 176 4 179 2 368 4 100 6 696 2 234 4 636 2 538 6 540 2 641 2 378 6 134 6 
729 1 604 2 224 2 568 2 
604 2 394 2 
603 2 689 2 334 2 307 4 501 2 183 2 464 2 533 2 595 2 87 2 122 2 12 6 315 4 42 2 734 2 388 2 193 2 406 2 
438 2 568 2 
393 2 413 2 428 2 258 2 
514 2 393 2 413 2 428 2 258 2 462 2 
604 2 393 2 491 2 413 2 29 2 726 2 
551 2 308 2 
393 2 413 2 726 2 441 2 
443 2 676 2 
429 2 743 2 
350 2 745 2 
200 2 575 2 
429 2 695 2 575 2 
429 2 693 2 575 2 
429 2 575 2 499 2 
429 2 575 2 253 2 
528 6 511 4 413 2 437 2 655 2 393 2 716 2 419 2 
604 2 393 2 491 2 21 2 413 2 726 2 462 2 
604 2 491 2 82 2 
604 2 491 2 591 2 
306 2 617 2 568 2 
604 2 491 2 
381 2 306 2 
604 2 481 2 
306 2 111 2 568 2 
745 2 275 2 568 2 
575 2 622 2 568 2 
345 2 443 2 568 2 
645 2 429 2 568 2 
306 2 248 2 
604 2 261 2 
80 2 745 2 
575 2 33 2 
620 2 443 2 
429 2 94 2 
174 2 306 2 
429 2 293 2 
443 2 741 2 
210 2 575 2 
59 2 745 2 
306 2 111 2 669 2 568 2 
306 2 111 2 78 2 669 2 568 2 
20 2 306 2 568 2 
532 2 306 2 568 2 
217 2 372 2 328 2 379 2 
658 2 306 2 
359 2 
545 26 108 4 195 2 197 2 646 2 285 2 110 2 9 2 14 2 202 2 652 2 654 4 391 2 657 2 208 4 295 2 663 2 566 2 665 4 405 2 34 2 218 2 408 4 222 2 223 2 410 2 577 2 682 2 416 26 500 8 580 2 418 2 128 2 581 2 329 2 133 2 239 6 241 2 590 6 136 2 513 2 138 4 706 2 61 2 144 2 67 2 520 2 602 2 68 2 607 2 719 6 608 2 69 6 256 2 72 2 721 2 76 2 618 2 357 2 450 2 454 2 731 2 733 2 626 2 96 2 268 4 177 2 631 4 181 2 739 4 534 2 373 2 466 2 106 2 
280 1 545 26 108 5 195 2 197 2 646 2 285 2 110 2 9 2 14 2 202 2 652 2 654 4 391 2 657 2 208 4 295 2 663 2 566 2 665 4 405 2 34 2 118 2 218 2 408 4 223 2 410 2 577 2 684 1 682 2 416 26 500 8 580 2 418 2 128 2 581 2 329 2 239 6 241 2 590 6 136 2 513 2 138 4 706 2 61 2 144 2 67 2 599 2 520 2 602 2 68 2 607 2 719 6 608 2 69 6 252 2 256 2 72 2 721 2 618 2 357 2 450 2 362 2 454 2 731 2 733 2 626 2 96 2 268 4 177 2 631 4 181 2 739 4 534 2 373 2 466 2 106 2 
313 2 
314 2 453 2 
194 2 545 12 425 2 107 2 56 2 592 2 426 2 510 2 4 2 196 2 383 4 8 8 11 2 479 2 653 2 652 2 112 4 291 2 208 2 151 8 483 4 24 4 719 4 399 2 255 2 154 2 485 4 448 6 613 4 405 2 352 2 723 2 670 2 79 2 725 6 221 2 223 2 85 4 225 2 454 2 89 6 495 2 226 2 96 2 268 2 321 4 416 6 180 2 370 2 697 2 274 2 534 2 699 2 638 2 329 2 187 2 542 2 585 10 190 2 105 2 
194 2 545 12 425 2 107 2 135 2 56 2 592 2 426 2 510 2 4 2 196 2 548 2 383 4 8 8 11 2 516 2 479 2 652 2 653 2 112 4 291 2 208 2 151 8 483 4 24 4 719 4 399 2 255 2 154 2 485 4 448 8 613 4 405 2 723 2 670 2 79 2 725 6 221 2 223 2 85 4 225 2 454 2 89 8 495 2 226 2 268 2 96 2 415 4 416 6 321 4 370 2 697 2 274 2 534 2 699 2 638 2 329 2 187 2 542 2 585 10 190 2 105 2 
670 2 194 2 426 2 725 2 697 2 483 2 24 4 383 4 399 2 225 2 89 2 255 2 154 2 699 2 485 2 542 2 653 2 112 2 
194 2 545 12 425 2 107 2 135 2 56 2 592 2 426 2 510 2 4 2 196 2 383 4 8 4 11 2 479 2 653 2 652 2 112 4 291 2 208 2 151 4 483 4 24 4 719 4 399 2 255 2 154 2 485 4 448 6 613 4 405 2 352 2 723 2 670 2 79 2 725 4 221 2 223 2 85 4 225 2 454 2 89 6 495 2 226 2 96 2 268 2 321 4 416 6 180 2 370 2 697 2 274 2 534 2 699 2 638 2 329 2 187 2 542 2 585 6 105 2 
194 2 545 12 425 2 107 2 56 2 592 2 426 2 510 2 4 2 196 2 383 4 8 4 11 2 479 2 653 2 652 2 112 4 291 2 208 2 151 4 483 4 24 4 719 4 399 2 255 2 154 2 485 4 448 6 613 4 405 2 352 2 723 2 670 2 79 2 725 6 221 2 223 2 85 4 225 2 454 2 89 4 495 2 226 2 96 2 268 2 321 4 416 6 180 2 370 2 697 2 274 2 534 2 699 2 638 2 53 2 329 2 187 2 542 2 585 6 105 2 
194 2 545 12 425 2 107 2 56 2 592 2 426 2 510 2 4 2 196 2 383 4 8 8 11 2 479 2 653 2 652 2 112 4 291 2 208 2 151 4 483 4 24 4 719 4 399 2 255 2 154 2 485 4 448 6 613 4 405 2 352 2 723 2 670 2 79 2 725 6 221 2 223 2 85 4 225 2 454 2 89 6 495 2 226 2 96 2 268 2 321 4 416 6 180 2 370 2 697 2 274 2 534 2 699 2 638 2 329 2 187 2 542 2 585 6 190 2 105 2 
194 2 545 12 425 2 107 2 56 2 592 2 426 2 510 2 4 2 196 2 383 4 8 8 11 2 479 2 653 2 652 2 112 4 291 2 208 2 151 8 483 4 24 4 719 4 399 2 255 2 154 2 485 4 448 8 613 4 405 2 352 2 723 2 670 2 79 2 725 8 221 2 223 2 85 4 225 2 454 2 89 6 495 2 226 2 268 2 96 2 321 4 416 6 180 2 370 2 697 2 274 2 534 2 699 2 638 2 53 2 329 2 187 2 542 2 585 10 190 2 105 2 
194 2 545 12 425 2 107 2 56 2 592 2 426 2 510 2 4 2 196 2 383 4 8 8 11 2 479 2 653 2 652 2 112 4 291 2 208 2 151 8 483 4 24 4 719 4 399 2 255 2 154 2 485 4 448 6 613 4 405 2 352 2 723 2 670 2 79 2 725 6 221 2 223 2 85 4 225 2 454 2 89 6 495 2 226 2 96 2 268 2 321 4 416 6 180 2 370 2 697 2 274 2 534 2 699 2 638 2 329 2 187 2 542 2 585 10 190 2 105 2 
194 2 545 46 4 2 196 2 549 2 197 2 383 4 8 2 11 2 13 6 386 1 202 2 15 2 16 6 557 1 208 4 24 4 211 2 399 2 563 6 566 2 405 2 220 2 37 2 221 2 38 2 223 2 410 2 225 2 577 2 226 2 416 24 229 2 50 2 53 4 238 2 585 2 239 6 425 4 589 6 590 6 426 2 592 2 56 2 67 2 440 10 601 6 602 2 68 2 444 2 608 2 69 8 255 2 256 2 72 4 448 12 613 8 79 4 450 2 85 4 88 4 454 2 89 4 626 2 268 4 96 2 461 1 631 2 269 2 634 2 274 2 101 6 638 2 466 12 277 8 642 6 469 2 105 2 279 2 106 2 280 2 643 2 107 2 108 6 646 2 110 2 479 2 652 2 653 2 654 4 112 4 291 2 482 1 483 4 295 2 485 4 488 1 668 2 670 2 303 2 674 2 310 2 681 6 684 2 682 2 495 4 125 4 321 6 500 4 691 2 127 2 322 2 697 2 129 6 323 7 699 2 325 2 509 1 329 2 330 6 510 2 703 1 706 2 138 4 139 6 709 6 144 2 714 2 520 2 148 2 522 2 347 6 719 6 153 2 154 2 721 2 157 1 160 2 723 2 725 8 166 2 170 2 365 2 731 2 173 2 733 2 366 6 737 1 180 2 181 2 739 4 370 2 534 2 373 2 184 6 541 6 542 2 187 2 744 7 
643 2 545 48 194 2 280 2 107 2 108 6 4 2 196 2 197 2 549 2 646 2 110 2 383 4 8 6 13 6 11 2 202 2 15 2 479 2 16 6 653 2 652 2 112 4 654 4 291 2 208 4 483 4 211 2 295 2 24 4 399 2 563 6 485 4 566 2 668 2 405 2 303 2 670 2 673 2 408 2 220 2 674 2 310 2 37 2 38 2 221 2 410 2 223 2 225 2 681 6 577 2 495 4 682 2 684 2 226 2 125 4 321 6 416 26 500 8 229 2 127 2 691 2 322 2 697 2 50 2 129 6 699 2 325 2 329 2 238 2 585 2 330 6 239 6 589 6 425 4 590 6 56 2 592 2 426 2 510 2 139 6 138 4 706 2 709 6 144 2 67 2 714 2 440 10 520 2 601 6 148 2 602 2 522 2 347 6 444 2 68 4 719 6 608 2 69 8 153 2 255 2 154 2 256 2 72 4 721 2 160 2 448 12 613 8 161 2 723 2 79 4 725 8 450 2 166 2 85 4 170 2 88 4 89 8 454 2 365 2 731 4 173 2 366 6 733 2 626 4 96 2 268 4 631 2 269 2 634 2 181 2 180 2 739 4 370 2 101 6 274 2 534 2 373 2 184 6 638 2 466 12 541 6 277 8 642 6 187 2 542 2 469 2 190 4 105 2 279 2 106 2 
643 2 545 48 194 2 280 2 107 2 108 6 4 2 196 2 197 2 549 2 646 2 110 2 383 4 8 6 13 6 11 2 202 2 15 2 479 2 16 6 653 2 652 2 112 4 654 4 291 2 208 4 483 4 211 2 295 2 24 4 399 2 563 6 485 4 566 2 668 2 405 2 303 2 670 2 673 2 408 2 220 2 674 2 310 2 37 2 38 2 221 2 410 2 223 2 225 2 681 6 577 2 495 4 682 2 684 2 226 2 125 4 321 6 416 26 500 8 229 2 127 2 691 2 322 2 697 2 50 2 129 6 699 2 325 2 329 2 238 2 585 6 330 6 239 6 589 6 425 4 590 6 56 2 592 2 426 2 510 2 139 6 138 4 706 2 709 6 144 2 67 2 714 2 440 10 520 2 601 6 148 2 602 2 522 2 347 6 444 2 68 4 151 4 719 6 608 2 69 8 153 2 255 2 154 2 256 2 72 4 721 2 160 2 448 12 613 8 161 2 723 2 79 4 725 8 450 2 166 2 85 4 170 2 88 4 89 8 454 2 365 2 731 4 173 2 366 6 733 2 626 4 96 2 268 4 631 2 269 2 634 2 181 2 180 2 739 4 370 2 101 6 274 2 534 2 373 2 184 6 638 2 466 12 541 6 277 8 642 6 187 2 542 2 469 2 190 4 105 2 279 2 106 2 
194 2 545 52 4 2 196 2 549 2 197 2 383 4 8 6 11 2 13 6 202 4 15 2 16 6 208 4 24 4 211 2 399 2 563 12 566 2 405 2 571 6 408 2 220 2 37 2 221 2 38 2 410 2 223 2 225 2 576 2 577 2 226 2 46 6 416 24 229 2 417 6 50 2 53 2 238 2 585 6 239 8 425 4 589 6 590 8 56 2 426 2 592 2 67 2 440 8 601 6 602 2 68 4 444 2 608 2 69 12 255 2 256 2 72 4 448 16 613 8 263 6 79 4 450 2 85 4 88 4 89 10 454 2 456 6 626 4 268 4 96 2 631 4 630 2 269 2 463 2 634 2 274 2 101 6 465 2 638 2 466 10 467 2 277 8 642 12 469 2 105 2 279 2 106 2 280 2 643 2 107 2 108 6 283 2 646 2 110 2 479 2 652 2 653 2 654 4 112 4 291 2 483 4 295 2 485 4 668 2 116 2 303 2 670 2 673 2 310 2 493 6 680 6 681 6 684 2 682 2 495 4 496 6 125 4 321 6 500 10 691 2 692 6 127 2 322 2 697 2 129 6 699 2 325 2 329 2 330 12 135 2 510 2 706 2 138 4 139 12 337 2 709 12 144 2 714 2 520 2 148 2 522 2 347 6 151 4 719 6 153 2 154 2 721 4 160 2 161 2 723 2 725 10 166 2 170 2 365 2 731 4 173 2 733 4 366 12 180 2 181 4 739 6 370 2 534 2 373 2 184 6 541 6 542 2 187 2 190 4 
545 4 79 2 194 2 426 2 725 6 4 2 196 2 221 2 383 2 85 2 8 6 89 6 479 2 226 2 653 2 321 2 291 2 180 2 370 2 151 4 483 4 24 2 255 2 154 2 699 2 638 2 485 4 187 2 542 2 448 4 585 4 613 2 190 2 105 2 723 2 
194 2 545 28 280 2 1 2 108 6 4 2 196 2 197 2 646 2 383 2 110 2 8 6 479 2 652 2 653 2 654 4 291 2 556 2 208 4 483 4 24 2 295 2 403 2 485 4 566 2 405 2 32 2 117 2 674 2 221 2 410 2 223 2 577 2 684 2 682 2 226 2 321 2 416 24 47 2 698 3 699 2 329 2 585 2 239 6 590 6 426 2 138 4 706 2 144 2 67 2 520 2 440 2 602 2 445 2 719 6 608 2 69 8 255 2 154 2 256 2 72 2 721 3 448 4 613 2 162 2 723 2 79 2 725 6 450 2 359 2 85 2 89 6 454 2 733 3 268 4 96 2 631 3 180 2 739 4 370 2 274 2 534 2 373 2 638 2 466 4 542 2 187 2 190 2 105 2 
291 2 435 2 221 2 
291 2 435 2 221 2 
545 24 280 2 194 2 108 6 4 2 646 2 7 2 110 2 383 2 8 6 11 2 476 2 478 4 15 2 288 2 652 2 112 4 654 4 291 4 208 4 483 4 295 2 24 2 25 2 300 2 485 4 566 2 405 2 34 4 305 2 220 2 221 6 410 2 223 2 225 2 577 2 495 2 683 4 684 2 682 2 125 2 321 4 416 16 500 4 231 2 697 2 129 2 582 2 583 2 699 4 53 4 329 2 585 6 54 2 239 2 425 4 590 2 135 4 592 2 56 2 138 4 706 2 435 2 144 2 67 2 440 2 520 2 148 2 602 2 250 2 68 4 151 4 525 2 719 6 608 2 69 2 256 2 154 2 72 6 159 2 448 16 613 4 262 2 79 4 725 12 81 2 165 2 450 2 85 2 88 2 454 2 89 12 731 4 626 4 96 2 268 4 631 2 534 2 373 2 637 2 466 4 190 4 105 2 106 4 
303 2 416 2 545 4 353 2 127 2 7 2 399 2 453 2 582 2 129 2 364 2 91 2 466 2 288 2 125 2 652 2 440 2 
545 24 280 2 194 2 108 6 4 2 646 2 7 2 110 2 383 2 8 6 475 2 11 2 478 4 15 2 288 2 652 2 112 4 654 4 291 4 208 4 560 2 483 4 295 2 24 2 25 4 300 2 485 4 566 2 405 2 34 4 305 2 220 2 221 6 410 2 223 2 225 2 577 2 495 4 683 4 684 2 682 2 321 4 416 16 500 4 697 2 129 2 582 2 583 2 699 4 53 4 329 2 585 6 54 2 587 2 239 2 425 4 590 2 135 4 592 2 56 2 510 2 427 2 138 4 706 2 435 2 144 2 67 2 520 2 148 2 602 2 250 2 68 4 151 4 525 2 719 6 608 2 69 2 256 2 154 2 72 6 159 2 448 16 613 4 262 2 79 4 725 12 165 2 450 2 85 2 88 2 454 2 89 12 731 4 626 4 96 2 268 4 631 4 98 2 534 2 373 2 466 2 190 4 105 2 106 4 
545 24 280 2 194 2 108 6 4 2 6 2 646 2 7 2 110 2 383 2 8 6 11 2 478 4 15 2 288 2 652 2 112 4 654 4 291 4 208 4 483 4 295 2 24 2 25 2 300 2 485 4 566 2 405 2 34 4 305 2 220 2 221 6 410 2 223 2 225 2 577 2 495 4 683 4 684 2 682 2 125 2 321 4 416 16 500 4 697 2 129 2 582 2 583 2 699 4 53 4 329 2 585 6 54 2 239 2 423 2 425 4 590 2 135 4 592 2 56 2 510 2 138 4 706 2 435 2 598 2 144 2 67 2 440 2 520 2 148 2 602 2 250 2 68 4 151 4 525 2 719 6 608 2 69 2 256 2 154 2 72 6 159 2 448 16 613 4 262 2 79 4 725 12 165 2 450 2 85 2 88 2 454 2 89 12 731 4 626 4 96 2 268 4 736 2 631 2 273 2 534 2 373 2 466 4 190 4 105 2 106 4 
446 2 707 2 164 2 742 2 392 2 354 2 276 2 158 2 401 2 
380 2 545 2 590 2 57 1 644 2 621 2 197 2 677 3 385 2 411 2 202 6 733 3 651 2 519 2 631 3 416 2 344 4 739 2 69 2 324 2 721 3 351 2 104 2 239 2 240 2 
380 2 545 2 590 2 644 2 621 2 197 2 677 2 385 2 411 2 202 6 733 2 651 2 519 2 631 2 416 2 344 4 739 2 69 2 324 2 721 2 351 2 104 2 239 2 240 2 
380 2 545 2 590 2 644 2 621 2 197 2 677 2 385 2 411 2 202 6 733 2 651 2 519 2 631 2 416 2 344 4 739 2 69 2 324 2 721 2 351 2 104 2 239 2 240 2 
545 10 593 4 5 2 197 2 705 2 10 4 142 5 387 2 246 2 342 3 519 2 659 2 526 2 69 2 662 3 565 4 722 2 567 2 119 2 309 4 311 2 574 2 409 2 728 2 267 2 41 4 732 2 733 3 627 2 367 2 686 2 498 6 631 3 416 4 51 2 236 4 468 2 132 4 332 2 471 3 
545 10 593 4 5 2 197 2 705 2 286 2 596 2 10 4 142 4 387 2 246 2 342 2 519 2 659 2 526 2 69 2 662 2 297 2 565 4 722 2 567 2 119 2 309 4 311 2 574 2 409 2 728 2 267 2 41 4 732 2 733 2 627 2 367 2 686 2 498 6 631 2 416 4 51 2 236 4 468 2 132 4 332 2 471 2 
545 10 593 4 5 2 197 2 705 2 286 2 596 2 10 4 142 4 387 2 246 2 342 2 519 2 659 2 526 2 69 2 662 2 297 2 565 4 722 2 567 2 119 2 309 4 311 2 574 2 409 2 728 2 267 2 41 4 732 2 733 2 627 2 367 2 686 2 498 6 631 2 416 4 51 2 236 4 468 2 132 4 332 2 471 2 
545 10 593 4 5 2 197 2 705 2 286 2 596 2 10 4 142 4 387 2 246 2 342 2 519 2 659 2 526 2 69 2 662 2 297 2 565 4 722 2 567 2 119 2 309 4 311 2 574 2 409 2 728 2 267 2 41 4 732 2 733 2 627 2 367 2 686 2 498 6 631 2 416 4 51 2 236 4 468 2 132 4 332 2 471 2 
545 10 593 4 5 2 197 2 705 2 286 4 596 4 10 4 142 4 387 2 246 2 342 2 519 2 659 2 526 2 69 2 662 2 297 4 565 4 722 2 567 2 119 2 309 4 311 2 574 2 409 2 728 2 267 2 41 4 732 2 733 2 627 2 367 2 686 2 498 6 631 2 416 4 51 2 236 4 468 2 132 4 332 2 471 2 
0 2 206 2 657 2 515 2 341 2 727 2 629 2 
0 2 539 2 126 2 340 2 502 2 44 2 
545 10 333 2 281 2 282 2 671 1 572 2 266 1 454 2 338 2 494 2 203 2 389 1 178 2 416 8 555 2 272 2 635 2 503 2 507 2 327 2 28 2 486 1 103 1 377 2 330 2 449 2 
19 2 593 4 659 2 311 2 363 4 420 2 51 2 412 2 732 2 142 5 458 2 367 2 686 2 332 2 45 2 
228 2 355 2 395 3 451 2 472 2 360 2 10 2 41 2 236 2 614 2 490 2 17 2 
416 1 228 2 545 1 355 2 395 6 360 2 451 2 472 4 492 1 10 2 41 2 236 2 326 2 614 2 490 2 17 2 
228 4 355 2 395 4 451 2 472 4 360 2 10 2 41 2 236 2 553 2 614 2 490 2 17 2 
416 1 228 4 545 1 355 2 395 4 451 2 472 4 360 2 492 1 10 2 41 2 236 2 553 2 614 2 490 2 17 2 
292 2 
292 2 
292 2 
292 2 
207 2 

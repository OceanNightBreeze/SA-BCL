#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (277,594) (277,594) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 644 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (309,312,349,451,630) (309,312,349,451,630) (309,312,349,451,630) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 434 399 636 614 267 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V ERROR java.lang.ArrayIndexOutOfBoundsException 99 
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V FAILED junit.framework.AssertionFailedError (157,484) 93 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 101 127 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (277,594) (277,594) 361 71 375 111 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 71 375 111 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 71 375 111 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 71 375 111 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:sum([D)D
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfo:relate_var()V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.MathMDE:pow(II)I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsGtIndex([I)Z | OPERATOR | 179154 | ++ -> --
utilMDE.MathMDE:gcd([I)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z | ASSIGN | 9658 | = null
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.WeakHasherMap:size()I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:hashCode()I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.Ppt:Ppt()V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:max([I)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Intern:numIntArrays()I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoAux:hashCode()I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.MathMDE:sign(I)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.InvMap:InvMap()V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 10778 | 3 -> 0
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:intersection([I[I)[I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice1:num_samples()I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:eltsLT([II)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:sum([[I)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaCharStream:backup(I)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:eltsGTE([II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.ProglangType:isArray()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:eltwiseGT([I)Z
daikon.PptSlice1:arity()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Debug:logOn()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | CONDITION | 7862 | if (x) -> if (!x)
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_vars()I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:concat([I[I)[I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:justified()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:eltsLteIndex([I)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Node:Node()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.Intern:intern([I)[I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:subsetOf([B[I)Z | CONDITION | 29819 | if (x) -> if (!x)
daikon.Quant:sameLength([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:intern([J)[J
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.ModBitTracker:split(I)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:gt(II)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:lt(II)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 182066 | = null
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.Invariants:Invariants()V
daikon.Quant:eltsNotEqualIndex([I)Z | CONSTANT | 177979 | 0 -> 1
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsEqual([II)Z
daikon.ProglangType:dimensions()I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:eltwiseEqual([I)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.Invariant:logDetail()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.PptName:isEnterPoint()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | OPERATOR | 52438 | != -> >=
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:isReverse([I[I)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:union([I[I)[I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:lexNotEqual([I[I)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.PptSlice0:arity()I
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:gte(II)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.ProglangType:isScalar()Z
utilMDE.MathMDE:gcd(II)I
utilMDE.LimitedSizeIntSet:size()I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.Invariant:getConfidence()D
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.ValueTuple:size()I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:lexLTE([I[I)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ValueTuple:isMissing(I)Z
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String; | ASSIGN | 970 | = null
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaCharStream:ReadByte()C
daikon.inv.Invariant:logOn()Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eq(II)Z
daikon.Quant:noDups([I)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.PptSlice2:arity()I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6851 | = null
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaCharStream:FillBuff()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:lexGT([I[I)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:lexGTE([I[I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:lte(II)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:readChar()C
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | CONDITION | 15105 | if (x) -> if (!x)
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.Debug:logDetail()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 3053 | = null
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18332 | 0 -> -1
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:BeginToken()C
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
532 2 612 2 477 4 120 2 474 2 132 2 648 2 277 2 594 2 
271 6 162 6 253 2 353 2 264 2 246 2 18 6 531 2 546 2 279 2 463 2 
214 2 646 6 602 6 135 2 346 2 276 6 277 2 370 2 592 2 156 4 594 2 140 4 621 6 
185 12 263 18 12 4 414 8 552 4 154 2 277 4 594 4 310 8 280 8 584 2 508 2 198 16 597 2 430 8 358 8 254 18 470 8 341 6 575 2 10 8 
204 4 468 6 
274 2 
611 2 570 2 265 2 218 2 157 2 220 2 432 2 577 2 439 2 123 2 277 4 13 4 126 2 130 2 482 2 134 2 359 2 16 4 182 2 484 2 634 2 103 2 517 2 369 2 452 2 594 4 453 4 104 2 243 2 24 4 25 2 75 2 521 2 205 2 37 2 462 2 651 2 532 2 653 2 489 2 608 2 149 2 535 2 46 2 
263 8 414 4 227 2 277 4 616 4 594 4 310 4 280 4 198 8 430 4 431 8 358 4 254 9 470 4 63 8 10 4 
157 2 72 2 502 2 
86 2 384 2 304 2 229 2 639 2 58 22 199 2 595 2 142 2 52 2 164 2 7 10 484 2 294 2 
525 2 66 2 137 2 105 2 607 2 211 2 180 2 500 2 61 2 
263 9 414 8 3 2 582 8 310 8 280 8 508 2 198 16 269 2 430 8 358 8 116 8 254 18 470 8 623 4 184 4 10 8 
193 2 644 2 476 6 147 2 401 2 100 2 84 2 69 2 515 2 559 2 
588 2 613 2 136 2 23 2 79 2 274 2 461 2 207 2 300 2 356 2 
572 2 215 2 266 2 349 2 217 4 387 1 469 2 390 2 437 2 94 2 121 2 474 2 122 4 277 22 309 2 56 2 475 2 583 2 173 2 128 6 480 2 404 2 633 2 553 6 367 4 451 2 20 1 556 2 594 20 640 2 245 2 197 2 641 2 203 2 78 2 457 4 458 2 206 2 377 2 527 1 530 1 604 2 488 2 251 2 299 2 421 2 47 2 
14 2 277 2 
268 2 133 2 277 4 
378 2 
636 2 614 2 647 2 408 2 399 2 267 2 537 2 606 6 114 2 40 2 443 6 195 2 315 2 219 2 585 2 538 6 654 2 15 2 247 2 434 2 423 2 524 2 
235 1 348 2 542 2 372 2 
368 2 
157 2 90 2 93 2 154 2 169 2 542 2 287 2 
90 2 21 2 542 2 
90 2 335 2 542 2 
445 2 348 2 112 2 
90 2 542 2 
393 2 112 2 
80 2 542 2 
446 2 348 2 112 2 
473 2 221 2 348 2 
119 2 348 2 360 2 
83 2 603 2 348 2 
348 2 397 2 363 2 
402 2 112 2 
542 2 466 2 
473 2 591 2 
360 2 376 2 
603 2 248 2 
129 2 363 2 
578 2 112 2 
650 2 363 2 
99 2 603 2 
330 2 360 2 
473 2 448 2 
446 2 348 2 112 2 231 2 
464 2 446 2 348 2 112 2 231 2 
348 2 544 2 112 2 
333 2 348 2 112 2 
395 2 533 2 631 2 447 2 
157 2 282 2 93 2 305 2 
157 2 456 2 282 2 93 2 305 2 287 2 
157 2 479 2 90 2 93 2 154 2 542 2 
521 2 543 2 
157 2 93 2 154 2 642 2 
603 2 51 2 
236 2 363 2 
473 2 201 2 
579 2 360 2 
360 2 363 2 576 2 
498 2 360 2 363 2 
590 2 360 2 363 2 
601 2 360 2 363 2 
157 2 364 2 532 2 93 2 362 2 
112 2 32 2 
347 2 
348 2 293 2 
206 2 
572 6 89 2 266 2 153 2 573 3 429 2 437 2 354 2 94 2 167 3 273 2 277 26 170 2 278 2 173 2 179 2 365 4 367 4 594 26 519 2 197 2 596 2 374 2 108 2 203 2 458 2 457 4 377 2 33 2 526 2 529 2 604 6 299 2 43 2 534 2 47 2 610 2 385 2 215 2 217 4 469 2 389 2 390 2 541 2 474 2 122 4 228 2 307 5 56 2 475 6 128 6 232 2 234 2 57 2 480 2 316 2 404 2 547 4 323 2 405 2 635 2 549 2 553 4 411 8 640 2 245 2 74 2 76 3 78 2 249 2 143 4 564 2 488 2 251 2 
572 6 89 2 266 2 153 2 573 2 437 2 354 2 94 2 167 2 273 2 277 26 170 2 278 2 583 2 173 2 507 2 179 2 365 4 449 2 367 4 594 26 519 2 197 2 596 2 374 2 108 2 203 2 458 2 457 4 377 2 33 2 526 2 529 2 604 6 299 2 43 2 47 2 610 2 385 2 215 2 217 4 469 2 389 2 390 2 541 2 474 2 122 4 307 4 56 2 475 6 128 6 232 2 234 2 57 2 480 2 316 2 404 2 547 4 633 2 323 2 405 2 635 2 549 2 551 2 553 6 411 8 640 2 245 2 74 2 76 2 78 2 249 2 143 4 564 2 488 2 251 2 420 2 
241 2 
106 2 175 2 
271 2 226 2 425 2 264 2 155 2 279 2 311 2 337 4 512 4 162 2 163 2 352 2 177 2 331 2 165 2 522 2 110 2 117 2 
536 2 425 2 264 4 155 2 115 2 162 6 163 2 352 2 50 6 353 2 469 2 390 2 165 2 437 2 117 2 271 4 627 2 226 2 95 2 277 12 230 4 56 2 279 4 311 4 128 4 314 2 512 4 177 2 131 4 62 2 632 2 404 2 406 2 17 2 67 2 324 2 589 2 18 6 367 2 240 4 594 6 560 2 203 2 331 2 457 2 522 2 29 4 110 2 600 2 250 2 36 2 208 2 488 2 418 2 82 2 337 4 253 2 255 2 257 4 422 2 
536 2 425 2 264 4 155 2 115 2 162 4 163 2 352 2 50 6 353 2 469 2 390 2 165 2 437 2 117 2 271 6 627 2 226 2 95 2 277 12 230 4 56 2 279 4 311 4 128 4 314 2 512 4 177 2 131 4 62 2 632 2 404 2 406 2 17 2 67 2 324 2 589 2 18 6 367 2 240 4 594 6 560 2 246 2 203 2 331 2 457 2 522 2 29 4 110 2 600 2 250 2 36 2 208 2 488 2 418 2 82 2 337 4 255 2 257 4 422 2 
536 2 425 2 264 4 155 2 115 2 162 6 163 2 352 2 50 6 353 2 469 2 390 2 165 2 437 2 117 2 271 6 627 2 226 2 95 2 277 12 230 4 56 2 279 4 311 4 128 4 314 2 512 4 177 2 131 4 62 2 632 2 404 2 406 2 17 2 67 2 324 2 589 2 18 6 367 2 240 4 594 6 560 2 203 2 331 2 457 2 522 2 29 8 110 2 600 2 250 2 36 2 463 2 208 2 488 2 418 2 82 2 337 4 255 2 257 4 422 2 
536 2 425 2 264 4 155 2 115 2 162 6 163 2 352 2 50 10 353 2 469 2 390 2 165 2 437 2 117 2 271 8 627 2 226 2 95 2 277 12 230 8 56 2 279 4 311 4 128 4 314 2 512 4 177 2 131 4 62 2 632 2 404 2 406 2 17 2 67 2 324 2 589 2 367 2 18 8 240 4 594 6 560 2 246 2 203 2 331 2 457 2 522 2 29 8 110 2 600 2 250 2 36 2 463 2 208 2 488 2 418 2 82 2 337 4 255 2 257 4 422 2 
536 2 425 2 264 4 155 2 115 2 162 6 163 2 352 2 50 10 353 2 469 2 390 2 165 2 437 2 117 2 271 6 627 2 226 2 95 2 277 12 230 8 56 2 279 4 311 4 128 4 314 2 512 4 177 2 131 4 62 2 632 2 404 2 406 2 17 2 67 2 324 2 589 2 18 6 367 2 240 4 594 6 560 2 203 2 331 2 457 2 522 2 29 8 110 2 600 2 250 2 36 2 463 2 208 2 488 2 418 2 82 2 337 4 255 2 257 4 422 2 
492 2 493 2 494 2 0 2 343 2 1 2 153 2 155 2 4 2 158 1 162 4 5 6 352 2 353 4 163 2 165 2 9 1 354 2 167 2 170 2 173 2 512 4 14 6 177 2 183 6 513 2 188 6 190 2 17 2 367 4 18 12 19 2 371 2 197 2 374 2 203 2 29 2 522 2 31 2 377 2 378 6 526 2 36 2 208 2 379 6 41 2 42 2 47 2 536 2 215 2 217 4 50 2 539 10 390 2 53 1 391 2 225 2 226 2 56 2 398 2 233 2 234 2 62 2 404 2 405 2 406 2 549 2 67 4 407 2 553 6 240 4 411 4 560 2 245 2 73 6 246 4 76 2 78 2 412 8 249 4 250 2 413 1 415 2 563 2 564 2 418 2 82 2 251 12 257 6 255 2 422 2 261 1 259 2 425 2 264 4 571 6 572 6 426 2 266 2 427 2 268 6 270 6 433 6 437 2 271 8 94 2 438 7 95 2 277 46 279 4 583 2 97 1 283 2 102 2 589 4 450 4 594 24 457 4 458 2 110 2 600 2 604 8 297 1 299 2 465 6 615 2 617 1 115 2 619 6 469 2 117 2 627 2 628 2 474 2 122 4 307 2 475 6 125 1 311 4 128 6 313 2 314 2 480 2 131 8 321 4 633 2 324 2 139 6 640 2 487 6 329 7 331 2 643 6 645 2 143 4 145 2 488 2 337 4 339 2 
492 2 494 2 493 2 0 2 343 2 425 2 571 6 1 2 264 4 426 2 572 6 266 2 153 2 427 2 155 2 4 2 5 6 162 8 268 6 163 2 353 4 352 2 270 6 433 6 165 2 437 2 271 8 354 2 167 2 94 2 95 2 277 48 170 4 279 4 583 2 173 2 14 6 512 4 283 2 177 2 183 6 188 6 513 2 365 2 190 2 17 2 102 2 589 4 450 4 18 12 367 4 19 2 371 2 594 26 197 2 374 4 203 2 458 2 457 4 522 2 29 6 110 2 31 2 377 2 600 2 378 6 526 2 36 2 604 8 463 4 208 2 379 6 41 2 42 2 299 2 301 2 465 6 47 2 536 2 615 2 215 2 217 4 115 2 50 2 619 6 539 10 469 2 390 2 391 2 117 2 628 2 627 2 225 2 226 2 474 2 122 4 307 2 398 2 56 2 475 6 311 4 233 2 128 6 234 2 313 2 314 2 480 2 131 8 62 2 321 4 404 2 405 2 633 2 406 2 549 2 67 4 324 2 407 2 553 6 240 4 139 6 411 8 640 2 560 2 73 6 245 2 487 6 76 2 77 2 331 2 78 2 412 8 643 6 249 4 250 2 645 2 415 2 143 4 145 2 563 2 564 4 418 2 488 2 82 2 337 4 251 12 255 2 257 6 339 2 422 2 259 2 
492 2 494 2 493 2 0 2 343 2 425 2 571 6 1 2 264 4 426 2 572 6 266 2 153 2 427 2 155 2 4 2 5 6 162 8 268 6 163 2 353 4 352 2 270 6 433 6 165 2 437 2 271 8 354 2 167 2 94 2 95 2 277 48 170 4 279 4 583 2 173 2 14 6 512 4 283 2 177 2 183 6 188 6 513 2 365 2 190 2 17 2 102 2 589 4 450 4 18 12 367 4 19 2 371 2 594 26 197 2 374 4 203 2 458 2 457 4 522 2 29 6 110 2 31 2 377 2 600 2 378 6 526 2 36 2 604 8 463 4 208 2 379 6 41 2 42 2 299 2 301 2 465 6 47 2 536 2 615 2 215 2 217 4 115 2 619 6 50 6 539 10 469 2 390 2 391 2 117 2 628 2 627 2 225 2 226 2 474 2 122 4 307 2 230 4 398 2 56 2 475 6 311 4 233 2 128 6 234 2 313 2 314 2 480 2 131 8 62 2 321 4 404 2 405 2 633 2 406 2 549 2 67 4 324 2 407 2 553 6 240 4 139 6 411 8 640 2 560 2 73 6 245 2 487 6 76 2 77 2 331 2 78 2 412 8 643 6 249 4 250 2 645 2 415 2 143 4 145 2 563 2 564 4 418 2 488 2 82 2 337 4 251 12 255 2 257 6 339 2 422 2 259 2 
492 2 494 2 493 2 0 2 343 2 1 2 153 2 155 2 4 2 162 10 5 6 352 2 353 4 163 2 165 2 501 2 354 2 167 4 504 6 170 4 173 2 174 2 512 4 14 12 177 2 183 6 513 2 188 12 365 2 190 2 17 2 367 4 18 16 19 2 22 2 371 2 197 2 374 4 203 2 28 2 29 6 522 2 31 2 377 2 378 12 526 4 36 2 208 2 379 6 41 2 42 2 47 2 536 2 215 2 217 4 50 6 539 8 390 2 391 2 226 2 230 4 56 2 398 2 233 2 234 2 62 2 404 2 405 4 406 2 549 2 238 6 67 4 407 2 553 6 240 4 409 6 411 10 560 2 245 2 73 6 246 2 76 4 77 2 78 2 412 8 249 4 250 2 415 2 563 2 564 4 418 2 82 2 251 10 567 6 253 2 257 6 255 2 422 2 259 2 262 6 425 2 264 4 571 12 572 8 426 2 266 2 427 2 92 2 268 12 270 6 433 6 437 2 271 10 94 2 95 2 277 52 279 4 441 6 583 2 283 2 102 2 589 4 450 4 594 24 457 4 458 2 110 2 600 2 604 12 463 4 299 2 301 2 465 12 615 2 115 2 619 6 469 2 117 2 627 2 628 2 474 2 122 4 307 4 124 6 475 8 311 4 128 6 313 2 314 2 480 2 131 8 318 2 483 2 321 4 633 2 324 2 485 2 139 6 640 2 487 6 331 2 643 6 645 2 143 6 145 2 146 6 488 2 337 4 491 6 339 2 
536 2 17 2 324 2 425 2 264 4 18 4 240 2 155 2 560 2 115 2 162 6 50 4 353 2 352 2 331 2 29 6 110 2 627 2 271 6 226 2 36 2 95 2 277 4 230 4 279 4 463 2 418 2 337 2 314 2 512 2 131 2 177 2 257 2 422 2 62 2 
425 2 264 4 88 2 572 6 266 2 155 2 162 6 499 2 353 2 352 2 437 2 271 6 354 2 94 2 167 3 95 2 277 28 279 4 442 3 583 2 173 2 512 2 177 2 17 2 18 4 367 4 594 24 454 2 197 2 203 2 457 4 458 2 29 6 459 2 110 2 206 2 377 2 36 2 604 8 463 2 208 2 299 2 210 2 47 2 536 2 215 2 113 2 217 4 115 2 50 2 539 2 469 2 390 2 627 2 225 2 226 2 474 2 122 4 307 3 56 2 475 6 128 6 312 2 234 2 314 2 480 2 131 2 630 2 62 2 404 2 633 2 549 2 324 2 553 6 240 2 640 2 560 2 245 2 76 3 331 2 78 2 249 2 143 4 418 2 488 2 337 2 251 4 257 2 422 2 
536 2 425 2 264 4 155 2 115 2 162 6 163 2 352 2 50 10 353 2 469 2 390 2 165 2 437 2 117 2 271 6 627 2 226 2 95 2 277 12 230 8 56 2 279 4 311 4 128 4 314 2 512 4 177 2 131 4 62 2 632 2 404 2 406 2 17 2 67 2 324 2 589 2 18 6 367 2 240 4 594 6 560 2 203 2 331 2 457 2 522 2 29 8 110 2 600 2 250 2 36 2 463 2 208 2 488 2 418 2 82 2 337 4 255 2 257 4 422 2 
536 2 425 2 264 4 155 2 386 4 115 2 162 8 163 2 352 2 50 10 353 2 469 2 390 2 165 2 437 2 117 2 271 6 627 2 226 2 95 2 277 12 230 8 56 2 279 4 311 4 128 4 314 2 512 4 177 2 131 4 62 2 404 2 406 2 17 2 67 2 324 2 589 2 367 2 18 8 240 4 594 6 560 2 203 2 331 2 457 2 522 2 29 8 110 2 600 2 250 2 36 2 463 2 208 2 488 2 82 2 337 4 253 2 255 2 257 4 422 2 213 2 260 2 
115 2 26 2 314 2 
115 2 26 2 314 2 
151 2 0 2 87 2 425 2 264 4 572 2 266 2 153 4 155 4 496 2 162 12 353 4 437 2 166 2 271 12 354 2 94 2 277 24 170 4 279 4 96 4 583 2 173 2 512 2 586 2 513 2 102 2 589 2 450 2 367 4 18 16 594 16 197 2 26 2 374 4 203 2 458 2 457 4 522 2 29 6 460 2 377 2 528 2 604 2 38 2 463 4 299 2 43 4 212 2 45 4 47 2 215 2 217 4 115 6 49 2 50 6 539 2 469 2 390 2 117 2 627 2 224 2 54 2 474 2 122 4 307 2 230 4 56 2 475 2 311 4 128 6 314 4 480 2 131 4 321 2 404 2 633 2 237 2 406 2 549 2 67 4 324 2 553 6 240 2 555 2 411 4 640 2 245 2 487 2 246 4 331 2 78 2 249 6 144 2 564 4 488 2 82 2 337 2 251 4 253 4 85 2 255 2 257 4 256 2 
332 2 494 2 325 2 19 2 277 4 594 2 497 2 251 2 487 2 175 2 163 2 539 2 469 2 212 2 256 2 321 2 460 2 
0 2 425 2 264 4 572 2 266 2 153 4 155 4 496 2 162 12 353 4 437 2 166 2 271 12 354 2 94 2 277 24 505 2 170 4 279 4 96 4 583 2 173 2 512 2 513 2 189 2 102 2 589 4 450 2 367 4 18 16 594 16 197 2 26 2 200 2 374 4 203 2 458 2 457 4 522 2 29 6 460 2 377 2 600 2 528 2 604 2 38 2 463 4 299 2 43 4 212 2 45 4 383 2 47 2 215 2 217 4 115 6 49 2 50 6 469 2 390 2 117 2 627 2 54 2 474 2 122 4 307 4 230 4 56 2 475 2 311 4 128 6 314 4 480 2 131 4 404 2 633 2 237 4 406 2 549 2 67 4 324 2 553 6 240 2 555 2 411 4 640 2 245 2 487 2 246 4 331 2 78 2 249 6 144 2 564 4 488 2 82 2 338 2 337 2 251 2 253 4 85 2 255 2 257 4 256 2 
0 2 425 2 264 4 572 2 266 2 153 4 155 4 496 2 162 12 353 4 437 2 166 2 271 12 354 2 94 2 277 24 170 4 279 4 96 4 583 2 173 2 512 2 186 2 187 2 513 2 102 2 589 4 450 2 367 4 18 16 594 16 197 2 26 2 374 4 203 2 458 2 457 4 522 2 29 6 460 2 377 2 600 2 528 2 604 2 38 2 463 4 299 2 43 4 212 2 45 4 47 2 215 2 217 4 115 6 49 2 50 6 539 2 469 2 390 2 471 2 117 2 627 2 54 2 474 2 122 4 307 2 230 4 56 2 475 2 311 4 128 6 314 4 480 2 131 4 321 2 404 2 633 2 237 2 406 2 549 2 67 4 324 2 68 2 553 6 240 2 555 2 411 4 640 2 245 2 487 2 246 4 331 2 78 2 249 6 144 2 564 4 488 2 82 2 337 2 252 2 251 4 253 4 85 2 255 2 257 4 256 2 
493 2 1 2 572 6 427 2 428 2 91 1 430 2 437 2 8 2 10 2 94 2 167 2 277 26 582 4 171 2 583 1 280 2 173 2 98 2 358 2 181 2 184 2 101 2 514 2 190 2 366 2 367 4 594 20 593 2 291 2 373 2 198 4 292 2 203 2 457 4 458 2 30 2 295 2 605 2 604 8 380 2 299 2 44 1 47 2 215 2 217 2 469 2 540 2 470 2 390 2 306 2 391 2 474 2 122 2 307 2 56 2 475 6 310 2 400 2 127 2 128 6 234 2 478 2 480 2 481 2 545 6 403 2 60 2 404 2 633 1 549 2 553 3 326 4 486 2 638 2 410 1 244 2 245 2 561 2 141 2 76 2 78 2 249 2 645 2 414 2 143 4 416 2 488 2 251 2 254 6 656 2 342 2 
572 2 594 2 558 2 455 2 388 2 76 3 223 2 167 3 526 6 35 4 143 2 307 3 277 2 580 3 296 2 604 2 475 2 581 2 39 2 298 2 506 2 336 2 234 2 320 2 
572 2 594 2 558 2 455 2 388 2 76 2 223 2 167 2 526 6 35 4 143 2 307 2 277 2 580 2 296 2 604 2 475 2 581 2 39 2 298 2 506 2 336 2 234 2 320 2 
572 2 594 2 558 2 455 2 388 2 76 2 223 2 167 2 526 6 35 4 143 2 307 2 277 2 580 2 296 2 604 2 475 2 581 2 39 2 298 2 506 2 336 2 234 2 320 2 
303 3 345 2 2 2 430 2 470 2 574 2 624 2 222 2 10 2 626 4 503 4 275 2 394 4 307 3 277 10 310 2 355 2 280 2 234 2 59 4 358 2 319 2 548 3 322 6 239 2 289 2 191 4 594 4 455 2 198 4 196 2 76 3 598 2 109 2 34 4 414 2 649 2 604 2 565 3 254 5 
548 2 322 6 263 4 303 2 239 2 345 2 2 2 289 2 191 4 594 4 455 2 196 2 198 4 430 2 598 2 76 2 470 2 109 2 574 2 624 2 626 4 10 2 222 2 34 4 503 4 414 2 275 2 394 4 307 2 277 10 649 2 604 2 310 2 355 2 280 2 234 2 565 2 59 4 358 2 254 4 319 2 
548 2 322 6 263 4 303 2 239 2 345 2 2 2 289 2 191 4 594 4 455 2 196 2 198 4 430 2 598 2 76 2 470 2 109 2 574 2 624 2 626 4 10 2 222 2 34 4 503 4 414 2 275 2 394 4 307 2 277 10 649 2 604 2 310 2 355 2 280 2 234 2 565 2 59 4 358 2 254 4 319 2 
548 2 322 6 263 4 303 2 239 2 345 2 2 2 289 2 191 4 594 4 455 2 196 2 198 4 430 2 598 2 76 2 470 2 109 2 574 2 624 2 626 4 10 2 222 2 34 4 503 4 414 2 275 2 394 4 307 2 277 10 649 2 604 2 310 2 355 2 280 2 234 2 565 2 59 4 358 2 254 4 319 2 
548 2 322 6 263 4 303 2 239 2 345 2 2 2 289 2 191 4 594 4 455 2 196 2 198 4 430 2 598 2 76 2 470 2 109 2 574 2 624 2 626 4 10 2 222 2 34 4 503 4 414 2 275 2 394 4 307 2 277 10 649 2 604 2 310 2 355 2 280 2 234 2 565 2 59 4 358 2 254 4 319 2 
618 2 419 2 70 2 317 2 396 2 554 2 
302 2 467 2 107 2 160 2 179 2 440 2 396 2 
344 2 516 2 216 2 518 2 594 8 559 1 290 2 520 1 27 2 203 2 523 2 118 2 168 2 334 1 277 10 172 2 209 2 281 2 509 2 510 2 84 1 568 1 490 2 357 2 285 2 465 2 
570 2 263 7 594 6 48 2 616 2 244 2 198 12 430 6 431 4 470 6 10 6 503 4 414 6 277 6 81 2 582 4 310 6 171 2 355 2 280 6 130 2 254 15 358 6 60 2 286 2 340 2 63 2 184 2 
288 2 272 2 394 2 191 2 495 2 277 1 138 2 594 1 652 7 350 2 444 2 148 2 566 2 202 2 629 2 655 1 626 2 472 4 
288 2 272 4 394 2 191 2 495 2 138 2 652 6 350 2 444 4 566 2 148 2 202 2 629 4 626 2 472 4 
288 6 272 8 394 2 191 2 495 2 277 1 138 2 594 1 652 10 350 2 444 8 566 8 148 2 202 2 629 8 655 1 626 2 472 4 
272 2 394 2 191 2 495 2 138 2 652 2 350 2 444 2 148 2 202 2 629 2 626 2 472 2 
152 2 215 2 217 4 351 2 159 2 6 2 436 1 392 2 11 2 122 4 277 14 55 2 583 2 584 2 480 2 176 2 284 6 361 2 64 2 65 2 633 2 553 8 637 2 71 2 594 14 557 2 328 2 375 2 458 2 417 1 111 2 150 2 258 2 
424 2 152 2 633 4 550 2 587 2 553 16 215 2 217 6 637 2 192 2 594 16 71 2 557 2 194 2 351 4 6 2 622 2 458 2 375 2 436 2 625 2 392 2 11 2 122 6 277 18 55 2 111 2 583 4 511 2 480 2 176 2 284 10 258 2 64 2 609 2 65 2 
392 2 633 2 215 2 122 2 553 4 277 6 217 2 71 2 594 6 583 2 111 2 480 2 284 2 375 2 458 2 625 2 
152 2 633 4 553 14 215 2 217 6 594 16 71 2 557 2 327 2 351 2 161 2 620 2 6 2 458 2 375 2 435 2 562 2 392 2 599 2 11 2 122 6 308 2 277 16 55 2 111 2 583 4 480 2 381 2 176 2 178 2 382 2 284 8 569 2 258 2 64 2 
242 2 

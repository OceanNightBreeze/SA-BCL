#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 403 
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.Error 84 164 
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException (123,267) 
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException (49,247,417,558,572) (49,247,417,558,572) (49,247,417,558,572) (49,247,417,558,572) (49,247,417,558,572) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V FAILED junit.framework.AssertionFailedError (105,217) 321 
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 165 (313,377) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 165 (313,377) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 163 293 63 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 215 324 
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.Error 366 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 493 300 363 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 493 300 363 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 493 300 363 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 493 300 363 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V FAILED junit.framework.AssertionFailedError (25,60) (25,60) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V FAILED junit.framework.AssertionFailedError (25,60) (25,60) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V FAILED junit.framework.AssertionFailedError (25,60) (25,60) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V FAILED junit.framework.AssertionFailedError (25,60) (25,60) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eltwiseLT([I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3R_58()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_3R_56()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V | ASSIGN | 6590 | = null
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:lte(II)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:jj_2_1(I)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:memberOf(F[F)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.Quant:eltsGTE([II)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.Assert:assertTrue(Z)V
daikon.ProglangType:format()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 17104 | = null
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:eq(DD)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfo:relate_var()V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:eq(JJ)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_2_16(I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.Invariant:getConfidence()D
daikon.ProglangType:baseIsScalar()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:arity()I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern:numIntArrays()I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 19680 | = null
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:memberOf(S[S)Z
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_3_16()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:eltwiseEqual([I)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:jj_3R_57()Z
daikon.inv.Invariants:Invariants()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_3R_162()Z
daikon.test.FormatTestCase:passes()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator; | ASSIGN | 2215 | = null
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGTE([I[I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Debug:logOn()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:eltsGT([II)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:ne(II)Z
daikon.Quant:gte(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.MathMDE:pow(II)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.Invariant:prob_or(DD)D
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1095 | = null
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:jj_3_1()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 22726 | = null
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:max([I)I
jtb.JavaCharStream:readChar()C
utilMDE.WeakHasherMap:size()I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_85()Z
daikon.diff.Node:Node()V
daikon.Quant:lt(II)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:sign(I)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern:intern([J)[J
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:sum([[I)I | CONSTANT | 8702 | 0 -> -1
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.VarInfoName:hashCode()I
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:memberOf(J[J)Z
daikon.inv.Invariant:logOn()Z
utilMDE.MathMDE:gcd([I)I
daikon.ProglangType:dimensions()I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_49()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:eltsGteIndex([I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:concat([I[I)[I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:gt(II)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:isReverse([I[I)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:eltsEqual([II)Z
daikon.ProglangType:isIntegral()Z
daikon.Quant:subsetOf([B[I)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.Invariant:justified()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:concat([I[I)[I | RETURN | 37630 | return null
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:eltsLT([II)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONSTANT | 17524 | 1 -> -1
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType; | STATEMENT | 47994 | stmt -> ;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode; | RETURN | 21283 | return null
daikon.ProglangType:isScalar()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13739 | = null
utilMDE.LimitedSizeIntSet:size()I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParser:jj_3R_47()Z
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.diff.RootNode:RootNode()V
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_scan_token(I)Z
daikon.Ppt:Ppt()V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.FuzzyFloat:isSubset([D[D)Z | STATEMENT | 9323 | stmt -> ;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:noDups([I)Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_53()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.PptSlice2:arity()I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:eq(FF)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.ProglangType:isPseudoArray()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltwiseLTE([I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaCharStream:BeginToken()C
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | OPERATOR | 41870 | != -> >=
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.MathMDE:mod_positive(II)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V | ASSIGN | 1652 | = null
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.PptSlice1:arity()I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:setEqual([I[I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | STATEMENT | 21385 | stmt -> ;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_3R_50()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 24075 | return null
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([JII)[J
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:slice([III)[I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexLT([I[I)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:InvMap()V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfo:new_ppt()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_163()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([I)[I
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:subsetOf([D[F)Z
jtb.JavaCharStream:getEndLine()I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaCharStream:getBeginLine()I
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.ArraysMDE:noDuplicates([I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
83 2 381 4 230 2 70 2 65 2 19 2 30 2 573 2 284 2 
176 6 263 2 12 2 409 2 568 2 480 6 466 6 441 2 87 2 128 2 473 2 
380 2 322 2 14 2 188 2 23 4 459 2 383 4 551 2 559 4 
408 6 593 5 258 3 259 14 70 5 7 2 284 5 115 6 285 8 265 3 305 11 76 2 584 6 78 2 376 2 349 4 535 6 228 1 574 11 536 1 467 1 207 3 312 5 356 14 496 3 232 2 427 1 444 9 
166 6 314 4 
452 2 
194 2 237 2 408 2 593 2 259 6 7 2 115 2 262 2 285 4 305 2 584 2 139 2 535 2 574 2 207 2 312 2 178 2 471 2 231 2 356 4 233 2 444 2 578 2 
32 4 68 2 335 6 408 4 180 2 259 15 535 4 574 8 115 6 312 4 496 2 356 12 305 8 426 4 444 8 584 4 31 6 
213 2 119 2 308 2 603 2 561 2 114 2 492 2 403 2 217 2 201 2 18 2 597 2 507 4 211 2 255 2 385 6 
345 2 452 2 84 2 457 2 286 2 177 2 94 2 520 2 67 2 164 2 
217 2 267 2 123 2 235 2 454 2 611 2 
474 8 408 4 259 5 70 4 367 4 502 2 143 4 284 4 535 4 115 4 207 2 312 4 356 4 584 4 566 2 
403 2 217 2 18 2 
140 2 5 2 368 2 571 22 58 2 296 2 402 2 329 2 105 2 425 2 577 10 117 2 108 2 157 2 
89 2 318 1 386 1 10 2 477 2 323 1 243 1 394 6 395 4 247 2 102 2 175 2 400 2 16 2 17 1 107 2 404 2 254 6 558 2 111 2 340 2 257 2 181 2 187 2 417 2 350 6 572 2 273 6 420 1 352 2 421 2 275 2 494 1 423 1 495 1 279 1 580 2 195 4 46 2 431 1 284 28 49 2 50 2 362 1 136 2 435 1 202 2 203 1 583 2 204 1 438 2 511 2 290 4 141 8 295 2 516 2 294 5 146 2 518 2 145 2 66 1 521 1 522 1 69 1 70 26 595 2 220 1 77 2 159 4 378 2 226 2 83 2 469 4 234 2 
206 2 
284 2 72 2 
303 2 284 4 153 2 
2 20 1 26 167 2 88 10 545 2 546 2 317 28 168 10 6 8 387 2 8 2 93 2 92 2 171 6 97 2 246 12 552 6 393 34 248 2 478 2 401 2 328 2 483 30 104 8 485 4 110 2 256 10 22 2 486 2 560 2 113 2 565 26 185 26 413 12 118 84 120 4 271 2 124 2 570 10 125 14 37 6 353 2 354 2 38 26 40 10 498 2 278 2 429 2 41 2 42 2 130 2 579 26 500 26 501 2 280 26 198 6 503 26 133 2 283 2 48 2 432 84 200 2 134 2 582 2 433 2 135 2 52 14 54 2 55 2 205 2 514 4 588 2 515 2 589 2 208 2 298 2 210 4 150 2 372 2 450 2 151 4 152 16 73 10 74 16 455 2 525 4 375 2 222 2 155 4 460 20 599 26 528 12 158 2 601 26 463 26 81 2 602 2 310 2 82 2 311 2 537 4 607 2 541 2 160 14 542 2 162 2 543 20 236 84 544 2 384 2 
389 2 397 2 419 2 406 1 
276 2 397 2 
334 4 196 2 341 2 571 6 606 2 91 4 59 2 442 2 550 2 148 2 96 2 149 2 304 2 598 2 253 2 306 2 109 2 446 2 
98 2 389 2 
321 2 217 2 330 2 348 2 30 2 
289 2 330 2 348 2 
321 2 217 2 397 2 221 2 258 2 193 2 
407 2 612 2 
321 2 538 2 217 2 258 2 
51 2 179 2 
61 2 250 2 
184 2 360 2 
287 2 332 2 
567 2 250 2 332 2 
297 2 250 2 332 2 
21 2 250 2 332 2 
169 2 250 2 332 2 
301 2 321 2 217 2 585 2 439 6 365 2 251 2 331 6 
509 2 183 2 
321 2 217 2 397 2 221 2 258 2 547 2 212 2 
397 2 221 2 504 2 
397 2 221 2 370 2 
183 2 336 2 389 2 
397 2 221 2 
183 2 339 2 
80 2 397 2 
183 2 389 2 182 2 
184 2 389 2 35 2 
556 2 389 2 332 2 
468 2 51 2 389 2 
389 2 250 2 112 2 
183 2 154 2 
397 2 462 2 
184 2 15 2 
332 2 451 2 
489 2 51 2 
250 2 418 2 
183 2 291 2 
250 2 315 2 
51 2 487 2 
332 2 34 2 
184 2 604 2 
183 2 389 2 445 2 182 2 
410 2 183 2 389 2 445 2 182 2 
183 2 389 2 4 2 
183 2 389 2 161 2 
0 2 239 2 549 2 29 2 
50 2 
89 2 3 2 320 4 548 4 477 2 243 2 325 2 13 2 394 6 395 4 327 2 102 2 398 2 175 2 400 2 107 2 405 2 254 2 337 2 340 6 562 2 24 4 181 2 411 4 266 2 186 2 187 2 270 1 416 2 121 2 350 2 351 2 273 4 275 2 497 2 46 2 281 2 430 2 284 26 47 2 581 2 362 2 136 2 137 2 202 2 583 2 56 2 508 8 511 2 290 4 512 8 141 4 295 2 516 2 518 2 145 2 62 2 447 2 70 26 595 2 302 2 526 2 527 2 77 2 600 2 159 4 532 2 79 2 378 6 226 6 379 2 229 2 83 2 469 4 470 1 540 2 382 2 234 2 
89 2 3 2 320 4 548 4 477 2 243 2 325 2 13 2 394 6 395 4 102 2 398 2 175 2 400 2 107 2 405 2 254 2 111 2 337 2 340 6 562 2 24 4 181 2 266 2 187 2 416 2 121 2 350 2 351 2 273 6 275 2 497 2 131 2 580 2 46 2 281 2 430 2 284 26 47 2 581 2 362 2 136 2 137 2 202 2 583 2 56 2 508 8 510 2 511 2 290 4 512 8 141 4 295 2 516 2 518 2 145 2 447 2 70 26 595 2 302 2 453 2 526 2 527 2 77 2 600 2 159 4 532 2 79 2 378 6 226 6 227 2 379 2 229 2 83 2 469 4 540 2 382 2 234 2 
147 2 95 2 138 2 
147 2 95 2 138 2 
89 2 580 2 132 2 46 2 284 14 477 2 136 2 390 2 202 2 583 2 138 2 511 2 394 6 587 2 290 4 141 2 395 4 249 2 102 2 175 2 516 2 295 2 400 2 145 2 518 2 107 2 111 2 340 2 562 2 595 2 70 14 343 2 181 2 456 2 596 2 187 2 77 2 159 4 531 2 416 2 378 2 226 2 273 6 575 2 274 2 83 2 469 4 275 2 313 2 497 2 234 2 165 2 
307 2 346 2 338 2 100 2 70 2 175 2 214 2 284 4 36 2 170 2 27 2 242 2 590 2 219 2 136 2 126 2 344 2 
89 2 580 2 132 2 46 2 284 14 9 2 477 2 136 2 202 2 583 2 138 2 511 2 394 6 587 2 290 4 141 4 395 4 102 2 175 2 516 2 295 2 400 2 145 2 518 2 107 2 111 2 340 2 562 2 595 2 70 14 343 4 181 2 456 2 596 2 187 2 77 2 159 4 531 2 416 2 377 2 378 2 226 2 273 6 575 4 274 2 83 2 469 4 275 2 497 2 234 2 
89 2 580 2 132 2 46 2 284 14 477 2 136 2 390 2 202 2 583 2 138 2 511 2 394 6 587 2 290 4 141 2 395 4 249 2 102 2 175 2 516 2 295 2 400 2 145 2 518 2 107 2 111 2 340 2 562 2 595 2 70 14 343 2 181 2 456 2 596 2 187 2 77 2 159 4 531 2 416 2 378 2 226 2 273 6 575 2 274 2 83 2 469 4 275 2 313 2 497 2 234 2 165 2 
89 2 240 2 476 2 548 4 388 2 477 2 244 2 172 2 173 2 245 2 394 6 395 4 174 2 101 2 102 2 175 2 103 2 400 2 482 2 557 2 106 2 107 2 405 2 254 2 20 2 111 2 337 2 340 6 408 2 259 4 181 2 115 1 563 2 412 2 488 2 269 2 268 2 187 2 31 4 416 2 32 2 33 2 122 2 189 2 490 2 350 2 190 2 191 2 574 2 273 8 275 2 39 2 576 2 356 4 497 2 428 2 499 2 357 2 580 2 46 2 358 1 197 2 47 2 284 26 199 2 361 2 434 2 505 2 136 2 202 2 288 2 584 2 583 2 508 2 586 2 364 2 511 2 512 2 290 4 141 2 57 2 293 2 366 2 516 2 295 2 518 2 145 2 207 1 591 2 63 2 64 4 369 2 299 2 444 2 592 1 373 2 594 2 595 2 70 20 524 2 216 2 218 2 223 2 156 2 305 2 461 2 77 2 530 2 159 4 529 6 532 2 378 6 226 8 464 2 534 2 535 2 83 2 85 2 469 4 312 2 539 2 608 2 234 2 163 2 472 2 
448 2 337 2 340 2 70 2 260 2 319 2 284 2 241 4 475 2 548 2 26 2 506 3 392 2 224 2 378 2 225 2 226 2 141 3 554 2 350 3 479 2 405 6 254 3 610 2 
448 2 337 2 340 2 70 2 260 2 319 2 284 2 241 4 475 2 548 2 26 2 506 2 392 2 224 2 378 2 225 2 226 2 141 2 554 2 350 2 479 2 405 6 254 2 610 2 
448 2 337 2 340 2 70 2 260 2 319 2 284 2 241 4 475 2 548 2 26 2 506 2 392 2 224 2 378 2 225 2 226 2 141 2 554 2 350 2 479 2 405 6 254 2 610 2 
44 2 45 4 284 10 391 2 326 4 584 2 141 3 554 2 440 2 517 2 399 6 519 2 209 4 443 3 444 2 484 4 371 2 333 2 337 2 449 2 408 2 70 4 259 6 115 2 265 2 305 2 415 2 458 2 347 2 226 2 309 4 349 4 350 3 272 3 535 2 574 2 312 2 355 2 192 3 356 4 127 2 
44 2 45 4 284 10 391 2 326 4 584 2 141 2 554 2 440 2 517 2 399 6 519 2 207 2 209 4 443 2 444 2 484 4 371 2 333 2 337 2 449 2 408 2 70 4 259 4 115 2 265 2 305 2 415 2 458 2 347 2 226 2 309 4 349 4 350 2 272 2 535 2 228 2 574 2 312 2 355 2 192 2 356 4 127 2 
44 2 45 4 284 10 391 2 326 4 584 2 141 2 554 2 440 2 517 2 399 6 519 2 207 2 209 4 443 2 444 2 484 4 371 2 333 2 337 2 449 2 408 2 70 4 259 4 115 2 265 2 305 2 415 2 458 2 347 2 226 2 309 4 349 4 350 2 272 2 535 2 228 2 574 2 312 2 355 2 192 2 356 4 127 2 
44 2 45 4 284 10 391 2 326 4 584 2 141 2 554 2 440 2 517 2 399 6 519 2 207 2 209 4 443 2 444 2 484 4 371 2 333 2 337 2 449 2 408 2 70 4 259 4 115 2 265 2 305 2 415 2 458 2 347 2 226 2 309 4 349 4 350 2 272 2 535 2 228 2 574 2 312 2 355 2 192 2 356 4 127 2 
44 2 45 4 284 10 391 2 326 4 584 2 141 2 554 2 440 2 517 2 399 6 519 2 207 4 209 4 443 2 444 2 484 4 371 2 333 2 337 2 449 2 408 2 70 4 259 4 115 4 265 2 305 2 415 2 458 2 347 2 226 2 309 4 349 4 350 2 272 2 535 2 228 4 574 2 312 2 355 2 192 2 356 4 127 2 
28 2 396 2 316 2 523 2 555 2 47 2 605 2 
513 2 53 2 282 2 414 2 374 2 605 2 
342 1 292 2 142 2 569 1 70 4 215 2 284 4 114 1 400 2 11 2 422 1 116 2 201 1 324 2 129 2 
32 2 592 1 408 1 122 2 101 2 238 2 366 2 259 3 71 2 535 1 574 2 115 1 207 1 312 1 356 3 305 2 444 2 584 1 31 3 
99 2 533 2 309 2 359 2 465 2 481 2 90 2 261 2 564 2 264 2 209 2 86 2 326 2 
99 6 533 2 553 2 309 2 70 1 359 2 465 4 481 2 90 2 284 1 261 2 564 2 264 2 209 2 86 2 609 1 436 2 326 2 
99 6 533 4 553 2 309 2 359 2 465 4 481 2 90 2 261 4 564 4 264 2 209 2 86 2 436 2 326 2 
99 10 533 8 553 8 309 2 70 1 359 2 465 4 481 2 90 2 284 1 261 8 564 8 264 2 209 2 86 2 609 1 436 6 326 2 
363 2 300 2 491 1 493 2 424 1 277 2 
363 2 277 2 300 2 493 2 
363 2 277 2 300 2 493 2 
363 2 277 2 300 2 493 2 
252 2 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 
43 1 25 1 60 1 75 1 144 1 437 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 581 287 113 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (261,613) 340 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 424 424 99 99 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 481 481 627 627 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (195,421) (488,529) (488,529) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (195,421) (488,529) (488,529) 
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException (195,421) (488,529) (488,529) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (195,421) (488,529) (488,529) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (195,421) (488,529) (488,529) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (195,421) (488,529) (488,529) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (195,421) (488,529) (488,529) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (195,421) (488,529) (488,529) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (195,421) (488,529) (488,529) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (195,421) (488,529) (488,529) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (195,421) (488,529) (488,529) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (195,421) (488,529) (488,529) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException (195,421) (488,529) (488,529) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException (195,421) (488,529) (488,529) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 263 (195,421) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 263 (195,421) (195,421) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 263 (195,421) 
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (123,396) 520 267 458 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException (483,540) (483,540) 264 452 246 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 264 452 246 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 264 452 246 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException (483,540) (483,540) (483,540) (483,540) 264 452 246 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:lt(II)Z
daikon.Quant:eq(JJ)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:gte(II)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.ProglangType:isScalar()Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.Invariants:Invariants()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:size()I
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107170 | = null
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern:intern([I)[I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus; | RETURN | 19030 | return null
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:setEqual([I[I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:ne(II)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.Node:Node()V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.ValueTuple:size()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:eq(FF)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaCharStream:getEndLine()I
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:union([I[I)[I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:lte(II)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE:indexOf([I[I)I | CONSTANT | 22394 | 0 -> 1
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:lexLTE([I[I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.Invariant:prob_and(DD)D
daikon.ProglangType:dimensions()I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eltsLteIndex([I)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.Invariant:logOn()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 24075 | return null
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:eltsEqual([II)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:sameLength([I[I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:ReadByte()C
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.MathMDE:negate(I)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_sets()I
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Ppt:Ppt()V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 54234 | = null
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant:justified()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap; | RETURN | 20923 | return null
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quant:eq(DD)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_ntk()I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:relate_var()V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(F[D)Z
utilMDE.MathMDE:pow(II)I
daikon.diff.RootNode:RootNode()V
daikon.inv.Invariant:getConfidence()D
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:intersection([I[I)[I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.diff.InvMap:InvMap()V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4622 | = null
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptSlice0:arity()I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.PptSlice2:arity()I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.MathMDE:sign(I)I
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:noDups([I)Z
daikon.ProglangType:isArray()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexLT([I[I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set; | RETURN | 94892 | return null
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.LimitedSizeIntSet:size()I
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:memberOf(F[F)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern:intern([D)[D
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:lexGTE([I[I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:gt(II)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Debug:logOn()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:subsetOf([F[F)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14799 | = null
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:eltsLT([II)Z
daikon.PptSlice1:arity()I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:subsetOf([F[D)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(JJ)J
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoAux:hashCode()I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd(II)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([I)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
utilMDE.MathMDE:gcd([I)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | CONSTANT | 11084 | 108 -> 1
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:setDiff([I[I)[I
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | STATEMENT | 65291 | stmt -> ;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:eltsGT([II)Z
daikon.Quant:eq(II)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:num_samples()I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 6337 | 1 -> 0
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaCharStream:backup(I)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaCharStream:BeginToken()C
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:subsetOf([S[S)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseGTE([I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:slice([III)[I | OPERATOR | 160615 | == -> !=
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfo:new_ppt()V
utilMDE.SimpleLog.LongVal:LongVal(J)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
626 2 430 2 123 2 298 2 177 2 332 2 396 2 32 2 461 4 
219 6 611 2 134 2 90 2 328 2 655 6 162 2 513 2 51 2 442 6 524 2 
617 2 74 6 539 6 161 4 277 2 123 2 500 2 514 2 534 2 13 4 396 2 493 6 566 6 
169 12 371 2 238 2 311 2 349 2 641 4 223 16 173 10 413 8 608 29 94 16 564 8 396 6 431 8 118 2 55 6 97 4 437 10 482 26 34 10 200 6 123 6 364 16 78 2 305 10 39 4 405 2 447 8 615 10 466 4 
112 4 599 6 
130 2 
371 2 239 2 557 2 620 4 208 2 550 2 473 2 613 2 122 2 103 2 254 2 606 2 37 2 105 2 624 2 41 2 491 2 136 2 648 2 
169 22 495 8 132 4 238 2 89 6 312 4 474 4 329 2 223 32 173 16 501 6 94 32 608 54 4 4 293 2 586 6 331 2 396 4 431 18 55 4 437 16 482 48 159 2 34 16 275 4 593 2 303 4 200 4 123 4 364 32 305 6 537 6 39 2 40 6 492 2 14 4 82 6 615 16 447 6 
408 2 111 2 613 2 
171 10 155 2 296 2 469 2 470 2 612 2 261 2 215 2 422 2 574 22 5 2 502 2 307 2 369 2 
169 2 638 2 47 2 472 2 223 2 173 2 266 2 608 6 94 2 431 2 432 2 137 2 377 2 55 2 437 2 482 4 34 2 364 2 305 4 39 2 404 2 256 2 615 2 
169 4 206 2 132 4 437 4 482 12 89 6 641 2 34 4 476 2 223 8 173 4 364 8 4 4 94 8 608 16 82 6 615 4 
43 2 310 4 17 2 408 6 87 2 620 4 111 2 428 10 372 4 580 4 91 2 411 2 605 2 454 2 455 2 53 2 243 4 225 2 606 4 561 2 393 4 547 10 24 4 504 4 356 2 247 4 548 2 526 2 399 62 609 2 381 2 336 2 213 14 613 8 339 4 383 4 491 2 326 4 83 2 448 2 
319 2 130 2 650 2 348 2 121 2 570 2 498 2 222 2 181 2 659 2 
496 1 241 1 497 1 88 2 499 2 92 1 330 2 7 2 249 5 100 1 178 2 590 1 337 2 416 2 10 2 252 6 417 2 253 2 102 1 420 2 180 1 426 2 257 4 347 2 517 4 191 1 521 2 262 2 115 1 116 2 268 2 194 5 433 3 26 1 435 1 197 4 29 2 30 2 32 2 360 2 276 2 359 1 439 1 123 30 35 4 441 1 443 2 365 2 38 1 282 2 133 6 451 2 294 2 376 1 380 2 630 2 385 2 553 3 66 2 556 4 390 2 389 2 147 4 559 2 639 2 67 1 314 6 150 2 224 5 71 11 392 2 646 2 647 2 395 2 229 2 396 32 649 2 320 6 157 1 158 2 77 6 235 2 402 2 165 2 164 2 324 2 489 2 658 2 81 1 
506 2 396 2 
167 2 542 2 396 4 
236 2 
343 2 85 2 409 2 48 2 113 2 221 6 21 2 351 2 373 6 287 2 604 2 192 2 581 2 193 2 607 2 96 2 375 6 138 2 156 2 653 2 274 2 460 2 572 2 401 2 423 2 104 2 635 2 80 2 
209 2 54 1 412 2 584 2 
584 2 446 2 
97 2 340 2 166 2 584 2 368 2 613 2 185 2 
584 2 59 2 185 2 
584 2 31 2 185 2 
209 2 70 2 578 2 
584 2 185 2 
70 2 204 2 
596 2 584 2 
209 2 70 2 101 2 
209 2 226 2 18 2 
209 2 485 2 384 2 
209 2 119 2 124 2 
209 2 2 2 232 2 
70 2 284 2 
584 2 19 2 
18 2 621 2 
485 2 269 2 
124 2 28 2 
2 2 628 2 
70 2 154 2 
230 2 2 2 
124 2 569 2 
485 2 176 2 
18 2 543 2 
209 2 70 2 101 2 571 2 
209 2 631 2 70 2 101 2 571 2 
56 2 209 2 70 2 
209 2 70 2 505 2 
603 2 125 2 536 2 445 2 
467 2 205 4 346 2 518 2 283 4 76 2 313 2 160 2 533 2 93 2 3 2 574 6 12 2 228 2 355 2 117 2 625 2 494 2 
209 2 394 2 
388 2 340 2 613 2 560 2 
388 2 108 2 340 2 166 2 613 2 560 2 
97 2 340 2 584 2 613 2 577 2 185 2 
419 2 333 2 
340 2 332 2 613 2 643 2 
583 2 124 2 
2 2 135 2 
18 2 530 2 
485 2 175 2 
485 2 2 2 425 2 
139 2 485 2 2 2 
485 2 507 2 2 2 
477 2 485 2 2 2 
189 2 429 6 523 2 227 6 509 2 613 2 340 2 280 2 
70 2 471 2 
360 2 
86 2 172 2 579 2 88 2 499 2 582 2 330 2 510 2 7 2 99 2 178 2 590 2 9 2 252 6 417 2 253 2 594 2 424 2 426 2 342 2 516 2 257 4 517 4 521 2 353 2 435 2 610 2 120 2 29 2 30 6 32 2 531 2 123 22 35 4 443 2 618 2 131 2 133 2 52 2 294 2 210 2 299 2 380 2 459 2 551 2 630 2 214 2 462 2 633 4 554 2 556 4 468 2 390 2 389 2 147 6 639 2 314 6 71 4 392 2 646 2 395 2 396 22 320 4 321 2 158 2 233 2 323 2 77 2 235 2 165 6 324 2 489 2 658 2 
86 2 172 2 579 2 88 2 499 2 582 2 330 2 510 2 7 2 178 2 590 2 9 2 252 6 417 2 253 2 594 2 426 2 342 2 516 2 257 4 347 2 517 4 521 2 353 2 435 2 610 2 120 2 29 2 30 6 32 2 531 2 123 22 35 4 443 2 618 2 131 2 133 2 52 2 294 2 210 2 627 2 299 2 380 2 459 2 551 2 630 2 214 2 462 2 633 4 554 2 556 4 390 2 389 2 147 6 639 2 314 6 150 2 71 4 392 2 646 2 395 2 396 22 320 6 481 2 321 2 158 2 233 2 323 2 77 2 235 2 484 2 165 6 324 2 489 2 658 2 
397 2 
182 2 398 2 
357 2 378 2 629 2 529 2 69 2 179 2 316 2 152 2 362 2 421 2 623 2 488 2 126 2 63 2 174 2 279 2 203 2 72 2 616 2 
69 2 316 2 152 2 623 2 174 2 72 2 334 4 357 2 378 2 629 2 529 2 179 2 362 2 163 2 421 2 126 2 488 2 63 2 184 2 203 2 279 2 616 2 
357 2 378 2 421 2 488 2 279 2 72 2 529 2 69 2 
357 2 378 2 629 2 529 2 69 2 179 2 316 2 152 2 362 2 421 2 623 2 488 2 126 2 63 2 174 2 279 2 203 2 72 2 616 2 
357 2 378 2 629 2 529 2 69 2 179 2 316 2 152 2 362 2 421 2 623 2 488 2 126 2 63 2 174 2 279 2 203 2 72 2 616 2 
357 2 378 2 629 2 529 2 69 2 179 2 316 2 152 2 362 2 421 2 623 2 488 2 126 2 63 2 174 2 279 2 203 2 72 2 616 2 
357 2 378 2 629 2 529 2 69 2 179 2 316 2 152 2 362 2 421 2 623 2 488 2 126 2 63 2 174 2 279 2 203 2 72 2 616 2 
357 2 378 2 629 2 529 2 69 2 179 2 316 2 152 2 362 2 421 2 623 2 488 2 126 2 63 2 174 2 279 2 203 2 72 2 616 2 
357 2 378 2 251 2 529 2 69 2 179 2 316 2 152 2 362 2 421 2 623 2 488 2 63 2 174 2 279 2 203 2 72 2 616 2 
357 2 378 2 251 2 529 2 69 2 179 2 316 2 152 2 362 2 421 2 623 2 488 2 63 2 174 2 279 2 203 2 72 2 616 2 
357 2 378 2 251 2 529 2 69 2 179 2 316 2 152 2 362 2 421 2 623 2 488 2 63 2 174 2 279 2 203 2 72 2 616 2 
357 2 378 2 251 2 529 2 69 2 179 2 316 2 152 2 362 2 421 2 623 2 488 2 63 2 174 2 279 2 203 2 72 2 616 2 
357 2 378 2 529 2 69 2 179 2 316 2 152 2 362 2 421 2 623 2 488 2 63 2 174 2 279 2 203 2 72 2 616 2 
88 2 499 2 330 2 95 2 174 2 335 2 7 2 178 2 337 2 250 2 252 6 417 2 592 2 179 2 421 2 426 2 342 2 257 4 347 2 517 4 190 2 602 2 357 2 29 2 30 6 529 2 32 2 360 2 531 2 123 24 362 2 35 4 443 2 279 2 203 2 616 2 131 2 282 2 133 3 453 3 623 2 294 2 378 2 629 2 380 2 630 2 633 4 63 2 556 4 637 2 389 2 390 2 147 6 639 2 314 8 69 2 150 2 316 2 152 2 71 3 392 2 646 2 395 2 647 2 396 24 72 2 567 2 320 6 158 2 77 3 488 2 324 2 489 4 658 2 
187 2 63 2 475 2 
187 2 63 2 475 2 
88 2 90 2 328 2 499 2 330 2 589 2 6 2 7 2 178 2 252 6 417 2 253 2 421 2 426 2 342 2 257 4 347 2 517 4 114 2 20 2 521 2 263 2 357 2 611 2 29 2 30 2 32 2 531 2 123 14 35 4 443 2 442 4 444 2 126 2 131 2 294 2 456 2 378 2 629 2 380 2 551 2 302 2 63 2 219 4 556 4 390 2 389 2 147 2 639 2 314 2 150 2 475 2 152 6 318 2 71 2 392 2 646 2 562 2 395 2 563 2 396 18 72 2 480 2 320 6 158 2 235 2 655 4 162 2 165 2 324 2 489 2 658 2 
211 2 98 2 190 2 358 2 450 2 68 2 315 2 182 2 123 2 61 2 289 2 255 2 503 2 489 2 395 2 515 2 396 4 
88 2 90 2 328 2 499 2 330 2 589 2 6 2 7 2 178 2 252 6 417 2 253 2 421 2 426 2 342 2 257 4 347 2 517 4 114 2 20 2 521 2 263 2 195 2 357 2 611 2 273 2 29 2 30 2 32 2 531 2 123 14 35 4 443 2 442 4 444 2 126 2 131 2 294 2 456 4 378 2 629 2 380 2 551 2 302 2 63 2 219 4 556 4 390 2 389 2 147 2 639 2 314 2 475 2 150 2 152 6 318 2 71 4 392 2 646 2 562 2 395 2 563 2 396 18 72 2 480 2 320 6 158 2 235 2 655 4 162 2 165 2 324 2 489 2 658 2 
88 2 90 2 328 2 499 2 330 2 589 2 6 2 7 2 178 2 252 6 417 2 253 2 421 2 426 2 342 2 257 4 347 2 517 4 114 2 20 2 521 2 263 2 357 2 611 2 29 2 30 2 32 2 531 2 123 14 35 4 443 2 442 4 444 2 126 2 131 2 294 2 456 2 378 2 629 2 380 2 551 2 302 2 63 2 219 4 556 4 390 2 389 2 147 2 639 2 314 2 150 2 475 2 152 6 318 2 71 2 392 2 646 2 562 2 395 2 563 2 396 18 72 2 480 2 320 6 158 2 235 2 655 4 162 2 165 2 324 2 489 2 658 2 
129 2 407 2 88 2 541 1 0 2 285 2 544 2 288 2 499 2 330 2 294 2 585 2 458 2 511 2 379 2 380 2 252 6 183 2 217 2 426 2 342 2 257 2 15 2 556 2 555 2 347 1 517 4 147 2 390 2 389 2 639 2 314 2 520 2 350 2 150 1 267 2 392 2 646 2 395 2 396 22 73 2 320 3 158 2 27 1 30 2 32 2 33 2 531 2 123 16 35 4 443 2 324 2 489 2 490 2 658 2 
133 3 147 2 519 2 314 2 642 2 71 3 292 2 244 2 396 2 57 2 77 3 30 2 630 2 214 4 418 2 123 2 632 3 633 2 656 2 127 2 366 1 386 2 575 2 128 2 
133 2 147 2 519 2 314 2 642 2 71 2 292 2 244 2 396 2 57 2 77 2 30 2 630 2 214 4 418 2 123 2 632 2 633 2 656 2 127 2 386 2 575 2 128 2 
133 2 147 2 519 2 314 2 642 2 71 2 292 2 244 2 396 2 57 2 77 2 30 2 630 2 214 4 418 2 123 2 632 2 633 2 656 2 127 2 386 2 575 2 128 2 
281 2 240 6 133 3 46 2 173 2 546 3 94 2 414 2 415 2 508 2 8 2 300 2 630 2 420 2 464 4 145 2 308 3 16 2 314 2 642 2 223 2 352 3 71 3 116 2 608 6 396 10 437 2 482 4 527 2 528 4 34 2 200 2 123 4 364 2 403 2 535 4 278 4 447 4 615 2 168 4 
281 2 169 2 240 6 238 2 133 2 46 2 173 2 546 2 94 2 414 2 415 2 508 2 8 2 300 2 630 2 420 2 464 4 145 2 308 2 16 2 314 2 642 2 223 2 352 2 71 2 116 2 608 4 396 10 431 2 437 2 482 4 527 2 528 4 34 2 200 2 123 4 364 2 403 2 535 4 278 4 447 4 615 2 168 4 
281 2 169 2 240 6 238 2 133 2 46 2 173 2 546 2 94 2 414 2 415 2 508 2 8 2 300 2 630 2 420 2 464 4 145 2 308 2 16 2 314 2 642 2 223 2 352 2 71 2 116 2 608 4 396 10 431 2 437 2 482 4 527 2 528 4 34 2 200 2 123 4 364 2 403 2 535 4 278 4 447 4 615 2 168 4 
281 2 169 2 240 6 238 2 133 2 46 2 173 2 546 2 94 2 414 2 415 2 508 2 8 2 300 2 630 2 420 2 464 4 145 2 308 2 16 2 314 2 642 2 223 2 352 2 71 2 116 2 608 4 396 10 431 2 437 2 482 4 527 2 528 4 34 2 200 2 123 4 364 2 403 2 535 4 278 4 447 4 615 2 168 4 
281 2 169 4 240 6 238 4 133 2 46 2 173 2 546 2 94 2 414 2 415 2 508 2 8 2 300 2 630 2 420 2 464 4 145 2 308 2 16 2 314 2 642 2 223 2 352 2 71 2 116 2 608 4 396 10 431 4 437 2 482 4 527 2 528 4 34 2 200 2 123 4 364 2 403 2 535 4 278 4 447 4 615 2 168 4 
1 2 465 2 202 2 549 2 538 2 42 2 
265 2 291 2 323 2 512 2 202 2 234 2 317 2 
449 2 619 2 188 1 87 1 109 1 558 2 639 2 242 2 410 1 23 2 587 2 396 10 356 1 25 2 434 2 270 2 58 2 248 2 652 2 123 8 595 2 363 2 201 2 144 2 406 2 84 2 
169 3 495 2 238 2 327 2 312 2 260 2 223 6 173 6 608 16 94 6 4 2 586 4 295 2 396 6 431 2 457 2 322 2 437 6 482 12 34 6 60 2 532 2 123 6 200 2 364 6 486 2 367 2 82 4 615 6 447 4 
64 1 345 2 44 7 151 2 361 2 123 1 478 2 463 2 645 2 464 2 535 2 36 2 657 4 396 1 588 2 565 2 576 2 168 2 
345 2 44 6 151 4 361 2 478 4 463 2 645 2 464 2 535 2 36 2 657 4 565 2 588 4 576 2 168 2 
64 1 345 2 44 10 151 8 361 2 123 1 478 8 463 2 645 2 464 2 535 2 36 2 657 4 396 1 565 8 588 8 576 6 168 2 
345 2 44 2 151 2 361 2 478 2 463 2 645 2 464 2 535 2 36 2 657 2 588 2 168 2 
370 2 170 1 540 2 452 2 246 2 297 2 598 2 257 2 65 1 107 2 556 2 347 2 390 2 259 2 150 2 264 2 392 2 396 8 196 2 320 6 272 1 75 2 158 2 483 2 123 8 79 1 
601 2 170 2 556 4 390 2 452 2 391 2 264 2 392 2 396 12 246 2 320 6 297 2 158 2 75 6 400 2 123 12 11 2 573 2 614 2 634 2 106 2 309 2 257 4 600 2 
237 2 45 4 452 2 49 2 622 2 374 2 290 6 246 2 297 2 591 2 301 2 141 2 142 2 11 2 304 6 62 4 597 4 106 2 552 2 309 2 146 2 257 10 600 2 218 2 344 6 186 2 258 2 556 8 220 2 347 4 427 2 390 2 148 2 150 4 522 2 22 2 264 2 644 2 392 2 479 2 354 2 396 26 153 2 320 20 436 2 568 2 75 14 158 2 231 2 400 2 438 2 198 2 654 4 440 2 123 26 487 2 325 2 79 2 
370 2 170 2 207 2 540 2 452 2 545 2 286 2 50 2 374 4 245 2 246 2 297 2 212 2 338 2 301 4 382 2 11 2 143 2 216 2 306 2 598 4 341 2 106 2 309 2 387 4 257 10 600 2 344 6 258 4 107 2 636 2 556 10 347 4 110 2 390 2 640 2 259 10 149 2 150 4 264 2 644 2 392 2 396 24 196 2 271 2 320 30 525 2 272 2 568 2 651 2 75 12 158 2 231 2 400 2 199 2 483 6 123 22 79 2 
140 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (241,427) (241,427) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 213 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 71 240 246 96 426 197 317 402 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V ERROR java.lang.ArrayIndexOutOfBoundsException 277 
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 321 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 321 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 321 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 321 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 321 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.Error 127 419 158 334 32 132 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.Error 18 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 26 90 313 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 26 90 313 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 26 90 313 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 26 90 313 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ProglangType:format()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:intersection([I[I)[I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONSTANT | 17524 | 1 -> -1
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:eltsLTE([II)Z
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:eq(FF)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:union([I[I)[I
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:subsetOf([D[D)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([F[D)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lt(II)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.MathMDE:mod_positive(II)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.ValueTuple:size()I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | OPERATOR | 41870 | != -> >=
daikon.Quant:eq(DD)Z
daikon.Quant:memberOf(S[S)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.MathMDE:gcd([I)I
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:lexGT([I[I)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.ModBitTracker:num_vars()I
daikon.Quant:ne(II)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_3_1()Z
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sum([D)D
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:memberOf(F[F)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:eltsGT([II)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:setEqual([I[I)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:eltsLtIndex([I)Z
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE:max([I)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:eltwiseLTE([I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:memberOf(I[I)Z
jtb.JavaCharStream:BeginToken()C
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.ProglangType:dimensions()I
jtb.JavaParser:jj_3_16()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:noDups([I)Z
daikon.Quant:eltsGTE([II)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.ModBitTracker:split(I)I
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.ModBitTracker:num_sets()I
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:sameLength([I[I)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaCharStream:getBeginColumn()I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:gt(II)Z
utilMDE.MathMDE:pow(II)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | CONDITION | 15105 | if (x) -> if (!x)
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:jj_3R_47()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaCharStream:getEndLine()I
jtb.JavaCharStream:getBeginLine()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([I)I
jtb.JavaCharStream:ReadByte()C
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I | CONSTANT | 20467 | 32 -> 1
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Assert:assertTrue(Z)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:eltsEqual([II)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:eltwiseGTE([I)Z | CONDITION | 177183 | if (x) -> if (!x)
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:eltsLT([II)Z
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:min([I)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:eq(JJ)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:lexGTE([I[I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.MathMDE:sign(I)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.Intern:intern([I)[I
daikon.Quant:lexLTE([I[I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:concat([I[I)[I
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaCharStream:getEndColumn()I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_2()I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:subsetOf([J[J)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:gte(II)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 4877 | 40 -> 1
daikon.Quant:memberOf(J[J)Z
jtb.JavaCharStream:backup(I)V
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.MathMDE:modulus([I)[I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.Invariant:prob_and(DD)D
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaCharStream:readChar()C
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:eq(II)Z
utilMDE.Intern:intern([J)[J
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.MathMDE:negate(I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaCharStream:GetSuffix(I)[C
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Intern:numIntArrays()I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:num_samples()I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:jj_ntk()I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.ValueTuple:isMissing(I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:slice([III)[I
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.Quant:setDiff([I[I)[I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 21839 | = null
daikon.Quant:lte(II)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_1(I)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61501 | = null
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.SimpleLog:SimpleLog(Z)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
82 2 270 2 99 2 285 2 92 2 311 2 111 4 77 2 91 2 
86 2 67 6 252 2 76 6 119 2 177 2 247 2 279 6 120 2 392 2 305 2 
349 2 180 6 285 2 315 6 287 2 185 6 187 2 5 2 6 4 270 2 209 4 193 2 131 6 
251 2 381 10 63 2 64 10 356 10 36 8 174 8 39 4 387 6 332 30 138 2 142 10 145 26 285 6 48 4 183 8 149 8 432 4 215 2 21 2 318 6 270 6 244 16 156 13 322 10 216 16 56 2 375 2 436 16 437 4 
427 4 241 4 
378 2 
97 2 98 2 99 2 161 4 165 2 7 2 105 2 173 2 68 2 229 2 329 2 175 2 10 2 15 2 285 4 398 2 400 2 335 4 290 2 121 2 20 4 123 2 188 2 128 2 189 2 191 2 300 2 413 2 302 2 358 2 42 2 258 2 207 2 44 2 260 4 261 2 141 2 140 2 46 2 270 4 154 2 95 2 219 2 375 2 
380 2 160 4 381 6 198 4 166 4 64 16 356 16 104 6 170 2 87 4 174 18 387 4 417 8 88 6 332 54 139 4 142 16 145 48 285 4 147 2 49 6 338 2 149 6 184 4 215 2 122 2 270 4 318 4 244 32 372 4 322 16 156 22 273 2 346 6 129 6 216 32 436 32 404 6 437 2 
7 2 134 2 199 2 
262 2 2 2 337 2 50 2 167 10 200 22 103 2 53 2 94 2 418 2 345 2 95 2 347 2 58 2 
234 2 350 2 409 2 238 2 368 2 326 2 320 2 403 2 433 2 
142 4 145 12 49 6 184 4 64 4 356 4 85 2 244 8 385 2 39 2 372 4 156 4 322 4 216 8 436 8 88 6 332 16 
79 4 250 4 100 2 134 6 165 4 199 2 65 2 383 2 7 8 66 2 384 2 201 4 309 4 282 2 228 2 283 4 175 2 41 14 388 2 43 4 231 4 260 4 389 2 390 2 424 2 263 2 363 4 212 4 365 2 265 10 314 2 401 2 152 4 51 2 19 10 155 4 24 2 373 2 434 2 130 62 
196 2 101 2 230 2 235 2 150 2 242 2 157 2 291 2 378 2 439 2 
272 2 213 2 298 2 284 2 
285 2 435 2 
285 4 206 2 367 2 
362 2 
59 18 278 2 1 12 222 2 163 14 324 10 224 12 62 2 327 14 169 4 171 8 106 2 107 2 281 2 330 4 176 2 71 14 112 4 391 4 333 2 394 6 393 52 113 6 179 2 114 6 395 2 396 2 115 2 236 18 17 10 239 2 240 6 186 2 402 2 23 2 125 8 344 2 295 2 246 2 296 4 406 2 249 10 407 4 194 2 133 10 197 2 33 4 352 14 297 2 299 4 354 20 136 2 255 14 306 4 84 2 415 2 256 12 422 6 259 52 361 10 426 2 425 8 143 8 211 2 428 2 144 12 364 10 264 4 369 52 214 2 151 4 317 2 93 4 271 2 54 8 374 8 96 2 438 12 276 4 
83 2 386 2 204 2 178 1 
342 2 386 2 
7 2 308 2 162 2 386 2 348 2 432 2 12 2 
162 2 386 2 126 2 
162 2 386 2 14 2 
74 2 75 2 204 2 
162 2 386 2 
74 2 275 2 
379 2 386 2 
74 2 204 2 355 2 
124 2 204 2 341 2 
52 2 227 2 204 2 
204 2 420 2 254 2 
37 2 204 2 4 2 
74 2 292 2 
386 2 81 2 
117 2 341 2 
159 2 227 2 
420 2 102 2 
277 2 
74 2 89 2 
45 2 37 2 
420 2 210 2 
227 2 172 2 
135 2 341 2 
74 2 203 2 204 2 355 2 
74 2 203 2 204 2 355 2 233 2 
74 2 204 2 376 2 
221 2 74 2 204 2 
339 2 38 2 243 2 343 2 
0 2 47 2 60 4 351 2 34 2 430 2 61 2 336 4 148 2 370 2 353 2 200 6 303 2 25 2 108 2 294 2 232 2 30 2 
204 2 382 2 
7 2 325 2 266 2 348 2 
7 2 308 2 325 2 266 2 348 2 28 2 
7 2 416 2 162 2 386 2 348 2 432 2 
98 2 181 2 
7 2 348 2 432 2 414 2 
118 2 420 2 
37 2 182 2 
293 2 341 2 
22 2 227 2 
37 2 227 2 164 2 
37 2 319 2 227 2 
37 2 227 2 70 2 
37 2 227 2 312 2 
253 2 7 2 331 2 208 6 429 6 267 2 323 2 348 2 
74 2 190 2 
80 2 
272 2 321 2 298 2 284 2 
272 2 321 2 298 2 284 2 
218 2 280 2 288 2 
218 2 280 2 288 2 
272 2 321 2 298 2 284 2 
272 2 321 2 298 2 284 2 
272 2 321 2 298 2 284 2 
334 2 132 2 285 4 32 2 286 2 410 2 242 1 340 2 307 2 153 2 8 2 127 2 419 2 158 2 377 2 78 2 439 1 
257 2 412 2 192 2 248 2 289 2 29 2 
397 2 9 2 257 2 57 2 217 2 360 2 27 2 
195 2 31 2 223 2 411 2 328 2 40 1 228 1 202 2 69 2 205 1 109 2 110 2 359 2 13 1 423 2 16 2 285 10 431 2 73 2 270 8 371 2 55 2 373 1 405 2 220 2 274 2 
142 2 145 4 408 2 18 2 49 4 184 2 64 2 356 2 225 2 8 2 244 2 322 2 245 2 216 2 436 2 332 5 
285 1 116 2 146 2 237 2 399 4 35 2 366 7 3 2 72 1 301 2 316 2 304 2 137 2 269 2 168 2 270 1 11 2 421 2 
116 2 146 2 237 2 399 4 35 4 366 6 3 2 301 2 316 2 304 2 137 2 269 4 168 2 421 2 11 4 
285 1 116 6 146 2 237 2 399 4 35 8 366 10 3 2 72 1 301 2 316 8 304 2 137 2 269 8 168 2 270 1 421 2 11 8 
146 2 237 2 399 2 35 2 366 2 3 2 301 2 304 2 137 2 269 2 168 2 421 2 11 2 
226 2 285 2 26 2 357 1 90 2 313 2 268 1 270 2 
270 2 285 2 226 2 90 2 26 2 313 2 
270 2 285 2 226 2 90 2 26 2 313 2 
270 2 285 2 226 2 90 2 26 2 313 2 
310 2 

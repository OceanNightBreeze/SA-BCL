#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 108 169 116 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_setDiff()V ERROR java.lang.NullPointerException (22,605) 209 
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (284,405) 426 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException 174 (23,159) (67,393) (67,393) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException 174 (23,159) (67,393) (67,393) 
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException 174 (23,159) (67,393) (67,393) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException 174 (23,159) (67,393) (67,393) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException 174 (23,159) (67,393) (67,393) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException 174 (23,159) (67,393) (67,393) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException 174 (23,159) (67,393) (67,393) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException 174 (23,159) (67,393) (67,393) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 174 (23,159) (67,393) (67,393) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 174 (23,159) (67,393) (67,393) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 174 (23,159) (67,393) (67,393) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 174 (23,159) (67,393) (67,393) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException 174 (23,159) (67,393) (67,393) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException 174 (23,159) (67,393) (67,393) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 174 (23,159) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 174 (23,159) (23,159) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 174 (23,159) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 645 185 506 657 28 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR java.lang.NullPointerException 412 107 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR java.lang.NullPointerException 412 107 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR java.lang.NullPointerException 412 107 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 412 107 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 412 107 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 459 27 622 639 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 210 27 622 639 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 459 27 622 639 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 459 27 622 639 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isArray()Z
daikon.Quant:eq(DD)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:noDups([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:eltsEqual([II)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:gte(II)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.Invariants:Invariants()V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | ASSIGN | 4622 | = null
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:union([I[I)[I | RETURN | 152296 | return null
utilMDE.WeakHasherMap:size()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfo:relate_var()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.ModBitTracker:num_samples()I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.ProglangType:dimensions()I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:lexEqual([I[I)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator; | RETURN | 2296 | return null
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.ArraysMDE:sum([D)D
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 3578 | = null
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:lexGT([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:intersection([I[I)[I
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I | RETURN | 23142 | return null
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.Quant:subsetOf([F[D)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:setDiff([I[I)[I | ASSIGN | 154150 | = null
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:pairwiseEqual([I[I)Z | STATEMENT | 165422 | stmt -> ;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd([I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.Invariant:prob_and(DD)D
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(J[J)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Ppt:Ppt()V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:readChar()C
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:lexLTE([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.PptSlice2:arity()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I | ASSIGN | 184894 | = null
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([D[F)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.Intern:intern([I)[I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.diff.Node:Node()V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Intern:intern([J)[J
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:backup(I)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:lexGTE([I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:memberOf(D[F)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | CONSTANT | 51688 | 64 -> 1
utilMDE.MathMDE:negate(I)I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quant:subsetOf([D[D)Z
daikon.Quant:subsetOf([J[J)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:eltwiseLT([I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | RETURN | 35278 | return null
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.ValueTuple:size()I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:element_range([I)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:ne(II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:InvMap()V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[D)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:eltsGT([II)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Intern:numIntArrays()I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.Quant:lt(II)Z
jtb.JavaCharStream:ReadByte()C
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | ASSIGN | 63682 | = null
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:slice([III)[I | OPERATOR | 160615 | == -> !=
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isIntegral()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.ArraysMDE:sum([I)I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:hashCode()I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo; | RETURN | 946 | return null
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:lexLT([I[I)Z | CONDITION | 170646 | if (x) -> if (!x)
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.ModBitTracker:num_vars()I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:eq(II)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltsLT([II)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.MathMDE:modulus([I)[I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Debug:logOn()Z
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaCharStream:FillBuff()V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:concat([I[I)[I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:logOn()Z
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:sameLength([I[I)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:eq(FF)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.PptSlice0:arity()I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lte(II)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.ProglangType:baseIsScalar()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.Quant:memberOf(F[F)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName; | CONDITION | 27362 | if (x) -> if (!x)
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 22517 | = null
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ProglangType:isScalar()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object; | RETURN | 21332 | return null
daikon.Quant:memberOf(S[S)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | STATEMENT | 9379 | stmt -> ;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.PptSlice1:arity()I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.ModBitTracker:split(I)I
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
375 2 143 2 255 2 87 2 229 2 470 2 421 2 356 4 168 2 
578 2 152 2 592 2 110 2 236 2 322 6 323 2 29 6 501 2 174 6 342 2 
143 2 86 2 290 2 153 2 319 6 666 6 60 4 375 2 239 2 120 6 599 4 105 2 556 6 
389 29 428 8 280 10 570 12 142 2 143 6 613 16 468 2 78 26 167 2 101 10 308 6 264 8 552 8 375 6 434 16 415 10 600 2 243 16 336 2 383 10 605 4 320 6 656 8 681 2 38 4 567 10 22 2 448 4 636 4 
259 6 178 4 
6 2 
300 2 641 2 394 2 167 2 10 2 351 2 219 2 310 4 399 2 122 2 85 2 438 2 479 2 604 2 405 2 129 2 525 2 134 2 187 2 488 2 610 2 138 2 24 2 530 2 143 4 190 2 192 2 100 2 574 2 284 2 375 4 237 4 535 2 32 2 417 2 541 4 71 2 677 2 246 2 35 2 421 2 340 2 632 4 214 2 
660 2 389 19 280 6 570 6 143 4 571 4 613 10 78 16 456 6 264 4 375 4 434 10 172 4 415 6 176 2 243 10 15 4 126 6 364 2 383 6 655 8 567 6 527 2 
284 2 80 2 563 2 
400 10 329 2 549 2 361 2 382 2 128 2 405 2 199 2 133 2 311 2 683 2 47 2 526 2 512 22 
389 6 280 2 570 2 613 2 467 2 282 2 78 4 308 2 101 4 264 2 536 2 668 2 434 2 65 2 597 2 415 2 477 2 243 2 444 2 383 2 567 2 544 2 636 2 
389 16 280 4 570 4 243 8 390 2 571 6 288 2 613 8 15 4 78 12 126 6 364 4 383 4 567 4 434 8 448 2 415 4 
454 4 2 2 394 2 284 8 309 2 263 6 237 2 80 2 595 2 554 2 377 10 46 4 601 2 223 2 48 2 628 36 203 2 522 2 224 2 177 2 650 2 505 2 563 6 421 2 127 2 384 2 386 2 339 2 484 2 18 2 186 2 298 4 407 2 637 2 
431 2 191 2 6 2 194 2 472 2 61 2 148 2 151 2 228 2 659 2 
257 2 161 2 429 2 260 6 344 1 163 2 164 2 76 2 3 2 432 2 345 2 515 1 262 3 4 16 589 6 516 2 79 1 518 2 433 2 348 3 594 2 265 2 170 2 354 2 353 2 82 24 355 2 11 2 357 2 175 3 268 2 13 3 439 32 87 2 363 2 273 2 365 16 274 3 17 2 524 2 275 2 93 2 369 3 278 3 94 2 95 2 279 2 189 4 281 2 611 2 612 2 455 2 195 3 618 2 375 34 534 2 198 6 623 1 104 2 200 4 378 2 627 2 204 2 462 2 542 2 107 2 629 1 36 8 463 2 207 4 292 2 293 2 295 2 296 1 631 3 297 2 115 2 40 2 212 2 545 2 546 2 388 4 638 16 216 1 640 3 301 4 469 6 302 1 305 1 395 2 397 2 646 2 45 2 473 2 218 4 555 2 557 2 476 16 50 4 482 2 481 4 653 2 564 2 402 2 316 2 233 1 52 2 566 3 406 2 130 2 324 1 132 1 485 2 658 2 489 2 136 2 490 2 143 32 663 2 572 1 494 2 145 2 409 5 496 2 500 24 414 2 576 1 150 1 502 2 674 2 244 12 245 2 250 3 73 2 508 8 251 2 74 2 155 2 154 2 254 2 682 2 427 2 583 6 158 2 75 32 256 1 685 2 
375 2 106 2 
375 4 225 2 114 2 
587 2 
451 6 116 2 327 6 453 2 373 2 495 6 169 2 665 2 349 2 537 2 498 2 458 2 81 2 266 6 312 2 70 2 503 2 561 4 272 2 249 2 108 2 654 2 338 2 253 2 182 2 294 2 131 2 184 2 
593 2 196 1 529 2 452 2 
529 2 411 2 
284 2 529 2 426 2 596 2 166 2 584 2 605 2 
529 2 582 2 584 2 
529 2 584 2 7 2 
593 2 125 2 413 2 
529 2 584 2 
41 2 413 2 
529 2 173 2 
593 2 413 2 221 2 
593 2 562 2 43 2 
593 2 493 2 558 2 
593 2 277 2 635 2 
593 2 450 2 230 2 
413 2 90 2 
529 2 51 2 
43 2 374 2 
201 2 558 2 
270 2 635 2 
607 2 450 2 
560 2 413 2 
579 2 450 2 
157 2 635 2 
391 2 558 2 
206 2 43 2 
593 2 117 2 413 2 221 2 
593 2 139 2 117 2 413 2 221 2 
593 2 588 2 413 2 
593 2 252 2 413 2 
287 2 
440 2 661 2 193 2 642 2 235 2 306 2 5 4 422 2 346 2 232 2 403 2 109 2 337 2 423 2 347 4 608 2 512 6 586 2 
593 2 565 2 
284 2 569 2 426 2 553 2 
64 2 
209 2 605 2 
39 2 122 2 
284 2 461 2 426 2 421 2 
442 2 635 2 
450 2 146 2 
43 2 540 2 
314 2 558 2 
511 2 
271 2 450 2 558 2 
144 2 450 2 558 2 
335 2 450 2 558 2 
303 2 42 2 643 6 284 2 538 2 366 2 426 2 633 6 
437 2 413 2 
93 2 
0 2 257 2 260 6 344 2 164 2 589 2 516 2 433 2 594 2 350 2 353 2 354 2 358 2 439 4 359 2 87 2 363 2 273 4 17 2 94 2 95 2 449 2 188 2 189 4 612 2 618 2 375 26 534 2 198 4 460 2 104 2 202 2 627 2 107 2 463 2 207 2 293 2 115 2 388 2 301 2 469 2 551 2 648 2 473 2 218 4 557 2 476 6 227 2 50 4 481 4 482 2 653 2 402 2 404 2 52 2 406 2 324 2 485 2 658 6 486 2 135 2 490 2 143 26 664 4 667 2 502 2 674 2 244 8 73 2 508 2 580 2 154 2 75 6 585 4 
257 2 260 6 344 2 164 2 589 2 516 2 518 2 433 2 594 2 170 2 350 2 353 2 354 2 358 2 439 4 87 2 363 2 273 4 445 2 17 2 94 2 95 2 449 2 188 2 189 4 612 2 26 2 618 2 375 26 534 2 198 6 460 2 104 2 202 2 627 2 107 2 463 2 207 2 293 2 297 2 115 2 388 2 547 2 301 2 469 2 648 2 473 2 218 4 557 2 476 6 227 2 50 4 481 4 482 2 653 2 402 2 404 2 52 2 406 2 324 2 485 2 658 6 486 2 135 2 490 2 143 26 664 4 667 2 502 2 674 2 244 8 73 2 508 2 580 2 154 2 75 6 585 4 
492 2 
96 2 483 2 
159 2 379 2 258 2 578 2 675 2 248 2 393 2 328 4 590 2 420 2 89 4 119 2 318 2 285 2 510 2 341 2 217 2 67 2 624 2 174 2 487 4 672 2 
159 2 258 2 328 4 393 2 590 2 119 2 285 2 217 2 30 2 67 2 624 2 174 2 672 2 379 2 578 2 675 2 248 2 420 2 443 2 89 4 318 2 510 2 341 2 487 4 299 4 
119 2 318 2 159 2 258 2 578 2 217 2 393 2 420 2 67 2 174 2 672 2 
159 2 379 2 258 2 578 2 675 2 248 2 393 2 328 4 590 2 420 2 89 4 119 2 318 2 285 2 510 2 341 2 217 2 67 2 624 2 174 2 487 4 672 2 
159 2 379 2 258 2 578 2 675 2 248 2 393 2 328 4 590 2 420 2 89 4 119 2 318 2 285 2 510 2 341 2 217 2 67 2 624 2 174 2 487 4 672 2 
159 2 379 2 258 2 578 2 675 2 248 2 393 2 328 4 590 2 420 2 89 4 119 2 318 2 285 2 510 2 341 2 217 2 67 2 624 2 174 2 487 4 672 2 
159 2 379 2 258 2 578 2 675 2 248 2 393 2 328 4 590 2 420 2 89 4 119 2 318 2 285 2 510 2 341 2 217 2 67 2 624 2 174 2 487 4 672 2 
159 2 379 2 258 2 578 2 675 2 248 2 393 2 328 4 590 2 420 2 89 4 119 2 318 2 285 2 510 2 341 2 217 2 67 2 624 2 174 2 487 4 672 2 
159 2 370 2 379 2 258 2 578 2 675 2 393 2 248 2 590 2 420 2 119 2 318 2 285 2 510 2 341 2 217 2 67 2 624 2 174 2 487 2 672 2 
159 2 370 2 379 2 258 2 578 2 675 2 393 2 248 2 590 2 420 2 119 2 318 2 285 2 510 2 341 2 217 2 67 2 624 2 174 2 487 2 672 2 
159 2 370 2 379 2 258 2 578 2 675 2 393 2 248 2 590 2 420 2 119 2 318 2 285 2 510 2 341 2 217 2 67 2 624 2 174 2 487 2 672 2 
159 2 370 2 379 2 258 2 578 2 675 2 393 2 248 2 590 2 420 2 119 2 318 2 285 2 510 2 341 2 217 2 67 2 624 2 174 2 487 2 672 2 
159 2 379 2 258 2 578 2 675 2 393 2 248 2 590 2 420 2 119 2 318 2 285 2 510 2 341 2 217 2 67 2 624 2 174 2 487 2 672 2 
159 2 258 2 260 6 164 2 589 3 590 2 518 2 433 2 11 2 174 2 358 2 439 3 602 2 87 2 363 2 180 2 89 2 606 3 17 2 93 2 94 2 95 2 189 4 285 2 618 2 375 24 534 2 198 6 624 2 627 2 379 2 107 2 293 2 297 2 115 2 393 2 469 3 395 2 119 2 217 2 473 2 218 4 557 4 476 6 478 2 49 2 50 4 481 4 402 2 404 2 318 2 52 2 406 2 485 2 658 6 326 2 487 2 490 2 136 2 143 24 667 2 238 2 62 2 67 2 672 2 674 2 578 2 675 2 248 2 420 2 73 2 154 2 581 2 510 2 341 2 75 8 585 4 
410 2 341 2 141 2 
410 2 341 2 141 2 
159 2 260 6 164 2 307 2 518 2 9 2 433 2 119 2 217 2 520 2 473 2 218 4 174 2 557 2 358 2 476 2 439 2 50 4 87 2 363 2 481 4 89 2 402 2 404 2 318 2 52 2 91 2 17 2 406 2 658 2 485 2 94 2 325 2 95 2 487 2 490 2 189 4 143 14 328 2 667 2 618 2 534 2 375 14 198 6 626 2 627 2 674 2 578 2 420 2 73 2 154 2 341 2 680 2 293 2 297 2 115 2 75 2 
627 2 143 2 401 2 630 2 591 2 532 2 581 2 375 4 619 2 147 2 621 2 234 2 475 2 213 2 557 2 96 2 56 2 
159 2 260 6 164 2 307 2 518 2 9 2 433 2 119 2 217 2 520 4 473 2 218 4 174 2 557 2 358 2 476 2 439 4 360 2 50 4 87 2 363 2 481 4 89 2 402 2 404 2 318 2 52 2 91 2 17 2 406 2 658 2 485 2 94 2 325 2 95 2 487 2 490 2 23 2 189 4 143 14 328 2 667 2 618 2 534 2 375 14 198 6 626 2 627 2 674 2 578 2 420 2 73 2 154 2 341 2 680 2 293 2 297 2 115 2 75 2 
159 2 260 6 164 2 307 2 518 2 9 2 433 2 119 2 217 2 520 2 473 2 218 4 174 2 557 2 358 2 476 2 439 2 50 4 87 2 363 2 481 4 89 2 402 2 404 2 318 2 52 2 91 2 17 2 406 2 658 2 485 2 94 2 325 2 95 2 487 2 490 2 189 4 143 14 328 2 667 2 618 2 534 2 375 14 198 6 626 2 627 2 674 2 578 2 420 2 73 2 154 2 341 2 680 2 293 2 297 2 115 2 75 2 
381 2 506 2 77 2 645 2 52 2 647 2 375 4 28 2 657 2 185 2 436 2 332 2 625 2 12 2 123 2 69 2 
143 2 589 3 616 2 469 3 617 2 304 2 44 2 375 2 648 6 352 2 171 2 331 3 398 2 476 2 439 3 559 2 242 2 179 1 107 2 523 2 315 4 317 2 658 2 75 2 585 2 
143 2 589 2 616 2 469 2 617 2 304 2 44 2 375 2 648 6 352 2 171 2 331 2 398 2 476 2 439 2 559 2 242 2 107 2 523 2 315 4 317 2 658 2 75 2 585 2 
143 2 589 2 616 2 469 2 617 2 304 2 44 2 375 2 648 6 352 2 171 2 331 2 398 2 476 2 439 2 559 2 242 2 107 2 523 2 315 4 317 2 658 2 75 2 585 2 
439 3 504 2 107 2 25 2 4 2 469 3 231 3 372 3 412 2 497 2 113 3 53 2 398 2 75 2 638 2 
439 2 412 2 504 2 113 2 497 2 398 2 53 2 25 2 107 2 4 2 469 2 372 2 231 2 75 2 638 2 
439 2 412 2 504 2 113 2 497 2 398 2 53 2 25 2 107 2 4 2 469 2 372 2 231 2 75 2 638 2 
439 2 412 2 504 2 113 2 497 2 398 2 53 2 25 2 107 2 4 2 469 2 372 2 231 2 75 2 638 2 
439 2 412 2 504 2 113 2 497 2 398 2 53 2 25 2 107 2 4 2 469 2 372 2 231 2 75 2 638 2 
102 2 430 2 208 2 435 2 491 2 121 2 
371 2 430 2 519 2 620 2 460 2 66 2 678 2 
343 1 143 8 514 2 662 2 433 2 118 2 375 10 499 1 103 2 63 2 240 2 203 1 269 1 603 2 676 2 226 2 651 2 205 2 247 2 384 1 509 2 387 2 367 2 111 2 447 2 211 2 
389 17 280 6 428 4 513 2 143 6 571 4 613 6 78 12 456 4 375 6 351 2 434 6 172 2 220 2 474 2 415 6 417 2 671 2 243 6 577 2 364 2 383 6 655 2 320 2 567 6 92 2 446 2 
137 2 609 2 568 4 521 2 14 2 143 1 441 2 140 2 37 2 197 1 156 2 375 1 457 2 679 7 112 2 669 2 416 2 55 2 
137 2 609 4 568 4 521 2 14 4 441 2 140 2 37 2 156 2 679 6 457 4 112 2 669 2 416 2 55 2 
137 6 609 8 568 4 521 2 14 8 143 1 441 2 140 2 37 2 197 1 156 8 375 1 679 10 457 8 112 2 669 2 416 2 55 2 
609 2 568 2 521 2 14 2 441 2 140 2 37 2 679 2 457 2 112 2 669 2 416 2 55 2 
162 2 517 2 518 4 83 2 363 6 16 1 19 1 183 2 368 4 21 4 99 2 614 1 27 2 531 4 286 2 375 28 198 16 376 2 459 2 622 2 31 2 33 2 289 1 291 2 385 1 297 4 215 1 639 2 466 1 392 2 550 2 396 2 649 4 218 8 313 2 481 10 652 4 402 6 52 4 321 2 54 2 57 2 143 26 58 2 59 2 408 2 575 2 673 2 419 2 507 2 424 2 425 2 684 2 686 2 
639 2 98 2 143 20 99 2 392 2 165 2 283 2 330 2 644 2 8 2 27 2 531 2 286 2 375 20 533 2 198 18 376 2 218 8 622 2 241 2 83 2 267 2 333 2 334 2 670 2 68 2 418 2 480 2 34 2 380 2 88 2 481 8 363 2 362 2 402 2 16 2 52 2 210 4 368 16 464 2 465 2 634 2 54 2 548 2 97 2 
639 2 160 2 162 2 261 2 392 2 165 2 550 2 471 2 517 2 518 6 396 2 8 2 649 6 218 10 598 4 83 2 84 2 267 2 222 2 124 2 313 2 363 4 481 12 652 6 181 2 402 4 52 2 20 2 276 4 368 14 21 2 528 2 54 2 143 32 99 2 573 2 615 2 58 2 59 2 408 2 330 2 27 2 531 6 375 34 198 24 376 2 459 2 622 2 31 2 149 4 575 4 334 2 539 2 33 2 419 2 289 2 507 2 72 2 424 2 425 2 297 6 464 2 684 2 548 2 
639 2 143 12 99 2 392 2 363 2 481 4 402 2 16 2 518 4 27 2 52 2 375 12 198 10 543 2 459 2 218 4 368 4 297 4 622 2 83 2 267 2 54 2 
1 2 

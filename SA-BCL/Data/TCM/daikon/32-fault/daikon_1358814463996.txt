#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NegativeArraySizeException 73 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (499,516) (499,516) (116,191,208,222,553) (116,191,208,222,553) (116,191,208,222,553) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 309 481 478 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (545,645) (545,645) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 476 476 61 61 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 430 (589,627) (138,641) (138,641) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 430 (589,627) (138,641) (138,641) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 430 (589,627) (138,641) (138,641) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 430 (589,627) (138,641) (138,641) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 430 (589,627) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 430 (589,627) (589,627) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 430 (589,627) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.StringIndexOutOfBoundsException 377 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 321 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 233 390 181 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 233 390 181 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:memberOf(S[S)Z
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:sameLength([I[I)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaCharStream:readChar()C | OPERATOR | 5855 | == -> <=
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.Intern:intern([I)[I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | RETURN | 4209 | return null
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:gte(II)Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd(JJ)J
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.Node:Node()V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.MathMDE:gcd([I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaCharStream:FillBuff()V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(DD)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18499 | 1 -> -1
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.MathMDE:mod_positive(II)I
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:negate(I)I
jtb.JavaCharStream:getEndColumn()I
daikon.inv.Invariant:getConfidence()D
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sum([I)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:ne(II)Z
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.Ppt:Ppt()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:eltsGTE([II)Z
daikon.Quant:concat([I[I)[I
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:lte(II)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:eltsNotEqual([II)Z | CONSTANT | 162209 | 0 -> 1
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:eq(FF)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:union([I[I)[I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfo:new_ppt()V
utilMDE.ArraysMDE:min([I)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:subsetOf([J[J)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(I[I)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:lexGT([I[I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:slice([III)[I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant:justified()Z
daikon.diff.InvMap:InvMap()V
daikon.Quant:eq(JJ)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.ProglangType:baseIsIntegral()Z
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:noDups([I)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:eltwiseLT([I)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaCharStream:ReadByte()C
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant; | RETURN | 7501 | return null
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z | ASSIGN | 925 | = null
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.LimitedSizeIntSet:size()I
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:setDiff([I[I)[I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.PptSlice1:arity()I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.MathMDE:pow(II)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 10696 | 1 -> 0
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Debug:logOn()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.ModBitTracker:num_samples()I
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.ArraysMDE:sum([D)D
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:size()I
utilMDE.Intern:numIntArrays()I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.InvariantFormatTester:execute()Z | CONSTANT | 5806 | 1 -> 0
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:lexLTE([I[I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:dimensions()I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:memberOf(J[J)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:max([I)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ModBitTracker:num_vars()I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode; | ASSIGN | 26710 | = null
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfo:relate_var()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:setEqual([I[I)Z
daikon.PptSlice0:arity()I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:lexLT([I[I)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:isReverse([I[I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ProglangType:isPseudoArray()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.Invariants:Invariants()V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.MathMDE:gcd(II)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Intern:intern([J)[J
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaCharStream:BeginToken()C
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.Invariant:prob_and(DDD)D
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:split(I)I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 183341 | = null
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sum([[D)D
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:subsetOf([F[F)Z
daikon.ValueTuple:size()I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant; | RETURN | 1102 | return null
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.Invariant:logOn()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:gt(II)Z
daikon.Quant:intersection([I[I)[I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:eq(II)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.ProglangType:baseIsScalar()Z
daikon.PptName:isEnterPoint()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([D)[D
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.ArraysMDE:fn_compose([I[I)[I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
499 2 516 2 12 2 510 2 64 2 223 2 327 4 89 2 204 2 
433 2 603 2 351 2 520 6 539 2 365 6 382 2 303 2 506 2 427 2 38 6 
152 2 499 2 421 2 341 6 217 6 199 2 354 2 548 6 516 2 387 4 111 6 334 2 70 4 
625 2 154 26 76 4 412 8 196 4 156 29 79 2 57 4 348 10 516 6 305 2 103 8 615 16 499 6 480 4 521 6 206 8 105 8 638 16 32 6 120 10 621 10 407 10 256 2 108 2 622 10 623 2 408 12 175 2 575 16 
438 4 273 6 
323 2 
274 2 42 2 413 2 0 2 197 2 579 2 612 4 534 2 82 2 371 2 252 2 204 2 538 4 499 4 459 2 460 2 172 2 94 2 468 2 432 2 337 2 19 2 473 2 559 2 345 2 629 2 516 4 600 2 306 2 401 2 140 4 106 2 405 2 31 2 525 2 568 2 189 2 356 2 108 2 239 2 269 2 271 2 272 4 647 2 
299 6 531 4 154 48 196 2 342 2 474 4 156 54 516 4 347 4 348 6 583 2 159 2 305 2 103 6 614 4 250 6 615 32 137 4 60 2 455 6 637 4 499 4 521 4 232 6 424 2 206 18 542 6 638 32 621 16 120 16 32 4 407 16 574 6 622 16 408 22 109 4 575 32 551 8 52 2 
161 2 30 2 197 2 
54 2 253 2 6 2 337 2 435 2 540 2 523 2 78 2 329 2 462 2 464 10 124 22 237 2 609 2 
300 2 154 4 196 2 156 6 198 2 219 2 580 2 348 4 251 2 615 2 374 2 375 2 206 2 638 2 621 2 120 2 32 2 255 2 407 2 622 2 408 2 575 2 296 2 
455 6 531 4 76 2 154 12 638 8 156 16 621 4 120 4 366 2 407 4 622 4 408 4 452 2 575 8 250 6 615 8 137 4 
396 2 73 2 547 2 66 2 163 2 86 2 75 2 384 2 507 6 340 2 
472 2 215 2 495 2 562 2 322 2 323 2 352 2 308 2 429 2 112 2 
39 2 278 2 450 1 77 4 116 2 242 2 496 2 158 2 582 2 83 2 49 2 420 2 9 4 254 1 499 21 457 2 119 6 167 1 208 2 90 2 546 2 425 4 504 4 177 2 471 2 17 1 554 1 180 4 512 1 434 2 182 1 218 1 344 2 259 2 221 1 516 23 261 4 517 2 25 2 632 2 223 2 440 4 227 2 307 1 604 1 442 2 63 2 107 2 188 2 65 1 355 2 190 2 573 6 572 2 235 2 191 2 143 1 488 2 36 1 490 4 491 1 447 2 
571 2 516 2 
516 4 247 2 532 2 
487 2 
315 2 98 2 155 2 301 2 44 2 475 2 560 2 131 2 535 4 478 2 27 4 136 2 481 2 10 2 118 2 524 2 87 2 328 2 311 2 309 2 144 2 68 2 624 2 125 2 
102 1 617 2 56 2 21 2 
257 2 617 2 
611 2 480 2 550 2 617 2 213 2 197 2 393 2 
456 2 617 2 213 2 
404 2 617 2 213 2 
117 2 469 2 21 2 
617 2 213 2 
96 2 117 2 
151 2 
117 2 238 2 21 2 
437 2 47 2 21 2 
416 2 610 2 21 2 
260 2 148 2 21 2 
100 2 21 2 214 2 
643 2 117 2 
617 2 533 2 
293 2 47 2 
598 2 610 2 
147 2 148 2 
368 2 100 2 
117 2 1 2 
618 2 100 2 
148 2 607 2 
243 2 610 2 
47 2 29 2 
117 2 15 2 238 2 21 2 
320 2 117 2 15 2 238 2 21 2 
281 2 117 2 21 2 
117 2 21 2 330 2 
500 2 391 2 13 2 35 2 
130 2 197 2 393 2 46 2 
130 2 550 2 197 2 174 2 393 2 46 2 
336 2 480 2 617 2 213 2 197 2 393 2 
291 2 306 2 
240 2 480 2 197 2 393 2 
310 2 148 2 
100 2 129 2 
7 2 47 2 
146 2 610 2 
463 2 610 2 100 2 
380 2 610 2 100 2 
610 2 100 2 228 2 
298 2 610 2 100 2 
350 2 197 2 393 2 545 6 645 2 431 2 
117 2 229 2 
494 2 325 2 275 2 41 2 577 2 590 2 115 2 392 2 264 2 157 2 124 6 357 2 266 2 211 4 16 2 48 2 226 2 71 4 
290 2 21 2 
235 2 
77 5 242 2 496 2 582 2 249 2 80 2 420 2 162 2 499 26 9 3 165 2 501 2 502 2 592 2 90 6 425 4 504 4 177 2 176 2 179 2 180 4 338 2 97 2 434 2 20 3 344 2 436 2 516 26 261 3 25 6 518 2 440 4 28 2 442 2 188 2 355 2 190 2 445 2 110 2 447 2 39 2 361 2 362 2 276 4 278 6 282 2 283 4 201 2 200 2 284 2 49 2 286 2 457 2 205 2 119 6 546 2 465 4 549 2 471 2 389 2 132 2 220 2 223 2 565 2 134 2 227 2 402 2 63 2 483 2 573 4 572 2 236 8 488 2 150 2 
77 4 242 2 496 2 582 2 249 2 80 2 588 2 420 2 162 2 499 26 9 2 165 2 501 2 502 2 592 2 90 6 425 4 504 4 177 2 176 2 179 2 180 4 338 2 97 2 434 2 20 2 344 2 259 2 516 26 517 2 261 2 25 6 518 2 440 4 28 2 442 2 188 2 355 2 190 2 445 2 110 2 447 2 39 2 361 2 276 4 278 6 282 2 283 4 201 2 200 2 49 2 286 2 457 2 205 2 119 6 546 2 465 4 549 2 467 2 471 2 389 2 132 2 220 2 476 2 223 2 565 2 134 2 227 2 61 2 402 2 63 2 483 2 573 6 572 2 236 8 488 2 150 2 
294 2 
81 2 597 2 
113 2 414 2 317 2 365 6 242 2 2 4 584 2 585 2 285 4 419 2 420 2 499 6 539 4 457 2 119 4 376 2 209 2 594 2 122 8 170 2 504 2 506 2 427 4 430 2 470 4 471 2 552 2 180 2 127 2 55 4 627 2 394 2 22 2 303 2 183 2 628 2 398 2 599 2 516 12 349 2 634 2 635 8 231 2 403 2 138 2 520 6 442 2 443 4 63 2 263 2 527 4 641 2 190 2 528 2 142 2 145 2 492 2 69 2 270 10 38 6 
113 2 193 2 414 2 317 2 365 6 242 2 2 4 584 2 585 2 285 4 419 2 420 2 164 2 499 6 539 4 457 2 119 4 376 2 209 2 594 2 122 8 170 2 504 2 595 4 506 2 427 4 430 2 470 4 471 2 552 2 180 2 127 2 627 2 55 4 394 2 22 2 303 2 183 2 628 2 398 2 599 2 516 12 349 2 635 8 231 2 403 2 138 2 351 2 520 8 442 2 443 4 63 2 263 2 527 4 641 2 190 2 528 2 145 2 492 2 270 10 69 2 38 8 
138 2 539 2 127 2 627 2 55 4 414 2 317 2 263 2 365 2 641 2 170 2 528 2 2 4 427 2 69 2 285 2 231 2 38 2 
113 2 414 2 317 2 365 4 242 2 2 4 584 2 585 2 285 4 419 2 420 2 499 6 539 4 457 2 119 4 376 2 209 2 594 2 122 4 170 2 504 2 506 2 427 4 430 2 470 4 471 2 552 2 180 2 127 2 55 4 627 2 394 2 22 2 183 2 628 2 398 2 599 2 516 12 349 2 634 2 635 4 231 2 403 2 138 2 351 2 520 6 442 2 443 4 63 2 263 2 527 4 641 2 190 2 528 2 142 2 145 2 492 2 69 2 270 6 38 6 
113 2 414 2 317 2 365 6 242 2 2 4 584 2 585 2 285 4 419 2 420 2 499 6 539 4 457 2 119 4 376 2 209 2 594 2 122 4 170 2 504 2 506 2 427 4 430 2 470 4 471 2 552 2 180 2 127 2 55 4 627 2 394 2 22 2 183 2 628 2 398 2 599 2 516 12 349 2 634 2 635 4 231 2 403 2 138 2 603 2 520 6 442 2 443 4 63 2 263 2 527 4 641 2 190 2 528 2 142 2 145 2 492 2 69 2 270 6 38 4 
113 2 414 2 317 2 365 6 242 2 2 4 584 2 585 2 285 4 419 2 420 2 499 6 539 4 457 2 119 4 376 2 209 2 594 2 122 8 170 2 504 2 506 2 427 4 430 2 470 4 471 2 552 2 180 2 127 2 55 4 627 2 394 2 22 2 303 2 183 2 628 2 398 2 599 2 516 12 349 2 634 2 635 4 231 2 403 2 138 2 520 6 442 2 443 4 63 2 263 2 527 4 641 2 190 2 528 2 142 2 145 2 492 2 69 2 270 6 38 6 
113 2 414 2 317 2 365 8 242 2 2 4 584 2 585 2 285 4 419 2 420 2 499 6 539 4 457 2 119 4 376 2 209 2 594 2 122 8 170 2 504 2 506 2 427 4 430 2 470 4 471 2 552 2 180 2 127 2 55 4 627 2 394 2 22 2 303 2 183 2 628 2 398 2 599 2 516 12 349 2 634 2 635 8 231 2 403 2 138 2 603 2 520 8 442 2 443 4 63 2 263 2 527 4 641 2 190 2 528 2 142 2 145 2 492 2 69 2 270 10 38 6 
113 2 414 2 317 2 365 6 242 2 2 4 584 2 585 2 285 4 419 2 420 2 499 6 539 4 457 2 119 4 376 2 209 2 594 2 122 8 170 2 504 2 506 2 427 4 430 2 470 4 471 2 552 2 180 2 127 2 55 4 627 2 394 2 22 2 303 2 183 2 628 2 398 2 599 2 516 12 349 2 634 2 635 8 231 2 403 2 138 2 520 6 442 2 443 4 63 2 263 2 527 4 641 2 190 2 528 2 142 2 145 2 492 2 69 2 270 10 38 6 
113 2 95 2 389 2 627 2 55 2 414 2 394 2 22 2 365 6 628 2 2 2 516 4 584 2 634 2 349 2 162 2 403 2 603 2 138 2 520 4 539 4 263 2 527 2 209 2 122 2 641 2 594 2 236 2 506 2 528 2 549 2 427 4 69 2 470 2 430 2 552 2 38 4 
113 2 95 2 389 2 627 2 55 2 414 2 394 2 22 2 365 6 303 2 628 2 2 2 516 4 584 2 634 2 349 2 162 2 403 2 138 2 520 4 539 4 263 2 527 2 209 2 122 6 641 2 594 2 236 2 506 2 528 2 549 2 427 4 69 2 470 2 430 2 552 2 38 6 
113 2 95 2 389 2 627 2 55 2 414 2 394 2 22 2 365 6 303 2 628 2 2 2 516 4 584 2 634 2 349 2 635 4 162 2 403 2 138 2 520 4 539 4 263 2 527 2 209 2 122 6 641 2 594 2 236 2 506 2 528 2 549 2 427 4 270 4 69 2 470 2 430 2 552 2 38 6 
113 2 95 2 389 2 627 2 55 2 414 2 394 2 22 2 365 6 303 2 628 2 2 2 516 4 584 2 634 2 349 2 635 4 162 2 403 2 138 2 520 4 539 4 263 2 527 2 209 2 122 6 641 2 594 2 236 2 506 2 528 2 549 2 427 4 270 4 69 2 470 2 430 2 552 2 38 6 
113 2 627 2 55 2 414 2 394 2 22 2 365 6 303 2 628 2 2 2 516 4 584 2 634 2 349 2 635 4 403 2 138 2 520 4 539 4 443 2 263 2 527 2 209 2 122 6 641 2 594 2 506 2 528 2 427 4 270 4 69 2 470 2 430 2 552 2 38 6 
411 2 77 3 414 2 242 2 496 2 2 2 582 2 584 2 419 2 420 2 499 24 9 3 591 2 90 6 594 2 425 4 504 4 506 2 427 4 177 2 430 2 180 4 338 2 434 2 344 2 22 2 259 2 516 28 517 2 261 3 25 6 518 2 349 2 440 4 520 4 442 2 443 2 188 2 263 2 527 2 355 4 190 2 528 2 110 2 270 2 447 2 530 2 38 6 39 2 113 2 276 4 278 8 363 2 365 6 369 2 49 2 539 4 457 2 119 6 619 2 209 2 546 2 122 6 470 2 471 2 552 2 553 2 55 2 627 2 394 2 303 2 628 2 304 2 222 2 223 2 634 2 227 2 402 2 403 2 138 2 63 2 641 2 572 2 573 6 235 2 488 2 644 3 69 2 493 2 
43 2 349 2 209 2 
43 2 349 2 209 2 
576 2 77 2 242 2 496 2 2 2 582 2 5 2 420 2 162 2 499 14 90 2 425 4 504 4 506 2 173 2 427 4 177 2 430 2 180 4 338 2 434 2 344 2 259 2 516 18 517 2 25 2 518 2 440 4 349 2 520 4 442 2 606 2 188 2 263 2 527 2 355 2 33 2 190 2 110 2 270 2 447 2 38 6 39 2 278 2 365 6 49 2 539 4 457 2 119 6 209 2 546 2 122 6 549 2 470 2 471 2 389 2 627 2 55 2 303 2 628 2 132 2 223 2 227 2 635 2 63 2 569 2 573 6 572 2 236 2 67 2 488 2 69 2 
262 2 74 2 339 2 499 2 457 2 591 2 317 2 88 2 640 2 355 2 613 2 485 2 212 2 516 4 597 2 418 2 84 2 
576 2 77 4 242 2 496 2 2 2 582 2 587 2 5 4 420 2 162 2 499 14 589 2 90 2 425 4 504 4 506 2 173 2 427 4 177 2 430 2 180 4 338 2 434 2 344 2 259 2 516 18 517 2 25 2 518 2 440 4 349 2 520 4 442 2 606 2 188 2 263 2 527 2 355 2 33 2 190 2 110 2 270 2 447 2 38 6 39 2 278 2 365 6 49 2 539 4 457 2 119 6 209 2 546 2 122 6 549 2 470 2 471 2 389 2 627 2 55 2 303 2 628 2 132 2 223 2 227 2 635 2 63 2 569 2 573 6 572 2 236 2 67 2 488 2 69 2 
576 2 77 2 242 2 496 2 2 2 582 2 5 2 420 2 162 2 499 14 90 2 425 4 504 4 506 2 173 2 427 4 177 2 430 2 180 4 338 2 434 2 344 2 259 2 516 18 517 2 25 2 518 2 440 4 349 2 520 4 442 2 606 2 188 2 263 2 527 2 355 2 33 2 190 2 110 2 270 2 447 2 38 6 39 2 278 2 365 6 49 2 539 4 457 2 119 6 209 2 546 2 122 6 549 2 470 2 471 2 389 2 627 2 55 2 303 2 628 2 132 2 223 2 227 2 635 2 63 2 569 2 573 6 572 2 236 2 67 2 488 2 69 2 
377 2 
314 2 276 2 556 1 277 2 278 2 316 2 557 2 77 3 280 2 516 2 261 3 25 2 586 2 402 2 519 2 9 3 499 2 616 3 567 2 51 2 483 6 90 2 385 2 428 2 295 4 
519 2 314 2 402 2 499 2 276 2 9 2 277 2 616 2 316 2 278 2 77 2 557 2 567 2 280 2 51 2 483 6 90 2 385 2 516 2 261 2 25 2 428 2 586 2 295 4 
519 2 314 2 402 2 499 2 276 2 9 2 277 2 616 2 316 2 278 2 77 2 557 2 567 2 280 2 51 2 483 6 90 2 385 2 516 2 261 2 25 2 428 2 586 2 295 4 
154 4 278 2 195 2 77 3 279 2 156 6 558 3 514 3 497 2 516 10 103 4 370 2 633 2 453 4 615 2 203 2 402 2 9 3 499 4 522 4 521 2 541 2 50 2 638 2 621 2 120 2 51 2 503 4 593 2 407 2 265 2 486 4 333 3 14 2 622 2 386 4 312 2 466 6 575 2 268 2 
154 4 195 2 278 2 77 2 279 2 156 4 497 2 370 2 615 2 453 4 203 2 499 4 9 2 206 2 50 2 541 2 51 2 120 2 621 2 593 2 503 4 333 2 622 2 14 2 386 4 466 6 558 2 514 2 516 10 103 4 305 2 633 2 402 2 521 2 522 4 638 2 265 2 407 2 486 4 408 2 312 2 575 2 268 2 
154 4 195 2 278 2 77 2 279 2 156 4 497 2 370 2 615 2 453 4 203 2 499 4 9 2 206 2 50 2 541 2 51 2 120 2 621 2 593 2 503 4 333 2 622 2 14 2 386 4 466 6 558 2 514 2 516 10 103 4 305 2 633 2 402 2 521 2 522 4 638 2 265 2 407 2 486 4 408 2 312 2 575 2 268 2 
154 4 195 2 278 2 77 2 279 2 156 4 497 2 370 2 615 2 453 4 203 2 499 4 9 2 206 2 50 2 541 2 51 2 120 2 621 2 593 2 503 4 333 2 622 2 14 2 386 4 466 6 558 2 514 2 516 10 103 4 305 2 633 2 402 2 521 2 522 4 638 2 265 2 407 2 486 4 408 2 312 2 575 2 268 2 
154 4 195 2 278 2 77 2 279 2 156 4 497 2 370 2 615 2 453 4 203 2 499 4 9 2 206 4 50 2 541 2 51 2 120 2 621 2 593 2 503 4 333 2 622 2 14 2 386 4 466 6 558 2 514 2 516 10 103 4 305 4 633 2 402 2 521 2 522 4 638 2 265 2 407 2 486 4 408 4 312 2 575 2 268 2 
555 2 85 2 423 2 646 2 53 2 449 2 
40 2 85 2 58 2 62 2 444 2 37 2 176 2 
194 2 410 2 340 1 578 2 343 1 396 1 515 2 367 2 516 10 24 2 246 2 439 2 399 2 186 2 287 2 499 8 422 2 207 2 168 1 141 2 543 2 379 2 123 2 642 2 178 1 471 2 
531 2 154 12 19 2 156 16 559 2 128 2 258 2 321 2 347 2 103 4 305 2 615 6 455 4 521 2 206 2 542 4 638 6 120 6 621 6 210 2 121 2 407 6 489 2 622 6 408 3 575 6 149 2 
326 1 498 2 499 1 522 2 289 4 302 2 406 2 461 2 395 2 101 2 332 2 581 2 505 2 486 2 516 1 508 2 386 2 360 7 
498 2 522 2 289 4 302 4 406 4 461 2 101 2 395 2 332 2 581 2 505 2 486 2 508 4 386 2 360 6 
326 1 498 2 499 1 522 2 289 4 302 8 406 8 461 2 101 8 395 2 332 2 581 6 505 2 486 2 516 1 508 8 386 2 360 10 
498 2 522 2 289 2 302 2 406 2 461 2 395 2 332 2 505 2 486 2 508 2 386 2 360 2 
39 2 72 1 582 2 454 2 288 2 499 8 425 2 511 2 626 2 390 2 181 2 259 2 630 1 23 1 631 2 516 8 517 2 185 1 440 2 602 1 139 1 233 2 573 4 358 1 488 2 446 2 313 2 
39 2 153 2 318 2 45 2 241 2 319 2 244 2 245 2 582 2 451 2 248 2 417 2 3 4 372 2 536 6 373 2 202 2 4 4 160 4 537 2 8 2 499 44 11 2 458 2 292 2 620 2 544 2 169 2 378 2 331 2 381 2 92 2 91 2 425 20 383 2 171 6 509 2 596 2 335 2 297 2 388 2 126 2 626 38 216 2 390 2 18 2 99 2 513 2 181 2 397 2 561 4 23 2 133 2 516 46 563 2 26 2 601 2 477 2 224 2 479 2 440 20 184 2 225 2 59 2 636 2 400 2 135 2 230 4 104 2 441 4 605 2 187 2 139 2 233 2 234 2 482 2 639 2 34 4 570 2 573 42 484 6 488 2 267 2 359 2 192 2 409 2 529 4 608 2 313 2 448 2 
39 2 499 10 626 4 390 2 181 2 353 2 233 2 425 4 573 10 259 4 516 10 582 2 517 4 488 2 224 2 225 2 440 4 135 2 400 2 313 2 
39 2 72 6 114 2 415 4 364 4 45 4 582 2 3 6 454 10 324 2 288 2 499 26 11 4 166 2 544 2 378 4 92 4 331 2 381 2 425 14 171 6 426 2 511 10 335 2 297 2 626 14 216 4 390 2 181 2 259 10 630 2 23 2 631 2 346 2 516 28 517 10 563 2 564 2 224 2 185 2 225 2 440 14 135 2 400 2 230 6 441 2 566 2 139 2 233 2 234 2 526 2 34 6 570 2 573 38 484 8 358 2 488 2 446 2 192 4 359 2 313 2 608 2 
93 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 321 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 137 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.Error 367 155 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 351 348 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V FAILED junit.framework.AssertionFailedError (604,742) 230 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (346,717) (208,736) (208,736) 
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.ClassCastException 662 149 207 564 (173,294) 95 (508,731) (173,294) 545 (508,731) 344 368 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.ClassCastException 662 149 207 564 (173,294) 95 (508,731) (173,294) 545 (508,731) 344 368 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.ClassCastException 662 149 207 564 (173,294) 95 (508,731) (173,294) 545 (508,731) 344 368 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.ClassCastException 662 149 207 564 (173,294) 95 (508,731) (173,294) 545 (508,731) 344 368 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 500 (346,717) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 500 (346,717) (346,717) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 500 (346,717) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 483 687 572 123 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 187 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 691 760 240 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 528 117 126 691 760 240 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 528 117 126 691 760 240 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 528 117 126 26 60 691 760 240 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.Debug:logOn()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:eq(JJ)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.PptName:isEnterPoint()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:isScalar()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.PptSlice2:arity()I
daikon.ProglangType:baseIsScalar()Z
daikon.inv.Invariants:Invariants()V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:lexEqual([I[I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(I[I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.InvariantFormatTester:execute()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z | CONSTANT | 53880 | 0 -> -1
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.MathMDE:negate(I)I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.ModBitTracker:num_sets()I
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt:Ppt()V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONSTANT | 14703 | 0 -> 1
utilMDE.ArraysMDE:max([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.Intern:numIntArrays()I
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.Intern:intern([J)[J
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Intern:intern([D)[D
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:memberOf(F[F)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:subsetOf([D[F)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:gte(II)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:lexLTE([I[I)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I | CONSTANT | 65761 | 0 -> 1
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:lt(II)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:lexLT([I[I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | RETURN | 4209 | return null
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.Invariant:justified()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | ASSIGN | 19872 | = null
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:gcd(JJ)J
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.PptSlice0:arity()I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptSlice1:num_samples()I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaCharStream:readChar()C
daikon.Quant:memberOf(D[F)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaCharStream:getEndLine()I
daikon.Quant:eltsGTE([II)Z
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:relate_var()V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 17131 | = null
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quant:eq(II)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE:min([I)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Quant:slice([III)[I
daikon.Quant:eltsLTE([II)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Intern:intern([I)[I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:element_range([I)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:gt(II)Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 182066 | = null
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaCharStream:getBeginLine()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration; | RETURN | 7701 | return null
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:lte(II)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.ArraysMDE:sum([I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaCharStream:FillBuff()V
daikon.diff.InvMap:InvMap()V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.Node:Node()V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:ne(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.MathMDE:modulus([I)[I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo; | RETURN | 20729 | return null
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:memberOf(S[S)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:memberOf(F[D)Z
daikon.Quant:concat([I[I)[I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.ValueTuple:size()I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.ProglangType:isIntegral()Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eq(FF)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptName:isCombinedExitPoint()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_ntk()I
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z | CONDITION | 155109 | if (x) -> if (!x)
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:lexGT([I[I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter; | CONDITION | 5537 | if (x) -> if (!x)
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ProglangType:isArray()Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfo:new_ppt()V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14490 | = null
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:subsetOf([F[F)Z
daikon.ProglangType:dimensions()I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:eltwiseLT([I)Z | CONSTANT | 175803 | 0 -> 1
daikon.PptSlice1:arity()I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:eltsEqual([II)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.ValueTuple:isMissing(I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaCharStream:getBeginColumn()I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair; | RETURN | 2847 | return null
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:noDups([I)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String; | RETURN | 29320 | return null
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:internSubsequence([III)[I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
377 2 529 2 442 4 502 2 616 2 107 2 781 2 492 2 90 2 
167 2 340 2 361 6 321 2 747 2 200 2 4 4 365 4 720 2 220 2 
97 4 252 4 144 2 213 6 38 6 353 2 658 2 422 2 628 6 616 2 107 2 756 2 413 6 
27 2 748 4 379 10 380 8 405 2 640 2 244 16 160 8 786 4 162 6 302 16 616 6 759 10 745 10 618 10 681 2 364 16 436 2 287 4 338 2 309 10 565 26 395 6 774 28 397 8 683 12 107 6 601 8 150 4 803 2 
372 6 290 4 
559 2 
401 2 463 2 295 2 604 2 620 2 730 2 233 2 549 2 156 2 640 2 382 2 90 2 454 2 174 2 410 2 137 2 373 2 694 2 178 2 412 2 632 4 
634 4 525 2 379 16 405 2 244 32 484 6 32 6 160 6 275 2 162 4 302 32 356 2 163 2 616 4 759 16 740 8 358 2 495 4 745 16 618 16 364 32 366 4 121 6 309 6 565 48 716 6 395 4 774 54 45 6 127 4 397 18 683 22 176 4 107 4 49 4 702 2 542 6 663 4 150 2 
604 2 755 2 519 2 
264 22 424 2 742 2 256 2 589 2 73 2 271 2 135 2 15 2 773 2 24 10 443 2 695 2 475 2 
379 2 133 2 158 2 244 2 788 2 59 2 302 2 759 2 745 2 618 2 364 2 535 2 626 2 419 2 258 2 309 4 124 2 565 4 395 2 774 6 397 2 683 2 150 2 
495 4 745 4 748 2 618 4 364 8 379 4 765 2 244 8 484 6 565 12 716 6 774 16 303 2 302 8 683 4 49 4 759 4 
401 4 604 8 478 2 448 4 479 2 347 2 728 4 526 4 482 2 212 4 30 2 354 4 579 4 215 4 555 10 755 6 490 2 739 4 164 2 140 2 519 2 282 2 679 4 466 2 171 2 470 2 655 2 229 4 174 2 342 4 314 62 474 2 345 2 596 2 179 2 701 10 600 2 292 14 632 4 505 2 
180 2 559 2 155 2 367 2 769 2 122 2 136 2 202 2 719 2 721 2 
1 5 3 2 608 2 510 2 613 2 511 2 706 6 512 2 514 2 409 1 615 24 7 2 411 6 616 32 518 3 9 2 11 2 117 4 416 1 13 2 621 2 622 2 14 2 627 3 524 8 715 2 313 2 20 2 125 2 318 2 21 2 25 2 319 2 724 2 130 2 427 2 131 3 732 2 132 2 324 4 733 2 527 1 528 4 643 2 31 2 644 4 325 2 529 2 530 2 327 2 431 2 738 2 531 1 743 2 649 2 335 32 145 3 39 2 146 2 341 2 746 1 343 2 47 2 48 2 540 1 52 2 447 3 241 6 153 6 544 2 751 2 548 24 667 2 550 3 453 2 159 2 552 2 669 16 247 2 671 8 248 2 672 2 64 1 165 1 680 1 253 4 69 1 168 3 169 2 768 2 72 2 562 8 563 16 370 2 772 2 74 2 75 16 76 4 177 2 82 2 569 2 83 2 266 32 686 2 573 2 268 2 574 3 270 2 89 2 383 16 577 2 273 1 274 2 580 1 488 2 693 2 277 2 186 1 91 2 92 4 789 3 790 2 278 2 188 2 792 2 281 2 385 2 386 12 497 3 102 2 101 1 588 2 390 3 284 1 198 2 698 2 699 2 289 2 501 2 799 2 107 34 598 2 801 3 597 1 204 4 205 2 399 2 
107 2 285 2 
606 2 211 2 107 4 
457 2 
0 12 605 4 703 4 402 14 348 2 612 4 349 4 54 8 351 6 157 8 408 8 6 4 301 4 515 12 516 2 461 2 360 2 362 10 12 2 306 38 465 12 764 4 170 12 624 8 625 2 561 2 369 12 310 2 175 4 19 2 315 12 776 8 567 38 477 2 722 2 322 2 182 2 269 12 638 38 734 12 184 16 688 8 430 6 276 2 93 12 648 6 94 4 433 2 191 8 35 2 389 6 195 2 196 6 590 2 437 12 288 12 440 2 394 2 441 2 396 6 700 8 594 4 504 2 
371 2 355 1 758 2 185 2 
371 2 334 2 
305 2 371 2 604 2 786 2 114 2 230 2 86 2 
611 2 114 2 
371 2 114 2 400 2 
476 2 758 2 308 2 
371 2 114 2 
476 2 713 2 
371 2 330 2 
119 2 476 2 758 2 
359 2 226 2 758 2 
403 2 673 2 758 2 
521 2 758 2 445 2 
242 2 758 2 652 2 
154 2 476 2 
371 2 384 2 
708 2 
98 2 403 2 
404 2 445 2 
242 2 203 2 
476 2 532 2 
536 2 242 2 
481 2 445 2 
403 2 55 2 
166 2 226 2 
119 2 476 2 758 2 109 2 
761 2 119 2 476 2 758 2 109 2 
261 2 476 2 758 2 
467 2 476 2 758 2 
651 2 795 2 587 2 374 2 
591 2 604 2 538 2 230 2 
305 2 591 2 67 2 604 2 538 2 230 2 
371 2 604 2 786 2 223 2 114 2 230 2 
520 2 778 2 
604 2 786 2 391 2 230 2 
762 2 445 2 
242 2 316 2 
100 2 226 2 
392 2 403 2 
245 2 242 2 403 2 
237 2 242 2 403 2 
650 2 242 2 403 2 
242 2 637 2 403 2 
414 2 604 2 18 2 90 2 230 2 
685 2 476 2 
264 6 677 2 378 2 307 2 586 2 451 2 513 2 689 2 439 2 537 2 216 2 317 4 23 2 661 4 757 2 206 2 541 2 603 2 
328 2 758 2 
790 2 
613 2 706 2 512 2 514 2 113 2 7 2 411 4 616 26 709 2 9 2 117 4 621 2 622 2 522 2 623 2 14 2 714 2 524 2 125 2 21 2 130 2 427 2 732 2 324 2 528 4 31 2 644 4 325 2 529 2 431 2 738 2 649 2 335 6 36 2 341 2 343 2 241 2 153 6 350 2 159 2 247 2 248 2 672 2 459 4 675 4 250 2 253 2 169 2 72 6 563 6 772 4 76 4 81 2 777 2 266 4 183 2 577 2 273 2 277 2 385 2 281 2 386 8 584 2 194 2 192 2 284 2 198 2 289 2 799 2 105 2 201 2 107 26 598 2 204 2 
613 2 511 1 706 2 512 2 514 2 113 2 7 2 411 5 616 26 709 2 9 2 117 4 621 2 622 2 522 2 14 2 714 2 524 2 125 2 21 2 130 2 427 2 732 2 324 2 528 4 31 2 644 4 325 2 529 2 431 2 738 2 649 2 335 6 36 2 341 2 343 2 241 2 153 6 350 2 159 2 247 2 248 2 672 2 459 4 675 4 250 2 253 2 169 2 72 6 563 6 772 4 76 4 260 2 177 2 82 1 568 2 777 2 266 4 183 2 577 2 273 2 277 2 189 2 385 2 281 2 386 8 584 2 194 2 192 2 284 2 198 2 289 2 799 2 105 2 107 26 598 2 204 2 
65 2 
106 2 460 2 
507 2 208 2 508 2 153 4 545 2 4 6 666 2 299 4 754 2 246 4 556 4 8 2 616 6 357 2 220 4 462 2 167 4 361 6 251 2 464 4 468 4 622 2 227 2 365 6 169 2 368 2 472 10 76 2 421 2 717 2 125 2 630 2 720 2 570 2 425 4 731 2 575 8 31 2 644 2 736 2 581 8 738 2 139 2 234 2 388 2 500 2 40 2 199 2 592 2 41 2 289 2 799 2 747 2 660 2 46 2 344 2 595 2 107 12 108 2 294 2 
507 2 208 2 4 6 666 2 299 2 575 8 754 2 246 2 736 2 646 2 556 2 581 8 8 2 357 2 220 4 462 2 167 4 361 6 464 2 468 2 388 2 227 2 365 4 500 2 40 2 592 2 472 8 717 2 747 2 660 2 46 2 107 4 630 2 108 2 720 2 110 4 631 2 
462 2 167 2 208 2 361 2 425 2 468 4 227 2 4 2 731 2 368 2 199 2 592 2 736 2 717 2 556 4 660 2 344 2 220 2 
507 2 208 2 508 2 153 4 545 2 4 6 666 2 299 4 754 2 246 4 556 4 8 2 616 6 357 2 220 4 462 2 167 4 361 4 251 2 464 4 468 4 622 2 227 2 469 2 365 6 169 2 368 2 472 6 76 2 421 2 717 2 125 2 630 2 570 2 425 4 731 2 575 4 31 2 644 2 736 2 581 4 738 2 139 2 234 2 388 2 500 2 40 2 199 2 592 2 41 2 289 2 799 2 747 2 660 2 46 2 344 2 595 2 107 12 108 2 294 2 
507 2 208 2 508 2 153 4 545 2 4 4 666 2 299 4 754 2 246 4 556 4 8 2 616 6 357 2 220 4 462 2 167 4 361 6 251 2 464 4 468 4 622 2 227 2 365 6 169 2 368 2 472 6 76 2 421 2 717 2 125 2 630 2 570 2 425 4 731 2 575 4 31 2 644 2 736 2 581 4 738 2 139 2 234 2 388 2 500 2 40 2 199 2 592 2 41 2 289 2 799 2 747 2 660 2 46 2 344 2 200 2 595 2 107 12 108 2 294 2 
507 2 208 2 508 2 153 4 545 2 4 6 666 2 299 4 754 2 246 4 556 4 8 2 616 6 357 2 220 4 462 2 167 4 361 6 251 2 464 4 468 4 622 2 227 2 365 6 169 2 368 2 472 6 76 2 421 2 717 2 125 2 630 2 720 2 570 2 425 4 731 2 575 4 31 2 644 2 736 2 581 8 738 2 139 2 234 2 388 2 500 2 40 2 199 2 592 2 41 2 289 2 799 2 747 2 660 2 46 2 344 2 595 2 107 12 108 2 294 2 
507 2 208 2 508 2 153 4 545 2 4 6 666 2 299 4 754 2 246 4 556 4 8 2 616 6 357 2 220 4 462 2 167 4 361 8 251 2 464 4 468 4 622 2 227 2 365 8 169 2 368 2 76 2 472 10 421 2 717 2 125 2 630 2 720 2 570 2 425 4 731 2 575 8 31 2 644 2 736 2 581 8 738 2 139 2 234 2 388 2 500 2 40 2 199 2 592 2 41 2 289 2 799 2 747 2 660 2 46 2 344 2 200 2 595 2 107 12 108 2 294 2 
507 2 208 2 508 2 153 4 545 2 4 6 666 2 299 4 754 2 246 4 556 4 8 2 616 6 357 2 220 4 462 2 167 4 361 6 251 2 464 4 468 4 622 2 227 2 365 6 169 2 368 2 472 10 76 2 421 2 717 2 125 2 630 2 720 2 570 2 425 4 731 2 575 8 31 2 644 2 736 2 581 8 738 2 139 2 234 2 388 2 500 2 40 2 199 2 592 2 41 2 289 2 799 2 747 2 660 2 46 2 344 2 595 2 107 12 108 2 294 2 
507 2 208 2 606 2 508 2 607 2 4 4 298 2 299 8 300 2 613 2 511 2 706 2 512 2 514 2 7 2 411 6 218 2 8 2 616 20 709 2 220 4 10 2 117 4 622 2 227 2 14 6 311 1 16 2 524 2 717 2 125 2 22 1 630 2 635 4 726 2 425 4 731 2 324 2 641 2 642 2 528 4 31 2 325 2 644 4 529 2 736 2 647 1 431 2 738 2 139 2 34 2 234 2 649 2 335 8 143 2 40 2 41 2 341 2 42 1 657 2 659 2 747 4 46 2 660 2 344 2 539 2 662 2 149 2 51 4 151 6 241 2 153 6 749 2 545 2 546 1 666 2 350 2 754 2 457 2 159 2 246 4 247 2 556 4 248 2 672 2 357 2 459 4 462 2 167 4 361 8 464 6 253 2 254 2 468 4 365 12 169 2 72 6 368 2 563 6 564 2 173 2 76 4 78 2 82 2 777 2 570 2 265 1 779 1 480 2 266 2 784 2 577 2 692 2 486 2 277 2 581 2 95 2 96 2 793 1 281 2 696 2 386 4 283 1 584 2 388 2 500 2 285 2 197 7 286 2 697 7 199 2 592 2 289 2 799 2 200 4 107 34 599 2 204 2 108 2 293 2 294 2 207 2 
507 2 208 2 606 2 508 2 607 2 4 8 298 2 299 8 300 2 613 2 511 2 706 2 512 2 514 2 7 2 411 6 218 2 8 2 616 20 709 2 220 4 10 2 117 4 622 2 227 2 14 6 16 2 524 2 717 2 125 2 630 2 720 4 635 4 726 2 425 4 731 2 324 4 641 2 642 2 528 4 31 2 325 2 644 4 529 2 736 2 431 2 738 2 139 2 34 2 234 2 649 2 335 8 143 2 40 2 41 2 341 2 657 2 659 2 747 4 46 2 660 2 344 2 539 2 662 2 149 2 51 4 151 6 241 2 153 6 749 2 545 2 666 2 350 2 754 2 457 2 159 2 246 4 247 2 556 4 248 2 672 2 357 2 459 4 462 2 167 4 361 8 464 6 253 4 254 2 468 4 365 12 169 2 72 6 368 2 563 6 564 2 173 2 76 4 78 2 82 2 777 2 570 2 480 2 266 2 784 2 577 2 692 2 486 2 277 2 581 6 95 2 96 2 281 2 696 2 386 6 584 2 388 2 500 2 285 2 286 2 199 2 592 2 289 2 799 2 107 34 599 2 204 4 108 2 293 2 294 2 207 2 
507 2 208 2 606 2 508 2 607 2 4 8 298 2 299 8 300 2 613 2 511 2 706 2 512 2 514 2 7 2 411 6 218 2 8 2 616 20 709 2 220 4 10 2 117 4 622 2 227 2 14 6 16 2 524 2 717 2 125 2 630 2 720 4 635 4 726 2 425 4 731 2 324 4 641 2 642 2 528 4 31 2 325 2 644 4 529 2 736 2 431 2 738 2 139 2 34 2 234 2 649 2 335 8 143 2 40 2 41 2 341 2 657 2 659 2 747 4 46 2 660 2 344 2 539 2 662 2 149 2 51 4 151 6 241 2 153 6 749 2 545 2 666 2 350 2 754 2 457 2 159 2 246 4 247 2 556 4 248 2 672 2 357 2 459 4 462 2 167 4 361 8 464 6 253 4 254 2 468 4 365 12 169 2 72 6 368 2 563 6 564 2 173 2 472 4 76 4 78 2 82 2 777 2 570 2 480 2 266 2 575 4 784 2 577 2 692 2 486 2 277 2 581 6 95 2 96 2 281 2 696 2 386 6 584 2 388 2 500 2 285 2 286 2 199 2 592 2 289 2 799 2 107 34 599 2 204 4 108 2 293 2 294 2 207 2 
507 2 208 2 606 2 508 2 607 2 4 10 298 2 299 8 300 2 613 2 511 2 706 4 512 2 514 2 7 2 411 6 218 2 8 2 616 18 709 2 220 4 10 2 117 4 622 2 227 2 228 2 14 4 16 2 524 2 717 2 125 2 128 2 630 2 720 4 635 2 425 4 731 2 324 4 641 2 642 2 528 4 31 2 325 2 644 4 529 2 736 2 431 2 738 2 139 2 34 2 234 2 649 2 335 12 143 2 40 2 41 2 341 2 657 2 659 2 747 4 46 2 660 2 344 2 539 2 662 2 149 2 51 4 151 6 241 4 153 6 749 2 545 2 666 2 350 2 754 2 457 2 159 2 246 4 247 2 556 4 248 2 672 2 357 2 459 6 462 2 167 4 361 10 464 6 253 4 254 2 468 4 469 2 365 16 169 2 72 8 368 2 563 8 564 2 173 2 472 4 76 4 78 2 82 2 84 2 777 2 570 2 480 2 266 4 575 4 784 2 577 2 787 2 692 2 486 2 277 2 581 6 95 2 96 2 281 2 496 2 696 2 386 6 584 2 388 2 500 2 285 2 286 2 199 2 592 2 289 2 799 2 200 2 107 32 599 2 204 4 108 2 802 2 293 2 294 2 207 2 
507 2 208 2 4 6 666 2 299 2 575 4 754 2 246 2 736 2 556 2 581 6 8 2 357 2 220 4 462 2 167 4 361 6 464 2 468 2 388 2 227 2 365 4 500 2 40 2 41 2 592 2 472 4 717 2 747 2 46 2 660 2 107 4 630 2 108 2 720 2 
507 2 208 2 4 6 299 2 613 2 511 2 706 3 512 2 514 2 7 2 411 6 616 24 8 2 709 2 220 4 117 4 622 2 227 2 14 4 717 2 125 2 630 2 720 2 726 2 635 2 528 4 643 2 31 2 644 4 325 2 529 2 645 2 736 2 431 2 738 2 141 2 142 2 649 2 335 8 435 2 40 2 41 2 341 2 747 2 660 2 46 2 52 2 241 3 153 6 666 2 754 2 246 2 159 2 247 2 556 2 248 2 672 2 357 2 459 4 462 2 167 4 361 6 464 2 763 2 468 2 365 4 169 2 768 2 72 6 563 6 76 4 472 2 82 2 777 2 570 2 266 3 684 3 577 2 277 2 581 6 790 2 584 2 388 2 500 2 592 2 289 2 799 2 107 28 108 2 
754 2 388 2 668 2 
754 2 388 2 668 2 
4 8 299 4 613 2 511 2 407 2 512 2 7 2 411 6 616 16 709 4 220 4 222 2 117 4 622 2 14 4 717 2 125 2 720 4 635 2 324 4 528 4 31 2 644 4 325 2 529 2 431 2 738 2 434 2 744 2 649 2 335 2 336 2 438 2 341 2 747 4 660 2 51 2 153 6 749 2 666 2 455 2 754 2 159 2 246 2 247 2 556 2 248 2 672 2 462 2 167 4 361 10 464 2 253 4 468 2 255 2 169 2 365 10 72 2 770 2 563 2 76 4 472 2 82 2 777 2 266 2 88 2 183 4 575 2 272 2 577 2 487 2 277 2 581 6 281 2 386 4 387 2 584 2 388 2 500 2 289 2 799 2 200 2 107 24 204 4 
635 2 53 2 387 2 232 2 749 2 255 2 88 2 498 2 14 2 272 2 199 2 735 2 289 2 616 2 503 2 107 4 460 2 
4 8 299 4 613 2 511 2 407 2 512 2 7 2 411 6 616 14 709 4 220 4 222 2 117 4 622 2 14 2 717 2 125 2 720 4 28 2 324 4 528 4 31 2 644 4 325 2 529 2 431 2 738 2 434 2 744 2 649 2 335 2 336 2 438 2 341 2 747 4 660 2 51 2 346 2 153 6 666 2 455 4 754 2 159 2 246 2 247 2 556 2 248 2 672 2 462 2 167 4 361 10 464 2 253 4 468 2 169 2 365 10 72 2 770 2 563 2 76 4 472 2 82 2 777 2 266 4 183 4 575 2 272 2 577 2 487 2 277 2 581 6 281 2 386 4 387 2 584 2 388 2 500 2 289 2 799 2 200 2 107 20 204 4 
4 8 299 4 613 2 511 2 407 2 512 2 7 2 411 6 616 16 709 4 220 4 222 2 117 4 622 2 14 4 717 2 125 2 720 4 635 2 324 4 528 4 31 2 644 4 325 2 529 2 431 2 738 2 434 2 744 2 649 2 335 2 336 2 438 2 341 2 747 4 660 2 51 2 153 6 749 2 666 2 455 2 754 2 159 2 246 2 247 2 556 2 248 2 672 2 462 2 167 4 361 10 464 2 253 4 468 2 255 2 169 2 365 10 72 2 770 2 563 2 76 4 472 2 82 2 777 2 266 2 88 2 183 4 575 2 272 2 577 2 487 2 277 2 581 6 281 2 386 4 387 2 584 2 388 2 500 2 289 2 799 2 200 2 107 24 204 4 
68 2 43 2 572 2 665 2 687 2 423 2 450 2 796 2 483 2 123 2 
152 2 241 3 509 2 266 3 426 2 729 2 87 2 350 6 576 1 706 3 456 2 578 3 514 2 616 2 459 2 331 2 333 2 335 2 72 2 257 2 563 2 339 4 79 2 107 2 50 2 
152 2 241 2 509 2 266 2 426 2 729 2 87 2 350 6 706 2 456 2 578 2 514 2 616 2 459 2 331 2 333 2 335 2 72 2 257 2 563 2 339 4 79 2 107 2 50 2 
152 2 241 2 509 2 266 2 426 2 729 2 87 2 350 6 706 2 456 2 578 2 514 2 616 2 459 2 331 2 333 2 335 2 72 2 257 2 563 2 339 4 79 2 107 2 50 2 
2 3 241 3 752 6 705 2 244 2 707 2 514 2 160 4 614 2 669 2 302 2 162 2 616 4 759 2 221 2 710 4 618 2 364 2 560 2 471 2 75 2 565 4 774 6 629 2 266 3 379 2 267 4 639 2 134 2 782 2 485 3 690 4 489 4 279 2 331 2 794 3 745 2 335 2 239 4 107 10 
2 2 241 2 752 6 405 2 705 2 244 2 707 2 514 2 160 4 614 2 669 2 302 2 162 2 616 4 759 2 221 2 710 4 618 2 364 2 560 2 471 2 75 2 565 4 774 4 683 2 629 2 266 2 379 2 267 4 639 2 134 2 782 2 485 2 690 4 489 4 279 2 331 2 794 2 745 2 335 2 239 4 397 2 107 10 
2 2 241 2 752 6 405 2 705 2 244 2 707 2 514 2 160 4 614 2 669 2 302 2 162 2 616 4 759 2 221 2 710 4 618 2 364 2 560 2 471 2 75 2 565 4 774 4 683 2 629 2 266 2 379 2 267 4 639 2 134 2 782 2 485 2 690 4 489 4 279 2 331 2 794 2 745 2 335 2 239 4 397 2 107 10 
2 2 241 2 752 4 405 1 705 1 244 2 707 2 514 2 160 3 614 1 669 2 302 2 162 2 616 3 759 1 221 2 710 2 618 1 364 2 560 2 471 2 75 2 565 3 774 3 683 2 629 1 266 2 379 1 267 2 639 2 134 1 782 1 485 2 690 2 489 2 279 1 331 2 794 2 745 1 335 2 239 2 397 1 107 7 
2 2 241 2 752 4 405 2 705 1 244 2 707 2 514 2 160 3 614 1 669 2 302 2 162 2 616 3 759 1 221 2 710 2 618 1 364 2 560 2 471 2 75 2 565 3 774 3 683 3 629 1 266 2 379 1 267 2 639 2 134 1 782 1 485 2 690 2 489 2 279 1 331 2 794 2 745 1 335 2 239 2 397 2 107 7 
263 2 77 2 112 2 398 2 493 2 85 2 
617 2 56 2 363 2 210 2 61 2 714 2 493 2 
725 2 296 2 347 1 381 2 428 2 551 2 300 2 33 2 616 8 517 1 741 2 282 1 678 2 766 2 337 1 418 2 712 2 771 2 682 2 17 2 799 2 104 1 718 2 148 2 107 10 376 2 
495 2 745 2 618 3 364 4 99 2 379 3 225 2 244 2 484 4 238 2 565 4 259 2 774 6 162 2 302 4 187 2 291 2 759 3 
710 2 190 4 449 2 547 2 70 7 534 2 393 2 656 2 172 1 566 2 690 2 239 2 63 2 616 1 107 1 115 2 138 2 446 2 
710 2 190 4 449 2 547 2 70 6 534 2 656 2 393 4 566 2 690 2 239 2 63 2 115 2 138 4 446 4 
710 2 190 4 449 6 547 2 70 10 534 2 656 8 393 8 172 1 566 2 690 2 239 2 63 2 616 1 107 1 115 2 138 8 446 8 
710 2 190 2 547 2 70 2 534 2 393 2 566 2 690 2 239 2 63 2 115 2 138 2 446 2 
111 1 613 2 511 2 670 2 60 2 247 2 411 4 616 8 248 2 674 2 66 1 760 2 117 2 224 2 120 1 312 1 775 2 82 2 375 1 320 1 528 2 691 2 332 2 499 2 240 2 107 8 602 1 
664 2 352 2 528 6 613 2 783 2 753 2 670 6 247 2 691 2 554 2 458 2 411 8 248 2 616 14 558 2 674 2 494 2 760 2 533 2 582 2 583 2 117 6 619 2 118 2 797 2 593 2 240 2 126 2 107 14 262 2 602 2 
209 4 297 4 609 10 111 6 704 2 610 4 5 2 613 6 511 16 406 6 214 4 217 2 411 74 616 64 219 4 116 2 304 4 117 30 415 4 118 2 619 8 711 10 523 4 417 4 312 5 420 4 126 2 129 2 633 18 320 10 723 4 26 2 727 12 29 6 231 4 636 12 323 4 528 36 429 4 326 10 737 2 329 6 432 4 235 10 653 6 654 4 37 4 236 4 147 4 44 4 240 2 444 6 664 2 750 4 243 2 452 6 753 2 57 4 670 14 60 20 247 6 161 16 553 4 62 4 248 2 557 4 674 2 249 18 760 2 676 4 71 2 767 4 80 4 473 4 82 16 262 8 571 20 181 4 780 2 783 8 785 4 691 2 791 4 491 2 494 20 280 2 582 2 583 2 193 16 103 2 797 2 798 6 593 2 800 4 107 72 506 4 
664 2 320 2 26 2 543 2 111 2 609 2 231 2 528 8 613 2 783 4 511 2 753 2 57 2 670 13 60 2 247 2 691 2 411 18 248 2 616 18 558 1 116 2 674 2 494 6 760 2 582 2 583 2 117 8 118 3 619 4 585 2 653 2 417 2 37 2 797 2 798 2 593 2 240 2 126 2 775 2 107 20 82 2 602 2 262 4 
58 2 

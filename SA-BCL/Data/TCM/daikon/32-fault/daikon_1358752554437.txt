#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 171 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 93 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (256,287) (256,287) 
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.IllegalArgumentException 12 12 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NoClassDefFoundError 108 
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 202 107 239 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 294 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NoClassDefFoundError 294 
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NoClassDefFoundError 294 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 294 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NoClassDefFoundError 294 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NoClassDefFoundError 160 50 243 49 314 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 319 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NoClassDefFoundError 222 226 10 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NoClassDefFoundError 222 226 10 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NoClassDefFoundError 222 226 10 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NoClassDefFoundError 222 226 10 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.MathMDE:negate(I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:gt(II)Z
daikon.ProglangType:dimensions()I
daikon.Quant:eltsGT([II)Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.Intern:intern([I)[I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.ValueTuple:size()I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | OPERATOR | 60487 | == -> <
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.ModBitTracker:num_sets()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:lexLT([I[I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | STATEMENT | 10772 | stmt -> ;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.Quant:concat([I[I)[I
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:lexEqual([I[I)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:eltsGTE([II)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.ArraysMDE:min([I)I
daikon.ModBitTracker:num_vars()I
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:sameLength([I[I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaCharStream:getEndColumn()I
daikon.ModBitTracker:split(I)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.ModBitTracker:num_samples()I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lexGTE([I[I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_ntk()I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.MathMDE:pow(II)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsLTE([II)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:eq(II)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:gte(II)Z
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:subsetOf([J[J)Z | CONDITION | 196771 | if (x) -> if (!x)
jtb.JavaCharStream:readChar()C | CONDITION | 5637 | if (x) -> if (!x)
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | CONSTANT | 15367 | 1 -> 0
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:eltsLtIndex([I)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18332 | 0 -> -1
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:setEqual([I[I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:lt(II)Z
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quant:eltwiseLT([I)Z | CONSTANT | 175803 | 0 -> 1
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.MathMDE:gcd([I)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | OPERATOR | 41870 | != -> >=
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:noDups([I)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:eltwiseGTE([I)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:ne(II)Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Intern:intern([J)[J
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.WeakHasherMap:size()I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.Quant:lexGT([I[I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:isReverse([I[I)Z
utilMDE.MathMDE:gcd(II)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey; | RETURN | 6660 | return null
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:intersection([I[I)[I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | CONDITION | 15105 | if (x) -> if (!x)
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:eltsLT([II)Z
utilMDE.Intern:numIntArrays()I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:lte(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:lexLTE([I[I)Z
utilMDE.ArraysMDE:max([I)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:memberOf(J[J)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Intern:internSubsequence([III)[I
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:sign(I)I
daikon.Quant:setDiff([I[I)[I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:union([I[I)[I
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaCharStream:BeginToken()C
jtb.JavaCharStream:backup(I)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE:element_range([I)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.test.InvariantFormatTester:execute()Z | ASSIGN | 8797 | = null
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:memberOf(I[I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
190 1 267 2 66 1 150 1 112 2 92 1 113 1 274 1 275 1 158 2 8 1 299 2 282 2 253 1 234 2 138 1 33 1 240 1 264 2 
190 8 66 8 138 8 150 8 293 4 69 4 92 10 35 2 113 8 274 8 75 4 126 2 129 4 252 2 253 8 321 4 
0 2 171 2 288 2 79 2 213 2 249 6 198 2 295 2 99 2 123 2 
164 2 93 2 196 2 187 2 31 2 
85 2 176 4 177 2 41 2 133 2 246 2 247 2 91 2 7 4 180 2 135 2 43 2 45 2 256 4 258 2 259 2 54 2 303 2 221 2 262 2 309 2 189 2 20 2 67 2 151 2 22 2 313 2 72 2 115 2 29 2 278 2 161 2 232 2 233 4 118 2 170 2 204 2 287 4 173 2 205 2 290 4 84 2 128 2 326 2 
38 4 190 4 66 4 138 4 150 4 245 2 81 4 32 2 92 5 113 4 274 4 75 4 287 4 96 2 104 8 253 4 256 4 
137 2 39 2 246 2 
175 2 110 2 21 2 259 2 193 2 271 22 194 2 220 2 208 2 237 2 211 2 307 2 95 2 230 10 
20 2 181 2 273 2 287 2 101 4 60 2 206 2 122 2 256 2 
86 2 130 6 52 2 88 6 178 2 120 2 235 2 317 2 172 6 280 2 174 2 
9 2 132 2 23 2 272 4 156 6 210 2 114 6 287 2 13 6 223 2 28 4 215 6 256 2 
190 8 66 8 150 8 291 2 292 2 245 8 92 10 113 8 274 8 75 8 8 6 253 8 300 2 256 4 255 2 138 8 165 6 168 2 287 4 126 2 58 2 62 2 240 6 311 2 
12 4 
144 2 
47 2 
287 2 224 2 
287 4 192 2 34 2 
231 2 315 2 199 2 108 2 
283 2 87 2 111 2 202 2 53 2 154 2 73 2 143 4 209 2 304 2 82 2 116 2 305 2 146 2 239 2 37 2 183 2 107 2 254 2 19 2 78 2 
322 1 292 2 127 2 251 2 320 2 246 2 263 2 100 2 
127 2 182 2 320 2 
127 2 320 2 134 2 
219 2 63 2 248 2 
127 2 320 2 
219 2 169 2 
127 2 167 2 
219 2 103 2 63 2 
139 2 63 2 241 2 
203 2 63 2 4 2 
109 2 269 2 63 2 
185 2 323 2 63 2 
219 2 65 2 
127 2 286 2 
188 2 
119 2 4 2 
140 2 269 2 
185 2 217 2 
186 2 219 2 
185 2 306 2 
269 2 261 2 
15 2 4 2 
139 2 159 2 
219 2 103 2 63 2 42 2 
3 2 219 2 103 2 63 2 42 2 
219 2 24 2 63 2 
166 2 219 2 63 2 
71 2 26 2 297 2 250 2 
149 2 127 2 63 2 
127 2 141 2 
219 2 80 2 
153 2 105 2 285 2 18 2 142 4 
200 2 63 2 
36 2 136 2 246 2 100 2 
36 2 251 2 136 2 246 2 100 2 301 2 
292 2 127 2 296 2 320 2 246 2 100 2 
212 2 135 2 
302 2 292 2 246 2 100 2 
269 2 6 2 
185 2 48 2 
266 2 139 2 
125 2 4 2 
185 2 30 2 4 2 
185 2 277 2 4 2 
185 2 244 2 4 2 
185 2 97 2 4 2 
246 2 207 2 77 6 216 2 100 2 257 6 324 2 238 2 
145 2 
231 2 294 2 315 2 199 2 
231 2 294 2 315 2 199 2 
231 2 294 2 315 2 199 2 
231 2 294 2 315 2 199 2 
231 2 294 2 315 2 199 2 
243 2 131 2 227 2 314 2 196 1 160 2 49 2 50 2 98 2 260 2 287 4 187 1 61 2 16 2 325 2 310 2 242 2 
163 2 56 2 117 2 1 2 106 2 70 2 
163 2 157 2 44 2 289 2 179 2 319 2 270 2 
152 2 89 2 268 2 316 1 229 1 74 2 197 2 76 2 94 2 298 2 279 2 281 2 99 1 256 8 51 2 201 2 121 2 184 2 123 1 11 2 55 2 287 10 14 1 83 2 17 2 64 2 
190 6 147 2 38 2 66 6 150 6 151 2 245 1 293 2 69 2 228 2 90 2 155 2 25 2 92 9 113 6 274 6 195 2 75 1 318 2 46 2 161 2 253 6 256 6 138 6 81 2 32 1 287 6 57 2 104 2 
148 2 40 2 2 1 284 2 218 2 68 7 5 2 236 2 287 1 27 2 276 2 214 4 308 2 256 1 225 2 312 2 265 2 162 2 
148 2 40 2 284 2 218 2 68 6 5 2 236 2 27 4 276 2 214 4 308 2 225 4 265 2 162 2 312 4 
148 2 40 2 2 1 284 2 218 2 68 10 5 2 236 8 287 1 27 8 276 6 214 4 308 2 256 1 225 8 265 2 162 2 312 8 
148 2 40 2 284 2 218 2 68 2 5 2 27 2 214 2 308 2 225 2 265 2 162 2 312 2 
226 2 256 2 10 2 102 1 124 2 222 2 287 2 59 1 
124 2 222 2 287 2 10 2 226 2 256 2 
124 2 222 2 287 2 10 2 226 2 256 2 
124 2 222 2 287 2 10 2 226 2 256 2 
191 2 

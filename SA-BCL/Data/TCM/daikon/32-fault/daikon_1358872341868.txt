#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 348 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 598 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V ERROR java.lang.NullPointerException 598 
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException (134,260,424,538,711) (134,260,424,538,711) (134,260,424,538,711) (134,260,424,538,711) (134,260,424,538,711) 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V FAILED junit.framework.ComparisonFailure 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException (292,629) 165 (133,443) (292,629) 475 (133,443) 322 
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 569 31 267 97 91 483 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V FAILED junit.framework.AssertionFailedError 212 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.Error 517 280 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.Error 517 280 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.Error 517 280 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.Error 517 280 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 606 436 376 
daikon.test.VarInfoNameTest:testSubscript()V ERROR utilMDE.Assert$AssertionException (191,450) (191,450) 571 606 436 376 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 571 606 436 376 
daikon.test.VarInfoNameTest:testJML()V ERROR utilMDE.Assert$AssertionException (191,450) (191,450) 571 606 436 376 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.MathMDE:negate(I)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 22517 | = null
daikon.Quant:eltwiseGTE([I)Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ValueTuple:size()I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.Quant:gt(II)Z
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName:hashCode()I
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:ne(II)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:memberOf(I[I)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:intersection([I[I)[I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.ModBitTracker:num_sets()I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:eq(JJ)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:eq(FF)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:memberOf(F[F)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.Node:Node()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaCharStream:backup(I)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:memberOf(F[D)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([I)I
daikon.Quant:noDups([I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.ProglangType:dimensions()I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:gte(II)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.diff.RootNode:RootNode()V
utilMDE.Assert:assertTrue(Z)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V | OPERATOR | 1654 | == -> <
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:jj_3R_52()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:subsetOf([S[S)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_ntk()I
daikon.Quant:lte(II)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 99061 | return null
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V | ASSIGN | 6590 | = null
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.Invariant:justified()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([D)D
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:memberOf(D[F)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarComparabilityImplicit:toString()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaCharStream:ReadByte()C
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getBeginLine()I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.PptSlice2:arity()I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[F)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice1:arity()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.MathMDE:gcd(JJ)J
daikon.Ppt:Ppt()V
daikon.ProglangType:isArray()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13809 | = null
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_1(I)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_54()Z
daikon.ProglangType:isIntegral()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.ModBitTracker:num_vars()I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 86983 | return null
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3R_57()Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:setEqual([I[I)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:setDiff([I[I)[I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quant:lexLTE([I[I)Z | CONDITION | 171995 | if (x) -> if (!x)
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:lt(II)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:eq(II)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.PptSlice0:arity()I
utilMDE.WeakHasherMap:size()I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:subsetOf([I[I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:subsetOf([B[I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:jj_3R_161()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern:intern([D)[D
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3_13()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Debug:logOn()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_162()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.ProglangType:isScalar()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z | CONDITION | 4097 | if (x) -> if (!x)
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 10682 | = null
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaCharStream:getEndLine()I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.ModBitTracker:split(I)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:slice([III)[I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsGT([II)Z
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.Quant:union([I[I)[I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | RETURN | 3858 | return null
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:jj_3R_53()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator; | ASSIGN | 2309 | = null
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:max([I)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V | CONDITION | 972 | if (x) -> if (!x)
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:eltsEqual([II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.MathMDE:gcd(II)I
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.ModBitTracker:num_samples()I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType; | STATEMENT | 47994 | stmt -> ;
daikon.Quant:concat([I[I)[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern:numIntArrays()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 10199 | = null
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaCharStream:readChar()C
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 283084 | = null
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3_16()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfo:relate_var()V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaCharStream:getBeginColumn()I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:eltsLTE([II)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
509 4 195 2 450 2 575 2 191 2 507 2 206 2 555 2 59 2 
347 2 82 6 289 2 177 2 521 2 479 2 739 2 611 2 167 6 508 6 613 2 
500 2 348 2 510 2 365 2 73 2 452 4 619 2 605 2 44 2 
350 10 604 10 34 4 607 2 355 30 712 6 103 8 464 8 442 4 332 10 191 6 692 2 262 4 192 12 234 4 403 10 335 10 542 16 450 6 241 2 727 6 72 16 321 16 223 2 600 26 456 2 527 2 528 8 601 8 680 2 
290 6 12 4 
616 2 
350 4 604 2 159 2 102 2 355 6 712 2 686 2 634 2 307 2 332 2 211 2 192 2 234 2 403 2 335 2 542 2 700 2 71 2 430 2 72 2 321 2 600 4 601 2 
403 4 335 4 542 8 604 4 299 4 355 14 490 2 304 6 317 2 442 2 231 6 332 4 72 8 321 8 600 12 192 5 625 4 
90 2 0 2 287 2 100 2 301 2 354 2 570 2 522 2 668 6 598 2 89 2 732 2 295 2 
50 2 186 2 5 2 147 2 616 2 453 2 675 2 481 2 247 2 549 2 
226 2 710 2 136 2 49 2 331 2 719 2 191 4 56 4 445 2 195 2 236 2 450 4 672 2 404 2 201 2 339 2 409 2 505 2 730 2 457 2 296 2 603 2 683 2 415 2 208 2 162 2 463 2 87 4 89 2 610 2 39 2 264 4 121 2 266 2 215 2 618 2 173 2 128 4 427 2 271 2 572 2 523 2 273 2 527 2 
1 6 350 6 604 16 578 6 299 4 489 4 329 6 355 54 712 4 207 6 304 6 86 2 231 6 332 16 191 4 192 22 334 8 312 2 235 4 234 2 403 16 335 16 197 4 542 32 450 4 109 2 239 2 472 4 727 4 520 2 369 2 72 32 321 32 600 48 625 4 528 6 379 4 601 18 680 2 
598 2 
346 2 80 2 404 2 567 22 268 2 556 2 110 2 149 2 229 2 179 2 539 2 624 2 333 2 586 10 
381 1 487 2 183 2 184 2 188 2 667 2 283 1 191 26 7 1 286 2 588 8 590 1 198 2 22 2 23 2 504 1 29 2 114 1 205 1 513 2 206 2 116 4 305 4 691 1 308 2 309 2 421 2 696 2 617 2 424 2 219 1 429 2 320 2 525 2 324 2 627 1 705 2 134 2 327 2 628 2 711 2 713 1 53 4 538 2 57 1 58 2 721 4 450 28 723 2 336 1 451 2 66 2 69 2 244 1 344 6 152 1 248 2 158 1 351 1 651 5 561 2 260 2 88 1 562 2 469 2 364 4 657 6 569 2 658 6 477 6 375 2 96 1 274 1 748 2 
63 2 
450 2 626 2 
450 4 482 2 153 2 
2 2 579 2 277 6 580 2 182 26 390 10 493 2 104 2 583 2 394 2 395 2 396 26 8 34 587 8 193 4 591 4 14 2 199 10 200 4 18 2 502 2 406 2 593 10 594 2 506 26 28 2 681 2 414 4 684 2 300 14 302 84 303 26 687 6 36 2 37 2 213 20 694 84 422 2 313 26 699 4 216 26 701 2 217 2 620 2 130 2 704 2 428 2 220 2 318 12 319 2 221 2 42 14 131 2 433 4 529 16 530 26 45 2 437 2 632 10 438 2 227 2 51 2 714 8 141 6 718 2 54 2 233 2 637 26 240 2 338 84 150 20 341 30 342 14 151 2 455 4 74 4 550 20 731 26 642 6 250 2 552 2 157 26 645 2 352 26 253 2 461 2 648 10 357 2 462 2 256 12 466 10 652 2 560 2 361 2 171 2 468 2 654 2 740 2 655 28 470 2 568 2 367 2 742 2 660 16 371 2 573 12 374 2 745 2 664 2 484 2 
210 2 25 2 420 2 363 1 
407 2 420 2 
402 2 79 2 81 2 677 2 89 2 262 2 420 2 
79 2 420 2 397 2 
79 2 420 2 434 2 
349 2 25 2 61 2 
79 2 420 2 
653 2 61 2 
420 2 643 2 
744 2 25 2 61 2 
40 2 25 2 185 2 
380 2 25 2 48 2 
257 2 25 2 419 2 
25 2 132 2 405 2 
285 2 61 2 
326 2 420 2 
418 2 185 2 
360 2 48 2 
537 2 257 2 
32 2 405 2 
729 2 61 2 
405 2 225 2 
257 2 669 2 
48 2 496 2 
185 2 368 2 
744 2 25 2 377 2 61 2 
744 2 557 2 25 2 377 2 61 2 
25 2 678 2 61 2 
25 2 61 2 737 2 
67 2 695 2 750 2 
682 2 677 2 89 2 156 2 
402 2 682 2 677 2 89 2 551 2 156 2 
79 2 677 2 89 2 262 2 420 2 399 2 
163 2 603 2 
677 2 540 2 89 2 262 2 
545 2 257 2 
47 2 405 2 
640 2 185 2 
738 2 48 2 
366 2 405 2 48 2 
401 2 
716 2 48 2 405 2 
48 2 405 2 671 2 
4 2 89 2 218 2 243 6 503 2 272 2 676 6 677 2 
30 2 61 2 
485 2 237 2 328 2 567 6 94 2 160 2 127 2 139 2 388 2 21 2 315 2 270 2 111 2 85 2 515 2 622 4 447 2 411 4 
25 2 535 2 
469 2 
487 2 486 4 183 2 184 2 667 2 188 2 582 1 191 26 393 2 584 2 286 2 588 4 196 2 198 6 17 2 673 2 592 2 408 2 23 2 291 4 24 4 204 2 412 2 513 6 33 2 206 2 116 4 305 4 691 2 308 2 309 2 612 2 214 2 617 2 316 2 429 2 525 2 705 2 628 2 706 2 330 2 228 2 717 8 52 2 635 2 441 2 53 4 450 26 723 2 64 2 238 2 451 2 66 2 69 2 244 2 546 1 246 2 344 6 353 2 254 8 356 2 166 2 561 2 258 2 364 4 174 4 657 2 175 2 658 4 569 2 477 2 370 2 478 2 269 2 373 2 375 6 748 2 275 2 
487 2 486 4 183 2 184 2 667 2 188 2 281 2 191 26 393 2 584 2 286 2 10 2 588 4 196 2 198 6 17 2 408 2 23 2 291 4 24 2 204 2 412 2 29 2 513 6 33 2 206 2 116 4 305 4 691 2 308 2 309 2 612 2 214 2 617 2 316 2 429 2 525 2 705 2 628 2 706 2 330 2 228 2 717 8 52 2 441 2 53 4 449 2 450 26 723 2 64 2 238 2 451 2 66 2 69 2 244 2 246 2 344 6 353 2 254 8 356 2 166 2 561 2 258 2 562 2 364 4 174 4 657 2 175 2 658 6 569 2 176 2 477 2 370 2 478 2 269 2 373 2 375 6 748 2 275 2 
135 2 
95 2 340 2 
543 2 473 2 633 2 
543 2 473 2 633 2 
487 4 488 2 279 2 183 2 184 2 667 2 188 2 492 4 190 2 191 16 398 2 286 2 400 2 588 2 589 6 198 2 289 4 408 2 23 2 24 2 602 2 508 12 29 2 513 2 206 2 685 2 116 4 608 2 305 4 308 2 309 2 611 4 614 4 697 2 423 4 123 4 518 2 617 2 521 4 316 4 429 2 322 2 525 2 432 2 133 2 705 2 628 2 706 2 531 2 633 4 137 2 330 6 536 2 142 2 52 4 717 4 53 4 443 2 446 2 450 24 723 2 724 2 337 4 543 6 451 2 242 2 66 2 69 2 454 4 344 6 547 4 154 2 155 2 78 2 735 2 254 4 353 4 82 16 356 4 358 2 165 2 739 4 561 2 562 2 259 2 467 4 263 2 167 12 172 2 265 2 471 2 364 4 473 2 475 2 175 4 658 6 569 2 177 4 743 2 178 6 480 2 479 4 375 2 661 2 662 2 748 2 
265 2 697 2 487 2 450 4 518 2 514 2 117 2 340 2 429 2 191 2 75 2 432 2 446 2 263 2 448 2 60 2 553 2 
487 2 488 2 279 4 183 2 184 2 667 2 188 2 492 4 491 2 190 2 191 14 286 2 400 2 588 4 589 4 198 2 289 4 408 2 23 2 292 2 293 2 602 4 508 12 29 2 513 2 206 2 116 4 608 2 305 4 416 2 308 2 309 2 611 4 614 2 697 2 423 4 123 4 617 2 521 4 316 4 429 2 322 2 525 2 133 2 705 2 629 2 628 2 706 2 531 2 633 4 137 2 330 4 536 2 142 2 52 2 717 4 53 4 443 2 450 20 723 2 724 2 337 4 543 4 451 2 66 2 69 2 454 2 344 6 547 4 154 2 155 2 78 2 735 2 254 4 353 4 82 16 356 4 165 2 739 4 561 2 562 2 259 2 467 4 167 12 265 2 471 2 364 4 475 2 175 4 658 6 569 2 177 4 743 2 178 6 480 2 479 4 375 2 661 2 662 2 748 2 
487 4 488 2 279 2 183 2 184 2 667 2 188 2 492 4 190 2 191 16 495 2 286 2 11 2 400 2 588 2 589 6 198 2 289 4 408 2 23 2 293 2 24 1 602 4 508 12 29 2 298 2 513 2 206 2 116 4 608 2 305 4 308 2 309 2 611 4 614 4 697 2 423 4 123 4 518 2 617 2 521 4 316 4 429 2 322 2 525 2 432 2 133 2 705 2 628 2 706 2 531 2 633 4 137 2 330 6 140 2 536 2 142 2 52 4 717 4 53 4 443 2 446 2 450 24 723 2 724 2 337 4 543 6 451 2 66 2 69 2 454 4 344 6 547 4 154 2 155 2 78 2 735 2 254 4 353 4 82 16 356 4 358 2 165 2 739 4 561 2 562 2 259 2 467 4 263 2 167 12 265 2 471 2 364 4 473 2 474 2 475 2 175 4 658 6 569 2 177 4 743 2 178 6 480 2 479 4 375 2 661 2 662 2 748 2 
13 2 91 2 108 2 31 2 450 4 267 2 569 2 188 2 70 2 674 2 444 2 97 2 525 2 144 2 308 2 483 2 249 2 
707 2 459 2 460 2 382 1 513 2 383 2 666 2 228 2 191 2 636 2 588 3 198 2 450 2 566 2 124 2 703 3 657 3 174 2 477 3 202 2 373 6 574 2 222 2 375 2 746 4 
707 2 459 2 460 2 513 2 383 2 666 2 228 2 191 2 636 2 588 2 198 2 450 2 566 2 124 2 703 2 657 2 174 2 477 2 202 2 373 6 574 2 222 2 375 2 746 4 
707 2 459 2 460 2 513 2 383 2 666 2 228 2 191 2 636 2 588 2 198 2 450 2 566 2 124 2 703 2 657 2 174 2 477 2 202 2 373 6 574 2 222 2 375 2 746 4 
708 4 385 2 228 2 55 2 191 4 332 2 494 6 497 2 588 3 403 2 335 2 542 2 450 10 198 2 501 3 727 2 728 2 20 2 245 2 410 3 72 2 548 4 345 2 600 4 604 2 355 5 255 2 650 2 362 2 698 4 125 3 476 4 477 3 574 2 180 4 321 2 747 2 528 4 224 2 276 2 
708 4 385 2 228 2 55 2 191 4 332 2 494 6 192 2 497 2 588 2 403 2 335 2 542 2 450 10 198 2 501 2 727 2 728 2 20 2 245 2 410 2 72 2 548 4 345 2 600 4 601 2 680 2 604 2 355 4 255 2 650 2 362 2 698 4 125 2 476 4 477 2 574 2 180 4 321 2 747 2 528 4 224 2 276 2 
708 4 385 2 228 2 55 2 191 4 332 2 494 6 192 2 497 2 588 2 403 2 335 2 542 2 450 10 198 2 501 2 727 2 728 2 20 2 245 2 410 2 72 2 548 4 345 2 600 4 601 2 680 2 604 2 355 4 255 2 650 2 362 2 698 4 125 2 476 4 477 2 574 2 180 4 321 2 747 2 528 4 224 2 276 2 
708 4 385 2 228 2 55 2 191 4 332 2 494 6 192 2 497 2 588 2 403 2 335 2 542 2 450 10 198 2 501 2 727 2 728 2 20 2 245 2 410 2 72 2 548 4 345 2 600 4 601 2 680 2 604 2 355 4 255 2 650 2 362 2 698 4 125 2 476 4 477 2 574 2 180 4 321 2 747 2 528 4 224 2 276 2 
708 4 385 2 228 2 55 2 191 4 332 2 494 6 192 4 497 2 588 2 403 2 335 2 542 2 450 10 198 2 501 2 727 2 728 2 20 2 245 2 410 2 72 2 548 4 345 2 600 4 601 4 680 4 604 2 355 5 255 2 650 2 362 2 698 4 125 2 476 4 477 2 574 2 180 4 321 2 747 2 528 4 224 2 276 2 
733 2 343 2 609 2 212 2 105 2 129 2 
615 2 609 2 261 2 17 2 278 2 310 2 282 2 
512 2 100 1 533 2 534 2 439 1 83 2 440 2 35 2 389 2 164 2 189 1 191 8 561 2 6 2 638 2 564 2 194 2 145 2 450 10 92 1 595 2 596 2 679 2 323 2 749 2 295 1 
604 6 355 15 161 2 207 4 84 2 304 4 445 2 191 6 332 6 192 4 334 2 107 2 403 6 197 2 335 6 450 6 542 6 672 2 727 2 520 1 72 6 623 2 599 2 321 6 577 2 600 12 26 2 625 2 528 4 601 3 680 2 
698 2 297 2 565 2 517 2 386 2 138 2 476 2 280 2 230 2 180 2 169 3 378 2 
698 2 297 2 450 1 517 2 565 2 384 2 386 2 138 2 476 2 280 2 230 2 180 2 191 1 113 1 169 6 378 4 
698 2 297 4 517 2 230 2 565 2 180 2 181 2 386 2 169 4 138 2 476 2 378 4 280 2 
698 2 297 4 450 1 565 2 517 2 386 2 138 2 476 2 280 2 230 2 180 2 191 1 113 1 181 2 169 4 378 4 
436 2 581 2 53 4 191 10 284 2 450 10 723 2 15 2 24 2 251 1 29 2 254 6 647 1 606 2 305 4 417 2 562 2 309 2 168 2 93 2 569 2 658 8 659 2 376 2 526 2 
29 4 436 2 450 12 723 2 15 2 254 4 65 2 606 2 569 2 658 10 581 2 659 2 571 2 690 2 305 4 53 4 24 2 191 12 284 2 562 4 376 2 309 2 168 2 
436 2 630 2 709 2 665 2 387 2 187 1 3 2 391 2 143 2 53 12 392 2 191 28 284 2 585 2 106 2 639 2 146 2 450 32 723 6 15 2 288 2 203 1 294 2 76 2 641 4 458 4 29 4 734 2 413 2 511 2 646 2 254 4 554 6 647 2 606 2 305 10 689 2 558 1 306 2 417 2 562 4 38 2 309 6 168 2 693 2 170 2 93 2 519 4 126 2 656 2 426 2 569 4 658 22 659 2 571 2 372 2 621 2 576 1 376 2 663 2 
325 2 435 2 436 2 46 2 631 2 532 2 709 2 101 2 581 2 715 4 53 18 143 2 232 2 191 42 284 2 670 2 720 2 9 2 498 2 499 2 541 2 722 4 62 2 450 42 723 2 15 2 148 2 725 2 288 2 16 2 65 2 726 2 19 2 68 2 544 2 112 2 597 2 24 2 27 2 77 2 29 4 644 2 252 4 254 30 554 2 115 2 606 2 736 2 649 2 688 4 118 2 209 2 690 2 359 2 305 18 465 2 559 6 563 2 562 4 119 2 309 2 168 2 311 2 516 2 120 2 122 2 741 2 702 2 314 2 425 6 569 2 658 40 659 2 571 2 41 2 524 2 431 2 376 2 98 2 99 2 
43 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V FAILED junit.framework.AssertionFailedError (321,428) 225 
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 178 178 683 683 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR utilMDE.Assert$AssertionException (220,221) (28,31) 260 479 731 288 375 676 42 (132,729) 307 (196,555) (132,729) 183 (196,555) 464 343 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR utilMDE.Assert$AssertionException (220,221) (28,31) 260 479 731 288 375 676 42 (132,729) 307 (196,555) (132,729) 183 (196,555) 464 343 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR utilMDE.Assert$AssertionException (220,221) (28,31) 260 479 731 288 375 676 42 (132,729) 307 (196,555) (132,729) 183 (196,555) 464 343 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR utilMDE.Assert$AssertionException (220,221) (28,31) 260 479 731 288 375 676 42 (132,729) 307 (196,555) (132,729) 183 (196,555) 464 343 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.StringIndexOutOfBoundsException 534 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR java.lang.NullPointerException 831 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR java.lang.NullPointerException 831 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR java.lang.NullPointerException 831 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 831 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 831 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.NullPointerException 564 226 (182,781) (182,781) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.NullPointerException 564 226 (182,781) (182,781) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.NullPointerException 564 226 (182,781) (182,781) 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.Error 757 33 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 23 342 492 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 23 342 492 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String; | ASSIGN | 127505 | = null
daikon.ProglangType:baseIsIntegral()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ProglangType:dimensions()I
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.PptSlice2:arity()I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:setDiff([I[I)[I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Quant:memberOf(J[J)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfo:relate_var()V
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ModBitTracker:num_samples()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant; | RETURN | 1102 | return null
daikon.ModBitTracker:split(I)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:FillBuff()V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | OPERATOR | 41870 | != -> >=
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.Invariants:Invariants()V
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaCharStream:ReadByte()C
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:gt(II)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.ModBitTracker:num_vars()I
daikon.diff.RootNode:RootNode()V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptSlice1:arity()I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:eq(DD)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Debug:logOn()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:min_max([I)[I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:gcd(II)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.ValueTuple:size()I
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eq(II)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.Intern:intern([I)[I
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.MathMDE:gcd(JJ)J
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:gte(II)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:lte(II)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.PptName:isCombinedExitPoint()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:slice([III)[I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.PptName:isEnterPoint()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaCharStream:getEndLine()I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J | OPERATOR | 13933 | > -> <=
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([J)[J
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus; | RETURN | 19030 | return null
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:lexLT([I[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:concat([I[I)[I | RETURN | 37630 | return null
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:union([I[I)[I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:isReverse([I[I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:eltsLTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:noDups([I)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:memberOf(S[S)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:setEqual([I[I)Z
utilMDE.MathMDE:pow(II)I
utilMDE.WeakHasherMap:size()I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.MathMDE:gcd([I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ValueTuple:isMissing(I)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.PptSlice0:arity()I
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token; | CONSTANT | 64756 | 0 -> -1
daikon.Quant:memberOf(D[F)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseLTE([I)Z
daikon.Quant:eq(JJ)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:lexEqual([I[I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarComparabilityImplicit:toString()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.InvariantFormatTester:execute()Z | CONSTANT | 5806 | 1 -> 0
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName:hashCode()I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:lt(II)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:isArray()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:sameLength([I[I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit; | ASSIGN | 3246 | = null
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.Quant:subsetOf([I[I)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice1:num_samples()I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.Invariant:prob_is_ge(DD)D | CONSTANT | 6853 | 1 -> -1
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z | CONDITION | 1839 | if (x) -> if (!x)
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.Invariant:justified()Z
daikon.Quant:memberOf(F[D)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfo:new_ppt()V
jtb.JavaParser:jj_ntk()I
daikon.Quant:eltsLT([II)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String; | RETURN | 24039 | return null
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:max([I)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:eltsGT([II)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z | CONDITION | 4097 | if (x) -> if (!x)
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Node:Node()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.ProglangType:isScalar()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:min([I)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z | ASSIGN | 21165 | = null
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
221 2 516 2 173 2 78 2 763 2 507 2 96 2 112 4 220 2 
471 2 171 2 477 6 697 6 247 2 240 2 109 2 684 2 285 2 314 2 143 6 
618 6 345 4 619 6 301 2 364 2 811 2 220 2 163 2 351 4 221 2 87 6 119 6 796 2 
718 8 334 6 547 10 778 26 704 16 238 4 420 8 456 16 727 8 559 16 465 2 513 2 620 2 713 4 220 6 472 10 406 10 221 6 437 2 190 2 770 8 140 4 222 6 223 4 625 10 648 10 649 29 118 2 501 2 715 12 
695 6 66 4 
134 2 
798 2 169 4 58 2 505 2 64 2 69 4 805 2 751 2 296 4 612 2 707 2 512 2 78 2 465 2 185 2 515 2 813 2 305 2 818 2 92 2 719 2 481 2 632 4 418 2 421 2 636 2 104 2 785 2 583 2 428 2 730 2 321 2 644 2 218 2 220 4 221 4 647 2 327 2 329 2 439 2 116 2 597 2 331 2 795 2 
717 6 820 4 674 4 334 4 547 16 631 4 721 2 523 2 450 6 778 48 148 8 704 32 419 2 268 2 420 18 456 32 753 4 727 6 136 4 559 32 10 6 376 4 835 6 220 4 790 2 768 2 406 16 221 4 472 6 437 2 140 2 222 4 625 16 18 4 648 16 53 6 54 6 649 54 715 22 
428 2 782 2 303 2 
212 2 673 2 319 2 263 2 274 2 43 2 122 2 321 2 323 22 749 2 487 2 581 10 816 2 22 2 
547 2 29 2 747 2 449 2 778 4 704 2 420 2 456 2 639 2 371 2 559 2 563 2 406 2 472 4 140 2 353 2 222 2 625 2 195 2 648 2 649 6 715 2 201 2 
717 6 820 4 559 8 547 4 216 2 631 4 778 12 713 2 704 8 406 4 126 2 625 4 456 8 648 4 53 6 649 16 715 4 
290 4 291 4 169 4 506 2 448 2 483 2 508 2 825 4 65 2 453 2 35 4 656 2 528 2 657 2 782 2 179 10 241 4 638 4 728 4 830 62 41 10 428 8 760 4 76 4 373 2 585 2 761 2 108 2 185 2 467 2 303 6 621 4 537 2 326 2 51 4 668 2 598 14 384 2 331 4 601 2 
577 2 633 2 134 2 586 2 374 2 250 2 157 2 380 2 55 2 544 2 
740 4 333 2 3 2 235 4 451 2 236 6 553 1 7 3 659 2 135 2 560 14 246 19 663 4 347 1 256 3 354 6 21 26 356 2 573 2 475 2 671 1 575 2 145 3 773 3 576 2 361 2 578 2 482 2 34 1 681 2 40 2 488 2 682 2 580 2 370 2 787 2 273 1 372 1 587 2 687 2 275 2 690 2 497 2 159 2 593 2 694 2 378 2 164 2 596 1 696 2 279 1 791 1 792 2 280 2 282 2 283 1 284 3 386 2 605 2 172 2 173 2 61 2 607 6 609 2 803 14 802 6 68 1 705 2 181 3 71 25 72 5 806 2 73 2 708 2 810 2 80 19 401 2 402 2 187 2 84 2 622 2 85 2 814 1 815 2 628 1 199 2 817 3 410 2 308 2 202 12 823 2 416 1 724 2 524 3 526 2 315 2 634 2 206 1 635 2 640 2 427 3 429 1 217 2 110 2 535 2 111 4 536 4 645 2 220 30 324 2 221 32 736 1 115 14 543 2 
582 2 
221 4 28 2 31 2 
228 2 
797 2 287 2 445 6 551 2 175 4 62 2 804 2 180 2 660 2 706 6 614 4 243 4 344 2 759 6 399 2 81 6 249 2 184 2 186 6 348 30 766 6 350 2 189 2 15 6 572 6 198 2 306 6 257 2 474 4 411 2 27 2 776 2 480 4 311 2 204 4 363 2 151 6 527 6 38 4 103 2 489 6 105 6 686 2 272 30 832 2 588 2 320 6 328 2 793 2 166 2 117 30 442 2 541 2 286 2 443 6 57 2 652 4 
562 2 394 2 215 2 39 1 
215 2 552 2 
428 2 215 2 223 2 446 2 123 2 225 2 666 2 
215 2 447 2 666 2 
569 2 215 2 666 2 
137 2 389 2 562 2 
215 2 666 2 
137 2 590 2 
215 2 423 2 
137 2 562 2 637 2 
432 2 231 2 562 2 
120 2 562 2 425 2 
562 2 234 2 712 2 
562 2 461 2 542 2 
137 2 574 2 
215 2 336 2 
231 2 422 2 
120 2 495 2 
317 2 234 2 
86 2 542 2 
137 2 147 2 
476 2 542 2 
174 2 234 2 
120 2 298 2 
231 2 826 2 
509 2 137 2 562 2 637 2 
509 2 137 2 562 2 579 2 637 2 
584 2 137 2 562 2 
137 2 562 2 703 2 
742 2 592 2 349 2 709 2 
428 2 78 2 680 2 225 2 366 2 
680 2 377 2 366 2 
428 2 215 2 223 2 46 2 225 2 666 2 
612 2 424 2 
428 2 253 2 223 2 225 2 
746 2 234 2 
664 2 542 2 
231 2 661 2 
120 2 414 2 
120 2 352 2 542 2 
120 2 441 2 542 2 
120 2 710 2 542 2 
120 2 393 2 542 2 
176 6 460 2 641 6 428 2 156 2 404 2 600 2 225 2 
137 2 532 2 
490 2 25 2 360 2 431 2 77 2 496 2 158 4 252 2 323 6 623 4 149 2 255 2 50 2 610 2 89 2 613 2 211 2 651 2 
325 2 562 2 
159 2 
740 4 227 2 545 2 3 2 230 2 121 2 451 2 236 6 455 2 659 2 135 2 663 4 764 2 566 2 138 4 354 2 21 6 669 2 475 2 672 2 671 2 576 2 578 2 362 2 269 2 488 2 682 2 580 2 370 2 154 2 687 2 688 2 694 2 164 2 379 4 280 2 283 2 605 2 172 2 173 2 61 2 607 4 609 2 802 2 177 2 71 4 510 2 617 2 402 2 85 2 624 2 626 2 815 6 308 8 202 6 312 2 827 2 99 2 828 2 207 4 530 2 102 2 210 2 426 2 217 2 535 2 110 2 536 4 111 4 220 26 219 2 221 26 543 2 738 2 
740 4 227 2 545 2 3 2 230 2 121 2 451 2 236 6 659 2 135 2 663 4 138 4 354 2 21 6 356 1 669 2 475 2 672 2 671 2 576 2 578 2 362 2 485 2 269 2 488 2 682 2 580 2 683 2 370 2 154 2 687 2 688 2 694 2 164 2 379 4 696 1 280 2 283 2 605 2 172 2 173 2 61 2 607 5 609 2 802 2 177 2 178 2 71 4 510 2 617 2 402 2 85 2 624 2 626 2 815 6 308 8 202 6 94 2 312 2 827 2 99 2 828 2 207 4 530 2 102 2 210 2 426 2 217 2 535 2 110 2 536 4 111 4 220 26 219 2 221 26 543 2 738 2 
643 2 
11 2 205 2 
606 2 821 2 799 2 775 4 464 2 700 2 109 2 595 2 697 2 70 2 769 2 196 2 130 4 756 2 699 2 684 2 343 2 143 2 
740 2 606 2 171 2 799 2 743 2 700 2 293 6 609 2 236 4 237 2 70 2 341 2 555 2 130 4 132 2 756 4 343 2 135 2 662 2 299 2 183 2 464 2 561 2 466 2 514 2 402 2 304 2 568 2 769 2 17 2 196 2 519 4 143 4 475 2 821 2 477 6 261 4 775 4 365 2 314 2 529 2 368 2 370 2 684 4 107 2 691 2 109 4 535 2 693 4 836 2 111 2 220 6 595 2 221 12 734 2 697 6 281 4 280 2 165 4 699 2 
740 2 606 2 799 2 743 2 700 2 293 6 609 2 236 4 237 2 70 2 341 2 555 2 130 4 132 2 756 4 343 2 135 2 662 2 299 2 183 2 464 2 561 2 466 2 514 2 402 2 304 2 568 2 769 2 17 2 196 2 519 4 143 6 475 2 821 2 477 6 261 4 775 4 365 2 314 2 529 2 368 2 370 2 684 4 107 2 691 2 109 4 535 2 693 4 836 2 111 2 220 6 595 2 221 12 734 2 697 4 281 4 280 2 165 4 699 2 285 2 
740 2 606 2 799 2 743 2 700 2 293 6 609 2 236 4 237 2 70 2 341 2 555 2 130 4 132 2 756 4 343 2 135 2 662 2 299 2 183 2 464 2 561 2 466 2 514 2 402 2 304 2 471 2 568 2 769 2 17 2 196 2 519 4 143 6 475 2 821 2 477 6 261 4 775 4 365 2 314 2 529 2 368 2 370 2 684 4 107 2 691 2 109 4 535 2 693 8 836 2 111 2 220 6 595 2 221 12 734 2 697 6 281 4 280 2 165 4 699 2 
740 2 606 2 799 2 743 2 700 2 293 10 609 2 236 4 237 2 70 2 341 2 555 2 130 4 132 2 756 4 343 2 135 2 662 2 299 2 183 2 464 2 561 2 466 2 514 2 402 2 304 2 471 2 568 2 769 2 17 2 196 2 519 4 143 8 475 2 821 2 477 8 261 4 775 4 365 2 314 2 529 2 368 2 370 2 684 4 107 2 691 2 109 4 535 2 693 8 111 2 836 2 220 6 595 2 221 12 734 2 697 6 281 4 280 2 165 8 699 2 285 2 
740 2 606 2 799 2 743 2 700 2 293 10 609 2 236 4 237 2 70 2 341 2 555 2 130 4 132 2 756 4 343 2 135 2 662 2 299 2 183 2 464 2 561 2 466 2 514 2 402 2 304 2 471 2 568 2 769 2 17 2 196 2 519 4 143 6 475 2 821 2 477 6 261 4 775 4 365 2 314 2 529 2 368 2 370 2 684 4 107 2 691 2 109 4 535 2 693 8 836 2 111 2 220 6 595 2 221 12 734 2 697 6 281 4 280 2 165 8 699 2 
740 4 228 2 545 2 3 2 743 2 451 2 236 6 341 2 127 2 659 2 555 2 457 4 130 4 132 2 756 4 343 2 244 2 135 2 662 2 663 4 464 2 561 2 466 2 565 2 568 2 769 2 16 2 571 2 354 2 21 8 356 2 143 8 475 2 260 2 26 2 261 8 477 12 576 2 775 4 578 2 479 2 676 2 365 2 30 2 31 2 368 2 269 2 488 2 580 2 682 2 582 2 684 4 370 2 42 2 154 2 494 2 687 2 375 2 591 2 692 2 693 2 694 2 499 4 379 4 164 4 595 2 697 4 696 2 281 6 280 2 52 2 699 2 285 4 288 2 606 2 605 2 172 2 799 2 61 2 173 2 700 2 607 6 609 2 802 2 70 2 71 2 808 2 809 2 299 2 183 2 514 2 402 2 85 2 304 2 192 2 624 2 193 2 196 2 815 6 307 2 519 4 308 4 819 2 91 2 821 2 202 6 417 2 525 2 314 4 828 2 529 2 426 2 729 2 107 2 731 2 109 4 217 2 110 2 535 2 836 2 536 4 111 4 220 20 732 2 221 32 734 2 540 2 543 2 
740 4 228 2 545 2 3 2 743 2 451 4 236 6 341 2 127 2 659 2 555 2 457 4 130 4 132 2 756 4 343 2 244 2 135 2 662 2 663 4 464 2 561 2 466 2 565 2 471 4 568 2 769 2 16 2 571 2 354 2 21 8 356 2 143 8 475 2 260 2 26 2 261 8 477 12 576 4 775 4 578 2 479 2 676 2 365 2 30 2 31 2 368 2 269 2 488 2 580 2 682 4 582 2 684 4 370 2 42 2 154 2 494 2 687 2 375 2 591 2 692 2 693 6 694 2 499 4 379 4 164 4 595 2 697 8 696 2 281 6 280 2 52 2 699 2 288 2 606 2 605 2 172 2 799 2 61 2 173 2 700 2 607 6 609 2 802 2 70 2 71 2 808 2 809 2 299 2 183 2 514 2 402 2 85 2 304 2 192 2 624 2 193 2 196 2 815 6 307 2 519 4 308 6 819 2 91 2 821 2 202 6 417 2 525 2 314 4 828 2 529 2 426 2 729 2 107 2 731 2 109 4 217 2 110 2 535 2 836 2 536 4 111 4 220 20 732 2 221 32 734 2 540 2 543 2 
740 4 228 2 545 2 3 2 743 2 451 4 236 6 341 2 127 2 659 2 555 2 457 4 130 4 132 2 756 4 343 2 244 2 135 2 662 2 663 4 464 2 561 2 466 2 565 2 471 4 568 2 769 2 16 2 571 2 354 2 21 8 356 2 143 8 475 2 260 2 26 2 261 8 477 12 576 4 775 4 578 2 479 2 676 2 365 2 30 2 31 2 368 2 269 2 488 2 580 2 682 4 582 2 684 4 370 2 42 2 154 2 494 2 687 2 375 2 591 2 692 2 693 6 694 2 499 4 379 4 164 4 595 2 697 8 696 2 281 6 280 2 52 2 165 4 699 2 288 2 606 2 605 2 172 2 799 2 61 2 173 2 293 4 700 2 607 6 609 2 802 2 70 2 71 2 808 2 809 2 299 2 183 2 514 2 402 2 85 2 304 2 192 2 624 2 193 2 196 2 815 6 307 2 519 4 308 6 819 2 91 2 821 2 202 6 417 2 525 2 314 4 828 2 529 2 426 2 729 2 107 2 731 2 109 4 217 2 110 2 535 2 836 2 536 4 111 4 220 20 732 2 221 32 734 2 540 2 543 2 
740 4 228 2 545 2 3 2 743 2 338 2 451 4 236 6 341 2 127 2 659 2 555 2 457 4 130 4 132 2 756 4 343 2 244 2 135 2 662 2 663 4 464 2 561 2 466 2 565 2 471 4 568 2 769 2 16 2 571 2 354 4 21 12 356 2 143 10 475 2 260 2 26 2 261 8 477 16 576 4 775 4 578 2 479 2 676 2 678 2 365 2 30 2 31 2 368 2 269 2 488 2 580 2 682 4 582 2 370 2 684 4 42 2 154 2 494 2 687 2 375 2 591 2 692 2 693 6 694 2 499 4 379 6 164 2 595 2 697 10 696 2 381 2 281 6 280 2 52 2 165 4 699 2 285 2 288 2 606 2 171 2 605 2 799 2 172 2 61 2 173 2 293 4 700 2 607 6 609 2 802 4 70 2 71 4 808 2 297 2 809 2 299 2 183 2 514 2 402 2 85 2 304 2 88 2 624 2 193 2 196 2 815 8 307 2 519 4 308 6 91 2 821 2 202 8 417 2 525 2 314 4 828 2 529 2 426 2 729 2 107 2 731 2 109 4 217 2 436 2 110 2 535 2 836 2 536 4 111 4 220 18 732 2 221 30 734 2 540 2 543 2 
821 2 261 2 477 4 799 2 775 2 293 4 700 2 743 2 365 2 314 2 341 2 70 2 529 2 368 2 130 2 684 4 561 2 107 2 466 2 514 2 109 4 693 6 836 2 304 2 471 2 221 4 568 2 595 2 697 6 769 2 281 2 165 4 519 2 699 2 143 6 
740 4 545 2 3 2 743 2 236 6 341 2 659 2 239 2 130 2 135 2 663 4 561 2 466 2 471 2 473 2 568 2 769 2 354 3 21 8 356 2 143 6 475 2 261 2 477 4 775 2 578 2 478 2 365 2 368 2 488 2 580 2 684 4 370 2 154 2 687 2 159 2 693 6 694 2 164 4 379 4 595 2 697 6 696 2 281 2 280 2 282 2 699 2 604 3 386 2 605 2 799 2 172 2 173 2 61 2 293 2 700 2 503 2 607 6 609 2 802 3 70 2 395 2 71 3 708 2 299 2 514 2 402 2 85 2 304 2 624 2 192 2 815 6 519 2 819 2 821 2 202 6 314 2 529 2 107 2 109 4 217 2 110 2 535 2 836 2 111 4 536 4 220 24 221 28 543 2 
740 2 606 2 799 2 743 2 700 2 293 10 609 2 236 4 237 2 70 2 341 2 555 2 130 4 132 2 756 4 343 2 135 2 662 2 299 2 183 2 464 2 561 2 466 2 514 2 402 2 304 2 471 2 568 2 769 2 17 2 196 2 519 4 143 6 475 2 821 2 477 6 261 4 775 4 365 2 314 2 529 2 368 2 370 2 684 4 107 2 691 2 109 4 535 2 693 8 836 2 111 2 220 6 595 2 221 12 734 2 697 6 281 4 280 2 165 8 699 2 
740 2 606 2 171 2 799 2 743 2 700 2 293 10 609 2 236 4 70 2 341 2 555 2 130 4 132 2 756 4 343 2 463 2 135 2 662 2 299 2 183 2 464 2 561 2 466 2 514 2 402 2 471 2 568 2 769 2 17 2 196 2 519 4 475 2 143 6 821 2 93 2 477 8 261 4 775 4 365 2 314 2 529 2 368 2 370 2 684 4 107 2 691 2 47 4 109 4 535 2 693 8 111 2 836 2 220 6 595 2 221 12 734 2 697 8 281 4 280 2 165 8 699 2 
390 2 368 2 466 2 
390 2 368 2 466 2 
740 4 545 2 3 2 339 2 451 4 236 6 554 2 127 2 659 2 555 2 8 2 130 2 756 4 135 2 662 2 663 4 464 2 466 6 251 2 767 2 471 4 769 2 17 2 21 2 356 2 475 2 143 12 144 2 477 16 261 4 576 4 775 2 578 2 264 2 150 2 368 4 37 2 682 4 580 2 370 2 684 4 154 6 687 2 375 2 498 2 693 6 694 2 499 2 164 4 696 2 697 12 281 4 280 2 165 4 285 4 605 2 171 4 172 2 799 2 390 2 173 2 61 2 293 6 607 6 702 4 609 2 71 2 74 2 183 2 514 2 402 2 82 2 85 2 192 2 624 2 196 2 815 2 307 2 409 2 519 2 308 4 821 4 720 2 202 2 314 4 98 2 828 4 102 4 217 2 109 4 535 2 110 2 536 4 111 4 836 2 113 2 220 16 732 2 221 24 733 2 734 4 837 4 650 2 543 2 
606 2 375 2 276 2 205 2 13 2 150 2 220 2 164 2 405 2 221 4 192 2 8 2 409 2 650 2 616 2 475 2 502 2 
740 4 741 2 545 2 3 2 4 2 339 2 451 4 236 6 554 2 127 2 659 2 8 2 555 2 130 2 756 4 135 2 662 4 663 4 464 2 466 6 251 2 471 4 769 2 17 2 21 2 356 2 475 2 143 12 772 2 261 4 477 16 576 4 775 2 578 2 264 2 150 2 368 4 37 2 153 2 682 4 580 2 370 2 684 4 154 6 687 2 375 2 691 2 693 6 694 2 499 2 164 2 696 2 697 12 281 4 280 2 165 4 285 4 605 2 171 4 172 2 799 2 390 2 173 2 61 2 293 6 607 6 702 4 609 2 71 4 183 2 514 2 402 2 82 4 812 2 85 2 624 2 196 2 815 2 307 2 409 2 519 2 308 4 821 4 720 2 202 2 314 4 98 2 828 4 102 4 217 2 109 4 535 2 110 2 536 4 111 4 836 2 113 2 220 16 732 2 221 24 733 2 734 4 837 4 543 2 
740 4 545 2 3 2 339 2 452 2 451 4 236 6 554 2 127 2 659 2 555 2 8 2 130 2 756 4 135 2 662 4 663 4 464 2 466 6 251 2 471 4 769 2 17 2 21 2 356 2 475 2 143 12 477 16 261 4 262 2 576 4 775 2 578 2 264 2 150 2 368 4 37 2 682 4 580 2 370 2 684 4 154 6 687 2 375 2 691 2 693 6 161 2 694 2 499 2 164 4 696 2 697 12 281 4 280 2 165 4 285 4 170 2 605 2 171 4 172 2 799 2 390 2 173 2 61 2 293 6 607 6 702 4 609 2 71 2 183 2 514 2 402 2 82 2 403 2 85 2 192 2 624 2 196 2 815 2 307 2 409 2 519 2 308 4 821 4 720 2 202 2 314 4 98 2 828 4 102 4 217 2 109 4 535 2 110 2 536 4 111 4 836 2 113 2 220 16 732 2 221 24 733 2 734 4 837 4 650 2 543 2 
534 2 
202 2 310 2 415 2 337 2 97 2 802 3 269 4 71 3 295 2 611 2 488 2 242 2 220 2 379 2 221 2 517 1 354 3 599 3 197 2 21 2 815 2 385 2 602 2 168 2 
202 2 310 2 415 2 337 2 220 2 97 2 379 2 802 2 221 2 269 4 354 2 197 2 295 2 71 2 599 2 488 2 815 2 21 2 611 2 385 2 168 2 602 2 242 2 
202 2 310 2 415 2 337 2 220 2 97 2 379 2 802 2 221 2 269 4 354 2 197 2 295 2 71 2 599 2 488 2 815 2 21 2 611 2 385 2 168 2 602 2 242 2 
0 2 334 2 547 2 335 4 777 2 744 4 233 2 522 2 778 4 723 2 267 2 803 2 704 2 6 2 100 2 456 2 752 4 71 3 488 2 369 2 727 4 242 2 685 3 831 2 560 2 559 2 834 2 220 4 406 2 221 10 698 3 625 2 354 3 648 2 21 2 649 6 539 6 142 4 412 3 24 4 
0 2 334 2 547 2 335 4 777 2 744 4 233 2 522 2 778 4 723 2 267 2 803 2 704 2 6 2 420 2 100 2 456 2 752 4 71 2 488 2 369 2 727 4 242 2 685 2 831 2 560 2 559 2 834 2 220 4 406 2 221 10 437 2 698 2 625 2 354 2 648 2 21 2 649 4 539 6 715 2 142 4 412 2 24 4 
0 2 334 2 547 2 335 4 777 2 744 4 233 2 522 2 778 4 723 2 267 2 803 2 704 2 6 2 420 2 100 2 456 2 752 4 71 2 488 2 369 2 727 4 242 2 685 2 831 2 560 2 559 2 834 2 220 4 406 2 221 10 437 2 698 2 625 2 354 2 648 2 21 2 649 4 539 6 715 2 142 4 412 2 24 4 
0 2 334 2 547 2 335 4 777 2 744 4 233 2 522 2 778 4 723 2 267 2 803 2 704 2 6 2 420 2 100 2 456 2 752 4 71 2 488 2 369 2 727 4 242 2 685 2 831 2 560 2 559 2 834 2 220 4 406 2 221 10 437 2 698 2 625 2 354 2 648 2 21 2 649 4 539 6 715 2 142 4 412 2 24 4 
0 2 334 2 547 2 335 4 777 2 744 4 233 2 522 2 778 4 723 2 267 2 803 2 704 2 6 2 420 4 100 2 456 2 752 4 71 2 488 2 369 2 727 4 242 2 685 2 831 2 560 2 559 2 834 2 220 4 406 2 221 10 437 4 698 2 625 2 354 2 648 2 21 2 649 4 539 6 715 4 142 4 412 2 24 4 
630 2 689 2 224 2 468 2 716 2 357 2 
538 2 626 2 167 2 824 2 258 2 677 2 716 2 
388 2 1 2 60 2 550 1 521 2 95 2 448 1 725 2 829 2 658 2 783 2 129 2 396 2 459 2 533 2 370 2 75 2 558 2 213 1 565 2 470 2 220 8 221 10 191 2 141 1 601 1 
674 2 334 2 547 6 309 2 608 2 631 2 148 2 778 12 266 2 125 2 704 6 420 2 456 6 727 4 512 2 788 2 559 6 44 2 435 2 220 6 221 6 406 6 437 2 439 2 625 6 648 6 53 4 54 4 649 16 715 3 
335 2 744 2 564 4 12 5 220 1 221 1 781 2 131 1 603 2 182 2 24 2 226 2 
781 2 335 2 564 4 744 2 603 2 12 2 182 2 226 2 24 2 
781 2 335 2 564 4 744 2 603 2 12 2 182 2 226 2 24 2 
335 2 744 2 564 2 12 2 33 2 781 2 603 2 520 2 182 2 24 2 226 2 757 2 
546 2 548 6 229 2 549 2 745 2 748 2 655 8 454 4 750 4 340 2 128 2 342 2 755 2 462 2 557 6 133 2 758 6 245 1 762 10 663 18 665 2 469 4 567 2 139 2 355 2 20 2 771 2 356 2 23 2 670 4 259 2 359 2 675 4 146 2 265 2 484 2 32 2 679 4 367 2 784 2 786 2 270 2 492 2 687 2 45 2 789 8 160 2 694 4 278 7 696 2 383 2 289 4 391 2 292 2 607 36 801 2 67 6 615 2 398 6 79 2 302 2 83 2 711 6 714 2 408 2 518 2 90 2 200 2 413 2 629 2 722 2 101 8 430 2 433 2 214 2 642 16 434 2 110 4 536 20 220 40 221 44 735 2 838 2 
289 2 59 2 2 2 391 2 654 4 607 36 504 4 63 2 748 2 124 6 392 4 454 6 5 4 750 6 556 10 511 2 458 2 342 2 754 4 615 2 397 2 398 2 663 14 762 8 188 2 14 2 667 2 518 2 356 8 23 2 200 6 670 6 774 2 675 2 203 2 779 4 367 2 679 2 726 2 780 2 316 4 784 2 492 2 430 2 687 2 833 10 642 14 322 2 49 4 110 2 277 2 160 2 536 14 694 2 220 26 221 28 696 8 278 2 383 2 838 2 794 2 56 2 
289 4 546 2 229 2 654 2 549 2 607 34 800 2 745 2 748 2 63 2 801 2 124 2 392 2 67 4 454 4 5 2 750 4 128 2 556 2 342 2 754 2 755 4 462 2 615 2 557 4 133 2 398 4 663 16 762 14 79 2 665 2 469 2 567 2 667 1 407 2 194 2 20 2 627 2 771 2 518 2 356 6 23 2 90 2 200 1 670 4 675 2 722 2 484 2 779 2 32 2 367 2 679 2 726 1 784 2 208 2 786 2 270 2 430 2 492 2 214 2 433 2 833 2 687 4 642 4 45 2 49 2 322 2 110 6 277 1 536 18 694 6 220 34 221 38 278 4 696 6 383 2 838 2 56 2 
289 2 653 2 59 2 444 2 548 2 391 2 654 2 607 45 232 2 748 2 701 2 392 2 124 6 454 4 5 2 750 4 294 2 458 2 342 2 754 2 615 2 807 2 133 1 758 2 398 2 663 20 9 2 762 6 400 2 300 2 346 2 765 2 248 2 14 2 711 2 254 4 570 2 19 2 518 2 356 3 23 2 629 2 670 4 358 2 822 2 675 2 146 2 313 2 779 2 679 3 367 2 486 2 152 4 36 4 784 2 531 2 209 2 318 2 271 6 491 2 430 2 492 2 493 2 687 2 106 2 642 37 589 2 155 2 48 2 49 2 110 2 160 2 536 20 162 4 594 2 694 2 220 44 646 2 221 46 278 2 696 3 114 2 382 2 438 2 440 2 330 2 383 2 500 2 838 2 737 2 332 2 739 2 
387 2 

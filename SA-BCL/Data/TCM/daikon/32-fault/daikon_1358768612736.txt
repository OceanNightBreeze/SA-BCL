#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 298 
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException (184,786) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 296 112 
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V FAILED junit.framework.AssertionFailedError (241,428) 404 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 642 642 935 935 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 837 (255,371) (183,473) (183,473) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 837 (255,371) (183,473) (183,473) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 837 (255,371) (183,473) (183,473) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 837 (255,371) (183,473) (183,473) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 837 (255,371) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 837 (255,371) (255,371) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 837 (255,371) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 250 874 530 367 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 310 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (431,725) (431,725) 357 350 236 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 357 350 236 
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (431,725) (431,725) 357 350 236 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 721 721 721 357 350 236 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:jj_3_10()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.Quant:eq(II)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.Intern:numIntArrays()I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:jj_3R_55()Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoAux:hashCode()I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:gte(II)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.MathMDE:gcd(II)I
daikon.Quant:memberOf(S[S)Z
daikon.Quant:lexEqual([I[I)Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_63()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.ProglangType:isArray()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sum([[D)D
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:noDups([I)Z
utilMDE.MathMDE:negate(I)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_10(I)Z
daikon.ProglangType:isIntegral()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:eltwiseGTE([I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
utilMDE.MathMDE:modulus([I)[I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3R_47()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:jj_3R_54()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_35(I)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:jj_3R_69()Z
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_3R_56()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONSTANT | 14703 | 0 -> 1
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:eltsNotEqual([II)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:min([I)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:lt(II)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_114()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Quant:subsetOf([I[I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_88()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:jj_3R_77()Z | STATEMENT | 172318 | stmt -> ;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:PrimarySuffix()Ljtb.syntaxtree.PrimarySuffix;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_68()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_3R_133()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Ppt:Ppt()V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:slice([III)[I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.Quant:eltwiseLTE([I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:lte(II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:eltsLT([II)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:eltsEqual([II)Z
daikon.PptSlice1:arity()I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:jj_3_28()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 7162 | return null
jtb.JavaParser:jj_3R_87()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.ValueTuple:size()I
jtb.JavaParser:jj_2_5(I)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginColumn()I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.Invariant:logOn()Z
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_3_1()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_3_27()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_50()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | CONDITION | 19542 | if (x) -> if (!x)
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13809 | = null
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107170 | = null
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3_5()Z
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.ModBitTracker:num_samples()I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:new_ppt()V
jtb.JavaParser:jj_3R_86()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 53531 | = null
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression; | RETURN | 69746 | return null
daikon.inv.Invariant:getConfidence()D
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName; | ASSIGN | 99550 | = null
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.ProglangType:baseIsFloat()Z
daikon.Quant:ne(II)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.JavaCharStream:readChar()C
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_120()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | RETURN | 184235 | return null
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:size()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_25()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:jj_3R_51()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Quant:lexLTE([I[I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_27(I)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_2_28(I)Z
daikon.ProglangType:baseIsScalar()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_ntk()I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_2_29(I)Z
jtb.JavaParser:jj_3R_135()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z | CONDITION | 57307 | if (x) -> if (!x)
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.ArraysMDE:min_max([I)[I
daikon.ModBitTracker:num_sets()I
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_115()Z
utilMDE.Intern:intern([D)[D
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_3_14()Z
jtb.JavaParser:jj_3R_81()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | CONSTANT | 15367 | 1 -> 0
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow(II)I
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:jj_2_15(I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:jj_3R_148()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.PptSlice0:arity()I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.ProglangType:dimensions()I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName; | RETURN | 30246 | return null
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.ProglangType:isScalar()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([J)[J
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | CONDITION | 156850 | if (x) -> if (!x)
utilMDE.ArraysMDE:element_range([I)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_89()Z
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:jj_3_29()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.ArraysMDE:sum([I)I
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:jj_2_30(I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:eltwiseEqual([I)Z
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:sum([D)D
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_3R_121()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_57()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.ProglangType:isPointerFileRep()Z
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 11206 | = null
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isFloat()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Quant:lexGTE([I[I)Z
daikon.Debug:logOn()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3R_119()Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:jj_2_25(I)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:jj_3_22()Z
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 23040 | = null
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_80()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I | CONDITION | 19149 | if (x) -> if (!x)
daikon.VarInfo:isPointer()Z
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.JavaParser:jj_3R_49()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:jj_3_30()Z
daikon.Quant:concat([I[I)[I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:union([I[I)[I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:subsetOf([B[I)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_161()Z
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:jj_3_12()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode; | ASSIGN | 26710 | = null
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:eltsLTE([II)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_3_16()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:sameLength([I[I)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_35()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:getEndLine()I
utilMDE.MathMDE:gcd(JJ)J
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3_36()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.Intern:intern([I)[I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z | OPERATOR | 163389 | == -> !=
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONDITION | 20179 | if (x) -> if (!x)
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 64304 | return null
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J | CONSTANT | 17272 | 2 -> -1
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([ZZ)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
412 4 725 2 66 2 175 2 856 2 163 2 897 2 471 2 431 2 
151 2 348 2 675 6 617 2 503 6 261 2 434 2 713 2 106 6 419 2 131 2 
171 2 885 2 56 2 298 2 915 2 14 2 931 2 879 2 126 4 
716 4 233 6 164 4 385 2 888 4 634 6 725 4 41 2 196 4 244 6 321 2 457 2 55 12 852 6 739 2 486 6 878 4 898 4 431 4 646 4 221 4 224 10 752 2 184 2 96 4 
597 6 502 4 
57 2 
716 2 231 2 233 2 410 2 164 2 191 2 634 4 848 2 12 2 513 2 244 2 321 2 667 2 55 6 875 2 852 2 486 2 878 2 898 2 646 2 221 2 564 2 224 4 
871 6 55 14 716 4 852 8 599 6 233 5 284 4 164 4 486 8 878 4 385 2 166 4 221 4 224 12 590 2 650 2 244 8 
446 4 133 2 859 10 5 2 73 2 137 2 504 2 843 4 237 62 635 2 413 4 215 4 604 2 390 2 82 2 550 2 50 10 170 4 268 4 483 4 612 2 394 4 521 4 428 8 785 4 90 2 527 4 529 2 466 2 531 2 620 2 932 2 156 14 220 4 180 2 26 2 565 2 226 6 936 2 652 4 
595 2 296 2 57 2 187 2 464 2 824 2 81 2 580 2 344 2 112 2 83 2 
68 2 918 2 763 2 695 2 633 2 10 2 389 2 271 2 674 2 521 4 520 2 428 2 117 2 821 2 786 2 127 2 488 2 374 2 471 2 184 2 652 2 936 2 
570 4 836 8 716 16 67 6 757 2 599 6 233 22 100 6 863 6 284 4 164 16 166 4 697 6 725 4 634 6 453 2 43 2 416 2 244 32 86 4 611 2 321 2 871 6 707 2 55 53 852 32 200 2 486 32 878 16 431 4 898 4 646 18 436 4 221 16 224 48 626 4 883 6 536 4 444 4 
428 2 137 2 226 2 
36 2 217 2 794 2 118 2 128 2 479 2 241 2 402 22 891 2 27 2 512 2 833 2 592 10 481 2 
232 2 4 2 574 1 335 2 839 2 576 4 6 2 336 1 842 2 700 2 139 2 846 2 701 2 703 2 578 1 455 4 146 3 349 2 853 2 711 2 352 4 588 2 24 3 25 2 157 27 715 2 468 14 469 2 159 1 28 3 593 2 594 2 596 1 861 21 363 3 720 2 601 2 364 2 725 30 365 1 45 2 866 1 729 2 480 2 49 2 733 21 870 2 735 3 877 2 175 2 737 2 615 28 745 2 623 2 279 2 749 2 182 2 492 1 753 2 755 2 495 2 65 14 497 2 69 2 70 2 77 14 194 3 508 2 290 2 80 2 776 1 293 2 391 2 199 6 294 2 518 2 395 2 641 2 525 2 787 2 204 14 303 2 205 5 648 2 900 6 532 2 307 3 538 1 407 4 792 6 656 2 796 1 916 2 414 2 319 4 664 2 108 1 417 1 418 2 420 1 422 1 928 2 670 1 426 3 325 3 431 32 326 2 125 2 561 2 438 3 329 2 130 2 830 6 439 2 331 2 
21 2 
774 2 431 2 
709 2 431 4 609 2 
0 6 688 2 447 2 448 2 450 2 690 2 7 48 694 4 698 14 9 36 240 2 704 2 13 48 243 2 705 2 708 4 245 2 246 2 710 8 19 2 462 4 248 2 20 2 465 2 712 4 22 28 467 2 23 4 472 4 31 2 254 48 718 12 717 2 38 6 257 2 476 26 477 22 722 4 262 4 478 2 264 2 726 2 44 8 727 2 46 2 731 14 265 2 267 2 266 26 53 2 54 2 484 2 272 2 485 4 273 8 58 2 742 8 744 16 743 2 490 2 60 2 747 2 746 2 280 14 61 2 62 2 750 2 751 2 496 20 282 4 758 2 760 4 770 146 76 2 289 2 772 2 773 4 292 4 777 2 778 2 779 10 515 2 295 4 519 2 784 4 523 48 300 16 89 4 92 8 93 4 790 2 95 4 534 2 535 2 308 24 98 2 99 2 313 2 541 2 101 2 799 2 800 2 543 8 802 48 544 2 314 6 102 8 807 2 318 14 104 8 105 10 109 2 107 2 111 4 322 38 552 2 815 4 558 2 819 20 822 2 120 2 324 2 823 6 129 2 562 4 826 48 827 36 327 2 563 4 569 2 134 2 573 2 136 22 338 4 345 2 346 2 145 2 144 2 147 2 351 22 854 48 155 42 855 4 587 6 586 2 355 4 360 4 860 48 864 48 600 2 165 2 167 2 169 186 605 2 366 4 872 2 613 4 176 2 179 2 372 8 373 2 181 2 884 2 376 146 377 2 886 48 380 4 379 8 188 2 190 6 383 2 384 2 632 4 631 2 192 4 193 4 636 4 195 2 889 48 197 20 892 2 639 48 640 16 396 2 895 2 644 48 899 2 901 2 649 14 207 8 401 2 905 2 411 2 914 2 919 2 213 2 660 2 662 2 415 2 663 2 216 2 923 4 924 2 423 146 668 8 424 4 678 2 677 2 437 2 684 4 934 2 227 2 441 2 230 4 442 4 229 8 687 2 
2 2 809 1 862 2 506 2 
539 2 2 2 
2 2 342 2 867 2 428 2 196 2 728 2 404 2 
2 2 867 2 397 2 
177 2 2 2 867 2 
370 2 862 2 212 2 
2 2 867 2 
370 2 234 2 
2 2 115 2 
370 2 556 2 862 2 
42 2 862 2 582 2 
706 2 222 2 862 2 
219 2 793 2 862 2 
132 2 654 2 862 2 
370 2 691 2 
2 2 285 2 
42 2 661 2 
214 2 222 2 
219 2 493 2 
132 2 79 2 
370 2 723 2 
132 2 489 2 
219 2 572 2 
222 2 740 2 
42 2 275 2 
370 2 556 2 862 2 52 2 
370 2 553 2 556 2 862 2 52 2 
370 2 862 2 291 2 
370 2 862 2 32 2 
33 2 673 2 820 2 382 2 
97 2 782 2 812 2 651 2 51 2 
894 2 862 2 
622 2 428 2 404 2 791 2 
622 2 342 2 795 2 428 2 404 2 791 2 
2 2 867 2 428 2 196 2 404 2 514 2 
488 2 72 2 
209 2 428 2 196 2 404 2 
219 2 581 2 
903 2 
42 2 225 2 
222 2 844 2 
132 2 222 2 537 2 
132 2 435 2 222 2 
132 2 222 2 252 2 
132 2 736 2 222 2 
408 6 614 2 428 2 761 2 579 2 471 2 404 2 
370 2 87 2 
525 2 
333 2 135 2 4 2 335 2 235 2 842 2 846 2 701 2 847 2 455 4 456 4 352 4 588 2 25 2 157 4 593 8 594 2 35 2 37 2 362 2 720 2 364 2 725 26 866 2 49 2 877 2 175 2 737 2 615 6 276 2 745 2 623 6 753 2 755 2 497 2 283 2 186 2 189 2 75 4 288 2 77 6 290 2 80 2 776 2 199 6 297 2 395 2 642 2 202 2 303 2 900 4 533 2 405 2 407 4 792 2 656 2 409 2 211 2 916 2 801 2 319 4 546 4 110 2 813 2 666 2 928 2 559 2 431 26 326 2 123 2 830 2 228 2 330 2 935 2 
333 2 135 2 4 2 335 2 235 2 842 2 846 2 701 2 703 2 847 2 455 4 456 4 352 4 588 2 25 2 157 4 589 2 593 8 594 2 35 2 37 2 362 2 720 2 364 2 725 26 866 2 49 2 877 2 175 2 737 2 615 6 276 2 745 2 623 6 753 2 755 2 497 2 283 2 186 2 189 2 75 4 288 2 77 6 290 2 80 2 776 2 391 2 199 6 297 2 395 2 202 2 303 2 900 6 405 2 407 4 792 2 656 2 409 2 211 2 916 2 801 2 658 2 319 4 546 4 110 2 922 2 813 2 666 2 928 2 427 2 559 2 431 26 326 2 123 2 830 2 228 2 330 2 
545 2 
575 2 925 2 
835 2 753 2 837 2 4 2 692 2 841 2 503 6 238 2 386 2 769 2 701 2 78 2 343 2 454 2 143 2 15 2 199 4 516 10 18 4 893 2 460 4 643 8 352 2 153 2 399 2 647 2 713 4 94 2 251 4 400 4 30 2 255 2 473 2 359 8 594 2 910 2 309 2 34 4 256 2 407 2 655 2 258 2 542 2 916 2 364 2 725 6 921 2 106 6 425 2 672 2 675 6 617 2 431 12 434 2 881 4 745 2 624 2 567 2 183 2 131 4 
835 2 753 2 837 2 4 2 841 2 503 8 386 2 238 2 769 2 701 2 78 2 343 2 454 2 143 2 199 4 516 10 18 4 893 2 460 4 643 8 352 2 153 2 399 2 647 2 713 4 714 4 94 2 251 4 400 4 30 2 255 2 473 2 359 8 594 2 910 2 309 2 34 4 407 2 256 2 655 2 258 2 542 2 916 2 364 2 725 6 921 2 106 8 419 2 734 2 425 2 672 2 675 6 617 2 431 12 434 2 881 4 745 2 624 2 567 2 443 2 183 2 131 4 
309 2 34 4 425 2 655 2 675 2 542 2 841 2 881 2 238 2 713 2 343 2 106 2 251 4 30 2 131 2 183 2 255 2 473 2 
835 2 753 2 837 2 4 2 692 2 841 2 503 6 238 2 386 2 769 2 701 2 78 2 343 2 454 2 143 2 15 2 199 4 516 6 18 4 893 2 460 4 643 4 352 2 153 2 399 2 647 2 713 4 94 2 251 4 400 4 30 2 255 2 473 2 359 4 594 2 910 2 309 2 34 4 256 2 407 2 655 2 258 2 542 2 916 2 364 2 725 6 921 2 106 6 419 2 425 2 672 2 675 4 431 12 434 2 881 4 745 2 624 2 567 2 183 2 131 4 
835 2 753 2 837 2 4 2 692 2 841 2 503 6 238 2 386 2 769 2 701 2 78 2 343 2 454 2 143 2 15 2 199 4 516 6 18 4 893 2 460 4 643 4 352 2 153 2 399 2 647 2 713 4 94 2 251 4 400 4 30 2 255 2 473 2 359 4 594 2 910 2 309 2 34 4 256 2 407 2 655 2 258 2 542 2 916 2 261 2 364 2 725 6 921 2 106 4 425 2 672 2 675 6 431 12 434 2 881 4 745 2 624 2 567 2 183 2 131 4 
835 2 753 2 837 2 4 2 692 2 841 2 503 6 238 2 386 2 769 2 701 2 78 2 343 2 454 2 143 2 15 2 199 4 516 6 18 4 893 2 460 4 643 4 352 2 153 2 399 2 647 2 713 4 94 2 251 4 400 4 30 2 255 2 473 2 359 8 594 2 910 2 309 2 34 4 256 2 407 2 655 2 258 2 542 2 916 2 364 2 725 6 921 2 106 6 425 2 672 2 675 6 617 2 431 12 434 2 881 4 745 2 624 2 567 2 183 2 131 4 
835 2 753 2 837 2 4 2 692 2 841 2 503 8 238 2 386 2 769 2 701 2 78 2 343 2 454 2 143 2 15 2 199 4 516 10 18 4 893 2 460 4 643 8 352 2 153 2 399 2 647 2 713 4 94 2 251 4 400 4 30 2 255 2 473 2 359 8 594 2 910 2 309 2 34 4 256 2 407 2 655 2 258 2 542 2 916 2 261 2 364 2 725 6 921 2 106 6 425 2 672 2 675 8 617 2 431 12 434 2 881 4 745 2 624 2 567 2 183 2 131 4 
835 2 753 2 837 2 4 2 692 2 841 2 503 6 238 2 386 2 769 2 701 2 78 2 343 2 454 2 143 2 15 2 199 4 516 10 18 4 893 2 460 4 643 8 352 2 153 2 399 2 647 2 713 4 94 2 251 4 400 4 30 2 255 2 473 2 359 8 594 2 910 2 309 2 34 4 256 2 407 2 655 2 258 2 542 2 916 2 364 2 725 6 921 2 106 6 425 2 672 2 675 6 617 2 431 12 434 2 881 4 745 2 624 2 567 2 183 2 131 4 
835 2 34 2 837 2 256 2 497 2 335 2 692 2 542 2 503 4 841 2 842 2 261 2 577 2 386 2 238 2 78 2 106 4 343 2 18 2 672 2 675 6 431 4 153 2 399 2 434 2 647 2 713 4 94 2 400 2 251 2 567 2 131 4 183 2 255 2 593 2 359 2 473 2 
835 2 34 2 837 2 256 2 497 2 335 2 692 2 542 2 503 4 841 2 842 2 577 2 386 2 238 2 78 2 106 6 343 2 18 2 672 2 675 6 617 2 431 4 153 2 399 2 434 2 647 2 713 4 94 2 400 2 251 2 567 2 131 4 183 2 255 2 593 2 359 6 473 2 
835 2 34 2 837 2 256 2 497 2 335 2 692 2 542 2 503 4 841 2 842 2 577 2 386 2 238 2 78 2 106 6 343 2 516 4 18 2 672 2 675 6 643 4 617 2 431 4 153 2 399 2 434 2 647 2 713 4 94 2 400 2 251 2 567 2 131 4 183 2 255 2 593 2 359 6 473 2 
835 2 34 2 837 2 256 2 497 2 335 2 692 2 542 2 503 4 841 2 842 2 577 2 386 2 238 2 78 2 106 4 343 2 516 4 18 2 672 2 675 4 643 4 617 2 431 4 153 2 399 2 434 2 647 2 713 2 94 2 400 2 251 2 567 2 131 2 183 2 255 2 593 2 359 6 473 2 
835 2 34 2 837 2 256 2 692 2 542 2 503 4 841 2 386 2 238 2 78 2 343 2 106 6 516 4 18 2 460 2 672 2 675 6 643 4 617 2 431 4 153 2 399 2 434 2 647 2 713 4 94 2 400 2 251 2 567 2 183 2 131 4 255 2 359 6 473 2 
835 2 837 2 4 2 692 2 235 2 841 2 238 2 846 2 701 2 703 2 343 2 455 4 456 4 149 2 18 2 460 2 352 4 153 2 588 2 713 4 25 2 157 3 251 2 29 3 255 2 473 2 359 6 594 2 34 2 256 2 720 2 364 2 725 24 480 2 49 2 270 2 877 2 175 2 737 4 615 8 617 2 621 2 745 2 623 6 183 2 753 2 755 2 71 2 503 4 769 2 386 2 77 6 387 2 78 2 290 2 80 2 391 2 199 6 516 2 518 2 297 2 395 2 525 2 399 2 303 2 647 2 900 6 94 2 400 2 407 4 792 3 912 2 656 2 542 2 916 2 106 6 319 4 813 2 928 2 672 2 675 6 431 28 326 2 434 2 130 2 830 3 829 2 567 2 131 4 
768 2 647 2 672 2 
768 2 647 2 672 2 
834 2 837 2 4 2 335 2 235 2 842 2 846 2 238 2 701 2 703 2 455 4 141 2 18 2 352 4 588 2 25 2 713 4 157 2 251 2 358 2 255 2 593 2 359 6 594 2 34 2 364 2 725 14 49 2 877 2 175 2 737 2 615 2 617 2 745 2 623 2 753 2 755 2 497 2 503 4 77 2 290 2 80 2 391 2 198 2 199 6 516 2 297 2 395 2 643 2 399 2 303 2 647 2 900 6 400 2 405 2 407 4 911 2 656 2 542 2 916 2 319 4 106 6 813 2 928 2 554 2 672 2 675 6 431 18 326 2 122 2 434 2 131 4 
594 2 281 2 270 2 347 2 737 2 116 2 917 2 630 2 463 2 431 4 920 2 725 2 340 2 509 2 140 2 30 2 925 2 
834 2 837 2 4 2 335 2 235 2 842 2 846 2 238 2 701 2 703 2 455 4 141 2 18 2 352 4 588 2 25 2 713 4 157 4 251 2 358 2 255 2 593 2 359 6 594 2 34 2 364 2 725 14 49 2 877 2 175 2 737 2 615 2 617 2 745 2 623 2 371 2 753 2 755 2 497 2 503 4 77 2 290 2 80 2 391 2 198 2 199 6 516 2 297 2 395 2 643 2 399 2 303 2 647 2 900 6 400 2 405 2 407 4 911 2 656 2 542 2 916 2 319 4 106 6 813 2 928 2 554 2 672 2 675 6 431 18 326 2 122 4 434 2 681 2 131 4 
834 2 837 2 4 2 335 2 235 2 842 2 846 2 238 2 701 2 703 2 455 4 141 2 18 2 352 4 588 2 25 2 713 4 157 2 251 2 358 2 255 2 593 2 359 6 594 2 34 2 364 2 725 14 49 2 877 2 175 2 737 2 615 2 617 2 745 2 623 2 753 2 755 2 497 2 503 4 77 2 290 2 80 2 391 2 198 2 199 6 516 2 297 2 395 2 643 2 399 2 303 2 647 2 900 6 400 2 405 2 407 4 911 2 656 2 542 2 916 2 319 4 106 6 813 2 928 2 554 2 672 2 675 6 431 18 326 2 122 2 434 2 131 4 
3 2 4 2 233 4 235 2 696 2 693 2 701 2 703 2 702 2 11 2 455 2 242 2 456 10 244 4 707 4 459 2 17 8 461 10 250 2 29 2 474 2 35 2 475 2 716 2 37 2 719 4 720 2 39 2 40 2 724 2 725 22 47 2 49 2 48 2 732 2 268 2 55 8 737 2 738 2 486 4 276 2 277 2 487 26 745 2 278 2 64 2 753 2 755 2 754 2 756 2 284 4 71 2 759 2 765 2 766 2 287 2 288 2 77 12 80 2 775 2 776 2 84 4 780 2 783 4 299 4 524 2 301 4 785 2 788 2 526 2 789 2 303 2 530 2 792 11 540 10 797 2 798 2 801 12 803 2 315 8 316 2 103 10 806 2 317 1 319 2 110 8 810 2 813 2 555 2 323 2 326 2 560 2 328 2 828 2 830 11 135 22 334 2 840 2 846 2 339 2 142 2 852 4 152 6 352 4 588 2 157 11 593 26 594 2 162 2 598 2 164 2 865 2 364 2 168 2 866 2 868 2 608 2 869 4 170 2 367 2 871 6 173 2 877 2 876 2 874 2 175 2 369 2 615 18 878 2 616 8 618 2 621 2 623 12 625 2 375 22 628 2 629 2 887 2 189 2 387 2 388 2 890 2 638 2 391 2 199 6 393 3 896 4 202 2 645 2 646 4 900 4 902 2 904 26 208 2 906 2 403 10 407 4 912 2 656 2 916 2 659 2 421 2 665 2 666 2 926 2 929 4 676 2 431 28 432 2 680 4 933 2 221 2 683 2 223 2 224 6 228 2 685 2 
754 2 571 2 792 2 135 6 720 2 759 2 725 2 77 2 775 2 810 2 456 2 869 2 393 2 929 2 299 4 615 2 431 2 432 2 623 2 683 2 328 2 157 2 830 2 208 2 
754 2 571 2 792 2 135 6 720 2 759 2 725 2 77 2 775 2 810 2 456 2 869 2 393 2 929 2 299 4 615 2 431 2 432 2 623 2 683 2 328 2 157 2 830 2 208 2 
754 2 571 2 792 2 135 6 720 2 759 2 725 2 77 2 775 2 810 2 456 2 869 2 393 2 929 2 299 4 615 2 431 2 432 2 623 2 683 2 328 2 157 2 830 2 208 2 
406 3 65 2 792 3 716 2 863 4 913 4 720 2 164 2 501 2 337 2 603 4 725 4 549 3 849 3 244 2 269 4 458 2 55 5 852 2 818 2 615 2 486 2 878 2 203 6 121 4 431 10 583 2 302 2 432 2 585 2 249 4 682 2 221 2 157 3 857 2 224 4 566 2 158 2 468 2 626 2 
65 2 233 2 501 2 337 2 849 2 244 2 458 2 852 2 203 6 583 2 302 2 646 2 585 2 249 4 157 2 158 2 857 2 468 2 406 2 792 2 716 2 863 4 913 4 720 2 164 2 725 4 603 4 549 2 611 2 269 4 55 4 818 2 486 2 615 2 878 2 431 10 121 4 432 2 682 2 221 2 566 2 224 4 626 2 
65 2 233 2 501 2 337 2 849 2 244 2 458 2 852 2 203 6 583 2 302 2 646 2 585 2 249 4 157 2 158 2 857 2 468 2 406 2 792 2 716 2 863 4 913 4 720 2 164 2 725 4 603 4 549 2 611 2 269 4 55 4 818 2 486 2 615 2 878 2 431 10 121 4 432 2 682 2 221 2 566 2 224 4 626 2 
65 2 233 2 501 2 337 2 849 2 244 2 458 2 852 2 203 6 583 2 302 2 646 2 585 2 249 4 157 2 158 2 857 2 468 2 406 2 792 2 716 2 863 4 913 4 720 2 164 2 725 4 603 4 549 2 611 2 269 4 55 4 818 2 486 2 615 2 878 2 431 10 121 4 432 2 682 2 221 2 566 2 224 4 626 2 
65 2 233 4 501 2 337 2 849 2 244 2 458 2 852 2 203 6 583 2 302 2 646 4 585 2 249 4 157 2 158 2 857 2 468 2 406 2 792 2 716 2 863 4 913 4 720 2 164 2 725 4 603 4 549 2 611 4 269 4 55 4 818 2 486 2 615 2 878 2 431 10 121 4 432 2 682 2 221 2 566 2 224 4 626 2 
814 2 381 2 890 2 657 2 452 2 161 2 
873 2 814 2 310 2 548 2 110 2 831 2 8 2 
627 2 498 2 451 2 239 1 725 8 701 2 341 2 547 2 320 2 550 1 811 2 850 2 551 2 781 2 927 1 671 2 174 2 816 2 522 2 247 2 429 1 431 10 59 2 91 2 26 1 305 2 
689 2 716 4 233 4 284 2 863 4 164 4 260 2 85 2 244 4 84 2 611 3 871 4 55 10 876 2 852 4 486 4 878 4 646 3 221 4 224 8 626 2 906 2 
909 2 482 2 653 7 392 2 913 2 201 2 431 1 121 2 845 1 584 2 725 1 304 2 603 2 507 2 511 4 832 2 114 2 378 2 
909 4 482 2 653 6 392 2 913 2 201 4 121 2 584 4 304 2 603 2 507 2 511 4 832 2 378 2 114 2 
909 8 482 2 653 10 392 2 913 2 201 8 431 1 121 2 845 1 584 8 725 1 304 2 603 2 507 2 511 4 832 2 378 8 114 6 
909 2 482 2 653 2 392 2 913 2 201 2 121 2 584 2 304 2 603 2 507 2 511 2 832 2 
1 2 449 2 236 2 138 2 846 6 703 4 455 10 851 2 148 2 350 2 154 2 354 2 858 2 357 2 356 2 591 4 361 2 259 2 721 2 725 24 610 2 619 1 880 4 748 2 491 1 63 1 494 4 755 6 185 2 499 2 500 4 505 2 74 2 767 1 637 2 391 4 517 2 88 1 398 4 303 4 900 16 306 2 908 2 311 2 319 8 557 2 930 2 119 1 431 26 430 2 218 2 440 1 332 2 
755 2 350 2 88 2 431 6 236 2 880 2 303 2 846 2 725 6 900 2 319 2 455 2 858 2 730 2 357 2 
494 2 1 2 755 4 449 2 499 2 500 6 505 2 286 2 236 2 138 2 846 4 703 4 510 4 637 2 771 2 455 12 16 2 391 4 851 2 148 2 517 2 150 2 350 2 88 2 398 6 154 2 528 2 303 2 353 2 900 22 858 2 356 2 357 2 160 2 253 2 908 4 591 6 361 2 312 2 210 4 311 2 259 2 805 2 725 30 319 10 606 2 113 2 610 2 817 4 557 2 430 4 431 32 124 2 619 2 825 2 880 16 433 2 679 2 218 2 178 2 882 2 748 2 568 2 332 2 
445 2 1 2 755 2 838 2 505 2 286 2 74 2 762 2 236 2 764 2 699 2 846 2 703 4 771 4 637 2 455 10 391 4 150 4 350 2 88 2 303 2 900 30 858 2 470 2 357 2 907 2 591 6 721 6 602 2 804 2 263 2 725 20 808 2 319 10 607 2 113 2 172 2 669 2 368 2 274 2 431 22 430 2 741 2 619 2 880 12 433 4 679 2 568 2 63 2 686 2 
206 2 

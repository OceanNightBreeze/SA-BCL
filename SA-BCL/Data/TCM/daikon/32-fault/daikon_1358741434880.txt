#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (421,475) (421,475) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (7,253,312,361,593) (7,253,312,361,593) (7,253,312,361,593) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 160 482 419 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (291,449) 257 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.ClassCastException (188,388) (188,388) (188,388) (188,388) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 539 
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 420 120 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (421,475) (421,475) 195 221 584 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 195 221 584 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 195 221 584 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 195 221 584 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.ModBitTracker:split(I)I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:gte(II)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.ArraysMDE:concat([I[I)[I
daikon.ValueTuple:isMissing(I)Z
daikon.inv.Invariant:justified()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.PptSlice1:arity()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.WeakHasherMap:size()I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:memberOf(S[S)Z
daikon.Quant:concat([I[I)[I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:lt(II)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:eltsLTE([II)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V | ASSIGN | 1742 | = null
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.ProglangType:isScalar()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Intern:intern([J)[J
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Debug:logOn()Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaCharStream:backup(I)V
daikon.Quant:subsetOf([F[D)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt:Ppt()V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaCharStream:getEndColumn()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsGT([II)Z
utilMDE.Intern:internSubsequence([III)[I | RETURN | 22902 | return null
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | CONDITION | 280460 | if (x) -> if (!x)
jtb.JavaCharStream:FillBuff()V
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:baseIsIntegral()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(F[F)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:isReverse([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Intern:intern([D)[D
daikon.Quant:intersection([I[I)[I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:lte(II)Z
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 3053 | = null
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaCharStream:readChar()C | OPERATOR | 5855 | == -> <=
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName; | RETURN | 27662 | return null
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.ProglangType:dimensions()I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaCharStream:getEndLine()I
daikon.inv.Invariant:logDetail()Z
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.MathMDE:sign(I)I
daikon.inv.Invariants:Invariants()V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:eq(JJ)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOf([II)I | STATEMENT | 13838 | stmt -> ;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsNotEqual([II)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:lexLT([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice0:arity()I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:eq(II)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:lexEqual([I[I)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:memberOf(F[D)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:lexGTE([I[I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.ArraysMDE:max([I)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z | ASSIGN | 9658 | = null
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.ProglangType:baseIsScalar()Z
daikon.ValueTuple:size()I
daikon.inv.Invariant:getConfidence()D
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_ntk()I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.PptSlice1:num_samples()I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.Quant:setEqual([I[I)Z | OPERATOR | 155198 | < -> >
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern([I)[I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:subsetOf([F[F)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:eq(DD)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 62554 | return null
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:eq(FF)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:subsetOf([D[F)Z
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | OPERATOR | 46762 | && -> ||
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:isIntegral()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:eltwiseLTE([I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.ModBitTracker:num_vars()I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.MathMDE:negate(I)I
daikon.Quant:eltsGTE([II)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ProglangType:isArray()Z
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:noDups([I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:gt(II)Z
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName:hashCode()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:eltsLT([II)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V | ASSIGN | 491 | = null
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:slice([III)[I | OPERATOR | 160615 | == -> !=
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.diff.Node:Node()V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.InvMap:InvMap()V
daikon.VarInfoAux:hashCode()I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptName:isEnterPoint()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
371 2 421 2 475 2 185 2 570 2 700 2 573 2 365 2 427 4 
157 2 323 2 283 6 598 6 699 2 410 2 580 2 173 6 384 2 331 2 473 2 
421 2 607 2 124 6 332 6 276 2 475 2 60 2 76 2 671 6 82 4 229 4 661 6 199 2 
634 14 676 15 446 10 522 6 604 6 448 6 47 8 219 8 238 2 26 4 415 8 475 4 477 2 643 2 572 2 176 2 576 6 421 4 225 6 35 2 442 6 161 4 163 4 63 2 385 8 
89 4 587 6 
19 2 
44 2 167 2 204 2 403 2 656 2 594 4 291 2 252 2 348 2 417 2 706 2 386 2 
634 48 93 8 676 55 446 6 604 16 522 4 448 18 47 32 563 6 393 4 219 32 26 2 68 4 239 4 415 32 475 4 241 2 100 2 479 6 576 16 617 4 509 4 402 4 421 4 153 2 330 2 225 16 272 2 58 6 156 6 184 6 18 4 442 16 133 4 588 6 337 2 91 6 589 2 385 22 
277 2 49 2 291 2 
234 2 637 10 95 2 497 2 449 2 592 2 17 2 599 22 295 2 334 2 375 2 400 2 444 2 41 2 
634 4 676 6 446 4 604 2 522 2 448 2 678 2 47 2 219 2 26 2 415 2 526 2 83 2 576 2 203 2 223 2 515 2 225 2 130 2 442 2 335 2 385 2 43 2 
576 4 634 12 676 16 604 4 313 2 47 8 225 4 688 2 219 8 68 4 156 6 415 8 18 4 442 4 588 6 63 2 385 4 
638 2 261 4 49 6 501 2 680 4 594 4 345 4 291 8 705 2 612 2 503 62 432 2 99 4 546 4 324 2 710 10 456 4 455 2 685 2 245 2 457 4 301 2 686 2 519 2 485 2 181 2 406 4 651 4 333 2 277 2 186 2 305 2 362 4 585 10 493 2 79 14 386 4 113 2 629 2 40 4 
233 2 25 2 10 2 27 2 55 2 19 2 210 2 654 2 408 2 278 2 
495 1 413 2 593 2 414 2 171 2 325 4 51 2 119 2 85 6 421 20 650 4 123 2 548 1 128 2 132 4 601 2 521 2 464 2 138 2 191 2 469 2 236 4 193 2 470 2 566 2 567 2 475 22 658 1 573 2 398 2 575 2 69 2 150 6 102 1 577 2 667 2 619 2 670 2 253 2 491 2 624 2 720 2 361 2 364 2 363 2 111 2 445 2 
475 2 4 2 
475 4 353 2 481 2 
451 2 
143 4 235 2 368 2 66 2 289 4 543 2 320 2 172 2 419 2 482 2 33 2 298 2 687 2 550 2 251 2 621 2 107 2 160 2 553 2 228 2 109 2 556 2 189 2 673 2 
374 2 511 2 644 2 541 1 
374 2 631 2 
238 2 240 2 374 2 579 2 257 2 190 2 291 2 
504 2 190 2 
339 2 374 2 190 2 
227 2 511 2 707 2 
374 2 190 2 
208 2 707 2 
374 2 355 2 
424 2 511 2 707 2 
511 2 77 2 13 2 
582 2 511 2 648 2 
281 2 511 2 244 2 
511 2 81 2 288 2 
677 2 707 2 
374 2 268 2 
71 2 13 2 
591 2 648 2 
146 2 244 2 
81 2 695 2 
707 2 326 2 
81 2 215 2 
316 2 244 2 
9 2 648 2 
114 2 13 2 
424 2 511 2 707 2 376 2 
424 2 511 2 707 2 376 2 92 2 
511 2 707 2 264 2 
511 2 707 2 547 2 
212 2 34 2 628 2 165 2 
222 2 45 2 379 2 558 2 15 2 340 2 450 2 599 6 106 2 144 2 537 2 527 2 552 2 349 4 296 2 530 4 139 2 633 2 
511 2 284 2 
46 2 257 2 22 2 291 2 
46 2 579 2 72 2 257 2 22 2 291 2 
238 2 374 2 56 2 257 2 190 2 291 2 
507 2 640 2 
371 2 682 2 257 2 291 2 
244 2 175 2 
613 2 81 2 
13 2 662 2 
88 2 648 2 
360 2 81 2 648 2 
81 2 554 2 648 2 
141 2 81 2 648 2 
81 2 382 2 648 2 
388 2 499 2 611 6 291 2 581 2 188 6 257 2 411 2 
571 2 707 2 
123 2 
6 2 171 2 174 2 85 4 650 4 180 3 652 2 653 2 462 2 464 2 191 2 391 2 469 2 193 6 561 3 470 2 394 2 566 6 567 2 569 2 475 26 573 2 575 2 663 2 202 2 401 2 667 2 669 2 670 2 491 2 37 3 211 2 39 2 111 6 492 2 498 2 217 2 502 2 325 4 119 2 51 2 220 2 421 26 327 5 329 4 516 2 518 2 128 2 129 2 692 2 132 4 600 4 601 2 521 2 138 2 605 2 236 4 346 2 709 8 708 2 711 2 150 6 69 2 350 2 435 4 619 2 357 2 359 2 623 2 538 2 363 2 364 2 445 2 632 2 
2 2 171 2 85 6 650 4 180 2 652 2 653 2 462 2 464 2 191 2 391 2 469 2 193 6 561 2 470 2 394 2 566 6 567 2 569 2 475 26 573 2 575 2 663 2 577 2 202 2 401 2 667 2 669 2 670 2 491 2 37 2 211 2 110 2 39 2 111 6 492 2 498 2 413 2 217 2 218 2 502 2 325 4 119 2 51 2 220 2 421 26 327 4 329 4 516 2 518 2 128 2 129 2 692 2 132 4 600 4 601 2 521 2 138 2 605 2 236 4 346 2 709 8 708 2 711 2 150 6 69 2 350 2 435 4 619 2 357 2 359 2 623 2 363 2 364 2 78 2 445 2 632 2 
137 2 
525 2 486 2 
533 2 483 2 598 2 283 2 412 4 716 2 702 4 523 2 580 2 319 2 341 2 250 2 487 2 157 2 322 2 645 2 134 2 532 2 
636 2 496 2 315 4 116 2 412 4 319 2 596 2 322 4 645 2 323 2 171 2 597 4 325 2 418 2 173 6 377 2 52 2 684 2 421 6 328 2 423 4 598 4 549 2 273 2 126 2 59 2 187 2 601 2 521 2 134 2 428 4 468 4 283 6 699 2 392 2 236 2 702 4 523 2 341 2 237 2 475 12 200 2 574 6 150 4 532 2 533 2 483 2 716 2 580 4 250 2 487 2 719 2 491 2 157 4 363 2 364 2 722 2 112 2 723 2 445 2 
636 2 496 2 315 4 116 2 412 4 319 2 596 2 322 4 645 2 171 2 597 4 325 2 418 2 173 6 377 2 52 2 684 2 421 6 328 2 423 4 598 6 549 2 273 2 126 2 331 2 59 2 187 2 601 2 521 2 134 2 428 4 468 4 283 4 699 2 392 2 236 2 702 4 523 2 341 2 237 2 475 12 200 2 574 6 150 4 532 2 533 2 483 2 716 2 580 4 250 2 487 2 719 2 491 2 157 4 363 2 364 2 722 2 112 2 723 2 445 2 
636 2 496 2 315 4 116 2 412 4 319 2 596 2 322 4 645 2 171 2 597 4 325 2 418 2 173 6 377 2 52 2 684 2 421 6 328 2 423 4 598 6 549 2 273 2 126 2 59 2 187 2 601 2 521 2 134 2 384 2 428 4 468 8 283 6 699 2 392 2 236 2 702 4 523 2 341 2 237 2 475 12 200 2 574 6 150 4 532 2 533 2 483 2 716 2 580 4 250 2 487 2 719 2 491 2 157 4 363 2 364 2 722 2 112 2 723 2 445 2 
636 2 496 2 315 8 116 2 412 4 319 2 596 2 322 4 645 2 171 2 597 4 325 2 418 2 173 8 377 2 52 2 684 2 421 6 328 2 423 4 598 8 549 2 273 2 126 2 331 2 59 2 187 2 601 2 521 2 134 2 384 2 428 4 468 8 283 6 699 2 392 2 236 2 702 4 523 2 341 2 237 2 475 12 200 2 574 10 150 4 532 2 533 2 483 2 716 2 580 4 250 2 487 2 719 2 491 2 157 4 363 2 364 2 722 2 112 2 723 2 445 2 
636 2 496 2 315 8 116 2 412 4 319 2 596 2 322 4 645 2 171 2 597 4 325 2 418 2 173 6 377 2 52 2 684 2 421 6 328 2 423 4 598 6 549 2 273 2 126 2 59 2 187 2 601 2 521 2 134 2 384 2 428 4 468 8 283 6 699 2 392 2 236 2 702 4 523 2 341 2 237 2 475 12 200 2 574 10 150 4 532 2 533 2 483 2 716 2 580 4 250 2 487 2 719 2 491 2 157 4 363 2 364 2 722 2 112 2 723 2 445 2 
0 2 540 10 4 6 372 2 171 2 173 12 14 7 16 6 180 2 549 2 551 2 187 2 21 6 191 2 24 4 391 2 392 2 193 8 564 6 394 2 566 6 567 2 395 1 573 2 200 2 575 2 574 2 201 2 577 2 578 1 580 4 207 2 37 2 38 2 211 2 586 1 39 4 409 2 42 8 412 4 413 2 217 2 596 2 597 8 418 2 51 2 52 2 421 24 423 6 598 8 57 2 59 4 601 2 62 2 428 4 603 1 606 2 236 4 237 4 69 2 242 2 435 4 247 2 250 2 619 2 441 6 254 6 626 2 445 2 636 2 639 2 263 2 451 6 80 2 645 2 266 1 84 1 85 6 650 4 271 6 274 1 273 2 460 2 652 2 462 2 464 2 463 7 465 2 468 2 283 4 469 2 470 2 98 2 475 46 476 2 478 6 481 6 483 2 299 2 667 2 103 2 669 2 487 2 488 6 670 2 491 2 672 2 306 2 111 6 112 2 494 2 115 2 496 2 116 2 317 1 319 2 318 2 322 4 321 2 325 4 119 2 508 6 684 2 327 2 328 2 516 2 518 2 126 2 689 1 128 2 331 4 131 6 132 4 521 2 134 2 336 2 138 12 699 4 702 4 701 2 523 2 341 2 343 6 709 4 529 6 150 6 532 2 533 2 715 2 716 2 719 2 358 2 157 4 364 2 363 2 722 2 164 4 366 6 723 2 
0 2 636 2 639 2 4 6 540 10 263 2 451 6 80 2 372 2 645 2 171 2 173 12 85 6 650 4 271 6 16 6 549 2 180 2 273 2 460 2 551 2 652 2 187 2 462 4 21 6 464 2 465 2 384 4 280 2 191 2 24 4 391 2 468 6 283 8 469 2 392 2 193 8 470 2 564 6 566 6 394 4 98 2 567 2 475 48 476 2 478 6 29 2 573 2 200 2 574 2 481 6 575 2 201 2 577 2 483 2 299 2 103 2 667 2 669 4 580 4 487 2 488 6 670 2 207 2 491 2 37 2 38 2 672 2 211 2 409 2 306 2 39 4 112 2 111 6 494 2 42 8 115 2 496 2 116 2 412 4 318 2 319 2 413 2 217 2 596 2 321 2 322 4 597 8 325 4 51 2 418 2 119 2 508 6 52 2 684 2 327 2 421 26 328 2 329 2 423 6 598 8 516 2 518 2 57 2 126 2 128 2 59 4 131 6 132 4 601 2 62 2 521 2 336 2 134 2 138 12 428 4 606 2 699 4 236 4 701 2 702 4 523 2 341 2 343 6 237 4 709 8 529 6 242 2 69 2 150 6 532 2 533 2 435 4 715 2 247 2 716 2 250 2 719 2 619 2 358 2 441 6 157 4 254 6 626 2 363 2 364 2 722 2 366 6 164 4 723 2 445 2 
0 2 636 2 639 2 4 6 540 10 263 2 451 6 80 2 372 2 645 2 171 2 173 12 85 6 650 4 271 6 16 6 549 2 180 2 273 2 460 2 551 2 652 2 187 2 462 4 21 6 464 2 465 2 384 4 280 2 191 2 24 4 391 2 468 6 283 8 469 2 392 2 193 8 470 2 564 6 566 6 394 4 98 2 567 2 475 48 476 2 478 6 29 2 573 2 200 2 481 6 574 6 575 2 201 2 577 2 483 2 299 2 103 2 667 2 669 4 580 4 487 2 488 6 670 2 207 2 491 2 37 2 38 2 672 2 211 2 409 2 306 2 39 4 111 6 112 2 494 2 42 8 115 2 496 2 315 4 116 2 412 4 318 2 319 2 413 2 217 2 596 2 321 2 322 4 597 8 325 4 51 2 418 2 119 2 508 6 52 2 684 2 327 2 421 26 328 2 329 2 423 6 598 8 516 2 518 2 57 2 126 2 128 2 59 4 131 6 132 4 601 2 62 2 521 2 336 2 134 2 138 12 428 4 606 2 699 4 236 4 701 2 702 4 523 2 341 2 343 6 237 4 709 8 529 6 242 2 69 2 150 6 532 2 533 2 435 4 715 2 247 2 716 2 250 2 719 2 619 2 358 2 441 6 157 4 254 6 626 2 363 2 364 2 722 2 366 6 164 4 723 2 445 2 
0 2 4 12 540 8 372 2 171 2 173 16 16 6 180 4 549 2 551 2 187 2 21 6 384 4 191 2 24 4 391 4 392 2 193 12 564 6 394 4 566 8 567 2 29 2 573 2 200 2 575 2 574 6 201 2 577 2 580 4 207 2 36 2 37 4 38 2 211 2 39 4 409 2 42 8 412 4 413 2 217 2 596 2 597 8 418 2 51 2 52 2 54 2 421 24 423 6 422 6 598 10 57 2 59 4 601 2 62 2 426 6 428 4 606 2 236 4 429 6 237 4 69 2 242 2 435 6 436 6 247 2 73 2 250 2 619 2 441 6 254 6 626 2 445 2 636 2 259 2 639 2 263 2 451 12 80 2 645 2 85 6 87 6 650 4 271 6 273 2 460 2 652 2 462 4 464 2 465 2 280 2 468 6 283 10 94 6 469 2 470 2 96 2 98 2 475 52 476 2 478 12 481 12 483 2 666 6 299 2 667 2 103 2 669 4 487 2 488 12 670 2 491 2 672 2 306 2 112 2 111 8 494 2 115 2 496 2 116 2 315 4 319 2 318 2 117 2 322 4 321 2 323 2 325 4 119 2 508 6 684 2 327 4 328 2 329 2 516 4 518 2 126 2 128 2 331 2 127 2 131 6 132 4 521 2 134 2 336 2 138 10 140 2 142 6 699 4 702 4 701 2 523 2 341 2 343 6 709 10 529 6 150 6 532 2 352 6 533 2 716 2 719 2 358 2 157 4 364 2 363 2 722 2 164 4 366 12 723 2 
428 2 468 6 283 6 699 2 315 4 116 2 392 2 412 2 702 2 341 2 596 2 475 4 645 2 597 2 200 2 173 4 574 4 418 2 52 2 532 2 533 2 328 2 423 2 598 6 716 2 580 4 273 2 487 2 719 2 157 4 187 2 134 2 112 2 384 2 723 2 
260 2 540 2 542 2 7 2 645 2 171 2 646 3 173 4 269 2 85 6 650 4 180 3 273 2 652 2 187 2 464 2 384 2 191 2 468 6 283 6 469 2 392 2 193 8 470 2 566 6 567 2 568 2 475 28 573 2 200 2 575 2 574 2 577 2 667 2 580 4 487 2 670 2 491 2 37 3 211 2 39 2 112 2 111 6 312 2 116 2 412 2 413 2 217 2 596 2 597 2 325 4 418 2 119 2 51 2 52 2 421 24 327 3 328 2 423 2 123 2 598 6 126 2 128 2 425 2 132 4 601 2 521 2 134 2 138 4 428 2 699 2 236 4 702 2 609 2 341 2 150 6 69 2 532 2 533 2 435 4 715 2 716 2 719 2 619 2 157 4 364 2 363 2 723 2 445 2 
636 2 496 2 315 8 116 2 412 4 319 2 596 2 322 4 645 2 171 2 597 4 325 2 418 2 173 6 377 2 52 2 684 2 421 6 328 2 423 4 598 6 549 2 273 2 126 2 59 2 187 2 601 2 521 2 134 2 384 2 428 4 468 8 283 6 699 2 392 2 236 2 702 4 523 2 341 2 237 2 475 12 200 2 574 10 150 4 532 2 533 2 483 2 716 2 580 4 250 2 487 2 719 2 491 2 157 4 363 2 364 2 722 2 112 2 723 2 445 2 
636 2 496 2 315 8 116 2 412 4 319 2 596 2 322 4 645 2 323 2 171 2 597 4 325 2 418 2 173 8 52 2 684 2 421 6 328 2 423 4 598 6 549 2 179 2 273 2 126 2 59 2 187 2 601 2 521 2 134 2 384 2 338 4 428 4 468 8 283 8 699 2 392 2 236 2 285 2 702 4 523 2 341 2 237 2 475 12 200 2 574 10 150 4 532 2 533 2 483 2 716 2 580 4 250 2 487 2 719 2 491 2 157 4 364 2 363 2 722 2 112 2 445 2 
596 2 635 2 719 2 
596 2 635 2 719 2 
166 2 635 2 539 2 540 2 169 2 267 2 171 2 173 16 647 2 85 6 650 4 549 2 458 4 459 2 273 2 652 2 462 4 464 2 384 4 191 2 24 2 468 6 655 2 283 12 469 2 560 4 193 2 470 2 394 4 566 2 567 2 475 24 573 2 575 2 574 6 577 2 483 2 299 2 667 2 669 4 580 4 487 2 405 2 670 2 491 2 39 6 111 2 112 2 310 2 674 2 496 2 590 2 214 2 315 4 412 2 319 2 413 2 217 2 596 6 322 4 323 4 597 4 325 4 119 2 51 2 421 16 327 2 423 4 598 12 517 2 57 2 518 4 128 2 331 4 59 2 129 4 132 4 601 2 521 2 694 2 138 4 428 2 606 2 699 4 236 4 702 2 237 4 67 2 347 2 709 4 150 6 69 2 532 2 716 4 536 2 619 2 719 4 441 2 157 4 363 2 364 2 722 2 164 2 445 2 
674 2 387 2 24 2 115 2 421 2 655 2 540 2 523 2 618 2 525 2 441 2 475 4 267 2 626 2 364 2 138 2 31 2 
635 2 539 2 636 2 169 2 267 2 171 2 173 16 647 4 85 6 650 4 549 2 458 4 459 2 273 2 652 2 462 4 464 2 384 4 191 2 468 6 655 2 283 12 469 2 560 4 193 2 470 2 287 2 471 2 394 4 566 2 567 2 475 24 573 2 575 2 574 6 577 2 483 2 299 2 667 2 668 2 669 4 580 4 487 2 670 2 491 2 39 6 111 2 112 2 310 2 674 2 590 2 315 4 412 2 319 2 413 2 217 2 596 6 322 4 323 4 597 4 325 4 119 2 51 2 421 16 327 4 423 4 598 12 517 2 57 2 518 4 128 2 331 4 59 4 129 4 132 4 601 2 521 2 694 2 696 2 138 2 428 2 606 2 699 4 236 4 702 2 703 2 237 2 347 2 709 4 150 6 69 2 532 2 716 4 536 2 619 2 719 4 441 2 157 4 363 2 364 2 722 2 164 2 445 2 
635 2 539 2 636 2 540 2 169 2 267 2 171 2 173 16 647 2 85 6 650 4 177 2 549 2 458 4 459 2 273 2 652 2 462 4 464 2 384 4 191 2 24 2 468 6 655 2 283 12 469 2 286 2 560 4 193 2 470 2 565 2 394 4 566 2 567 2 475 24 573 2 575 2 574 6 577 2 483 2 299 2 667 2 669 4 580 4 487 2 670 2 491 2 39 6 111 2 112 2 310 2 674 2 496 2 590 2 315 4 412 2 319 2 413 2 217 2 596 6 322 4 505 2 323 4 597 4 325 4 119 2 51 2 421 16 327 2 423 4 598 12 517 2 57 2 518 4 128 2 331 4 59 4 129 4 132 4 601 2 521 2 694 2 138 4 428 2 606 2 699 4 236 4 702 2 237 4 347 2 148 2 709 4 150 6 69 2 532 2 716 4 536 2 619 2 719 4 441 2 157 4 363 2 364 2 722 2 164 2 445 2 
634 4 369 2 263 2 8 2 642 2 545 2 12 4 171 2 85 3 650 2 180 2 551 2 18 2 20 2 464 2 279 1 191 2 469 2 193 8 470 2 562 2 97 2 566 6 290 2 194 2 292 2 294 2 197 2 475 26 397 2 660 2 573 2 201 2 576 2 664 2 577 1 104 2 303 2 105 2 670 2 207 2 491 2 209 2 37 2 211 2 307 2 39 2 306 2 111 6 676 6 47 2 413 1 217 2 219 2 415 2 118 1 325 4 51 2 120 2 420 2 421 20 327 2 225 2 128 2 132 2 601 2 521 2 230 2 136 2 138 2 604 2 698 1 236 4 145 2 431 2 433 2 712 2 150 6 69 2 243 2 351 2 435 4 717 2 718 2 619 2 358 2 156 4 364 2 363 2 442 2 443 6 445 2 
390 2 65 2 193 2 370 2 342 2 566 2 704 2 475 2 265 2 396 2 452 3 399 2 121 2 435 2 327 3 421 2 152 4 516 6 180 3 690 2 625 2 37 3 211 2 111 2 
390 2 65 2 193 2 370 2 342 2 566 2 704 2 475 2 265 2 396 2 452 2 399 2 121 2 435 2 327 2 421 2 152 4 516 6 180 2 690 2 625 2 37 2 211 2 111 2 
390 2 65 2 193 2 370 2 342 2 566 2 704 2 475 2 265 2 396 2 452 2 399 2 121 2 435 2 327 2 421 2 152 4 516 6 180 2 690 2 625 2 37 2 211 2 111 2 
634 4 676 6 314 4 47 2 262 2 216 3 219 2 595 4 415 2 544 6 265 2 53 2 649 2 421 4 327 3 178 2 225 2 180 3 125 2 691 3 133 2 693 2 602 3 697 2 604 2 193 2 563 4 344 2 430 4 475 10 659 4 434 2 576 2 439 2 354 2 249 2 356 4 620 2 211 2 442 2 
634 4 676 4 604 2 448 2 314 4 47 2 193 2 262 2 563 4 216 2 344 2 219 2 595 4 430 4 415 2 475 10 265 2 544 6 659 4 53 2 649 2 576 2 434 2 327 2 421 4 439 2 178 2 249 2 354 2 225 2 272 2 180 2 125 2 356 4 620 2 691 2 211 2 442 2 693 2 133 2 602 2 697 2 385 2 
634 4 676 4 604 2 448 2 314 4 47 2 193 2 262 2 563 4 216 2 344 2 219 2 595 4 430 4 415 2 475 10 265 2 544 6 659 4 53 2 649 2 576 2 434 2 327 2 421 4 439 2 178 2 249 2 354 2 225 2 272 2 180 2 125 2 356 4 620 2 691 2 211 2 442 2 693 2 133 2 602 2 697 2 385 2 
634 4 676 4 604 2 448 2 314 4 47 2 193 2 262 2 563 4 216 2 344 2 219 2 595 4 430 4 415 2 475 10 265 2 544 6 659 4 53 2 649 2 576 2 434 2 327 2 421 4 439 2 178 2 249 2 354 2 225 2 272 2 180 2 125 2 356 4 620 2 691 2 211 2 442 2 693 2 133 2 602 2 697 2 385 2 
634 4 676 4 604 2 448 4 314 4 47 2 193 2 262 2 563 4 216 2 344 2 219 2 595 4 430 4 415 2 475 10 265 2 544 6 659 4 53 2 649 2 576 2 434 2 327 2 421 4 439 2 178 2 249 2 354 2 225 2 272 4 180 2 125 2 356 4 620 2 691 2 211 2 442 2 693 2 133 2 602 2 697 2 385 4 
383 2 675 2 657 2 282 2 158 2 528 2 
461 2 282 2 1 2 407 2 534 2 309 2 663 2 
389 2 3 2 608 2 610 2 641 2 11 1 475 10 198 2 506 2 147 2 616 2 453 2 101 2 713 2 421 8 245 1 440 2 381 2 489 1 622 1 520 2 493 1 366 2 23 2 630 2 445 2 
93 2 634 12 676 16 604 6 64 2 448 2 47 6 393 2 563 4 219 6 292 2 415 6 475 6 197 2 576 6 665 2 421 6 438 2 224 2 225 6 272 2 108 2 156 4 184 4 18 2 159 2 20 2 442 6 133 2 385 4 
510 2 270 2 314 2 48 2 380 3 226 2 74 2 356 2 154 2 490 2 595 2 614 2 557 2 
510 2 421 1 270 2 314 2 48 2 380 6 226 2 74 2 356 2 154 4 490 2 595 2 614 2 475 1 373 1 135 2 70 2 557 2 
510 2 270 2 314 2 48 2 380 6 226 4 74 2 356 2 154 4 490 4 595 2 614 4 135 2 70 2 557 2 
510 2 421 1 270 2 314 2 48 2 380 10 226 8 74 2 356 2 154 4 490 8 595 2 614 8 475 1 373 1 135 8 70 6 557 2 
447 2 168 2 5 6 85 20 86 2 378 2 650 12 182 3 275 2 555 2 467 2 191 4 192 2 469 4 559 2 472 6 195 2 196 2 293 2 474 2 475 32 28 2 297 2 30 4 32 16 577 2 205 2 300 4 484 2 404 2 206 4 35 2 583 2 584 2 308 2 213 2 500 2 413 2 679 2 681 6 416 2 683 2 221 2 421 30 122 2 514 2 132 10 61 2 231 2 232 4 524 2 615 2 149 2 531 2 151 2 437 2 246 2 714 2 248 2 535 2 619 2 75 2 155 2 721 2 627 2 255 1 162 4 258 2 367 2 
469 2 413 4 681 4 50 2 195 2 475 18 615 2 170 2 454 2 480 2 85 16 32 10 221 2 577 4 151 2 421 16 122 2 650 6 512 2 246 2 714 2 300 2 205 2 404 2 619 2 75 2 182 2 275 2 183 2 721 2 583 2 132 6 61 2 584 2 256 2 191 2 
577 2 221 2 421 6 650 2 469 2 413 2 75 2 619 2 195 2 475 6 132 2 584 2 256 2 85 4 32 2 191 2 
469 2 413 4 681 2 195 2 475 12 615 2 85 10 32 4 221 2 577 4 151 2 421 12 650 4 714 2 205 2 302 2 90 2 304 2 619 2 75 2 275 2 721 2 583 2 132 4 61 2 584 2 466 2 311 2 191 2 
513 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (25,503) (25,503) 
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.IllegalArgumentException 713 713 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 662 307 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V FAILED junit.framework.ComparisonFailure 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 137 744 584 117 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 362 
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.Error 304 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 606 53 538 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 606 53 538 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 606 53 538 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 606 53 538 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.Invariant:logDetail()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo; | RETURN | 3360 | return null
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_13()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:getEndColumn()I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3R_161()Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_57()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quant:lexGTE([I[I)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:setEqual([I[I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double; | ASSIGN | 17372 | = null
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:subsetOf([F[D)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_85()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isArray()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.Invariants:Invariants()V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V | ASSIGN | 956 | = null
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:jj_3R_69()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([S[S)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaCharStream:readChar()C
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.ModBitTracker:split(I)I
jtb.JavaCharStream:ReadByte()C
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType; | STATEMENT | 47994 | stmt -> ;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.ValueTuple:size()I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_13(I)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.Invariant:getConfidence()D
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:eltsLT([II)Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.MathMDE:mod_positive(II)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.ProglangType:isIntegral()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType; | RETURN | 7895 | return null
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Quant:concat([I[I)[I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:eltsEqualIndex([I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptSlice2:arity()I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.test.FormatTestCase:passes()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.simplify.SimpUtil:formatInteger(J)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.Invariant:prob_and(DDD)D
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_58()Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.RootNode:RootNode()V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONDITION | 17506 | if (x) -> if (!x)
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V | ASSIGN | 25295 | = null
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Debug:logDetail()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.ArraysMDE:min([I)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_54()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_3R_50()Z
jtb.JavaCharStream:getEndLine()I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Ppt:Ppt()V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.Quant:memberOf(D[F)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:sum([I)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:num_sets()I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_163()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:jj_3R_49()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Debug:logOn()Z
daikon.VarInfo:relate_var()V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.MathMDE:pow(II)I
daikon.Quant:union([I[I)[I
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.PptSlice1:num_samples()I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String; | RETURN | 17948 | return null
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.Invariant:logOn()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([I)[I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quant:lexGT([I[I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaCharStream:getBeginLine()I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsGTE([II)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Intern:internSubsequence([III)[I | RETURN | 22902 | return null
jtb.JavaParser:jj_3R_135()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.ModBitTracker:num_samples()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:slice([III)[I
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:eq(JJ)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.Quant:eltsNotEqual([II)Z
daikon.PptName:isEnterPoint()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:negate(I)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_48()Z
daikon.Quant:eq(DD)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:ne(II)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.Intern:numIntArrays()I
utilMDE.Assert:assertTrue(Z)V
jtb.JavaCharStream:backup(I)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.MathMDE:pow_fast(II)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:lt(II)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:noDups([I)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:generateParseException()Ljtb.ParseException;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.PptSlice1:arity()I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:gt(II)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfo:new_ppt()V
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.Node:Node()V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:eltwiseLT([I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:hashCode()I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:sign(I)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.ProglangType:format()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.Invariant:isWorthPrinting()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:subsetOf([J[J)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eq(II)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | CONDITION | 19542 | if (x) -> if (!x)
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:gte(II)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:sameLength([I[I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.Quant:eq(FF)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | OPERATOR | 60487 | == -> <
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_ntk()I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | RETURN | 14876 | return null
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptSlice0:arity()I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.ProglangType:dimensions()I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaCharStream:FillBuff()V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2268 | = null
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.ArraysMDE:max([I)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:subsetOf([D[F)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ProglangType:baseIsScalar()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:lexLTE([I[I)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.diff.InvMap:InvMap()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:memberOf(F[F)Z
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:jj_3R_47()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_3R_134()Z
daikon.PptName:isCombinedExitPoint()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:eltsGT([II)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
181 2 503 2 262 2 56 4 752 2 25 2 61 2 805 2 609 2 
72 2 406 2 241 6 140 2 408 2 409 2 57 2 168 6 281 6 352 2 649 2 
14 6 685 2 807 4 25 2 562 6 675 2 503 2 580 2 732 2 239 2 105 4 384 6 623 6 
516 4 634 2 463 6 666 8 328 2 25 4 200 2 60 15 418 6 134 2 92 4 503 4 445 8 697 6 478 14 596 6 773 2 453 4 187 8 430 10 349 6 160 2 457 2 228 6 322 8 
713 4 
404 2 
462 4 358 2 787 2 152 2 153 4 535 2 6 2 425 4 753 2 311 2 486 2 379 2 706 2 21 2 382 4 321 2 608 2 708 2 232 2 805 2 324 2 25 4 437 2 270 2 672 2 563 2 503 4 30 2 679 2 722 2 624 2 572 2 96 2 180 2 449 2 456 2 348 2 399 2 579 2 350 2 143 2 582 2 47 2 251 2 
518 6 463 14 666 20 587 2 25 4 28 4 60 39 524 6 273 4 235 4 91 4 418 4 92 2 503 4 67 2 530 2 619 2 445 20 35 4 697 14 595 6 596 14 478 34 183 4 484 6 185 8 187 20 430 6 349 14 121 4 353 2 228 14 322 17 
636 2 358 2 23 2 
815 2 637 2 799 2 330 2 601 2 242 2 66 10 579 2 757 2 743 2 473 2 268 2 39 22 573 2 
295 2 463 2 666 2 60 6 502 2 418 2 92 2 529 2 790 2 445 2 794 2 697 2 283 2 596 2 478 4 187 2 430 4 349 2 189 2 705 2 191 2 228 2 322 2 
595 6 518 6 463 4 666 8 478 12 596 4 328 2 60 16 273 4 703 2 187 8 349 4 112 2 445 8 121 4 228 4 322 4 
459 4 663 2 636 2 358 8 329 4 465 4 414 2 559 2 500 4 520 4 171 4 693 4 152 2 205 2 537 10 32 2 209 2 423 2 622 2 395 2 813 2 508 2 156 62 74 2 751 2 98 2 286 4 243 14 486 4 223 10 656 4 777 2 380 2 382 4 492 2 226 2 320 4 661 2 23 6 779 4 
709 2 307 2 668 2 467 2 485 2 120 2 404 2 282 2 369 2 179 2 662 2 
517 2 107 2 736 2 3 3 108 2 738 2 297 1 416 2 299 1 526 2 204 2 417 1 111 2 645 1 532 2 536 2 207 2 208 2 647 2 648 2 11 2 10 3 114 6 12 2 651 2 749 3 211 2 539 2 750 2 214 2 15 2 542 2 427 2 19 2 309 4 754 2 218 1 20 2 220 2 654 2 547 6 119 16 118 1 432 2 549 2 318 1 758 16 760 3 124 2 556 2 664 2 233 2 665 2 27 8 25 34 558 2 761 3 130 1 561 2 332 2 131 4 439 2 674 2 440 12 441 3 564 2 676 1 334 2 31 2 571 2 135 5 37 1 769 2 340 6 41 2 577 2 342 2 139 2 451 2 142 2 454 3 44 2 347 1 45 2 246 16 249 2 49 2 461 2 255 2 783 1 686 2 466 2 687 2 59 2 367 2 692 2 262 2 261 2 791 3 472 24 594 3 372 2 375 2 480 6 75 1 483 2 76 2 701 2 376 2 157 32 602 2 603 4 378 3 489 4 383 2 82 1 83 2 163 2 269 32 612 1 712 2 808 3 714 2 497 2 809 8 167 2 810 16 717 2 503 32 279 2 390 2 718 2 93 1 177 8 94 2 814 2 182 4 184 24 288 1 397 2 630 2 102 2 512 2 290 4 103 4 190 3 292 2 293 12 824 4 
635 2 25 2 
276 2 25 4 426 2 
319 2 
106 2 1 20 199 84 639 10 110 6 739 10 412 4 740 16 298 2 203 2 531 2 534 26 206 2 745 2 113 4 305 8 213 2 306 2 543 2 217 2 219 2 544 16 313 6 431 2 655 34 658 2 224 2 229 4 323 2 129 2 560 14 29 2 565 4 444 2 335 10 336 2 36 2 448 2 337 26 339 2 42 2 772 2 450 26 141 2 775 20 245 30 578 2 458 2 144 2 51 2 52 2 684 2 781 26 54 26 356 6 357 10 588 2 359 2 785 26 257 2 147 14 258 2 62 14 63 20 260 2 366 12 69 26 695 10 475 6 71 2 155 2 476 2 73 2 373 2 479 2 598 8 800 2 77 2 702 4 158 2 377 2 79 2 162 2 80 2 491 2 494 2 87 2 166 84 811 26 275 26 277 2 172 2 280 2 719 10 504 26 506 2 720 12 621 4 628 2 818 26 396 4 101 2 820 2 289 28 823 4 731 2 403 2 733 12 633 84 196 2 
58 1 660 2 688 2 673 2 
660 2 593 2 
611 2 634 2 301 2 358 2 660 2 591 2 801 2 
89 2 660 2 591 2 
660 2 591 2 617 2 
33 2 499 2 673 2 
660 2 591 2 
40 2 499 2 
487 2 660 2 
499 2 673 2 501 2 
670 2 673 2 616 2 
574 2 555 2 673 2 
173 2 673 2 394 2 
22 2 673 2 522 2 
284 2 499 2 
513 2 660 2 
600 2 670 2 
768 2 555 2 
627 2 173 2 
767 2 522 2 
499 2 259 2 
271 2 522 2 
173 2 176 2 
797 2 555 2 
470 2 670 2 
499 2 590 2 673 2 501 2 
48 2 499 2 590 2 673 2 501 2 
389 2 499 2 673 2 
763 2 499 2 673 2 
368 2 607 2 792 2 825 2 
477 2 576 2 495 4 798 2 344 2 99 2 361 2 755 2 727 2 266 2 415 2 149 2 683 2 646 2 81 2 650 4 39 6 294 2 
364 2 673 2 
611 2 358 2 374 2 253 2 
611 2 358 2 374 2 381 2 801 2 253 2 
611 2 634 2 613 2 358 2 660 2 591 2 
540 2 706 2 
611 2 634 2 358 2 469 2 
173 2 826 2 
452 2 522 2 
240 2 670 2 
788 2 555 2 
691 2 555 2 522 2 
771 2 555 2 522 2 
435 2 555 2 522 2 
84 2 555 2 522 2 
611 2 358 2 525 6 569 2 446 2 393 2 474 2 230 6 
499 2 521 2 
517 2 
736 2 108 2 738 2 411 2 297 2 526 2 299 4 204 2 648 2 114 2 12 2 652 2 427 2 754 2 309 4 218 2 308 2 20 2 312 2 547 2 553 2 659 4 124 2 664 2 25 26 558 2 439 2 131 4 564 2 674 4 440 8 766 2 334 2 571 2 340 6 139 2 346 2 44 6 45 2 246 6 49 2 50 2 586 2 255 2 686 2 367 2 262 2 592 4 264 2 372 2 375 2 480 4 482 2 483 2 76 2 376 2 157 4 603 4 489 2 163 2 269 6 614 2 809 2 167 2 503 26 717 2 718 2 174 2 97 2 817 2 182 2 287 2 290 4 103 2 292 2 293 8 
736 2 108 2 738 2 411 2 297 2 416 2 526 2 299 2 204 2 648 2 114 2 12 2 652 2 427 2 309 4 754 2 218 2 308 2 20 2 312 2 547 2 553 2 659 4 124 2 664 2 25 26 558 2 439 2 131 4 564 2 674 4 440 8 766 2 334 2 571 2 340 6 139 2 44 6 45 2 246 6 49 2 586 2 255 2 686 2 367 2 262 2 592 4 264 2 372 2 375 2 480 6 482 2 483 2 76 2 376 2 157 4 603 4 704 2 489 2 493 2 163 2 85 2 269 6 614 2 809 2 167 2 503 26 717 2 718 2 814 2 97 2 817 2 182 2 287 2 630 2 290 4 103 2 292 2 293 8 
471 2 
351 2 620 2 
585 2 736 2 782 2 408 4 150 2 303 4 422 2 648 2 72 2 698 2 17 2 599 2 754 2 309 2 483 2 546 4 548 2 317 2 488 2 490 8 225 2 433 2 496 2 26 2 25 12 272 2 762 10 715 8 168 6 131 2 132 2 170 2 716 2 765 2 812 2 503 6 334 2 281 6 95 4 571 2 338 2 136 2 340 4 575 4 241 6 140 4 345 2 100 4 728 2 821 2 822 2 400 2 291 2 49 2 352 2 193 2 583 2 405 2 254 4 515 2 
585 2 736 2 782 2 408 4 409 2 150 2 303 4 422 2 648 2 72 2 698 2 17 2 599 2 754 2 309 2 483 2 546 4 756 2 548 2 317 2 161 2 490 8 225 2 433 2 496 2 26 2 25 12 272 2 762 10 715 8 131 2 168 8 132 2 170 2 716 2 503 6 812 2 765 2 334 2 281 6 392 4 95 4 571 2 338 2 136 2 340 4 575 4 241 8 140 4 345 2 100 4 728 2 822 2 400 2 291 2 49 2 352 2 193 2 583 2 405 2 254 4 515 2 
585 2 575 4 241 2 140 2 782 2 599 2 408 2 170 2 400 2 765 2 548 2 291 2 317 2 281 2 303 4 225 2 422 2 95 2 
585 2 736 2 782 2 408 4 409 2 150 2 303 4 422 2 648 2 698 2 17 2 599 2 754 2 309 2 483 2 546 4 548 2 317 2 488 2 490 4 225 2 433 2 496 2 26 2 25 12 272 2 762 6 715 4 168 6 131 2 132 2 170 2 716 2 765 2 812 2 503 6 334 2 281 4 95 4 571 2 338 2 136 2 340 4 575 4 241 6 140 4 345 2 100 4 728 2 821 2 822 2 400 2 291 2 49 2 352 2 193 2 583 2 405 2 254 4 515 2 
585 2 406 2 736 2 782 2 408 4 150 2 303 4 422 2 648 2 698 2 17 2 599 2 754 2 309 2 483 2 546 4 548 2 317 2 488 2 490 4 225 2 433 2 496 2 26 2 25 12 272 2 762 6 715 4 168 6 131 2 132 2 170 2 716 2 765 2 812 2 503 6 334 2 281 6 95 4 571 2 338 2 136 2 340 4 575 4 241 4 140 4 345 2 100 4 728 2 821 2 822 2 400 2 291 2 49 2 352 2 193 2 583 2 405 2 254 4 515 2 
585 2 736 2 782 2 408 4 150 2 303 4 422 2 648 2 72 2 698 2 17 2 599 2 754 2 309 2 483 2 546 4 548 2 317 2 488 2 490 8 225 2 433 2 496 2 26 2 25 12 272 2 762 6 715 4 168 6 131 2 132 2 170 2 716 2 765 2 812 2 503 6 334 2 281 6 95 4 571 2 338 2 136 2 340 4 575 4 241 6 140 4 345 2 100 4 728 2 821 2 822 2 400 2 291 2 49 2 352 2 193 2 583 2 405 2 254 4 515 2 
585 2 406 2 736 2 782 2 408 4 150 2 303 4 422 2 648 2 72 2 698 2 17 2 599 2 754 2 309 2 483 2 546 4 548 2 317 2 488 2 490 8 225 2 433 2 496 2 26 2 25 12 272 2 762 10 715 8 131 2 168 8 132 2 170 2 716 2 765 2 812 2 503 6 334 2 281 8 95 4 571 2 338 2 136 2 340 4 575 4 241 6 140 4 345 2 100 4 728 2 821 2 822 2 400 2 291 2 49 2 352 2 193 2 583 2 405 2 254 4 515 2 
585 2 736 2 782 2 408 4 150 2 303 4 422 2 648 2 72 2 698 2 17 2 599 2 754 2 309 2 483 2 546 4 548 2 317 2 488 2 490 8 225 2 433 2 496 2 26 2 25 12 272 2 762 10 715 8 168 6 131 2 132 2 170 2 716 2 765 2 812 2 503 6 334 2 281 6 95 4 571 2 338 2 136 2 340 4 575 4 241 6 140 4 345 2 100 4 728 2 821 2 822 2 400 2 291 2 49 2 352 2 193 2 583 2 405 2 254 4 515 2 
406 4 635 6 638 2 407 1 408 4 641 2 410 2 413 10 201 6 204 2 644 6 421 2 648 2 422 2 17 2 426 6 18 2 427 2 428 2 225 2 433 2 667 2 26 2 25 46 438 6 439 2 440 4 443 4 238 6 241 4 44 6 45 2 46 1 246 6 49 2 252 2 254 8 686 2 468 2 64 2 690 7 262 2 263 1 698 2 480 6 483 2 76 2 700 2 488 2 489 2 490 2 707 6 710 1 269 8 86 2 496 2 498 6 272 4 716 2 503 24 718 2 281 8 95 4 507 6 726 1 100 6 728 2 729 6 290 4 291 2 103 2 293 4 515 2 735 4 736 2 296 2 523 2 526 2 741 2 302 2 533 2 303 4 114 2 541 2 754 2 309 4 312 2 546 4 547 2 316 2 548 2 317 2 319 6 553 4 124 2 126 2 326 8 327 6 127 2 762 2 131 4 564 2 132 4 765 2 766 2 334 2 568 6 571 2 338 2 136 2 340 6 575 4 138 2 139 2 140 4 343 6 345 2 581 2 352 4 583 2 585 2 586 2 782 2 784 2 786 1 363 2 789 1 367 2 150 2 592 4 795 2 370 2 371 2 375 12 599 2 376 2 802 6 157 2 603 4 610 2 163 2 165 7 809 2 167 2 168 12 388 6 170 2 812 2 178 2 814 2 816 1 182 2 630 2 822 2 188 1 400 2 192 2 193 2 405 2 195 2 
635 6 735 4 736 2 638 2 408 4 641 2 410 2 296 2 413 10 201 6 523 2 526 2 204 2 741 2 644 6 533 2 302 2 303 4 421 2 422 2 648 2 114 2 541 2 17 2 18 2 426 6 427 2 309 4 754 2 428 2 312 2 546 4 547 2 316 2 548 2 317 2 319 6 225 2 433 2 553 4 434 2 124 2 326 8 126 2 667 2 327 6 127 2 25 48 26 2 438 6 762 2 439 2 131 4 674 2 132 4 564 2 440 8 766 2 765 2 443 4 334 2 568 6 238 6 338 2 571 2 136 2 340 6 575 4 138 2 241 8 140 4 139 2 343 6 345 2 44 6 45 2 581 2 246 6 352 4 49 2 252 2 583 2 254 8 585 2 586 2 782 2 784 2 686 2 468 2 363 2 64 2 367 2 150 2 262 2 592 4 795 2 370 2 371 2 72 4 375 12 698 2 480 6 599 2 483 2 76 2 700 2 802 6 376 2 157 2 603 4 488 2 489 4 490 6 707 6 610 2 163 2 269 8 86 2 496 2 498 6 809 2 272 4 167 2 168 12 388 6 170 2 716 2 812 2 503 26 718 2 281 8 95 4 178 2 814 2 507 6 182 4 100 6 630 2 728 2 729 6 822 2 290 4 400 2 103 4 291 2 104 2 192 2 293 8 193 2 195 2 405 2 515 2 
635 6 735 4 736 2 638 2 408 4 641 2 410 2 296 2 413 10 201 6 523 2 526 2 204 2 741 2 644 6 533 2 302 2 303 4 421 2 422 2 648 2 114 2 541 2 17 2 18 2 426 6 427 2 309 4 754 2 428 2 312 2 546 4 547 2 316 2 548 2 317 2 319 6 225 2 433 2 553 4 434 2 124 2 326 8 126 2 667 2 327 6 127 2 25 48 26 2 438 6 762 6 439 2 131 4 674 2 132 4 564 2 440 8 766 2 765 2 443 4 334 2 568 6 238 6 338 2 571 2 136 2 340 6 575 4 138 2 241 8 140 4 139 2 343 6 345 2 44 6 45 2 581 2 246 6 49 2 352 4 252 2 583 2 254 8 585 2 586 2 782 2 784 2 686 2 468 2 363 2 64 2 367 2 150 2 262 2 592 4 795 2 370 2 371 2 72 4 375 12 698 2 480 6 599 2 483 2 76 2 700 2 802 6 376 2 157 2 603 4 488 2 489 4 490 6 707 6 610 2 163 2 269 8 86 2 496 2 498 6 809 2 272 4 167 2 715 4 168 12 388 6 170 2 716 2 812 2 503 26 718 2 281 8 95 4 178 2 814 2 507 6 182 4 100 6 630 2 728 2 729 6 822 2 290 4 400 2 103 4 291 2 104 2 192 2 293 8 193 2 195 2 405 2 515 2 
406 2 635 12 638 2 408 4 409 2 641 2 410 2 413 8 201 6 204 2 419 6 644 6 420 2 421 2 648 2 422 2 17 2 426 12 18 2 427 2 428 2 225 2 433 2 227 6 434 2 667 2 26 2 25 52 438 6 439 2 674 2 440 10 237 6 443 4 678 6 238 6 241 10 44 8 45 2 246 8 49 2 252 2 254 8 686 2 468 2 64 2 262 2 696 2 72 4 698 2 480 6 699 6 483 2 76 2 700 2 488 2 489 4 490 6 707 6 269 12 86 2 496 2 498 12 272 4 715 4 716 2 503 24 718 2 281 10 95 4 723 2 507 6 100 6 728 2 729 6 290 4 291 2 103 4 104 2 293 10 515 2 735 4 736 2 737 6 296 2 526 2 300 2 741 2 533 2 302 2 303 4 748 2 114 4 541 2 309 4 754 2 312 4 546 4 315 6 547 4 316 2 548 2 550 6 317 2 319 12 553 4 124 2 126 2 326 8 327 6 127 2 762 6 131 4 564 2 132 4 765 2 766 2 334 2 568 12 338 2 571 2 136 2 340 6 575 4 138 2 139 2 140 4 343 6 345 2 581 2 352 4 583 2 585 2 586 2 782 2 784 2 363 2 367 2 150 2 592 6 795 2 370 2 371 2 375 10 599 2 376 2 802 6 157 4 603 4 610 2 163 2 386 2 809 4 167 2 168 16 615 6 388 12 170 2 812 2 178 2 814 2 182 4 630 2 186 2 822 2 400 2 632 2 192 2 193 2 405 2 195 2 
585 2 496 2 782 2 25 4 26 2 408 4 715 4 762 4 168 4 716 2 150 2 812 2 765 2 281 6 303 2 338 2 72 2 575 2 241 6 698 2 140 4 599 2 100 2 345 2 546 2 822 2 400 2 548 2 291 2 488 2 490 6 352 2 583 2 254 2 515 2 
517 2 736 2 408 4 413 2 523 2 526 2 204 2 303 2 648 2 114 3 211 2 309 4 754 2 546 2 547 3 548 2 553 2 124 2 26 2 25 28 331 3 762 2 131 4 439 2 564 2 765 2 766 2 334 2 571 2 338 2 340 6 575 2 241 6 140 4 342 2 139 2 345 2 455 2 44 6 45 2 246 6 352 2 49 2 778 2 583 2 254 2 585 2 586 2 782 2 686 2 367 2 150 2 262 2 592 4 72 2 375 4 698 2 480 6 599 2 483 2 76 2 376 2 157 3 602 2 603 4 488 2 490 6 163 2 269 8 385 2 496 2 167 2 168 4 169 2 716 2 503 24 812 2 718 2 281 6 391 2 814 2 100 2 630 2 822 2 290 4 400 2 291 2 405 2 515 2 
822 2 355 2 515 2 
822 2 355 2 515 2 
0 2 197 2 406 4 735 2 736 2 408 4 409 4 296 2 413 2 643 2 642 2 299 2 526 2 204 2 303 2 422 2 648 2 210 4 747 2 653 2 216 2 427 4 309 4 754 2 428 2 546 2 548 2 433 2 553 6 124 2 126 2 557 2 25 24 26 2 762 6 439 2 131 4 132 2 440 4 564 2 766 2 765 2 443 2 334 2 567 4 238 2 571 2 136 2 38 2 340 6 575 2 241 12 139 2 140 4 680 2 44 2 244 2 45 2 246 2 49 2 352 4 355 2 254 4 586 2 782 4 686 2 367 2 262 2 72 4 597 2 375 4 480 6 483 2 376 2 157 2 603 4 489 4 490 6 803 2 163 2 269 2 806 2 496 2 272 4 167 2 715 4 168 16 170 2 503 16 718 2 281 12 95 4 814 2 285 2 97 4 182 4 100 4 630 2 822 6 290 4 103 4 293 4 193 2 194 2 734 2 515 4 
653 2 736 2 375 2 25 4 680 2 681 2 413 2 244 2 148 2 503 2 443 2 351 2 238 2 552 2 225 2 421 2 195 2 
197 2 406 4 735 2 736 2 408 4 409 4 296 2 643 2 299 2 526 2 204 2 303 2 422 2 648 2 210 4 653 2 216 2 17 2 427 4 309 4 754 2 428 2 546 2 548 2 433 2 553 6 554 2 124 2 126 2 557 2 25 24 26 2 762 6 439 2 131 4 132 4 440 4 564 2 677 2 766 2 765 2 334 2 567 4 238 2 571 2 136 2 38 2 340 6 575 2 241 12 139 2 140 4 680 2 44 2 244 2 45 2 246 2 49 2 352 4 355 2 254 4 586 2 782 4 686 2 367 2 262 2 72 4 597 2 375 2 480 6 483 2 376 2 157 4 603 4 489 4 490 6 803 2 163 2 269 2 806 4 496 2 272 4 167 2 715 4 168 16 170 2 503 16 718 2 281 12 721 2 95 4 814 2 97 4 182 4 819 2 100 4 630 2 822 6 290 4 730 2 103 4 293 4 193 2 194 2 734 2 515 4 
197 2 406 4 735 2 736 2 408 4 640 2 409 4 519 2 413 2 643 2 299 1 526 2 204 2 528 2 303 2 422 2 648 2 210 4 653 2 216 2 17 2 427 4 309 4 754 2 428 2 546 2 548 2 433 2 553 6 124 2 126 2 557 2 25 24 26 2 762 6 439 2 131 4 132 4 440 4 564 2 133 2 766 2 765 2 443 2 334 2 567 4 238 2 571 2 136 2 38 2 340 6 575 2 241 12 139 2 140 4 680 2 44 2 244 2 45 2 246 2 49 2 352 4 355 2 254 4 586 2 782 4 686 2 689 2 367 2 262 2 72 4 597 2 375 4 480 6 483 2 376 2 157 2 603 4 489 4 490 6 803 2 163 2 269 2 806 2 496 2 272 2 167 2 715 4 168 16 170 2 503 16 718 2 281 12 95 4 814 2 97 4 182 4 100 4 630 2 822 6 290 4 103 4 293 4 193 2 194 2 734 2 515 4 
2 2 736 2 4 2 299 1 526 2 204 2 744 2 302 2 648 2 9 2 114 2 212 2 116 2 652 2 424 2 309 4 754 2 310 2 312 2 117 2 314 2 222 2 547 2 553 2 122 2 24 2 124 2 125 2 667 2 25 24 128 2 234 2 131 4 439 2 440 2 564 2 442 2 566 2 766 2 334 2 570 2 447 2 571 2 340 6 137 2 770 2 139 2 43 2 682 2 44 6 45 2 246 6 248 2 49 2 146 2 584 2 780 2 464 2 686 2 589 2 363 2 65 2 365 2 367 2 68 2 262 2 592 4 154 2 694 2 795 2 796 2 265 2 375 2 480 5 483 2 76 2 376 2 267 2 157 2 604 2 603 4 804 2 610 2 163 2 269 8 164 2 86 2 809 2 167 2 274 2 618 2 503 18 718 2 505 2 175 2 814 1 626 2 509 4 724 2 510 2 630 1 631 2 398 2 290 4 402 2 192 2 293 2 514 2 
764 2 776 2 387 2 669 2 8 2 759 2 
652 2 401 2 776 2 725 2 360 2 362 2 115 2 
123 1 460 2 198 2 25 10 109 2 88 2 498 2 256 2 333 2 236 2 278 2 503 8 70 1 13 2 508 1 215 2 481 1 511 2 78 2 657 2 380 1 49 2 354 2 145 2 231 2 436 2 
595 4 625 2 463 2 596 2 666 2 478 4 629 2 671 2 60 5 273 2 429 2 187 2 349 2 445 2 304 2 228 2 
341 2 16 2 711 2 221 2 90 2 774 2 5 3 605 2 742 2 159 2 151 2 247 2 7 2 
55 2 325 2 341 2 16 2 711 2 25 1 221 2 90 2 774 4 5 6 605 2 503 1 742 2 159 2 151 2 247 2 250 1 7 2 
55 2 325 2 341 4 16 2 711 2 221 4 90 2 774 4 5 6 605 4 742 2 159 2 151 2 247 2 7 2 
55 8 325 6 341 8 16 2 711 2 25 1 221 8 90 2 774 4 5 10 605 8 503 1 742 2 159 2 151 2 247 2 250 1 7 2 
527 1 367 2 538 2 746 2 480 4 603 2 606 2 551 2 25 6 439 2 440 2 503 6 34 1 814 2 630 2 45 2 290 2 53 2 
480 2 25 6 439 2 440 2 299 2 45 2 603 2 367 2 290 2 606 2 503 6 538 2 746 2 793 2 53 2 
480 2 25 6 545 2 439 2 440 2 299 2 45 2 603 2 367 2 290 2 606 2 503 6 538 2 746 2 53 2 
814 2 480 4 25 6 545 2 630 2 439 2 440 2 45 2 603 2 367 2 290 2 606 2 503 6 538 2 746 2 53 2 
202 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V ERROR java.lang.NullPointerException 126 
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (69,464) (69,464) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.NullPointerException 991 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException (91,999) 895 (22,98,163,172,185,199,201,204,217,219,221,274,310,355,382,387,392,397,429,445,452,454,495,522,524,601,623,663,674,707,715,718,722,775,844,915,917,918,925,951,1012,1037,1041,1087,1093,1099,1110,1128) 472 (22,98,163,172,185,199,201,204,217,219,221,274,310,355,382,387,392,397,429,445,452,454,495,522,524,601,623,663,674,707,715,718,722,775,844,915,917,918,925,951,1012,1037,1041,1087,1093,1099,1110,1128) 302 (213,686) (213,686) (91,999) 732 8 (22,98,163,172,185,199,201,204,217,219,221,274,310,355,382,387,392,397,429,445,452,454,495,522,524,601,623,663,674,707,715,718,722,775,844,915,917,918,925,951,1012,1037,1041,1087,1093,1099,1110,1128) 1071 8 (22,98,163,172,185,199,201,204,217,219,221,274,310,355,382,387,392,397,429,445,452,454,495,522,524,601,623,663,674,707,715,718,722,775,844,915,917,918,925,951,1012,1037,1041,1087,1093,1099,1110,1128) 800 (22,98,163,172,185,199,201,204,217,219,221,274,310,355,382,387,392,397,429,445,452,454,495,522,524,601,623,663,674,707,715,718,722,775,844,915,917,918,925,951,1012,1037,1041,1087,1093,1099,1110,1128) 644 (22,98,163,172,185,199,201,204,217,219,221,274,310,355,382,387,392,397,429,445,452,454,495,522,524,601,623,663,674,707,715,718,722,775,844,915,917,918,925,951,1012,1037,1041,1087,1093,1099,1110,1128) 782 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V ERROR java.lang.NullPointerException (180,853) 729 
daikon.test.TestQuant:test_noDups()V ERROR java.lang.NullPointerException 991 716 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V ERROR java.lang.ArrayIndexOutOfBoundsException (4,7,327,594,1077) 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException 309 (673,1124) (50,448) (50,448) 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException 309 (673,1124) (50,448) (50,448) 
daikon.test.diff.DiffTester:testEmptyEmpty()V ERROR java.lang.NullPointerException 309 (673,1124) (50,448) (50,448) 
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException 309 (673,1124) (50,448) (50,448) 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException 309 (673,1124) (50,448) (50,448) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException 309 (673,1124) (50,448) (50,448) 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException 309 (673,1124) (50,448) (50,448) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException 309 (673,1124) (50,448) (50,448) 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 309 (673,1124) (50,448) (50,448) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 309 (673,1124) (50,448) (50,448) 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 309 (673,1124) (50,448) (50,448) 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 309 (673,1124) (50,448) (50,448) 
daikon.test.diff.DiffTester:testNullaryInvs()V ERROR java.lang.NullPointerException 309 (673,1124) (50,448) (50,448) 
daikon.test.diff.DiffTester:testNonModulus()V ERROR java.lang.NullPointerException 309 (673,1124) (50,448) (50,448) 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 309 (673,1124) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 309 (673,1124) (673,1124) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 309 (673,1124) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 583 939 752 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 683 (67,90,368,488,567,593,900,919,994,995) 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 683 (67,90,368,488,567,593,900,919,994,995) 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 340 762 
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 683 (67,90,368,488,567,593,900,919,994,995) 223 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 816 700 519 
daikon.test.VarInfoNameTest:testJML()V FAILED junit.framework.AssertionFailedError 15 519 
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (69,464) (69,464) 59 816 700 519 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 15 519 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.RuntimeException (56,736) (56,736) (108,710) (108,710) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:jj_3R_107()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_126()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V | CONDITION | 3675 | if (x) -> if (!x)
jtb.JavaParser:jj_3_5()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.LimitedSizeIntSet:add(I)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:jj_3_16()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_3R_68()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:jj_3_1()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3_18()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.JavaParser:jj_3R_134()Z
daikon.diff.Node:Node()V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus; | RETURN | 17563 | return null
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_100()Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | RETURN | 1469 | return null
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:present()Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:present()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.Intern:numIntArrays()I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V | ASSIGN | 58129 | = null
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.JavaParser:jj_3R_106()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:eltsEqual([II)Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_75()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_21()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_54()Z
jtb.JavaParser:jj_3R_102()Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.ProglangType:isIntegral()Z
jtb.JavaParser:jj_2_18(I)Z
daikon.Quant:memberOf(S[S)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.ProglangType:dimensions()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.ValueTuple:size()I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:eltsLteIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_108()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.Invariant:logOn()Z
daikon.VarInfoName:hashCode()I
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:jj_2_3(I)Z
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:jj_3R_136()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:arity()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 107780 | = null
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfo:relate_var()V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:jj_3R_53()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.Ppt:Ppt()V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:jj_3R_137()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_121()Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndLine()I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3_10()Z
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator; | ASSIGN | 2215 | = null
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_86()Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.MathMDE:pow(II)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3R_127()Z
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_101()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_133()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.PptSlice2:arity()I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:memberOf(J[J)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.WeakHasherMap:processQueue()V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:jj_3R_57()Z
utilMDE.FuzzyFloat:gt(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_149()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_88()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.Quant:lexGT([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.JavaParser:jj_3R_89()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:jj_2_5(I)Z
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaParser:jj_2_12(I)Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice1:arity()I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I | CONSTANT | 14018 | 108 -> 109
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:jj_3R_210()Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:ne(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:jj_3R_73()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.JavaParser:jj_3R_56()Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_26()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.diff.RootNode:RootNode()V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_164()Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.Invariant:getConfidence()D
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_13(I)Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_2_26(I)Z
utilMDE.Intern:intern([I)[I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_2_1(I)Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:slice([III)[I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.ArraysMDE:sum([D)D
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >=
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_117()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.ArraysMDE:sorted([I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseGT([I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:union([I[I)[I
utilMDE.ArraysMDE:indexOf([II)I
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_17()Z
daikon.Quant:lexGTE([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:eq(II)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:jj_3R_81()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_3_27()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3R_103()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.JavaParser:jj_3_28()Z
daikon.ProglangType:baseIsScalar()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_109()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.Invariants:Invariants()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | CONDITION | 1382 | if (x) -> if (!x)
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lte(II)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.Quant:noDups([I)Z
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:jj_3_20()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I | ASSIGN | 154150 | = null
daikon.Quant:eltwiseNotEqual([I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.ArraysMDE:min([I)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_29()Z
jtb.JavaParser:jj_3_14()Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:jj_3R_125()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:jj_3R_80()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:execute()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_3R_98()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:gcd([I)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.ArraysMDE:max([I)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:negate(I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_78()Z
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:gte(II)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_67()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_3R_87()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:jj_3R_70()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_3R_85()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:modulus([I)[I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:concat([I[I)[I
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V | STATEMENT | 588 | stmt -> ;
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:subarray([JII)[J | RETURN | 30018 | return null
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_119()Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:jj_3R_76()Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_51()Z
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:jj_3_19()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfo:new_ppt()V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_3R_180()Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_120()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | CONSTANT | 10778 | 3 -> 0
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:isReverse([I[I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern:intern([J)[J
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.MathMDE:gcd(JJ)J
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_3R_47()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.ValueTuple:isMissing(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:jj_3R_48()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_161()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3_4()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:jj_3R_96()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsLT([II)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:lt(II)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_110()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | ASSIGN | 10728 | = null
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
utilMDE.ArraysMDE:noDuplicates([I)Z | ASSIGN | 57082 | = null
jtb.JavaParser:jj_3R_105()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_2_14(I)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_25()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V | ASSIGN | 5829 | = null
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:isArray()Z
jtb.JavaParser:jj_3R_128()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_60()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParser:jj_3R_124()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_3_36()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_77()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | STATEMENT | 2966 | stmt -> ;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_104()Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:subsetOf([J[J)Z
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | OPERATOR | 3095 | - -> *
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_ntk()I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexNotEqual([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.Invariant:justified()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_169()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:lexLT([I[I)Z
utilMDE.ArraysMDE:sum([I)I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_115()Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_72()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.Quant:setEqual([I[I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3_15()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Debug:logOn()Z
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:jj_3_30()Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
498 2 820 4 1139 2 179 2 79 2 1147 2 464 2 69 2 23 2 
126 2 1145 2 541 2 867 2 1031 2 984 2 
251 2 483 2 32 6 255 2 973 4 417 2 69 2 71 6 261 6 364 6 677 4 43 2 464 2 
612 4 156 6 755 2 796 10 318 2 701 10 1016 14 702 4 978 4 804 11 624 11 853 2 769 10 409 16 862 2 297 2 69 6 113 8 751 24 180 4 564 8 349 2 683 16 900 6 464 6 567 6 423 27 425 11 151 2 570 6 
1086 6 640 4 
970 2 
889 2 499 2 1118 2 293 2 1120 2 591 2 755 2 938 2 991 2 922 2 1049 2 642 2 778 2 737 2 323 2 398 2 79 2 1046 2 183 2 630 2 652 2 571 4 
90 4 156 6 654 2 796 16 356 2 92 2 505 6 735 6 1016 32 701 6 943 6 702 2 804 16 624 16 628 6 368 8 769 22 712 4 409 32 919 4 67 4 488 4 1101 2 593 4 253 2 69 4 994 4 995 2 602 2 751 48 721 6 683 32 900 4 464 4 567 4 423 55 425 16 727 6 570 18 
889 2 468 2 1081 2 
469 10 428 2 865 2 435 2 60 2 993 2 779 2 278 2 1129 2 960 2 1131 2 902 2 124 22 164 2 
272 2 796 2 1123 2 1016 2 701 4 702 2 441 2 324 2 880 2 804 2 624 2 285 2 769 2 102 2 409 2 6 2 1039 2 751 4 683 2 567 2 423 6 425 2 570 2 
409 8 488 4 593 4 796 4 505 6 1016 8 943 6 978 2 751 12 804 4 683 8 118 2 282 2 624 4 423 16 425 4 769 4 
468 6 793 2 354 4 1081 2 1049 4 616 2 837 4 975 2 840 2 1083 2 319 2 508 2 576 2 845 2 401 2 912 4 480 2 768 2 916 4 337 2 140 2 889 8 771 62 214 2 595 4 921 4 343 10 719 2 926 14 263 4 870 4 928 2 1113 4 147 10 45 2 182 4 1005 2 268 4 652 2 571 4 
294 2 194 2 976 2 
127 12 1 3 1011 32 1013 16 3 1 275 6 733 2 437 1 444 2 1020 2 134 2 881 3 578 24 1023 2 1024 2 137 2 281 2 886 3 449 3 1033 1 288 2 587 2 744 2 5 2 1035 2 292 1 296 32 747 2 596 2 599 2 10 1 897 3 148 2 464 34 607 2 754 2 154 1 1048 1 315 12 756 1 615 2 614 2 157 2 1053 6 322 2 908 2 320 2 1058 2 911 3 30 1 31 2 33 8 338 4 36 3 635 2 772 2 777 2 173 16 344 2 41 2 647 2 784 2 179 2 181 4 790 2 930 1 1069 2 186 1 651 2 932 2 53 24 794 2 935 2 189 2 191 2 1080 2 504 2 506 2 195 2 509 8 198 2 946 4 1090 2 1091 2 366 2 202 3 660 2 63 2 64 2 1094 2 370 2 371 6 206 2 664 8 374 3 215 5 1103 1 69 32 527 2 222 2 676 16 817 3 1112 2 78 2 1114 2 823 2 1116 2 684 16 687 4 228 2 830 2 229 2 231 2 693 2 393 2 699 2 1121 2 698 6 395 2 235 4 94 2 1126 3 539 2 704 4 242 2 95 2 400 2 96 4 250 1 411 2 410 2 989 2 105 2 252 1 556 2 1142 2 416 4 419 2 561 2 259 2 1144 3 563 2 871 2 1002 1 1148 1 267 2 1004 2 726 2 1154 1 
303 2 464 2 
464 4 424 2 952 2 
1055 2 
572 64 0 2 573 6 2 16 574 4 575 4 577 392 579 18 580 4 581 2 582 4 584 4 585 4 588 2 590 106 8 102 9 2 598 98 601 4 13 2 604 2 16 2 17 44 606 4 608 2 610 4 613 2 21 4 22 12 24 92 25 20 26 6 618 6 619 20 28 4 623 4 626 4 632 2 633 4 35 4 639 2 37 30 643 2 645 2 644 178 39 4 40 16 649 98 42 4 44 20 46 2 47 2 48 2 51 2 54 2 55 2 57 4 655 20 656 2 658 2 659 2 65 2 662 2 663 4 665 4 66 4 666 2 667 2 668 2 669 78 671 98 672 2 674 4 675 2 678 2 72 12 77 4 679 2 682 2 686 2 85 2 690 2 89 2 88 178 692 2 695 98 91 2 697 18 93 2 705 16 707 104 708 2 97 110 98 8 99 2 100 44 711 4 104 2 714 2 106 2 107 2 715 4 109 2 110 4 112 2 717 2 718 4 116 2 720 2 723 2 722 4 117 4 724 2 119 2 120 2 121 4 122 4 732 4 734 78 129 2 739 2 740 26 135 4 136 2 741 2 742 2 138 2 143 2 745 4 144 96 748 2 750 2 149 2 150 8 753 30 152 2 153 4 757 2 158 204 160 2 761 6 163 4 765 4 764 14 766 6 767 2 166 4 167 2 168 2 776 4 775 4 171 2 172 10 174 2 781 2 780 4 782 4 787 250 786 116 789 250 185 12 187 2 792 4 190 2 795 2 192 10 193 2 797 2 798 4 800 4 199 24 802 2 201 4 203 2 806 2 805 2 204 32 807 4 208 8 210 2 810 4 213 2 812 2 217 4 814 4 218 2 219 4 220 12 221 4 224 6 225 12 825 40 230 2 233 2 232 2 833 6 834 2 836 4 839 8 238 2 236 2 843 2 240 2 844 4 243 4 847 4 246 2 848 2 248 4 850 4 854 6 855 20 856 2 857 2 858 2 860 4 859 2 861 20 864 4 866 2 869 2 262 8 264 2 266 4 269 60 271 50 874 2 273 4 274 116 277 4 877 2 879 2 279 2 882 4 883 20 280 2 283 20 284 2 287 98 890 4 893 98 894 2 895 34 300 2 299 10 301 12 302 104 306 4 307 2 310 10 311 2 312 2 313 4 904 44 316 4 317 2 321 44 909 2 325 2 910 2 328 2 329 20 913 4 914 64 330 2 331 98 333 8 915 2 336 4 335 2 917 4 918 4 920 4 342 2 925 4 927 4 346 2 931 4 936 4 355 4 937 2 357 4 941 2 361 2 363 12 945 30 944 2 947 2 951 4 950 4 367 2 373 10 953 16 376 4 381 4 958 2 382 4 959 2 383 8 384 98 385 4 386 4 389 4 387 4 963 2 391 2 392 8 964 96 965 2 966 2 974 2 396 2 397 4 980 2 981 2 979 4 403 2 982 2 404 2 406 50 408 2 407 4 986 2 990 2 992 2 996 14 998 2 999 2 422 4 1003 2 1007 4 1008 6 427 4 1009 24 1012 200 429 12 432 4 430 2 1014 2 436 4 438 2 439 2 1018 2 442 6 443 2 445 178 1022 2 446 4 1026 2 1028 20 1030 2 450 2 1036 2 451 2 452 10 1037 8 454 4 455 2 1040 2 1041 4 1042 14 1044 2 1045 2 461 2 463 4 467 2 470 2 471 8 1050 72 1052 2 472 10 1056 2 1057 4 475 2 1059 2 478 36 479 4 1061 2 486 2 487 2 490 2 1064 8 1065 4 1066 2 1067 2 494 8 1068 10 495 4 1070 4 1071 116 1072 2 1073 2 1075 2 1076 2 1078 2 1079 56 1082 2 510 2 1085 44 513 20 514 98 1087 4 515 4 517 4 518 44 1092 2 1093 4 520 4 1095 2 521 2 522 4 1099 2 524 12 1104 248 525 4 526 4 1110 4 1111 8 530 2 1115 2 531 2 534 2 1122 4 536 2 1125 2 1128 4 542 4 543 2 1130 4 544 2 548 2 1135 2 549 2 550 2 552 4 1137 8 553 50 1140 6 1141 64 555 2 557 14 558 2 1143 2 562 4 1146 2 1150 2 1152 32 566 2 1153 26 568 14 
653 2 239 2 1054 2 1032 1 
653 2 360 2 
889 2 653 2 706 2 180 2 481 2 84 2 749 2 
653 2 706 2 1138 2 
653 2 706 2 7 2 
512 2 239 2 898 2 
653 2 706 2 
512 2 132 2 
653 2 485 2 
512 2 239 2 763 2 
239 2 808 2 18 2 
291 2 239 2 205 2 
162 2 239 2 709 2 
239 2 27 2 961 2 
512 2 131 2 
653 2 730 2 
808 2 482 2 
291 2 560 2 
636 2 709 2 
818 2 961 2 
511 2 512 2 
115 2 961 2 
605 2 709 2 
291 2 216 2 
934 2 808 2 
512 2 239 2 763 2 133 2 
1098 2 512 2 239 2 763 2 133 2 
512 2 239 2 648 2 
512 2 239 2 81 2 
413 2 20 2 502 2 657 2 
889 2 846 2 875 2 481 2 
889 2 846 2 875 2 641 2 481 2 84 2 
729 2 180 2 
991 2 716 2 
889 2 589 2 180 2 481 2 
460 2 709 2 
961 2 546 2 
956 2 808 2 
291 2 713 2 
291 2 1119 2 961 2 
291 2 73 2 961 2 
291 2 453 2 961 2 
646 2 291 2 961 2 
128 2 237 6 481 2 985 6 889 2 114 2 458 2 565 2 
512 2 901 2 
175 2 414 2 899 2 327 2 4 2 1077 4 594 2 
239 2 211 2 
830 2 
127 8 1011 4 275 6 733 2 876 2 281 2 286 2 1035 2 292 2 142 2 296 6 146 2 596 2 10 4 464 26 607 2 315 8 615 2 1053 2 474 2 322 2 1058 4 31 2 338 2 33 2 635 2 173 6 783 2 784 2 179 2 181 2 788 2 651 2 189 2 1080 2 506 2 198 2 946 4 1089 2 1091 2 63 2 64 2 1094 2 371 4 206 2 69 26 527 2 222 2 1112 2 379 2 681 2 226 2 82 2 687 4 83 2 229 2 231 2 693 6 698 2 235 4 242 2 95 2 96 4 1132 2 1133 4 1134 2 410 2 989 2 105 2 1142 2 416 2 111 2 259 2 871 2 1002 2 1151 4 
127 8 1011 4 275 6 733 2 876 2 878 2 1021 2 137 2 281 2 286 2 1035 2 292 2 142 2 296 6 596 2 464 26 607 2 315 8 157 2 615 2 1053 2 474 2 322 2 1058 4 31 2 338 2 33 2 635 2 173 6 783 2 784 2 179 2 181 2 788 2 651 2 189 2 1080 2 506 2 198 2 946 4 1091 2 63 2 64 2 1094 2 371 6 206 2 69 26 527 2 222 2 1112 2 379 2 681 2 823 2 226 2 82 2 687 4 83 2 229 2 231 2 693 6 698 2 235 4 242 2 95 2 96 4 1132 2 1133 4 410 2 989 2 105 2 1142 2 416 2 111 2 259 2 260 2 871 2 1002 2 1151 4 
1029 2 
209 2 688 2 
791 2 372 2 390 2 831 2 988 2 155 2 58 2 1124 2 537 2 617 2 1063 2 760 2 841 2 305 2 622 2 309 2 448 2 50 2 852 2 631 2 
390 2 791 2 831 2 352 2 155 2 58 2 1124 2 537 2 617 2 61 2 760 2 841 2 244 4 622 2 852 2 448 2 631 2 372 2 988 2 1063 2 305 2 309 2 50 2 
760 2 58 2 309 2 1124 2 537 2 852 2 50 2 448 2 631 2 
791 2 372 2 390 2 831 2 988 2 155 2 58 2 1124 2 537 2 617 2 1063 2 760 2 841 2 305 2 622 2 309 2 448 2 50 2 852 2 631 2 
791 2 372 2 390 2 831 2 988 2 155 2 58 2 1124 2 537 2 617 2 1063 2 760 2 841 2 305 2 622 2 309 2 448 2 50 2 852 2 631 2 
791 2 372 2 390 2 831 2 988 2 155 2 58 2 1124 2 537 2 617 2 1063 2 760 2 841 2 305 2 622 2 309 2 448 2 50 2 852 2 631 2 
791 2 372 2 390 2 831 2 988 2 155 2 58 2 1124 2 537 2 617 2 1063 2 760 2 841 2 305 2 622 2 309 2 448 2 50 2 852 2 631 2 
791 2 372 2 390 2 831 2 988 2 155 2 58 2 1124 2 537 2 617 2 1063 2 760 2 841 2 305 2 622 2 309 2 448 2 50 2 852 2 631 2 
791 2 372 2 390 2 831 2 988 2 155 2 58 2 1124 2 537 2 617 2 760 2 841 2 622 2 533 2 309 2 448 2 50 2 852 2 631 2 
791 2 372 2 390 2 831 2 988 2 155 2 58 2 1124 2 537 2 617 2 760 2 841 2 622 2 533 2 309 2 448 2 50 2 852 2 631 2 
791 2 372 2 390 2 831 2 988 2 155 2 58 2 1124 2 537 2 617 2 760 2 841 2 622 2 533 2 309 2 448 2 50 2 852 2 631 2 
791 2 372 2 390 2 831 2 988 2 155 2 58 2 1124 2 537 2 617 2 760 2 841 2 622 2 533 2 309 2 448 2 50 2 852 2 631 2 
791 2 372 2 390 2 831 2 988 2 155 2 58 2 1124 2 537 2 617 2 760 2 841 2 622 2 309 2 448 2 50 2 852 2 631 2 
1011 3 275 6 137 2 448 2 289 2 1035 2 296 8 596 2 305 2 14 2 309 2 464 24 754 2 155 2 614 2 157 2 1053 3 617 2 473 2 474 2 322 2 760 2 622 2 29 3 631 2 173 6 784 2 179 2 50 2 651 2 791 2 189 2 58 2 1080 2 946 4 198 2 1091 2 200 2 63 2 64 2 371 6 206 2 372 2 69 24 527 2 955 2 1112 2 379 2 226 2 687 4 828 2 830 2 390 2 229 2 831 2 693 6 234 2 698 3 235 4 1124 2 537 2 838 2 94 2 841 2 242 2 96 4 852 2 1133 4 410 2 988 2 989 2 105 2 1142 4 259 2 871 2 
731 2 988 2 447 2 
731 2 988 2 447 2 
189 2 1011 2 58 2 275 6 503 2 1080 2 359 2 1084 2 946 4 198 2 1091 2 137 2 64 2 206 2 371 6 1035 2 296 2 670 2 596 2 69 14 527 2 1112 2 379 2 309 2 226 2 464 14 687 4 829 2 229 2 693 2 235 4 157 2 1124 2 537 2 474 2 322 2 760 2 242 2 96 4 410 2 988 2 989 2 105 2 1142 2 259 2 173 2 997 2 179 2 784 2 871 2 1006 2 651 2 
770 2 234 2 554 2 415 2 1142 2 298 2 69 2 1105 2 457 2 977 2 161 2 242 2 399 2 464 4 688 2 547 2 887 2 
189 2 1011 4 58 2 275 6 503 2 1080 2 359 4 1084 2 946 4 198 2 1091 2 137 2 64 2 206 2 371 6 1035 2 296 2 670 2 596 2 69 14 673 2 527 2 1112 2 379 2 309 2 226 2 464 14 687 4 829 2 229 2 693 2 235 4 157 2 1124 2 537 2 474 2 322 2 760 2 242 2 96 4 410 2 988 2 989 2 105 2 773 2 1142 2 259 2 173 2 997 2 179 2 784 2 871 2 1006 2 651 2 
189 2 1011 2 58 2 275 6 503 2 1080 2 359 2 1084 2 946 4 198 2 1091 2 137 2 64 2 206 2 371 6 1035 2 296 2 670 2 596 2 69 14 527 2 1112 2 379 2 309 2 226 2 464 14 687 4 829 2 229 2 693 2 235 4 157 2 1124 2 537 2 474 2 322 2 760 2 242 2 96 4 410 2 988 2 989 2 105 2 1142 2 259 2 173 2 997 2 179 2 784 2 871 2 1006 2 651 2 
728 2 933 2 500 2 189 2 1011 2 276 2 434 2 275 6 1080 2 939 2 198 2 946 4 1091 2 803 2 137 2 583 2 63 2 64 2 661 4 1096 2 139 2 371 6 206 2 743 2 1035 2 296 8 592 2 596 2 69 18 527 2 815 2 1112 2 819 2 529 2 752 2 226 2 464 24 687 4 689 2 229 2 693 6 696 2 698 2 906 2 235 4 157 2 1053 2 474 2 322 2 242 2 96 4 402 2 1133 4 101 2 410 2 989 2 105 2 1142 2 638 2 259 2 173 6 179 2 784 2 871 2 929 2 651 2 
691 2 693 2 1074 2 1011 3 698 3 1053 3 159 2 1127 4 241 2 948 2 63 2 983 2 1133 2 586 2 987 3 296 2 1100 2 69 2 1106 2 173 2 954 1 304 2 681 6 725 2 464 2 
691 2 693 2 1074 2 1011 2 698 2 1053 2 159 2 1127 4 241 2 948 2 63 2 983 2 1133 2 586 2 987 2 296 2 1100 2 69 2 1106 2 173 2 304 2 681 6 725 2 464 2 
691 2 693 2 1074 2 1011 2 698 2 1053 2 159 2 1127 4 241 2 948 2 63 2 983 2 1133 2 586 2 987 2 296 2 1100 2 69 2 1106 2 173 2 304 2 681 6 725 2 464 2 
87 2 156 4 1011 3 1013 2 835 2 796 2 535 2 907 3 1053 3 1016 2 62 2 804 2 63 2 624 2 586 2 551 3 165 2 409 2 339 2 296 2 489 2 341 3 69 2 676 2 751 4 462 2 683 2 900 2 464 4 423 6 425 2 
87 2 156 4 1011 2 1013 2 835 2 796 2 535 2 907 2 1053 2 1016 2 62 2 804 2 63 2 624 2 769 2 586 2 551 2 165 2 409 2 339 2 296 2 489 2 341 2 69 2 676 2 602 2 751 4 462 2 683 2 900 2 464 4 423 4 425 2 570 2 
87 2 156 4 1011 2 1013 2 835 2 796 2 535 2 907 2 1053 2 1016 2 62 2 804 2 63 2 624 2 769 2 586 2 551 2 165 2 409 2 339 2 296 2 489 2 341 2 69 2 676 2 602 2 751 4 462 2 683 2 900 2 464 4 423 4 425 2 570 2 
87 2 156 2 1011 2 1013 2 835 2 535 2 907 2 1053 2 1016 2 63 2 769 2 586 2 551 2 165 2 409 2 339 2 296 2 341 2 69 2 676 2 751 2 462 2 683 2 900 2 464 4 423 2 
87 2 156 2 1011 2 1013 2 835 2 535 2 907 2 1053 2 1016 2 63 2 769 2 586 2 551 2 165 2 409 2 339 2 296 2 341 2 69 2 676 2 751 2 462 2 683 2 900 2 464 4 423 2 
362 2 903 2 611 2 957 2 597 2 813 2 
611 2 326 2 477 2 774 2 83 2 196 2 207 2 
426 2 466 1 212 2 188 2 340 2 637 1 559 2 1038 2 1051 2 69 8 924 2 319 1 456 2 762 2 421 2 76 2 45 1 824 1 64 2 464 10 86 2 
125 2 409 4 156 2 967 2 796 2 593 2 1016 4 943 4 223 2 751 6 804 2 683 4 900 2 624 2 569 2 423 7 425 2 769 2 
872 2 1047 2 412 2 103 2 353 2 523 6 891 2 69 1 440 2 538 2 1019 2 176 2 75 1 884 2 464 1 405 2 184 2 629 4 
872 2 1047 2 412 2 103 2 353 2 523 6 891 4 440 2 538 4 1019 2 176 2 884 2 184 2 405 4 629 4 
872 8 1047 2 412 2 103 2 353 2 523 10 891 8 69 1 440 6 538 8 1019 2 176 2 75 1 884 2 464 1 184 2 405 8 629 4 
1047 2 412 2 103 2 353 2 523 2 891 2 538 2 1019 2 176 2 884 2 184 2 405 2 629 2 
873 1 431 2 1017 2 738 2 137 4 888 2 141 2 746 2 11 2 1043 2 308 2 464 38 19 2 465 2 315 4 157 4 759 2 1060 1 620 2 625 2 332 4 627 14 334 5 484 2 634 2 169 2 1062 2 170 2 923 2 491 2 38 4 345 2 492 2 347 2 650 2 49 1 350 4 496 2 52 4 651 6 497 2 351 2 1080 4 358 2 799 1 942 2 197 2 1088 2 801 2 516 2 949 4 519 2 371 32 375 4 68 4 811 2 377 2 69 34 378 2 816 2 680 2 380 2 822 2 532 2 685 4 827 4 962 10 227 4 388 4 229 6 832 2 694 2 969 2 394 2 972 2 235 18 700 2 703 2 96 16 247 2 851 2 545 2 1136 2 863 2 257 2 254 2 420 2 123 2 
270 2 351 2 1010 4 501 6 433 2 1015 2 1080 2 940 2 507 2 130 2 1017 4 365 2 1025 2 137 2 1027 2 885 2 519 2 369 2 1097 2 371 44 888 2 809 2 295 2 145 2 68 4 811 2 1102 2 377 2 69 44 70 2 600 2 1107 2 1109 2 1108 2 10 2 816 2 74 2 680 2 528 4 603 2 821 2 15 2 464 46 685 4 826 2 827 4 227 6 388 2 609 4 1117 2 229 2 969 2 968 4 971 2 905 2 314 2 315 38 235 20 157 2 700 2 758 2 759 2 540 2 842 2 476 2 245 2 96 20 620 2 849 2 621 2 545 2 332 2 334 2 627 6 484 2 34 2 1062 2 254 2 257 2 256 2 258 2 418 2 170 2 868 2 177 2 347 2 178 2 1000 2 1001 2 1149 2 651 2 497 2 
351 2 229 2 59 2 315 4 235 4 1080 2 700 2 157 4 96 4 137 4 545 2 627 2 519 2 371 10 888 2 862 2 1062 2 68 2 892 2 69 14 868 2 816 2 896 2 347 2 685 2 464 14 827 2 651 2 
351 2 873 6 433 2 1080 2 1017 2 197 2 738 2 137 10 519 2 371 38 888 2 1034 2 290 2 375 2 68 6 811 2 377 4 69 26 10 2 816 2 12 2 459 4 680 4 308 10 15 2 464 28 685 6 827 6 227 6 962 10 388 2 229 2 694 2 969 2 315 14 235 14 157 10 700 2 759 4 1060 2 96 14 620 2 851 4 849 2 249 2 545 2 332 2 627 8 334 2 484 2 1062 2 257 4 254 4 170 4 868 2 345 2 492 2 347 2 348 2 265 2 49 2 651 2 
785 2 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 
56 1 493 1 80 1 108 1 736 1 710 1 

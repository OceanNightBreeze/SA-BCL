#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException 128 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 831 89 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (102,195) (102,195) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 488 784 476 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 488 784 476 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR utilMDE.Assert$AssertionException (314,337) (450,830) 165 328 135 274 21 832 503 (245,563) 318 (209,709) (245,563) 47 (209,709) 469 125 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR utilMDE.Assert$AssertionException (314,337) (450,830) 165 328 135 274 21 832 503 (245,563) 318 (209,709) (245,563) 47 (209,709) 469 125 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR utilMDE.Assert$AssertionException (314,337) (450,830) 165 328 135 274 21 832 503 (245,563) 318 (209,709) (245,563) 47 (209,709) 469 125 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 721 (388,543) (23,265) (23,265) 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (314,337) 486 172 197 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 186 401 256 
daikon.test.VarInfoNameTest:testJML()V FAILED junit.framework.AssertionFailedError 119 256 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 186 401 256 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 119 256 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ValueTuple:size()I
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.PptSlice1:arity()I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Debug:logOn()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_162()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | ASSIGN | 53476 | = null
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | STATEMENT | 14158 | stmt -> ;
jtb.JavaCharStream:FillBuff()V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 184000 | = null
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName:hashCode()I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.InvMap:InvMap()V
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V | CONDITION | 2824 | if (x) -> if (!x)
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.Node:Node()V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | CONDITION | 17506 | if (x) -> if (!x)
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | ASSIGN | 60402 | = null
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:slice([III)[I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:justified()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_55()Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.Intern:intern([J)[J
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.PptSlice0:arity()I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 43224 | 74 -> 75
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_3_1()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quant:memberOf(S[S)Z
daikon.Quant:eltsLtIndex([I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.ProglangType:isPseudoArray()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:gt(II)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.ModBitTracker:num_vars()I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_53()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.ProglangType:dimensions()I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.ArraysMDE:concat([I[I)[I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:setEqual([I[I)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfo:new_ppt()V
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltsLTE([II)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.ArraysMDE:sum([D)D
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaCharStream:getBeginLine()I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | CONSTANT | 11084 | 108 -> 1
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.Quant:eltwiseEqual([I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.ProglangType:isIntegral()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:eltsNotEqual([II)Z
daikon.ValueTuple:isMissing(I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:getEndLine()I
daikon.Quant:memberOf(F[D)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_161()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.PptSlice1:num_samples()I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:lexGT([I[I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I | ASSIGN | 71159 | = null
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 3923 | = null
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.ModBitTracker:split(I)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([B[I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:memberOf(D[F)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.ParseException:getMessage()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.MathMDE:sign(I)I
daikon.Quant:memberOf(I[I)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:jj_3R_50()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14799 | = null
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z | ASSIGN | 8607 | = null
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:lexLT([I[I)Z
daikon.Quant:setDiff([I[I)[I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:lte(II)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internSubsequence([III)[I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:eq(II)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.Invariants:Invariants()V
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:noDups([I)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.ValueTuple:isMissingFlow(I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoAux:hashCode()I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_134()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(J[J)Z
daikon.Ppt:Ppt()V
utilMDE.Intern:numIntArrays()I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:sameLength([I[I)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | STATEMENT | 24560 | stmt -> ;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:jj_3_16()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:eltsEqual([II)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:logOn()Z
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:lt(II)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:ne(II)Z
daikon.Quant:gte(II)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.Intern:intern([I)[I
utilMDE.WeakHasherMap:size()I
utilMDE.ArraysMDE:sum([[I)I
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:jj_3R_47()Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_1(I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:union([I[I)[I
daikon.Quant:eq(DD)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ModBitTracker:num_samples()I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.ProglangType:isScalar()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_54()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_85()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[D)D
daikon.PptSlice2:arity()I
daikon.Quant:subsetOf([F[F)Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.MathMDE:pow_fast(II)I | CONDITION | 3350 | if (x) -> if (!x)
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([F[D)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:min([I)I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3R_51()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:isArray()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D | CONSTANT | 6853 | 1 -> -1
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.diff.RootNode:RootNode()V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
337 2 143 2 516 2 164 2 126 2 384 2 334 2 314 2 519 4 
579 2 598 2 261 2 94 2 557 6 413 6 32 2 155 2 757 2 555 2 787 6 
337 2 607 2 828 6 768 6 314 2 63 4 771 2 253 6 319 2 27 6 399 2 293 2 13 4 
337 6 179 4 396 8 314 6 224 8 6 16 698 10 130 29 181 4 207 16 638 2 158 16 479 8 185 6 794 26 292 10 551 2 643 6 677 10 241 4 326 10 297 2 298 12 490 2 276 8 515 2 459 4 746 2 688 2 693 10 
128 2 
712 2 
57 2 200 2 61 2 422 2 522 2 314 2 569 2 724 2 113 2 323 2 431 2 17 2 736 2 539 2 26 4 334 2 809 2 175 2 337 2 630 2 587 2 697 2 446 2 638 2 702 2 40 4 504 2 506 2 762 2 507 2 49 2 645 2 600 2 649 2 409 2 556 2 103 2 305 2 104 4 775 2 839 2 418 2 
337 4 810 4 566 6 396 18 5 6 314 4 698 16 6 32 225 4 130 54 669 6 207 32 158 32 479 6 185 4 794 48 429 4 292 16 551 2 643 4 677 16 44 4 241 2 326 6 298 22 833 8 249 6 739 2 251 4 745 2 835 2 558 2 306 6 25 6 28 4 81 4 692 2 693 16 442 2 
508 2 200 2 465 2 
57 2 452 2 117 22 339 2 272 2 342 2 455 2 684 2 192 2 727 10 366 2 482 2 91 2 351 2 
341 2 396 2 698 2 591 2 6 2 130 6 207 2 158 2 794 4 821 2 615 2 292 2 643 2 644 2 677 2 241 2 326 4 298 2 167 2 100 2 304 2 219 2 693 2 
810 4 677 4 566 6 298 4 698 4 129 2 6 8 225 4 130 16 181 2 207 8 158 8 25 6 794 12 292 4 530 2 693 4 
447 2 361 2 262 2 735 2 346 2 
658 2 831 2 394 2 622 2 712 2 7 2 36 2 89 2 732 2 776 2 441 2 
107 4 605 2 108 2 718 1 314 30 315 2 723 2 316 2 525 2 725 2 427 2 12 2 324 2 210 3 617 1 211 2 327 3 538 4 741 2 742 1 439 2 218 2 750 2 440 1 626 2 627 2 337 32 444 4 756 4 133 3 39 2 41 1 234 2 352 14 453 6 240 1 765 2 769 3 648 2 457 1 554 2 651 2 650 1 772 14 143 2 358 2 655 2 147 2 148 2 150 2 151 2 255 2 258 3 780 2 372 14 565 2 660 3 662 2 374 2 786 2 789 2 65 2 570 1 475 1 476 2 477 2 478 1 574 2 159 2 481 2 160 1 483 2 162 2 270 21 381 2 382 2 799 2 679 4 73 2 580 1 802 2 582 2 584 1 805 2 171 2 586 2 811 21 588 1 282 14 84 28 813 6 590 6 286 3 501 3 502 5 700 2 87 2 397 3 184 3 290 2 291 2 400 2 294 27 402 2 405 2 95 1 187 2 834 2 101 2 193 6 837 2 836 2 715 2 716 2 309 2 
814 2 
337 4 830 2 450 2 
285 2 
257 2 58 6 310 14 370 44 371 2 260 2 720 2 312 4 110 44 203 2 111 4 204 18 263 2 468 8 471 2 377 14 10 18 68 2 67 2 206 2 69 2 572 6 614 14 480 32 267 14 616 4 269 8 70 2 531 14 798 2 678 2 163 2 485 2 435 4 537 10 581 2 487 2 620 2 214 10 540 2 76 4 386 2 494 2 279 2 748 2 80 2 689 2 751 12 336 10 391 2 283 10 694 2 178 2 445 2 816 2 287 44 227 2 37 2 701 4 88 12 822 2 703 2 90 2 505 2 704 2 763 10 92 2 45 14 825 14 826 2 354 8 50 14 708 2 647 2 766 6 767 2 407 2 99 6 300 2 144 8 359 2 603 4 191 2 146 2 360 2 656 2 254 4 604 2 461 10 106 8 559 2 520 2 199 2 838 14 717 14 840 14 
517 2 783 2 675 1 594 2 
517 2 54 2 
200 2 448 2 517 2 428 2 179 2 380 2 706 2 
448 2 277 2 517 2 
458 2 448 2 517 2 
631 2 680 2 594 2 
448 2 517 2 
631 2 610 2 
356 2 517 2 
631 2 749 2 594 2 
632 2 289 2 594 2 
226 2 46 2 594 2 
714 2 512 2 594 2 
623 2 173 2 594 2 
631 2 350 2 
517 2 608 2 
2 2 632 2 
226 2 635 2 
820 2 512 2 
623 2 156 2 
631 2 619 2 
623 2 613 2 
512 2 668 2 
226 2 403 2 
632 2 213 2 
631 2 552 2 749 2 594 2 
631 2 552 2 749 2 594 2 524 2 
631 2 513 2 594 2 
631 2 755 2 594 2 
659 2 500 2 729 2 389 2 
200 2 349 2 268 2 706 2 
200 2 673 2 428 2 349 2 268 2 706 2 
200 2 448 2 492 2 517 2 179 2 706 2 
547 2 446 2 
200 2 179 2 142 2 706 2 
671 2 512 2 
623 2 229 2 
632 2 19 2 
226 2 302 2 
623 2 226 2 491 2 
623 2 226 2 365 2 
226 2 623 2 395 2 
226 2 623 2 59 2 
200 2 420 2 102 6 790 2 195 2 706 2 
631 2 535 2 
368 2 117 6 824 2 31 2 510 2 484 2 436 2 589 2 646 4 511 2 246 2 212 2 738 2 378 2 726 2 674 4 78 2 443 2 
275 2 594 2 
159 2 
780 2 107 4 108 2 784 2 314 14 786 2 316 2 427 2 476 2 477 2 321 2 324 2 799 2 679 4 580 2 538 4 488 2 802 2 740 2 750 2 626 2 627 2 337 14 84 6 696 2 813 4 33 2 444 4 590 6 700 6 39 2 290 2 352 6 242 4 187 2 648 2 554 2 651 2 143 2 101 2 716 2 309 2 
780 2 107 4 108 2 565 1 784 2 314 14 786 2 316 2 427 2 476 2 477 2 321 2 324 2 799 2 679 4 580 2 538 4 488 2 802 2 740 2 750 2 626 2 627 2 337 14 84 6 696 2 813 5 33 2 444 4 590 6 700 6 39 2 290 2 352 6 765 1 242 4 187 2 648 2 554 2 651 2 143 2 101 2 716 2 309 2 
1 2 
800 2 345 2 
564 2 108 2 311 2 109 2 261 4 721 2 314 6 664 2 786 2 787 6 265 2 469 2 611 2 612 10 379 2 728 2 573 2 114 2 797 4 118 2 209 2 682 2 538 2 437 2 621 2 687 8 124 4 23 2 387 2 278 2 388 2 125 2 750 2 335 2 626 2 585 2 337 12 32 2 444 2 284 8 590 4 757 4 38 4 230 2 548 2 47 2 827 2 709 2 829 4 187 2 245 2 554 2 555 2 299 4 773 2 101 2 557 6 413 6 105 4 308 2 
564 2 108 2 311 2 109 2 261 4 314 6 721 2 664 2 786 2 265 2 787 6 469 2 612 10 379 2 728 2 573 2 114 2 797 4 118 2 209 2 682 2 538 2 437 2 621 2 687 8 124 4 23 2 331 2 387 2 278 2 388 2 125 2 750 2 626 2 585 2 337 12 32 2 444 2 284 8 590 4 757 4 38 4 230 2 233 4 548 2 47 2 827 2 598 2 709 2 829 4 187 2 245 2 554 2 555 2 299 4 773 2 101 2 557 8 413 8 774 2 105 4 308 2 
585 2 797 2 209 2 311 2 261 2 109 2 829 4 757 2 265 2 787 2 469 2 773 2 124 4 23 2 557 2 728 2 388 2 125 2 
564 2 108 2 311 2 109 2 261 4 721 2 314 6 664 2 786 2 787 4 265 2 469 2 611 2 612 6 379 2 728 2 573 2 114 2 797 4 118 2 209 2 682 2 538 2 437 2 621 2 687 4 124 4 23 2 387 2 278 2 388 2 125 2 750 2 335 2 626 2 585 2 337 12 32 2 444 2 284 4 590 4 757 4 38 4 230 2 548 2 47 2 827 2 598 2 709 2 829 4 187 2 245 2 554 2 299 4 773 2 101 2 557 6 413 6 105 4 308 2 
564 2 108 2 311 2 109 2 261 4 721 2 314 6 664 2 786 2 787 6 265 2 469 2 611 2 612 6 379 2 728 2 573 2 114 2 797 4 118 2 209 2 579 2 682 2 538 2 437 2 621 2 687 4 124 4 23 2 387 2 278 2 388 2 125 2 750 2 335 2 626 2 585 2 337 12 32 2 444 2 284 4 590 4 757 4 38 4 230 2 548 2 47 2 827 2 709 2 829 4 187 2 245 2 554 2 299 4 773 2 101 2 557 4 413 6 105 4 308 2 
564 2 108 2 311 2 109 2 261 4 721 2 314 6 664 2 786 2 787 6 265 2 469 2 611 2 612 6 379 2 728 2 573 2 114 2 797 4 118 2 209 2 682 2 538 2 437 2 621 2 687 4 124 4 23 2 387 2 278 2 388 2 125 2 750 2 335 2 626 2 585 2 337 12 32 2 444 2 284 8 590 4 757 4 38 4 230 2 548 2 47 2 827 2 709 2 829 4 187 2 245 2 554 2 555 2 299 4 773 2 101 2 557 6 413 6 105 4 308 2 
564 2 108 2 311 2 109 2 261 4 721 2 314 6 664 2 786 2 787 8 265 2 469 2 611 2 612 10 379 2 728 2 573 2 114 2 797 4 118 2 209 2 579 2 682 2 538 2 437 2 621 2 687 8 124 4 23 2 387 2 278 2 388 2 125 2 750 2 335 2 626 2 585 2 337 12 32 2 444 2 284 8 590 4 757 4 38 4 230 2 548 2 47 2 827 2 709 2 829 4 187 2 245 2 554 2 555 2 299 4 773 2 101 2 557 6 413 8 105 4 308 2 
564 2 108 2 311 2 109 2 261 4 721 2 314 6 664 2 786 2 787 6 265 2 469 2 611 2 612 10 379 2 728 2 573 2 114 2 797 4 118 2 209 2 682 2 538 2 437 2 621 2 687 8 124 4 23 2 387 2 278 2 388 2 125 2 750 2 335 2 626 2 585 2 337 12 32 2 444 2 284 8 590 4 757 4 38 4 230 2 548 2 47 2 827 2 709 2 829 4 187 2 245 2 554 2 555 2 299 4 773 2 101 2 557 6 413 6 105 4 308 2 
107 4 108 2 311 2 109 2 721 2 314 20 316 2 318 2 205 2 427 2 728 2 528 2 114 2 324 2 118 2 209 2 618 2 538 4 437 2 328 2 621 2 21 2 740 2 215 2 124 4 23 2 125 2 335 2 750 2 626 2 753 2 627 2 337 32 340 2 32 4 33 2 444 4 757 4 135 2 38 6 39 4 450 2 230 2 548 2 352 6 453 2 47 2 242 4 765 2 454 2 245 2 648 2 554 2 651 2 143 2 773 2 654 2 655 2 557 4 152 2 561 2 779 2 462 2 780 2 563 2 564 2 261 4 565 2 664 2 786 2 265 2 787 8 469 2 66 2 476 2 477 2 793 2 575 2 161 2 162 4 797 4 579 4 799 2 679 4 165 2 682 2 166 2 802 2 274 2 686 2 385 4 387 2 493 4 278 2 171 2 388 2 496 2 585 2 393 2 84 8 696 2 813 6 814 2 284 2 590 6 285 2 700 6 87 2 503 2 290 2 294 2 404 2 296 2 827 2 709 2 829 4 187 2 97 2 832 2 299 4 101 2 193 2 413 12 307 2 105 8 308 2 716 2 309 2 
107 4 108 2 311 2 109 2 721 2 314 20 316 2 318 2 205 2 427 2 728 2 528 2 114 2 324 2 118 2 209 2 618 2 538 4 437 2 328 2 621 2 21 2 740 2 215 2 124 4 23 2 125 2 335 2 750 2 626 2 753 2 627 2 337 32 340 2 32 4 33 2 444 4 757 4 135 2 38 6 39 4 450 2 230 2 548 2 352 6 453 2 47 2 242 4 765 2 454 2 245 2 648 2 554 2 555 4 651 2 143 2 773 2 654 2 655 4 557 8 152 2 561 2 779 2 462 2 780 2 563 2 564 2 261 4 565 2 664 2 786 2 265 2 787 8 469 2 66 2 476 2 477 2 793 2 575 2 161 2 162 6 797 4 799 2 679 4 165 2 682 2 166 2 802 2 274 2 686 2 385 4 387 2 493 4 278 2 171 4 388 2 496 2 585 2 393 2 84 8 696 2 813 6 814 2 284 6 590 6 285 2 700 6 87 4 503 2 290 2 294 2 404 2 296 2 827 2 709 2 829 4 187 2 97 2 832 2 299 4 101 2 193 2 413 12 307 2 105 8 308 2 716 2 309 2 
107 4 108 2 311 2 109 2 721 2 314 20 316 2 318 2 205 2 427 2 612 4 728 2 528 2 114 2 324 2 118 2 209 2 618 2 538 4 437 2 328 2 621 2 21 2 740 2 215 2 124 4 23 2 125 2 335 2 750 2 626 2 753 2 627 2 337 32 340 2 32 4 33 2 444 4 757 4 135 2 38 6 39 4 450 2 230 2 548 2 352 6 453 2 47 2 242 4 765 2 454 2 245 2 648 2 554 2 555 4 651 2 143 2 773 2 654 2 655 4 557 8 152 2 561 2 779 2 462 2 780 2 563 2 564 2 261 4 565 2 664 2 786 2 265 2 787 8 469 2 66 2 476 2 477 2 793 2 575 2 161 2 162 6 797 4 799 2 679 4 165 2 682 2 166 2 802 2 274 2 686 2 687 4 385 4 387 2 493 4 278 2 171 4 388 2 496 2 585 2 393 2 84 8 696 2 813 6 814 2 284 6 590 6 285 2 700 6 87 4 503 2 290 2 294 2 404 2 296 2 827 2 709 2 829 4 187 2 97 2 832 2 299 4 101 2 193 2 413 12 307 2 105 8 308 2 716 2 309 2 
337 4 585 2 564 2 261 2 109 2 32 2 284 6 721 2 664 2 757 2 265 2 787 4 87 2 612 4 230 2 728 2 114 2 548 2 162 2 118 2 829 2 682 2 437 2 621 2 299 2 555 2 687 4 773 2 124 2 23 2 655 2 557 4 413 4 278 2 171 2 105 2 388 2 335 2 152 2 
337 4 585 2 564 2 109 2 261 4 32 2 284 6 721 2 664 2 757 4 265 2 787 6 38 2 612 4 230 2 728 2 114 2 548 2 118 2 829 2 682 2 437 2 621 2 299 2 555 2 687 4 773 2 124 2 23 2 557 6 413 4 278 2 105 2 388 2 335 2 
107 4 605 2 108 2 109 2 721 2 314 24 316 2 427 2 612 2 728 2 114 2 324 2 118 2 618 2 538 4 437 2 621 2 740 2 124 2 743 2 23 2 335 2 750 2 626 2 627 2 337 28 32 2 444 4 33 2 634 2 757 4 38 2 39 4 230 2 758 2 42 3 548 2 352 6 453 3 765 2 242 4 648 2 554 2 555 2 651 2 143 2 773 2 557 6 255 2 780 2 462 2 564 2 261 4 565 2 664 2 786 2 787 6 265 2 266 2 476 2 477 2 159 2 799 2 679 4 682 2 273 2 802 2 278 2 388 2 585 2 84 8 696 2 813 6 590 6 284 6 700 6 290 2 294 3 829 2 187 2 299 2 101 2 193 3 413 4 836 2 105 2 308 2 716 2 309 2 
278 2 149 2 437 2 
278 2 149 2 437 2 
107 4 108 2 423 2 109 4 314 16 721 2 722 4 316 2 318 2 427 2 612 6 528 2 731 2 324 2 15 2 209 2 618 2 538 4 437 4 21 2 22 2 740 2 215 4 124 2 750 2 626 2 627 2 337 24 544 2 221 2 32 4 444 4 33 6 34 2 757 4 38 4 39 4 230 2 235 4 237 2 352 2 47 2 764 2 765 2 648 2 554 2 651 2 555 4 143 2 655 4 557 12 149 2 780 2 154 2 261 4 565 2 786 2 787 12 469 2 379 2 792 2 477 2 676 4 162 4 797 4 579 4 799 2 679 4 801 2 802 2 686 2 687 4 387 4 493 2 278 6 171 4 388 2 585 2 84 2 813 6 696 2 590 6 284 6 700 2 87 4 290 2 398 2 294 2 827 2 707 2 598 4 709 2 829 2 187 2 189 2 190 2 299 2 101 2 303 2 713 2 413 16 105 4 716 2 309 2 
629 2 337 4 154 2 325 2 618 2 311 2 800 2 187 2 189 2 34 2 314 2 665 2 317 2 21 2 470 2 39 2 731 2 
107 4 108 2 423 2 109 4 314 16 721 2 722 4 316 2 318 2 427 2 612 6 528 2 731 2 324 2 209 2 538 4 437 4 21 2 22 2 740 2 215 4 124 2 543 2 750 2 626 2 627 2 337 24 544 2 221 2 32 4 444 4 33 6 34 2 757 4 38 4 39 2 230 2 235 4 352 2 47 2 764 2 765 2 648 2 554 2 651 2 555 4 143 2 655 4 557 12 149 2 780 2 62 2 261 4 565 2 786 2 666 2 787 12 469 2 379 2 473 2 792 2 573 2 477 2 676 4 162 4 797 4 579 4 799 2 679 4 802 2 686 2 687 4 387 4 493 2 278 6 171 4 388 2 585 2 84 2 813 6 696 2 590 6 284 6 700 2 87 4 290 2 398 4 294 4 509 2 827 4 707 2 598 4 709 2 829 2 187 2 189 2 190 2 299 2 101 2 303 2 413 16 105 4 716 2 309 2 
107 4 108 2 423 2 109 4 314 16 721 2 722 4 316 2 318 2 427 2 612 6 528 2 731 2 322 2 324 2 209 2 618 2 538 4 437 4 21 2 22 2 740 2 215 4 124 2 750 2 626 2 627 2 337 24 544 2 221 2 32 4 444 4 33 6 34 2 757 4 38 4 449 2 39 4 230 2 235 4 352 2 47 2 764 2 765 2 648 2 141 2 554 2 651 2 555 4 143 2 655 4 557 12 149 2 780 2 154 2 261 4 565 2 786 2 787 12 469 2 379 2 792 2 573 2 477 2 676 4 162 4 797 4 71 2 579 4 799 2 679 4 802 2 686 2 687 4 168 2 387 4 493 2 278 6 171 4 388 2 585 2 84 2 813 6 696 2 590 6 284 6 700 2 87 4 290 2 398 2 294 2 827 4 707 2 598 4 709 2 829 2 187 2 189 2 190 2 299 2 101 2 303 2 413 16 105 4 716 2 309 2 
107 2 463 2 108 2 565 2 314 16 786 2 788 2 427 2 477 2 576 2 324 2 432 2 799 2 679 2 486 2 383 2 538 4 802 2 740 2 806 1 172 2 750 2 626 2 627 2 337 22 392 2 84 2 813 4 33 2 444 4 590 6 700 2 182 2 39 2 290 2 231 2 137 2 595 2 642 2 352 2 597 2 296 2 765 2 355 2 187 2 648 2 601 1 554 2 602 2 143 2 101 2 518 2 55 2 197 2 716 2 
337 2 754 2 0 2 84 2 314 2 785 2 699 1 700 2 818 2 476 2 730 2 639 2 430 2 294 3 352 2 453 3 242 2 710 4 98 2 330 3 193 3 654 6 217 2 198 2 56 2 
337 2 754 2 0 2 84 2 314 2 785 2 700 2 818 2 476 2 730 2 639 2 430 2 294 2 352 2 453 2 242 2 710 4 98 2 330 2 193 2 654 6 217 2 198 2 56 2 
337 2 754 2 0 2 84 2 314 2 785 2 700 2 818 2 476 2 730 2 639 2 430 2 294 2 352 2 453 2 242 2 710 4 98 2 330 2 193 2 654 6 217 2 198 2 56 2 
606 6 372 2 259 4 661 2 314 4 663 4 6 2 207 2 157 2 158 2 476 2 794 4 479 4 11 4 116 3 677 2 16 4 329 2 803 2 217 2 220 2 693 2 337 10 498 2 84 2 698 2 130 6 131 2 185 2 43 2 292 2 294 3 549 3 456 3 772 2 652 2 653 2 193 3 414 2 778 4 
337 10 606 6 498 2 372 2 259 4 84 2 661 2 396 2 663 4 314 4 698 2 6 2 130 4 131 2 157 2 207 2 158 2 476 2 479 4 794 4 185 2 43 2 11 4 292 2 551 2 549 2 294 2 116 2 677 2 16 4 456 2 298 2 329 2 803 2 772 2 652 2 653 2 193 2 414 2 217 2 778 4 693 2 220 2 
337 10 606 6 498 2 372 2 259 4 84 2 661 2 396 2 663 4 314 4 698 2 6 2 130 4 131 2 157 2 207 2 158 2 476 2 479 4 794 4 185 2 43 2 11 4 292 2 551 2 549 2 294 2 116 2 677 2 16 4 456 2 298 2 329 2 803 2 772 2 652 2 653 2 193 2 414 2 217 2 778 4 693 2 220 2 
337 10 606 6 498 2 372 2 259 4 84 2 661 2 396 2 663 4 314 4 698 2 6 2 130 4 131 2 157 2 207 2 158 2 476 2 479 4 794 4 185 2 43 2 11 4 292 2 551 2 549 2 294 2 116 2 677 2 16 4 456 2 298 2 329 2 803 2 772 2 652 2 653 2 193 2 414 2 217 2 778 4 693 2 220 2 
337 10 606 6 498 2 372 2 259 4 84 2 661 2 396 4 663 4 314 4 698 2 6 2 130 4 131 2 157 2 207 2 158 2 476 2 479 4 794 4 185 2 43 2 11 4 292 2 551 4 549 2 294 2 116 2 677 2 16 4 456 2 298 4 329 2 803 2 772 2 652 2 653 2 193 2 414 2 217 2 778 4 693 2 220 2 
464 2 781 2 223 2 333 2 115 2 628 2 
781 2 434 2 288 2 202 2 529 2 238 2 248 2 
337 10 562 2 782 2 262 1 695 2 567 2 201 1 314 8 545 2 205 2 93 2 733 1 353 2 18 2 735 1 770 2 357 2 583 2 412 2 362 2 252 2 53 2 30 1 750 2 657 2 752 2 
127 2 
337 1 82 2 259 2 271 2 177 2 244 2 314 1 489 2 264 7 791 1 804 2 744 2 747 2 11 2 641 2 760 4 577 2 778 2 
82 2 271 2 259 2 177 4 244 2 489 2 264 6 804 4 744 2 747 2 11 2 641 4 760 4 577 2 778 2 
337 1 82 2 271 8 259 2 177 8 244 2 314 1 489 2 264 10 791 1 804 8 744 2 747 6 11 2 641 8 760 4 577 2 778 2 
82 2 259 2 177 2 244 2 489 2 264 2 804 2 744 2 11 2 641 2 760 2 577 2 778 2 
419 1 107 18 313 2 314 34 523 2 609 2 424 2 8 2 9 2 426 2 526 2 324 6 534 2 14 2 536 2 120 2 121 4 20 2 541 2 624 2 332 2 625 2 337 38 338 2 633 2 344 2 35 2 636 2 546 2 132 4 232 2 759 2 236 2 761 2 239 2 243 4 765 4 138 2 247 2 51 2 250 6 363 4 364 2 256 2 60 4 565 4 373 2 467 4 375 2 376 2 670 2 472 14 672 2 477 6 799 4 679 16 681 2 74 2 683 2 685 2 77 3 170 2 79 2 174 2 280 2 390 1 691 2 690 2 807 2 497 4 176 2 499 2 812 2 813 32 817 4 183 4 186 2 596 2 705 5 823 2 401 2 599 2 188 2 711 4 408 4 410 2 514 2 196 1 415 16 416 1 521 2 
369 2 419 2 107 20 60 2 3 2 421 2 373 2 466 2 568 2 314 44 523 2 467 4 425 2 112 2 667 4 64 4 9 2 472 6 477 2 320 2 795 2 532 4 796 6 324 2 578 2 208 2 433 4 536 2 799 2 679 20 72 2 119 2 438 2 121 4 20 4 75 2 122 2 123 2 169 2 542 2 624 2 24 2 625 2 216 2 495 2 79 2 691 2 690 2 281 2 807 2 497 6 337 46 83 2 222 2 633 2 813 42 815 2 35 2 546 2 637 2 86 2 132 4 228 2 183 38 134 2 136 2 593 2 348 2 759 2 640 2 186 2 451 2 236 2 705 2 295 2 550 2 401 2 48 2 96 2 711 2 52 2 411 2 145 2 364 2 460 2 417 2 560 2 367 2 153 2 256 2 
107 20 421 6 719 2 314 40 609 2 8 2 9 2 526 2 527 2 324 4 533 8 14 2 536 2 734 2 120 2 121 4 20 2 737 2 541 2 624 2 337 44 633 2 343 8 344 2 636 2 132 4 134 2 347 8 232 2 759 2 236 2 761 2 239 4 138 2 765 6 243 6 139 2 140 2 553 4 51 2 145 6 250 6 363 2 256 2 777 2 60 6 565 6 373 4 467 4 375 2 376 2 472 10 571 2 672 2 474 2 477 4 795 2 799 2 679 18 681 2 683 2 685 2 77 4 170 2 174 2 691 2 807 2 176 2 83 2 812 2 813 40 85 2 180 2 817 2 819 2 183 14 186 2 596 2 705 6 823 2 401 2 96 6 599 2 188 2 711 4 408 6 410 2 301 2 194 2 415 14 521 2 
419 2 107 14 60 2 4 2 565 7 373 2 313 2 314 26 467 6 523 4 424 2 112 2 9 2 426 2 472 8 526 2 477 2 324 2 534 10 536 2 799 2 679 14 72 2 119 2 121 6 20 3 77 6 624 2 625 4 29 2 79 4 280 2 390 2 691 2 690 4 808 2 807 2 497 6 337 28 338 4 633 2 813 35 35 4 546 4 817 1 132 6 183 15 134 2 759 2 236 2 186 2 705 2 761 4 401 2 406 2 765 7 138 2 711 2 514 2 364 1 196 2 415 10 256 2 
592 2 

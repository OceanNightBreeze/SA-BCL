#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 498 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 219 150 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 202 449 108 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 421 125 333 401 442 398 212 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 202 449 108 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 202 449 108 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 202 449 108 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 202 449 108 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 202 449 108 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 202 449 108 213 267 502 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 228 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 478 320 145 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 478 320 145 
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([D)D
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.JavaParser:jj_3R_161()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType; | RETURN | 5873 | return null
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 11206 | = null
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([J)[J
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.WeakHasherMap:size()I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParser:jj_3R_133()Z
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.ValueTuple:size()I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:isReverse([I[I)Z | CONDITION | 156037 | if (x) -> if (!x)
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoAux:hashCode()I
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaCharStream:getBeginLine()I
jtb.JavaCharStream:getBeginColumn()I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:intern([I)[I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.ProglangType:dimensions()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:lexLT([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaCharStream:FillBuff()V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONSTANT | 14703 | 0 -> 1
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3_16()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([[I)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z | ASSIGN | 63827 | = null
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(II)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_3R_162()Z
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.MathMDE:negate(I)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:memberOf(J[J)Z
daikon.Quant:memberOf(I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:memberOf(F[D)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:eltwiseGT([I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | CONDITION | 19542 | if (x) -> if (!x)
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariants:Invariants()V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParser:jj_3R_163()Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:eltsEqual([II)Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:lte(II)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:slice([III)[I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z | ASSIGN | 9658 | = null
daikon.VarInfoName:hashCode()I
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:jj_ntk()I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.MathMDE:mod_positive(II)I
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern:numIntArrays()I
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_50()Z
utilMDE.ArraysMDE:max([I)I
daikon.Quant:subsetOf([F[D)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:eq(JJ)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.ModBitTracker:split(I)I
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaCharStream:getEndColumn()I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object; | ASSIGN | 262646 | = null
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.MathMDE:gcd([I)I
utilMDE.ArraysMDE:sum([I)I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_14(I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:subsetOf([B[I)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object; | ASSIGN | 19872 | = null
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3R_51()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:eq(FF)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:gte(II)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:concat([I[I)[I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:gt(II)Z
daikon.Quant:intersection([I[I)[I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType; | ASSIGN | 47633 | = null
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:sign(I)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:subsetOf([I[I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:jj_3R_53()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13889 | = null
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.Quant:eltsLtIndex([I)Z
daikon.Ppt:Ppt()V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:memberOf(S[S)Z
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:lt(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18332 | 0 -> -1
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.ModBitTracker:num_sets()I
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.PptSlice0:arity()I
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:union([I[I)[I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:subsetOf([D[D)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaCharStream:ReadByte()C
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | RETURN | 3858 | return null
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:setEqual([I[I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:eltsLTE([II)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_3R_69()Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaCharStream:BeginToken()C
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
42 2 436 4 53 2 366 2 244 2 485 2 140 2 532 2 580 2 
473 6 63 2 335 6 489 2 425 2 427 2 172 2 522 2 391 2 143 6 251 2 
112 4 533 2 417 4 136 2 105 2 146 2 316 4 467 2 211 4 
298 4 302 8 519 4 8 10 101 10 225 26 42 6 176 2 227 16 138 16 48 2 140 6 494 10 19 2 349 8 272 8 195 12 275 4 535 10 422 28 503 2 383 10 433 4 89 6 160 2 120 6 290 2 579 2 393 16 363 8 
265 4 411 6 
526 2 
297 2 215 2 549 2 216 2 1 4 4 2 485 2 405 2 559 2 525 2 104 2 308 2 563 2 48 2 186 4 565 2 50 2 351 2 82 2 59 2 431 2 62 2 156 2 158 2 285 2 576 2 204 2 328 2 67 4 509 2 207 2 165 2 
480 6 394 4 37 4 403 2 519 2 71 8 101 16 8 6 407 6 225 48 42 4 227 32 47 4 16 4 138 32 310 2 140 4 455 6 189 2 374 6 494 16 272 6 377 6 195 22 535 16 422 54 430 4 383 16 321 4 155 4 64 2 89 4 243 6 160 2 358 2 120 4 31 2 393 32 363 18 
308 2 457 2 537 2 
34 2 317 2 500 2 60 22 152 10 521 2 7 2 408 2 505 2 117 2 357 2 177 2 438 2 121 2 
338 2 301 2 519 2 404 2 101 2 8 4 225 4 227 2 344 2 138 2 494 2 195 2 535 2 420 2 352 2 422 6 466 2 383 2 91 2 120 2 295 2 393 2 363 2 
195 4 275 2 535 4 422 16 355 2 430 4 101 4 383 4 225 12 47 4 227 8 229 2 138 8 455 6 374 6 494 4 393 8 
350 2 123 2 38 2 239 2 446 2 498 2 245 6 187 2 250 2 296 2 
235 2 219 2 97 2 150 2 406 2 280 2 526 2 65 2 543 2 362 2 415 2 
0 2 221 2 517 2 447 2 520 2 449 2 529 4 78 2 140 8 18 2 387 2 254 2 98 2 484 4 553 2 262 2 42 8 108 2 268 4 270 4 348 2 198 2 283 2 202 2 294 2 
42 2 300 2 
42 4 90 2 256 2 
356 2 
124 2 125 2 445 6 303 6 129 4 12 2 132 4 450 26 133 8 14 2 15 6 141 4 142 2 144 82 23 2 463 4 147 10 25 2 149 2 465 2 153 4 469 36 319 2 470 2 28 2 322 2 324 24 29 2 327 2 476 4 330 12 162 26 477 26 32 12 333 2 35 2 336 26 175 2 342 2 179 2 180 26 181 2 183 10 493 2 193 2 496 14 55 16 354 2 506 2 205 2 359 2 212 2 68 2 514 2 220 2 368 10 223 2 72 2 524 20 527 10 231 14 376 20 236 2 382 2 541 2 88 4 92 4 388 2 247 20 93 2 248 2 390 2 95 2 547 82 398 2 401 2 399 2 258 26 257 2 103 82 261 2 557 2 562 26 109 2 271 10 567 2 421 2 428 4 572 2 429 10 114 26 573 26 115 26 432 2 435 6 282 10 575 26 437 2 119 2 439 8 289 28 440 2 578 4 442 2 
69 2 86 1 171 2 311 2 
171 2 11 2 
298 2 419 2 308 2 373 2 171 2 209 2 191 2 
171 2 555 2 191 2 
171 2 191 2 448 2 
69 2 107 2 
171 2 191 2 
234 2 545 2 
171 2 304 2 
69 2 424 2 545 2 
36 2 69 2 410 2 
479 2 418 2 69 2 
69 2 241 2 208 2 
69 2 61 2 495 2 
545 2 224 2 
171 2 331 2 
410 2 492 2 
418 2 273 2 
203 2 241 2 
269 2 495 2 
263 2 545 2 
291 2 495 2 
241 2 577 2 
418 2 237 2 
410 2 483 2 
69 2 424 2 545 2 110 2 
69 2 424 2 77 2 545 2 110 2 
69 2 545 2 20 2 
69 2 379 2 545 2 
299 2 367 2 288 2 184 2 
416 2 308 2 113 2 373 2 
416 2 308 2 113 2 528 2 373 2 209 2 
298 2 308 2 373 2 171 2 191 2 471 2 
566 2 559 2 
298 2 308 2 264 2 373 2 
46 2 241 2 
540 2 495 2 
410 2 94 2 
418 2 561 2 
418 2 137 2 495 2 
418 2 523 2 495 2 
418 2 79 2 495 2 
418 2 173 2 495 2 
306 6 56 2 308 2 266 2 373 2 341 2 
545 2 312 2 
395 2 536 2 381 4 60 6 369 2 199 2 539 2 76 2 488 4 329 2 491 2 441 2 190 2 233 2 531 2 332 2 443 2 194 2 
69 2 206 2 
2 2 
0 2 254 2 221 2 517 2 98 2 447 2 553 2 484 4 520 2 449 2 262 2 42 8 529 4 346 2 140 8 78 2 108 2 268 4 348 2 270 4 18 2 198 2 283 2 202 2 387 2 
0 2 221 2 517 2 447 2 520 2 449 2 529 6 78 2 140 8 80 2 18 2 387 2 254 2 98 2 484 4 553 2 262 2 42 8 346 2 108 2 268 4 270 4 348 2 198 2 283 2 202 2 508 2 
534 2 326 2 185 2 
534 2 326 2 185 2 
0 2 254 2 221 2 517 2 98 2 447 2 553 2 484 4 520 2 449 2 262 2 42 8 529 4 346 2 140 8 78 2 108 2 268 4 348 2 270 4 18 2 198 2 283 2 202 2 387 2 
0 2 221 2 517 2 447 2 520 2 449 2 529 6 78 2 140 8 80 2 18 2 387 2 254 2 98 2 484 4 553 2 262 2 42 8 346 2 108 2 268 4 270 4 348 2 198 2 283 2 202 2 508 2 
0 2 221 2 517 2 447 2 520 2 449 2 529 5 78 2 140 8 80 1 18 2 387 2 254 2 98 2 484 4 553 2 262 2 42 8 346 2 108 2 268 4 270 4 348 2 198 2 283 2 202 2 508 1 
122 2 213 2 0 2 221 2 517 2 449 2 73 2 75 2 529 3 140 8 78 2 80 1 314 2 84 2 24 2 148 2 27 1 538 2 387 2 397 2 254 2 98 2 553 2 484 4 406 1 262 2 41 2 42 12 178 2 343 2 267 2 108 2 268 2 415 1 348 2 270 2 111 2 277 1 502 2 198 2 202 2 287 2 508 1 510 2 
116 2 106 2 340 2 464 2 242 2 100 2 
513 2 284 2 497 2 340 2 170 2 102 2 192 2 
334 2 166 2 444 2 255 2 5 2 169 2 98 2 99 2 10 2 42 10 226 2 372 2 490 1 564 2 140 8 21 2 570 2 196 1 239 1 501 2 468 2 504 2 154 1 325 2 66 2 250 1 
535 3 422 6 151 2 101 3 383 3 370 2 225 4 323 2 89 2 307 2 47 2 227 4 228 2 412 2 138 4 374 4 494 2 393 2 
54 7 337 1 218 2 240 2 402 2 222 2 554 2 131 2 556 4 26 2 42 1 44 2 43 2 474 2 140 1 188 2 232 2 210 2 
54 6 218 2 240 2 402 2 222 4 554 2 131 2 556 4 26 4 44 2 43 4 474 2 188 2 232 2 210 2 
54 10 337 1 218 8 240 2 402 2 222 8 554 2 131 2 556 4 26 8 42 1 44 6 43 8 474 2 140 1 188 2 232 2 210 2 
54 2 240 2 402 2 222 2 554 2 131 2 556 2 26 2 43 2 474 2 188 2 232 2 210 2 
126 2 6 6 9 4 305 2 134 6 135 4 13 4 309 2 453 5 140 90 17 4 456 4 458 12 145 2 313 6 22 6 460 24 315 6 462 12 318 6 320 2 472 6 157 6 161 2 475 6 163 6 164 4 30 6 33 6 478 2 168 6 482 4 40 18 486 6 174 24 487 2 42 102 45 2 182 8 347 9 49 6 51 2 52 2 57 6 58 8 499 12 198 12 200 2 201 26 507 6 508 35 361 4 360 4 511 2 217 12 364 13 70 6 365 2 515 6 516 6 518 24 371 12 74 12 230 4 529 131 80 35 530 2 375 2 238 4 83 4 378 6 380 6 384 8 385 16 87 2 542 4 544 2 389 2 249 4 392 4 252 4 96 8 550 24 400 66 551 24 552 2 553 6 260 2 558 6 560 6 262 12 409 12 413 6 268 60 414 12 270 48 274 12 571 2 276 4 423 2 278 4 426 6 279 4 574 6 434 1 281 2 118 5 286 12 292 6 293 6 
145 2 478 2 515 2 553 2 198 2 320 2 281 2 262 2 85 2 42 6 529 2 140 6 268 2 375 2 270 2 
3 4 126 2 127 2 6 4 130 8 9 4 305 2 134 4 135 4 13 4 309 2 452 4 454 2 140 70 139 16 17 4 456 2 458 8 145 2 459 8 313 6 22 4 461 4 315 4 318 4 320 2 472 4 159 2 163 4 30 4 33 4 478 2 481 16 167 2 339 2 168 4 482 2 40 6 39 2 174 24 42 78 45 2 182 6 345 10 347 8 49 4 57 4 353 2 499 14 197 2 198 6 201 30 507 4 508 28 361 4 360 4 511 4 512 2 214 2 364 10 217 16 70 4 515 16 516 4 74 10 529 102 80 26 530 2 375 2 81 4 238 4 83 2 378 4 380 4 542 4 386 32 246 10 389 4 546 4 392 4 252 4 396 8 253 10 550 24 400 24 551 8 553 2 259 4 558 4 560 4 262 6 409 8 413 4 268 44 414 10 270 36 569 4 568 8 274 10 276 2 423 4 426 4 279 4 574 4 281 2 118 4 286 10 292 4 293 4 
214 2 70 4 364 2 515 14 6 4 74 6 451 2 453 2 230 2 529 40 140 26 80 12 456 2 375 2 145 2 313 2 22 4 83 2 318 4 320 2 472 4 385 10 87 2 159 2 389 2 249 2 30 2 392 4 548 2 478 2 400 8 482 2 40 2 553 2 260 2 558 2 262 2 487 2 42 28 182 4 347 6 413 2 268 14 414 6 270 14 52 2 274 6 571 2 276 2 423 2 198 2 200 2 281 2 201 6 286 2 507 4 508 12 293 2 511 2 
128 2 

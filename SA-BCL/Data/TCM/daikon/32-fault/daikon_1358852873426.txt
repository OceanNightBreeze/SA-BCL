#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError (122,494) 
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 473 683 276 385 59 102 400 411 424 236 545 427 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V ERROR java.lang.NullPointerException 712 
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V ERROR java.lang.NullPointerException 712 
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 611 303 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 611 303 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException 611 482 (148,600) 495 (408,726) (148,600) 603 (408,726) 678 68 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException 611 482 (148,600) 495 (408,726) (148,600) 603 (408,726) 678 68 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException 611 482 (148,600) 495 (408,726) (148,600) 603 (408,726) 678 68 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 357 394 616 476 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 330 284 649 226 744 660 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 330 284 649 226 744 660 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 330 284 649 226 744 660 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 330 284 649 628 339 226 744 660 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.Token:newToken(I)Ljtb.Token;
daikon.Quant:lexGTE([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:slice([III)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Ppt:Ppt()V
daikon.PptSlice1:num_samples()I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaCharStream:getEndColumn()I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.Invariant:logOn()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object; | RETURN | 20497 | return null
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:lexLTE([I[I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:BeginToken()C
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:union([I[I)[I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:eltsLT([II)Z
utilMDE.Intern:intern([D)[D
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:setEqual([I[I)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.PptName:isEnterPoint()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLTE([II)Z
daikon.ProglangType:baseIsIntegral()Z
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([J)[J
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:eltsEqual([II)Z
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z | CONDITION | 81695 | if (x) -> if (!x)
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Debug:logDetail()Z
utilMDE.MathMDE:negate(I)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.ModBitTracker:num_samples()I
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isArray()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:sameLength([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String; | RETURN | 29320 | return null
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.ProglangType:isScalar()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName:hashCode()I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ProglangType:dimensions()I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:lt(II)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.ValueTuple:isMissingFlow(I)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType; | ASSIGN | 24199 | = null
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:noDups([I)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:ReadByte()C
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:memberOf(I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit; | ASSIGN | 4792 | = null
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant; | RETURN | 1102 | return null
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:memberOf(J[J)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfo:relate_var()V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:eq(JJ)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:lte(II)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.LimitedSizeIntSet:size()I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:lexGT([I[I)Z
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONDITION | 50578 | if (x) -> if (!x)
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice2:arity()I
daikon.inv.Invariant:getConfidence()D
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:gt(II)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaCharStream:backup(I)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z | CONDITION | 21420 | if (x) -> if (!x)
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:gcd(JJ)J
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(II)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_ntk()I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfo:new_ppt()V
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.ModBitTracker:split(I)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaCharStream:getEndLine()I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z | ASSIGN | 37734 | = null
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | CONSTANT | 3683 | 1 -> 0
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.ProglangType:baseIsScalar()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.PptSlice0:arity()I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:gcd(II)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.PptName:isCombinedExitPoint()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.ProglangType:isPseudoArray()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I | ASSIGN | 816 | = null
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.ModBitTracker:num_sets()I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.Debug:logOn()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.InvMap:InvMap()V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 99177 | return null
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice1:arity()I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
575 2 67 2 403 2 413 2 465 2 751 2 299 2 155 2 461 4 
627 2 402 2 528 2 663 2 705 2 579 6 131 2 130 6 363 2 523 2 112 6 
403 2 739 2 751 2 459 4 396 2 509 2 41 6 94 6 361 2 9 6 440 2 519 6 746 4 
227 6 763 10 138 4 29 2 142 10 159 6 639 4 345 8 207 10 719 8 30 2 426 29 162 4 580 2 401 10 582 16 583 2 403 6 36 2 697 8 751 6 485 2 311 16 755 2 592 12 489 8 42 10 541 26 69 4 201 16 
146 4 668 6 
305 2 
470 2 421 2 521 4 684 2 322 2 4 2 524 4 373 2 7 2 581 4 583 2 584 2 646 2 751 4 295 2 336 2 651 2 26 4 121 2 70 2 156 2 122 2 759 2 27 2 494 2 599 2 73 2 76 2 446 2 548 2 771 2 602 2 449 2 129 2 453 2 165 2 403 4 217 2 271 2 413 2 221 2 564 2 733 2 318 2 
227 4 763 16 202 4 301 2 228 6 442 2 635 6 142 16 29 2 159 4 345 16 207 6 281 6 145 4 497 6 105 4 426 54 552 4 401 16 582 32 288 4 403 4 86 4 406 6 697 6 751 4 169 4 536 2 311 32 677 6 592 22 490 2 42 16 297 2 541 48 707 8 69 2 201 32 
494 2 704 2 547 2 
569 2 404 2 570 2 780 2 444 2 754 10 6 2 595 2 24 2 273 2 654 22 43 2 214 2 122 2 
763 2 100 2 344 2 142 2 474 2 159 2 345 2 207 4 691 2 721 2 426 6 401 2 35 2 582 2 405 2 311 2 199 2 592 2 415 2 42 2 541 4 69 2 201 2 
582 8 138 2 763 4 288 4 228 6 354 2 142 4 169 4 311 8 103 2 592 4 497 6 426 16 42 4 541 12 401 4 201 8 
494 4 157 2 503 2 329 2 644 2 638 6 547 2 261 2 386 2 704 2 540 2 679 2 413 2 224 2 213 2 256 2 734 2 
632 2 766 2 769 2 398 2 305 2 775 2 132 2 555 2 648 2 154 2 
365 2 686 2 185 6 280 16 368 3 367 6 5 4 477 16 688 2 282 3 371 6 187 4 577 2 372 2 689 2 478 1 189 1 106 2 109 2 284 4 8 2 377 2 289 4 380 3 585 2 13 2 383 2 17 3 483 2 196 1 588 2 699 2 698 2 488 2 387 6 20 2 296 2 23 2 597 2 598 8 493 32 393 1 714 2 713 3 28 2 303 2 601 2 395 3 397 1 604 2 31 2 500 2 210 2 34 2 724 2 212 32 611 2 215 2 615 2 617 2 309 2 403 32 216 2 620 2 218 3 507 4 728 1 623 2 508 2 622 16 626 2 412 2 40 3 414 3 515 2 135 3 225 2 631 2 736 1 737 2 45 2 47 2 633 1 636 2 231 2 232 2 323 2 637 3 234 2 49 1 324 24 239 2 50 1 52 1 423 2 54 2 242 1 640 2 147 2 149 1 429 2 328 2 748 2 529 2 330 4 530 2 749 2 751 34 152 1 534 5 539 2 435 2 253 2 652 2 757 6 439 2 542 2 762 24 341 3 659 1 78 6 768 2 448 2 549 4 348 2 773 2 80 6 778 2 556 2 268 2 673 2 168 2 558 2 676 2 786 2 173 1 92 2 562 2 466 16 465 2 174 2 792 2 793 2 176 2 567 2 
751 2 787 2 
141 2 751 4 656 2 
730 2 
545 2 683 2 276 2 140 2 473 2 572 2 443 20 321 2 278 2 102 2 236 2 346 2 424 2 690 2 608 2 32 2 427 2 501 2 609 2 400 2 777 2 11 2 59 2 84 2 133 2 619 2 696 2 385 2 407 20 39 2 411 2 590 2 788 20 436 2 706 2 468 2 298 2 258 2 
709 2 537 2 300 2 462 1 
607 2 537 2 
494 2 712 2 191 2 758 2 422 2 639 2 537 2 
150 2 422 2 537 2 
243 2 422 2 537 2 
381 2 479 2 300 2 
422 2 537 2 
237 2 381 2 
537 2 687 2 
381 2 514 2 300 2 
16 2 781 2 300 2 
375 2 496 2 300 2 
458 2 270 2 300 2 
343 2 538 2 300 2 
381 2 163 2 
720 2 537 2 
16 2 460 2 
97 2 496 2 
618 2 458 2 
60 2 343 2 
381 2 472 2 
335 2 343 2 
458 2 204 2 
496 2 784 2 
16 2 292 2 
381 2 514 2 682 2 300 2 
381 2 586 2 514 2 682 2 300 2 
381 2 727 2 300 2 
381 2 578 2 300 2 
378 2 475 2 358 2 307 2 
494 2 731 2 758 2 18 2 
494 2 139 2 712 2 731 2 758 2 18 2 
494 2 703 2 758 2 422 2 639 2 537 2 
651 2 374 2 
494 2 758 2 639 2 58 2 
458 2 71 2 
343 2 512 2 
16 2 144 2 
211 2 496 2 
343 2 134 2 496 2 
343 2 126 2 496 2 
471 2 343 2 496 2 
343 2 12 2 496 2 
494 2 124 2 107 6 287 2 200 2 758 2 761 6 469 2 
381 2 596 2 
151 2 2 2 302 2 533 2 717 4 487 2 432 2 51 2 605 2 654 2 451 2 245 2 612 2 
723 2 300 2 
8 2 
364 4 737 2 636 2 686 2 234 2 367 2 187 4 371 4 239 2 577 2 189 2 284 4 147 2 246 2 377 2 61 2 328 6 585 2 330 4 749 2 751 18 493 2 303 2 78 6 448 2 604 2 348 2 773 2 80 2 500 2 34 2 212 6 611 2 403 18 216 2 779 2 557 2 37 2 728 2 506 2 507 4 626 2 510 2 92 2 465 2 466 6 467 2 174 2 792 2 225 2 
364 4 365 1 737 2 636 2 686 2 234 2 367 2 187 4 371 5 239 2 372 1 577 2 189 2 284 4 147 2 246 2 377 2 61 2 328 6 585 2 330 4 749 2 751 18 493 2 303 2 78 6 448 2 604 2 348 2 773 2 80 2 500 2 34 2 212 6 611 2 403 18 216 2 779 2 557 2 37 2 728 2 506 2 507 4 626 2 510 2 92 2 465 2 466 6 467 2 174 2 792 2 225 2 
650 2 
685 2 117 2 
179 2 737 2 183 2 230 2 1 2 187 2 104 4 692 8 579 6 147 2 642 2 112 6 15 10 751 12 334 2 535 2 753 2 66 2 68 2 593 2 705 4 491 4 391 4 441 2 543 2 710 2 75 2 203 2 78 4 600 2 205 2 347 4 550 2 603 2 348 2 604 2 662 2 663 2 773 2 664 8 349 2 130 6 776 2 402 4 403 6 726 2 166 4 507 2 89 2 408 2 171 2 626 2 627 2 678 2 220 2 96 2 175 2 136 2 225 2 362 4 
179 2 737 2 183 2 230 2 1 2 523 2 187 2 104 4 425 2 692 8 579 8 147 2 112 6 15 10 751 12 334 2 535 2 753 2 66 2 68 2 593 2 22 4 705 4 491 4 391 4 441 2 543 2 710 2 75 2 203 2 78 4 600 2 205 2 347 4 550 2 603 2 348 2 604 2 662 2 663 2 773 2 664 8 349 2 130 8 776 2 402 4 403 6 726 2 166 4 507 2 89 2 408 2 171 2 626 2 627 2 678 2 220 2 511 2 96 2 136 2 225 2 362 4 
543 2 402 2 230 2 166 4 334 2 408 2 205 2 753 2 104 2 678 2 68 2 593 2 220 2 705 2 349 2 391 4 130 2 112 2 
179 2 737 2 183 2 230 2 1 2 523 2 187 2 104 4 692 4 579 6 147 2 642 2 112 4 15 6 751 12 334 2 535 2 753 2 66 2 68 2 593 2 705 4 491 4 391 4 441 2 543 2 710 2 75 2 203 2 78 4 600 2 205 2 347 4 550 2 603 2 348 2 604 2 662 2 663 2 773 2 664 4 349 2 130 6 776 2 402 4 403 6 726 2 166 4 507 2 89 2 408 2 171 2 626 2 678 2 220 2 96 2 175 2 136 2 225 2 362 4 
179 2 737 2 183 2 230 2 1 2 187 2 104 4 692 4 579 6 147 2 642 2 112 6 528 2 15 6 751 12 334 2 535 2 753 2 66 2 68 2 593 2 705 4 491 4 391 4 441 2 543 2 710 2 75 2 203 2 78 4 600 2 205 2 347 4 550 2 603 2 348 2 604 2 662 2 663 2 773 2 664 4 349 2 130 4 776 2 402 4 403 6 726 2 166 4 507 2 89 2 408 2 171 2 626 2 678 2 220 2 96 2 175 2 136 2 225 2 362 4 
179 2 737 2 183 2 230 2 1 2 187 2 104 4 692 4 579 6 147 2 642 2 112 6 15 6 751 12 334 2 535 2 753 2 66 2 68 2 593 2 705 4 491 4 391 4 441 2 543 2 710 2 75 2 203 2 78 4 600 2 205 2 347 4 550 2 603 2 348 2 604 2 662 2 663 2 773 2 664 8 349 2 130 6 776 2 402 4 403 6 726 2 166 4 507 2 89 2 408 2 171 2 626 2 627 2 678 2 220 2 96 2 175 2 136 2 225 2 362 4 
179 2 737 2 183 2 230 2 1 2 187 2 104 4 692 8 579 8 147 2 642 2 112 8 528 2 15 10 751 12 334 2 535 2 753 2 66 2 68 2 593 2 705 4 491 4 391 4 441 2 543 2 710 2 75 2 203 2 78 4 600 2 205 2 347 4 550 2 603 2 348 2 604 2 662 2 663 2 773 2 664 8 349 2 130 6 776 2 402 4 403 6 726 2 166 4 507 2 89 2 408 2 171 2 626 2 627 2 678 2 220 2 96 2 175 2 136 2 225 2 362 4 
179 2 737 2 183 2 230 2 1 2 187 2 104 4 692 8 579 6 147 2 642 2 112 6 15 10 751 12 334 2 535 2 753 2 66 2 68 2 593 2 705 4 491 4 391 4 441 2 543 2 710 2 75 2 203 2 78 4 600 2 205 2 347 4 550 2 603 2 348 2 604 2 662 2 663 2 773 2 664 8 349 2 130 6 776 2 402 4 403 6 726 2 166 4 507 2 89 2 408 2 171 2 626 2 627 2 678 2 220 2 96 2 175 2 136 2 225 2 362 4 
364 4 365 2 179 2 181 2 183 2 1 2 3 2 367 2 5 2 369 6 370 1 187 4 371 6 576 2 188 6 372 2 577 2 190 7 579 12 10 1 377 2 194 2 192 6 193 1 585 2 14 2 15 2 197 2 19 2 593 2 388 2 391 4 598 4 203 2 600 2 205 2 604 2 603 2 209 2 34 2 212 8 614 2 402 4 403 24 216 2 37 2 408 2 624 2 626 2 220 2 225 2 419 2 420 2 230 2 636 2 234 2 238 2 239 2 56 2 246 2 643 6 645 1 247 1 64 2 65 2 66 2 68 2 656 6 441 2 75 2 658 2 77 8 78 6 260 2 448 2 663 4 662 2 79 6 450 1 664 2 80 2 667 4 265 6 669 7 266 6 269 2 89 2 91 2 92 2 678 2 466 6 465 2 96 4 98 10 99 2 686 2 688 2 104 4 284 4 694 6 112 8 289 2 113 4 482 2 484 6 293 2 705 4 491 4 708 2 493 2 123 2 710 4 495 2 715 2 500 2 130 4 726 2 507 4 730 6 136 2 737 2 147 2 148 2 528 4 328 6 330 4 331 1 749 12 332 6 751 46 333 2 334 2 535 2 753 2 153 6 338 1 757 2 543 2 158 2 347 6 550 2 348 2 551 6 773 2 160 6 553 1 349 2 164 2 776 2 779 4 166 4 171 2 559 2 787 6 174 2 175 2 792 2 362 8 567 2 
364 4 181 2 179 2 365 2 183 2 99 2 98 10 1 2 686 2 3 2 367 2 369 6 5 4 576 2 688 4 371 6 187 4 188 6 577 2 372 2 104 4 284 4 579 12 694 6 192 6 194 2 377 2 112 8 113 4 289 4 585 2 14 2 482 2 484 6 293 2 197 2 19 2 388 2 593 2 705 4 491 4 708 2 391 4 493 2 598 6 123 2 710 2 203 2 495 2 715 2 600 2 205 2 603 2 604 2 209 2 500 2 34 2 212 8 611 2 130 8 614 2 402 4 403 24 216 2 726 2 37 2 507 4 408 2 626 2 627 4 220 2 730 6 225 2 419 2 420 2 737 2 636 2 230 2 234 2 238 2 239 2 147 2 56 2 246 2 148 2 328 6 643 6 330 4 749 12 332 6 64 2 333 2 751 46 65 2 334 2 535 2 753 2 66 2 68 2 153 6 757 2 656 6 441 2 543 2 75 2 658 2 158 2 77 8 260 2 78 6 448 2 347 6 550 2 551 6 348 2 663 4 773 2 79 6 160 6 80 2 664 6 265 6 667 4 349 2 164 2 776 2 266 6 779 4 353 2 166 4 269 2 89 2 559 2 171 2 91 2 787 6 678 2 92 2 464 2 465 2 466 6 174 2 96 2 792 2 175 2 567 2 362 8 
364 4 181 2 179 2 365 2 183 2 99 2 98 10 1 2 686 2 3 2 367 2 369 6 5 4 576 2 688 4 371 6 187 4 188 6 577 2 372 2 104 4 284 4 692 4 579 12 694 6 192 6 194 2 377 2 112 8 113 4 289 4 585 2 14 2 482 2 15 4 484 6 293 2 197 2 19 2 388 2 593 2 705 4 491 4 708 2 391 4 493 2 598 6 123 2 710 2 203 2 495 2 715 2 600 2 205 2 603 2 604 2 209 2 500 2 34 2 212 8 611 2 130 8 614 2 402 4 403 24 216 2 726 2 37 2 507 4 408 2 626 2 627 4 220 2 730 6 225 2 419 2 420 2 737 2 636 2 230 2 234 2 238 2 239 2 147 2 56 2 246 2 148 2 328 6 643 6 330 4 749 12 332 6 64 2 333 2 751 46 65 2 334 2 535 2 753 2 66 2 68 2 153 6 757 2 656 6 441 2 543 2 75 2 658 2 158 2 77 8 260 2 78 6 448 2 347 6 550 2 551 6 348 2 663 4 773 2 79 6 160 6 80 2 664 6 265 6 667 4 349 2 164 2 776 2 266 6 779 4 353 2 166 4 269 2 89 2 559 2 171 2 91 2 787 6 678 2 92 2 464 2 465 2 466 6 174 2 96 2 792 2 175 2 567 2 362 8 
364 6 181 2 179 2 365 2 183 2 99 2 98 8 1 2 686 2 3 2 279 2 367 4 369 6 5 4 576 2 688 4 371 6 187 4 188 6 577 2 372 2 104 4 284 4 692 4 579 16 694 6 192 6 377 2 112 10 113 4 289 4 585 2 14 2 115 2 382 2 482 2 15 4 484 6 293 2 197 2 19 2 388 2 593 2 705 4 491 4 708 2 391 4 493 4 598 6 123 2 710 2 203 2 495 2 715 2 600 2 205 2 603 2 604 2 209 2 500 2 34 2 212 12 611 2 130 10 614 2 402 4 403 22 216 2 726 2 37 2 507 4 408 2 626 2 627 4 220 2 730 6 225 2 419 2 420 2 737 2 636 2 230 2 234 2 523 2 238 2 239 2 147 2 56 2 246 2 148 2 528 2 328 8 643 6 330 4 749 10 332 6 64 2 430 2 333 2 751 44 65 2 334 2 535 2 753 2 66 2 68 2 153 6 757 2 656 6 441 2 543 2 75 2 658 2 158 2 77 8 260 2 78 6 448 2 347 6 550 2 551 6 348 2 663 4 773 2 79 6 160 6 80 4 664 6 265 6 667 4 349 2 164 2 776 2 266 6 779 4 353 2 166 4 269 2 89 2 559 2 171 2 91 2 787 6 678 2 92 2 464 2 680 2 681 2 465 2 466 8 174 2 96 2 792 2 175 2 567 2 362 8 
441 2 543 2 179 2 75 2 183 2 203 2 1 2 230 2 205 2 347 2 550 2 663 2 664 6 692 4 579 4 349 2 130 6 112 6 402 4 166 2 15 4 751 4 89 2 334 2 535 2 753 2 66 2 171 2 627 2 593 2 705 4 491 2 175 2 391 2 362 2 
364 4 365 2 179 2 183 2 98 2 1 2 686 2 367 3 187 4 371 6 577 2 372 2 284 4 8 2 579 4 377 2 194 2 112 6 585 2 15 2 593 2 119 2 705 4 491 2 597 2 391 2 493 3 203 2 205 2 604 2 399 3 500 2 34 2 212 8 130 6 402 4 403 24 216 2 37 2 507 4 626 2 627 2 225 2 737 2 230 2 636 2 234 2 239 2 640 2 147 2 246 2 328 6 330 4 749 4 751 28 334 2 535 2 753 2 66 2 756 2 542 2 257 2 543 2 441 2 75 2 78 6 448 2 347 2 550 2 348 2 663 2 773 2 80 3 664 6 349 2 776 2 779 2 166 2 89 2 170 2 171 2 92 2 466 6 465 2 272 2 174 2 175 2 792 2 362 2 
550 2 535 2 409 2 
550 2 535 2 409 2 
365 2 98 2 101 2 1 2 686 2 366 2 5 4 688 4 371 6 187 4 577 2 372 2 104 4 108 2 284 4 692 4 579 16 695 2 377 2 112 12 113 2 289 4 585 2 15 6 384 2 484 2 293 2 702 4 294 2 389 2 705 4 491 2 708 2 391 2 598 4 493 2 710 2 495 2 603 2 604 2 500 2 34 2 212 2 130 12 402 4 403 16 216 2 726 2 505 2 37 2 507 4 409 2 408 2 626 2 627 4 417 2 136 2 225 2 517 2 737 2 636 2 230 2 522 2 234 2 235 4 523 4 239 2 147 2 246 2 528 4 328 2 330 4 749 4 531 4 751 24 334 2 535 4 753 4 66 2 764 2 78 6 448 2 347 4 550 6 348 2 773 2 663 4 664 6 667 2 452 2 670 2 85 2 779 6 352 2 166 2 678 2 466 2 465 2 174 2 96 4 565 2 792 2 567 4 362 4 
670 2 403 2 113 2 98 2 101 2 749 2 158 2 482 2 484 2 751 4 117 2 294 2 626 2 220 2 437 2 502 2 492 2 
365 2 101 2 1 2 686 2 366 2 5 4 688 4 371 6 187 4 577 2 372 2 104 4 108 2 284 4 692 4 579 16 695 2 377 2 112 12 289 4 585 2 15 6 384 2 484 2 293 2 702 4 294 2 705 4 491 2 708 2 391 2 598 4 493 4 710 4 495 2 603 2 604 2 500 2 34 2 212 2 130 12 402 4 403 16 216 2 726 2 505 4 37 2 507 4 409 2 408 2 626 2 627 4 136 2 225 2 517 2 737 2 636 2 230 2 143 2 234 2 235 4 523 4 239 2 147 2 246 2 528 4 328 2 330 4 749 2 249 2 248 2 531 4 751 24 334 2 535 4 753 4 66 2 433 2 653 2 764 2 78 6 448 2 347 4 550 6 348 2 662 2 773 2 663 4 664 6 667 2 452 2 670 2 779 6 352 2 166 2 678 2 466 2 465 2 174 2 96 4 565 2 792 2 567 4 362 4 
365 2 98 2 101 2 1 2 686 2 366 2 5 4 688 4 371 6 187 4 577 2 372 2 104 4 108 2 284 4 692 4 579 16 695 2 377 2 112 12 113 2 289 4 585 2 290 2 15 6 384 2 484 2 293 2 702 4 294 2 705 4 491 2 708 2 391 2 598 4 493 2 710 4 495 2 603 2 604 2 500 2 34 2 212 2 130 12 402 4 403 16 216 2 726 2 505 2 37 2 507 4 409 2 408 2 626 2 627 4 136 2 225 2 517 2 737 2 636 2 230 2 740 2 234 2 235 4 523 4 239 2 55 2 147 2 246 2 528 4 328 2 330 4 749 4 63 2 531 4 751 24 334 2 535 4 753 4 66 2 431 2 764 2 78 6 448 2 347 4 550 6 348 2 662 2 773 2 663 4 664 6 667 2 452 2 670 2 779 6 352 2 166 2 678 2 466 2 465 2 174 2 96 4 565 2 792 2 567 4 362 4 
616 2 359 2 241 2 546 2 554 2 394 2 57 2 476 2 357 2 
364 2 275 2 544 2 342 2 367 3 304 1 80 3 212 2 327 2 350 4 671 2 403 2 328 2 504 2 587 2 38 2 751 2 197 6 314 2 92 2 466 2 392 2 735 3 418 2 493 3 
350 4 327 2 364 2 671 2 544 2 275 2 342 2 403 2 328 2 504 2 38 2 587 2 751 2 197 6 367 2 314 2 92 2 80 2 466 2 212 2 392 2 418 2 735 2 493 2 
350 4 327 2 364 2 671 2 544 2 275 2 342 2 403 2 328 2 504 2 38 2 587 2 751 2 197 6 367 2 314 2 92 2 80 2 466 2 212 2 392 2 418 2 735 2 493 2 
520 2 227 2 763 2 142 2 280 2 367 3 772 2 499 2 81 4 426 6 212 2 454 3 428 3 613 6 82 2 401 2 582 2 403 4 167 4 621 2 697 4 647 2 219 2 751 10 311 2 90 4 622 2 486 2 410 4 589 3 92 2 630 2 337 4 42 2 541 4 178 2 418 2 201 2 72 2 493 3 
520 2 227 2 763 2 142 2 29 2 345 2 280 2 367 2 772 2 499 2 81 4 426 4 212 2 454 2 428 2 613 6 82 2 401 2 582 2 403 4 167 4 621 2 697 4 647 2 219 2 751 10 311 2 90 4 622 2 486 2 410 4 589 2 592 2 92 2 630 2 337 4 42 2 541 4 178 2 418 2 201 2 72 2 493 2 
520 2 227 2 763 2 142 2 29 2 345 2 280 2 367 2 772 2 499 2 81 4 426 4 212 2 454 2 428 2 613 6 82 2 401 2 582 2 403 4 167 4 621 2 697 4 647 2 219 2 751 10 311 2 90 4 622 2 486 2 410 4 589 2 592 2 92 2 630 2 337 4 42 2 541 4 178 2 418 2 201 2 72 2 493 2 
520 2 227 2 763 2 142 2 29 2 345 2 280 2 367 2 772 2 499 2 81 4 426 4 212 2 454 2 428 2 613 6 82 2 401 2 582 2 403 4 167 4 621 2 697 4 647 2 219 2 751 10 311 2 90 4 622 2 486 2 410 4 589 2 592 2 92 2 630 2 337 4 42 2 541 4 178 2 418 2 201 2 72 2 493 2 
520 2 227 2 763 2 142 2 29 4 345 4 280 2 367 2 772 2 499 2 81 4 426 4 212 2 454 2 428 2 613 6 82 2 401 2 582 2 403 4 167 4 621 2 697 4 647 2 219 2 751 10 311 2 90 4 622 2 486 2 410 4 589 2 592 4 92 2 630 2 337 4 42 2 541 4 178 2 418 2 201 2 72 2 493 2 
434 2 262 2 351 2 53 2 742 2 527 2 
434 2 765 2 320 2 116 2 317 2 111 2 700 2 
157 1 44 2 277 2 206 1 574 2 718 2 348 2 551 2 774 2 665 2 110 2 264 2 285 2 403 8 481 1 456 2 782 2 356 2 751 10 591 2 679 1 21 2 729 2 563 2 390 2 760 1 
227 2 763 6 228 4 322 2 142 6 29 2 184 2 345 2 426 16 641 2 401 6 582 6 403 6 86 2 406 4 697 4 751 6 532 2 169 2 311 6 752 2 592 3 315 2 42 6 438 2 541 12 95 2 707 2 318 2 201 6 
340 2 403 1 0 2 233 2 751 1 716 2 90 2 625 1 410 2 312 2 172 4 498 2 161 2 526 2 337 2 610 2 666 2 83 7 
340 2 0 2 233 2 716 2 90 2 410 2 312 4 172 4 498 2 161 2 526 4 337 2 610 4 666 2 83 6 
340 8 403 1 0 2 233 2 751 1 716 2 90 2 625 1 410 2 312 8 172 4 498 6 161 2 526 8 337 2 610 8 666 2 83 10 
0 2 233 2 716 2 90 2 410 2 312 2 172 2 161 2 526 2 337 2 610 2 666 2 83 2 
274 2 365 4 686 4 573 2 371 24 372 4 284 12 693 2 376 2 286 2 379 2 114 2 291 2 701 1 198 2 125 4 128 1 208 2 606 2 722 2 308 4 403 30 310 2 313 2 222 1 223 1 513 2 732 2 226 2 137 2 46 2 738 4 319 2 634 2 741 2 239 6 240 2 525 2 325 3 744 2 326 4 330 14 62 2 750 4 751 34 250 2 649 2 254 2 255 2 339 2 259 2 445 2 660 2 661 2 263 2 87 10 455 2 672 2 88 1 457 2 783 2 789 1 791 4 93 2 360 4 174 6 177 2 568 2 
738 2 319 2 686 2 127 2 660 2 371 8 239 2 240 2 208 2 283 2 525 2 306 2 284 6 33 2 722 2 744 2 308 6 403 14 87 2 330 6 750 2 751 14 783 2 310 2 649 2 789 2 93 2 360 2 174 2 25 2 226 2 
274 6 365 16 180 4 182 4 571 4 686 2 573 4 371 74 372 16 284 30 693 4 376 2 480 4 195 4 114 6 291 4 701 5 198 4 118 2 594 16 711 12 125 18 127 2 128 6 606 4 722 2 308 14 725 2 403 64 310 2 628 2 313 6 629 16 513 4 416 4 732 12 316 20 516 2 226 2 518 2 137 10 738 8 319 2 229 4 48 10 634 2 741 2 239 6 240 2 743 4 525 2 325 10 244 4 744 2 745 4 326 18 747 10 330 36 750 8 751 72 250 4 251 4 649 2 252 4 655 2 255 4 339 20 74 4 657 4 259 4 767 2 447 4 770 2 660 2 661 4 263 4 267 2 455 6 87 20 672 4 457 4 783 2 674 4 675 6 785 10 560 6 463 4 790 4 791 6 561 2 93 2 360 8 174 6 566 4 177 4 568 4 
365 2 738 4 319 2 259 2 686 2 573 2 127 2 660 2 186 2 371 18 208 1 128 2 239 2 240 2 372 2 525 3 325 2 284 8 722 2 744 2 308 13 267 2 403 18 455 2 87 6 330 8 62 2 750 4 457 2 751 20 783 2 310 2 649 2 628 2 313 2 789 2 93 2 120 2 360 4 174 2 255 2 339 2 226 2 137 2 
355 2 

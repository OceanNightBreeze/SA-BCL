#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR daikon.config.Configuration$ConfigException (291,316,336) (291,316,336) (291,316,336) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 178 524 156 519 404 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.IllegalArgumentException (273,514) (273,514) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V ERROR java.lang.ArrayIndexOutOfBoundsException (242,389,413,452,615) 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (139,171) (139,171) 506 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR utilMDE.Assert$AssertionException (139,171) (139,171) 506 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 315 315 432 (97,424) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 315 315 432 (97,424) (97,424) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 315 315 432 (97,424) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 119 256 461 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR java.lang.NullPointerException 319 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR java.lang.NullPointerException 319 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR java.lang.NullPointerException 319 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 319 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 319 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 24 441 488 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 260 548 24 441 488 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 24 441 488 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 24 441 488 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String; | RETURN | 2498 | return null
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaCharStream:readChar()C
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.Invariant:getConfidence()D
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:lt(II)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqual([II)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String; | CONSTANT | 11304 | 2 -> 0
utilMDE.MathMDE:pow(II)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:eltsLTE([II)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Debug:logOn()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:relate_var()V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.ModBitTracker:num_vars()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaCharStream:ReadByte()C
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.ValueTuple:size()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName; | RETURN | 27662 | return null
daikon.Quant:lexGT([I[I)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:new_ppt()V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | OPERATOR | 52438 | != -> >=
utilMDE.FuzzyFloat:gte(DD)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:eltsLT([II)Z
daikon.Quant:eltsLteIndex([I)Z | CONDITION | 178697 | if (x) -> if (!x)
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.ArraysMDE:sum([[I)I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V | ASSIGN | 1742 | = null
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.ProglangType:isScalar()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.PptSlice0:arity()I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:eq(II)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.ProglangType:isPseudoArray()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:setEqual([I[I)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.WeakHasherMap:processQueue()V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoAux:hashCode()I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:isReverse([I[I)Z
daikon.diff.Node:Node()V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:lexGTE([I[I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Ppt:Ppt()V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.ProglangType:dimensions()I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z | ASSIGN | 21165 | = null
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.ProglangType:isArray()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:eltsGteIndex([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | RETURN | 1719 | return null
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:lexLTE([I[I)Z
utilMDE.ArraysMDE:min([I)I
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.PptSlice1:arity()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quant:lte(II)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:justified()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:eltwiseLT([I)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:subsetOf([I[I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:memberOf(I[I)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.ArraysMDE:sum([D)D
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:element_range([I)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.Quant:setDiff([I[I)[I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:InvMap()V
daikon.Quant:memberOf(J[J)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.ModBitTracker:num_sets()I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:subsetOf([S[S)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.config.Configuration.ConfigException:ConfigException(Ljava.lang.String;Ljava.lang.Throwable;)V
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([D)[D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.MathMDE:sign(I)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | CONDITION | 281963 | if (x) -> if (!x)
daikon.Quant:ne(II)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:slice([III)[I
jtb.JavaParser:jj_ntk()I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:eltsGT([II)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:gte(II)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.Invariants:Invariants()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.MathMDE:modulus([I)[I
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern:internSubsequence([JII)[J
daikon.ProglangType:baseIsScalar()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE:gcd([I)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.ValueTuple:isMissing(I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:union([I[I)[I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:memberOf(S[S)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaCharStream:BeginToken()C
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE:negate(I)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 2461 | return null
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z | OPERATOR | 157882 | < -> >=
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:sameLength([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:eltwiseLTE([I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
457 2 363 2 417 2 73 2 369 4 139 2 86 2 372 2 171 2 
0 2 62 2 236 6 581 2 595 2 475 2 50 2 211 6 315 2 258 2 283 6 
101 6 166 6 26 4 573 2 201 6 139 2 171 2 269 4 289 2 21 2 84 2 135 2 121 6 
542 2 384 16 47 2 428 10 365 4 409 4 410 6 429 26 549 16 6 8 516 2 132 2 353 8 454 10 394 10 120 8 255 10 216 16 396 2 592 2 11 10 537 4 338 8 35 2 139 6 171 6 440 6 290 4 529 12 508 29 
163 6 60 4 
619 2 
164 2 547 2 168 2 430 2 52 4 279 2 318 2 516 2 517 2 481 2 590 4 554 2 198 2 559 2 199 2 139 4 171 4 172 2 203 2 564 2 359 2 565 2 113 2 368 2 332 2 608 4 536 2 299 2 453 2 31 2 334 2 32 2 499 2 500 2 74 2 457 2 183 2 422 4 423 2 221 2 186 2 466 2 187 2 270 2 
384 32 88 4 46 6 469 4 25 6 385 8 167 2 428 6 365 2 410 4 429 48 371 4 549 32 6 6 352 2 152 6 353 18 394 16 454 16 133 4 255 16 216 32 33 2 396 2 11 16 485 4 438 2 261 4 266 6 139 4 171 4 440 4 616 2 174 2 529 22 509 4 508 54 176 6 292 6 
96 2 525 2 368 2 
601 2 344 2 523 2 345 2 356 2 436 22 494 10 460 2 218 2 179 2 250 2 564 2 530 2 360 2 
384 2 208 2 428 4 365 2 224 2 410 2 429 4 249 2 549 2 331 2 353 2 394 2 454 2 255 2 216 2 11 2 558 2 78 2 40 2 505 2 529 2 508 6 85 2 
88 4 384 8 11 4 485 4 25 6 77 2 409 2 429 12 266 6 549 8 394 4 454 4 529 4 508 16 255 4 216 8 301 2 
44 4 271 2 177 2 130 62 470 4 427 10 209 2 67 4 386 2 411 2 226 2 368 8 430 4 28 14 497 2 550 2 317 2 535 2 96 2 72 2 479 2 455 2 499 2 99 2 100 2 259 10 458 4 355 4 525 6 157 4 422 4 618 4 582 2 600 2 620 2 143 4 566 4 465 4 361 2 324 4 
293 2 2 2 405 2 93 2 520 2 182 2 123 2 159 2 619 2 381 2 
313 2 316 2 191 2 435 2 56 2 194 2 195 1 320 2 487 4 287 2 202 1 139 22 288 6 171 20 109 2 144 2 291 2 175 2 531 4 148 2 403 2 64 2 65 2 295 1 572 2 366 2 210 2 117 2 213 2 30 1 417 2 153 2 254 2 336 2 76 2 378 2 614 4 502 2 219 2 307 2 462 2 126 6 463 4 341 2 539 2 584 2 129 2 
134 2 139 2 
362 2 322 2 139 4 
5 2 
541 2 274 2 404 2 532 2 513 2 178 2 447 2 27 6 329 2 519 2 375 2 521 2 10 2 156 2 524 2 124 2 560 2 598 2 141 6 239 6 467 2 61 2 
617 2 609 1 227 2 122 2 
419 2 227 2 
400 2 229 2 327 2 537 2 368 2 227 2 228 2 
400 2 243 2 227 2 
400 2 227 2 389 2 
617 2 280 2 515 2 
400 2 227 2 
92 2 515 2 
227 2 390 2 
617 2 412 2 515 2 
617 2 59 2 528 2 
617 2 367 2 492 2 
617 2 376 2 605 2 
617 2 114 2 83 2 
515 2 43 2 
414 2 227 2 
528 2 387 2 
621 2 492 2 
421 2 376 2 
89 2 83 2 
515 2 54 2 
83 2 335 2 
376 2 496 2 
190 2 
528 2 597 2 
617 2 412 2 515 2 4 2 
617 2 412 2 574 2 515 2 4 2 
617 2 244 2 515 2 
617 2 515 2 511 2 
23 2 205 2 241 2 490 2 
296 2 306 2 368 2 228 2 
327 2 296 2 306 2 368 2 583 2 228 2 
400 2 437 2 537 2 368 2 227 2 228 2 
187 2 612 2 
537 2 518 2 368 2 228 2 
376 2 526 2 
149 2 83 2 
528 2 189 2 
115 2 492 2 
83 2 95 2 492 2 
358 2 83 2 492 2 
83 2 492 2 162 2 
284 2 83 2 492 2 
273 2 514 2 368 2 228 2 433 2 268 6 19 2 142 2 
252 2 515 2 
413 4 615 2 15 2 589 2 452 2 242 2 444 2 
445 2 617 2 
194 2 
512 2 91 2 278 2 230 1 313 2 191 2 56 6 13 4 487 4 287 2 139 16 357 2 288 6 171 16 58 2 109 2 112 1 144 2 175 2 531 4 148 2 403 2 64 6 65 2 366 2 210 6 606 2 180 2 117 2 374 2 417 2 153 2 577 1 610 2 254 2 76 2 377 1 378 2 614 4 502 2 219 2 126 4 506 2 463 4 341 2 539 2 584 2 129 2 
512 2 91 2 278 2 313 2 191 2 56 6 13 4 487 4 287 2 139 16 357 2 288 6 171 16 58 2 109 2 144 2 175 2 531 4 148 2 403 2 64 6 65 2 366 2 210 6 606 2 180 2 117 2 374 2 213 2 417 2 153 2 610 2 254 2 76 2 378 2 614 4 502 2 219 2 307 2 126 6 506 2 463 4 341 2 539 2 584 2 129 2 
556 2 
391 2 37 2 
29 2 604 2 9 2 
29 2 604 2 9 2 
0 4 472 2 388 4 475 4 313 2 315 4 232 2 551 2 97 2 480 6 12 4 236 8 16 2 487 4 17 4 171 16 109 2 489 2 175 2 403 2 116 2 180 2 117 4 576 2 29 2 417 2 254 2 258 4 502 2 265 2 126 6 41 2 127 4 341 2 507 2 426 2 584 2 129 2 45 2 432 2 191 2 281 2 434 2 283 8 56 2 594 4 138 4 287 2 139 24 288 6 58 2 144 2 531 4 443 2 206 2 148 2 65 2 64 2 604 2 366 2 210 2 534 2 449 2 211 8 69 2 374 2 213 2 451 2 153 2 75 2 76 2 217 2 378 2 377 2 614 4 79 2 219 2 307 2 308 2 380 2 463 4 539 2 382 2 
45 2 472 2 593 2 246 2 285 2 79 2 534 2 37 2 219 2 139 4 38 2 171 2 117 2 380 2 170 2 382 2 128 2 
0 4 388 4 475 4 313 2 315 4 232 2 551 2 97 2 480 6 12 4 236 8 16 2 487 4 17 4 171 14 109 2 489 2 175 2 403 2 116 2 180 2 117 2 576 4 29 2 417 2 254 2 258 4 502 2 265 2 424 2 126 6 41 2 127 4 341 2 507 2 426 2 584 2 129 2 45 2 432 2 191 2 281 2 434 2 283 8 56 2 594 4 137 2 138 4 287 2 139 20 288 6 58 2 144 2 531 4 443 2 206 2 148 2 65 2 64 2 604 2 366 2 210 2 449 2 211 8 69 2 374 2 213 2 451 2 153 2 75 2 76 2 217 2 378 2 377 4 614 4 219 2 307 2 308 2 463 4 539 2 382 2 
0 4 472 2 388 4 475 4 313 2 315 4 232 2 551 2 97 2 480 6 12 4 236 8 16 2 487 4 17 4 171 16 109 2 489 2 175 2 403 2 116 2 180 2 117 4 576 2 29 2 417 2 254 2 258 4 502 2 265 2 126 6 41 2 127 4 341 2 507 2 426 2 584 2 129 2 45 2 432 2 191 2 281 2 434 2 283 8 56 2 594 4 138 4 287 2 139 24 288 6 58 2 144 2 531 4 443 2 206 2 148 2 65 2 64 2 604 2 366 2 210 2 534 2 449 2 211 8 69 2 374 2 213 2 451 2 153 2 75 2 76 2 217 2 378 2 377 2 614 4 79 2 219 2 307 2 308 2 380 2 463 4 539 2 382 2 
222 2 312 2 313 2 230 2 98 2 234 2 13 4 237 4 487 2 171 18 109 2 240 2 323 2 175 2 325 2 403 2 408 2 117 2 417 2 119 2 254 2 577 2 256 2 579 2 34 2 337 2 262 2 264 2 502 2 126 3 506 2 342 2 584 2 129 2 276 2 585 2 56 6 286 1 287 2 139 24 288 6 140 2 58 2 527 2 146 1 531 4 603 2 364 2 65 2 64 8 366 2 533 2 210 6 151 2 607 2 374 2 213 1 153 2 154 2 456 2 76 2 378 2 377 2 614 4 461 2 219 2 307 1 379 2 463 2 539 2 383 2 
64 2 210 2 370 2 230 3 231 2 118 1 577 3 354 4 418 2 56 2 483 2 13 2 557 3 377 3 184 2 501 2 321 6 139 2 267 2 171 2 42 2 506 2 220 2 464 2 442 2 
64 2 210 2 370 2 230 2 231 2 577 2 354 4 418 2 56 2 483 2 13 2 557 2 377 2 184 2 501 2 321 6 139 2 267 2 171 2 42 2 506 2 220 2 464 2 442 2 
64 2 210 2 370 2 230 2 231 2 577 2 354 4 418 2 56 2 483 2 13 2 557 2 377 2 184 2 501 2 321 6 139 2 267 2 171 2 42 2 506 2 220 2 464 2 442 2 
384 2 543 2 165 6 493 3 406 2 64 2 429 4 169 4 476 4 248 2 549 2 330 2 348 3 6 4 212 2 297 4 351 2 319 2 394 2 454 2 577 3 255 2 482 3 216 2 233 2 302 4 11 2 14 2 486 2 377 3 139 10 125 2 171 4 440 2 562 4 506 2 510 2 468 2 508 6 442 2 
384 2 543 2 165 6 493 2 406 2 64 2 429 4 169 4 476 4 248 2 549 2 330 2 348 2 6 4 212 2 297 4 351 2 319 2 353 2 394 2 454 2 577 2 255 2 482 2 216 2 233 2 396 2 302 4 11 2 14 2 486 2 377 2 139 10 125 2 171 4 440 2 562 4 506 2 529 2 510 2 468 2 508 4 442 2 
384 2 543 2 165 6 493 2 406 2 64 2 429 4 169 4 476 4 248 2 549 2 330 2 348 2 6 4 212 2 297 4 351 2 319 2 353 2 394 2 454 2 577 2 255 2 482 2 216 2 233 2 396 2 302 4 11 2 14 2 486 2 377 2 139 10 125 2 171 4 440 2 562 4 506 2 529 2 510 2 468 2 508 4 442 2 
384 2 543 2 165 6 493 2 406 2 64 2 429 4 169 4 476 4 248 2 549 2 330 2 348 2 6 4 212 2 297 4 351 2 319 2 353 2 394 2 454 2 577 2 255 2 482 2 216 2 233 2 396 2 302 4 11 2 14 2 486 2 377 2 139 10 125 2 171 4 440 2 562 4 506 2 529 2 510 2 468 2 508 4 442 2 
384 2 543 2 165 6 493 2 406 2 64 2 429 4 169 4 476 4 248 2 549 2 330 2 348 2 6 4 212 2 297 4 351 2 319 2 353 4 394 2 454 2 577 2 255 2 482 2 216 2 233 2 396 4 302 4 11 2 14 2 486 2 377 2 139 10 125 2 171 4 440 2 562 4 506 2 529 4 510 2 468 2 508 4 442 2 
82 2 197 2 188 2 8 2 459 2 225 2 
251 2 326 2 225 2 200 2 491 2 586 2 439 2 
147 2 309 2 544 2 310 2 49 2 497 1 431 1 450 2 214 2 611 1 99 1 155 2 136 2 235 2 555 2 580 2 502 2 538 2 139 10 80 2 171 8 204 2 81 1 238 2 22 2 145 2 
384 6 88 2 568 2 385 2 429 12 168 2 549 6 332 2 6 4 152 4 353 2 298 2 133 2 454 6 394 6 255 6 216 6 396 2 11 6 266 4 139 6 503 2 171 6 440 2 110 2 599 2 20 2 425 2 529 3 508 16 
272 1 473 7 48 2 339 2 158 2 340 2 139 1 169 2 171 1 18 2 314 2 399 2 562 2 297 2 588 2 253 2 193 4 55 2 
473 6 48 2 339 4 158 2 340 2 169 2 18 4 314 2 399 2 562 2 297 2 588 4 253 2 193 4 55 2 
272 1 473 10 48 8 339 8 158 2 340 6 139 1 169 2 171 1 18 8 314 2 399 2 562 2 297 2 588 8 253 2 193 4 55 2 
473 2 339 2 158 2 169 2 18 2 314 2 399 2 562 2 297 2 588 2 253 2 193 2 55 2 
1 12 90 6 223 16 3 4 311 4 546 20 548 20 477 4 478 2 7 4 392 4 552 8 393 4 553 10 484 4 395 4 397 4 103 2 104 4 487 28 106 4 488 2 107 2 108 2 171 62 561 6 398 4 563 8 111 4 173 18 24 2 401 2 402 6 407 8 571 4 245 4 247 2 495 4 328 6 575 4 333 10 415 6 416 2 498 2 578 16 257 6 420 2 260 2 36 4 185 6 504 2 39 20 126 70 343 4 275 2 277 4 346 4 131 4 347 2 51 2 587 4 349 4 350 4 192 10 282 2 53 4 522 4 591 4 196 4 57 18 139 70 441 2 602 2 207 16 63 1 446 2 150 10 65 2 366 6 448 2 68 4 373 4 213 14 70 6 71 6 300 2 215 4 613 11 76 6 303 4 304 4 305 12 307 14 463 34 160 2 87 4 161 2 
24 2 207 12 294 2 402 2 65 2 407 4 245 2 366 2 247 2 546 6 548 2 415 2 213 4 349 2 392 2 416 2 552 4 192 2 300 2 282 2 257 2 591 2 613 2 76 2 260 2 103 2 304 2 263 2 105 2 487 6 139 18 488 2 107 2 307 4 171 16 504 2 563 4 126 18 463 6 441 2 161 2 
471 2 346 2 94 2 546 10 474 2 548 2 478 2 349 2 392 2 552 4 192 2 393 2 282 2 53 2 395 2 591 2 484 2 397 2 57 4 105 2 487 10 488 2 139 32 171 28 561 2 563 4 111 2 441 2 173 4 24 2 567 2 207 4 402 2 569 1 446 2 570 2 407 4 65 4 66 1 245 2 247 2 366 6 448 2 373 2 415 2 213 6 70 2 416 2 71 4 257 1 613 2 303 2 76 6 304 2 305 2 36 2 307 6 504 2 126 24 463 12 160 2 161 2 87 2 
24 2 207 4 407 2 65 2 545 2 366 2 247 2 546 2 213 4 416 2 552 2 300 2 282 2 181 2 102 2 76 2 487 4 139 12 488 2 107 2 307 4 171 12 504 2 563 2 126 10 463 4 441 2 540 2 161 2 
596 2 

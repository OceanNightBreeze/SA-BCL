#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException 325 501 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V ERROR java.lang.IllegalArgumentException (91,348,353,405,412,438,530) 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 43 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR utilMDE.Assert$AssertionException (162,515) (162,515) (105,541,556) (105,541,556) (105,541,556) 
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 189 379 234 145 394 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (382,441) (382,441) 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 257 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 257 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (162,515) 361 429 462 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V ERROR java.lang.NullPointerException 
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V ERROR java.lang.NullPointerException 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 524 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 281 458 437 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.PptSlice1:arity()I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaCharStream:backup(I)V
daikon.inv.Invariant:prob_and(DD)D
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:isReverse([I[I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:eq(II)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONSTANT | 14703 | 0 -> 1
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.RootNode:RootNode()V
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:min([I)I
utilMDE.MathMDE:gcd(JJ)J
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:lt(II)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:size()I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.ProglangType:isArray()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:arity()I
utilMDE.Intern:intern([I)[I | ASSIGN | 15925 | = null
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltwiseGTE([I)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:sameLength([I[I)Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | ASSIGN | 120949 | = null
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.ProglangType:dimensions()I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:jj_ntk()I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.Quant:memberOf(S[S)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:negate(I)I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoAux:hashCode()I
daikon.Quant:subsetOf([F[F)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:justified()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | OPERATOR | 52438 | != -> >=
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:subsetOf([B[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.MathMDE:pow(II)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.ProglangType:isScalar()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext2()V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.ModBitTracker:num_samples()I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow_fast(II)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:setDiff([I[I)[I
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:ne(II)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([J)Z | ASSIGN | 58337 | = null
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lte(II)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.diff.Node:Node()V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Ppt:Ppt()V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:sum([I)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.Quant:memberOf(I[I)Z
daikon.Quant:memberOf(F[F)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName:hashCode()I
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eltsNotEqual([II)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:gte(II)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.PptSlice2:arity()I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.ProglangType:isPseudoArray()Z
daikon.ModBitTracker:split(I)I
utilMDE.Intern:intern([J)[J
daikon.Quant:eltsLTE([II)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant; | RETURN | 65371 | return null
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Debug:logOn()Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsLT([II)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String; | RETURN | 50824 | return null
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_vars()I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:eq(JJ)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.WeakHasherMap:size()I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode; | RETURN | 21283 | return null
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object; | CONDITION | 21221 | if (x) -> if (!x)
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 184000 | = null
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.Quant:union([I[I)[I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(J[J)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
jtb.JavaCharStream:readChar()C
daikon.test.InvariantFormatTester:execute()Z | ASSIGN | 8797 | = null
jtb.JavaCharStream:BeginToken()C
utilMDE.MathMDE:gcd(II)I | CONDITION | 4310 | if (x) -> if (!x)
daikon.inv.Invariant:logOn()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.ArraysMDE:sum([D)D
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:setEqual([I[I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.UtilMDE:join([Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern:internSubsequence([III)[I | ASSIGN | 22726 | = null
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:element_range([I)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Quant:eltsGTE([II)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.UtilMDE:joinLines([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:eltsGT([II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V | ASSIGN | 5075 | = null
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.ProglangType:isIntegral()Z
daikon.VarInfo:relate_var()V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.MathMDE:sign(I)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:baseIsIntegral()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:noDups([I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:eq(FF)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.Intern:numIntArrays()I
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quant:eltsLtIndex([I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
476 4 119 2 531 2 321 2 162 2 572 2 151 2 27 2 515 2 
498 2 80 2 582 2 183 2 12 2 197 2 287 2 180 2 222 6 442 6 102 6 
196 2 226 4 168 6 14 6 515 2 525 2 66 4 210 2 162 2 591 2 76 2 580 6 416 6 
501 2 285 4 515 2 129 2 275 2 91 2 517 2 518 2 162 2 562 2 37 4 221 2 325 2 126 2 540 2 
118 6 479 4 
233 2 
543 2 140 2 61 2 82 4 304 2 3 2 303 2 27 2 44 2 87 2 478 2 391 2 247 2 224 2 613 2 228 2 373 2 268 2 123 2 422 2 505 2 191 2 60 2 
405 2 195 4 129 10 515 4 412 8 438 2 517 4 518 4 162 4 562 12 221 4 326 2 185 4 530 4 285 6 37 6 126 6 299 6 38 4 212 2 
619 2 318 2 60 2 
70 2 317 10 446 2 500 2 617 2 492 22 64 2 472 2 563 2 506 2 380 2 192 2 579 2 236 2 
158 2 510 2 174 2 360 2 432 2 217 2 130 2 611 2 481 2 
405 4 195 4 285 8 129 12 275 2 574 6 590 2 449 2 518 4 517 4 562 15 348 4 37 8 221 4 126 8 185 6 38 4 
464 2 171 2 232 2 564 2 203 2 549 2 
113 2 43 2 97 2 284 2 115 2 146 2 137 2 242 2 233 2 138 2 235 2 
0 2 79 2 215 2 545 2 548 2 515 22 343 2 117 2 589 2 347 2 310 2 147 2 396 2 11 2 357 2 556 2 273 2 90 2 54 2 55 6 558 2 237 2 600 2 559 2 321 2 322 2 162 20 324 4 527 2 204 2 34 2 616 4 330 2 419 2 105 2 535 2 136 4 74 2 423 4 252 2 298 6 541 2 578 2 
108 2 515 2 
5 2 19 2 515 4 
409 2 
385 6 431 2 178 2 83 2 145 2 477 2 394 2 371 2 593 2 461 6 497 2 208 2 153 6 189 2 463 2 18 2 359 2 154 2 35 2 379 2 234 2 469 2 
289 1 39 2 112 2 211 2 
39 2 312 2 
607 2 313 2 39 2 239 2 514 2 325 2 60 2 
313 2 39 2 480 2 
313 2 39 2 533 2 
112 2 23 2 260 2 
313 2 39 2 
190 2 260 2 
39 2 331 2 
112 2 456 2 260 2 
112 2 337 2 92 2 
278 2 112 2 270 2 
112 2 280 2 426 2 
112 2 596 2 65 2 
107 2 260 2 
39 2 16 2 
120 2 337 2 
502 2 270 2 
570 2 280 2 
94 2 65 2 
308 2 260 2 
184 2 65 2 
280 2 528 2 
451 2 270 2 
621 2 337 2 
345 2 112 2 456 2 260 2 
345 2 489 2 112 2 456 2 260 2 
112 2 586 2 260 2 
112 2 169 2 260 2 
214 2 428 2 160 2 455 2 
607 2 78 2 143 2 60 2 
607 2 78 2 143 2 514 2 60 2 447 2 
607 2 313 2 39 2 325 2 245 2 60 2 
598 2 391 2 
607 2 31 2 325 2 60 2 
280 2 536 2 
507 2 65 2 
367 2 337 2 
354 2 270 2 
72 2 270 2 65 2 
603 2 270 2 65 2 
270 2 246 2 65 2 
388 2 270 2 65 2 
553 2 128 2 607 2 441 6 60 2 382 2 
567 2 260 2 
194 2 459 2 157 2 615 4 452 2 492 6 141 2 585 2 314 2 608 2 182 2 20 2 164 4 378 2 323 2 440 2 425 2 156 2 
112 2 2 2 
343 2 
0 2 257 2 215 6 545 2 473 2 515 16 387 3 117 2 589 6 310 2 147 2 7 2 396 2 9 2 11 2 355 2 357 2 273 2 90 2 54 2 55 4 124 3 521 3 231 2 558 6 237 2 600 2 559 2 321 2 162 16 244 3 457 2 324 4 527 2 33 4 616 4 330 2 419 2 503 2 535 2 376 2 136 4 74 2 423 4 575 2 252 2 298 6 578 2 
0 2 257 2 215 6 545 2 548 2 473 2 515 16 387 2 117 2 589 6 310 2 147 2 7 2 396 2 9 2 11 2 355 2 357 2 273 2 90 2 54 2 55 6 124 2 521 2 231 2 558 6 237 2 600 2 559 2 321 2 322 2 162 16 244 2 457 2 324 4 527 2 33 4 616 4 330 2 419 2 503 2 535 2 376 2 136 4 74 2 423 4 575 2 252 2 298 6 578 2 
496 2 
172 2 358 2 
256 2 450 2 258 2 
256 2 450 2 258 2 
0 2 80 4 215 2 545 2 216 2 548 2 473 2 475 2 4 2 550 4 86 2 310 2 147 2 552 2 222 12 223 6 396 2 9 6 398 2 11 2 13 2 401 2 90 2 230 2 315 2 558 2 237 2 238 2 490 1 406 4 491 2 408 2 559 2 96 4 99 4 493 2 321 2 162 16 322 2 244 2 324 4 102 12 104 2 498 4 330 2 419 2 250 4 423 4 252 2 575 2 253 2 254 2 509 1 578 2 581 2 256 2 111 4 511 4 582 4 258 4 115 1 515 24 180 4 117 2 344 4 589 2 183 4 350 2 50 2 442 16 444 2 51 2 188 2 267 2 269 4 357 4 273 2 54 2 55 6 57 2 522 4 450 6 58 2 600 2 454 2 63 2 199 2 610 2 201 4 202 2 132 4 527 2 369 2 370 4 283 2 616 4 284 1 207 2 535 2 287 4 134 2 136 4 74 2 465 2 466 4 294 2 467 6 298 6 
51 2 408 2 266 2 188 2 602 2 249 2 340 2 515 4 357 2 306 2 90 2 86 2 465 2 162 2 172 2 520 2 581 2 
0 2 215 2 545 2 548 2 258 2 473 2 515 14 117 2 589 2 310 2 436 2 147 2 396 2 9 2 11 2 357 2 273 2 90 2 54 2 315 2 55 6 558 2 237 2 491 2 406 4 600 2 559 2 63 2 411 2 321 2 322 2 162 14 244 4 202 4 324 4 527 2 104 2 616 4 330 2 419 2 207 2 535 2 134 2 136 4 74 2 423 4 575 2 252 2 298 6 578 2 
0 2 80 4 215 2 545 2 216 2 548 2 473 2 475 2 4 2 550 4 86 2 310 2 147 2 552 2 222 12 223 6 396 2 9 6 398 2 10 2 11 2 401 2 90 2 230 2 315 2 558 2 237 2 238 2 406 4 491 2 408 2 559 2 96 4 99 4 493 2 321 2 162 16 322 2 243 2 244 2 324 4 102 12 104 2 498 4 330 2 419 2 250 4 423 4 252 2 575 2 253 2 578 2 581 2 256 2 111 4 511 4 582 4 258 4 515 24 180 4 117 2 344 4 589 2 183 4 350 2 50 2 442 16 444 4 51 2 188 2 267 2 269 4 357 4 273 2 54 2 55 6 57 2 522 4 450 6 58 2 277 2 600 2 454 2 63 2 198 2 610 2 365 2 201 4 202 2 132 4 366 2 527 2 369 2 370 4 616 4 207 2 535 2 287 4 134 2 136 4 74 2 465 2 466 4 294 2 467 6 298 6 
0 2 173 2 383 2 429 2 215 6 545 2 548 1 473 2 515 24 218 1 387 2 117 2 116 2 589 8 181 2 147 2 148 2 482 2 9 2 11 2 53 2 355 2 357 2 273 2 90 2 54 2 55 3 124 2 599 2 403 2 558 6 193 2 600 2 559 2 410 2 361 2 67 1 321 2 68 2 322 1 162 18 244 2 324 2 565 2 33 4 460 2 417 2 166 2 103 2 34 2 616 2 462 2 71 2 330 2 419 2 375 2 504 2 535 2 377 2 136 4 290 2 74 2 423 4 252 2 36 2 298 6 578 2 
33 2 279 2 159 2 532 2 215 2 355 2 515 2 288 3 387 3 589 2 124 3 162 2 244 3 558 2 21 2 
33 2 279 2 159 2 532 2 215 2 355 2 515 2 288 2 387 2 589 2 124 2 162 2 244 2 558 2 21 2 
33 2 279 2 159 2 532 2 215 2 355 2 515 2 288 2 387 2 589 2 124 2 162 2 244 2 558 2 21 2 
195 2 512 2 129 4 515 4 387 3 589 2 560 2 518 2 517 2 562 5 162 2 219 2 244 3 221 2 393 3 351 2 532 2 88 2 353 2 355 2 285 2 618 3 271 2 56 2 292 4 577 3 37 2 381 2 126 2 38 1 
512 2 129 2 515 4 387 2 589 2 560 2 562 2 162 2 219 2 244 2 393 2 326 2 351 2 532 2 88 2 353 2 355 2 285 2 618 2 271 2 272 2 56 2 292 2 577 2 37 2 381 2 126 2 38 2 
195 2 512 2 129 4 515 4 387 2 589 2 560 2 518 2 517 2 562 4 162 2 219 2 244 2 221 2 393 2 351 2 532 2 88 2 353 2 355 2 285 2 618 2 271 2 56 2 292 4 577 2 37 2 381 2 126 2 
195 2 512 2 129 4 515 4 387 2 589 2 560 2 518 2 517 2 562 4 162 2 219 2 244 2 221 2 393 2 351 2 532 2 88 2 353 2 355 2 285 2 618 2 271 2 56 2 292 4 577 2 37 2 381 2 126 2 
195 2 512 2 129 4 515 4 387 2 589 2 560 2 518 2 517 2 562 4 162 2 219 2 244 2 221 2 393 2 326 4 351 2 532 2 88 2 353 2 355 2 285 2 618 2 271 2 272 4 56 2 292 4 577 2 37 2 381 2 126 2 38 4 
127 2 150 2 62 2 374 2 106 2 22 2 
346 2 395 2 127 2 537 2 363 2 48 2 539 2 
427 2 41 2 341 2 515 10 261 2 262 2 117 2 516 2 413 2 45 1 162 8 203 1 368 2 328 2 612 2 225 2 445 2 352 2 418 2 167 2 133 2 135 1 334 1 209 2 232 1 77 2 
8 2 195 2 399 2 285 2 129 4 574 4 518 2 517 2 364 2 562 5 348 2 221 2 37 2 126 2 524 2 
529 2 206 2 499 2 534 2 300 2 547 2 515 1 305 2 356 2 309 2 332 2 162 1 131 2 46 4 336 1 526 2 296 2 508 7 
529 4 206 2 499 2 534 2 300 4 547 4 305 2 356 2 309 2 332 2 131 2 46 4 526 2 296 2 508 6 
529 8 206 2 499 8 534 6 300 8 547 8 515 1 305 2 356 2 309 2 332 2 162 1 131 2 46 4 336 1 526 2 296 2 508 10 
529 2 206 2 300 2 547 2 305 2 356 2 309 2 332 2 131 2 46 2 526 2 296 2 508 2 
0 10 384 12 81 42 471 6 1 4 142 12 544 4 546 2 548 20 302 4 474 6 144 6 84 2 390 2 392 4 227 4 89 4 400 2 554 4 15 6 485 4 17 2 316 6 488 2 93 6 25 6 26 6 28 2 319 12 29 4 30 6 161 12 162 78 322 20 101 22 324 42 494 3 495 6 566 6 327 6 32 4 165 2 568 6 571 1 420 12 333 1 573 2 252 4 170 6 424 1 40 6 42 4 584 2 583 2 176 6 177 2 114 6 515 90 259 6 179 6 437 2 439 13 519 6 592 4 187 2 49 2 443 12 264 2 52 2 594 6 121 2 55 88 597 6 448 12 523 2 125 6 601 6 453 6 605 1 362 2 281 2 69 6 458 2 205 6 372 2 616 36 73 12 74 10 620 6 75 6 538 12 295 2 468 8 297 6 139 6 
213 2 0 2 339 6 513 4 470 2 81 6 430 2 584 2 142 4 342 2 515 46 433 2 179 2 434 2 386 2 435 2 307 2 551 2 437 2 439 2 6 2 263 2 220 4 47 2 519 2 149 2 592 38 397 2 52 2 152 2 483 2 555 2 402 2 15 2 122 2 484 2 229 2 17 2 486 2 55 42 523 2 276 4 59 2 155 2 404 2 95 2 240 2 24 2 241 2 604 2 605 2 362 4 606 2 100 2 281 2 282 2 561 2 414 2 319 4 320 2 30 2 161 4 163 2 162 44 200 2 324 20 458 2 566 2 329 2 248 2 568 2 205 2 614 2 569 2 616 20 420 2 74 2 251 2 620 2 170 2 293 4 335 2 252 2 576 2 538 2 295 2 468 6 297 2 139 2 338 2 
0 6 384 24 81 24 471 8 1 4 544 4 142 10 301 2 548 30 302 4 474 16 84 4 144 4 307 10 85 8 311 16 389 8 392 4 227 4 89 4 400 4 554 4 152 2 15 4 485 4 229 10 17 2 316 4 407 4 95 2 25 4 26 4 319 10 414 2 29 4 30 4 161 10 101 30 162 70 322 28 324 44 494 8 32 4 415 8 566 4 327 4 165 2 568 4 420 6 421 32 573 2 252 2 170 4 255 4 110 2 40 4 175 2 42 4 583 2 584 2 177 4 176 4 114 4 342 2 515 78 587 2 259 4 179 4 588 2 437 2 439 10 349 4 519 4 592 14 49 2 443 14 265 4 594 4 595 16 274 8 55 104 597 4 448 8 523 2 125 4 59 10 601 8 362 2 281 2 609 2 69 4 458 2 205 4 372 2 616 36 73 24 286 4 74 6 291 4 620 4 75 4 538 10 295 2 468 6 297 4 139 6 542 4 
0 2 81 8 584 2 142 6 177 4 548 12 342 2 515 28 179 2 84 2 437 2 390 2 439 2 519 4 186 2 592 14 49 2 187 2 400 2 15 4 17 2 55 40 487 2 523 2 488 10 24 2 98 2 605 2 362 2 28 2 281 2 414 2 319 6 30 4 161 6 322 12 162 26 101 6 324 14 494 6 458 2 566 4 205 4 568 2 616 14 569 2 571 2 420 2 333 2 74 2 620 4 170 2 252 2 538 2 109 2 295 2 468 4 297 2 139 2 
557 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR java.lang.NullPointerException 199 
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 531 
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.NullPointerException 
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 520 582 314 559 292 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 474 73 113 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 474 73 113 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 432 384 289 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 149 
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 649 500 421 181 
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 101 (92,219,221,228,319,356,447,528,578,629) 121 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V ERROR java.lang.Error 416 576 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V ERROR java.lang.Error 416 576 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V ERROR java.lang.Error 416 576 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V ERROR java.lang.Error 416 576 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 164 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 164 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 164 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 164 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.PptSlice1:arity()I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLTE([I)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:lexEqual([I[I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.InvMap:InvMap()V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Ppt:Ppt()V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfo:new_ppt()V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.PptSlice1:num_samples()I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:noDups([I)Z
daikon.Quant:lexGTE([I[I)Z
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:eltsLT([II)Z
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:relate_var()V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:size()I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo; | ASSIGN | 21839 | = null
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsGT([II)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE:gcd([I)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quant:subsetOf([B[I)Z | CONDITION | 29819 | if (x) -> if (!x)
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.MathMDE:pow_fast(II)I
daikon.ProglangType:dimensions()I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:eltsLTE([II)Z
utilMDE.MathMDE:negate(I)I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.ArraysMDE:sum([D)D
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 1551 | = null
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.ProglangType:isPseudoArray()Z
utilMDE.ArraysMDE:sum([[I)I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:indexOf([I[I)I | CONSTANT | 22394 | 0 -> 1
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object; | ASSIGN | 13809 | = null
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.ArraysMDE:min([I)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Debug:logOn()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.Quant:lexLTE([I[I)Z | CONDITION | 171995 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | CONSTANT | 15367 | 1 -> 0
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.Intern:intern([I)[I
utilMDE.ArraysMDE:sum([I)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern:intern([D)[D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:sameLength([I[I)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:eltsEqual([II)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.MathMDE:sign(I)I
daikon.Quant:pairwiseLT([I[I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.MathMDE:mod_positive(II)I
daikon.ProglangType:baseIsScalar()Z
daikon.inv.Invariant:justified()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.ProglangType:isIntegral()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | RETURN | 1924 | return null
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaCharStream:backup(I)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptSlice0:arity()I
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGTE([II)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.Node:Node()V
daikon.Quant:slice([III)[I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:union([I[I)[I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:lt(II)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:logDetail()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z | CONDITION | 4097 | if (x) -> if (!x)
daikon.Quant:eltsLteIndex([I)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1057 | = null
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.Invariant:logOn()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.PptSlice2:arity()I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarComparabilityImplicit:toString()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:ne(II)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:FillBuff()V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String; | ASSIGN | 19813 | = null
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:setDiff([I[I)[I
daikon.ProglangType:isScalar()Z
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z | ASSIGN | 8607 | = null
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.ProglangType:baseIsIntegral()Z
utilMDE.WeakHasherMap:processQueue()V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:memberOf(I[I)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | CONSTANT | 51514 | 3 -> 0
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18577 | 0 -> -1
daikon.Quant:intersection([I[I)[I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:eltsLtIndex([I)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:BeginToken()C
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | STATEMENT | 19526 | stmt -> ;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.JavaParser:jj_ntk()I
daikon.Quant:lexGT([I[I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:lexLT([I[I)Z
daikon.Quant:lte(II)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:isReverse([I[I)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariants:Invariants()V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.PptSlice0:initInvariantsSeen()V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Quant:gte(II)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:eq(II)Z
daikon.ProglangType:isArray()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:max([I)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Debug:logDetail()Z
daikon.ValueTuple:size()I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
206 2 243 2 462 2 286 2 231 2 13 2 240 2 108 2 565 4 
409 6 515 2 624 6 380 2 524 2 573 2 395 2 163 6 180 2 309 2 117 2 
15 2 23 4 78 2 212 2 589 2 3 2 199 2 415 2 111 2 
136 16 294 8 315 8 92 6 50 10 159 2 221 6 535 30 360 4 75 10 98 4 185 2 227 4 13 6 232 10 489 10 450 8 562 10 101 16 170 4 647 26 40 2 454 2 307 8 237 2 308 12 286 6 564 2 458 2 590 16 
632 4 249 6 
645 2 
136 2 418 2 265 2 502 2 315 2 296 2 50 4 221 2 535 6 506 2 75 2 360 2 362 2 232 2 489 2 562 2 101 2 325 2 647 4 308 2 104 2 590 2 371 2 
227 2 136 8 232 4 489 4 583 6 562 4 101 8 647 12 525 6 308 5 477 2 319 4 19 2 535 14 590 8 75 4 578 4 
122 2 531 2 155 2 280 2 463 2 147 2 646 6 273 2 359 2 316 2 
557 2 89 2 546 2 244 2 642 2 177 2 645 2 234 2 169 2 327 2 
351 2 207 2 435 2 410 2 129 2 465 2 150 2 209 2 40 2 492 2 160 2 222 2 172 2 468 2 455 2 174 2 95 4 20 2 639 2 
136 32 176 2 356 2 294 6 219 8 442 6 315 16 92 4 50 6 221 4 403 2 319 4 535 51 360 2 447 4 75 18 578 4 228 4 619 4 449 6 13 4 366 2 232 18 489 18 562 14 583 6 101 32 647 46 629 4 151 4 454 2 525 6 326 2 308 18 107 6 286 4 528 4 590 32 
526 2 435 2 21 2 
125 2 208 2 45 2 4 22 218 2 188 2 178 2 490 2 49 2 130 2 358 2 116 10 517 2 97 2 
1 2 497 4 261 2 175 2 262 1 357 1 90 2 420 2 6 2 182 4 575 2 8 6 9 2 183 3 579 2 580 2 186 3 426 2 187 2 13 34 281 16 427 2 284 2 100 2 16 2 584 2 102 2 105 2 286 32 17 1 587 3 588 2 433 2 191 1 434 2 287 1 592 1 113 2 24 2 372 2 293 1 195 2 595 2 440 1 198 2 28 1 27 1 201 2 443 2 597 2 375 2 376 2 118 2 516 1 600 2 298 16 205 2 123 24 206 2 601 2 35 2 518 2 519 2 128 16 521 2 605 2 131 2 606 4 211 5 607 2 456 1 529 24 134 4 213 2 459 2 137 4 610 2 461 2 464 3 313 3 467 3 47 6 140 4 142 2 52 2 318 2 54 2 225 2 469 2 615 2 320 2 55 2 620 2 323 3 538 1 230 2 539 1 540 2 471 8 57 2 472 1 628 2 60 2 236 32 152 2 238 2 544 8 64 3 397 12 67 2 545 2 398 2 68 2 548 2 157 3 550 1 401 2 333 2 70 2 636 16 552 2 406 2 248 2 407 2 638 2 165 6 336 12 250 2 252 2 340 2 641 3 643 2 254 2 81 2 488 32 344 2 411 8 256 3 83 2 84 2 561 2 346 2 491 3 412 2 650 4 260 2 348 6 414 4 349 2 
153 2 
13 2 335 2 
290 2 13 4 554 2 
509 8 363 8 292 2 126 2 487 2 331 2 480 8 26 2 603 2 559 2 520 2 314 2 582 2 441 2 5 2 481 2 297 2 551 2 270 2 483 2 18 2 44 2 
569 2 635 2 246 2 408 1 
272 2 635 2 
170 2 532 2 511 2 435 2 513 2 635 2 572 2 
511 2 473 2 635 2 
285 2 511 2 635 2 
574 2 438 2 246 2 
511 2 635 2 
268 2 438 2 
635 2 110 2 
581 2 438 2 246 2 
622 2 274 2 246 2 
423 2 536 2 246 2 
25 2 571 2 246 2 
386 2 133 2 246 2 
618 2 438 2 
217 2 635 2 
622 2 14 2 
29 2 423 2 
571 2 599 2 
386 2 445 2 
438 2 233 2 
386 2 512 2 
478 2 571 2 
417 2 423 2 
542 2 622 2 
581 2 31 2 438 2 246 2 
581 2 31 2 438 2 96 2 246 2 
438 2 246 2 634 2 
438 2 109 2 246 2 
338 2 115 2 563 2 507 2 
144 2 
567 2 246 2 
435 2 203 2 431 2 572 2 
383 2 435 2 203 2 431 2 513 2 572 2 
170 2 460 2 511 2 435 2 635 2 572 2 
85 2 382 2 
170 2 435 2 370 2 572 2 
114 2 571 2 
386 2 361 2 
622 2 91 2 
423 2 154 2 
386 2 423 2 570 2 
215 2 
386 2 423 2 560 2 
86 2 386 2 423 2 
435 2 596 2 572 2 253 2 343 6 367 2 514 2 530 6 
504 2 438 2 
248 2 
1 2 261 2 2 2 461 6 355 2 47 6 140 4 318 2 225 2 575 2 9 2 508 4 579 2 392 2 580 2 620 2 187 2 13 14 57 2 16 2 102 2 152 2 474 2 286 14 113 2 545 2 67 2 440 2 595 2 443 2 202 2 73 2 298 6 206 2 340 2 488 6 561 2 650 4 606 4 348 4 213 2 414 4 
1 2 261 2 2 2 461 6 355 2 90 1 47 6 140 4 318 2 225 2 575 2 9 2 508 4 579 2 392 2 580 2 620 2 187 2 13 14 57 2 16 2 102 2 152 2 474 2 286 14 113 2 545 2 67 2 440 2 595 2 443 2 202 2 73 2 298 6 206 2 340 2 488 6 84 1 561 2 650 4 606 4 348 5 213 2 414 4 
127 2 
482 2 354 2 
537 2 291 2 409 2 624 2 38 2 58 2 380 2 413 2 573 2 7 2 87 4 72 2 598 2 637 2 369 4 347 2 424 2 135 2 
350 2 1 2 47 4 533 6 419 4 573 4 269 2 7 2 180 2 94 2 424 2 226 2 275 2 537 2 580 2 12 2 13 12 624 4 283 2 59 2 58 4 627 2 586 2 152 2 286 6 543 2 369 4 633 2 545 2 291 2 196 2 595 2 332 2 163 6 402 4 553 2 72 2 637 2 598 2 484 2 555 4 117 2 448 2 340 2 409 6 80 2 79 2 82 2 644 4 38 2 380 4 561 2 452 2 413 2 650 2 606 2 87 4 347 2 494 4 135 2 
350 2 1 2 47 4 533 6 419 4 573 4 269 2 7 2 180 2 94 2 424 2 226 2 275 2 537 2 580 2 12 2 13 12 624 6 283 2 59 2 58 4 627 2 586 2 152 2 286 6 543 2 369 4 633 2 545 2 291 2 196 2 595 2 332 2 163 6 402 4 553 2 72 2 637 2 598 2 484 2 555 4 448 2 340 2 409 4 80 2 79 2 82 2 644 4 38 2 380 4 561 2 452 2 413 2 650 2 606 2 87 4 309 2 347 2 494 4 135 2 
350 2 1 2 47 4 533 6 419 4 573 4 269 2 7 2 180 2 94 2 424 2 226 2 275 2 537 2 580 2 12 2 13 12 624 6 283 2 59 2 58 4 627 2 395 2 586 2 152 2 286 6 543 2 369 4 633 2 545 2 291 2 196 2 595 2 332 2 163 6 402 4 553 2 72 2 637 2 598 2 484 2 555 8 448 2 340 2 409 6 80 2 79 2 82 2 644 4 38 2 380 4 561 2 452 2 413 2 650 2 606 2 87 4 347 2 494 4 135 2 
350 2 1 2 47 4 533 10 419 4 573 4 269 2 7 2 180 2 94 2 424 2 226 2 275 2 537 2 580 2 12 2 13 12 624 8 283 2 59 2 58 4 627 2 395 2 586 2 152 2 286 6 543 2 369 4 633 2 545 2 291 2 196 2 595 2 332 2 163 8 402 4 553 2 72 2 637 2 598 2 484 2 555 8 448 2 340 2 409 6 80 2 79 2 82 2 644 8 38 2 380 4 561 2 452 2 413 2 650 2 606 2 87 4 309 2 347 2 494 4 135 2 
350 2 1 2 47 4 533 10 419 4 573 4 269 2 7 2 180 2 94 2 424 2 226 2 275 2 537 2 580 2 12 2 13 12 624 6 283 2 59 2 58 4 627 2 395 2 586 2 152 2 286 6 543 2 369 4 633 2 545 2 291 2 196 2 595 2 332 2 163 6 402 4 553 2 72 2 637 2 598 2 484 2 555 8 448 2 340 2 409 6 80 2 79 2 82 2 644 8 38 2 380 4 561 2 452 2 413 2 650 2 606 2 87 4 347 2 494 4 135 2 
350 2 1 2 353 2 2 4 355 2 7 2 180 4 182 2 8 2 9 2 11 2 508 4 187 2 12 2 13 46 16 2 369 4 192 2 196 2 197 2 200 2 202 2 206 2 36 1 38 2 380 4 210 2 381 6 523 6 213 12 214 2 43 6 46 7 48 1 47 6 533 2 388 2 225 2 389 2 226 2 537 2 229 2 57 2 58 4 59 2 541 2 236 2 62 2 544 2 239 6 65 6 397 4 545 2 67 2 245 6 399 2 547 2 402 4 71 8 72 2 553 2 404 2 554 6 555 2 74 2 251 4 409 4 79 2 80 4 82 2 255 1 561 2 84 2 413 2 87 4 414 4 566 1 261 2 568 1 90 2 266 6 419 8 573 4 269 2 93 2 271 2 575 2 94 4 577 6 424 2 275 2 277 1 579 2 279 2 580 2 425 10 282 4 283 2 102 2 586 2 286 24 113 2 291 2 595 2 444 1 443 2 446 2 598 2 298 6 448 2 299 2 604 2 452 2 606 4 309 4 134 2 135 2 608 6 310 2 609 1 137 2 461 6 312 6 140 4 318 2 469 2 470 2 617 2 145 2 620 2 624 8 627 2 152 2 153 6 631 6 476 2 328 6 633 2 329 7 332 2 163 12 637 2 484 2 335 6 165 2 336 4 486 2 167 2 340 2 341 1 640 2 488 8 648 2 650 4 493 2 347 2 653 6 348 6 494 6 495 2 
350 2 1 2 261 2 353 2 2 4 355 2 90 2 266 6 419 8 573 4 269 2 7 2 180 4 93 2 271 2 182 4 94 4 575 2 8 2 577 6 9 2 275 2 424 2 11 2 279 2 508 4 579 2 580 2 425 10 12 2 187 2 13 48 282 4 283 2 16 2 102 2 586 2 286 26 369 4 192 2 113 2 291 2 196 2 197 2 595 2 200 2 443 2 446 2 202 2 598 2 118 2 298 6 299 2 448 2 206 2 604 2 38 2 380 4 210 2 523 6 381 6 452 2 606 4 214 2 213 12 134 4 608 6 135 2 310 2 43 6 137 4 312 6 461 6 139 2 47 6 533 2 140 4 388 2 318 2 389 2 225 2 469 2 226 2 470 2 617 2 537 2 322 2 145 2 620 2 229 2 57 2 624 8 541 2 59 2 58 4 627 2 236 2 395 4 152 2 62 2 153 6 476 2 631 6 239 6 544 2 65 6 328 6 633 2 397 8 67 2 545 2 245 6 399 2 332 2 547 2 71 8 402 4 163 12 553 2 72 2 404 2 637 2 554 6 335 6 555 6 484 2 74 2 165 2 336 8 486 2 167 2 251 4 340 2 640 2 409 8 80 4 79 2 82 2 488 8 84 2 561 2 648 2 413 2 650 4 87 4 493 2 347 2 653 6 494 6 348 6 414 4 495 2 
350 2 1 2 261 2 353 2 2 4 355 2 90 2 266 6 419 8 573 4 269 2 7 2 180 4 93 2 271 2 182 4 94 4 575 2 8 2 577 6 9 2 275 2 424 2 11 2 279 2 508 4 579 2 580 2 425 10 12 2 187 2 13 48 282 4 283 2 16 2 102 2 586 2 286 26 369 4 192 2 113 2 291 2 196 2 197 2 595 2 200 2 443 2 446 2 202 2 598 2 118 2 298 6 299 2 448 2 206 2 604 2 38 2 380 4 210 2 523 6 381 6 452 2 606 4 214 2 213 12 134 4 608 6 135 2 310 2 43 6 137 4 312 6 461 6 139 2 47 6 533 6 140 4 388 2 318 2 389 2 225 2 469 2 226 2 470 2 617 2 537 2 322 2 145 2 620 2 229 2 57 2 624 8 541 2 59 2 58 4 627 2 236 2 395 4 152 2 62 2 153 6 476 2 631 6 239 6 544 2 65 6 328 6 633 2 397 8 67 2 545 2 245 6 399 2 332 2 547 2 71 8 402 4 163 12 553 2 72 2 404 2 637 2 554 6 335 6 555 6 484 2 74 2 165 2 336 8 486 2 167 2 251 4 340 2 640 2 409 8 80 4 79 2 82 2 488 8 644 4 84 2 561 2 648 2 413 2 650 4 87 4 493 2 347 2 653 6 494 6 348 6 414 4 495 2 
350 2 1 2 353 2 2 4 355 2 179 6 7 2 180 4 182 4 8 4 9 2 11 2 508 6 187 2 12 2 364 2 13 52 365 6 16 2 369 4 192 2 196 2 200 2 202 2 206 2 38 2 380 4 210 2 381 6 523 12 214 2 213 10 43 6 47 6 533 6 388 2 225 2 389 2 534 2 226 2 537 2 229 2 57 2 58 4 59 2 541 2 236 4 395 4 62 2 63 2 544 4 239 6 65 12 66 6 397 10 545 2 67 2 245 12 399 2 547 4 402 4 71 8 72 2 553 2 404 2 554 12 555 6 74 2 251 4 409 10 79 2 80 4 82 2 558 6 84 2 561 2 413 2 87 4 88 2 414 4 261 2 264 6 90 2 266 6 419 8 573 4 269 2 93 2 271 2 575 2 94 4 577 6 424 2 275 2 279 2 579 2 580 2 425 8 282 4 283 2 428 2 102 2 586 2 286 24 113 2 291 2 436 2 595 2 439 6 443 2 446 2 598 2 118 2 117 2 298 8 448 2 299 2 303 6 604 2 452 2 606 4 309 2 134 4 135 2 608 6 310 2 137 4 461 8 312 6 139 2 140 4 317 2 318 2 469 2 470 2 617 2 322 2 145 2 620 2 624 10 627 2 152 2 153 12 631 6 476 2 328 6 633 2 332 2 334 6 163 16 637 2 484 2 335 12 485 2 165 4 336 10 337 6 486 2 167 2 340 2 640 2 488 12 644 4 648 2 650 4 493 2 347 2 653 6 348 6 494 6 495 2 
350 2 291 2 196 2 332 2 419 2 533 4 573 4 402 2 163 4 180 2 598 2 637 2 555 6 484 2 275 2 226 2 424 2 537 2 409 6 79 2 12 2 13 4 644 4 624 6 283 2 38 2 627 2 380 4 452 2 586 2 395 2 87 2 369 2 347 2 494 2 
350 2 1 2 261 2 2 2 355 2 90 2 419 2 573 4 180 2 575 2 8 3 9 2 424 2 275 2 579 2 508 4 580 2 425 2 12 2 187 2 13 28 283 2 16 2 102 2 586 2 286 24 369 2 113 2 291 2 196 2 595 2 197 2 295 2 373 2 443 2 202 2 598 2 298 6 206 2 306 2 38 2 380 4 452 2 606 4 607 2 457 2 213 4 461 6 47 6 533 2 140 4 318 2 225 2 226 2 537 2 620 2 624 6 57 2 627 2 60 2 61 3 236 3 395 2 152 2 633 2 545 2 67 2 332 2 402 2 163 4 637 2 484 2 248 2 555 6 165 3 340 2 409 6 79 2 488 8 84 2 561 2 412 2 650 4 87 2 173 2 347 2 494 2 348 6 414 4 
350 2 1 2 47 4 533 10 419 4 573 4 269 2 7 2 180 2 94 2 424 2 226 2 275 2 537 2 580 2 12 2 13 12 624 6 283 2 59 2 58 4 627 2 395 2 586 2 152 2 286 6 543 2 369 4 633 2 545 2 291 2 196 2 595 2 332 2 163 6 402 4 553 2 72 2 637 2 598 2 484 2 555 8 448 2 340 2 409 6 80 2 79 2 82 2 644 8 38 2 380 4 561 2 452 2 413 2 650 2 606 2 87 4 347 2 494 4 135 2 
350 2 1 2 47 4 533 10 419 4 573 4 269 2 7 2 180 2 94 2 614 2 226 2 275 2 424 2 537 2 580 2 12 2 13 12 624 6 283 2 59 2 58 4 626 4 627 2 395 2 152 2 286 6 369 4 633 2 545 2 291 2 196 2 595 2 332 2 163 8 402 4 553 2 72 2 637 2 598 2 484 2 555 8 117 2 448 2 340 2 409 8 80 2 79 2 82 2 644 8 38 2 380 4 561 2 452 2 413 2 650 2 606 2 258 2 87 4 347 2 494 4 135 2 
106 2 196 2 484 2 
106 2 196 2 484 2 
350 2 1 2 261 2 2 6 355 2 90 2 419 4 6 1 573 4 269 2 7 2 180 4 182 4 94 4 575 2 9 2 424 2 579 2 580 2 425 2 187 2 13 24 282 2 283 2 16 2 102 2 106 2 286 16 369 2 594 2 196 6 595 2 443 2 446 2 374 2 202 2 377 2 204 2 117 4 32 4 298 2 448 2 206 2 34 2 124 2 305 2 38 4 380 4 451 2 381 2 606 4 309 4 134 4 213 4 137 4 461 2 47 6 533 6 140 4 612 2 613 2 223 2 318 2 225 2 469 4 470 2 616 2 617 2 393 2 620 2 621 2 623 2 57 2 624 12 58 4 236 2 152 2 395 4 241 2 397 4 67 2 545 2 247 4 163 16 402 2 553 2 72 2 637 2 405 2 484 4 555 6 336 4 251 2 340 2 77 4 409 12 80 2 488 2 644 4 561 2 84 2 650 4 87 2 494 4 348 6 414 4 
340 2 145 2 425 2 13 4 282 2 612 2 161 2 453 2 381 2 585 2 374 2 482 2 286 2 271 2 213 2 241 2 135 2 
350 2 1 2 261 2 2 6 355 2 499 2 90 2 419 4 6 1 573 4 269 2 7 2 267 2 180 4 182 4 94 4 575 2 9 2 424 2 579 2 184 2 580 2 187 2 13 24 283 2 16 2 102 2 106 2 286 16 369 2 593 2 594 4 196 6 595 2 443 2 446 2 374 2 202 2 204 2 117 4 32 4 298 2 448 2 206 2 124 2 37 2 305 2 38 4 380 4 451 2 381 2 606 4 309 4 134 4 213 2 137 4 461 2 47 6 533 6 140 4 612 2 613 2 318 2 225 2 469 4 470 2 616 2 617 2 393 2 620 2 621 2 57 2 624 12 58 4 236 4 152 2 395 4 241 2 397 4 67 2 545 2 247 4 402 2 163 16 553 2 72 2 637 2 405 2 484 4 555 6 336 4 251 2 340 2 77 4 409 12 80 4 82 2 488 2 644 4 561 2 84 2 650 4 87 2 494 4 348 6 414 4 
350 2 1 2 261 2 2 6 355 2 90 2 419 4 6 1 573 4 269 2 7 2 180 4 182 4 94 4 575 2 9 2 424 2 579 2 580 2 425 2 187 2 13 24 282 2 283 2 16 2 102 2 106 2 286 16 369 2 22 2 594 2 196 6 595 2 443 2 446 2 374 2 202 2 204 2 117 4 32 4 298 2 448 2 300 2 206 2 124 2 305 2 38 4 380 4 451 2 381 2 606 4 309 4 41 2 134 4 213 4 137 4 461 2 47 6 533 6 140 4 612 2 613 2 318 2 225 2 469 4 470 2 616 2 617 2 393 2 620 2 621 2 57 2 624 12 625 2 58 4 236 2 152 2 395 4 241 2 397 4 67 2 545 2 247 4 163 16 402 2 553 2 72 2 637 2 405 2 484 4 555 6 166 2 336 4 251 2 340 2 77 4 409 12 80 4 82 2 488 2 644 4 561 2 84 2 650 4 87 2 494 4 348 6 414 4 
1 2 261 2 387 2 2 2 461 6 355 2 501 2 47 6 140 4 220 2 422 2 93 2 318 2 505 2 389 2 225 2 575 2 8 2 9 2 11 2 508 4 579 2 580 2 620 2 187 2 13 24 57 2 99 2 16 2 102 2 630 2 236 2 152 2 286 18 432 2 112 2 289 2 113 2 67 2 545 2 595 2 400 2 69 2 443 2 74 2 165 2 298 6 33 2 206 2 76 2 340 2 302 2 488 8 604 2 522 4 210 2 561 2 39 2 650 4 606 4 652 2 348 4 213 2 414 4 384 2 
113 2 0 2 138 2 156 1 611 2 461 2 547 6 8 3 391 2 165 3 321 2 276 2 298 2 508 2 342 2 488 2 13 2 379 3 324 4 236 3 286 2 396 2 591 2 193 2 330 2 
113 2 0 2 138 2 611 2 461 2 547 6 8 2 391 2 165 2 321 2 276 2 298 2 508 2 342 2 488 2 13 2 379 2 324 4 236 2 286 2 396 2 591 2 193 2 330 2 
113 2 0 2 138 2 611 2 461 2 547 6 8 2 391 2 165 2 321 2 276 2 298 2 508 2 342 2 488 2 13 2 379 2 324 4 236 2 286 2 396 2 591 2 193 2 330 2 
136 2 498 2 92 2 224 3 503 2 8 3 535 5 143 6 276 2 278 2 510 2 13 10 232 2 281 2 235 2 148 4 394 3 101 2 236 3 103 2 286 4 590 2 288 2 113 2 294 4 158 2 636 2 162 4 75 2 339 4 488 2 304 4 489 2 562 2 345 2 647 4 171 2 651 3 527 4 42 2 
113 2 136 2 498 2 294 4 315 2 158 2 92 2 636 2 162 4 224 2 503 2 8 2 535 4 143 6 75 2 276 2 278 2 510 2 339 4 304 4 488 2 13 10 232 2 281 2 489 2 235 2 148 4 345 2 562 2 394 2 101 2 647 4 171 2 454 2 236 2 103 2 651 2 308 2 286 4 527 4 590 2 288 2 42 2 
113 2 136 2 498 2 294 4 315 2 158 2 92 2 636 2 162 4 224 2 503 2 8 2 535 4 143 6 75 2 276 2 278 2 510 2 339 4 304 4 488 2 13 10 232 2 281 2 489 2 235 2 148 4 345 2 562 2 394 2 101 2 647 4 171 2 454 2 236 2 103 2 651 2 308 2 286 4 527 4 590 2 288 2 42 2 
113 2 136 2 498 2 294 4 315 2 158 2 92 2 636 2 162 4 224 2 503 2 8 2 535 4 143 6 75 2 276 2 278 2 510 2 339 4 304 4 488 2 13 10 232 2 281 2 489 2 235 2 148 4 345 2 562 2 394 2 101 2 647 4 171 2 454 2 236 2 103 2 651 2 308 2 286 4 527 4 590 2 288 2 42 2 
113 2 136 2 498 2 294 4 315 4 158 2 92 2 636 2 162 4 224 2 503 2 8 2 535 4 143 6 75 2 276 2 278 2 510 2 339 4 304 4 488 2 13 10 232 2 281 2 489 2 235 2 148 4 345 2 562 2 394 2 101 2 647 4 171 2 454 4 236 2 103 2 651 2 308 4 286 4 527 4 590 2 288 2 42 2 
352 2 190 2 257 2 120 2 466 2 556 2 
242 2 301 2 216 2 168 2 602 2 556 2 149 2 
385 1 1 2 194 1 463 1 437 2 13 4 147 1 500 2 549 1 421 2 649 2 30 2 132 2 286 4 181 2 119 2 10 2 
136 6 294 4 315 4 92 2 51 2 535 11 121 2 447 2 75 4 578 2 619 2 232 4 489 4 189 2 583 4 562 4 101 6 647 10 368 2 429 2 454 4 259 2 308 6 590 6 479 2 
56 2 339 2 496 4 311 2 263 2 304 2 146 7 13 1 378 2 148 2 430 2 286 1 53 1 576 2 390 2 416 2 
56 2 339 2 496 4 311 2 304 2 146 4 378 2 148 2 141 2 430 4 576 2 390 2 416 2 
56 2 339 2 496 4 311 2 304 2 146 4 13 1 378 2 148 2 141 2 430 4 286 1 53 1 576 2 390 2 416 2 
56 2 339 2 496 2 311 2 304 2 146 2 378 2 148 2 430 2 576 2 390 2 416 2 
164 2 
164 2 
164 2 
164 2 
475 2 

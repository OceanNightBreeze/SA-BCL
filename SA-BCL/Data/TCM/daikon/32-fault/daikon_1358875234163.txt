#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException 665 (244,724) 343 (7,169,193,200,654,661,804) 
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException (123,796) 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.NullPointerException 665 (244,724) 343 (7,169,193,200,654,661,804) 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError (291,498) 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V ERROR java.lang.NullPointerException 665 (244,724) 343 (7,169,193,200,654,661,804) 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V FAILED junit.framework.AssertionFailedError (291,498) 522 
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException 
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V FAILED junit.framework.ComparisonFailure 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 301 37 520 393 548 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (267,538) (267,538) 423 776 678 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (267,538) (267,538) 423 776 678 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 423 776 678 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Intern:numIntArrays()I
utilMDE.Intern:intern([I)[I
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quant:gt(II)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 62554 | return null
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.Quant:eq(II)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.diff.Node:Node()V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.ProglangType:isIntegral()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:lexGTE([I[I)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V | OPERATOR | 8274 | -= -> |=
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Debug:logDetail()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:slice([III)[I | RETURN | 160908 | return null
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:eltsLTE([II)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
jtb.JavaCharStream:FillBuff()V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:subsetOf([D[D)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I | CONDITION | 9296 | while (x) -> while (!x)
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isScalar()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.PptSlice0:arity()I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_ntk()I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:eq(FF)Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:gte(II)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaCharStream:BeginToken()C
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.ValueTuple:size()I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.Intern:intern([J)[J
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Quant:union([I[I)[I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:subsetOf([D[F)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaCharStream:readChar()C
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:isReverse([I[I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.ProglangType:isArray()Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I | ASSIGN | 3291 | = null
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:size()I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.ArraysMDE:max([I)I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:memberOf(F[D)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String; | RETURN | 282442 | return null
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:ne(II)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.Invariant:justified()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaCharStream:getBeginLine()I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsGT([II)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(I[I)Z
utilMDE.ArraysMDE:sum([I)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 3371 | = null
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsEqual([II)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.PptName:isCombinedExitPoint()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice1:num_samples()I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:lt(II)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:eq(DD)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfo:new_ppt()V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:memberOf(S[S)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.Quant:pairwiseLTE([I[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:getConfidence()D
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 13963 | = null
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:eltsLT([II)Z
daikon.PptSlice2:arity()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.Assert:assertTrue(Z)V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 9283 | = null
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quant:setDiff([I[I)[I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quant:pairwiseLT([I[I)Z | STATEMENT | 166942 | stmt -> ;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.MathMDE:negate(I)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 7816 | 80 -> 0
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([S[S)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:memberOf(J[J)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:lte(II)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:intersection([I[I)[I
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptName:isEnterPoint()Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:eltwiseGT([I)Z | OPERATOR | 176785 | + -> >>>
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice1:arity()I
utilMDE.ArraysMDE:noDuplicates([D)Z | CONSTANT | 57690 | 0 -> 1
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:getEndLine()I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I | OPERATOR | 54314 | != -> ==
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:eltsLteIndex([I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:split(I)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.Invariant:prob_and(DDD)D
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.Invariant:logOn()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:size()I | STATEMENT | 15721 | stmt -> ;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:memberOf(F[F)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList; | ASSIGN | 61874 | = null
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.ValueTuple:isMissing(I)Z
daikon.diff.RootNode:RootNode()V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:setEqual([I[I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
568 2 267 2 73 2 538 2 415 2 575 2 226 4 146 2 254 2 
807 2 483 6 506 2 416 2 530 2 459 6 508 2 317 2 801 2 843 6 333 2 
400 4 711 2 691 6 128 4 499 2 42 2 267 2 178 2 538 2 477 6 687 2 385 6 450 6 
269 2 665 2 343 2 244 2 38 2 7 2 
123 4 796 4 
246 2 
780 2 269 2 665 2 6 2 692 2 7 2 341 2 343 2 45 2 244 2 38 2 145 2 280 2 
197 2 665 12 738 14 728 2 829 2 54 4 590 4 657 5 343 8 432 6 244 8 804 4 38 8 143 6 228 4 724 4 169 4 
1 14 198 2 498 6 129 2 554 2 555 4 206 2 13 2 480 2 736 4 440 2 325 2 251 2 831 2 118 2 568 2 631 2 841 2 574 2 578 2 362 2 48 8 680 2 
496 2 685 2 134 2 246 2 712 2 139 2 458 2 351 2 26 2 255 2 
30 4 237 2 5 2 498 2 265 2 667 2 703 2 10 2 290 2 556 2 39 2 184 2 295 2 211 2 694 2 742 2 273 2 419 2 568 2 124 2 356 2 194 2 580 2 614 2 
665 20 729 2 756 6 7 2 54 6 267 4 590 6 343 14 538 4 432 6 244 14 38 14 435 6 269 2 596 2 738 19 654 8 189 2 657 8 193 4 804 4 661 2 143 6 228 6 724 6 169 4 
841 2 498 2 736 2 
562 2 507 2 152 22 812 2 674 2 104 2 91 2 604 10 179 2 676 2 573 2 291 2 409 2 749 2 
0 2 725 1 98 2 636 2 638 2 311 2 102 2 202 6 644 1 429 2 205 2 532 2 207 2 537 3 538 32 733 2 208 2 433 2 111 4 737 2 439 2 18 2 21 2 652 2 117 2 327 2 744 4 25 2 659 2 660 2 224 2 547 2 227 2 334 2 442 2 27 2 233 2 232 2 234 2 443 2 335 3 127 2 336 2 32 2 130 2 33 4 131 2 133 2 36 3 560 8 453 2 346 4 249 2 455 2 456 2 672 2 138 2 772 2 461 3 352 2 571 2 464 1 260 16 360 2 467 2 366 2 581 2 153 2 154 2 266 2 267 34 155 2 380 32 382 3 592 2 268 1 792 2 593 3 387 2 160 6 484 3 59 16 485 1 795 8 598 2 62 3 270 2 166 16 64 3 489 2 606 2 398 2 695 1 72 2 276 32 277 2 612 4 279 24 699 8 700 2 701 2 172 3 617 1 403 2 175 2 287 2 77 1 620 1 406 2 819 2 181 2 820 4 407 6 501 2 626 2 708 2 182 5 709 1 824 2 628 12 84 3 713 16 714 2 825 1 411 4 412 1 296 2 414 2 827 3 297 1 417 24 415 2 89 2 186 6 834 1 837 2 717 4 510 2 513 2 191 1 721 2 95 2 96 2 309 2 722 1 634 2 425 2 
754 2 
267 2 253 2 
267 4 683 2 766 2 
582 6 199 2 372 2 584 6 730 4 528 2 589 4 533 2 109 2 384 2 479 4 60 2 19 2 115 2 739 2 326 2 391 4 163 2 215 2 600 2 798 6 165 4 23 30 219 6 394 6 220 2 329 6 656 6 608 6 71 2 225 2 698 2 171 6 549 2 283 2 284 2 337 6 816 2 500 2 553 2 706 6 340 2 80 6 243 30 822 4 135 4 451 2 136 2 771 6 629 4 673 30 566 2 348 6 303 6 633 2 308 2 842 2 
90 2 368 2 31 2 271 1 
113 2 31 2 
522 2 662 2 603 2 355 2 31 2 498 2 765 2 
840 2 355 2 31 2 
658 2 355 2 31 2 
90 2 252 2 314 2 
355 2 31 2 
373 2 314 2 
31 2 359 2 
90 2 635 2 314 2 
90 2 157 2 565 2 
90 2 488 2 9 2 
90 2 637 2 65 2 
90 2 428 2 493 2 
61 2 314 2 
668 2 31 2 
157 2 446 2 
142 2 9 2 
637 2 690 2 
428 2 434 2 
314 2 231 2 
342 2 428 2 
637 2 299 2 
732 2 9 2 
157 2 650 2 
90 2 635 2 697 2 314 2 
90 2 635 2 697 2 314 2 586 2 
90 2 828 2 314 2 
90 2 217 2 314 2 
830 2 167 2 789 2 720 2 
615 2 487 2 445 2 152 6 302 2 643 4 675 2 141 2 785 2 121 2 447 4 718 2 223 2 802 2 611 2 478 2 261 2 768 2 
90 2 345 2 
522 2 108 2 498 2 710 2 
522 2 603 2 108 2 498 2 710 2 203 2 
522 2 561 2 355 2 31 2 498 2 765 2 
470 2 265 2 
568 2 522 2 94 2 498 2 
637 2 344 2 
428 2 783 2 
157 2 531 2 
99 2 9 2 
428 2 404 2 9 2 
162 2 428 2 9 2 
787 2 428 2 9 2 
66 2 428 2 9 2 
522 2 525 2 498 2 176 2 786 2 605 6 306 6 195 2 
69 2 314 2 
270 2 
98 2 636 2 638 2 311 2 202 2 429 2 107 4 538 26 733 2 208 2 735 2 111 4 17 2 112 2 737 2 439 2 21 2 652 2 744 2 122 2 441 2 659 4 227 4 442 2 32 2 33 4 131 6 133 2 453 2 249 2 672 2 376 4 587 2 154 2 266 2 267 26 155 2 475 4 380 4 592 2 792 2 160 2 59 6 795 4 68 4 610 2 695 2 696 2 803 4 276 6 612 2 808 2 700 2 702 2 403 2 77 2 407 4 820 4 625 4 501 2 708 2 628 10 411 4 415 2 186 6 187 2 717 2 510 2 190 4 721 2 95 2 96 2 309 2 634 2 
98 2 636 2 638 2 311 2 102 1 202 2 429 2 107 4 538 26 733 2 208 2 735 2 111 4 15 2 17 2 112 2 737 2 439 2 21 2 652 2 744 2 441 2 659 4 227 4 442 2 32 2 33 4 131 6 133 2 453 2 249 2 672 2 467 1 376 4 154 2 266 2 267 26 155 2 475 4 380 4 592 2 792 2 387 2 160 2 59 6 795 4 68 4 695 2 696 2 803 4 276 6 612 2 808 2 700 2 702 2 403 2 77 2 705 2 407 5 820 4 292 2 625 4 501 2 708 2 628 10 411 4 415 2 186 6 187 2 717 2 510 2 190 4 721 2 95 2 96 2 309 2 634 2 
689 2 
518 2 743 2 
148 2 807 2 806 4 57 4 483 2 86 2 781 2 413 2 810 2 527 2 78 2 459 2 274 2 761 2 801 2 258 2 778 2 229 2 
148 2 367 4 781 2 523 2 374 2 100 2 527 2 51 4 201 2 472 2 267 12 538 6 381 2 208 2 320 2 110 4 111 2 737 2 57 4 483 4 439 2 389 2 740 2 274 2 801 4 229 2 333 2 495 2 806 4 807 4 810 2 78 2 818 2 761 2 35 2 133 2 820 2 823 2 247 2 670 2 86 2 672 2 413 4 416 2 186 4 418 4 459 6 510 2 420 2 93 4 774 2 421 6 463 2 258 2 778 2 517 2 95 2 47 2 424 2 843 6 
148 2 367 4 781 2 523 2 374 2 100 2 527 2 51 4 530 2 201 2 472 2 267 12 538 6 381 2 208 2 320 2 110 4 111 2 737 2 57 4 483 6 439 2 389 2 740 2 274 2 801 4 229 2 495 2 806 4 807 4 810 2 78 2 818 2 761 2 35 2 133 2 820 2 823 2 247 2 670 2 86 2 672 2 413 4 416 2 186 4 418 4 459 4 510 2 420 2 93 4 774 2 421 6 463 2 258 2 778 2 517 2 95 2 47 2 424 2 843 6 
148 2 367 4 781 2 523 2 374 2 100 2 527 2 51 8 201 2 472 2 267 12 538 6 381 2 208 2 320 2 110 4 111 2 737 2 57 4 483 6 439 2 389 2 740 2 274 2 801 4 229 2 495 2 806 4 807 4 810 2 78 2 818 2 761 2 35 2 133 2 820 2 823 2 247 2 670 2 86 2 672 2 413 4 416 2 186 4 418 4 459 6 508 2 510 2 420 2 93 4 774 2 421 6 463 2 258 2 778 2 517 2 95 2 47 2 424 2 843 6 
148 2 367 4 781 2 523 2 374 2 100 2 527 2 51 8 530 2 201 2 472 2 267 12 538 6 381 2 208 2 320 2 110 8 111 2 737 2 57 4 483 8 439 2 389 2 740 2 274 2 801 4 229 2 495 2 806 4 807 4 810 2 78 2 818 2 761 2 35 2 133 2 820 2 823 2 247 2 670 2 86 2 672 2 413 4 416 2 186 4 418 4 459 6 508 2 510 2 420 2 93 4 774 2 421 10 463 2 258 2 778 2 517 2 95 2 47 2 424 2 843 8 
148 2 367 4 781 2 523 2 374 2 100 2 527 2 51 8 201 2 472 2 267 12 538 6 381 2 208 2 320 2 110 8 111 2 737 2 57 4 483 6 439 2 389 2 740 2 274 2 801 4 229 2 495 2 806 4 807 4 810 2 78 2 818 2 761 2 35 2 133 2 820 2 823 2 247 2 670 2 86 2 672 2 413 4 416 2 186 4 418 4 459 6 508 2 510 2 420 2 93 4 774 2 421 10 463 2 258 2 778 2 517 2 95 2 47 2 424 2 843 6 
640 1 201 2 202 2 430 6 208 2 439 2 652 2 229 2 227 2 442 2 664 2 444 2 33 4 35 2 245 2 247 2 453 2 249 2 670 2 672 2 40 2 253 6 459 4 460 2 463 2 258 2 465 2 259 6 467 2 466 2 47 4 469 6 681 2 51 2 264 8 472 2 267 46 683 6 684 1 481 2 57 4 483 8 59 6 274 2 696 2 276 8 278 2 495 2 281 2 494 2 700 2 76 6 702 4 78 2 708 2 504 6 503 2 86 2 88 2 87 2 298 1 509 2 510 2 717 2 512 1 93 8 95 2 517 2 96 2 309 2 97 2 310 1 98 2 523 2 100 2 527 2 311 2 102 2 530 4 731 1 318 4 534 6 538 24 733 2 320 2 111 4 737 2 740 2 744 2 746 2 543 2 753 2 754 6 551 6 552 2 760 2 131 6 761 2 133 2 767 2 769 2 347 1 353 2 570 2 773 2 775 10 774 2 777 2 778 2 147 1 148 2 367 4 781 2 583 6 374 4 788 4 155 2 380 2 381 2 592 2 792 12 159 2 793 7 160 2 795 2 797 7 395 2 800 6 168 6 397 6 801 4 803 2 612 2 806 4 807 4 170 6 810 2 174 1 405 6 818 2 820 4 407 6 623 2 408 2 625 4 823 2 628 4 411 4 413 4 416 4 415 2 186 6 418 6 187 2 420 2 421 2 424 2 843 12 634 2 
98 2 523 2 100 2 311 2 527 2 102 2 201 2 202 2 430 6 318 4 534 6 538 26 733 2 208 2 320 2 111 4 737 2 439 2 740 2 652 2 744 4 543 2 746 2 659 2 546 2 227 2 229 2 442 2 664 2 444 2 753 2 754 6 551 6 552 2 760 2 33 4 131 6 761 2 35 2 133 2 245 2 247 2 767 2 769 2 453 2 249 2 670 2 40 2 672 2 564 2 253 6 459 8 460 2 353 2 570 2 773 2 774 2 775 10 463 2 777 2 258 2 465 2 778 2 259 6 47 4 466 2 467 2 148 2 367 4 583 6 781 2 681 2 469 6 374 4 264 8 51 6 472 2 267 48 788 4 683 6 155 2 380 2 381 2 592 2 792 12 159 2 481 2 57 4 160 2 483 8 59 6 795 2 395 2 800 6 274 2 168 6 397 6 801 4 803 2 696 2 276 8 278 2 612 4 494 2 281 2 495 2 807 4 806 4 700 2 170 6 810 2 76 6 702 4 78 2 405 6 818 2 623 2 407 6 820 4 408 2 625 4 823 2 708 2 503 2 504 6 628 8 86 2 411 4 87 2 88 2 413 4 415 2 416 4 186 6 418 6 187 2 508 4 509 2 717 4 510 2 420 2 93 8 421 2 517 2 95 2 96 2 97 2 424 2 309 2 843 12 634 2 
98 2 523 2 100 2 311 2 527 2 102 2 201 2 202 2 430 6 318 4 534 6 538 26 733 2 208 2 320 2 110 4 111 4 737 2 439 2 740 2 652 2 744 4 543 2 746 2 659 2 546 2 227 2 229 2 442 2 664 2 444 2 753 2 754 6 551 6 552 2 760 2 131 6 33 4 761 2 35 2 133 2 245 2 247 2 767 2 769 2 453 2 249 2 670 2 40 2 672 2 564 2 253 6 459 8 460 2 353 2 570 2 773 2 774 2 775 10 463 2 777 2 258 2 465 2 778 2 259 6 47 4 466 2 467 2 148 2 367 4 583 6 781 2 681 2 469 6 374 4 264 8 51 6 472 2 267 48 788 4 683 6 155 2 380 2 381 2 592 2 792 12 159 2 481 2 57 4 160 2 483 8 59 6 795 2 395 2 800 6 274 2 168 6 397 6 801 4 803 2 696 2 276 8 278 2 612 4 494 2 281 2 495 2 807 4 806 4 700 2 170 6 810 2 76 6 702 4 78 2 405 6 818 2 623 2 407 6 820 4 408 2 625 4 708 2 823 2 503 2 504 6 628 8 86 2 411 4 87 2 88 2 413 4 415 2 416 4 186 6 418 6 187 2 508 4 509 2 717 4 510 2 420 2 93 8 421 6 517 2 95 2 96 2 97 2 424 2 309 2 843 12 634 2 
2 2 201 2 202 4 204 6 430 6 208 2 209 6 439 2 213 2 652 2 659 2 229 2 227 2 442 2 664 2 444 2 33 4 448 2 35 2 245 2 247 2 453 2 249 2 670 2 672 2 40 2 253 12 459 10 460 2 463 2 258 2 465 2 259 6 467 2 466 2 47 4 469 6 681 2 51 6 264 8 472 2 267 52 683 12 476 6 481 2 57 4 483 10 59 8 274 2 696 2 276 12 278 2 495 2 281 2 494 2 700 2 76 6 702 4 78 2 708 2 503 2 504 6 86 2 88 2 87 2 508 4 509 2 510 2 717 4 93 8 95 2 517 2 96 2 309 2 97 2 98 2 726 2 523 2 100 2 527 2 311 2 101 6 102 2 530 2 313 6 318 4 534 6 538 24 733 2 734 6 320 2 110 4 111 4 737 2 540 6 740 2 542 2 744 4 745 2 746 2 543 2 546 2 333 2 750 2 753 2 754 12 551 6 552 2 760 2 131 8 132 2 761 2 133 2 769 2 564 2 353 2 570 2 773 2 774 2 775 8 777 2 778 2 148 2 367 4 781 2 583 12 374 4 788 4 155 2 380 4 381 2 592 2 792 10 159 2 160 4 795 4 601 6 395 2 800 12 168 6 397 12 801 4 803 4 612 4 806 4 807 4 170 6 810 2 619 6 405 6 818 2 820 4 407 6 623 2 408 2 625 6 823 2 628 10 411 4 413 4 416 4 415 2 186 6 418 6 187 2 420 2 421 6 424 2 843 16 634 2 
495 2 148 2 367 2 806 2 807 4 781 2 523 2 100 2 527 2 51 6 201 2 267 4 818 2 761 2 320 2 823 2 110 4 247 2 670 2 57 2 483 6 416 2 418 2 508 2 459 6 274 2 420 2 93 2 421 4 801 4 463 2 258 2 517 2 778 2 843 4 
98 2 523 2 100 2 311 2 527 2 102 2 201 2 202 3 319 2 538 24 733 2 208 2 320 2 111 4 322 2 737 2 439 2 652 2 125 2 442 2 33 4 131 6 761 2 133 2 35 2 558 2 247 2 767 2 453 2 249 2 670 2 672 2 459 6 352 2 775 2 463 2 258 2 778 2 467 2 148 2 367 2 781 2 149 2 51 6 267 28 155 2 380 3 592 2 792 4 57 2 483 6 160 3 59 6 270 2 274 2 801 4 491 3 696 2 276 8 495 2 807 4 806 2 700 2 702 2 818 2 820 4 407 6 625 4 708 2 823 2 411 4 414 2 416 2 415 2 186 6 418 2 187 2 508 2 510 2 420 2 93 2 513 2 421 2 517 2 95 2 96 2 309 2 843 4 634 2 
148 2 367 4 781 2 523 2 374 2 100 2 527 2 51 8 201 2 472 2 267 12 538 6 381 2 208 2 320 2 110 8 111 2 737 2 57 4 483 6 439 2 389 2 740 2 274 2 801 4 229 2 495 2 806 4 807 4 810 2 78 2 818 2 761 2 35 2 133 2 820 2 823 2 247 2 670 2 86 2 672 2 413 4 416 2 186 4 418 4 459 6 508 2 510 2 420 2 93 4 774 2 421 10 463 2 258 2 778 2 517 2 95 2 47 2 424 2 843 6 
148 2 367 4 781 2 523 2 374 2 100 2 527 2 51 8 201 2 472 2 267 12 538 6 381 2 208 2 320 2 110 8 111 2 737 2 57 4 483 6 439 2 324 4 740 2 274 2 801 4 229 2 333 2 495 2 806 4 807 4 550 2 810 2 78 2 818 2 761 2 133 2 35 2 820 2 823 2 247 2 86 2 672 2 413 4 416 2 186 4 418 4 459 8 508 2 510 2 420 2 93 4 774 2 421 10 463 2 258 2 778 2 516 2 517 2 95 2 47 2 424 2 843 8 
818 2 517 2 468 2 
818 2 517 2 468 2 
426 2 98 2 523 2 311 2 527 4 102 2 530 4 201 2 103 4 645 2 318 2 538 16 733 2 208 2 110 4 210 2 111 4 737 2 439 2 652 2 744 4 328 2 120 2 227 6 333 4 442 2 33 4 131 2 133 2 763 2 452 2 453 2 770 2 249 2 40 2 672 2 459 12 570 2 572 2 774 2 775 2 46 2 778 2 677 2 47 2 467 2 468 2 365 2 367 2 374 4 782 6 51 6 472 2 588 2 267 24 788 2 155 2 474 6 380 2 592 2 158 4 792 4 57 2 483 12 59 2 274 2 801 4 696 2 276 2 612 4 806 2 807 4 808 4 810 2 702 8 78 2 177 2 818 4 407 6 820 4 708 2 293 2 504 2 628 4 411 4 413 4 415 2 416 4 186 6 418 4 187 2 508 4 509 2 717 4 510 2 93 4 421 6 517 6 95 2 96 2 424 2 309 2 843 16 634 2 
86 2 563 2 753 2 103 2 267 4 289 2 318 2 775 2 133 2 538 2 518 2 158 2 519 2 792 2 503 2 504 2 365 2 
98 2 523 2 639 2 311 2 527 4 102 2 530 4 201 2 103 4 645 2 538 16 733 2 208 2 110 4 111 4 737 2 439 2 652 2 744 4 328 2 120 2 227 6 333 4 442 2 33 4 131 2 449 2 133 2 452 2 453 2 770 2 249 2 40 2 672 2 459 12 570 2 462 2 572 2 774 2 46 2 778 2 677 2 47 4 467 2 468 2 365 2 367 2 263 2 374 4 782 6 51 6 472 2 588 4 267 24 788 2 155 2 474 6 380 4 381 2 592 2 158 4 792 2 57 2 483 12 794 2 59 2 274 2 801 4 696 2 276 2 612 4 806 2 807 4 808 4 810 2 702 8 78 2 177 2 818 4 407 6 820 4 708 2 504 2 628 4 411 4 413 4 415 2 416 4 186 6 418 4 187 2 508 4 509 2 717 4 510 2 93 4 421 6 517 6 95 2 96 2 424 2 309 2 843 16 634 2 
98 2 523 2 311 2 527 4 102 2 530 4 201 2 103 4 645 2 318 2 538 16 733 2 208 2 110 4 111 4 737 2 439 2 652 2 744 4 328 2 120 2 544 2 227 6 333 4 442 2 33 4 131 2 557 2 133 2 452 2 453 2 770 2 249 2 40 2 672 2 459 12 570 2 572 2 774 2 775 2 46 2 778 2 677 2 47 4 467 2 468 2 365 2 367 2 374 4 782 6 51 6 472 2 588 2 267 24 788 2 155 2 474 6 380 2 381 2 592 2 158 4 792 4 57 2 483 12 59 2 597 2 274 2 801 4 696 2 276 2 612 4 806 2 807 4 808 4 497 2 810 2 702 8 78 2 177 2 818 4 407 6 820 4 708 2 504 2 628 4 411 4 413 4 415 2 416 4 186 6 418 4 187 2 508 4 509 2 717 4 510 2 93 4 421 6 517 6 95 2 96 2 424 2 309 2 843 16 634 2 844 2 
294 2 267 2 222 2 79 2 369 2 37 2 301 2 377 2 520 2 393 2 548 2 
28 2 700 2 173 2 312 2 202 3 286 2 131 2 267 2 380 3 538 2 647 2 625 2 160 3 114 2 59 2 116 2 630 2 300 2 835 2 304 3 67 1 422 2 803 6 276 2 307 4 
28 2 700 2 160 2 114 2 59 2 173 2 630 2 116 2 312 2 300 2 835 2 202 2 286 2 304 2 267 2 131 2 647 2 538 2 380 2 422 2 803 6 625 2 276 2 307 4 
28 2 700 2 160 2 114 2 59 2 173 2 630 2 116 2 312 2 300 2 835 2 202 2 286 2 304 2 267 2 131 2 647 2 538 2 380 2 422 2 803 6 625 2 276 2 307 4 
200 2 316 2 53 4 267 10 54 2 590 2 538 4 380 3 383 4 321 3 160 3 212 2 738 5 116 2 166 2 218 2 653 3 119 6 24 2 396 4 609 2 276 2 228 2 230 4 126 4 700 2 665 4 238 2 757 2 813 2 814 2 343 2 244 2 38 2 248 4 44 2 256 3 260 2 723 2 724 2 
126 4 665 4 700 2 238 2 756 2 200 2 813 2 757 2 814 2 53 4 316 2 54 2 267 10 590 2 343 2 380 2 538 4 244 2 383 4 38 2 248 4 321 2 160 2 212 2 738 4 116 2 218 2 166 2 653 2 119 6 24 2 396 4 657 2 44 2 609 2 256 2 276 2 260 2 723 2 228 2 230 4 724 2 364 2 
126 4 665 4 700 2 238 2 756 2 200 2 813 2 757 2 814 2 53 4 316 2 54 2 267 10 590 2 343 2 380 2 538 4 244 2 383 4 38 2 248 4 321 2 160 2 212 2 738 4 116 2 218 2 166 2 653 2 119 6 24 2 396 4 657 2 44 2 609 2 256 2 276 2 260 2 723 2 228 2 230 4 724 2 364 2 
126 4 665 4 700 2 238 2 756 2 200 2 813 2 757 2 814 2 53 4 316 2 54 2 267 10 590 2 343 2 380 2 538 4 244 2 383 4 38 2 248 4 321 2 160 2 212 2 738 4 116 2 218 2 166 2 653 2 119 6 24 2 396 4 657 2 44 2 609 2 256 2 276 2 260 2 723 2 228 2 230 4 724 2 364 2 
126 4 665 4 700 2 238 2 756 4 200 2 813 2 757 2 814 2 53 4 316 2 54 2 267 10 590 2 343 2 380 2 538 4 244 2 383 4 38 2 248 4 321 2 160 2 212 2 738 4 116 2 218 2 166 2 653 2 119 6 24 2 396 4 657 4 44 2 609 2 256 2 276 2 260 2 723 2 228 2 230 4 724 2 364 4 
539 2 370 2 427 2 81 2 52 2 22 2 
399 2 92 2 809 2 524 2 376 2 83 2 22 2 
663 2 401 2 198 1 682 2 75 2 618 2 106 2 759 2 267 10 180 2 646 2 538 8 764 1 438 1 737 2 58 2 482 2 457 1 390 2 250 2 599 2 490 2 800 2 331 2 805 2 680 1 
665 12 4 2 200 2 756 3 585 2 240 2 267 6 54 6 590 6 707 2 343 6 538 6 432 4 762 2 244 6 38 6 686 2 505 2 435 4 738 15 272 2 654 2 396 4 189 1 657 4 193 2 804 2 361 2 228 6 724 6 364 2 
126 2 236 2 140 3 651 2 151 2 53 2 221 2 11 2 305 2 511 2 536 2 358 2 383 2 
126 2 236 2 371 2 140 6 651 4 151 2 833 1 53 2 221 2 267 1 11 2 305 2 511 2 536 2 538 1 357 2 358 2 383 2 
126 2 236 2 371 2 140 6 651 4 151 2 53 2 221 2 11 4 305 4 511 4 536 2 357 2 358 2 383 2 
126 2 236 2 371 8 140 10 651 4 151 2 833 1 53 2 221 2 267 1 11 8 305 8 511 8 536 2 538 1 357 6 358 2 383 2 
526 2 641 2 102 2 8 16 105 2 535 2 538 30 12 2 14 2 16 2 652 4 330 2 332 2 747 6 748 2 442 2 751 2 235 2 755 2 666 2 758 2 33 12 241 2 242 2 34 2 41 6 567 2 43 2 776 2 779 6 467 2 577 2 678 2 363 2 262 2 150 2 375 2 471 2 784 2 267 32 56 2 388 4 595 2 486 2 602 2 70 2 74 4 811 2 616 2 285 2 704 3 407 20 821 1 624 2 183 2 502 2 410 4 826 2 85 4 411 10 715 2 832 2 836 2 188 4 838 2 839 2 423 2 192 2 634 4 
3 4 50 2 102 8 8 14 105 2 267 28 431 2 473 2 55 2 538 26 790 2 791 2 436 4 594 4 16 2 486 2 323 2 649 2 541 4 693 2 652 2 164 4 63 2 330 6 442 2 613 10 752 2 235 2 282 6 74 2 402 2 704 2 339 2 758 2 817 4 288 2 621 2 33 14 622 4 242 2 407 36 624 6 669 2 826 2 411 14 185 6 349 2 350 2 43 6 719 2 776 2 257 4 423 2 779 8 192 2 576 2 577 2 467 8 521 2 678 2 196 10 634 2 
3 2 150 2 50 1 641 2 102 6 784 2 8 4 105 2 267 30 535 2 55 2 12 2 538 28 14 2 436 2 594 2 541 2 652 6 392 2 164 2 602 2 330 2 607 2 332 2 747 4 442 4 613 2 282 1 752 1 235 2 74 2 811 4 616 2 402 2 666 2 338 2 758 2 33 14 622 2 407 26 624 2 669 2 82 2 502 2 183 2 410 2 826 2 411 12 715 2 185 2 41 4 836 2 567 2 838 2 43 2 719 1 776 2 423 2 779 6 467 6 196 2 678 2 363 2 634 6 
49 2 727 2 526 2 375 2 642 2 102 6 529 2 8 26 315 2 105 2 378 2 267 36 379 2 156 2 591 2 56 2 538 36 648 2 688 2 437 2 386 2 486 2 161 2 214 2 541 2 20 2 652 2 216 2 164 2 741 2 799 2 330 2 655 2 275 2 70 2 545 2 492 2 442 2 235 2 29 2 239 4 815 4 758 2 33 16 622 2 241 2 407 38 624 2 559 2 627 2 454 2 671 4 826 2 411 16 137 2 716 2 569 4 43 2 354 2 632 2 514 2 776 2 515 4 423 2 779 2 144 2 467 6 577 2 678 2 679 2 634 2 
579 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V ERROR java.lang.NullPointerException 480 
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.util.NoSuchElementException 759 582 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR java.lang.ClassCastException 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 532 394 401 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V ERROR java.lang.ArrayIndexOutOfBoundsException 205 
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 188 58 715 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 188 58 715 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 839 610 356 802 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V ERROR java.lang.NullPointerException 400 294 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR java.lang.NullPointerException 495 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 155 773 262 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 244 262 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 155 773 262 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 244 262 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isArray()Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | CONSTANT | 51688 | 64 -> 1
utilMDE.MathMDE:gcd([I)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:readChar()C
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.Intern:intern([J)[J
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.MathMDE:gcd(II)I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | CONDITION | 15342 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.ModBitTracker:num_sets()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Ppt:Ppt()V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:concat([I[I)[I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:memberOf(I[I)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eq(II)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseEqual([I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.PptName:isCombinedExitPoint()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([I)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:isReverse([I[I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z | ASSIGN | 8607 | = null
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:pairwiseLT([I[I)Z | STATEMENT | 166805 | stmt -> ;
daikon.Quant:ne(II)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.Invariant:getConfidence()D
daikon.Quant:noDups([I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.diff.InvMap:InvMap()V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:eltsLteIndex([I)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.PptSlice1:arity()I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
daikon.diff.Node:Node()V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V | ASSIGN | 2586 | = null
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:eltsNotEqual([II)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.Quant:eltsLTE([II)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.PptSlice2:arity()I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:gt(II)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:gte(II)Z
daikon.PptSlice1:num_samples()I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_ntk()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | ASSIGN | 35390 | = null
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Quant:subsetOf([D[D)Z
daikon.Debug:logOn()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.Intern:intern([D)[D
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.Intern:intern([I)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:lte(II)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.MathMDE:negate(I)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.Debug:logDetail()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List; | ASSIGN | 60402 | = null
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:BeginToken()C
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.ValueTuple:size()I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | CONSTANT | 3683 | 1 -> 0
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:lexLT([I[I)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:eq(FF)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.JavaCharStream:ReadByte()C
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:lexGT([I[I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(J[J)Z
daikon.ModBitTracker:split(I)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ProglangType:isIntegral()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:subsetOf([F[D)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.Invariant:justified()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([II)I
daikon.ProglangType:isScalar()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:sameLength([I[I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(F[D)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:union([I[I)[I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.Invariant:logOn()Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | OPERATOR | 3095 | - -> *
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V | CONDITION | 9913 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String; | RETURN | 109561 | return null
daikon.ValueTuple:isMissingFlow(I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.ModBitTracker:num_vars()I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:setEqual([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoAux:hashCode()I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.ProglangType:isFloat()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eltsLtIndex([I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:eq(DD)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:lexLTE([I[I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.InvariantFormatTester:execute()Z
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.RootNode:RootNode()V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:dimensions()I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String; | RETURN | 50824 | return null
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
632 2 795 2 31 2 674 2 362 2 402 2 596 4 717 2 174 2 
726 2 554 2 148 2 483 2 545 6 326 2 863 2 292 2 123 2 238 6 595 6 
419 6 1 6 94 4 362 2 402 2 514 2 16 6 348 4 32 2 184 2 665 2 36 6 126 2 
587 26 667 16 408 4 2 2 749 4 362 6 265 2 553 8 161 8 704 8 103 12 413 6 669 8 60 6 108 10 341 10 732 10 37 16 539 29 374 4 402 6 283 4 842 2 687 10 812 2 323 2 20 2 457 10 121 2 430 16 
480 2 
33 2 
200 2 203 2 7 2 8 2 210 2 212 2 734 2 573 2 513 2 402 4 286 2 350 2 629 2 352 4 632 2 20 2 797 2 291 2 800 2 461 2 463 2 78 2 24 2 855 2 362 4 133 4 412 2 369 2 531 2 757 2 594 2 35 2 143 2 652 4 478 2 811 2 423 2 601 4 253 2 47 2 767 2 156 2 385 2 488 2 
23 6 587 48 407 4 202 2 667 32 359 6 26 8 493 6 362 4 391 2 526 2 553 6 103 22 704 18 413 4 593 2 60 4 755 2 108 16 10 6 341 16 211 4 732 6 37 32 679 4 374 2 539 54 95 6 402 4 687 16 812 2 18 4 456 2 603 4 289 6 457 16 154 4 430 32 584 4 
8 2 450 2 424 2 
490 22 114 2 160 2 14 2 375 2 552 2 437 2 564 2 486 2 62 2 648 10 808 2 711 2 488 2 
587 4 667 2 413 2 778 2 646 2 108 2 341 2 239 2 732 4 37 2 759 2 539 6 190 2 687 2 582 2 457 2 430 2 75 2 298 2 464 2 
587 12 667 8 539 16 95 6 283 2 103 4 28 2 687 4 289 6 603 4 457 4 122 2 108 4 430 8 341 4 211 4 37 8 
465 2 130 2 331 4 360 4 51 2 84 4 611 2 4 2 364 4 133 4 727 2 436 2 55 2 232 2 751 62 369 2 8 8 531 4 781 4 508 2 443 4 139 2 308 2 110 4 111 4 446 2 65 10 39 4 113 2 450 6 713 2 512 2 171 14 424 2 691 4 383 2 223 10 459 2 22 2 523 4 
53 2 192 2 769 2 
770 2 666 2 0 2 330 2 332 8 102 2 555 2 671 2 779 1 106 2 208 2 338 2 209 4 566 2 676 6 109 2 11 3 571 6 13 16 680 3 790 2 216 2 684 24 683 1 346 4 17 2 351 2 578 3 454 2 580 2 118 24 354 2 221 2 462 1 586 2 129 4 230 1 363 3 362 34 466 2 591 1 366 2 467 8 469 2 135 2 705 3 706 2 708 8 34 2 240 1 809 2 476 2 475 2 41 3 373 2 42 2 477 2 43 2 715 2 146 4 719 2 45 2 482 2 252 12 602 16 46 4 254 2 157 2 818 2 608 2 261 2 491 4 823 2 614 2 824 2 825 2 56 2 393 2 271 32 272 2 506 2 620 2 731 2 164 2 274 2 835 3 275 2 834 1 166 2 838 1 277 4 278 1 279 2 403 3 280 2 402 32 840 2 841 3 843 2 172 16 516 2 70 1 847 2 517 2 405 2 518 3 850 2 73 6 76 2 295 2 174 2 176 2 640 2 856 1 525 16 643 1 178 2 859 2 86 2 528 2 644 4 301 32 179 2 414 1 416 2 304 2 305 2 756 2 535 2 307 2 311 2 313 2 650 2 417 1 653 2 655 2 421 1 96 6 320 2 195 1 324 3 766 3 660 2 327 2 328 2 878 2 432 5 
362 2 877 2 
479 2 362 4 722 2 
194 2 
81 2 590 2 435 2 556 2 267 2 268 6 615 2 59 2 753 2 162 6 803 2 532 2 394 2 786 2 448 2 418 2 401 2 736 2 347 2 246 2 451 2 44 6 150 4 173 2 288 2 579 6 21 2 485 2 
142 2 659 2 107 2 686 1 
142 2 861 2 
142 2 101 2 8 2 408 2 721 2 577 2 64 2 
142 2 101 2 777 2 
142 2 101 2 642 2 
659 2 183 2 206 2 
142 2 101 2 
206 2 873 2 
142 2 284 2 
659 2 737 2 206 2 
205 2 
659 2 340 2 677 2 
659 2 429 2 247 2 
659 2 638 2 226 2 
145 2 206 2 
142 2 503 2 
453 2 379 2 
255 2 340 2 
315 2 429 2 
147 2 638 2 
325 2 206 2 
631 2 638 2 
672 2 429 2 
340 2 231 2 
791 2 379 2 
659 2 737 2 233 2 206 2 
659 2 737 2 233 2 206 2 297 2 
659 2 441 2 206 2 
659 2 455 2 206 2 
854 2 801 2 700 2 15 2 
8 2 99 2 721 2 342 2 
8 2 99 2 721 2 716 2 342 2 64 2 
142 2 101 2 8 2 408 2 721 2 793 2 
78 2 214 2 
8 2 408 2 721 2 570 2 
429 2 844 2 
411 2 638 2 
760 2 379 2 
340 2 312 2 
533 2 340 2 638 2 
798 2 340 2 638 2 
340 2 585 2 638 2 
743 2 340 2 638 2 
390 6 702 2 8 2 673 2 168 6 98 2 721 2 851 2 
780 2 206 2 
490 6 389 2 409 2 588 2 215 2 613 2 57 2 540 2 404 2 452 4 559 2 796 4 502 2 120 2 604 2 694 2 510 2 746 2 
321 2 659 2 
166 2 
666 2 491 4 823 2 555 2 393 2 58 2 271 6 106 2 164 2 731 2 676 4 274 2 275 2 790 2 277 4 402 14 351 2 689 2 405 2 174 2 586 2 362 14 300 2 528 2 235 2 644 4 416 2 307 2 311 2 188 2 242 4 475 2 417 2 653 6 373 2 715 2 146 4 96 6 602 6 254 2 605 2 328 2 
666 2 491 4 823 2 555 2 393 2 58 2 271 6 106 2 164 2 731 2 274 2 676 6 275 2 790 2 277 4 402 14 351 2 689 2 405 2 174 2 586 2 362 14 859 2 178 2 300 2 528 2 235 2 644 4 416 2 307 2 311 2 188 2 242 4 475 2 417 2 653 6 373 2 715 2 146 4 96 6 602 6 254 2 605 2 328 2 
119 2 
765 2 696 2 
228 2 263 2 714 2 318 2 148 2 846 2 499 2 826 4 500 2 545 2 237 2 863 2 661 2 238 2 710 2 853 2 258 4 259 2 
329 2 263 4 725 6 555 2 498 2 776 2 393 2 826 4 499 2 500 2 106 2 274 2 837 2 572 4 790 2 402 6 218 2 846 2 515 2 19 2 292 2 799 4 460 2 853 2 77 2 586 2 228 2 698 2 82 2 362 12 644 2 237 2 863 4 238 4 709 2 371 2 595 6 710 2 243 2 712 2 373 2 810 4 714 2 318 2 599 2 191 4 146 2 148 4 96 4 600 2 151 2 875 2 545 6 326 2 661 2 662 2 487 2 258 4 259 2 387 4 
329 2 263 4 725 6 555 2 498 2 776 2 393 2 826 4 499 2 500 2 106 2 274 2 837 2 572 4 790 2 402 6 218 2 846 2 515 2 19 2 292 2 799 4 460 2 853 2 77 2 586 2 228 2 698 2 82 2 362 12 644 2 237 2 863 4 238 6 709 2 371 2 595 6 710 2 243 2 712 2 373 2 810 4 714 2 318 2 599 2 191 4 146 2 148 4 96 4 600 2 151 2 875 2 483 2 545 4 661 2 662 2 487 2 258 4 259 2 387 4 
329 2 263 4 725 6 554 2 555 2 498 2 776 2 393 2 826 4 499 2 500 2 106 2 274 2 837 2 572 8 790 2 402 6 218 2 846 2 515 2 19 2 292 2 799 4 460 2 853 2 77 2 586 2 228 2 698 2 82 2 362 12 644 2 237 2 863 4 238 6 709 2 371 2 595 6 710 2 243 2 712 2 373 2 810 4 714 2 318 2 599 2 191 4 146 2 148 4 96 4 600 2 151 2 875 2 545 6 661 2 662 2 487 2 258 4 259 2 387 4 
329 2 263 4 725 10 554 2 555 2 498 2 776 2 393 2 826 4 499 2 500 2 106 2 274 2 837 2 572 8 790 2 402 6 218 2 846 2 515 2 19 2 292 2 799 4 460 2 853 2 77 2 586 2 228 2 698 2 82 2 362 12 644 2 237 2 863 4 238 8 709 2 371 2 595 8 710 2 243 2 712 2 373 2 810 8 714 2 318 2 599 2 191 4 146 2 148 4 96 4 600 2 151 2 875 2 483 2 545 6 661 2 662 2 487 2 258 4 259 2 387 4 
329 2 263 4 725 10 554 2 555 2 498 2 776 2 393 2 826 4 499 2 500 2 106 2 274 2 837 2 572 8 790 2 402 6 218 2 846 2 515 2 19 2 292 2 799 4 460 2 853 2 77 2 586 2 228 2 698 2 82 2 362 12 644 2 237 2 863 4 238 6 709 2 371 2 595 6 710 2 243 2 712 2 373 2 810 8 714 2 318 2 599 2 191 4 146 2 148 4 96 4 600 2 151 2 875 2 545 6 661 2 662 2 487 2 258 4 259 2 387 4 
666 2 434 2 5 2 6 2 209 2 676 6 213 6 447 2 682 6 218 2 688 2 19 2 220 2 458 2 224 2 460 4 695 1 228 2 698 2 30 2 235 4 237 2 707 6 238 8 709 2 708 2 710 2 242 4 474 2 475 2 243 2 712 2 714 2 715 2 245 2 251 1 252 4 483 4 254 2 487 4 722 6 258 4 259 2 491 4 263 4 725 2 498 2 499 2 728 10 269 6 500 2 271 8 731 2 507 2 274 2 275 2 66 1 277 4 68 2 515 2 739 2 740 1 292 4 741 2 73 2 520 2 295 2 77 2 748 6 80 6 82 2 300 2 299 6 87 2 528 2 88 2 301 2 302 2 303 2 306 2 307 2 90 6 311 2 318 2 96 6 543 2 545 4 546 1 328 2 329 2 555 2 776 2 336 2 104 2 106 2 339 2 783 7 571 2 112 1 572 2 790 2 346 2 576 2 351 2 799 4 586 2 129 2 362 46 132 1 371 2 595 12 806 4 373 2 599 2 146 4 148 4 600 2 380 6 602 6 381 2 605 2 387 8 388 2 823 2 393 2 826 4 164 2 621 8 622 6 837 2 402 24 627 1 846 2 405 12 636 2 174 2 852 6 853 2 175 6 859 2 178 2 410 2 644 4 863 4 416 2 649 4 653 6 654 7 191 6 420 2 657 2 194 6 875 2 427 2 876 1 661 2 662 2 877 6 664 6 
329 2 666 2 434 2 554 4 555 2 776 2 336 2 5 2 6 2 104 2 106 2 209 4 339 2 676 6 213 6 447 2 571 2 572 6 790 2 682 6 576 2 346 4 218 2 688 2 351 2 220 2 19 2 458 2 799 4 224 2 460 4 586 2 129 4 228 2 698 2 362 48 30 2 235 4 237 2 707 6 708 2 371 2 709 2 238 8 595 12 806 4 710 2 474 2 242 4 712 2 243 2 475 2 373 2 714 2 599 2 245 2 715 2 146 4 148 4 600 2 380 6 252 8 602 6 381 2 254 2 605 2 487 4 722 6 258 4 259 2 387 8 388 2 491 4 725 2 263 4 264 2 823 2 824 2 498 2 393 2 269 6 728 10 499 2 826 4 500 2 271 8 617 2 164 2 731 2 621 8 507 2 274 2 622 6 275 2 837 2 277 4 402 26 68 2 846 2 515 2 739 2 405 12 741 2 292 4 73 2 636 2 520 2 295 2 852 6 174 2 853 2 77 2 748 6 175 6 80 6 82 2 410 2 178 2 859 2 299 6 300 2 528 2 87 2 88 2 301 2 644 4 302 2 303 2 416 2 863 4 306 2 307 2 649 4 90 6 311 2 653 6 318 2 420 2 191 6 96 6 657 2 194 6 543 2 875 2 427 2 545 8 661 2 877 6 662 2 664 6 328 2 
329 2 666 2 434 2 554 4 555 2 776 2 336 2 5 2 6 2 104 2 106 2 209 4 339 2 676 6 213 6 447 2 571 2 572 6 790 2 682 6 576 2 346 4 218 2 688 2 351 2 220 2 19 2 458 2 799 4 224 2 460 4 586 2 129 4 228 2 698 2 362 48 30 2 235 4 237 2 707 6 708 2 371 2 709 2 238 8 595 12 806 4 710 2 474 2 242 4 712 2 243 2 475 2 373 2 810 4 714 2 599 2 245 2 715 2 146 4 148 4 600 2 380 6 252 8 602 6 381 2 254 2 605 2 487 4 722 6 258 4 259 2 387 8 388 2 491 4 263 4 725 6 264 2 823 2 824 2 498 2 393 2 269 6 728 10 499 2 826 4 500 2 271 8 617 2 164 2 731 2 621 8 507 2 274 2 622 6 275 2 837 2 277 4 402 26 68 2 846 2 515 2 739 2 405 12 741 2 292 4 73 2 636 2 520 2 295 2 852 6 174 2 853 2 77 2 748 6 175 6 80 6 82 2 410 2 178 2 859 2 299 6 300 2 528 2 87 2 88 2 301 2 644 4 302 2 303 2 863 4 416 2 306 2 307 2 649 4 90 6 311 2 653 6 318 2 420 2 191 6 96 6 657 2 194 6 543 2 875 2 427 2 545 8 661 2 877 6 662 2 664 6 328 2 
666 2 434 2 204 6 5 2 6 2 209 4 676 6 213 6 447 2 682 6 218 2 688 2 19 2 220 2 458 2 224 2 460 4 228 2 698 2 30 2 235 4 237 2 707 6 238 10 709 2 708 4 710 2 242 6 474 2 475 2 243 2 712 2 714 2 715 2 245 2 252 10 483 2 254 2 487 4 722 12 258 4 259 2 489 2 491 4 725 6 263 4 264 2 498 2 499 2 269 6 728 8 500 2 271 12 731 2 507 2 274 2 275 2 276 6 277 4 281 6 68 2 515 2 739 2 292 4 741 2 73 4 295 2 745 6 77 2 748 12 80 12 82 2 300 2 299 6 528 2 87 2 88 2 301 4 302 2 303 2 306 2 307 2 309 2 536 2 90 6 311 2 318 2 319 2 96 6 543 2 545 10 326 2 328 2 329 2 554 4 555 2 774 6 776 2 336 2 104 2 106 2 339 2 571 4 572 6 790 2 346 4 576 2 351 2 583 2 799 4 586 2 129 4 362 52 134 6 371 2 595 16 806 4 597 6 144 2 373 2 810 4 599 2 146 4 148 4 600 2 380 12 602 8 381 2 605 2 820 2 387 8 159 6 388 2 823 2 824 2 393 2 826 4 617 2 164 2 621 8 622 6 623 2 837 2 402 24 846 2 405 10 636 2 174 2 852 6 853 2 175 6 859 2 178 2 410 2 644 4 416 2 863 4 649 4 653 8 191 6 420 2 657 4 194 12 875 2 427 2 661 2 662 2 877 12 663 6 664 6 
329 2 228 2 725 4 698 2 82 2 362 4 554 2 776 2 499 2 826 2 500 2 863 4 371 2 709 2 238 6 595 4 710 2 712 2 243 2 572 6 810 4 599 2 318 2 191 2 148 4 515 2 875 2 19 2 545 6 799 2 292 2 853 2 258 2 259 2 387 2 
329 2 666 2 668 2 554 2 555 2 776 2 106 2 676 6 109 2 571 3 572 6 449 2 790 2 794 3 351 2 19 2 799 2 586 2 228 2 698 2 362 28 466 2 235 2 371 2 709 2 238 6 595 4 710 2 242 4 712 2 243 2 475 2 373 2 599 2 43 2 146 4 715 2 148 4 600 2 602 6 254 2 605 2 258 2 48 2 259 2 387 2 491 4 725 2 823 2 393 2 826 2 499 2 728 2 500 2 271 8 731 2 164 2 274 2 275 2 166 2 277 4 402 24 515 2 405 4 292 2 73 3 520 2 174 2 853 2 82 2 178 2 859 2 300 2 528 2 529 2 644 4 301 3 863 4 416 2 186 2 307 2 311 2 653 6 318 2 191 2 96 6 875 2 545 6 328 2 
329 2 263 4 725 10 554 2 555 2 498 2 776 2 393 2 826 4 499 2 500 2 106 2 274 2 837 2 572 8 790 2 402 6 218 2 846 2 515 2 19 2 292 2 799 4 460 2 853 2 77 2 586 2 228 2 698 2 82 2 362 12 644 2 237 2 863 4 238 6 709 2 371 2 595 6 710 2 243 2 712 2 373 2 810 8 714 2 318 2 599 2 191 4 146 2 148 4 96 4 600 2 151 2 875 2 545 6 661 2 662 2 487 2 258 4 259 2 387 4 
263 4 725 10 554 2 555 2 498 2 393 2 776 2 499 2 826 4 500 2 438 4 106 2 274 2 837 2 572 8 790 2 402 6 218 2 846 2 515 2 19 2 290 2 292 2 799 4 460 2 853 2 77 2 586 2 228 2 698 2 82 2 362 12 644 2 237 2 863 4 238 6 709 2 371 2 595 8 710 2 243 2 712 2 373 2 810 8 714 2 318 2 599 2 191 4 146 2 148 4 96 4 600 2 422 2 875 2 545 8 326 2 661 2 662 2 487 2 258 4 259 2 387 4 
82 2 371 2 365 2 
82 2 371 2 365 2 
666 2 433 2 554 4 555 2 337 2 105 2 562 2 106 2 209 4 676 6 213 2 678 2 568 2 572 6 790 2 346 4 351 2 690 2 799 2 355 2 124 4 460 2 586 2 129 4 228 4 362 24 365 2 468 4 235 6 371 6 238 12 709 2 595 16 806 2 475 2 712 2 373 2 810 4 146 4 148 4 252 4 483 4 602 2 381 2 254 2 605 2 487 4 258 2 259 2 387 4 50 2 491 4 263 4 725 6 823 2 498 2 393 2 728 2 499 2 826 2 271 2 832 2 731 2 164 2 395 2 274 2 275 2 837 2 624 4 277 4 402 16 846 2 405 4 634 2 292 4 635 2 636 2 295 4 174 2 521 2 77 2 82 4 178 2 859 2 300 2 528 2 88 2 644 4 301 2 416 2 863 4 181 2 307 2 649 2 311 2 870 2 653 2 191 4 96 6 545 12 326 4 661 2 328 2 879 2 
50 2 433 2 714 2 681 2 434 2 362 4 402 2 393 2 728 2 765 2 405 2 607 2 534 2 224 2 213 2 649 2 678 2 
666 2 433 2 554 4 555 2 337 2 105 4 106 2 209 4 676 6 213 2 678 2 568 2 572 6 790 2 346 4 218 2 351 2 799 2 355 2 124 4 460 4 586 2 129 4 228 4 362 24 365 2 468 4 235 6 371 6 238 12 709 2 595 16 806 2 475 2 712 2 373 2 810 4 146 4 148 4 252 4 153 2 483 4 602 2 381 2 254 2 605 2 487 4 258 2 259 2 387 4 50 2 491 4 263 4 725 6 823 2 498 2 393 2 499 2 826 2 271 2 832 2 731 2 164 2 395 2 274 2 275 2 837 2 624 4 277 4 402 16 846 2 405 2 634 2 292 4 636 2 295 4 174 2 521 2 77 2 82 4 178 2 859 2 300 2 528 2 88 2 644 4 301 4 416 2 863 4 307 2 311 2 537 2 870 2 653 2 191 4 96 6 196 2 545 12 326 4 661 2 100 2 197 2 328 2 879 2 
666 2 433 2 554 4 555 2 337 2 105 2 106 2 209 4 676 6 213 2 678 2 568 2 572 6 790 2 346 4 218 2 349 2 351 2 799 2 355 2 124 4 460 4 586 2 129 4 357 2 228 4 362 24 365 2 468 4 235 6 371 6 238 12 709 2 595 16 806 2 38 2 475 2 712 2 373 2 810 4 146 4 148 4 252 4 483 4 602 2 381 2 254 2 605 2 487 4 258 2 259 2 387 4 50 2 491 4 263 4 725 6 823 2 498 2 393 2 728 2 499 2 826 2 271 2 61 2 832 2 731 2 164 2 395 2 274 2 275 2 733 2 837 2 624 4 277 4 402 16 846 2 405 4 634 2 292 4 636 2 295 4 174 2 521 2 77 2 82 4 178 2 859 2 300 2 528 2 88 2 644 4 301 2 416 2 863 4 307 2 649 2 311 2 870 2 653 2 191 4 96 6 545 12 326 4 661 2 328 2 879 2 
201 2 667 4 666 2 331 2 555 2 334 4 103 4 5 2 670 2 560 6 104 2 106 2 108 2 341 2 211 4 676 4 784 2 111 2 12 2 571 6 787 4 449 2 789 2 790 2 687 2 794 2 689 2 116 2 581 2 457 2 692 2 693 2 356 2 586 2 587 6 697 2 360 2 229 2 802 2 362 28 364 2 703 4 704 4 137 10 136 6 235 2 368 1 370 6 470 2 708 10 471 2 473 4 37 4 242 10 598 10 40 2 475 2 373 2 245 2 146 4 715 2 378 2 248 2 481 2 252 22 602 12 254 2 605 2 816 2 257 4 48 2 386 2 609 6 491 2 724 2 610 2 52 2 492 2 823 2 495 2 393 2 58 2 729 2 827 2 271 18 831 6 830 6 619 4 730 2 505 2 731 2 164 2 507 2 274 2 275 2 398 2 63 2 836 24 277 2 839 2 402 22 282 2 285 2 739 2 289 6 405 2 71 4 633 2 293 4 849 2 744 2 519 2 73 6 74 2 295 4 174 2 639 2 641 2 84 2 859 2 178 2 410 2 529 2 752 2 644 4 301 6 180 18 415 6 303 2 755 4 647 2 864 2 186 2 868 6 307 2 311 2 188 2 189 18 417 2 653 12 317 4 539 8 872 8 96 6 193 2 657 10 542 2 425 2 426 2 428 4 768 6 430 4 198 2 
699 2 362 2 497 2 335 4 270 3 301 3 829 2 828 2 271 2 675 2 242 2 571 3 651 2 653 2 402 2 217 2 715 2 657 6 762 2 602 2 815 2 73 3 49 2 747 2 
699 2 362 2 497 2 335 4 270 2 301 2 829 2 828 2 271 2 675 2 242 2 571 2 651 2 653 2 402 2 217 2 715 2 657 6 762 2 602 2 815 2 73 2 49 2 747 2 
699 2 362 2 497 2 335 4 270 2 301 2 829 2 828 2 271 2 675 2 242 2 571 2 651 2 653 2 402 2 217 2 715 2 657 6 762 2 602 2 815 2 73 2 49 2 747 2 
667 2 553 4 392 4 207 4 271 2 60 2 108 2 341 2 13 2 170 3 626 2 685 2 402 4 67 2 687 2 219 6 172 2 457 2 848 2 742 2 73 3 128 2 587 4 227 2 524 3 362 10 860 3 301 3 754 2 182 2 866 4 185 2 37 2 539 6 715 2 762 2 658 4 544 4 430 2 821 2 
667 2 553 4 392 4 103 2 207 4 271 2 60 2 108 2 341 2 13 2 170 2 626 2 685 2 402 4 67 2 687 2 219 6 172 2 457 2 848 2 742 2 73 2 128 2 587 4 227 2 524 2 362 10 860 2 704 2 301 2 754 2 182 2 866 4 185 2 37 2 539 4 715 2 762 2 812 2 658 4 544 4 430 2 821 2 
667 2 553 4 392 4 103 2 207 4 271 2 60 2 108 2 341 2 13 2 170 2 626 2 685 2 402 4 67 2 687 2 219 6 172 2 457 2 848 2 742 2 73 2 128 2 587 4 227 2 524 2 362 10 860 2 704 2 301 2 754 2 182 2 866 4 185 2 37 2 539 4 715 2 762 2 812 2 658 4 544 4 430 2 821 2 
667 2 553 4 392 4 103 2 207 4 271 2 60 2 108 2 341 2 13 2 170 2 626 2 685 2 402 4 67 2 687 2 219 6 172 2 457 2 848 2 742 2 73 2 128 2 587 4 227 2 524 2 362 10 860 2 704 2 301 2 754 2 182 2 866 4 185 2 37 2 539 4 715 2 762 2 812 2 658 4 544 4 430 2 821 2 
667 2 553 4 392 4 103 4 207 4 271 2 60 2 108 2 341 2 13 2 170 2 626 2 685 2 402 4 67 2 687 2 219 6 172 2 457 2 848 2 742 2 73 2 128 2 587 4 227 2 524 2 362 10 860 2 704 4 301 2 754 2 182 2 866 4 185 2 37 2 539 4 715 2 762 2 812 4 658 4 544 4 430 2 821 2 
400 2 788 2 294 2 750 2 249 2 
813 2 609 2 575 2 509 2 125 2 249 2 758 2 
550 1 25 2 131 2 772 2 80 2 611 1 83 2 589 2 701 2 362 10 496 2 775 2 618 1 9 2 508 1 274 2 397 2 91 2 345 2 372 1 538 2 656 2 574 2 402 8 792 2 720 2 
587 4 667 2 539 5 871 2 495 2 103 1 687 2 729 2 289 4 457 2 428 2 108 2 430 2 341 2 211 2 37 2 
551 2 857 7 362 1 361 2 402 1 266 2 628 2 658 2 152 2 616 2 29 2 207 2 866 2 222 4 343 2 819 2 260 1 785 2 
551 2 857 6 361 2 266 4 628 2 658 2 616 2 152 4 29 2 207 2 866 2 222 4 343 4 819 2 785 2 
551 6 857 10 362 1 361 8 402 1 266 8 628 2 658 2 616 2 152 8 29 2 207 2 866 2 222 4 343 8 819 2 260 1 785 2 
857 2 266 2 628 2 658 2 616 2 152 2 29 2 207 2 866 2 222 2 343 2 819 2 785 2 
262 2 822 2 491 8 771 4 823 2 773 2 501 2 563 3 565 2 731 2 396 2 676 16 567 2 399 4 569 2 169 2 625 2 277 8 402 18 69 2 406 2 127 2 358 4 79 2 858 2 85 2 362 18 527 2 859 2 178 2 234 2 187 2 761 2 763 2 874 2 254 2 382 2 155 2 547 2 256 16 158 2 431 2 384 2 549 1 
262 2 822 2 491 14 333 2 823 2 773 2 558 4 501 6 563 2 565 2 731 2 782 4 396 2 676 36 567 6 399 8 445 2 511 4 277 14 402 26 115 2 738 2 845 10 630 2 353 2 406 2 72 2 296 4 522 2 358 2 858 2 85 2 362 28 177 6 859 8 178 8 367 2 862 4 804 10 867 2 241 4 869 4 310 2 92 2 93 2 244 2 149 2 250 4 718 2 763 2 874 2 764 6 484 2 254 2 547 6 155 2 606 2 817 2 256 14 431 2 548 2 199 2 
262 2 358 2 491 6 771 4 333 2 858 2 177 1 823 4 362 12 85 2 178 4 859 4 773 2 804 2 731 4 676 12 187 2 92 2 569 2 277 6 402 12 738 1 718 1 845 2 763 2 254 4 353 1 155 2 406 2 256 4 548 2 127 2 
822 2 262 2 491 20 3 2 612 2 823 2 494 2 54 2 773 2 557 2 558 2 501 4 561 2 563 2 439 2 504 4 163 4 440 2 565 2 833 2 731 2 165 2 442 2 782 2 273 2 396 2 676 45 344 2 567 4 444 2 399 6 445 2 569 1 167 2 169 2 625 2 735 2 277 20 402 44 287 2 630 2 69 2 406 2 296 2 637 2 225 2 358 3 858 2 362 46 85 2 859 3 178 3 27 2 367 2 234 2 236 4 530 2 645 2 862 2 592 2 805 2 89 2 138 2 865 2 807 2 140 2 241 2 472 2 141 2 310 2 314 2 316 4 244 2 376 2 377 2 541 2 250 2 97 2 874 2 763 2 322 2 764 6 484 2 254 2 382 2 814 6 155 2 547 4 256 37 431 2 723 2 199 2 
117 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 652 580 
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V ERROR java.lang.ArrayIndexOutOfBoundsException (136,453,473,487,656,724,752,769) 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 471 154 2 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR utilMDE.Assert$AssertionException (675,851) 215 328 665 85 
daikon.test.VarInfoNameTest:testJML()V ERROR utilMDE.Assert$AssertionException (675,851) (675,851) 359 328 665 85 
daikon.test.VarInfoNameTest:testEscForall()V ERROR utilMDE.Assert$AssertionException (675,851) 215 328 665 85 
daikon.test.VarInfoNameTest:testSubscript()V ERROR utilMDE.Assert$AssertionException (675,851) 215 328 665 85 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:eq(DD)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:gt(II)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.ProglangType:isPseudoArray()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfo:new_ppt()V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lte(II)Z
daikon.ProglangType:dimensions()I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_2_16(I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaCharStream:readChar()C
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.MathMDE:gcd([I)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.MathMDE:pow_fast(II)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | STATEMENT | 17277 | stmt -> ;
daikon.Quant:lexLTE([I[I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ValueTuple:size()I
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexEqual([I[I)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.MathMDE:gcd(JJ)J
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:eltsLT([II)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:eq(II)Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.ProglangType:baseIsScalar()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.Quant:eltsEqual([II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:setEqual([I[I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:arity()I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.Quant:gte(II)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.PptSlice0:arity()I
daikon.Quant:memberOf(S[S)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:isScalar()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.ProglangType:isIntegral()Z
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | ASSIGN | 63729 | = null
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:lexLT([I[I)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:sameLength([I[I)Z
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:ne(II)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_1()Z
utilMDE.Intern:intern([I)[I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_3R_51()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.Debug:logDetail()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaCharStream:getEndColumn()I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern:intern([J)[J
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object; | RETURN | 20497 | return null
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_47()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaCharStream:ReadByte()C
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:BeginToken()C
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaCharStream:getEndLine()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.Intern:numIntArrays()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:jj_3_16()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Ppt:Ppt()V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.Intern:intern([D)[D
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:concat([I[I)[I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:memberOf(F[F)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaCharStream:FillBuff()V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.Quant:union([I[I)[I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.RootNode:RootNode()V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.ProglangType:isArray()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:noDups([I)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.ProglangType:baseIsIntegral()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:passes()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:subsetOf([S[S)Z
jtb.JavaCharStream:getBeginLine()I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice2:arity()I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | ASSIGN | 2763 | = null
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.PptSlice1:num_samples()I
utilMDE.MathMDE:negate(I)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z | STATEMENT | 166542 | stmt -> ;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Debug:logOn()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd_differences([I)I | CONSTANT | 5121 | 0 -> 1
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:eltwiseLTE([I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariants:Invariants()V
daikon.Quant:lt(II)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V | CONDITION | 18478 | if (x) -> if (!x)
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:subsetOf([D[D)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:eltsLteIndex([I)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V | ASSIGN | 25295 | = null
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.Quant:lexGT([I[I)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:eq(JJ)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 6772 | = null
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:slice([III)[I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:eltsGTE([II)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:subsetOf([F[F)Z | OPERATOR | 118000 | ++ -> --
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.InvMap:InvMap()V
daikon.Quant:memberOf(J[J)Z
daikon.VarInfo:relate_var()V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:eq(FF)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaCharStream:backup(I)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.Invariant:prob_and(DD)D
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.MathMDE:sign(I)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:jj_3R_48()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
208 6 250 2 396 4 332 2 659 2 230 2 93 2 475 4 579 2 96 2 703 2 822 2 155 2 850 2 540 2 490 2 463 2 240 2 135 2 860 2 746 2 773 2 114 2 
822 4 208 14 383 6 461 2 230 5 490 4 475 12 240 4 858 4 135 8 579 4 361 2 347 2 773 8 550 6 205 4 703 8 
77 2 528 2 275 2 731 6 847 2 605 2 671 2 79 2 
720 2 246 2 36 2 650 2 42 2 580 2 744 2 652 2 204 2 281 2 717 2 
3 2 210 2 146 4 370 2 431 2 212 2 6 2 700 2 708 2 159 2 318 2 542 2 219 2 102 2 646 2 385 2 647 2 829 2 387 2 438 2 548 2 599 2 322 2 497 2 655 2 65 2 24 2 657 2 336 2 450 2 68 2 34 2 294 4 790 2 675 4 193 4 39 2 851 4 459 2 460 2 857 2 243 4 748 2 526 2 
208 53 629 2 836 6 250 4 396 6 230 22 371 4 93 2 475 48 579 16 345 2 32 6 263 6 703 32 822 16 10 2 675 4 851 4 566 6 853 4 383 6 587 2 588 8 104 6 270 4 490 16 240 16 199 4 302 2 272 4 221 2 858 4 135 32 773 32 550 6 205 4 774 4 114 16 
182 2 789 2 6 2 
422 2 207 2 142 2 143 2 39 2 12 2 251 22 609 2 594 2 739 2 399 2 614 2 494 2 265 10 
675 2 597 2 803 2 228 2 851 2 558 4 34 2 148 2 100 2 
115 6 823 2 791 2 130 2 692 2 30 6 697 2 801 2 668 6 84 2 701 2 
628 2 675 2 140 4 851 2 0 2 162 6 694 2 16 6 306 6 786 2 324 6 52 4 833 2 
208 28 396 10 250 6 210 2 230 12 93 4 475 26 211 8 579 10 345 2 347 4 348 2 703 16 537 2 406 2 407 4 822 10 675 6 851 6 515 2 104 8 794 2 270 6 490 10 240 10 135 16 388 8 773 16 277 4 114 8 
637 4 826 6 
650 2 
574 2 
851 2 346 2 
851 4 828 2 310 2 
423 1 87 1 426 16 753 2 429 2 633 2 95 2 635 1 213 16 5 2 758 2 759 2 8 2 435 4 220 2 17 2 546 2 107 2 436 2 547 2 20 2 224 2 551 2 21 2 113 2 555 2 25 2 443 2 776 2 228 2 27 2 559 1 779 2 337 1 662 8 124 5 343 6 667 2 561 2 233 2 451 32 787 2 236 4 351 2 672 2 352 6 353 2 673 2 354 1 35 2 564 2 675 32 565 2 129 2 238 2 678 1 462 2 570 2 40 4 795 2 802 2 360 2 362 3 44 2 804 1 363 2 365 2 138 2 810 2 573 3 144 16 248 6 469 2 816 12 372 2 256 2 373 1 259 32 260 2 478 2 582 3 376 2 51 2 483 2 151 3 485 2 821 2 153 2 53 3 707 2 380 24 55 4 382 2 824 8 158 2 592 1 593 2 386 3 60 2 273 2 492 2 493 2 598 4 389 1 390 2 831 2 716 2 495 2 604 1 284 1 719 2 173 3 175 2 503 2 611 4 504 4 842 1 185 2 401 3 729 24 70 2 72 2 505 2 506 2 292 2 508 2 188 2 619 2 733 3 849 2 510 3 851 34 512 2 78 2 296 3 195 2 297 2 517 3 299 2 198 2 414 6 301 1 202 8 524 1 859 16 525 4 203 2 
368 10 424 2 813 14 249 2 425 2 427 2 817 2 254 2 530 2 477 4 433 2 312 14 377 2 264 14 641 4 538 10 267 10 583 2 645 2 317 14 488 14 541 2 58 2 767 6 62 14 439 10 600 2 278 14 168 2 552 2 603 2 279 2 170 2 327 14 775 8 22 2 718 20 23 14 834 4 394 2 116 4 722 2 66 4 118 2 658 2 334 2 120 2 501 6 119 2 500 10 840 8 449 14 180 2 339 4 183 2 286 4 342 4 397 8 560 4 287 2 126 6 232 50 288 10 403 6 235 2 73 14 616 8 75 50 618 2 194 6 295 50 852 2 792 2 412 2 519 4 197 2 856 2 797 8 740 8 862 2 685 18 45 18 686 2 
111 2 6 2 404 2 269 2 643 1 
830 2 111 2 6 2 404 2 269 2 419 2 
407 2 613 2 109 2 6 2 269 2 128 2 
430 2 497 2 
407 2 741 2 6 2 269 2 
56 2 434 2 
750 2 612 2 
189 2 112 2 
31 2 261 2 
612 2 31 2 226 2 
612 2 31 2 83 2 
612 2 31 2 684 2 
612 2 31 2 179 2 
48 2 607 2 338 6 730 2 6 2 269 2 596 6 768 2 
245 2 253 2 
407 2 613 2 830 2 757 2 6 2 269 2 128 2 
613 2 174 2 128 2 
613 2 128 2 473 2 
245 2 241 2 454 2 
613 2 128 2 
165 2 245 2 
257 2 128 2 
572 2 245 2 241 2 
189 2 706 2 241 2 
241 2 31 2 86 2 
241 2 56 2 91 2 
612 2 241 2 152 2 
245 2 413 2 
664 2 128 2 
189 2 484 2 
31 2 608 2 
43 2 56 2 
612 2 751 2 
245 2 316 2 
612 2 289 2 
274 2 56 2 
31 2 677 2 
189 2 712 2 
572 2 245 2 241 2 98 2 
572 2 245 2 241 2 98 2 793 2 
245 2 241 2 814 2 
245 2 241 2 283 2 
837 2 543 2 666 2 325 2 
705 2 408 2 752 2 487 2 251 4 778 2 196 2 724 2 725 2 782 2 4 2 214 2 136 4 769 2 453 2 656 2 
231 2 241 2 
241 2 227 2 128 2 
128 2 441 2 
70 2 
630 2 753 2 213 6 5 2 314 2 759 2 435 4 17 2 436 2 547 2 20 2 323 2 653 2 113 2 555 2 25 2 228 2 27 2 779 2 343 4 561 2 33 2 669 2 451 6 787 2 236 2 352 6 564 2 675 26 458 4 129 2 570 2 40 4 571 2 802 2 139 2 248 2 575 2 469 2 816 6 476 2 259 4 260 2 50 2 51 2 821 2 153 2 54 2 707 2 55 2 825 4 593 4 389 2 831 2 175 2 611 4 184 2 503 2 504 2 185 2 72 2 619 2 192 2 851 26 512 2 195 2 518 2 299 2 198 6 301 2 414 2 525 4 
630 2 753 2 213 6 5 2 314 2 759 2 642 2 435 4 17 2 436 2 547 2 20 2 224 2 323 2 113 2 555 2 25 2 228 2 27 2 779 2 343 6 561 2 669 2 451 6 787 2 236 2 672 2 352 6 564 2 675 26 458 4 129 2 570 2 40 4 571 2 802 2 139 2 467 2 248 2 575 2 469 2 816 6 476 2 259 4 478 2 260 2 50 2 51 2 821 2 153 2 54 2 707 2 55 2 825 4 593 4 389 2 831 2 175 2 611 4 184 2 503 2 504 2 185 2 72 2 619 2 851 26 512 2 195 2 518 2 299 2 198 6 301 2 414 2 525 4 206 2 
415 2 
636 2 761 2 
687 2 753 2 692 2 472 4 529 2 577 2 147 2 532 2 697 2 534 2 99 4 760 2 153 2 13 2 160 4 164 2 545 2 18 2 437 2 106 2 110 2 715 2 225 2 64 2 553 10 555 2 115 6 395 2 175 2 777 2 446 2 67 4 30 6 340 2 611 2 668 6 352 4 619 2 191 2 190 2 675 6 37 2 851 12 409 2 568 2 514 4 195 2 737 2 298 2 304 2 742 8 801 4 802 2 682 2 861 2 525 2 84 4 809 2 367 8 421 4 
687 2 753 2 692 2 472 4 529 2 577 2 147 2 532 2 697 2 534 2 150 2 701 2 99 4 760 2 153 2 315 2 13 2 160 4 164 2 545 2 18 2 437 2 106 2 110 2 715 2 225 2 64 2 553 10 555 2 115 8 395 2 175 2 777 2 446 2 67 4 30 6 340 2 611 2 668 8 352 4 619 2 191 2 190 2 675 6 851 12 409 2 568 2 514 4 195 2 298 2 411 4 304 2 742 8 801 4 802 2 682 2 861 2 525 2 84 4 809 2 367 8 421 4 
191 2 777 2 13 2 514 4 446 2 472 2 529 2 147 2 164 2 30 2 437 2 304 2 801 2 668 2 682 2 84 2 64 2 421 4 
687 2 753 2 472 4 529 2 577 2 147 2 532 2 697 2 534 2 701 2 99 4 760 2 153 2 13 2 160 4 164 2 545 2 18 2 437 2 106 2 110 2 715 2 225 2 64 2 553 6 555 2 115 6 395 2 175 2 777 2 446 2 67 4 30 4 340 2 611 2 668 6 352 4 619 2 191 2 190 2 675 6 37 2 851 12 409 2 568 2 514 4 195 2 737 2 298 2 304 2 742 4 801 4 802 2 682 2 861 2 525 2 84 4 809 2 367 4 421 4 
687 2 753 2 472 4 529 2 577 2 147 2 532 2 697 2 534 2 99 4 760 2 153 2 13 2 160 4 164 2 545 2 18 2 437 2 106 2 110 2 715 2 225 2 64 2 553 6 555 2 115 6 395 2 175 2 777 2 446 2 67 4 30 6 340 2 611 2 668 4 352 4 619 2 191 2 190 2 675 6 791 2 37 2 851 12 409 2 568 2 514 4 195 2 737 2 298 2 304 2 742 4 801 4 802 2 682 2 861 2 525 2 84 4 809 2 367 4 421 4 
687 2 753 2 692 2 472 4 529 2 577 2 147 2 532 2 697 2 534 2 99 4 760 2 153 2 13 2 160 4 164 2 545 2 18 2 437 2 106 2 110 2 715 2 225 2 64 2 553 6 555 2 115 6 395 2 175 2 777 2 446 2 67 4 30 6 340 2 611 2 668 6 352 4 619 2 191 2 190 2 675 6 37 2 851 12 409 2 568 2 514 4 195 2 737 2 298 2 304 2 742 8 801 4 802 2 682 2 861 2 525 2 84 4 809 2 367 4 421 4 
687 2 753 2 692 2 472 4 529 2 577 2 147 2 532 2 697 2 534 2 99 4 760 2 153 2 13 2 160 4 164 2 545 2 18 2 437 2 106 2 110 2 715 2 225 2 64 2 553 10 555 2 115 8 395 2 175 2 777 2 446 2 67 4 30 8 340 2 611 2 668 6 352 4 619 2 191 2 190 2 675 6 791 2 37 2 851 12 409 2 568 2 514 4 195 2 737 2 298 2 304 2 742 8 801 4 802 2 682 2 861 2 525 2 84 4 809 2 367 8 421 4 
687 2 753 2 692 2 472 4 529 2 577 2 147 2 532 2 697 2 534 2 99 4 760 2 153 2 13 2 160 4 164 2 545 2 18 2 437 2 106 2 110 2 715 2 225 2 64 2 553 10 555 2 115 6 395 2 175 2 777 2 446 2 67 4 30 6 340 2 611 2 668 6 352 4 619 2 191 2 190 2 675 6 37 2 851 12 409 2 568 2 514 4 195 2 737 2 298 2 304 2 742 8 801 4 802 2 682 2 861 2 525 2 84 4 809 2 367 8 421 4 
213 6 5 2 216 6 9 2 13 2 435 4 17 2 649 2 436 2 437 2 18 2 222 2 224 2 225 2 25 2 228 2 446 2 447 6 29 2 448 2 30 8 668 4 451 8 236 2 672 2 675 24 37 2 458 4 676 2 680 2 40 4 682 2 47 4 687 2 248 2 472 4 474 1 696 2 697 4 259 2 51 2 262 2 266 2 54 2 486 2 55 2 61 6 713 6 276 1 715 2 64 2 282 2 67 4 502 2 504 2 72 2 291 1 293 6 511 8 512 2 514 4 298 2 299 2 520 2 742 2 304 2 745 6 525 4 84 4 749 1 527 6 753 2 89 4 529 2 92 6 533 1 532 4 97 2 756 2 534 2 99 8 760 2 762 2 765 2 103 1 766 6 545 2 106 2 320 1 110 2 549 2 553 2 555 2 113 2 115 12 777 2 331 2 779 2 123 2 780 2 340 2 343 6 784 6 561 12 346 6 787 2 352 6 564 2 791 4 129 2 568 2 357 2 571 2 358 2 801 4 802 2 805 7 809 2 574 6 816 4 577 2 369 2 147 2 378 7 821 2 153 2 379 2 824 2 160 6 161 2 589 6 164 2 828 6 595 6 832 2 392 2 393 2 171 2 395 2 175 2 839 10 611 4 184 4 185 2 848 2 619 2 191 2 190 2 851 46 409 4 410 2 195 2 854 1 198 6 414 2 201 1 416 6 861 2 421 4 
527 6 753 2 89 4 529 2 92 6 532 4 213 6 97 2 756 2 5 2 534 2 760 2 99 8 216 6 9 2 762 2 11 2 13 2 435 4 765 2 766 6 649 2 17 2 545 2 18 2 437 2 436 2 106 2 222 2 110 2 224 2 225 2 549 2 553 2 113 2 555 2 25 2 115 12 228 2 777 2 331 2 447 6 446 2 448 2 29 2 123 2 779 2 30 8 340 2 780 2 343 6 668 8 784 6 346 6 561 12 451 8 787 2 236 4 672 2 352 6 564 2 675 26 458 4 37 2 676 2 129 2 568 2 357 2 680 2 40 4 571 2 358 2 801 4 802 2 682 2 366 2 809 2 47 4 687 2 574 6 248 2 692 4 472 4 816 8 369 2 577 2 147 2 696 2 697 4 259 2 51 2 262 2 821 2 266 2 153 2 379 2 486 2 54 2 55 4 824 2 160 6 161 2 589 6 593 2 828 6 164 2 595 6 61 6 713 6 832 2 715 2 392 2 64 2 393 2 282 2 171 2 395 2 175 2 839 10 67 4 502 2 184 4 611 4 504 4 185 2 72 2 293 6 848 2 190 2 191 2 619 2 511 8 851 48 409 4 512 2 410 2 514 4 195 2 298 2 520 2 299 2 198 6 414 2 304 2 742 6 416 6 745 6 861 2 525 4 84 4 421 4 
527 6 753 2 89 4 529 2 92 6 532 4 213 6 97 2 756 2 5 2 534 2 760 2 99 8 216 6 9 2 762 2 11 2 13 2 435 4 765 2 766 6 649 2 17 2 545 2 18 2 437 2 436 2 106 2 222 2 110 2 224 2 225 2 549 2 553 6 113 2 555 2 25 2 115 12 228 2 777 2 331 2 447 6 446 2 448 2 29 2 123 2 779 2 30 8 340 2 780 2 343 6 668 8 784 6 346 6 561 12 451 8 787 2 236 4 672 2 352 6 564 2 675 26 458 4 37 2 676 2 129 2 568 2 357 2 680 2 40 4 571 2 358 2 801 4 802 2 682 2 366 2 367 4 809 2 47 4 687 2 574 6 248 2 692 4 472 4 816 8 369 2 577 2 147 2 696 2 697 4 259 2 51 2 262 2 821 2 266 2 153 2 379 2 486 2 54 2 55 4 824 2 160 6 161 2 589 6 593 2 828 6 164 2 595 6 61 6 713 6 832 2 715 2 392 2 64 2 393 2 282 2 171 2 395 2 175 2 839 10 67 4 502 2 184 4 611 4 504 4 185 2 72 2 293 6 848 2 190 2 191 2 619 2 511 8 851 48 409 4 512 2 410 2 514 4 195 2 298 2 520 2 299 2 198 6 414 2 304 2 742 6 416 6 745 6 861 2 525 4 84 4 421 4 
213 8 5 2 640 2 216 6 9 2 11 2 13 2 435 4 17 2 649 4 436 2 437 2 18 2 224 2 225 2 25 2 228 2 446 2 447 12 29 2 448 2 30 10 668 10 451 12 455 6 236 4 672 2 675 24 37 2 458 6 676 2 680 2 40 4 682 2 47 4 687 2 248 4 692 4 472 4 696 2 695 2 697 4 258 6 259 4 482 2 51 2 701 2 262 2 266 2 54 2 486 2 55 4 61 6 713 6 715 2 64 2 282 2 498 6 67 4 502 2 504 4 72 2 293 6 511 8 512 2 514 4 298 2 299 2 520 2 300 2 742 6 743 2 304 2 745 6 525 4 84 4 527 12 753 2 89 4 529 2 92 6 532 4 97 2 756 2 534 2 536 6 99 8 760 2 762 2 765 2 766 12 545 2 106 2 110 2 549 2 553 6 555 2 113 2 556 6 115 16 777 2 331 2 117 2 779 2 123 2 340 2 780 2 341 2 343 6 783 6 784 6 561 10 346 12 787 2 352 6 564 2 791 2 129 2 568 2 569 6 357 2 133 6 571 2 358 2 801 4 802 2 366 2 809 2 367 4 574 12 816 10 577 2 369 2 147 2 819 2 821 2 153 2 379 2 824 4 160 6 161 2 589 6 593 2 164 2 828 12 595 6 832 2 392 2 393 2 171 2 395 2 175 2 839 8 611 4 184 4 185 2 848 2 191 2 190 2 619 2 851 52 409 4 410 2 195 2 621 6 198 8 414 4 416 6 861 2 421 4 
687 2 115 4 395 2 777 2 692 2 529 2 67 2 577 2 147 2 30 6 697 2 668 6 534 2 760 2 99 2 190 2 191 2 37 2 851 4 568 2 514 2 160 2 164 2 742 6 801 4 682 2 110 2 861 2 225 2 64 2 84 4 367 4 809 2 553 4 421 2 
753 2 529 2 633 2 213 6 755 2 5 2 534 2 760 2 99 2 435 4 17 2 436 2 106 2 222 2 110 2 224 2 225 2 553 2 113 2 555 2 115 4 25 2 776 2 228 2 777 2 30 6 779 2 343 6 668 6 561 4 451 8 787 2 352 6 672 2 564 2 675 24 37 2 458 4 129 2 568 2 40 4 571 2 801 4 802 2 682 2 809 2 687 2 248 3 692 2 577 2 147 2 697 2 698 2 259 3 51 2 821 2 153 2 54 2 158 2 160 2 164 2 64 2 835 2 395 2 721 2 175 2 67 2 839 2 611 4 184 2 185 2 70 2 71 2 290 3 191 2 190 2 619 2 851 28 512 2 514 2 195 2 299 2 198 6 414 3 742 6 861 2 525 4 84 4 421 2 
88 2 809 2 760 2 
88 2 809 2 760 2 
88 2 631 2 753 2 89 2 529 2 532 4 213 2 5 2 760 6 99 4 216 2 644 2 13 2 435 4 17 2 545 2 436 2 319 2 224 2 553 6 113 2 555 2 25 2 115 16 228 2 777 4 333 2 335 2 121 2 779 2 30 12 340 2 343 6 668 12 561 4 669 4 451 2 787 2 236 4 672 2 352 6 564 2 675 16 791 4 129 2 568 2 40 4 571 2 358 2 801 4 802 2 809 4 367 4 47 2 815 2 692 4 472 4 816 4 369 2 577 2 255 2 697 4 259 2 479 2 699 2 51 2 701 4 821 2 153 2 704 2 54 2 55 4 160 4 166 2 715 2 175 2 178 2 839 2 67 2 841 2 611 4 184 6 504 4 402 4 405 2 72 4 848 2 619 2 191 2 851 24 409 2 512 2 514 2 195 2 855 4 299 2 198 2 304 2 742 6 305 2 525 4 307 2 84 4 421 2 
675 2 815 2 851 4 131 2 195 2 839 2 841 2 285 2 437 2 636 2 305 2 624 2 561 2 47 2 216 2 9 2 266 2 
88 2 631 2 753 2 89 2 529 2 532 4 432 2 213 2 5 2 760 6 99 4 216 2 644 2 13 2 435 4 17 2 545 2 436 2 224 2 553 6 113 2 555 2 25 2 442 2 115 16 228 2 777 4 333 4 121 2 779 2 30 12 340 2 343 6 668 12 561 2 669 4 451 2 787 2 236 4 672 2 352 6 564 2 675 16 791 4 129 2 568 2 40 4 571 2 358 2 801 4 802 2 809 4 367 4 141 2 815 2 692 4 472 4 816 4 369 2 577 2 697 4 259 4 479 2 699 2 51 2 701 4 821 2 153 2 704 2 54 2 55 4 160 4 166 2 715 2 496 2 175 2 178 2 67 2 841 2 611 4 184 6 504 4 402 4 72 4 848 2 619 2 191 2 851 24 409 4 512 2 514 2 195 2 298 2 622 2 855 4 299 2 198 2 304 2 742 6 305 2 525 4 307 2 84 4 421 2 
88 2 631 2 753 2 89 2 428 2 529 2 532 4 213 2 5 2 760 6 99 4 216 2 644 2 13 2 435 4 648 2 17 2 545 2 436 2 224 2 553 6 113 2 555 2 25 2 115 16 228 2 777 4 333 2 121 2 779 2 30 12 340 2 343 6 668 12 561 4 452 2 669 4 451 2 787 2 456 2 236 4 672 2 352 6 564 2 675 16 791 4 129 2 568 2 40 4 571 2 358 2 801 4 802 2 809 4 367 4 47 2 815 2 692 4 472 4 816 4 369 2 577 2 697 4 259 2 479 2 699 2 51 2 701 4 821 2 153 2 704 2 54 2 55 4 160 4 591 2 166 2 715 2 175 2 178 2 839 2 67 2 841 2 611 4 184 6 504 4 402 4 72 4 848 2 619 2 191 2 851 24 409 4 512 2 514 2 195 2 298 2 855 4 299 2 198 2 304 2 742 6 305 2 525 4 307 2 84 4 421 2 
753 2 2 2 634 2 213 6 313 2 764 2 435 2 765 2 17 2 436 2 108 2 549 2 654 2 555 2 25 2 228 2 29 2 122 2 779 2 123 2 343 2 561 2 451 8 670 2 352 6 355 2 356 2 675 18 458 4 129 2 357 2 679 2 40 2 681 2 802 2 464 2 683 2 691 1 248 2 470 2 471 2 696 2 259 2 481 2 51 2 820 2 821 2 153 2 154 2 54 2 271 2 711 4 391 2 714 2 167 2 175 2 181 2 611 4 184 2 726 2 185 2 186 2 619 2 851 24 512 2 195 2 299 2 198 6 523 2 414 2 82 2 417 1 525 4 418 2 
690 2 248 3 213 2 259 3 185 2 49 2 451 2 350 2 675 2 509 2 458 2 763 1 851 2 513 2 620 2 623 3 384 2 198 2 649 6 105 2 414 3 81 2 223 2 601 4 808 2 
690 2 248 2 213 2 259 2 185 2 49 2 451 2 350 2 675 2 509 2 458 2 851 2 513 2 620 2 623 2 384 2 198 2 649 6 105 2 414 2 81 2 223 2 601 4 808 2 
690 2 248 2 213 2 259 2 185 2 49 2 451 2 350 2 675 2 509 2 458 2 851 2 513 2 620 2 623 2 384 2 198 2 649 6 105 2 414 2 81 2 223 2 601 4 808 2 
208 5 144 2 426 2 693 2 475 4 259 3 579 2 374 2 375 2 703 2 822 2 156 2 57 4 104 4 270 2 15 3 490 2 321 3 651 2 773 2 229 4 606 2 499 6 781 2 398 4 185 2 451 2 76 4 562 4 675 4 38 2 851 10 414 3 134 3 240 2 135 2 807 2 808 2 811 2 627 2 
208 4 144 2 426 2 693 2 475 4 259 2 579 2 374 2 375 2 703 2 822 2 156 2 57 4 104 4 270 2 15 2 490 2 321 2 651 2 773 2 114 2 229 4 606 2 499 6 230 2 781 2 398 4 185 2 345 2 451 2 76 4 562 4 675 4 38 2 851 10 414 2 134 2 240 2 135 2 807 2 808 2 811 2 627 2 
208 4 144 2 426 2 693 2 475 4 259 2 579 2 374 2 375 2 703 2 822 2 156 2 57 4 104 4 270 2 15 2 490 2 321 2 651 2 773 2 114 2 229 4 606 2 499 6 230 2 781 2 398 4 185 2 345 2 451 2 76 4 562 4 675 4 38 2 851 10 414 2 134 2 240 2 135 2 807 2 808 2 811 2 627 2 
208 4 144 2 426 2 693 2 475 4 259 2 579 2 374 2 375 2 703 2 822 2 156 2 57 4 104 4 270 2 15 2 490 2 321 2 651 2 773 2 114 2 229 4 606 2 499 6 230 2 781 2 398 4 185 2 345 2 451 2 76 4 562 4 675 4 38 2 851 10 414 2 134 2 240 2 135 2 807 2 808 2 811 2 627 2 
208 5 144 2 426 2 693 2 475 4 259 2 579 2 374 2 375 2 703 2 822 2 156 2 57 4 104 4 270 2 15 2 490 2 321 2 651 2 773 2 114 4 229 4 606 2 499 6 230 4 781 2 398 4 185 2 345 4 451 2 76 4 562 4 675 4 38 2 851 10 414 2 134 2 240 2 135 2 807 2 808 2 811 2 627 2 
466 2 535 2 575 2 723 2 554 2 163 2 796 2 
688 2 101 2 846 2 308 2 163 2 626 2 
26 2 689 2 444 2 176 2 447 2 90 2 344 2 127 1 149 2 234 1 639 2 671 1 675 8 851 10 567 2 516 2 738 2 710 2 79 1 80 2 799 2 802 2 771 2 806 1 242 2 63 2 
208 15 3 2 230 4 661 2 475 12 94 2 212 2 579 6 345 2 581 2 703 6 187 2 675 6 822 6 851 6 566 4 586 2 736 2 383 4 588 2 587 1 104 4 270 2 490 6 199 2 240 6 135 6 773 6 280 2 205 2 114 3 
457 2 675 1 247 2 851 1 209 2 57 2 827 2 838 2 398 2 615 2 625 2 770 2 440 7 309 2 74 1 420 2 562 2 557 4 
457 2 247 2 209 2 57 2 827 2 838 2 398 2 615 4 770 2 625 4 440 6 309 4 420 2 562 2 557 4 
457 2 675 1 247 2 851 1 209 2 57 2 827 6 838 2 398 2 615 8 770 8 625 8 440 10 309 8 74 1 420 2 562 2 557 4 
457 2 247 2 209 2 57 2 838 2 398 2 615 2 625 2 440 2 309 2 420 2 562 2 557 2 
632 2 754 6 531 2 215 2 435 8 218 4 19 2 224 4 772 2 328 2 445 2 330 1 28 2 660 2 665 2 343 18 785 2 672 4 674 2 675 26 239 1 40 10 132 2 41 2 798 2 800 2 137 1 364 2 46 2 244 1 465 2 145 2 468 2 576 1 252 2 821 6 268 2 381 2 585 4 709 2 590 2 59 2 491 2 602 4 169 2 172 1 177 2 400 2 728 2 844 4 617 2 732 2 735 2 851 30 512 4 299 6 303 1 85 2 
328 2 1 2 28 2 468 2 754 2 663 2 531 2 665 2 343 10 125 2 578 2 69 2 728 2 843 2 844 10 845 2 785 2 702 2 821 2 788 2 734 2 674 2 237 2 675 18 157 2 851 18 512 2 435 6 709 2 14 2 40 6 299 2 800 2 359 2 200 2 303 2 364 2 85 2 
812 4 468 2 632 2 252 2 754 8 531 2 311 2 818 4 638 2 480 2 215 2 7 2 821 4 217 2 381 2 584 2 585 6 435 10 709 4 489 2 218 6 590 2 544 2 59 4 491 2 224 6 602 2 326 2 169 2 328 2 445 2 329 2 28 2 177 2 660 2 665 2 343 26 727 2 69 2 400 2 728 4 844 14 785 2 349 2 507 2 672 6 617 2 732 2 563 2 674 2 675 32 735 2 851 36 512 2 40 12 299 4 521 2 41 2 522 4 800 2 798 2 200 2 747 2 46 2 244 2 85 2 
328 2 28 2 468 2 754 2 610 2 531 2 665 2 343 12 69 2 728 2 844 4 215 2 821 2 672 4 674 2 675 12 735 2 851 14 512 2 435 4 709 2 40 4 299 2 800 2 303 2 224 4 85 2 
539 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V ERROR utilMDE.Assert$AssertionException (147,480) (147,480) 
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR java.lang.NullPointerException 0 (488,772) 185 (84,294,316,534,607,648,793) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V ERROR java.lang.NullPointerException 0 (488,772) 185 (84,294,316,534,607,648,793) 
utilMDE.TestUtilMDE:testTestUtilMDE()V ERROR java.lang.NullPointerException 839 
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.NullPointerException 0 (488,772) 185 (84,294,316,534,607,648,793) 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 839 
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 571 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 14 
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 166 201 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 213 524 721 253 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 213 524 721 253 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 598 524 721 253 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 213 524 721 253 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | RETURN | 3858 | return null
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaCharStream:getBeginColumn()I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I | ASSIGN | 3291 | = null
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.Quant:pairwiseLT([I[I)Z
daikon.Quant:subsetOf([S[S)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:eq(FF)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eq(JJ)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.RootNode:RootNode()V
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat; | CONDITION | 1730 | if (x) -> if (!x)
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Intern:intern([J)[J
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:concat([I[I)[I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.ModBitTracker:num_sets()I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:eltsGT([II)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.PptSlice1:arity()I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
daikon.diff.Node:Node()V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z | ASSIGN | 9658 | = null
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:sign(I)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:lt(II)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:union([I[I)[I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(II)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.Quant:eltsEqual([II)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:pairwiseGTE([I[I)Z
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.Quant:eltwiseLT([I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String; | STATEMENT | 43923 | stmt -> ;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 86983 | return null
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.Invariant:logDetail()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.ValueTuple:isMissing(I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(J[J)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Quant:ne(II)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.ArraysMDE:isSubset([D[D)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Debug:logDetail()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:subsetOf([F[D)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Options.OptionInfo:argument_required()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Invariant:prob_or(DD)D
daikon.ProglangType:baseIsScalar()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.MathMDE:gcd_differences([I)I
daikon.Debug:logOn()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:slice([III)[I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.diff.InvMap:InvMap()V
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:max([I)I
daikon.ValueTuple:size()I
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:subsetOf([D[D)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:memberOf(D[F)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DD)D
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice2:arity()I
utilMDE.Assert:assertTrue(Z)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I | CONSTANT | 14318 | 112 -> 0
daikon.PptName:isEnterPoint()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.Field:java_field(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd([I)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:justified()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaCharStream:ReadByte()C
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_vars()I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.Quant:eltwiseLTE([I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_3_16()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONSTANT | 14703 | 0 -> 1
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:lte(II)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:memberOf(I[I)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator; | CONDITION | 15105 | if (x) -> if (!x)
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:gte(II)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getBeginLine()I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:sum([[I)I
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:logOn()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:subsetOf([J[J)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Ppt:Ppt()V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.PptSlice0:arity()I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaCharStream:BeginToken()C
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:eq(DD)Z
daikon.Quant:eltwiseGT([I)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:jj_2_16(I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V | ASSIGN | 915 | = null
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object; | RETURN | 10511 | return null
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:gt(II)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.ModBitTracker:split(I)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.ProglangType:dimensions()I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_ntk()I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ModBitTracker:num_samples()I
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptSlice1:num_samples()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator; | ASSIGN | 2309 | = null
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.WeakHasherMap:size()I
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.Quant:eltsNotEqual([II)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
726 4 733 2 161 2 259 2 147 2 480 2 398 2 638 2 348 2 
420 6 87 2 655 6 305 2 682 2 89 2 357 6 64 2 284 2 171 2 389 2 
641 2 290 2 147 2 480 2 4 4 532 2 474 4 360 4 361 2 701 4 462 2 174 4 301 2 
0 2 772 2 185 2 22 2 346 2 793 2 
508 6 786 4 
486 2 
343 2 749 2 590 4 1 2 444 2 806 2 489 2 347 4 398 2 182 4 122 2 651 2 299 2 552 4 710 2 20 2 712 2 713 2 199 2 365 2 141 2 771 2 513 2 371 2 569 2 835 2 147 4 88 2 518 2 377 2 727 2 91 2 155 2 629 2 327 2 843 2 633 2 480 4 734 2 846 2 109 2 797 2 742 2 385 2 
233 2 234 6 0 20 772 14 316 4 488 6 346 14 147 4 149 6 294 4 212 8 648 2 812 6 185 14 580 6 607 8 333 2 480 4 793 2 560 6 534 4 105 21 196 2 22 2 114 6 543 6 
839 2 
391 2 818 2 381 2 408 22 268 10 238 2 383 2 61 2 258 2 510 2 742 2 23 2 720 2 544 2 
12 2 770 2 0 2 772 2 773 2 346 2 645 2 793 2 337 2 609 2 848 2 185 2 22 2 
234 6 772 8 0 12 316 4 488 4 346 8 149 4 320 2 560 4 212 4 534 4 105 16 124 2 812 6 185 8 628 2 114 4 
437 2 410 2 503 2 459 2 428 2 797 2 282 6 839 2 170 2 539 2 273 2 511 2 467 2 
312 2 99 2 397 2 585 2 586 2 411 2 440 2 571 2 639 2 486 2 158 2 
748 2 116 2 3 2 2 2 236 2 237 2 348 2 121 1 753 6 240 6 126 2 127 2 244 2 9 4 128 2 355 2 452 1 248 2 251 6 456 2 16 2 557 2 657 6 458 3 134 2 766 3 139 2 661 2 767 2 662 2 366 4 263 3 143 2 368 2 566 3 369 12 666 2 264 2 28 2 774 2 32 2 147 34 779 2 671 2 781 3 152 3 674 2 785 2 157 2 784 3 39 2 579 1 677 2 275 2 678 2 382 2 582 16 788 2 789 2 479 2 584 2 681 1 480 32 280 2 795 2 684 24 683 16 384 2 693 2 287 2 695 5 49 8 50 2 589 8 803 2 53 2 805 24 54 32 594 2 396 1 57 2 597 2 807 2 399 2 809 3 495 2 188 2 300 2 189 2 817 1 502 32 71 2 608 1 413 2 414 2 610 2 506 2 612 2 200 1 307 2 75 2 507 4 717 3 718 2 310 1 313 4 831 2 421 2 423 16 832 2 515 3 317 2 210 4 724 2 426 2 837 4 620 2 429 2 728 1 621 1 215 1 92 4 430 2 325 2 523 8 626 3 95 2 525 2 329 2 842 2 433 1 102 1 735 16 104 2 441 2 740 2 849 12 635 2 110 1 339 2 340 1 442 2 111 3 741 4 744 2 231 2 743 2 745 2 342 2 
616 2 147 2 
732 2 147 4 463 2 
422 2 
175 2 178 4 179 6 181 6 119 2 493 6 296 2 811 2 649 6 63 2 813 6 757 8 402 6 702 2 604 2 551 4 352 2 302 2 653 30 759 6 654 2 656 2 504 6 412 2 764 2 21 6 505 2 765 6 716 2 825 2 308 2 204 2 202 2 719 2 82 2 86 2 617 2 570 2 722 2 424 30 321 8 324 2 672 6 153 6 522 6 783 2 217 6 627 6 96 4 379 2 219 6 276 2 160 6 434 2 220 2 435 4 529 30 530 2 165 2 535 2 484 2 688 2 286 2 692 2 800 6 
195 2 197 2 715 2 146 1 
197 2 78 2 
526 2 427 2 197 2 797 2 362 2 602 2 98 2 
197 2 752 2 602 2 
197 2 780 2 602 2 
136 2 715 2 336 2 
197 2 602 2 
205 2 336 2 
197 2 851 2 
715 2 336 2 335 2 
36 2 622 2 715 2 
235 2 715 2 703 2 
614 2 591 2 715 2 
715 2 172 2 218 2 
65 2 336 2 
197 2 260 2 
225 2 622 2 
703 2 561 2 
687 2 591 2 
699 2 172 2 
509 2 336 2 
172 2 148 2 
591 2 708 2 
8 2 703 2 
622 2 550 2 
715 2 47 2 336 2 335 2 
715 2 117 2 47 2 336 2 335 2 
715 2 93 2 336 2 
715 2 492 2 336 2 
471 2 819 2 714 2 326 2 
526 2 100 2 797 2 447 2 
526 2 427 2 100 2 797 2 184 2 447 2 
526 2 197 2 797 2 602 2 113 2 98 2 
385 2 242 2 
526 2 797 2 98 2 432 2 
591 2 118 2 
172 2 457 2 
239 2 622 2 
31 2 703 2 
103 2 172 2 703 2 
6 2 172 2 703 2 
172 2 472 2 703 2 
751 2 172 2 703 2 
55 2 696 2 270 2 475 6 526 2 680 6 797 2 826 2 
77 2 336 2 
405 2 642 4 40 2 303 2 314 2 42 2 408 6 255 2 448 2 548 2 686 4 37 2 575 2 417 2 451 2 694 2 787 2 311 2 
332 2 715 2 
236 2 
116 2 3 2 2 2 348 2 753 2 240 4 125 2 126 2 11 4 131 2 251 2 16 2 657 6 139 2 661 2 366 4 143 2 369 8 264 2 147 26 671 2 572 4 674 2 157 2 785 2 274 2 39 2 678 2 277 2 788 2 583 2 480 26 280 2 794 2 683 6 168 2 50 2 49 2 54 6 490 2 597 2 57 2 807 4 808 2 188 2 502 4 506 4 75 2 507 4 309 2 80 2 313 2 85 2 832 2 317 2 210 2 837 4 429 2 621 2 521 2 92 2 95 6 525 2 329 2 634 2 441 2 740 2 110 2 849 8 339 2 442 2 229 2 741 4 231 2 743 2 746 2 
116 2 3 2 2 2 348 2 753 2 240 6 125 2 126 2 11 4 131 2 251 2 16 2 657 6 134 2 139 2 661 2 366 4 143 2 369 8 264 2 669 2 147 26 671 2 572 4 674 2 157 2 785 2 39 2 678 2 277 2 788 2 583 2 584 2 480 26 280 2 794 2 683 6 168 2 50 2 49 2 54 6 490 2 597 2 57 2 807 4 495 2 188 2 502 4 506 2 75 2 507 4 309 2 206 2 313 2 85 2 832 2 317 2 210 2 837 4 323 2 429 2 621 2 521 2 92 2 95 6 525 2 329 2 634 2 441 2 740 2 110 2 849 8 339 2 442 2 229 2 741 4 231 2 743 2 746 2 
380 2 
822 2 328 2 
115 2 747 2 51 2 750 2 643 2 592 4 595 2 295 2 349 2 810 4 60 2 64 4 494 2 406 8 655 6 706 4 16 2 254 2 762 2 70 2 657 4 306 2 357 6 415 2 137 4 198 2 75 2 139 2 661 2 563 2 507 2 461 2 262 2 512 2 366 2 420 6 670 2 269 2 147 12 90 10 322 2 216 2 431 4 676 8 525 2 329 2 477 2 527 2 631 2 480 6 224 2 682 2 736 2 737 2 483 2 439 2 45 4 171 4 231 2 389 2 
115 2 747 2 51 2 750 2 643 2 592 4 295 2 349 2 810 4 60 2 64 4 406 8 655 8 706 4 16 2 254 2 821 2 762 2 305 2 70 2 657 4 306 2 357 8 415 2 198 2 137 4 661 2 75 2 139 2 507 2 563 2 461 2 262 2 366 2 512 2 420 6 670 2 269 2 147 12 90 10 322 2 216 2 431 4 676 8 525 2 329 2 331 2 477 2 527 2 631 2 480 6 224 2 682 2 736 2 737 2 483 2 439 2 45 4 285 4 171 4 231 2 389 2 
115 2 51 2 750 2 420 2 670 2 269 2 224 2 306 2 439 2 357 2 322 2 60 2 137 4 64 2 45 4 563 2 171 2 431 2 
115 2 747 2 51 2 750 2 643 2 592 4 595 2 295 2 349 2 810 4 60 2 64 4 494 2 406 4 655 6 706 4 16 2 254 2 762 2 305 2 70 2 657 4 306 2 357 6 415 2 137 4 198 2 75 2 139 2 661 2 563 2 507 2 461 2 262 2 512 2 366 2 420 4 670 2 269 2 147 12 90 6 322 2 216 2 431 4 676 4 525 2 329 2 477 2 527 2 631 2 480 6 224 2 682 2 736 2 737 2 483 2 439 2 45 4 171 4 231 2 
115 2 747 2 51 2 750 2 643 2 592 4 595 2 295 2 349 2 810 4 60 2 64 4 494 2 406 4 655 6 706 4 16 2 254 2 762 2 70 2 657 4 306 2 357 4 415 2 137 4 198 2 75 2 139 2 661 2 563 2 507 2 461 2 262 2 512 2 366 2 420 6 670 2 269 2 147 12 89 2 90 6 322 2 216 2 431 4 676 4 525 2 329 2 477 2 527 2 631 2 480 6 224 2 682 2 736 2 737 2 483 2 439 2 45 4 171 4 231 2 
115 2 747 2 51 2 750 2 643 2 592 4 595 2 295 2 349 2 810 4 60 2 64 4 494 2 406 8 655 6 706 4 16 2 254 2 762 2 70 2 657 4 306 2 357 6 415 2 137 4 198 2 75 2 139 2 661 2 563 2 507 2 461 2 262 2 512 2 366 2 420 6 670 2 269 2 147 12 90 6 322 2 216 2 431 4 676 4 525 2 329 2 477 2 527 2 631 2 480 6 224 2 682 2 736 2 737 2 483 2 439 2 45 4 171 4 231 2 389 2 
115 2 747 2 51 2 750 2 643 2 592 4 595 2 295 2 349 2 810 4 60 2 64 4 494 2 406 8 655 8 706 4 16 2 254 2 762 2 70 2 657 4 306 2 357 6 415 2 137 4 198 2 75 2 139 2 661 2 507 2 563 2 461 2 262 2 512 2 366 2 420 8 670 2 269 2 147 12 89 2 90 10 322 2 216 2 431 4 676 8 525 2 329 2 477 2 527 2 631 2 480 6 224 2 682 2 736 2 737 2 483 2 439 2 45 4 171 4 231 2 389 2 
115 2 747 2 51 2 750 2 643 2 592 4 595 2 295 2 349 2 810 4 60 2 64 4 494 2 406 8 655 6 706 4 16 2 254 2 762 2 70 2 657 4 306 2 357 6 415 2 137 4 198 2 75 2 139 2 661 2 563 2 507 2 461 2 262 2 512 2 366 2 420 6 670 2 269 2 147 12 90 10 322 2 216 2 431 4 676 8 525 2 329 2 477 2 527 2 631 2 480 6 224 2 682 2 736 2 737 2 483 2 439 2 45 4 171 4 231 2 389 2 
232 2 643 2 2 2 3 2 644 1 240 6 650 2 655 12 251 2 16 2 254 2 657 6 659 6 660 2 661 2 460 2 461 2 464 4 463 6 262 2 470 2 670 2 269 2 674 2 673 1 39 2 678 2 477 4 480 24 682 4 483 2 683 6 45 4 289 1 49 2 51 2 54 8 292 2 295 2 60 2 64 4 494 2 304 2 69 6 500 7 706 8 502 2 70 2 707 8 306 2 73 2 75 2 507 4 512 2 313 2 317 2 516 4 319 2 723 2 89 4 90 2 322 2 521 2 92 2 95 6 525 2 329 2 731 6 527 2 736 2 737 2 738 2 107 2 740 2 339 2 741 4 743 2 115 2 747 4 750 2 349 2 348 2 753 2 123 1 755 6 125 4 554 2 130 6 131 2 132 7 762 2 357 4 133 2 763 2 134 2 359 2 135 2 137 4 139 2 140 1 563 2 562 2 366 4 143 2 369 4 776 2 147 46 150 6 572 4 574 1 788 2 790 2 584 2 587 6 171 4 173 2 387 6 802 2 393 1 592 6 395 2 597 2 810 4 600 6 188 2 814 2 406 2 190 1 198 2 823 6 415 2 824 6 416 6 420 8 616 6 422 6 210 2 619 2 425 2 837 4 214 2 429 12 623 2 624 2 216 2 431 4 631 2 632 2 221 6 224 2 439 2 634 2 441 2 847 1 849 4 850 2 442 2 636 2 637 10 231 2 
232 2 115 2 747 4 750 2 643 2 3 2 2 2 348 2 349 2 753 2 240 6 755 6 650 2 125 4 554 2 130 6 131 2 655 12 251 2 16 2 254 2 762 2 657 6 763 2 133 2 357 8 659 6 134 2 660 2 135 2 359 2 137 4 139 2 661 2 562 2 563 2 460 2 461 2 262 2 463 6 464 4 366 4 143 2 369 8 27 2 30 2 470 2 670 2 776 2 269 2 147 48 150 6 572 4 674 2 39 2 678 2 477 4 788 2 790 2 584 2 480 26 682 4 483 2 683 6 587 6 45 4 171 4 173 2 387 6 389 4 802 2 49 2 51 2 54 8 592 6 292 2 395 2 597 2 807 2 295 2 810 4 60 2 64 4 600 6 494 2 188 2 814 2 406 6 69 6 304 2 706 8 502 2 707 8 70 2 306 2 73 2 415 2 823 6 198 2 824 6 75 2 507 4 416 6 512 2 313 4 420 8 422 6 616 6 317 2 516 4 210 4 319 2 723 2 425 2 619 2 90 2 322 2 837 4 214 2 429 12 623 2 521 2 624 2 92 4 216 2 95 6 431 4 525 2 329 2 731 6 527 2 631 2 632 2 221 6 736 2 224 2 738 2 737 2 634 2 439 2 107 2 441 2 740 2 849 8 339 2 850 2 636 2 442 2 741 4 637 10 743 2 231 2 
232 2 115 2 747 4 750 2 643 2 3 2 2 2 348 2 349 2 753 2 240 6 755 6 650 2 125 4 554 2 130 6 131 2 655 12 251 2 16 2 254 2 762 2 657 6 763 2 133 2 357 8 659 6 134 2 660 2 135 2 359 2 137 4 139 2 661 2 562 2 563 2 460 2 461 2 262 2 463 6 464 4 366 4 143 2 369 8 27 2 30 2 470 2 670 2 776 2 269 2 147 48 150 6 572 4 674 2 676 4 39 2 678 2 477 4 788 2 790 2 584 2 480 26 682 4 483 2 683 6 587 6 45 4 171 4 173 2 387 6 389 4 802 2 49 2 51 2 54 8 592 6 292 2 395 2 597 2 807 2 295 2 810 4 60 2 64 4 600 6 494 2 188 2 814 2 406 6 69 6 304 2 706 8 502 2 707 8 70 2 306 2 73 2 415 2 823 6 198 2 824 6 75 2 507 4 416 6 512 2 313 4 420 8 422 6 616 6 317 2 516 4 210 4 319 2 723 2 425 2 619 2 90 6 322 2 837 4 214 2 429 12 623 2 521 2 624 2 92 4 216 2 95 6 431 4 525 2 329 2 731 6 527 2 631 2 632 2 221 6 736 2 224 2 738 2 737 2 634 2 439 2 107 2 441 2 740 2 849 8 339 2 850 2 636 2 442 2 741 4 637 10 743 2 231 2 
232 2 643 2 2 2 3 2 240 6 650 2 655 16 251 4 16 2 252 6 254 2 657 6 659 12 660 2 661 2 460 2 461 2 262 2 464 4 463 12 664 6 27 2 30 2 29 6 470 2 670 2 269 2 473 2 674 2 676 4 39 2 678 2 477 4 480 24 682 4 483 2 683 8 44 2 281 6 45 4 49 4 51 2 54 12 292 2 295 2 59 6 60 2 64 4 494 2 304 2 69 6 706 8 305 2 502 4 70 2 707 8 306 2 73 2 75 2 507 4 512 2 313 4 317 2 516 4 319 2 723 2 89 2 90 6 322 2 521 4 92 4 95 8 525 2 97 6 329 2 731 6 527 2 528 2 736 2 737 2 334 2 738 2 107 2 740 2 338 2 339 2 741 4 743 2 115 2 747 4 750 2 349 2 348 2 753 4 755 6 125 4 553 2 554 2 555 2 130 6 556 6 131 2 762 2 357 10 133 2 134 2 359 2 135 2 137 4 139 2 562 2 563 2 366 4 143 2 369 10 145 6 776 2 147 52 150 6 572 6 788 2 790 2 584 2 587 6 171 4 173 2 387 6 389 4 802 2 592 6 395 2 597 2 807 2 810 4 600 6 188 2 814 2 406 6 415 2 198 2 823 6 824 12 416 6 827 6 420 10 616 12 422 12 210 4 619 2 425 2 837 4 214 2 429 10 623 2 624 2 216 2 431 4 631 2 632 2 221 12 224 2 436 2 439 2 634 2 441 2 849 10 850 2 442 2 636 2 637 8 231 2 
420 6 643 2 592 2 670 2 147 4 90 4 810 2 322 2 60 2 64 4 494 2 676 4 406 6 527 2 631 2 706 2 655 4 254 2 736 2 682 2 70 2 224 2 483 2 737 2 439 2 306 2 357 6 198 2 137 2 45 2 563 2 171 4 461 2 512 2 389 2 
643 2 3 2 2 2 236 2 349 2 348 2 753 3 240 6 125 2 453 2 131 2 655 4 251 3 16 2 254 2 657 6 357 6 763 2 134 2 137 2 661 2 139 2 563 2 461 2 366 4 143 2 670 2 147 28 572 4 674 2 39 2 678 2 788 2 584 2 480 24 682 2 483 2 683 6 45 2 171 4 389 2 54 8 592 2 593 2 597 2 810 2 60 2 64 4 494 2 188 2 406 6 706 2 502 3 70 2 306 2 611 2 612 2 198 2 307 2 75 2 507 4 512 2 615 3 420 6 618 2 90 2 837 4 322 2 429 4 95 6 525 2 329 2 527 2 631 2 736 2 224 2 737 2 634 2 439 2 441 2 740 2 635 2 339 2 442 2 741 4 637 2 231 2 743 2 443 2 
631 2 625 2 461 2 
631 2 625 2 461 2 
232 2 747 2 750 2 3 2 2 2 348 2 240 6 125 6 129 2 14 2 131 2 655 16 16 2 762 2 657 6 357 12 257 2 134 2 137 2 139 2 661 2 563 2 461 6 262 2 464 2 366 4 143 2 369 4 670 2 147 24 150 2 782 2 272 2 674 2 675 2 676 4 39 2 678 2 477 4 788 2 584 2 480 16 682 4 483 2 683 2 796 2 45 2 171 4 485 2 288 2 389 4 51 2 177 2 804 4 54 2 592 4 491 2 597 2 810 2 62 2 64 4 188 2 406 6 304 2 706 4 409 2 502 2 305 4 506 2 75 2 507 4 83 2 313 4 420 12 207 2 317 4 516 2 210 4 619 2 89 4 90 6 837 4 429 4 625 2 92 4 216 2 95 2 431 4 525 2 329 2 631 4 222 2 736 2 634 2 439 4 441 2 849 4 339 2 442 2 229 4 741 4 637 2 112 4 341 2 231 2 743 2 
516 2 776 2 822 2 269 2 374 2 480 2 147 4 150 2 72 2 429 2 661 2 562 2 675 2 637 2 605 2 129 2 83 2 
747 4 750 2 3 2 2 2 348 2 240 6 125 6 129 2 14 2 131 2 655 16 16 2 762 2 657 6 357 12 358 2 134 2 137 2 139 2 661 2 563 2 461 6 262 2 464 2 366 4 143 2 369 4 670 2 147 20 782 2 272 4 674 2 675 2 676 4 39 2 678 2 477 2 788 2 584 2 480 14 682 4 483 2 683 2 45 2 171 4 485 2 288 2 389 4 51 2 804 4 54 2 592 4 491 2 597 2 698 2 810 2 64 4 297 2 188 2 406 6 304 2 706 4 409 2 502 4 305 4 415 2 506 1 75 2 507 4 313 4 420 12 207 2 317 4 210 4 834 2 619 2 89 4 90 6 725 2 837 4 429 2 625 2 92 4 216 2 95 2 431 4 525 2 329 2 631 4 222 2 736 2 634 2 439 4 441 2 849 4 339 2 442 2 229 4 741 4 112 4 341 2 231 2 743 2 
232 2 747 4 750 2 3 2 2 2 348 2 240 6 125 6 129 2 14 2 131 2 655 16 16 2 762 2 657 6 357 12 134 2 137 2 139 2 661 2 563 2 461 6 262 2 464 2 366 4 143 2 369 4 370 2 670 2 147 24 150 2 782 2 272 2 674 2 675 2 676 4 578 2 39 2 678 2 477 4 788 2 584 2 480 16 682 4 483 2 683 2 45 2 171 4 485 2 288 2 389 4 51 2 804 4 54 2 592 4 491 2 597 2 810 2 700 2 64 4 66 2 188 2 406 6 304 2 706 4 409 2 502 2 305 4 415 2 506 1 75 2 507 4 83 2 313 4 420 12 207 2 317 4 516 2 210 4 619 2 89 4 90 6 837 4 429 4 625 2 92 4 216 2 95 2 431 4 525 2 329 2 101 2 631 4 222 2 736 2 634 2 439 4 441 2 849 4 339 2 442 2 229 4 741 4 637 2 112 4 341 2 231 2 743 2 
234 4 0 4 3 2 2 2 345 2 346 2 446 2 348 2 647 2 753 2 240 4 650 2 125 2 353 2 554 2 251 2 16 2 560 2 657 6 658 2 133 2 661 2 139 2 460 2 261 2 465 2 366 4 24 2 143 2 667 2 772 2 266 2 147 26 149 2 375 2 376 2 572 4 38 2 674 2 39 2 678 2 788 2 480 20 279 2 683 6 166 2 167 2 799 1 52 2 54 8 488 2 597 2 185 2 188 2 67 2 407 2 502 2 709 2 75 2 201 2 507 4 828 2 316 2 833 2 723 2 837 4 429 2 95 6 525 2 630 2 329 2 632 2 634 2 105 6 441 2 108 6 740 2 227 2 339 2 442 2 741 4 541 4 114 2 231 2 743 2 640 2 
545 2 54 2 209 2 394 2 517 3 777 2 596 2 147 2 547 2 753 3 572 2 521 6 350 2 95 2 250 2 251 3 17 2 480 2 502 3 683 2 740 2 689 4 691 2 363 2 
545 2 54 2 209 2 394 2 517 2 777 2 596 2 147 2 547 2 753 2 572 2 521 6 350 2 95 2 250 2 251 2 17 2 480 2 502 2 683 2 740 2 689 4 691 2 363 2 
545 2 54 2 209 2 394 2 517 2 777 2 596 2 147 2 547 2 753 2 572 2 521 6 350 2 95 2 250 2 251 2 17 2 480 2 502 2 683 2 740 2 689 4 691 2 363 2 
565 2 84 2 0 4 423 2 772 2 568 2 54 2 775 3 318 2 56 4 488 2 346 2 596 2 147 10 149 2 697 6 520 2 154 2 185 2 378 3 603 4 245 2 582 2 41 2 43 2 251 3 761 4 480 4 502 3 560 2 438 4 105 5 536 3 740 2 138 4 283 2 46 2 48 2 114 2 142 4 
0 4 54 2 488 2 56 4 346 2 596 2 697 6 185 2 603 4 245 2 251 2 761 4 502 2 560 2 138 4 142 4 84 2 565 2 772 2 423 2 568 2 775 2 318 2 147 10 149 2 212 2 520 2 154 2 378 2 580 2 41 2 582 2 43 2 480 4 438 4 536 2 105 4 740 2 169 2 283 2 46 2 48 2 114 2 
0 4 54 2 488 2 56 4 346 2 596 2 697 6 185 2 603 4 245 2 251 2 761 4 502 2 560 2 138 4 142 4 84 2 565 2 772 2 423 2 568 2 775 2 318 2 147 10 149 2 212 2 520 2 154 2 378 2 580 2 41 2 582 2 43 2 480 4 438 4 536 2 105 4 740 2 169 2 283 2 46 2 48 2 114 2 
0 4 54 2 488 2 56 4 346 2 596 2 697 6 185 2 603 4 245 2 251 2 761 4 502 2 560 2 138 4 142 4 84 2 565 2 772 2 423 2 568 2 775 2 318 2 147 10 149 2 212 2 520 2 154 2 378 2 580 2 41 2 582 2 43 2 480 4 438 4 536 2 105 4 740 2 169 2 283 2 46 2 48 2 114 2 
0 4 54 2 488 2 56 4 346 2 596 2 697 6 185 2 603 4 245 2 251 2 761 4 502 2 560 2 138 4 142 4 84 2 565 2 772 2 423 2 568 2 775 2 318 2 147 10 149 2 212 4 520 2 154 2 378 2 580 4 41 2 582 2 43 2 480 4 438 4 536 2 105 4 740 2 169 4 283 2 46 2 48 2 114 2 
685 2 567 2 76 2 538 2 180 2 829 2 
68 2 567 2 247 2 468 2 193 2 79 2 746 2 
373 2 147 10 445 2 293 2 519 1 5 2 401 1 838 2 758 2 298 2 403 1 730 2 404 2 246 2 159 2 16 2 480 8 845 2 221 2 106 2 537 2 226 2 768 2 798 2 539 1 467 1 
84 2 234 4 344 2 0 12 772 6 316 2 488 6 346 6 147 6 149 6 294 2 647 2 212 4 377 2 185 6 580 2 607 2 844 2 760 2 480 6 734 2 560 6 105 16 227 2 169 2 663 2 828 2 114 6 543 4 142 4 
354 7 330 2 499 2 291 2 315 2 791 4 147 1 480 1 761 2 778 2 481 2 711 1 449 2 138 2 603 2 419 2 705 2 816 2 
354 6 330 2 499 2 291 4 315 2 791 4 761 2 481 2 778 4 449 2 138 2 603 2 419 4 705 2 816 2 
354 10 330 2 499 6 291 8 315 8 791 4 147 1 480 1 761 2 481 2 778 8 711 1 449 2 138 2 603 2 419 8 705 2 816 2 
354 2 330 2 291 2 791 2 761 2 481 2 778 2 449 2 138 2 603 2 419 2 705 2 816 2 
3 4 2 6 646 4 120 2 549 2 754 2 450 4 240 22 7 2 243 2 351 2 10 2 13 2 454 2 253 2 558 2 134 4 364 1 769 2 466 1 367 2 143 6 25 2 665 2 369 4 668 2 267 2 147 32 271 2 576 2 679 2 278 2 584 4 792 2 162 1 480 28 163 2 164 2 390 1 176 2 392 2 58 2 400 2 599 2 601 2 187 2 704 2 606 2 501 2 721 2 830 6 514 1 213 2 837 12 524 2 739 2 533 2 228 2 741 10 540 4 230 3 
487 4 2 2 3 2 120 2 183 2 754 2 7 2 240 42 756 2 186 2 187 2 241 2 704 4 496 4 815 2 652 2 497 2 13 2 498 4 356 2 454 2 191 2 15 2 249 2 192 2 455 6 820 2 253 2 501 2 558 2 256 2 194 2 559 2 19 4 18 2 506 2 74 2 203 2 418 2 721 2 81 2 564 2 143 2 830 4 25 4 26 2 144 2 369 34 208 2 469 2 668 2 372 2 211 2 147 46 836 2 33 2 271 2 213 2 34 2 151 2 35 2 837 20 573 2 840 2 94 2 729 2 156 2 524 2 577 2 581 2 841 2 478 8 480 44 163 4 531 2 223 2 533 2 482 2 588 2 690 2 741 20 542 2 230 2 801 2 386 2 388 2 
25 2 830 2 143 2 369 4 3 2 2 2 147 14 271 2 546 2 120 2 837 6 598 2 240 14 524 2 704 2 815 2 13 2 454 2 476 2 253 2 584 4 163 2 480 14 501 2 533 2 134 4 741 6 230 2 613 2 721 2 
25 2 830 2 143 2 369 4 208 2 3 2 2 2 147 16 271 2 213 2 120 2 837 6 7 2 240 16 187 2 524 2 704 2 815 2 13 2 454 2 253 2 584 4 163 2 480 14 501 2 558 2 533 2 134 4 506 2 741 6 230 2 721 2 
265 2 

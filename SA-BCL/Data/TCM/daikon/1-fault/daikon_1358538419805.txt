#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_73()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.FormatCommand:getCommand()I
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_2_21(I)Z
utilMDE.WeakHasherMap:size()I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParser:jj_3_10()Z
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:execute()Z
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:jj_3R_100()Z
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaCharStream:ReadByte()C
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_109()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_25()Z
daikon.Quant:sameLength([I[I)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_99()Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_25(I)Z
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_96()Z
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.Debug:logDetail()Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_3()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:jj_3_19()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.PptName:toString()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.Quant:union([I[I)[I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_104()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:negate(I)I
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_3R_50()Z
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_3R_98()Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_29()Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeListOptional:present()Z
daikon.Quant:pairwiseLTE([I[I)Z
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_163()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.JavaCharStream:getEndLine()I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:eltsLTE([II)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.VarInfo:isIOASet()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:has_typeof()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:eltsLT([II)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:isPrestate()Z
daikon.ProglangType:isArray()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(F[F)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:passes()Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_164()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:Node()V
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:slice([III)[I
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.sequence.EltNonZero:enabled()Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([J[JI)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:gcd([I)I
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_136()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:isIOAArray()Z
daikon.ProglangType:isFloat()Z
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_3R_54()Z
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3R_87()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:jj_3R_120()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_12(I)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.ProglangType:isString()Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.InvMap:InvMap()V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_2_15(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_149()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
utilMDE.MathMDE:gcd(II)I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_3_36()Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:jj_3_5()Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:jj_3R_121()Z
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:jj_3R_102()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptName:getSignature()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:jj_3R_77()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_107()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:jj_3_17()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.VarInfo:is_direct_non_slice_array()Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_20()Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_18(I)Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus; | OPERATOR | 4575 | == -> <=
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.JavaParser:jj_3R_126()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:numIntArrays()I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice2:arity()I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quant:eq(DD)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.Quant:noDups([I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_103()Z
daikon.Quant:eq(JJ)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:eq(II)Z
jtb.JavaCharStream:readChar()C
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_101()Z
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_3_13()Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_58()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.ValueTuple:size()I
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsEqual([II)Z
utilMDE.ArraysMDE:min([I)I
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.ProglangType:baseIsFloat()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.JavaParser:jj_3R_110()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:subsetOf([F[D)Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_14(I)Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sum([I)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_18()Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:is_false()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:jj_3R_124()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.PptSlice1:arity()I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_1()Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.ProglangType:isIntegral()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_161()Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsString()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
jtb.JavaParser:jj_3_4()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGT([II)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_16(I)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_68()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(D[F)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_27()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.binary.sequenceString.MemberString:enabled()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:jj_3R_115()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_80()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:jj_3_14()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_56()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_3R_89()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
jtb.visitor.FormatCommand:getNumCommands()I
jtb.JavaParser:jj_3_28()Z
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.Invariant:prob_and(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:add(I)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_3R_63()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.Quant:gte(II)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.VarInfo:new_ppt()V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParser:jj_3R_69()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_12()Z
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eq(FF)Z
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_169()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.ProglangType:isScalar()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_3R_137()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:gt(II)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.VarInfo:relate_var()V
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.Quant:memberOf(S[S)Z
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_86()Z
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_70()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
jtb.JavaCharStream:getBeginLine()I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexEqual([I[I)Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_and(DDD)D
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaCharStream:FillBuff()V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_105()Z
daikon.ProglangType:dimensions()I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.Quant:subsetOf([B[I)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_180()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.Invariant:logOn()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_3R_106()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.Quant:lexGT([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
utilMDE.Intern:intern([I)[I
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
jtb.JavaParser:jj_3R_97()Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName:hashCode()I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_72()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Quant:lte(II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:jj_3R_118()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.StringEqual:enabled()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.Member:enabled()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName:hasTypeOf()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE:missing_numbers([I)[I
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_3R_116()Z
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:intersection([I[I)[I
jtb.visitor.FormatCommand:FormatCommand(II)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:indexOf([J[J)I
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.ModBitTracker:num_samples()I
jtb.JavaCharStream:backup(I)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:jj_3R_74()Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.ProglangType:elementIsIntegral()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:isDerived()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaParser:jj_3_35()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:max([I)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_88()Z
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.inv.unary.string.OneOfString:is_type()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_3R_135()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice3:arity()I
jtb.JavaParser:jj_2_35(I)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1443 4 237 2 36 2 670 2 1221 2 1099 2 1419 2 1318 2 1329 2 
1550 2 1781 2 1148 2 121 2 1722 2 296 6 1682 6 263 2 1427 6 1572 2 1482 2 
459 2 547 6 1675 2 68 4 440 2 463 2 1306 6 206 6 390 6 1221 2 317 4 1329 2 1226 2 
753 10 1138 4 1686 8 74 6 1605 4 1659 6 1019 2 1329 6 1114 2 990 8 1580 8 200 2 1022 10 1889 2 1696 4 1862 4 297 2 383 12 1668 16 1092 28 1532 26 1305 16 1220 10 713 2 1095 2 1705 16 507 10 540 8 1221 6 543 10 
1742 4 423 6 
761 2 
512 2 70 2 985 2 1186 2 1117 2 1120 4 1122 2 588 2 531 2 19 2 997 2 1898 2 274 2 396 2 1839 2 485 4 662 2 1844 2 95 2 855 2 492 2 1601 2 343 4 919 2 1607 2 354 2 1329 4 1549 2 1265 2 729 2 412 2 677 2 1270 2 873 2 297 2 1864 2 1221 4 1036 2 1748 2 1099 2 430 2 1619 4 1344 2 888 2 
1352 6 1840 2 441 2 1628 4 1496 4 1650 6 753 15 616 2 74 4 1659 4 1081 4 1019 2 1329 4 1527 4 1580 6 357 6 1022 6 1696 2 1668 32 383 22 1029 6 1613 4 1092 52 1928 4 1532 47 1305 32 1220 15 52 3 807 4 1705 32 507 15 540 19 1221 4 741 6 543 15 429 2 476 8 1346 2 598 5 
1063 2 135 2 1549 2 
499 22 1538 2 675 2 925 2 1314 2 1438 10 1077 2 1559 2 1294 2 1274 2 1709 2 638 2 1748 2 353 2 
1179 2 753 2 1659 2 823 2 1474 2 1022 4 172 2 1696 2 383 2 1668 2 1092 6 1305 2 1532 4 1220 2 1705 2 507 2 540 2 543 2 1164 2 1223 2 273 2 28 2 1131 2 
1527 4 383 4 1496 4 1668 8 1029 6 1092 16 1305 8 1532 12 1220 4 753 4 1138 2 1705 8 507 4 73 2 741 6 57 2 543 4 
1811 4 91 4 1718 2 891 2 604 4 31 4 514 2 1011 14 220 2 491 4 897 2 943 2 963 2 1607 2 673 2 1549 8 1825 62 1662 2 676 4 1551 10 135 6 1120 4 646 10 1667 2 531 4 466 2 1743 4 1063 2 1032 2 1338 4 539 4 1342 4 1195 2 1897 2 1372 2 841 2 954 2 1196 2 1673 4 658 2 
782 2 1358 2 1727 2 761 2 927 2 1772 2 523 2 564 2 509 2 1402 2 
245 2 1680 1 371 1 1685 1 1359 1 895 3 1104 2 10 2 1471 2 1112 3 900 2 14 2 1239 1 1475 12 1476 2 1477 2 1585 1 528 2 265 3 1369 2 139 2 1701 2 772 2 1833 6 1702 2 271 2 1589 8 1126 2 142 2 1590 2 1129 8 999 2 1835 1 1002 2 1836 1 657 1 1253 1 780 2 30 6 916 2 554 3 1848 2 1012 6 1499 2 1602 2 162 2 164 2 1505 2 411 2 1860 4 1509 3 929 2 1863 4 46 3 930 2 806 2 425 2 1401 2 1400 2 1159 2 304 16 58 2 1749 2 1871 4 1750 4 1751 2 1620 2 1873 1 690 32 1170 2 1406 2 1286 2 1405 2 1876 2 442 2 1291 2 578 2 697 2 818 1 1047 2 1295 2 580 4 698 1 314 3 1052 2 1885 2 585 2 199 2 827 2 1423 5 1771 2 828 2 709 2 462 1 331 3 717 2 595 2 1902 2 1308 2 87 2 1536 4 1200 2 1202 3 1430 2 1312 1 1539 24 216 2 1205 2 486 2 1313 8 854 2 728 2 1790 2 1913 2 962 12 1794 2 1078 16 225 1 346 2 1326 24 1328 2 351 32 863 2 1329 34 867 2 1084 2 104 16 1665 4 1800 2 733 2 358 2 735 16 504 2 236 1 625 2 237 2 738 2 1094 2 1931 4 1221 32 629 2 1808 3 1934 6 112 2 240 3 1464 2 980 3 1347 2 1349 2 
586 2 1329 2 
1309 2 1544 2 1329 4 
694 2 
510 4 1466 28 1467 46 1468 2 2 4 3 2 4 26 513 30 6 2 984 2 11 2 988 2 15 82 520 6 522 2 991 46 17 4 525 2 526 2 1478 2 18 2 992 6 995 2 535 160 541 6 1001 6 1485 2 27 2 1490 46 1491 2 1492 2 1493 6 1494 2 549 4 1495 2 1009 2 553 2 1498 4 1500 4 32 6 33 20 1503 28 556 2 38 2 1014 2 1507 4 40 6 558 20 559 8 561 2 1030 2 563 6 566 2 1031 2 48 30 49 60 1033 20 570 4 54 204 1037 6 62 2 65 6 573 2 1039 4 66 2 1040 4 1521 4 1041 10 1045 4 1524 26 583 2 1050 2 584 8 78 4 1526 2 1529 4 587 4 1531 2 1533 6 1534 16 85 2 1065 18 592 2 1066 22 594 4 593 50 1068 98 1067 2 88 2 599 6 1537 198 92 244 1540 2 1541 2 1073 4 606 12 607 4 609 6 611 328 96 12 612 2 614 8 1545 2 1546 198 101 224 103 4 1548 6 622 12 1085 26 1087 8 1554 2 623 8 1558 112 105 2 109 432 1096 2 1098 60 111 2 1564 46 114 2 1101 2 1100 112 1102 4 115 6 116 2 119 2 1568 8 123 6 634 14 1570 2 125 2 1107 4 1106 30 1105 2 1108 4 1109 6 1110 2 1111 12 127 2 640 4 131 20 1576 2 1577 2 132 2 1115 2 642 4 643 86 134 6 1118 4 1119 2 645 6 137 14 140 68 1124 2 1591 6 145 26 1594 2 147 192 659 2 153 4 152 2 1597 6 664 30 1135 2 1600 4 158 88 1136 52 1603 2 161 2 668 2 163 26 165 2 1143 2 1606 18 1608 4 674 30 167 192 168 2 1146 6 169 2 170 566 1153 6 679 2 1155 2 1154 182 682 2 1614 2 174 2 173 26 1157 6 1617 2 1160 20 1161 2 1165 2 1166 244 1167 8 179 12 688 6 691 2 1622 28 1625 4 1171 2 1172 6 182 2 183 132 187 6 1178 4 190 2 191 6 701 2 1185 26 702 2 1631 10 703 198 1189 94 705 6 197 6 198 4 1190 4 708 6 1191 2 202 6 1637 198 710 30 1638 2 205 6 714 198 1640 2 1193 6 715 2 716 6 1643 10 722 2 1198 22 212 12 1644 4 1204 14 1646 106 218 4 1207 2 1652 4 222 4 1657 8 1210 2 229 14 230 6 1661 26 1664 4 1214 46 732 22 1217 2 736 2 1670 2 1221 10 740 2 1222 6 743 118 744 2 241 2 1674 30 242 2 746 6 748 14 1679 2 749 2 1229 4 247 2 1230 6 1231 2 751 12 248 6 1684 6 250 336 756 2 252 2 253 4 1689 6 1236 204 254 6 760 2 1237 2 255 198 1695 2 766 2 1240 28 262 2 1241 6 1244 14 770 2 1698 2 1700 244 775 20 1249 4 1250 6 1712 2 779 376 275 2 1719 4 1720 2 1723 2 1724 30 1729 6 1728 12 1730 2 1262 2 793 2 794 2 1266 60 1736 4 290 2 1269 2 799 4 1737 2 295 2 803 6 1739 2 1741 2 300 2 1273 4 808 6 1745 228 1746 2 305 4 1752 2 1753 2 1288 2 812 8 1754 4 310 2 1290 2 1292 2 816 12 817 2 1762 4 1764 8 315 2 822 2 316 112 1300 4 1769 4 323 2 1301 2 324 48 1773 28 833 24 836 2 1778 2 843 2 1310 6 1783 2 1784 8 339 2 1315 6 853 198 341 140 1319 4 1788 6 1320 2 342 8 1322 2 1323 4 857 2 345 4 859 18 1327 2 349 2 348 54 862 432 352 64 865 4 1329 10 1798 64 1330 16 866 2 868 60 870 4 1332 4 876 2 877 4 1336 10 1806 2 1337 2 1340 4 1341 74 1807 106 363 290 885 2 365 6 364 6 1810 6 886 6 889 8 1812 4 1353 2 1354 32 1356 4 1357 2 1818 24 1821 8 1820 2 378 30 898 4 1822 2 379 2 1363 2 380 2 901 6 1827 2 1828 4 1831 6 1832 198 386 2 387 2 1373 8 1374 2 1837 2 911 2 395 4 1379 92 400 4 1381 30 915 2 914 8 402 70 1847 48 1849 6 1851 2 404 66 1852 2 1853 2 1389 6 922 20 1391 26 1861 12 1393 112 416 6 418 6 417 328 419 20 421 2 931 26 424 2 1400 2 935 2 937 6 1875 2 1408 2 1877 182 445 30 1413 2 447 4 1883 2 1417 12 1418 2 944 132 457 16 456 6 945 6 1422 2 948 6 1424 2 468 4 470 2 474 2 472 14 1428 10 1901 4 475 2 956 4 1904 12 957 2 482 2 483 4 1909 16 959 10 1910 22 1912 2 1915 2 964 4 494 4 1448 4 1451 8 969 4 970 6 971 6 501 26 502 2 1924 4 1926 2 1929 2 1927 8 974 2 1932 84 1460 2 506 4 508 4 1461 6 979 386 981 2 
117 2 903 2 861 2 552 1 
1922 2 861 2 
1392 2 1735 2 224 2 1605 2 861 2 1456 2 1549 2 
413 2 224 2 861 2 
224 2 201 2 861 2 
117 2 1027 2 1692 2 
224 2 861 2 
1027 2 887 2 
861 2 1768 2 
117 2 460 2 1027 2 
117 2 1324 2 840 2 
117 2 251 2 1420 2 
117 2 615 2 1672 2 
221 2 117 2 1090 2 
628 2 1027 2 
952 2 861 2 
1324 2 233 2 
571 2 1420 2 
1672 2 1257 2 
221 2 621 2 
1260 2 1027 2 
221 2 260 2 
613 2 1672 2 
370 2 1420 2 
228 2 1324 2 
117 2 460 2 1542 2 1027 2 
117 2 460 2 427 2 1542 2 1027 2 
117 2 1027 2 1076 2 
1289 2 117 2 1027 2 
826 2 1008 2 1123 2 1656 2 
1201 2 968 2 499 6 1173 2 1365 2 1598 2 1380 2 1242 2 186 2 97 4 667 2 669 2 858 2 1688 2 936 2 1450 2 846 4 319 2 
117 2 1894 2 
1321 2 1392 2 545 2 1549 2 
1321 2 1392 2 181 2 1456 2 545 2 1549 2 
1392 2 1228 2 224 2 1605 2 861 2 1549 2 
512 2 849 2 
1392 2 426 2 1605 2 1549 2 
1176 2 1672 2 
221 2 515 2 
287 2 1324 2 
259 2 1420 2 
221 2 1420 2 879 2 
221 2 333 2 1420 2 
221 2 1641 2 1420 2 
221 2 1677 2 1420 2 
850 2 851 6 1233 2 1180 6 1549 2 1392 2 1375 2 1465 2 
1027 2 804 2 
930 2 
243 2 244 2 1685 2 1359 4 1104 2 1471 2 989 2 14 2 1116 4 1475 8 772 2 1833 2 142 2 1590 2 1129 2 1835 2 999 2 1708 2 1002 2 777 2 30 2 1012 4 1848 2 166 2 411 2 928 2 678 2 293 4 1863 2 806 2 1514 2 1400 2 1401 2 1035 2 1159 2 58 4 1871 2 1750 4 1749 2 433 2 690 6 1405 6 1170 2 442 2 580 4 1052 2 585 2 709 2 1060 2 595 2 596 2 1308 2 1536 4 1430 2 1205 2 1435 2 728 2 1206 2 1790 2 962 8 1794 2 1078 6 1916 2 1328 2 351 4 1329 26 867 2 1665 4 1800 2 733 2 237 2 1094 2 1931 2 1221 26 1934 6 112 2 
243 2 244 2 1685 2 1359 1 1104 2 1471 2 14 2 1116 4 1475 8 772 2 1833 2 1587 2 142 2 1590 2 1129 2 1835 2 999 2 1708 2 1002 2 777 2 30 2 1012 6 1848 2 166 2 411 2 678 2 293 4 1863 2 806 2 1514 2 1400 2 1401 2 1035 2 1159 2 58 4 1871 2 1750 4 1749 2 433 2 690 6 1405 6 1170 2 442 2 580 4 194 2 1052 2 585 2 1771 2 709 2 1060 2 595 2 596 2 1308 2 1536 4 1430 2 1205 2 854 2 728 2 1206 2 1790 2 962 8 1794 2 1078 6 1916 2 1328 2 351 4 1329 26 867 2 1665 4 1800 2 733 2 237 2 1094 2 1931 2 1221 26 1934 6 112 2 1464 2 1937 2 
1905 2 
268 2 294 2 
368 2 121 4 1407 2 1682 6 1360 2 448 4 517 2 451 2 375 2 377 4 1632 2 1052 2 77 2 946 2 1053 8 707 4 524 2 831 2 532 2 82 2 1427 6 1064 2 1482 2 143 4 1834 2 1487 2 392 2 1536 2 546 2 1781 2 1908 10 603 2 401 2 1437 2 728 2 1790 2 1384 2 1791 2 1914 2 1655 2 1209 2 795 8 1329 12 1857 4 867 2 1550 4 1149 2 296 6 806 2 683 4 1276 2 1400 2 1401 2 1221 6 1934 4 978 2 1750 2 1224 2 1936 2 631 2 
368 2 121 4 1407 2 1682 8 1360 2 448 4 517 2 1574 2 451 2 377 4 1632 2 1052 2 77 2 946 2 1053 8 707 4 524 2 831 2 80 2 532 2 82 2 1427 8 1064 2 1482 2 143 4 1834 2 86 4 1536 2 1487 2 392 2 546 2 1781 2 1908 10 603 2 1722 2 401 2 1437 2 728 2 1790 2 1384 2 1791 2 1914 2 1655 2 795 8 1329 12 1857 4 867 2 1550 4 1149 2 296 6 806 2 683 4 1276 2 1400 2 1401 2 1221 6 1934 4 978 2 1750 2 1224 2 1936 2 631 2 
1857 2 1550 2 707 4 121 2 831 2 603 2 401 2 296 2 1682 2 1384 2 1791 2 1360 2 1276 2 377 4 392 2 1936 2 77 2 546 2 
368 2 121 4 1407 2 1682 6 1360 2 448 4 517 2 451 2 375 2 377 4 1632 2 1052 2 77 2 946 2 1053 4 707 4 524 2 831 2 532 2 82 2 1427 6 1064 2 143 4 1834 2 1487 2 392 2 1536 2 546 2 1781 2 1908 6 603 2 1722 2 401 2 1437 2 728 2 1790 2 1384 2 1791 2 1914 2 1655 2 1209 2 795 4 1329 12 1857 4 867 2 1550 4 1149 2 296 4 806 2 683 4 1276 2 1400 2 1401 2 1221 6 1934 4 978 2 1750 2 1224 2 1936 2 631 2 
368 2 121 4 1407 2 1682 4 1360 2 448 4 517 2 451 2 375 2 377 4 1632 2 1052 2 77 2 946 2 1053 4 707 4 524 2 831 2 263 2 532 2 82 2 1427 6 1064 2 143 4 1834 2 1487 2 392 2 1536 2 546 2 1781 2 1908 6 603 2 401 2 1437 2 728 2 1790 2 1384 2 1791 2 1914 2 1655 2 1209 2 795 4 1329 12 1857 4 867 2 1550 4 1149 2 296 6 806 2 683 4 1276 2 1400 2 1401 2 1221 6 1934 4 978 2 1750 2 1224 2 1936 2 631 2 
368 2 121 4 1407 2 1682 6 1360 2 448 4 517 2 451 2 375 2 377 4 1632 2 1052 2 77 2 946 2 1053 4 707 4 524 2 831 2 532 2 82 2 1427 6 1064 2 1482 2 143 4 1834 2 1487 2 392 2 1536 2 546 2 1781 2 1908 6 603 2 401 2 1437 2 728 2 1790 2 1384 2 1791 2 1914 2 1655 2 1209 2 795 8 1329 12 1857 4 867 2 1550 4 1149 2 296 6 806 2 683 4 1276 2 1400 2 1401 2 1221 6 1934 4 978 2 1750 2 1224 2 1936 2 631 2 
368 2 121 4 1407 2 1682 6 1360 2 448 4 517 2 451 2 375 2 377 4 1632 2 1052 2 77 2 946 2 1053 8 707 4 524 2 831 2 263 2 532 2 82 2 1427 8 1064 2 1482 2 143 4 1834 2 1536 2 1487 2 392 2 546 2 1781 2 1908 10 603 2 401 2 1437 2 728 2 1790 2 1384 2 1791 2 1914 2 1655 2 1209 2 795 8 1329 12 1857 4 867 2 1550 4 1149 2 296 8 806 2 683 4 1276 2 1400 2 1401 2 1221 6 1934 4 978 2 1750 2 1224 2 1936 2 631 2 
368 2 121 4 1407 2 1682 6 1360 2 448 4 517 2 451 2 375 2 377 4 1632 2 1052 2 77 2 946 2 1053 8 707 4 524 2 831 2 532 2 82 2 1427 6 1064 2 1482 2 143 4 1834 2 1487 2 392 2 1536 2 546 2 1781 2 1908 10 603 2 401 2 1437 2 728 2 1790 2 1384 2 1791 2 1914 2 1655 2 1209 2 795 8 1329 12 1857 4 867 2 1550 4 1149 2 296 6 806 2 683 4 1276 2 1400 2 1401 2 1221 6 1934 4 978 2 1750 2 1224 2 1936 2 631 2 
1676 2 1682 4 1471 2 517 2 755 1 1687 2 14 2 1475 4 524 2 768 8 263 4 532 2 533 2 772 2 994 4 269 2 537 2 1708 2 1002 2 1487 2 546 2 29 2 30 2 1012 6 1725 6 789 6 286 2 795 2 1021 2 1734 2 41 2 1510 1 296 8 806 2 1276 2 1514 2 1035 4 1750 4 61 1 577 7 312 2 580 4 1297 6 1052 2 77 2 1054 6 831 2 586 6 328 1 82 4 1064 2 595 2 1309 6 1536 4 1781 4 94 6 603 2 854 2 1790 2 1791 2 1794 2 1078 6 1328 2 351 2 1329 46 867 2 1550 4 1800 12 1088 2 1094 2 360 1 1561 2 113 6 631 2 368 4 121 4 1360 2 377 4 1116 4 1584 6 1833 2 142 2 143 8 1590 2 1834 2 1129 2 908 2 392 2 1596 6 151 2 1599 1 661 4 401 2 1848 2 1384 2 1386 2 1140 1 408 2 1145 2 1855 2 1857 4 678 2 1149 2 1612 1 1863 2 683 4 1400 2 1401 2 1618 10 1871 2 689 6 690 8 1169 7 1405 6 940 6 439 6 442 2 694 6 1626 2 1407 2 695 2 941 2 448 6 451 2 1632 2 704 2 946 2 707 4 709 2 1427 12 718 2 720 2 723 2 211 2 1430 2 1205 2 1908 2 1437 2 960 2 489 1 728 2 1914 2 962 4 1655 2 1209 2 1211 2 1452 6 1919 6 1665 4 1218 2 1925 2 237 2 1931 2 1221 24 1934 6 978 2 1462 2 1464 2 1936 2 1224 2 
368 4 1676 2 121 4 1682 8 1360 2 517 2 1471 2 1687 2 377 4 14 2 1116 4 1475 8 1584 6 524 2 768 8 532 2 533 2 1833 2 772 2 269 2 994 4 142 2 1590 2 143 8 1482 4 537 2 908 2 1129 2 1834 2 1708 2 1002 2 1487 2 392 2 29 2 546 2 1596 6 151 2 661 4 30 2 783 2 401 2 1725 6 1848 2 1012 6 1384 2 789 6 1386 2 408 2 1145 2 286 2 1855 2 795 6 1857 4 1021 2 1149 2 41 2 678 2 1734 2 296 8 1863 4 806 2 683 4 1514 2 1276 2 1401 2 1400 2 1035 4 1618 10 58 2 1871 4 1750 4 689 6 690 8 1405 6 439 6 940 6 693 2 694 6 442 2 1626 2 312 2 695 2 1407 2 941 2 580 4 448 6 1297 6 451 2 704 2 1632 2 1052 2 77 2 946 2 1054 6 707 4 586 6 831 2 709 2 82 4 1427 12 1064 2 718 2 595 2 1309 6 720 2 211 2 723 2 1536 4 1430 2 94 6 1781 4 1908 2 1205 2 603 2 960 2 1437 2 854 2 728 2 1790 2 1791 2 962 8 1914 2 1078 6 1794 2 1655 2 1209 2 1328 2 351 2 1919 6 1452 6 1211 2 1329 48 867 2 1550 4 1800 12 1665 4 1088 2 1218 2 1925 2 237 2 1094 2 1931 4 1561 2 1221 26 1934 6 1462 2 978 2 113 6 1464 2 1224 2 631 2 1936 2 
368 4 1676 2 121 4 1682 8 1360 2 517 2 1471 2 1687 2 377 4 14 2 1116 4 1475 8 1584 6 524 2 768 8 532 2 533 2 1833 2 772 2 269 2 994 4 142 2 143 8 1482 4 537 2 1590 2 908 2 1129 2 1834 2 1708 2 1002 2 1487 2 392 2 29 2 546 2 1596 6 151 2 661 4 30 2 783 2 401 2 1725 6 1848 2 1012 6 1384 2 789 6 1386 2 408 2 1145 2 286 2 1855 2 795 6 1857 4 1021 2 1149 2 41 2 678 2 1734 2 296 8 1863 4 806 2 683 4 1514 2 1276 2 1401 2 1400 2 1035 4 1618 10 58 2 1871 4 1750 4 689 6 690 8 1405 6 439 6 940 6 693 2 694 6 442 2 1626 2 312 2 695 2 1407 2 941 2 580 4 448 6 1297 6 451 2 704 2 1632 2 1052 2 77 2 946 2 1053 4 1054 6 707 4 586 6 831 2 709 2 82 4 1427 12 1064 2 718 2 595 2 1309 6 720 2 211 2 723 2 1536 4 1430 2 94 6 1781 4 1205 2 1908 6 603 2 960 2 1437 2 854 2 728 2 1790 2 1791 2 962 8 1914 2 1078 6 1794 2 1655 2 1209 2 1328 2 351 2 1919 6 1452 6 1211 2 1329 48 867 2 1550 4 1800 12 1665 4 1088 2 1218 2 1925 2 237 2 1094 2 1931 4 1561 2 1221 26 1934 6 1462 2 978 2 113 6 1464 2 1224 2 631 2 1936 2 
1676 2 1682 10 1471 2 517 2 1687 2 14 2 1475 10 524 2 768 8 263 2 1245 6 532 2 533 2 772 2 994 4 537 2 1482 4 1708 2 1002 2 1487 2 546 2 29 2 1722 2 30 4 783 2 1012 6 1725 12 789 12 286 2 795 6 1021 2 1734 2 41 2 296 10 806 2 1276 2 1514 2 1035 4 58 2 1750 4 1284 6 574 2 312 2 580 4 1297 6 1052 2 77 2 1053 4 1054 6 1056 2 831 2 586 12 82 4 1064 2 595 2 1309 12 1536 4 1781 4 94 6 1782 6 603 2 854 2 1790 2 1791 2 1794 2 1078 8 1328 2 351 4 1329 52 867 2 1550 4 1800 10 1086 2 1088 2 1094 2 1561 2 1343 6 113 6 631 2 368 4 121 4 1360 2 377 4 1116 6 1584 6 1833 4 142 2 1590 2 143 8 1834 2 1129 4 908 2 392 2 1596 6 1378 2 151 2 398 2 661 4 401 2 1848 2 1383 6 1384 2 1386 2 408 2 1145 2 1855 2 1857 4 1149 2 678 4 1863 4 683 4 1401 2 1400 2 1618 8 1871 4 689 6 690 12 1405 8 940 6 439 6 693 2 442 2 694 12 1626 2 1407 2 695 2 941 2 448 6 451 2 1632 2 704 2 946 2 707 4 709 2 1192 6 1427 16 1194 6 718 2 720 2 211 2 723 2 1430 2 1432 2 1908 6 1205 2 1437 2 960 2 728 2 1914 2 962 10 1655 2 1209 2 967 2 1211 2 1452 6 1919 12 500 6 1665 4 1455 2 1218 2 1925 2 237 2 1931 4 1221 24 1934 6 978 2 1462 2 1671 6 1464 2 1936 2 1224 2 
1781 2 1908 4 121 4 1407 2 603 2 1437 2 1682 6 1384 2 1360 2 448 2 1914 2 451 2 1209 2 377 2 1329 4 795 6 1053 4 707 2 1550 4 524 2 296 6 532 2 1427 4 1064 2 683 2 1276 2 143 2 1482 2 978 2 1487 2 392 2 1224 2 631 2 1936 2 546 2 
121 4 1682 6 1360 2 1471 2 377 2 1575 2 1116 4 524 2 532 2 139 2 772 2 1833 3 1702 2 269 2 271 2 142 2 143 2 1482 2 1590 2 1708 2 1002 2 392 2 1487 2 546 2 30 3 1848 2 1012 6 1384 2 795 6 296 6 930 2 806 2 683 2 1514 2 1276 2 1401 2 1400 2 1035 2 1618 2 1750 4 690 8 1405 6 442 2 1407 2 580 4 699 2 448 2 451 2 1632 2 1052 2 707 2 709 2 1427 4 1064 2 595 2 1536 4 600 2 1430 2 1781 2 1205 2 1908 2 603 2 1437 2 854 2 728 2 1790 2 1914 2 1794 2 1078 6 1209 2 1328 2 351 3 1329 28 620 2 867 2 1550 4 1665 4 1800 4 1557 3 237 2 1094 2 1221 24 1934 6 978 2 630 2 1464 2 1936 2 631 2 1224 2 
1212 2 524 2 1437 2 
1212 2 524 2 1437 2 
368 4 121 4 1682 12 8 2 1359 2 1360 2 517 2 1471 2 377 2 14 4 381 2 1364 2 1475 4 1584 2 524 4 263 4 772 2 1588 2 994 2 142 2 1590 2 1482 4 143 4 1834 2 998 2 1708 2 25 2 1002 2 1488 2 1838 2 154 2 661 2 1722 4 1012 6 1848 2 1384 2 286 2 795 6 409 2 1857 4 1149 2 560 4 43 4 296 12 1863 4 298 2 1513 2 806 2 683 2 1514 2 1400 2 1401 2 1035 6 1618 2 1871 4 1750 4 690 2 1405 2 1623 2 442 2 312 2 941 2 580 4 448 4 1052 2 77 2 1633 2 1053 4 707 2 1055 2 79 2 831 2 709 2 82 2 1427 16 1064 2 595 2 596 4 1536 4 1430 2 1781 4 1205 2 1908 6 603 4 487 2 1437 6 854 2 728 2 1790 2 962 4 1794 2 1078 2 1328 2 351 2 1329 24 867 2 1212 2 1550 4 1665 4 1800 4 237 2 1931 4 1221 16 1934 6 978 2 1464 2 
632 2 867 2 381 2 1838 2 1800 2 661 2 1584 2 294 2 401 2 932 2 998 2 1561 2 1618 2 1221 2 347 2 211 2 1329 4 
368 4 121 4 1682 12 1683 2 8 2 1360 2 517 2 1471 2 373 2 637 2 377 2 14 4 381 2 1475 4 1584 2 524 4 263 4 772 2 1588 2 994 2 142 2 143 4 1590 2 1482 4 998 2 1834 2 1708 2 25 4 1002 2 1838 2 154 2 1722 4 1012 6 1848 2 1384 2 286 2 795 6 409 2 1857 4 1149 2 560 4 43 4 296 12 1863 4 1513 2 806 2 175 2 683 2 1514 2 1400 2 1401 2 1035 6 1871 4 1750 4 690 2 1405 2 1623 2 442 2 312 2 941 2 580 4 448 4 1052 2 77 2 1633 2 1053 4 707 2 79 2 831 2 709 2 82 4 1427 16 1064 2 595 2 596 4 1536 4 1430 2 1781 4 1205 2 1908 6 603 4 487 2 1437 6 854 2 728 2 961 2 1790 2 962 4 1794 2 1078 2 1655 2 1328 2 351 4 1329 24 867 2 1212 2 1550 4 1665 4 1800 2 237 2 1931 4 1221 16 1934 6 978 2 1464 2 
368 4 121 4 1682 12 8 2 1359 1 1573 2 1360 2 517 2 1471 2 377 2 14 4 381 2 644 2 1475 4 1584 2 524 4 263 4 772 2 1588 2 994 2 142 2 1590 2 1482 4 143 4 1834 2 998 2 1708 2 25 2 1002 2 913 2 1838 2 154 2 661 2 1722 4 1012 6 1848 2 1384 2 284 2 286 2 795 6 409 2 1857 4 1149 2 560 4 43 4 296 12 1863 4 1513 2 806 2 683 2 1514 2 1400 2 1401 2 1035 6 1618 2 1871 4 1750 4 1168 2 690 2 1405 2 1623 2 442 2 312 2 941 2 580 4 448 4 1052 2 77 2 1633 2 1053 4 707 2 79 2 831 2 709 2 82 4 1427 16 1064 2 595 2 596 4 1536 4 1430 2 1781 4 1205 2 1908 6 603 4 487 2 1437 6 854 2 728 2 1790 2 962 4 1794 2 1078 2 1655 2 1328 2 351 2 1329 24 867 2 1212 2 1550 4 1665 4 1800 4 237 2 1931 4 1221 16 1934 6 978 2 1464 2 
0 10 1 2 982 2 5 2 983 2 7 80 9 2 10 2 986 2 12 156 13 40 14 18 16 2 996 2 21 4 22 2 23 2 24 2 1000 2 1002 82 26 3 1003 1 1004 6 29 10 1005 4 1007 1 1006 2 30 46 1010 2 1012 1112 34 2 35 2 37 38 1013 2 39 18 1015 2 1018 2 1019 2 1020 2 1023 4 1024 66 42 2 1026 38 44 6 45 24 47 2 50 2 51 76 1034 24 53 24 1035 2 56 3 55 2 60 2 59 2 1038 2 63 60 64 2 69 4 1042 4 1043 3 1046 36 1047 2 71 80 1048 80 1049 2 72 38 75 2 74 4 1051 22 76 3 1052 2 1056 2 1059 2 1058 2 81 1 1060 86 1061 2 1062 2 83 2 84 2 87 2 89 3 1070 2 1069 2 1071 2 1072 2 1074 2 1075 2 99 2 98 2 100 2 1078 32 1079 2 102 2 1080 3 1081 4 1082 38 1083 22 104 52 1086 2 1089 2 1092 24 1093 2 106 2 107 2 1094 2 108 2 1097 3 122 2 126 8 128 48 129 2 1112 2 130 6 1113 10 133 4 1116 12 1121 2 138 2 1125 2 141 24 1126 2 142 2 1127 2 144 2 1128 2 1129 84 1130 106 146 2 1132 2 148 2 150 1 1134 1 151 22 155 2 156 2 157 2 160 2 1137 6 162 2 1139 2 164 2 1142 4 1144 78 1145 2 166 2 1147 2 1150 60 171 2 1151 4 1152 2 1156 2 1158 2 176 78 1162 104 177 3 178 2 180 60 1174 2 1175 2 185 2 1177 2 188 2 189 2 1181 2 192 2 193 1 1182 2 1183 6 1184 2 1188 38 195 2 196 18 199 2 203 2 207 3 208 2 209 80 1197 1 210 80 1199 3 1200 2 213 2 214 2 1202 2 1205 2 216 2 217 2 219 78 1206 2 223 2 226 1 227 2 1211 2 1213 4 231 2 232 2 1216 8 234 2 236 1 237 8 1220 6 238 2 1221 966 240 2 1225 2 1227 2 243 2 244 2 246 8 249 3 1234 3 1235 2 1238 3 1239 1 256 34 257 2 258 2 261 14 1243 2 264 3 265 2 266 2 1246 2 270 2 1247 2 1248 2 272 8 1254 3 276 80 277 2 1255 2 278 2 1256 2 279 2 1258 2 280 3 1259 2 281 4 282 14 1261 2 285 22 1263 2 1264 2 1267 2 1268 3 289 4 292 80 291 9 1271 20 299 2 1272 2 301 158 1275 2 1277 8 1278 2 303 38 304 100 1279 2 1281 3 1283 3 1285 2 306 3 307 4 1287 3 308 38 309 2 1291 2 311 2 313 234 1293 2 314 3 1296 2 1298 2 1299 2 318 3 320 2 322 8 1302 2 327 2 1305 12 329 2 330 2 1307 6 332 2 334 2 1311 78 1312 1 336 12 1316 1 340 20 1313 14 1317 3 344 12 1325 2 1326 61 1328 2 350 2 351 110 1329 1174 355 38 1331 3 356 2 1333 102 1334 26 1335 156 358 16 1338 2 1342 2 361 2 1344 2 1346 4 1345 80 367 2 1348 3 366 4 1350 2 371 15 1355 2 1359 3 372 2 374 95 376 2 1362 4 1366 3 382 10 383 10 1367 38 1369 2 385 2 388 158 1370 36 389 2 1371 4 1376 4 393 20 1377 8 394 3 397 2 1378 2 398 2 399 4 1382 158 403 34 1385 2 1387 2 405 2 1386 10 407 38 1388 38 1390 2 414 2 415 20 420 2 1394 2 1396 2 1398 1 422 2 1397 80 1399 3 1400 2 1401 2 425 2 428 2 1403 6 431 2 433 4 434 2 435 78 1404 2 1406 2 1405 18 437 10 436 2 438 2 442 2 443 3 444 80 1410 2 1411 2 446 38 1412 4 1414 78 1415 2 449 2 1416 2 450 80 452 2 454 2 455 2 1421 10 458 38 461 2 462 1 1425 2 464 2 465 2 467 7 1426 2 469 2 471 2 473 2 1429 3 476 8 477 124 478 2 479 40 480 4 481 4 1430 2 1431 10 1432 4 484 2 1434 2 486 2 490 2 1439 2 1441 78 491 2 1442 16 1444 2 1445 2 1446 2 493 76 1449 2 496 22 1453 2 497 4 499 6 1454 2 503 2 1455 2 504 2 1458 2 505 2 1459 2 507 6 1463 38 1464 324 511 2 1470 2 516 2 1471 2 518 10 1472 2 521 3 1473 2 1475 178 1476 2 1477 2 527 2 528 2 529 2 1479 2 530 2 1481 2 1480 3 534 2 536 2 539 2 538 38 540 6 542 2 543 6 544 2 1486 2 551 2 550 10 554 2 1499 2 555 6 1502 38 1504 2 1508 6 557 2 1509 3 562 2 1511 4 1512 10 565 2 567 2 1514 2 568 2 1515 2 569 2 1516 2 1517 2 574 2 575 2 576 3 1520 112 1522 82 1523 3 580 402 581 2 1527 4 1528 20 1530 170 589 8 1532 18 1535 2 590 2 591 2 595 2 1536 8 598 6 597 2 601 2 600 2 1539 15 605 2 608 2 610 3 1547 2 617 2 618 78 619 78 620 2 1552 2 1553 2 1556 2 1557 2 625 2 1560 2 626 8 1562 4 1563 2 1566 18 1569 22 1571 20 636 2 639 2 641 2 1575 2 1579 2 1580 6 1581 2 1582 2 1585 1 647 36 1586 12 648 2 649 2 650 2 651 4 1589 14 652 4 1590 2 654 2 655 2 1593 2 656 2 1595 78 660 2 665 2 666 2 1602 2 1604 2 671 2 672 2 1609 3 678 46 680 2 681 2 1615 2 1616 24 684 2 685 66 686 2 687 2 1618 2 690 126 1621 2 1624 4 692 6 1626 16 695 2 696 2 1629 2 697 2 699 2 1630 2 704 2 1634 3 706 2 1635 2 709 84 1636 10 1639 2 711 2 712 14 719 2 720 2 1642 3 724 2 725 2 1645 2 726 2 1647 2 1648 2 727 2 1649 20 728 2 1651 2 1653 2 1658 4 1660 2 730 10 1663 2 1665 480 1666 2 734 2 1668 12 735 14 1669 2 738 2 739 3 741 6 742 2 1673 2 745 10 747 2 1678 2 1681 2 750 2 1685 2 752 38 753 6 754 9 1687 2 757 2 759 2 758 18 1690 112 762 26 1693 6 764 2 763 78 1694 2 765 78 767 2 1697 2 771 2 1699 2 772 8 1701 2 1704 2 1703 16 1705 12 774 3 1706 2 776 4 1707 10 1710 3 1711 2 777 2 778 78 1713 22 1714 2 780 2 781 2 1716 3 1717 156 1721 2 785 3 786 2 1726 80 787 2 790 2 1731 2 788 2 792 2 797 2 798 22 801 78 800 38 1738 2 805 2 1740 2 806 2 810 2 809 2 1747 16 1750 8 811 2 814 6 815 2 1756 11 1757 4 1758 2 1759 16 1760 2 1761 2 1763 2 820 2 819 2 821 2 1765 2 1766 4 824 2 825 2 1770 4 827 2 828 14 829 80 830 16 1774 2 832 3 834 2 835 4 1775 2 837 80 1776 34 838 2 839 2 1777 2 842 2 845 78 847 2 848 10 852 2 1785 2 1787 4 854 314 1790 2 856 4 1793 2 1792 2 1794 2 1795 2 1796 2 860 78 1797 2 863 14 1799 2 867 2 869 38 871 2 872 2 1800 10 1801 2 1802 2 874 80 878 4 1803 2 1804 38 880 2 1805 2 881 2 1808 2 883 4 1809 2 1813 2 892 8 1814 3 1815 2 893 2 1816 2 1817 166 894 2 895 2 896 40 1819 2 899 2 900 2 1826 2 902 2 904 2 905 2 906 2 1830 2 1829 234 907 2 1833 16 908 10 1835 3 1836 13 909 12 910 2 912 2 1840 2 1842 2 1843 2 1845 78 916 2 1848 4 1850 2 918 38 920 4 1854 2 921 2 1855 4 923 38 1856 2 1859 12 1860 32 1858 14 926 2 929 2 1866 32 1868 20 933 4 934 2 1869 2 1872 76 938 2 1876 2 1878 60 942 24 1879 4 1881 78 1884 558 1885 2 947 2 1886 54 1887 2 1890 80 1893 6 1891 3 1892 2 951 2 950 4 1895 24 1899 8 1902 2 1903 2 958 120 1906 2 1907 2 1911 2 1913 2 962 183 1916 2 1917 2 966 2 965 2 1918 2 1920 2 1921 2 972 38 973 2 1923 3 1930 2 975 6 1933 2 976 83 1934 10 977 4 1935 2 980 2 
1405 2 848 4 815 2 30 2 550 2 1792 2 1385 2 1078 2 1049 2 351 2 1016 2 641 2 195 2 1329 2 1116 2 678 6 382 2 1833 2 1094 2 50 2 1221 2 177 2 1935 2 690 2 
1405 2 848 4 815 2 30 2 550 2 1792 2 1385 2 1078 2 1049 2 351 2 1016 2 641 2 195 2 1329 2 1116 2 678 6 382 2 1833 2 1094 2 50 2 1221 2 177 2 1935 2 690 2 
1405 2 848 4 815 2 30 2 550 2 1792 2 1385 2 1078 2 1049 2 351 2 1016 2 641 2 195 2 1329 2 1116 2 678 6 382 2 1833 2 1094 2 50 2 1221 2 177 2 1935 2 690 2 
393 4 336 2 215 2 30 3 1571 4 1649 4 635 2 942 3 753 2 1880 2 74 2 1658 2 351 3 195 2 1329 10 1528 4 1580 4 1333 6 104 2 1057 3 136 2 1668 2 1092 5 204 4 1532 4 1305 2 1220 2 1094 2 773 2 1895 3 302 2 1705 2 239 2 1896 2 507 2 1900 2 304 2 1221 4 543 2 690 2 
393 4 336 2 215 2 30 2 1571 4 1649 4 635 2 942 2 753 2 1880 2 74 2 1658 2 351 2 1019 2 195 2 1329 10 1528 4 1580 4 1333 6 104 2 1057 2 136 2 383 2 1668 2 1092 4 204 4 1532 4 1305 2 1220 2 1094 2 773 2 1895 2 302 2 1705 2 239 2 1896 2 507 2 540 2 1900 2 304 2 1221 4 543 2 690 2 
393 4 336 2 215 2 30 2 1571 4 1649 4 635 2 942 2 753 2 1880 2 74 2 1658 2 351 2 1019 2 195 2 1329 10 1528 4 1580 4 1333 6 104 2 1057 2 136 2 383 2 1668 2 1092 4 204 4 1532 4 1305 2 1220 2 1094 2 773 2 1895 2 302 2 1705 2 239 2 1896 2 507 2 540 2 1900 2 304 2 1221 4 543 2 690 2 
393 4 336 2 215 2 30 2 1571 4 1649 4 635 2 942 2 753 2 1880 2 74 2 1658 2 351 2 1019 2 195 2 1329 10 1528 4 1580 4 1333 6 104 2 1057 2 136 2 383 2 1668 2 1092 4 204 4 1532 4 1305 2 1220 2 1094 2 773 2 1895 2 302 2 1705 2 239 2 1896 2 507 2 540 2 1900 2 304 2 1221 4 543 2 690 2 
393 4 336 2 215 2 30 2 1571 4 1649 4 635 2 942 2 753 2 1880 2 74 2 1658 2 351 2 1019 4 195 2 1329 10 1528 4 1580 4 1333 6 104 2 1057 2 136 2 383 4 1668 2 1092 4 204 4 1532 4 1305 2 1220 2 1094 2 773 2 1895 2 302 2 1705 2 239 2 1896 2 507 2 540 4 1900 2 304 2 1221 4 543 2 690 2 
249 2 410 2 1267 2 359 2 1893 2 1285 2 
1805 2 249 2 926 2 1888 2 1142 2 1060 2 1410 2 
1715 1 369 1 90 2 602 2 124 2 1497 2 917 2 159 2 1790 2 789 2 1361 2 406 2 1187 1 495 2 673 1 1329 10 1662 1 498 2 288 2 731 2 624 2 1744 2 1339 2 1221 8 884 2 432 2 
1629 2 1601 2 753 6 1731 2 74 2 1079 2 1081 2 1329 6 1019 2 1527 2 1733 2 1580 4 258 2 873 2 878 2 1668 6 383 4 1092 16 235 2 1532 12 1305 6 1220 6 1705 6 507 6 540 2 1221 6 741 4 543 6 476 2 598 4 
1528 2 1469 2 1025 2 1846 2 1571 2 1649 2 1232 2 283 2 1483 2 1371 2 953 2 1732 2 1282 2 
1567 1 1528 2 1469 2 1215 2 1025 2 1846 2 1571 2 1649 2 1232 4 267 2 283 2 1483 2 1371 2 1221 1 953 2 1732 2 1282 6 1329 1 
1528 2 1469 4 1215 2 1025 2 1846 2 1571 2 1649 2 1232 4 267 2 283 2 1483 4 1371 4 953 2 1732 2 1282 6 
1567 1 1528 2 1469 8 1215 8 1025 2 1846 2 1571 2 1649 2 1232 4 267 6 283 2 1483 8 1371 8 1221 1 953 2 1732 2 1282 10 1329 1 
745 8 511 8 120 4 633 2 7 6 1817 50 1359 4 374 22 1691 1 12 18 13 2 1823 2 130 4 1693 4 1824 18 763 4 765 10 769 24 1829 84 388 16 652 4 538 4 26 2 1002 14 778 6 1130 42 394 2 1595 6 1133 2 1717 17 548 10 276 6 1841 2 1382 16 1012 248 1848 8 555 2 1726 6 1501 26 918 4 407 4 1506 4 1144 24 924 4 796 10 798 15 1611 4 291 7 292 6 800 4 801 6 802 8 1028 2 1397 6 301 16 1280 4 176 6 1162 42 306 2 435 6 1874 4 1518 24 1519 4 67 90 443 4 1756 11 444 6 313 92 1523 6 580 88 700 90 1414 6 1881 6 1882 2 1048 24 72 4 453 2 1884 124 1188 4 321 2 1530 34 829 6 1303 8 709 14 326 6 1304 2 1890 6 832 2 837 6 335 10 844 2 477 12 210 6 845 6 1311 10 93 12 1433 2 1786 8 854 58 219 10 1441 10 962 28 344 7 860 10 619 6 618 24 355 4 1329 150 1082 4 1213 4 1920 8 872 8 972 4 1665 112 874 6 1335 36 875 26 1923 2 1555 24 1091 2 627 4 110 2 976 8 1221 134 1463 4 1464 58 1345 6 1565 4 
1518 2 1755 4 939 2 511 2 120 2 1627 2 443 1 1044 2 7 2 1523 3 1359 2 580 20 450 6 1183 4 1884 6 1767 2 1525 2 12 2 1823 2 1578 2 519 2 765 2 1583 2 325 2 829 2 1303 2 709 2 769 2 1890 2 384 2 388 4 20 2 993 2 653 2 1484 2 391 2 1592 2 335 2 1002 2 210 2 721 2 1252 2 1779 4 1133 2 1311 2 1717 2 548 2 337 2 1841 2 1433 2 338 2 1436 2 1543 2 663 2 784 2 1382 4 219 2 854 3 1441 2 1848 2 1012 45 1789 2 962 37 860 2 1447 2 864 2 1017 2 1329 46 796 2 1920 2 872 2 1665 20 292 2 1335 2 874 2 1555 2 1028 2 1457 2 1091 2 1395 2 737 2 1867 2 301 4 362 2 1221 44 882 2 976 6 1163 2 572 4 1464 3 1351 2 1103 2 
745 4 511 2 633 2 7 4 1817 8 518 2 12 10 1823 2 1693 2 519 2 765 4 1583 10 1368 4 1829 24 388 10 652 4 538 4 1002 6 778 4 1252 10 1251 2 1130 16 1489 32 1595 4 1717 10 276 4 1841 2 1382 10 1012 104 1848 2 791 8 918 4 1141 4 407 4 1610 4 798 8 291 3 292 4 800 4 801 4 1028 2 1397 4 301 10 176 4 1162 8 1870 8 435 4 813 4 444 4 184 4 313 24 1409 8 1523 2 580 36 579 4 1414 4 1881 4 1048 8 72 4 582 2 453 2 1884 24 1767 2 1525 10 1188 4 1530 30 829 4 709 6 949 2 1890 4 832 2 837 4 955 8 477 14 210 4 845 4 1311 4 1203 16 1433 2 488 4 854 28 219 4 1441 6 1440 2 962 14 1654 2 860 4 619 4 355 4 1329 78 1082 4 1213 4 1920 2 872 2 972 4 1665 44 1335 6 874 4 1923 2 1091 2 362 2 1221 70 976 6 1463 4 1464 30 1345 4 890 16 
745 4 511 2 1756 1 7 4 1523 2 1359 2 580 14 1882 2 374 9 1884 8 12 2 1823 2 130 2 1693 2 763 2 519 2 1530 6 765 2 829 4 709 2 1890 4 388 6 652 2 26 2 1002 2 210 4 394 1 1311 2 1133 2 1717 2 1841 2 1433 2 1436 2 1382 6 219 2 854 12 1848 2 1012 40 1441 2 962 14 344 1 860 2 1329 28 1213 2 1920 2 798 5 872 2 1665 14 292 4 874 4 1335 2 1028 2 1091 2 301 6 110 2 976 4 1221 26 1464 12 306 2 
1208 2 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 
1780 1 149 1 118 1 987 1 1219 1 1865 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 1703 1102 501 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_3R_97()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfo:has_typeof()Z
daikon.Quant:eq(FF)Z
daikon.Quant:eltsLTE([II)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quantify.SimplifyQuantification:get_index(I)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaCharStream:backup(I)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_137()Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:jj_3_13()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_110()Z
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.diff.Node:Node()V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_76()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
jtb.JavaParser:jj_2_3(I)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quantify.Constant:Constant(I)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_169()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfo:isIOASet()Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.PptSlice0:arity()I
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([J)[J
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.ProglangType:base()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.ProglangType:isFloat()Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:jj_3_20()Z
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:lt(II)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:isReverse([I[I)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:jj_3_17()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.ProglangType:baseIsFloat()Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Ppt:Ppt()V
daikon.Quant:slice([III)[I
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:FillBuff()V
jtb.JavaParser:jj_3R_51()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice3:arity()I
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_3R_164()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:sign(I)I
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParser:jj_3R_126()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:sameLength([I[I)Z
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_3_15()Z
daikon.VarInfo:isPrestate()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_98()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:isIOAArray()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.Quant:eltsEqual([II)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceString.MemberString:enabled()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_133()Z
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_3_19()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:jj_3R_119()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.test.InvariantFormatTester:execute()Z
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:jj_3R_86()Z
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ProglangType:dimensions()I
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_54()Z
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.ArraysMDE:element_range([I)I
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_57()Z
daikon.PptName:isEnterPoint()Z
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_87()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_115()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_117()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:jj_ntk()I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.ProglangType:isString()Z
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:jj_3R_148()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.Invariant:justified()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_2_5(I)Z
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_58()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_210()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:hashCode()I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_134()Z
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_29()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
utilMDE.MathMDE:negate(I)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(I[I)Z
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_80()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_96()Z
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_28()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.JavaParser:jj_3_14()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:jj_3R_103()Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_67()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:jj_3R_102()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:baseIsString()Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_100()Z
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_18()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_72()Z
utilMDE.MathMDE:gcd(II)I
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_35()Z
daikon.ValueTuple:size()I
jtb.JavaParser:jj_3_4()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_118()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.Invariant:is_false()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Assert:assertTrue(Z)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:passes()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:gt(II)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_3R_105()Z
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_30()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_124()Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_75()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3_27()Z
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:jj_3R_48()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:eq(JJ)Z
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([I)[I
daikon.Quant:intersection([I[I)[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_136()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:lexEqual([I[I)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:union([I[I)[I
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.WeakHasherMap:size()I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:eq(II)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:jj_3_22()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:hashCode()I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_2_21(I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_149()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Intern:numIntArrays()I
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:concat([I[I)[I
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3_12()Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:jj_3R_104()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_2_15(I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_107()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_25()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_60()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:relate_var()V
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:subsetOf([D[F)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:lexGTE([I[I)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_109()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_125()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.Quant:lexLT([I[I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.PptSlice1:num_samples()I
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_101()Z
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.VarInfo:is_typeof()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_81()Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3R_163()Z
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:jj_3R_68()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd(JJ)J
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:pow(II)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_108()Z
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.VarInfo:isDerived()Z
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.PptSlice1:arity()I
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:pow_fast(II)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.Debug:logOn()Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3R_180()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:jj_3R_122()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.Invariant:getConfidence()D
daikon.Quant:gte(II)Z
daikon.Quant:subsetOf([I[I)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.ProglangType:isArray()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ModBitTracker:num_samples()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_3R_106()Z
jtb.JavaParser:jj_3R_73()Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_25(I)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3R_89()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration; | STATEMENT | 14997 | stmt -> ;
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_77()Z
daikon.ProglangType:baseIsScalar()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLT([I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:jj_3R_55()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.Quant:ne(II)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.PptSlice2:arity()I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.ProglangType:isScalar()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParser:jj_2_36(I)Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1687 2 656 4 473 2 824 2 1378 2 1649 2 1134 2 1729 2 711 2 
660 2 771 6 1718 2 38 2 1600 2 1708 2 65 6 220 2 936 2 1145 6 567 2 
550 6 473 2 170 2 1268 2 811 2 859 6 186 4 582 6 1119 6 799 2 824 2 852 4 272 2 
1500 4 610 16 1323 4 1530 2 1238 2 465 2 67 26 1504 2 835 10 237 10 1144 2 1567 10 1190 2 177 6 968 6 1447 10 1487 2 472 30 473 6 1690 16 539 8 590 8 1087 16 1601 8 1013 10 87 4 1638 12 824 6 766 8 1644 4 
50 4 306 6 
1048 2 
873 2 1500 2 1501 2 610 2 67 4 467 2 835 4 237 2 1567 2 1447 2 968 2 378 2 1332 2 472 6 1690 2 1087 2 1013 2 860 2 1014 2 861 2 1116 2 1638 2 766 2 
472 14 1027 4 610 8 1690 8 1678 2 1087 8 1271 4 1013 4 67 12 87 2 52 2 1638 5 237 4 1142 6 1567 4 1447 4 1524 6 
720 6 1437 4 1024 2 990 4 36 2 1129 2 494 4 372 4 234 2 1503 4 468 2 783 4 1187 4 729 4 531 4 882 4 381 2 332 2 295 2 1491 2 1720 2 1492 2 27 2 678 2 1197 2 1724 14 679 2 760 10 139 2 140 4 596 2 801 10 888 4 1520 2 1179 4 419 62 1435 2 420 2 569 8 844 2 
1048 2 1331 2 406 2 838 2 241 2 1309 2 1549 2 1402 2 743 2 1672 2 
487 2 231 2 1649 2 1208 2 1325 2 1327 2 937 2 882 4 942 4 623 2 1110 2 1220 2 887 2 563 4 1337 2 569 2 148 2 361 2 844 2 1440 2 315 2 1441 2 1388 2 957 2 956 2 1182 2 1190 2 531 2 1036 2 1249 2 970 2 473 4 914 4 1307 2 537 2 441 2 480 2 1517 2 824 4 715 2 56 2 1462 2 926 2 1157 2 
1027 4 1500 2 154 4 610 32 464 2 1238 2 1271 4 67 48 835 6 1712 4 237 16 1142 6 1567 16 1445 6 471 4 1447 16 76 4 177 4 644 2 968 4 472 54 473 4 1250 2 1690 32 539 6 1087 32 1013 16 339 2 1456 6 865 2 824 4 1638 22 309 6 804 2 145 4 766 18 1524 6 606 8 1068 6 
720 2 569 2 381 2 
1381 2 1125 2 509 2 1469 2 1270 2 612 10 1574 2 958 2 1476 2 962 2 1403 2 53 22 194 2 361 2 
447 2 772 2 230 2 8 2 9 1 12 2 1421 2 1104 2 1536 2 1537 2 881 2 672 12 670 2 1540 2 1006 2 674 1 884 3 1663 2 794 3 1544 1 456 2 1667 2 1114 2 1115 1 30 2 244 2 1017 8 355 2 34 2 1550 1 892 3 806 4 147 2 150 8 1232 2 899 2 156 24 578 3 580 2 42 2 1443 16 1243 6 160 2 257 3 1565 2 1564 2 1684 2 906 2 48 2 47 2 262 6 817 1 473 34 592 2 1694 2 916 2 1455 3 821 2 1255 2 481 2 824 32 483 2 390 3 391 3 1258 1 54 1 922 8 1698 2 1699 3 1463 2 275 4 927 1 833 2 722 1 396 2 1158 2 1707 16 171 5 1590 2 63 2 398 4 1272 2 66 2 726 2 71 1 175 2 1477 32 836 2 75 4 287 2 939 2 1281 2 941 3 1483 1 293 16 507 2 1284 2 511 2 304 2 515 2 842 2 626 32 86 1 947 4 628 2 748 24 1496 2 1728 2 312 2 1378 2 193 3 843 2 91 2 1734 2 202 1 1389 2 1737 2 425 3 849 2 428 2 638 2 1741 2 525 4 1396 6 1622 16 1623 2 1624 2 211 2 1304 2 1508 2 215 4 1628 2 646 2 652 2 1511 2 440 2 1086 6 981 2 980 2 1310 1 1311 1 654 2 442 2 225 2 1317 2 659 4 117 2 
1736 2 
473 2 681 2 
473 4 316 2 1442 2 
662 4 1 14 2 2 1095 4 448 4 4 2 229 2 233 2 449 4 666 4 1101 2 1102 2 1326 2 1106 2 1329 60 669 2 1539 2 238 18 18 12 1334 2 1541 2 885 4 886 2 1335 2 1117 2 1548 2 1547 38 31 2 33 2 1551 4 891 2 247 2 251 2 895 2 898 2 689 2 900 2 1559 94 1131 4 1560 2 41 18 694 2 1348 2 1561 2 902 2 695 2 696 14 905 2 1141 2 1566 2 1569 2 1351 2 259 40 1352 4 1353 48 907 4 261 2 699 2 475 4 476 4 1571 56 911 52 1572 18 1356 2 705 2 707 22 712 2 270 4 1578 2 1579 18 482 2 716 2 918 2 1580 12 923 50 273 2 274 4 485 2 59 94 1156 4 486 2 1364 72 721 2 488 94 1365 2 491 2 928 2 492 18 279 2 496 2 64 2 724 2 1367 2 281 44 725 2 1369 2 282 2 501 2 933 2 502 2 1370 4 938 4 77 2 732 4 79 2 292 2 505 2 1169 16 83 22 303 4 741 2 514 2 946 48 742 2 88 2 745 2 1610 2 1176 246 311 2 749 2 520 4 518 2 750 2 953 4 1382 4 1387 2 754 2 1391 2 756 4 527 4 529 2 532 2 1625 30 1398 2 533 4 96 2 758 2 97 2 1191 2 1627 2 330 2 331 8 535 4 974 4 973 2 1633 2 540 2 759 2 106 4 1635 10 1637 6 1198 4 761 12 111 8 1201 2 983 2 1640 16 984 2 1643 2 987 28 115 18 1645 2 1646 2 116 2 1408 2 1417 2 776 40 120 94 778 2 780 2 1422 42 782 2 1213 4 127 22 786 2 129 2 1659 246 1007 2 790 2 1009 2 1010 2 560 4 1218 2 795 2 1012 8 352 86 136 2 1666 12 1668 4 797 18 1670 2 1430 2 1669 2 142 2 802 2 1671 4 566 2 1023 8 1025 2 571 18 151 2 1028 2 367 6 1233 6 1236 4 1237 2 1244 2 157 2 158 60 161 2 1034 2 1450 4 1688 2 167 2 383 8 1689 2 1252 2 591 2 1692 12 593 2 389 2 1459 2 1460 2 599 4 169 2 602 4 1264 2 393 4 605 44 604 2 830 4 1703 2 1706 2 1269 8 1472 2 1471 2 1474 14 401 4 1274 8 402 6 404 2 1275 94 1713 2 1056 2 1478 2 1715 94 1481 74 1058 2 1278 4 1283 2 1717 4 179 94 181 2 1490 2 1063 2 183 94 1286 246 840 4 1493 94 187 2 412 2 627 16 1288 4 415 2 1065 42 416 4 630 4 1292 18 1067 6 1497 2 631 4 1294 30 1731 4 421 2 198 2 199 2 845 4 1502 2 637 2 204 2 1298 12 1301 4 639 2 208 104 1075 8 641 36 1302 60 643 4 1744 2 1077 4 438 94 217 2 1746 4 1747 4 1748 2 219 2 858 20 1514 30 653 2 1091 4 862 2 1314 94 866 2 1316 2 227 358 869 2 1318 4 
174 1 1019 2 1265 2 350 2 
1019 2 335 2 
685 2 141 2 1019 2 268 2 1644 2 969 2 569 2 
685 2 94 2 1019 2 
685 2 1019 2 1585 2 
1723 2 350 2 222 2 
685 2 1019 2 
451 2 1723 2 
1410 2 1019 2 
544 2 1723 2 350 2 
1584 2 1005 2 350 2 
851 2 1180 2 350 2 
1449 2 1603 2 350 2 
1609 2 203 2 350 2 
1509 2 1723 2 
1074 2 1019 2 
1711 2 1584 2 
851 2 1531 2 
1449 2 374 2 
203 2 691 2 
551 2 1723 2 
823 2 203 2 
1449 2 302 2 
851 2 553 2 
489 2 1584 2 
544 2 979 2 1723 2 350 2 
544 2 979 2 15 2 1723 2 350 2 
0 2 1723 2 350 2 
431 2 1723 2 350 2 
168 2 1174 2 503 2 770 2 
268 2 564 2 569 2 1161 2 
141 2 992 2 268 2 564 2 569 2 1161 2 
685 2 1019 2 268 2 813 2 1644 2 569 2 
557 2 1208 2 
268 2 1644 2 263 2 569 2 
1449 2 242 2 
1664 2 203 2 
576 2 1584 2 
45 2 851 2 
1372 2 203 2 851 2 
362 2 203 2 851 2 
851 2 203 2 719 2 
851 2 203 2 1333 2 
344 2 997 6 1617 2 240 2 673 2 268 2 1256 6 569 2 
961 2 1723 2 
702 2 165 2 1735 2 364 2 39 2 1322 2 1384 2 875 2 351 2 1473 4 375 2 1185 4 903 2 44 2 53 6 192 2 966 2 197 2 
1053 2 350 2 
849 2 
118 2 772 2 12 2 1104 2 1536 2 672 8 1424 2 1544 2 135 2 456 2 34 2 150 2 1232 2 1239 2 1032 2 42 2 1443 6 1243 2 160 2 904 4 1564 2 906 2 262 6 817 2 473 26 1694 2 481 2 1255 2 824 26 483 2 1362 2 275 4 396 2 398 2 173 2 175 2 1477 4 75 2 287 2 939 2 1167 2 1281 2 842 2 626 6 308 4 947 4 628 2 1496 2 312 2 1378 2 843 2 634 2 751 2 91 2 1737 6 1389 2 638 2 525 4 1396 4 214 2 1304 2 1508 2 215 2 1628 2 1086 2 980 2 442 4 1516 2 1753 2 763 2 1317 2 1522 2 659 4 1094 2 
118 2 772 2 12 2 1104 2 1536 2 668 2 672 8 1424 2 1544 2 456 2 1015 2 34 2 150 2 1232 2 899 2 1239 2 1032 2 42 2 1443 6 1243 2 160 2 904 4 1564 2 906 2 47 2 262 6 817 2 473 26 1694 2 481 2 1255 2 824 26 483 2 1362 2 275 4 396 2 398 2 175 2 1477 4 75 2 287 2 939 2 1167 2 1281 2 842 2 626 6 308 4 947 4 628 2 1496 2 519 2 312 2 1378 2 843 2 634 2 751 2 91 2 1737 6 1389 2 638 2 525 4 1396 6 214 2 1304 2 1508 2 215 2 1628 2 1086 2 981 2 980 2 442 4 1516 2 1753 2 1317 2 1522 2 659 4 1094 2 
172 2 
125 2 1219 2 
870 2 1229 2 771 2 1267 2 1321 2 38 2 1030 2 371 2 944 2 65 2 109 4 1655 2 867 2 936 2 1152 2 260 2 291 4 1732 2 
870 2 771 6 1267 2 1412 2 1528 2 1321 2 611 2 1708 2 65 4 1655 2 727 4 936 4 175 2 939 2 130 2 1279 2 291 4 1216 2 675 6 296 2 1719 2 1600 2 944 2 947 2 1496 2 34 2 1122 2 144 4 893 2 632 4 1732 2 1229 2 254 2 152 2 38 4 1030 2 575 2 371 4 42 2 1073 2 430 2 1683 2 1564 2 1033 2 1145 6 260 2 262 4 264 4 473 12 913 4 536 2 980 2 1750 2 109 4 825 2 824 6 717 2 867 2 1152 2 275 2 
870 2 771 4 1267 2 1412 2 1528 2 1321 2 611 2 65 6 1655 2 727 4 936 4 175 2 939 2 130 2 1279 2 291 4 1216 2 675 6 296 2 1719 2 1600 2 944 2 947 2 1496 2 34 2 1122 2 144 4 893 2 632 4 1732 2 1229 2 254 2 152 2 38 4 1030 2 575 2 371 4 42 2 1073 2 430 2 1683 2 1564 2 1033 2 1145 6 260 2 262 4 264 4 473 12 913 4 536 2 220 2 980 2 1750 2 109 4 825 2 824 6 717 2 867 2 1152 2 275 2 
870 2 660 2 771 6 1267 2 1412 2 1528 2 1321 2 611 2 65 6 1655 2 727 4 936 4 175 2 939 2 130 2 1279 2 291 4 1216 2 675 6 296 2 1719 2 1600 2 944 2 947 2 1496 2 34 2 1122 2 144 4 893 2 632 8 1732 2 1229 2 254 2 152 2 38 4 1030 2 575 2 371 4 42 2 1073 2 430 2 1683 2 1564 2 1033 2 1145 6 260 2 262 4 264 4 473 12 913 4 536 2 980 2 1750 2 109 4 825 2 824 6 717 2 867 2 1152 2 275 2 
870 2 660 2 771 6 1267 2 1412 2 1528 2 1321 2 611 2 65 8 1655 2 727 4 936 4 175 2 939 2 130 2 1279 2 291 4 1216 2 675 10 296 2 1719 2 1600 2 944 2 947 2 1496 2 34 2 1122 2 144 8 893 2 632 8 1732 2 1229 2 254 2 152 2 38 4 1030 2 575 2 371 4 42 2 1073 2 430 2 1683 2 1564 2 1033 2 1145 8 260 2 262 4 264 4 473 12 913 4 536 2 220 2 980 2 1750 2 109 4 825 2 824 6 717 2 867 2 1152 2 275 2 
870 2 660 2 771 6 1267 2 1412 2 1528 2 1321 2 611 2 65 6 1655 2 727 4 936 4 175 2 939 2 130 2 1279 2 291 4 1216 2 675 10 296 2 1719 2 1600 2 944 2 947 2 1496 2 34 2 1122 2 144 8 893 2 632 8 1732 2 1229 2 254 2 152 2 38 4 1030 2 575 2 371 4 42 2 1073 2 430 2 1683 2 1564 2 1033 2 1145 6 260 2 262 4 264 4 473 12 913 4 536 2 980 2 1750 2 109 4 825 2 824 6 717 2 867 2 1152 2 275 2 
1319 2 870 2 1528 2 1321 2 232 10 1324 2 12 2 1536 12 672 4 452 2 675 2 21 2 681 6 889 1 34 2 1122 2 893 2 460 2 254 2 38 4 899 2 256 2 42 2 1564 2 1145 12 260 2 262 6 47 2 701 6 264 8 1355 2 473 46 913 4 267 6 708 8 481 2 717 2 919 2 1152 2 1583 6 275 4 65 8 930 2 727 6 283 2 936 4 75 2 287 2 939 2 291 4 504 1 735 6 734 6 1373 2 1600 4 1375 6 944 2 1605 1 308 4 947 4 312 2 1378 2 1379 1 751 2 91 2 316 6 1618 2 525 4 1396 6 963 6 1188 2 530 2 1628 2 536 2 980 2 1636 2 108 2 109 4 545 2 771 4 991 2 772 2 1412 2 779 2 1655 2 787 2 130 2 1008 6 1216 2 1427 1 1428 2 1229 2 150 2 1232 2 1231 1 152 2 1030 2 575 2 371 4 1679 6 1443 6 1243 2 814 2 160 2 1683 2 1033 2 1248 2 163 2 586 2 818 1 1694 2 1253 1 824 24 825 2 601 6 1705 2 1267 2 611 2 397 2 398 2 175 2 1477 2 1279 2 1280 6 1716 7 1719 2 185 4 842 2 626 8 1064 6 1496 2 632 2 843 2 1732 2 634 2 635 4 1736 6 1737 6 1073 4 430 4 432 2 1743 1 437 7 1304 2 214 2 1508 2 215 2 854 2 218 6 1086 2 1088 2 220 4 1515 2 1750 2 223 2 1516 4 867 2 1317 2 659 4 
870 2 1319 2 660 4 771 8 991 2 1412 2 1528 2 772 2 1321 2 232 10 1324 2 779 2 12 2 1655 2 1536 12 787 2 672 8 130 2 452 2 1008 6 675 2 1216 2 21 2 1428 2 1429 2 681 6 34 2 1122 2 893 2 460 2 1229 2 150 2 254 2 1232 2 152 2 38 4 575 2 1030 2 899 2 1679 6 371 4 256 2 42 2 1243 2 1443 6 814 2 160 2 1683 2 1564 2 1033 2 1145 12 1248 2 260 2 47 2 262 6 163 2 701 6 586 2 1355 2 264 8 473 48 267 6 913 4 708 8 1694 2 481 2 825 2 824 26 919 2 717 2 55 2 1152 2 601 6 1583 6 275 4 1705 2 1267 2 611 2 397 2 398 4 65 8 930 2 727 6 283 2 1477 2 936 4 175 2 75 4 287 2 939 2 1280 6 1279 2 291 4 734 6 735 6 1373 2 1719 2 1600 4 1375 6 944 2 185 4 308 4 626 8 842 2 947 4 1064 6 1496 2 312 2 1378 2 632 6 843 2 634 2 1732 2 751 2 91 2 635 4 1736 6 316 6 1737 6 1073 4 1618 2 430 4 525 4 1188 2 963 6 1396 6 432 2 530 2 214 2 1304 2 1508 2 215 4 1628 2 218 6 854 2 536 2 1088 2 1086 2 980 2 1515 2 1636 2 1750 2 442 2 108 2 109 4 223 2 1516 4 545 2 867 2 1317 2 659 4 
870 2 1319 2 660 4 771 8 991 2 1412 2 1528 2 772 2 1321 2 232 10 1324 2 779 2 12 2 1655 2 1536 12 787 2 672 8 130 2 452 2 1008 6 1216 2 675 6 21 2 1428 2 1429 2 681 6 34 2 1122 2 144 4 893 2 460 2 1229 2 150 2 254 2 1232 2 152 2 38 4 575 2 1030 2 899 2 1679 6 371 4 256 2 42 2 1243 2 1443 6 814 2 160 2 1683 2 1564 2 1033 2 1145 12 1248 2 260 2 47 2 262 6 163 2 701 6 586 2 1355 2 264 8 473 48 267 6 913 4 708 8 1694 2 481 2 825 2 824 26 919 2 717 2 55 2 1152 2 601 6 1583 6 275 4 1705 2 1267 2 611 2 397 2 398 4 65 8 930 2 727 6 283 2 1477 2 936 4 175 2 75 4 287 2 939 2 1280 6 1279 2 291 4 734 6 735 6 1373 2 1719 2 1600 4 1375 6 944 2 185 4 308 4 626 8 842 2 947 4 1064 6 1496 2 312 2 1378 2 632 6 843 2 634 2 1732 2 751 2 91 2 635 4 1736 6 316 6 1737 6 1073 4 1618 2 430 4 525 4 1188 2 963 6 1396 6 432 2 530 2 1304 2 214 2 1508 2 215 4 1628 2 218 6 854 2 536 2 1088 2 1086 2 980 2 1515 2 1636 2 1750 2 442 2 108 2 109 4 223 2 1516 4 545 2 867 2 1317 2 659 4 
660 4 1319 2 870 2 1528 2 1321 2 232 8 1324 2 12 2 1536 10 1105 2 672 10 452 2 675 6 21 2 24 2 681 12 34 2 1122 2 893 2 460 2 896 2 254 2 1342 2 38 4 899 2 256 2 42 2 1564 2 1350 6 1145 16 260 2 262 6 47 2 908 6 701 6 264 8 1355 2 473 52 913 4 267 6 708 8 481 2 717 2 919 2 55 2 1152 2 484 6 1583 6 275 4 65 10 930 2 727 6 283 2 936 4 75 4 287 2 939 2 291 4 735 6 734 6 1168 6 1373 2 1600 4 1375 12 944 2 308 6 947 4 1172 6 312 2 1378 2 313 6 751 2 91 2 316 12 1618 2 525 4 1396 6 963 12 1188 2 530 2 1628 2 536 2 980 2 108 2 109 4 545 2 764 6 771 10 991 2 772 2 1412 2 343 6 779 2 1655 2 787 2 130 2 1008 6 1216 2 1428 2 1429 2 144 4 1229 2 150 4 1232 2 152 2 1030 2 575 2 371 4 1679 6 1443 8 1243 4 814 2 160 2 1683 2 1033 2 1247 6 1248 2 163 2 586 2 1251 2 1694 2 824 24 825 2 601 6 1705 2 1267 2 611 2 1708 2 397 2 398 4 175 2 1477 4 1279 2 1280 12 1719 2 185 4 1287 2 842 2 626 12 1064 6 1496 2 632 6 843 2 1732 2 634 4 635 4 846 2 1736 12 1737 8 1073 4 430 4 432 2 212 2 214 2 1304 2 1508 2 215 4 854 2 218 6 1086 4 1088 2 220 2 1515 2 1750 2 442 2 223 2 1516 4 867 2 1317 2 659 4 
660 2 1229 2 771 6 1267 2 254 2 1528 2 1321 2 38 4 575 2 1030 2 611 2 65 6 727 2 1683 2 936 4 1033 2 1145 4 130 2 1279 2 291 2 264 2 473 4 675 4 913 2 536 2 1600 2 944 2 109 2 825 2 1152 2 1122 2 144 4 632 6 893 2 1732 2 
660 2 771 6 772 2 1528 2 1321 2 232 2 1533 2 1654 2 1536 4 130 2 675 2 244 2 34 2 1122 2 893 2 1229 2 254 2 1232 2 152 2 38 4 575 2 899 2 1030 2 42 2 1443 6 1243 3 160 2 1683 2 1564 2 1033 2 1145 4 262 6 48 2 47 2 264 2 473 28 913 2 1694 2 481 2 824 24 825 2 1261 2 1152 2 275 4 1267 2 611 2 65 6 727 2 936 4 175 2 1477 3 287 2 939 2 1279 2 291 2 839 2 1600 2 944 2 842 2 626 8 308 4 947 4 1496 2 312 2 1378 2 632 6 843 2 1732 2 751 2 91 2 92 2 423 3 1737 6 849 2 1741 2 525 4 1396 6 214 2 1304 2 1508 2 1628 2 536 2 1086 3 980 2 1636 2 109 2 1516 2 1317 2 659 4 
870 2 660 2 771 6 1267 2 1412 2 1528 2 1321 2 611 2 65 6 1655 2 727 4 936 4 175 2 939 2 130 2 1279 2 291 4 1216 2 675 10 296 2 1719 2 1600 2 944 2 947 2 1496 2 34 2 1122 2 144 8 893 2 632 8 1732 2 1229 2 254 2 152 2 38 4 1030 2 575 2 371 4 42 2 1073 2 430 2 1683 2 1564 2 1033 2 1145 6 260 2 262 4 264 4 473 12 913 4 536 2 980 2 1750 2 109 4 825 2 824 6 717 2 867 2 1152 2 275 2 
870 2 660 2 771 8 1267 2 1412 2 1528 2 490 2 1321 2 611 2 1708 2 65 6 1655 2 727 4 175 2 936 4 939 2 130 2 1279 2 789 4 291 4 1216 2 675 10 1719 2 1600 2 944 2 947 2 1496 2 34 2 1122 2 144 8 893 2 632 8 1732 2 1229 2 254 2 152 2 38 4 1030 2 575 2 1557 2 371 4 42 2 1073 2 430 2 1683 2 1564 2 1033 2 1145 8 260 2 262 4 264 4 473 12 913 4 980 2 1750 2 109 4 824 6 825 2 717 2 867 2 1152 2 275 2 
1082 2 575 2 611 2 
1082 2 575 2 611 2 
870 2 660 4 771 12 772 2 232 2 12 4 1653 2 1420 2 1655 2 1536 4 14 2 787 2 672 4 453 2 1216 2 675 6 800 4 34 2 144 4 1229 2 1026 2 254 2 1232 2 38 4 575 6 899 2 371 4 1239 4 42 2 1443 2 160 2 1683 2 1564 2 1145 16 47 2 262 6 264 4 473 24 913 2 481 2 824 16 717 2 1152 4 1583 2 275 4 611 4 397 2 1708 4 398 4 65 12 727 4 175 2 1477 2 936 4 75 4 287 2 939 2 1057 2 291 2 1719 2 512 2 1600 4 408 2 944 2 185 2 842 2 626 2 517 2 1289 4 947 4 1496 2 312 2 310 2 1378 2 632 6 843 2 751 2 91 2 635 2 1737 2 1073 2 1619 2 1739 2 430 4 525 4 324 2 1396 6 432 2 214 2 1304 2 1508 2 215 4 1628 2 1082 2 1306 2 1194 2 336 2 980 2 220 4 109 2 1516 6 543 2 1317 2 659 4 
453 2 473 4 1026 2 635 2 232 2 68 2 824 2 545 2 324 2 1536 2 175 2 125 2 528 2 1248 2 1583 2 1406 2 260 2 
870 2 660 4 771 12 772 2 123 2 12 4 1420 2 1655 2 1536 2 14 2 787 2 672 4 453 2 1216 2 675 6 561 2 800 4 34 2 144 4 1229 2 1026 2 254 2 1232 2 38 4 575 6 899 2 371 4 1239 4 42 2 1443 2 160 2 1683 2 1564 2 1145 16 47 2 262 6 264 4 473 24 913 2 481 2 824 16 717 2 1152 4 600 2 1583 2 275 4 611 4 397 2 1708 4 398 4 65 12 727 4 175 2 1477 4 936 4 1055 2 75 4 287 2 939 2 1057 2 291 2 1719 2 512 2 1600 4 944 2 185 2 842 2 626 2 517 2 1289 4 947 4 1496 2 312 2 310 4 1378 2 632 6 843 2 195 2 751 2 91 2 1737 2 1073 4 1739 2 430 4 525 4 324 2 1396 6 432 2 214 2 1304 2 1508 2 215 4 1628 2 1082 2 1306 2 1194 2 980 2 220 4 1750 2 109 2 1516 6 543 2 1317 2 659 4 
870 2 660 4 771 12 772 2 232 2 12 4 1420 2 1655 2 1536 4 14 2 787 2 672 4 453 2 1216 2 675 6 800 4 34 2 144 4 1229 2 1026 2 254 2 1232 2 38 4 575 6 899 2 371 4 1239 4 42 2 693 2 1443 2 160 2 1683 2 1564 2 1145 16 47 2 262 6 264 4 473 24 913 2 385 2 481 2 824 16 717 2 1152 4 58 2 1583 2 275 4 611 4 397 2 1708 4 398 4 65 12 727 4 175 2 1477 2 936 4 75 4 287 2 939 2 1057 2 291 2 1719 2 512 2 1600 4 944 2 185 2 842 2 626 2 517 2 1289 4 947 4 1496 2 312 2 310 2 1378 2 632 6 843 2 751 2 91 2 635 2 636 2 1737 2 1073 4 1739 2 430 4 525 4 324 2 1396 6 432 2 214 2 1304 2 1508 2 215 4 1628 2 1082 2 1306 2 1194 2 980 2 220 4 1750 2 109 2 1516 6 543 2 1317 2 988 2 659 4 
871 2 872 2 3 8 874 2 5 40 6 8 7 2 8 2 876 4 9 15 877 10 10 2 11 3 878 2 12 18 880 4 13 2 17 2 883 2 19 4 21 2 24 2 23 2 22 2 25 2 30 2 32 2 34 2 892 2 894 2 35 40 896 2 897 48 37 2 899 6 40 2 42 2 43 22 901 2 46 2 47 6 909 2 910 2 912 4 49 3 915 2 916 2 917 2 51 3 921 8 919 8 53 6 922 14 57 4 925 38 60 2 61 1 62 2 63 2 67 18 66 2 931 2 69 2 934 4 70 2 932 2 71 1 935 3 72 2 73 6 74 4 939 2 940 2 941 2 80 2 943 2 84 2 85 4 86 13 947 8 89 3 948 2 949 2 951 38 950 4 955 2 959 2 960 2 964 2 967 2 95 4 970 2 98 2 975 22 99 3 977 2 102 2 101 18 100 2 103 3 104 2 105 2 980 2 108 2 982 2 112 3 113 2 985 2 986 2 114 3 989 2 118 2 119 2 993 80 121 2 122 2 995 42 996 4 998 38 999 2 126 2 128 66 1004 1 132 2 133 2 1011 2 134 2 1013 6 137 2 138 60 1016 24 140 2 1017 14 143 80 1020 24 147 2 1022 2 149 2 150 84 154 4 153 2 1031 4 155 2 156 61 1032 2 160 4 159 14 162 2 1035 1 1037 2 164 2 1039 2 1040 2 1041 2 1042 2 1044 2 1045 2 1049 16 1050 2 1052 2 175 2 1054 80 176 2 177 4 178 2 1060 2 1059 3 1061 162 182 2 184 54 188 2 190 12 191 4 1066 4 1068 6 200 2 201 3 1071 8 205 2 1072 2 206 2 207 2 209 2 210 18 1076 2 211 2 212 2 1078 2 213 2 1080 2 1081 2 1083 2 1087 12 1086 46 1089 2 1090 2 221 2 224 2 225 2 1092 2 1093 38 1094 4 1096 7 230 2 1098 14 1097 2 232 2 1100 2 235 118 1103 4 237 6 1105 2 239 78 1111 3 1112 2 1113 2 243 2 1118 2 1120 24 246 4 1123 2 248 2 249 4 250 2 252 2 253 2 1126 112 1127 2 255 2 1128 3 1130 2 1132 2 1133 2 1136 172 1137 26 1138 2 1139 34 257 2 262 10 1146 12 1147 2 269 2 1149 4 1150 4 271 2 1154 4 1155 80 275 8 276 2 1158 2 1159 2 277 2 1160 2 278 2 280 2 1162 3 1163 2 1164 2 283 8 1165 16 284 2 285 2 286 2 287 8 288 2 290 80 1167 2 293 14 297 2 304 2 1170 2 305 2 1171 2 307 4 308 12 1173 2 1175 2 312 2 1178 66 1179 2 317 2 318 38 319 4 1183 2 1184 2 320 2 321 2 1186 2 323 2 325 14 1189 2 326 10 327 2 328 2 329 78 1192 2 1193 2 1195 22 337 2 338 2 1200 3 1202 1 1203 76 1204 2 1205 2 341 4 342 2 1207 4 1210 2 1209 40 1211 2 347 4 1212 2 348 2 349 2 1214 2 1215 2 1217 2 353 2 354 2 1221 3 1223 3 1224 2 1225 2 1226 2 356 2 358 2 360 8 359 3 1230 2 363 38 365 4 366 2 1234 3 368 162 369 10 370 76 372 2 1238 2 1240 2 1241 228 1242 2 1245 2 1243 16 376 2 1246 2 380 2 379 60 382 2 1251 2 384 2 387 34 1254 4 388 80 1257 2 391 3 390 3 1258 1 392 2 1261 2 1259 132 1260 2 1262 2 1263 2 394 2 1266 2 400 2 399 2 1271 4 1272 2 1273 22 403 3 1276 2 1277 2 405 8 1284 2 1285 2 409 2 411 2 414 2 413 2 1290 2 418 2 1293 82 1296 10 422 2 1297 2 423 2 425 2 426 40 428 2 1300 1 433 2 1303 2 434 2 435 3 436 24 1304 2 1305 2 1308 2 1310 1 1311 1 443 6 1313 38 1317 2 444 3 445 3 446 2 1319 4 1320 40 447 2 1330 2 450 2 457 2 458 2 1336 2 1338 2 460 16 1340 2 461 2 1343 2 1342 2 462 80 1344 2 1345 2 464 2 1346 2 466 2 470 2 1354 2 472 24 473 154 478 2 1357 18 1360 3 1362 86 1363 2 493 2 497 2 498 10 1368 2 500 2 1371 8 507 2 506 38 508 6 1374 2 510 22 513 6 1376 2 515 2 1377 2 1378 8 1380 2 521 3 522 2 523 2 1383 2 524 2 1390 4 1392 2 1393 360 525 6 526 2 1396 14 530 8 1397 2 1399 2 534 2 538 2 539 6 541 2 1401 2 542 2 546 2 1405 2 548 2 549 38 1407 4 1409 16 1413 2 1415 2 1416 22 552 2 1418 2 1419 2 554 2 1421 2 555 8 1423 20 556 2 1424 2 559 2 1425 2 1426 2 562 10 1431 2 565 2 1433 2 1434 2 568 2 1436 2 570 2 1438 2 573 86 574 4 578 2 577 2 579 2 580 2 581 188 1443 32 1444 2 583 3 584 2 1446 102 1447 6 1448 2 585 4 586 22 588 2 1451 2 589 2 592 16 1454 18 1455 2 594 2 1458 2 1457 2 597 2 1461 2 606 8 1463 2 1466 2 1464 2 607 2 609 20 610 12 613 2 614 2 615 3 616 2 1475 20 1477 110 1480 6 1482 2 1484 2 1485 2 621 2 1486 16 1488 40 1489 2 624 2 625 2 626 126 1496 2 629 2 634 46 1498 2 1506 318 1505 38 642 2 644 4 645 2 1508 2 1507 2 652 14 1510 2 1511 2 1512 36 1513 4 654 2 655 82 1516 2 1518 2 657 2 1519 2 658 2 1523 2 1522 2 1524 6 1525 2 659 6 1526 2 1527 2 661 2 664 3 1529 4 1532 2 1533 2 1534 2 667 3 1535 2 1536 10 1537 2 1538 42 670 2 672 298 671 2 674 1 1542 1 676 2 1544 3 1543 2 677 2 680 3 1545 2 1546 2 682 2 683 2 1552 2 1553 3 686 80 1554 2 1556 2 1558 2 697 10 698 3 1563 2 1565 2 1564 2 1567 6 700 2 1573 10 704 2 706 2 709 2 710 2 1576 2 1581 1 1582 2 718 2 1586 60 1587 2 1588 3 1589 2 1590 14 1591 2 1592 2 726 2 728 1 729 2 1595 4 1596 2 731 10 730 2 1597 2 736 60 1598 2 738 2 1599 2 740 2 1602 2 1604 2 1606 3 744 6 1608 2 746 2 748 15 747 2 751 2 753 2 1613 2 1612 42 1614 2 1615 10 1616 2 1618 2 1620 2 755 2 1622 194 1623 2 1624 2 1626 1 757 2 1628 4 1629 2 1630 1 1631 2 1638 10 762 2 1641 2 1642 2 765 3 766 6 768 2 772 4 773 2 1647 34 1648 38 1650 2 775 2 774 2 777 4 779 2 1652 2 1654 2 783 2 1657 3 785 2 1658 2 791 12 793 3 1663 2 1662 2 794 2 1665 2 796 2 803 2 805 4 1675 3 806 32 1674 2 1676 10 808 2 807 2 809 2 810 2 1677 3 1680 2 812 14 1681 2 814 2 1682 4 816 16 1686 3 817 2 819 2 1690 12 1693 2 1695 2 1694 2 822 20 824 100 826 38 1699 2 1698 2 1700 76 828 22 829 2 1701 2 1702 2 831 2 1704 10 832 2 833 2 1707 52 1710 8 834 2 836 2 1714 2 837 22 839 2 1721 2 1722 2 1725 2 1727 2 1726 2 1728 2 843 2 1730 38 1733 8 846 4 1737 18 1738 2 1740 2 1742 2 850 2 854 2 1745 26 853 2 855 120 856 2 857 2 1749 2 1751 12 863 9 1752 2 1753 2 868 2 
1234 2 369 4 1615 2 877 2 1737 2 1243 2 1443 2 1740 2 1477 2 434 2 473 2 649 2 1489 2 1086 2 1693 2 1694 2 1546 2 626 2 308 2 1458 2 824 2 1461 2 808 2 634 6 
1234 2 369 4 1615 2 877 2 1737 2 1243 2 1443 2 1740 2 1477 2 434 2 473 2 649 2 1489 2 1086 2 1693 2 1694 2 1546 2 626 2 308 2 1458 2 824 2 1461 2 808 2 634 6 
1234 2 369 4 1615 2 877 2 1737 2 1243 2 1443 2 1740 2 1477 2 434 2 473 2 649 2 1489 2 1086 2 1693 2 1694 2 1546 2 626 2 308 2 1458 2 824 2 1461 2 808 2 634 6 
608 2 574 2 1707 2 610 2 692 2 67 4 1740 2 237 2 1622 2 1477 3 1567 2 1446 6 620 2 1447 2 177 2 837 4 1660 3 216 2 472 4 473 10 975 4 298 4 510 4 739 2 1085 2 1690 2 1195 4 539 4 1086 3 1087 2 1013 2 1694 2 626 2 864 2 190 2 1120 3 824 4 1043 2 1020 3 90 2 
608 2 574 2 1707 2 610 2 1238 2 692 2 67 4 1740 2 237 2 1622 2 1477 2 1567 2 1446 6 620 2 1447 2 177 2 837 4 1660 2 216 2 472 4 473 10 975 4 298 4 510 4 739 2 1085 2 1690 2 1195 4 539 4 1086 2 1087 2 1013 2 1694 2 626 2 864 2 190 2 1638 2 1120 2 824 4 1043 2 1020 2 766 2 90 2 
608 2 574 2 1707 2 610 2 1238 2 692 2 67 4 1740 2 237 2 1622 2 1477 2 1567 2 1446 6 620 2 1447 2 177 2 837 4 1660 2 216 2 472 4 473 10 975 4 298 4 510 4 739 2 1085 2 1690 2 1195 4 539 4 1086 2 1087 2 1013 2 1694 2 626 2 864 2 190 2 1638 2 1120 2 824 4 1043 2 1020 2 766 2 90 2 
608 2 574 2 1707 2 610 2 1238 2 692 2 67 4 1740 2 237 2 1622 2 1477 2 1567 2 1446 6 620 2 1447 2 177 2 837 4 1660 2 216 2 472 4 473 10 975 4 298 4 510 4 739 2 1085 2 1690 2 1195 4 539 4 1086 2 1087 2 1013 2 1694 2 626 2 864 2 190 2 1638 2 1120 2 824 4 1043 2 1020 2 766 2 90 2 
608 2 574 2 1707 2 610 2 1238 4 692 2 67 4 1740 2 237 2 1622 2 1477 2 1567 2 1446 6 620 2 1447 2 177 2 837 4 1660 2 216 2 472 4 473 10 975 4 298 4 510 4 739 2 1085 2 1690 2 1195 4 539 4 1086 2 1087 2 1013 2 1694 2 626 2 864 2 190 2 1638 4 1120 2 824 4 1043 2 1020 2 766 4 90 2 
793 2 1656 2 366 2 978 2 155 2 1480 2 
793 2 879 2 1362 2 105 2 1277 2 249 2 542 2 
93 2 954 2 1470 2 781 2 1394 2 1621 2 963 2 1003 2 1038 1 78 2 733 2 473 10 651 2 82 2 1491 1 334 2 1634 2 29 2 1696 1 516 2 1361 1 824 8 1496 2 1177 2 1520 1 924 2 
1555 2 607 2 231 2 154 2 847 2 610 6 1271 2 1238 2 67 12 237 6 1567 6 126 2 1447 6 177 2 472 15 473 6 1690 6 1112 2 1087 6 539 4 1013 6 307 2 339 1 982 2 824 6 1638 4 1524 4 766 3 606 2 926 2 1068 4 
587 2 473 1 792 1 648 2 266 2 510 2 1195 2 841 2 1149 2 410 2 1349 2 824 1 1227 2 377 4 1404 2 1521 7 837 2 558 2 
587 2 648 4 266 2 510 2 1195 2 841 2 1149 4 410 2 1349 2 1227 4 377 4 1404 2 1521 6 837 2 558 2 
587 2 473 1 792 1 648 8 266 2 510 2 1195 2 841 2 1149 8 410 8 1349 6 824 1 1227 8 377 4 1404 2 1521 10 837 2 558 2 
587 2 648 2 266 2 510 2 1195 2 841 2 1149 2 1227 2 377 2 1404 2 1521 2 837 2 558 2 
772 2 663 6 1414 4 665 4 345 2 1651 4 124 16 1000 4 784 4 1328 4 1002 2 788 4 1107 4 1108 10 454 4 1661 4 1109 4 20 4 26 2 245 4 1018 4 1432 24 1673 2 890 4 146 2 1228 2 572 8 688 4 899 29 463 4 1345 2 690 2 160 6 1562 4 469 8 1568 4 1685 4 47 27 473 78 166 4 265 2 477 2 820 2 1452 16 1691 16 1148 4 479 4 386 4 1453 30 1359 16 713 2 1577 2 714 8 595 2 824 70 920 24 598 4 1153 8 603 6 1465 8 395 10 1046 10 1047 8 1468 4 1709 4 499 4 617 2 618 4 1166 4 1282 2 294 32 1062 2 407 4 301 4 1494 10 189 4 1495 4 1607 11 1727 2 417 24 1611 4 1291 1 1181 2 314 4 633 8 196 2 1295 6 1499 2 424 4 1299 2 427 4 429 10 640 4 1395 6 525 36 1396 103 965 8 1628 6 971 4 647 4 333 14 439 4 1196 4 337 2 107 10 1199 2 1315 10 767 4 659 44 769 4 
1411 2 1046 6 772 2 929 2 495 2 1051 2 345 2 1651 2 1709 4 1594 2 617 2 1479 2 131 2 1109 4 407 4 301 4 1727 2 1607 2 245 4 1673 2 1432 8 146 2 684 2 1295 2 1439 2 899 12 1345 2 424 2 690 2 429 6 160 2 640 2 525 14 1395 2 1396 40 1685 2 47 12 1628 2 647 2 473 28 166 2 976 2 820 2 1148 4 1196 4 337 2 107 6 1453 6 1359 14 1199 2 1577 2 824 26 598 2 547 2 603 4 1754 10 659 14 395 2 1465 6 
1411 2 772 8 663 5 994 4 665 6 345 2 1651 10 1099 10 236 8 1000 6 784 4 1328 6 1001 24 16 8 788 4 1107 6 131 2 1109 6 20 4 455 4 26 2 1222 2 245 6 1018 6 459 90 1121 24 1432 124 1673 2 890 6 146 5 684 2 687 4 1439 8 572 24 688 4 1029 10 899 58 1235 4 463 6 1345 8 373 4 1347 6 690 4 1135 26 160 14 815 26 1562 6 1143 12 1568 4 1685 4 47 58 474 18 166 10 473 150 265 2 820 2 1452 42 1148 6 479 6 1453 34 1358 90 1359 28 1577 2 714 50 824 134 1151 24 920 92 598 6 603 8 395 18 1465 16 1046 16 723 4 1047 42 1468 4 929 2 495 2 1366 10 1051 4 1709 8 499 6 1594 11 618 6 619 6 1282 2 622 2 81 8 407 6 1062 2 301 6 300 4 945 4 189 4 1607 16 1727 8 417 84 1611 6 314 6 196 4 752 24 1069 4 1295 36 424 4 429 16 640 10 1395 10 525 88 1396 248 1628 14 971 4 647 10 650 2 976 4 333 12 439 4 1632 2 1196 6 337 8 107 16 1400 24 1199 2 340 2 547 2 767 4 1754 22 659 112 769 6 
1467 2 228 2 1046 4 723 2 772 2 1206 2 929 2 1366 2 345 2 1651 2 1099 2 346 2 1593 2 236 2 617 2 1001 2 1479 2 289 2 1108 2 1109 2 737 4 180 2 299 6 407 2 301 2 28 2 1494 2 798 2 1607 2 1727 2 245 2 1673 2 1432 6 1124 2 1181 2 357 4 1021 2 1339 2 146 2 952 2 752 2 1295 2 1070 2 1341 2 1029 2 899 6 848 2 1385 2 1386 2 1345 2 429 4 160 2 640 2 1395 2 322 2 525 20 1140 2 1396 48 258 2 1079 4 47 6 1628 2 1570 2 166 2 647 2 972 2 473 46 820 2 703 2 1084 2 1148 2 1196 2 1575 2 337 2 1312 2 107 4 110 2 1359 36 1199 2 1577 2 595 2 824 44 1697 2 1639 2 1151 2 226 4 1315 2 598 2 603 6 659 20 395 2 
827 2 

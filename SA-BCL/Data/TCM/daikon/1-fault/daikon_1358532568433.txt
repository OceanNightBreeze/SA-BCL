#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParser:jj_3R_124()Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.JavaParser:jj_3R_51()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:isIOASet()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.PptName:getSignature()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_164()Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
jtb.JavaParser:jj_3R_148()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Quant:gt(II)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.NodeOptional:present()Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_97()Z
jtb.visitor.FormatCommand:getCommand()I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.ProglangType:baseIsFloat()Z
utilMDE.FuzzyFloat:eq(DD)Z | CONDITION | 2791 | if (x) -> if (!x)
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
jtb.JavaParser:jj_2_25(I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
utilMDE.FuzzyFloat:lt(DD)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_96()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Debug:logOn()Z
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:union([I[I)[I
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfo:new_ppt()V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:arity()I
jtb.JavaParser:jj_3_5()Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_3_19()Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:isIOAArray()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_49()Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_149()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.JavaParser:jj_3R_52()Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_3R_48()Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParser:jj_3R_102()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.MathMDE:pow_fast(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.JavaParser:jj_3_20()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3R_88()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:jj_3_4()Z
jtb.visitor.FormatCommand:getNumCommands()I
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.string.OneOfString:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:lexGTE([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
jtb.JavaParser:jj_3R_85()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:concat([I[I)[I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:memberOf(F[F)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_ntk()I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.ArraysMDE:subarray([III)[I
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_162()Z
daikon.Ppt:Ppt()V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.ProglangType:isString()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:jj_3R_136()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern:intern([J)[J
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_27()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.PptSlice3:arity()I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([J[J)Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3R_98()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:lt(II)Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName:hashCode()I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_180()Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.Invariant:justified()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.diff.Node:Node()V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_57()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:modulus([I)[I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:has_typeof()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaCharStream:ReadByte()C
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:elementIsIntegral()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_77()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:min([I)I
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:jj_2_3(I)Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_72()Z
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.diff.RootNode:RootNode()V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_3R_118()Z
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
utilMDE.ArraysMDE:element_range([I)I
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.binary.twoSequence.Reverse:enabled()Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_137()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eq(DD)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsEqual([II)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaCharStream:backup(I)V
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceString.MemberString:enabled()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([F[D)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:jj_3_35()Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:isReverse([I[I)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.JavaCharStream:getEndColumn()I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.Member:enabled()Z
jtb.JavaParser:jj_3R_161()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaCharStream:readChar()C
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:jj_3R_54()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
jtb.JavaParser:jj_3_15()Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_62()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.string.OneOfString:is_type()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.Quant:eq(II)Z
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_169()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.Invariant:logDetail()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_25()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[I)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:ne(II)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaCharStream:getBeginLine()I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.VarInfoName:isLiteralConstant()Z
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:gte(II)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:noDups([I)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_1()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_21(I)Z
daikon.Quant:eltsLT([II)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_36()Z
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:mod_positive(II)I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:jj_3R_106()Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_17()Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_2_1(I)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.FormatTestCase:passes()Z
daikon.VarInfo:isPointer()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([D)[D
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:jj_3_10()Z
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:jj_3R_89()Z
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.PptSlice0:arity()I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_3R_210()Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaCharStream:getEndLine()I
daikon.inv.Invariant:getConfidence()D
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:negate(I)I
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:isDerived()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.Quant:memberOf(D[F)Z
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_60()Z
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_122()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:jj_3R_103()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:sign(I)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:enabled()Z
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_28()Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.Invariant:is_false()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:setEqual([I[I)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.TreeFormatter:TreeFormatter(II)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_74()Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eq(JJ)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:hasTypeOf()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3R_70()Z
daikon.PptSlice1:num_samples()I
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:jj_3R_99()Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
jtb.JavaParser:jj_3_14()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_18(I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.ProglangType:isPseudoArray()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.ArraysMDE:sum([I)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_3R_81()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_115()Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.Quant:lte(II)Z
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:intersection([I[I)[I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.ProglangType:baseIsString()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_18()Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_119()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.ProglangType:isScalar()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:jj_3R_61()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParser:jj_3R_67()Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([J[JI)Z
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_107()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_68()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:toString()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:memberOf(J[J)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.JavaParser:jj_3R_126()Z
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:jj_2_17(I)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ModBitTracker:split(I)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:subsetOf([B[I)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.JavaParser:jj_3R_101()Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_3_22()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:sameLength([I[I)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Intern:numIntArrays()I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(S[S)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.VarInfo:relate_var()V
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.MathMDE:gcd(JJ)J
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:jj_3R_87()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_109()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.ProglangType:isArray()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.ProglangType:isFloat()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.WeakHasherMap:processQueue()V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_104()Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_105()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Debug:logDetail()Z
jtb.JavaParser:jj_2_14(I)Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.ValueTuple:size()I
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:isPrestate()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:jj_3R_73()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
63 2 1048 4 1441 2 1521 2 1083 2 224 2 211 2 1566 2 218 2 
473 2 1716 6 285 2 1387 2 1685 2 1544 6 1239 2 352 2 1037 2 1074 2 311 6 
1477 2 1566 2 1236 4 657 6 1543 4 34 6 913 6 1809 2 1588 2 963 2 873 6 218 2 326 2 
356 4 1899 26 1221 2 983 2 1026 12 1681 8 1622 2 363 4 1603 10 1855 10 400 4 528 8 1376 10 218 6 472 6 1279 4 1537 8 818 8 1414 16 1261 2 1003 10 1614 6 1320 28 1566 6 777 16 1754 16 1112 10 546 2 452 2 135 2 
170 4 1442 6 
699 2 
6 2 808 2 211 2 397 2 759 2 526 2 1344 2 1534 2 218 4 1059 2 1349 4 715 2 408 2 821 2 347 4 1289 2 83 2 1825 2 1358 2 90 2 1426 2 1294 2 1841 2 298 2 1084 2 1771 2 1853 2 1558 2 1607 2 36 2 679 2 1712 4 1784 2 1566 4 973 2 690 2 1517 2 1570 2 1572 2 1724 4 1797 2 135 2 696 2 138 2 
749 2 1867 6 1899 47 788 4 1026 22 1336 6 793 2 361 4 727 5 519 4 1224 4 1734 2 1435 4 1301 8 1603 15 1855 15 499 6 466 4 528 19 1376 6 218 4 472 4 1279 2 818 6 1414 32 374 2 1003 15 122 3 1614 4 1566 4 1320 52 1044 6 777 32 379 6 1112 15 1754 32 129 4 1573 2 452 2 
1838 2 1856 2 83 2 
1744 2 116 2 1068 2 150 2 890 2 75 14 1113 2 488 2 858 6 
1763 2 1899 4 418 2 1026 2 1581 2 1603 2 1855 2 854 2 107 2 528 2 1376 4 817 2 313 2 1279 2 1745 2 1414 2 1003 2 1614 2 1320 6 777 2 53 2 1112 2 1754 2 
112 2 1899 12 788 4 1026 4 1414 8 1003 4 361 4 1320 16 1044 6 363 2 1603 4 777 8 379 6 1855 4 1754 8 1112 4 448 2 
829 4 1644 4 606 62 1731 2 1838 6 1396 2 392 2 329 2 953 4 1198 4 69 2 1121 14 303 4 634 4 808 4 1303 2 1531 2 524 2 1472 10 1377 4 1856 2 115 10 591 2 1511 2 1131 4 286 2 15 2 821 2 800 2 83 8 1420 2 1924 4 227 2 1616 2 1390 2 1724 4 1725 4 630 2 946 4 1601 2 
1645 2 699 2 809 2 1772 2 1602 2 1258 2 1516 2 1139 2 825 2 782 2 
3 2 1120 2 845 2 750 2 1582 2 752 3 758 2 147 2 1340 2 278 2 1811 2 523 3 997 2 998 2 403 6 859 2 531 2 649 2 862 2 1351 16 16 2 1134 3 1137 2 1695 2 775 3 776 6 1600 3 779 1 21 2 665 12 1359 2 1830 16 1494 2 1140 2 1142 2 1144 2 291 2 1495 2 168 2 415 1 786 2 1701 4 1835 1 295 2 24 3 1020 16 297 1 671 1 552 4 1368 12 1148 3 177 2 554 2 796 2 183 2 556 2 898 1 1038 2 681 24 1611 2 191 2 907 2 569 2 1262 2 1386 4 48 2 1167 2 1047 2 447 3 1521 2 803 24 575 4 1169 2 450 2 1052 2 804 4 1527 8 922 2 1735 1 705 8 1404 2 1529 2 71 2 581 2 582 2 928 8 1738 2 218 34 1180 3 342 2 79 1 219 2 1182 1 1538 2 1184 2 720 1 1888 2 1889 4 936 2 1545 2 597 2 1190 2 350 2 599 2 1546 3 230 2 939 2 1638 2 491 2 601 4 1076 6 232 1 1077 3 493 2 494 2 1428 2 725 2 1765 2 1552 2 1768 2 1432 2 728 5 610 2 244 1 1434 2 1769 3 246 2 1093 16 248 2 1774 32 103 1 1094 2 1776 2 1775 1 501 2 254 2 1660 1 1099 2 1211 2 261 4 376 2 1566 32 1105 2 1668 2 378 1 128 6 136 1 1464 2 1799 32 
218 2 746 2 
659 2 1625 2 218 4 
529 2 
1 84 981 2 2 4 5 6 4 2 984 2 7 4 518 2 1468 12 987 20 995 4 525 2 527 6 10 4 999 204 1000 2 1475 6 1474 2 12 2 13 2 14 6 1479 2 1480 2 1481 2 17 8 1483 6 1005 6 18 4 1484 244 1486 6 1006 2 540 2 1009 8 1489 2 1012 2 1493 2 22 2 1015 2 1496 2 23 2 1017 4 1497 2 1498 6 548 2 1021 8 25 2 26 2 1023 2 27 22 551 30 1503 60 32 4 1027 2 1505 2 553 2 555 2 559 4 38 4 1039 4 562 8 40 28 563 2 42 26 44 6 570 2 45 14 47 10 1045 26 572 6 54 8 1050 2 1053 2 61 224 576 4 1525 6 66 4 65 26 68 2 1535 64 1536 2 1060 118 588 2 592 10 1061 22 1539 4 82 2 1542 2 1069 198 1070 198 1547 2 1075 4 604 4 1078 2 92 4 1081 6 94 2 609 64 99 2 98 566 1085 6 101 6 102 6 1089 6 1090 2 1556 328 104 112 106 2 621 6 110 4 1560 2 1097 4 623 4 117 24 1100 2 1563 2 121 6 626 2 1566 10 627 2 1569 2 124 4 628 2 127 12 1114 4 134 4 131 2 132 22 1116 2 137 26 140 4 141 2 1577 2 1122 20 1580 160 1583 26 635 432 1584 50 1125 2 149 2 638 32 639 8 640 6 153 2 1126 2 645 6 158 6 1127 6 1593 6 1129 54 159 8 1130 2 652 290 653 16 163 12 1599 2 662 4 666 4 1145 4 1147 30 670 2 172 192 175 2 178 48 677 2 182 4 1153 2 1606 6 1154 6 185 4 1155 82 1609 30 186 2 187 4 1612 198 189 2 190 2 1157 14 192 20 1158 2 1159 2 1160 2 1162 26 684 2 195 4 197 2 1166 6 1165 4 199 10 203 2 688 2 691 8 1617 4 1619 2 1175 2 703 20 1176 20 709 4 214 52 713 2 1627 2 1628 8 1630 46 218 10 1633 2 718 26 1185 2 721 4 1187 198 1188 4 1189 2 722 2 226 2 1191 18 229 2 1639 2 1192 244 1640 2 1193 2 233 6 1194 8 234 4 1646 26 239 4 726 2 1197 60 243 2 1200 60 730 14 1655 6 732 30 247 2 1657 2 1204 2 1207 2 252 4 1659 2 255 4 1208 60 257 4 259 2 1661 2 1663 2 741 10 262 112 264 2 1667 8 266 2 267 30 268 14 1670 106 1218 14 271 2 1672 20 1219 2 747 6 1220 6 1676 2 1222 192 751 6 1678 2 1679 2 1682 86 753 2 1684 46 1227 12 277 30 1229 4 763 2 766 2 1691 2 769 376 284 2 1233 2 771 28 1692 2 772 244 780 2 1699 198 1240 2 1244 74 292 28 1245 2 293 4 294 4 1247 2 1704 6 1705 92 299 4 789 2 790 4 1706 12 302 2 794 132 795 2 1251 16 1252 2 304 8 1708 132 1710 12 1713 98 312 2 1714 2 1715 94 318 2 1722 4 320 204 321 6 801 30 1266 182 1268 4 1726 2 325 2 1729 106 1272 10 330 24 1733 6 1275 2 331 2 810 4 812 2 1736 6 334 2 335 4 1741 6 343 2 1742 2 344 4 1280 4 345 2 820 6 1284 2 349 4 1751 6 351 2 1753 88 1292 198 828 2 1755 6 1761 4 1295 12 360 4 1297 2 1298 4 1307 4 1773 140 1780 2 1782 2 1785 4 1787 30 835 12 1788 2 1791 6 1792 2 380 12 1322 6 383 2 1328 2 1329 8 387 6 388 8 1801 2 1802 112 1803 2 1338 4 395 4 396 68 850 4 851 8 853 16 1342 2 856 6 1343 20 1812 28 402 4 401 2 1346 30 404 6 1347 4 1348 198 1814 2 1813 2 407 2 863 228 1823 2 1353 22 1355 2 1824 2 413 6 1828 2 1831 6 414 6 1361 2 875 16 1836 20 1366 30 878 2 1842 6 1844 48 1367 2 882 2 1847 2 1850 46 1370 2 885 4 1852 4 893 2 1373 66 428 182 429 2 899 328 900 10 1857 2 903 6 1381 2 904 4 434 30 1861 6 1384 6 908 2 441 6 1389 70 1863 2 1864 8 1393 2 1865 2 453 6 455 4 456 112 919 46 1870 18 462 4 1399 2 1404 2 1872 6 463 28 1876 4 1875 2 926 6 927 198 467 6 1879 6 468 2 1880 4 1408 6 469 2 1883 12 930 4 471 2 475 6 1411 2 477 4 479 2 1891 6 481 2 1893 6 484 8 1419 4 937 432 941 4 1895 2 943 6 945 26 950 4 1901 46 496 2 1904 2 1433 2 1437 2 1438 12 1907 8 957 14 959 2 1910 2 1443 4 1912 12 1445 26 1447 386 505 6 1916 336 1918 2 969 2 507 18 1453 2 1922 2 1457 6 509 2 1925 2 974 2 1928 26 975 6 511 14 976 2 977 6 1930 2 1460 6 1461 2 978 2 980 2 514 6 
988 2 309 1 250 2 1728 2 
988 2 238 2 
988 2 1567 2 73 2 716 2 723 2 400 2 83 2 
988 2 73 2 1417 2 
988 2 1364 2 73 2 
1062 2 1728 2 917 2 
988 2 73 2 
1062 2 848 2 
988 2 1102 2 
1062 2 1728 2 767 2 
1082 2 814 2 1728 2 
1079 2 57 2 1728 2 
1550 2 868 2 1728 2 
520 2 253 2 1728 2 
1062 2 30 2 
988 2 328 2 
1082 2 1032 2 
1491 2 57 2 
1476 2 1550 2 
125 2 520 2 
1062 2 1675 2 
615 2 520 2 
1332 2 1550 2 
306 2 57 2 
62 2 1082 2 
1062 2 1728 2 767 2 586 2 
113 2 1062 2 1728 2 767 2 586 2 
290 2 1062 2 1728 2 
1062 2 1728 2 884 2 
1526 2 1455 2 1107 2 901 2 
716 2 373 2 1315 2 83 2 
716 2 723 2 373 2 161 2 1315 2 83 2 
988 2 73 2 716 2 400 2 970 2 83 2 
973 2 1087 2 
716 2 400 2 954 2 83 2 
1550 2 692 2 
1766 2 520 2 
1101 2 1082 2 
57 2 1654 2 
520 2 1523 2 57 2 
536 2 520 2 57 2 
275 2 520 2 57 2 
357 2 520 2 57 2 
1173 2 497 2 503 6 1591 2 716 2 43 6 83 2 1568 2 
1062 2 1226 2 
314 2 1448 2 495 4 1025 2 1871 2 1551 2 831 4 375 2 521 2 1669 2 1749 2 75 6 1421 2 1698 2 894 2 940 2 1323 2 1795 2 
1397 2 1728 2 
1668 2 
750 2 147 2 1340 4 278 2 1811 2 403 6 531 2 649 2 1351 6 1695 2 1137 2 776 2 665 8 291 2 168 2 786 2 1702 2 1146 2 1249 4 671 4 552 4 1368 8 796 2 1611 6 188 2 1262 2 1386 2 1047 2 1521 2 575 4 804 2 1527 2 700 2 460 2 922 2 1404 2 71 2 1178 4 581 2 1738 2 218 26 1182 2 1538 2 594 2 932 2 1889 2 936 2 596 2 597 2 350 2 1291 2 939 2 230 2 601 4 1896 2 1076 2 1765 2 1768 2 610 2 1434 2 248 2 1774 4 1776 2 1783 2 1313 2 261 4 1213 2 836 2 1564 2 1566 26 1105 2 378 2 128 4 1326 2 1464 2 1799 6 
750 2 147 2 1340 4 278 2 1811 2 403 6 642 2 531 2 649 2 862 2 1351 6 1695 2 1137 2 776 2 1490 2 665 8 1700 2 291 2 168 2 786 2 1702 2 1146 2 671 1 1249 4 552 4 1368 8 554 2 796 2 1611 6 188 2 1262 2 1386 2 1047 2 1521 2 575 4 804 2 1527 2 922 2 1404 2 71 2 1178 4 581 2 1738 2 218 26 1182 2 1538 2 594 2 932 2 1889 2 936 2 596 2 1545 2 597 2 350 2 1291 2 939 2 230 2 601 4 1896 2 1076 2 1765 2 1768 2 610 2 1434 2 248 2 1774 4 1776 2 1783 2 1313 2 261 4 836 2 1564 2 1566 26 1105 2 378 2 128 6 1326 2 1464 2 1799 6 
1263 2 
743 2 792 2 
1270 2 920 2 805 2 516 4 1274 2 461 8 922 2 750 2 846 2 1873 2 1404 2 706 2 146 2 1685 4 712 10 816 2 714 2 1590 2 403 4 218 12 405 2 1882 2 931 4 1632 4 1412 2 1415 2 285 2 409 2 162 2 412 2 1544 6 867 2 597 2 543 2 1826 8 601 2 1016 2 1074 4 1849 2 1434 2 613 2 1557 2 1036 2 1779 2 311 6 1716 6 433 2 799 4 1262 2 1566 6 571 4 1387 2 445 4 1458 2 446 2 575 2 1325 2 208 2 916 2 1464 2 
1270 2 920 2 805 2 516 4 1274 2 461 8 922 2 750 2 846 2 1873 2 1404 2 706 2 146 2 1685 4 712 10 816 2 714 2 1590 2 403 4 218 12 405 2 281 2 1882 2 931 4 646 2 1632 4 473 2 1412 2 1415 2 285 2 409 2 162 2 412 2 1544 8 867 2 597 2 1826 8 543 2 601 2 1016 2 1074 4 1849 2 1434 2 1306 4 1557 2 1036 2 1779 2 311 6 1716 8 1262 2 799 4 1566 6 571 4 1387 2 445 4 1458 2 446 2 575 2 1325 2 208 2 916 2 1464 2 
1882 2 805 2 1716 2 516 2 799 4 1849 2 846 2 409 2 162 2 1873 2 706 2 571 4 1557 2 1685 2 543 2 1074 2 1779 2 311 2 
1270 2 920 2 805 2 516 4 1274 2 461 4 922 2 750 2 846 2 1873 2 1404 2 706 2 146 2 1685 4 712 6 816 2 714 2 1590 2 403 4 218 12 405 2 1882 2 931 4 1632 4 473 2 1412 2 1415 2 409 2 162 2 412 2 1544 6 867 2 597 2 543 2 1826 4 601 2 1016 2 1074 4 1849 2 1434 2 613 2 1557 2 1036 2 1779 2 311 4 1716 6 433 2 799 4 1262 2 1566 6 571 4 1387 2 445 4 1458 2 446 2 575 2 1325 2 208 2 916 2 1464 2 
1270 2 920 2 805 2 516 4 1274 2 461 4 922 2 750 2 846 2 1873 2 1404 2 706 2 146 2 1685 4 712 6 816 2 714 2 1590 2 403 4 218 12 405 2 1882 2 931 4 1632 4 1412 2 1415 2 409 2 162 2 412 2 1544 6 867 2 597 2 543 2 1826 4 352 2 601 2 1016 2 1074 4 1849 2 1434 2 613 2 1557 2 1036 2 1779 2 311 6 1716 4 433 2 799 4 1262 2 1566 6 571 4 1387 2 445 4 1458 2 446 2 575 2 1325 2 208 2 916 2 1464 2 
1270 2 920 2 805 2 516 4 1274 2 461 4 922 2 750 2 846 2 1873 2 1404 2 706 2 146 2 1685 4 712 6 816 2 714 2 1590 2 403 4 218 12 405 2 1882 2 931 4 1632 4 1412 2 1415 2 285 2 409 2 162 2 412 2 1544 6 867 2 597 2 543 2 1826 8 601 2 1016 2 1074 4 1849 2 1434 2 613 2 1557 2 1036 2 1779 2 311 6 1716 6 433 2 799 4 1262 2 1566 6 571 4 1387 2 445 4 1458 2 446 2 575 2 1325 2 208 2 916 2 1464 2 
1270 2 920 2 805 2 516 4 1274 2 461 8 922 2 750 2 846 2 1873 2 1404 2 706 2 146 2 1685 4 712 10 816 2 714 2 1590 2 403 4 218 12 405 2 1882 2 931 4 1632 4 1412 2 1415 2 285 2 409 2 162 2 412 2 1544 8 867 2 597 2 543 2 1826 8 352 2 601 2 1016 2 1074 4 1849 2 1434 2 613 2 1557 2 1036 2 1779 2 311 8 1716 6 433 2 799 4 1262 2 1566 6 571 4 1387 2 445 4 1458 2 446 2 575 2 1325 2 208 2 916 2 1464 2 
1270 2 920 2 805 2 516 4 1274 2 461 8 922 2 750 2 846 2 1873 2 1404 2 706 2 146 2 1685 4 712 10 816 2 714 2 1590 2 403 4 218 12 405 2 1882 2 931 4 1632 4 1412 2 1415 2 285 2 409 2 162 2 412 2 1544 6 867 2 597 2 543 2 1826 8 601 2 1016 2 1074 4 1849 2 1434 2 613 2 1557 2 1036 2 1779 2 311 6 1716 6 433 2 799 4 1262 2 1566 6 571 4 1387 2 445 4 1458 2 446 2 575 2 1325 2 208 2 916 2 1464 2 
273 6 516 4 750 2 1685 4 994 2 278 2 529 6 1690 1 1004 2 1485 6 774 2 1695 2 776 2 543 2 1016 2 291 2 786 2 1702 2 1019 2 1703 1 1249 4 1029 2 552 4 1031 2 1507 2 554 2 796 2 1036 2 1510 2 311 8 41 1 1716 4 567 4 1262 2 799 4 571 4 1047 2 573 6 1521 2 1267 2 55 2 575 4 1051 2 804 2 1270 2 577 2 1527 2 805 2 67 1 1274 2 579 6 332 1 336 2 816 2 1278 2 1538 2 1286 6 596 2 597 2 1545 2 1544 12 350 2 352 4 601 4 1074 4 354 2 1076 2 1293 6 1765 2 1767 2 1768 2 610 2 612 2 1557 2 1774 2 1779 2 1095 2 1566 24 1105 2 128 6 1111 6 1325 2 1326 2 1799 8 139 6 633 1 846 2 144 7 1339 6 146 2 147 12 857 2 1590 2 403 6 405 2 157 2 649 2 1351 6 409 2 162 2 659 6 412 2 867 2 870 6 1826 2 871 1 665 4 168 2 877 2 1845 2 1368 4 1849 2 1611 6 188 4 1379 2 433 2 436 1 1386 2 1387 4 445 6 914 2 446 2 208 4 916 2 918 2 920 2 701 2 922 2 1404 2 706 2 1873 2 1623 2 712 2 1626 6 714 2 218 46 931 8 1882 2 1632 4 1412 2 474 10 719 8 1415 4 1889 2 935 2 489 2 1641 7 1897 6 1900 2 1653 4 1434 2 248 2 261 4 1450 2 1458 2 1926 2 1217 1 1462 6 1464 2 746 6 
273 6 139 6 516 4 750 2 846 2 1339 6 146 2 147 12 994 2 1685 4 1340 2 278 2 857 2 1590 2 403 6 529 6 405 2 157 2 649 2 1351 6 285 4 1004 2 409 2 162 2 774 2 1485 6 1695 2 659 6 776 2 867 2 412 2 870 6 1826 6 543 2 665 8 291 2 1016 2 168 2 786 2 1019 2 1702 2 877 2 1249 4 1029 2 1845 2 552 4 1031 2 1368 8 1849 2 1507 2 796 2 554 2 1036 2 1510 2 311 8 188 4 1611 6 1379 2 1716 8 567 4 433 2 437 2 799 4 1262 2 1386 4 571 4 1387 4 573 6 1047 2 914 2 445 6 1521 2 446 2 55 2 1267 2 575 4 1051 2 208 4 916 2 804 4 577 2 1270 2 918 2 1527 2 920 2 805 2 1274 2 701 2 579 6 922 2 1873 2 706 2 1404 2 1623 2 336 2 712 2 1626 6 816 2 714 2 1278 2 218 48 1882 2 931 8 1632 4 474 10 1412 2 719 8 1538 2 1415 4 1286 6 1889 4 482 2 935 2 596 2 1544 12 1545 2 597 2 350 2 489 2 601 4 354 2 1897 6 1074 4 1293 6 1076 2 1900 2 1765 2 1767 2 1768 2 1653 4 610 2 1434 2 612 2 1557 2 1774 2 248 2 1779 2 1095 2 1450 2 261 4 1566 26 1105 2 1458 2 1926 2 1111 6 128 6 1325 2 1326 2 1462 6 746 6 1799 8 1464 2 
273 6 139 6 516 4 750 2 846 2 1339 6 146 2 147 12 994 2 1685 4 1340 2 278 2 857 2 1590 2 403 6 529 6 405 2 157 2 649 2 1351 6 285 4 1004 2 409 2 162 2 774 2 1485 6 1695 2 659 6 776 2 867 2 412 2 870 6 1826 6 543 2 665 8 291 2 1016 2 168 2 786 2 1019 2 1702 2 877 2 1249 4 1029 2 1845 2 552 4 1031 2 1368 8 1849 2 1507 2 796 2 554 2 1036 2 1510 2 311 8 188 4 1611 6 1379 2 1716 8 567 4 433 2 437 2 799 4 1262 2 1386 4 571 4 1387 4 573 6 1047 2 914 2 445 6 1521 2 446 2 55 2 1267 2 575 4 1051 2 208 4 916 2 804 4 577 2 1270 2 918 2 1527 2 920 2 805 2 1274 2 701 2 461 4 579 6 922 2 1873 2 706 2 1404 2 1623 2 336 2 712 6 1626 6 816 2 714 2 1278 2 218 48 1882 2 931 8 1632 4 474 10 1412 2 719 8 1538 2 1415 4 1286 6 1889 4 482 2 935 2 596 2 1544 12 1545 2 597 2 350 2 489 2 601 4 354 2 1897 6 1074 4 1293 6 1076 2 1900 2 1765 2 1767 2 1768 2 1653 4 610 2 1434 2 612 2 1557 2 1774 2 248 2 1779 2 1095 2 1450 2 261 4 1566 26 1105 2 1458 2 1926 2 1111 6 128 6 1325 2 1326 2 1462 6 746 6 1799 8 1464 2 
273 6 516 4 1467 2 750 2 1685 4 994 2 278 2 529 12 285 4 1004 2 1485 6 774 2 1695 2 776 4 543 2 1016 2 291 2 786 2 1702 2 1019 2 1249 6 1029 2 552 4 1031 2 1507 2 554 2 796 2 1036 2 1510 2 311 10 1716 10 567 4 1262 2 799 4 571 4 1047 2 573 6 1521 2 55 2 575 4 1051 2 804 4 1270 2 577 2 1527 4 805 2 1274 2 579 6 336 2 816 2 1278 2 1058 2 819 2 1538 2 1286 12 1288 6 87 2 596 4 597 2 1545 2 1544 16 350 2 352 2 601 4 1074 4 354 2 1076 4 1293 6 1758 6 1765 2 1767 2 1768 2 610 2 612 2 1557 2 1774 4 105 2 619 6 1779 2 1095 2 1566 24 1105 2 128 6 1111 6 1325 2 1326 2 133 6 1799 12 139 12 846 2 1339 6 146 2 147 10 1808 6 1340 2 857 2 1590 2 403 6 405 2 157 2 649 2 1351 8 409 2 162 2 659 12 412 2 867 2 870 6 1826 6 665 10 168 2 877 2 169 2 669 2 1845 2 1846 6 1368 10 174 2 1849 2 1611 8 188 4 1379 2 433 2 437 2 1386 4 1387 4 445 6 914 2 446 2 208 4 916 2 918 2 920 2 1172 6 701 2 461 4 922 2 706 2 1404 2 1873 2 1623 2 712 6 1626 6 714 2 218 52 931 8 1882 2 1632 4 473 2 1412 2 474 8 719 8 1415 4 1889 4 482 2 935 2 489 2 724 6 1897 6 1900 2 1653 4 1434 2 248 2 961 6 261 4 1450 2 1458 2 1926 2 1462 12 1464 2 746 12 
1270 2 1274 2 461 4 846 2 706 2 1557 2 1685 4 1036 2 712 4 816 2 1779 2 218 4 311 6 931 2 1632 2 1412 2 1716 6 433 2 285 2 799 2 409 2 162 2 571 2 1387 2 867 2 1544 4 412 2 445 2 446 2 1826 6 543 2 1325 2 1016 2 1074 4 916 2 
750 2 846 2 147 4 1685 4 278 2 403 6 649 2 1351 6 285 2 1598 2 409 2 162 2 1695 2 776 3 867 2 412 2 543 2 1826 6 1494 2 1016 2 1243 2 168 2 786 2 1702 2 1249 4 552 4 554 2 796 2 1036 2 311 6 1611 6 188 2 1716 6 433 2 569 2 799 2 1262 2 571 2 1387 2 1047 2 445 2 1521 2 446 2 1267 2 575 4 916 2 1270 2 1274 2 922 2 706 2 1404 2 712 2 816 2 1533 2 218 28 931 2 1632 2 474 2 1412 2 1538 2 1544 4 597 2 1545 2 350 2 1638 2 601 4 1074 4 1076 3 1765 2 1768 2 610 2 1434 2 733 2 1909 3 1557 2 248 2 1774 3 1779 2 261 4 1566 24 1105 2 1668 2 1458 2 128 6 1325 2 1326 2 1796 2 1464 2 1799 8 
1183 2 816 2 1325 2 
1183 2 816 2 1325 2 
516 4 750 2 147 4 992 2 1685 4 636 2 278 2 1590 2 403 6 405 2 649 2 1351 2 285 4 162 4 538 2 1695 2 539 2 867 2 543 2 1826 6 665 4 291 4 168 2 786 2 1019 2 1702 2 29 2 1843 2 671 2 1845 2 552 4 1368 4 1849 2 554 2 796 2 1036 2 557 2 311 12 1611 2 188 6 1716 12 567 2 568 2 1262 2 799 2 1386 4 571 2 1387 4 1047 2 445 4 1521 2 575 4 449 2 208 2 804 4 577 2 920 2 461 4 922 2 1404 2 706 2 712 6 816 6 218 24 341 2 1882 2 931 4 1632 2 590 2 473 4 474 2 1885 2 1183 2 1538 2 1415 4 1889 4 1545 2 597 2 1544 16 352 4 601 4 1074 4 1293 2 1765 2 1768 2 1653 2 610 2 1434 2 248 2 1774 2 832 2 1205 2 256 2 261 4 836 4 1103 2 1566 16 1565 2 1105 2 1456 4 744 4 128 6 1325 4 1326 2 1464 2 1799 2 
474 2 805 2 567 2 1843 2 1746 2 792 2 568 2 1262 2 847 2 1566 2 935 2 539 2 147 2 1051 2 280 2 218 4 1293 2 
516 4 750 2 147 2 992 4 1685 4 636 2 278 2 1590 2 403 6 405 2 649 2 1351 2 285 4 162 4 1695 2 539 2 1697 2 867 2 543 2 1826 6 665 4 291 4 168 2 786 2 1019 2 1702 2 29 2 1843 2 1845 2 552 4 1368 4 1849 2 1152 2 554 2 796 2 1036 2 897 2 311 12 1611 2 188 6 1716 12 568 2 1262 2 799 2 1386 4 571 2 1387 4 1047 2 445 4 1521 2 575 4 208 4 804 4 577 2 920 2 461 4 922 2 1404 2 706 2 712 6 816 6 714 2 218 24 341 2 1882 2 931 4 1632 2 473 4 1885 2 1183 2 1538 2 1415 4 1889 4 1545 2 597 2 1544 16 352 4 601 4 1074 4 1293 2 1765 2 1768 2 1653 2 610 2 1434 2 248 2 1774 4 832 2 1205 2 256 2 834 2 261 4 836 4 1103 2 1566 16 1565 2 1105 2 1789 2 1456 4 744 4 128 6 1325 4 1326 2 1464 2 1799 2 
1333 2 516 4 750 2 147 4 992 2 1685 4 636 2 278 2 1590 2 403 6 405 2 649 2 1351 2 285 4 162 4 1695 2 539 2 1488 2 867 2 543 2 1826 6 665 4 291 4 168 2 786 2 1019 2 1702 2 29 2 1843 2 671 1 1845 2 552 4 1368 4 1849 2 554 2 796 2 1036 2 896 2 311 12 1611 2 188 6 1716 12 567 2 568 2 1262 2 799 2 1386 4 571 2 1387 4 1047 2 445 4 1521 2 575 4 324 2 208 4 804 4 577 2 920 2 461 4 922 2 1404 2 706 2 712 6 816 6 714 2 218 24 341 2 1882 2 931 4 1632 2 473 4 474 2 1885 2 1183 2 1538 2 1065 2 1415 4 1889 4 1545 2 597 2 1544 16 352 4 601 4 1074 4 1293 2 1765 2 1768 2 1653 2 610 2 1434 2 248 2 1774 2 832 2 1205 2 256 2 261 4 836 4 1103 2 1566 16 1565 2 1105 2 1456 4 744 4 128 6 1325 4 1326 2 1464 2 1799 2 
0 2 982 2 3 2 986 12 8 2 989 2 991 2 993 2 994 2 996 2 997 2 1002 80 1001 2 11 2 1003 6 16 2 1007 2 1008 2 19 2 1010 3 20 14 1011 2 21 2 1014 2 24 2 1020 14 1022 2 1024 2 28 4 1026 10 31 2 1028 2 1029 16 1030 16 1031 2 1033 8 33 2 1034 3 1035 2 35 2 37 2 39 2 1041 2 1040 38 1042 40 46 156 48 2 1046 4 50 3 49 78 52 2 1047 2 1049 38 1052 2 56 2 58 2 59 2 60 38 64 2 1054 2 1055 2 70 4 74 4 75 6 1056 4 1057 2 76 2 77 2 1058 2 78 2 79 13 80 2 1063 2 81 2 1066 38 1067 104 84 4 87 2 88 3 1072 2 89 6 1073 2 1076 46 95 34 96 20 97 2 100 10 1086 2 1088 2 1091 1 1092 2 1093 52 103 1 105 2 108 2 109 14 1096 8 111 2 1098 2 114 2 1099 2 118 1 120 4 123 106 1105 2 1104 2 1106 2 1108 2 1109 3 1110 2 126 2 1112 6 128 1112 129 4 1115 8 1117 4 1118 2 142 38 143 76 1123 2 1124 2 145 4 147 10 151 1 148 2 152 2 154 2 155 48 156 2 1128 2 160 20 1131 2 1132 2 1133 2 1134 2 1135 38 1136 4 1138 2 165 2 166 2 1140 2 1142 14 1143 2 167 2 168 2 169 4 1146 2 171 2 173 2 1148 2 1149 2 1150 38 1151 2 177 2 180 2 179 2 181 2 183 2 184 80 1156 10 188 2 191 2 193 2 1161 2 1164 2 1163 2 196 2 194 2 198 2 200 4 1167 2 1168 2 204 2 206 2 1169 2 209 2 1170 2 1174 2 210 2 1177 2 1179 4 213 38 215 38 218 1174 217 40 1180 2 220 8 219 16 1181 2 221 78 1182 3 1184 2 223 2 222 24 1186 2 225 2 228 14 231 3 232 15 235 2 1195 20 1196 2 237 2 240 80 1199 6 241 112 245 78 1201 2 248 2 1202 2 1203 4 249 3 251 2 1206 2 258 8 1209 2 1210 7 1211 2 260 2 261 402 1212 2 1214 2 1215 2 263 3 265 80 1216 18 269 10 270 2 274 2 1223 2 1225 36 1228 2 276 38 278 2 279 3 282 2 1232 2 283 2 1234 10 1235 2 288 2 289 2 1238 2 1241 3 291 18 295 2 1246 1 296 6 297 1 300 26 1249 12 1248 78 1250 2 301 2 305 2 1253 4 307 2 308 2 1254 2 1255 4 310 2 1257 24 315 2 1259 2 316 4 1260 2 1262 2 319 24 1264 2 1265 12 322 4 1269 2 1271 2 1273 24 1277 3 337 2 338 78 340 38 339 2 1278 8 1281 3 1282 2 346 2 1283 2 1285 2 1287 66 348 2 1290 2 350 2 1291 2 353 6 354 8 355 3 358 2 1296 3 359 2 362 124 1300 3 1301 8 364 2 1305 78 1304 2 366 4 367 3 1308 2 369 2 370 10 372 2 371 4 1310 78 1311 2 1312 38 1313 4 374 4 1316 54 1317 2 1318 2 1320 24 377 4 378 2 379 6 1321 38 381 8 1324 2 382 2 384 2 385 2 1327 34 386 6 1330 4 1331 158 389 2 390 80 1334 2 1335 2 391 20 1337 4 393 2 399 22 1341 66 1345 2 403 10 406 2 1351 32 1352 78 410 2 411 3 1357 22 1359 2 1360 76 1363 4 1362 38 416 80 419 2 420 11 421 22 1368 178 422 80 1369 80 423 2 424 2 1371 2 1372 2 425 3 426 2 427 2 1374 2 430 95 431 3 1375 2 432 2 1379 2 1380 2 1382 2 435 6 438 2 1385 2 440 2 439 2 442 20 443 2 444 2 1391 3 447 2 1392 60 451 2 450 2 452 2 454 2 1394 6 457 2 458 36 459 2 1398 2 1400 38 1401 8 1404 2 464 2 1405 78 465 16 1407 2 1406 2 472 4 1410 2 474 2 1413 2 1414 12 478 3 1416 10 480 2 483 78 485 4 486 2 487 2 490 2 1424 2 491 2 492 2 1425 102 493 2 494 2 1429 112 1431 2 1430 4 1432 2 1436 3 1434 2 1439 4 1440 2 498 2 1444 2 1446 14 502 22 501 2 504 2 1449 2 506 2 1451 22 1452 40 508 2 1459 2 512 2 510 83 513 2 1464 2 1463 2 1465 2 517 3 1467 2 1466 2 1470 2 1471 2 522 2 523 2 1473 2 528 6 530 3 1478 3 532 2 533 2 534 2 535 2 1482 2 537 2 541 22 1487 2 542 2 1492 24 545 8 544 2 1495 2 1500 2 550 2 1501 2 1502 2 552 480 1506 156 1508 3 554 324 1509 4 556 2 558 2 561 2 560 82 564 38 565 2 566 158 1512 2 1513 3 1515 2 574 2 1518 2 1519 2 1521 8 575 8 1527 84 1528 2 580 3 1529 2 1530 2 582 14 1533 2 584 2 589 1 1538 2 594 2 595 2 1540 2 1541 2 596 46 598 9 1545 314 597 2 1546 2 601 8 602 3 1548 2 603 2 1549 24 605 22 607 2 608 2 1552 2 1553 2 1554 2 610 82 1555 2 611 38 612 8 1559 16 618 2 617 2 620 2 622 80 624 2 625 2 1561 3 1562 2 1564 86 1566 966 1571 3 629 156 1574 2 1575 2 632 2 631 2 1576 2 1578 2 1579 2 634 2 1582 2 1586 10 1585 2 1587 10 637 38 1589 2 643 2 1592 2 644 2 1594 3 647 10 649 84 651 2 1595 2 648 4 1596 2 654 8 1598 2 1597 2 655 2 656 2 1600 2 661 2 664 80 665 183 669 2 671 3 672 2 673 2 675 1 1603 6 678 2 1608 10 680 2 679 2 1611 18 681 15 682 16 1613 2 686 20 687 10 1615 2 689 2 693 2 694 2 697 18 1618 4 698 2 1621 4 704 2 705 14 708 78 710 2 1623 2 1624 80 711 2 1629 2 1634 2 717 2 1637 4 1642 80 1643 2 725 2 1647 3 1648 2 1650 234 727 6 1651 2 729 78 1656 2 733 2 734 76 735 2 736 80 1658 2 737 2 739 2 740 2 1662 2 1664 4 1665 6 1666 2 742 18 745 80 1671 2 1674 2 748 2 750 2 1680 4 1677 2 1683 3 755 2 754 3 756 2 758 2 757 78 760 170 761 38 762 60 1686 3 764 36 765 2 1688 2 1689 2 768 2 770 3 1693 78 1694 78 1695 2 775 3 777 12 776 16 778 2 779 1 781 2 783 2 785 3 784 18 786 8 1701 32 1702 2 787 2 788 4 793 2 1707 4 796 2 797 2 1711 2 798 2 1718 2 1719 2 1723 80 802 4 803 61 1730 2 806 2 807 120 811 2 813 2 815 2 1739 2 1740 2 1743 2 818 6 819 2 1747 3 822 2 1748 2 1750 2 823 3 826 2 824 6 1752 2 1754 12 827 38 1757 2 1760 60 1759 12 829 2 1762 9 1764 2 1765 2 1767 2 1768 4 830 2 1769 3 1770 2 1774 110 1775 1 1778 6 833 2 1781 12 1783 2 837 1 839 2 838 4 1794 6 841 2 842 234 1796 2 1798 2 1799 126 843 2 1800 2 1804 158 844 2 845 2 1805 3 849 2 852 2 1810 2 855 2 857 2 860 26 1815 2 1816 38 1818 10 1819 2 1820 2 864 2 1822 2 1821 16 865 38 866 2 869 2 1827 2 872 2 1830 100 1832 4 874 2 1833 4 1834 3 876 2 877 4 1837 78 1840 2 879 2 880 10 881 2 1848 78 883 2 1851 2 886 2 887 2 888 2 889 2 1854 2 1855 6 892 2 895 8 898 1 1858 2 1859 1 902 166 907 2 906 2 905 20 909 32 1862 2 910 2 911 2 912 2 915 3 1866 3 1869 1 1868 3 922 2 923 2 925 558 1874 2 1877 3 928 14 929 2 1881 2 1884 20 1886 6 1887 2 1888 2 932 2 1890 2 933 2 934 2 1892 2 1894 2 1896 2 942 60 1898 12 944 10 949 2 948 4 1899 18 1900 22 1902 6 1903 3 953 2 955 2 956 1 1906 2 1909 2 1911 38 960 2 1913 8 962 2 964 2 965 2 1914 4 1915 2 966 2 1917 34 972 6 1919 80 1921 2 1920 78 1923 4 1924 2 1927 24 1929 2 979 2 1931 2 
355 2 1249 2 880 2 881 2 464 2 1586 4 1774 2 833 2 1711 2 218 2 372 2 1611 2 1689 2 565 2 1351 2 1314 2 1416 2 1566 2 776 2 596 6 350 2 783 2 1076 2 1799 2 
355 2 1249 2 880 2 881 2 464 2 1586 4 1774 2 833 2 1711 2 218 2 372 2 1611 2 1689 2 565 2 1351 2 1314 2 1416 2 1566 2 776 2 596 6 350 2 783 2 1076 2 1799 2 
355 2 1249 2 880 2 881 2 464 2 1586 4 1774 2 833 2 1711 2 218 2 372 2 1611 2 1689 2 565 2 1351 2 1314 2 1416 2 1566 2 776 2 596 6 350 2 783 2 1076 2 1799 2 
1759 2 1195 4 1119 2 1899 4 1273 3 951 2 96 4 881 2 1403 2 1302 2 1603 2 1855 2 1093 2 1774 3 500 2 1509 2 9 2 1257 3 585 4 218 10 861 3 472 2 1884 4 818 4 160 4 1414 2 1003 2 773 2 1320 5 1566 4 777 2 350 2 1112 2 1754 2 1830 2 1425 6 1524 2 1756 2 1799 2 1076 3 
1273 2 1119 2 1403 2 9 2 585 4 528 2 218 10 472 2 861 2 818 4 1884 4 1414 2 160 4 1003 2 773 2 777 2 350 2 1754 2 1830 2 1425 6 1756 2 1076 2 1759 2 1899 4 1195 4 1026 2 96 4 951 2 881 2 1302 2 1603 2 1774 2 1093 2 1855 2 1509 2 500 2 1257 2 1566 4 1320 4 1112 2 452 2 1524 2 1799 2 
1273 2 1119 2 1403 2 9 2 585 4 528 2 218 10 472 2 861 2 818 4 1884 4 1414 2 160 4 1003 2 773 2 777 2 350 2 1754 2 1830 2 1425 6 1756 2 1076 2 1759 2 1899 4 1195 4 1026 2 96 4 951 2 881 2 1302 2 1603 2 1774 2 1093 2 1855 2 1509 2 500 2 1257 2 1566 4 1320 4 1112 2 452 2 1524 2 1799 2 
1273 2 1119 2 1403 2 9 2 585 4 528 2 218 10 472 2 861 2 818 4 1884 4 1414 2 160 4 1003 2 773 2 777 2 350 2 1754 2 1830 2 1425 6 1756 2 1076 2 1759 2 1899 4 1195 4 1026 2 96 4 951 2 881 2 1302 2 1603 2 1774 2 1093 2 1855 2 1509 2 500 2 1257 2 1566 4 1320 4 1112 2 452 2 1524 2 1799 2 
1273 2 1119 2 1403 2 9 2 585 4 528 4 218 10 472 2 861 2 818 4 1884 4 1414 2 160 4 1003 2 773 2 777 2 350 2 1754 2 1830 2 1425 6 1756 2 1076 2 1759 2 1899 4 1195 4 1026 4 96 4 951 2 881 2 1302 2 1603 2 1774 2 1093 2 1855 2 1509 2 500 2 1257 2 1566 4 1320 4 1112 2 452 4 1524 2 1799 2 
202 2 607 2 544 2 1778 2 1747 2 1230 2 
19 2 316 2 661 2 1817 2 1564 2 1747 2 1106 2 
1427 2 139 2 236 2 329 1 394 1 242 2 1905 2 924 2 333 2 990 2 1532 2 524 1 583 1 218 10 1635 2 1717 2 1383 2 287 1 1566 8 201 2 1696 2 658 2 1829 2 130 2 1464 2 1018 2 
1899 12 788 2 1026 4 727 4 1301 2 1806 2 1603 6 1530 2 1855 6 1056 2 1739 2 528 2 218 6 1231 2 472 2 818 4 1414 6 1719 2 1003 6 1822 2 1566 6 1320 16 777 6 1570 2 379 4 1754 6 1112 6 129 2 1797 2 452 2 
967 6 1884 2 1195 2 476 2 317 4 96 2 1566 1 1652 1 1388 2 660 2 1605 2 205 2 1422 2 1709 2 1777 2 547 2 218 1 1618 2 
967 6 1884 2 1195 2 476 2 317 4 96 2 1388 2 660 2 1605 2 1422 2 205 4 1709 2 1777 2 547 4 1618 4 
967 10 1884 2 1195 2 476 2 317 4 96 2 1566 1 1652 1 1388 2 660 2 1605 2 1422 8 205 8 1709 2 1777 6 547 8 218 1 1618 8 
967 2 1884 2 1195 2 476 2 317 2 96 2 1388 2 660 2 1605 2 205 2 1709 2 547 2 1618 2 
1331 16 1804 16 985 2 1805 2 1807 2 1469 4 757 6 760 34 276 4 399 15 637 4 641 2 1002 6 1350 4 1816 4 650 10 649 14 1352 10 770 2 411 2 1693 6 1354 2 1694 10 1135 4 1356 90 663 4 665 28 1834 2 1362 4 1499 2 296 4 416 6 420 11 1501 8 671 4 1248 10 674 4 552 112 1848 24 1506 36 422 6 1369 6 554 58 1604 2 184 24 1256 24 430 22 1378 6 902 50 1040 4 566 16 1513 2 1720 2 1043 2 46 17 1721 2 1723 6 49 10 51 4 1265 7 1727 1 60 4 1394 2 327 18 921 8 1620 4 1400 4 1402 2 1276 12 707 4 925 124 708 4 1624 6 1405 6 338 6 215 4 340 4 218 150 587 8 221 6 1067 42 483 6 85 2 1636 90 86 4 1545 58 826 8 89 4 231 4 1762 7 1647 6 1768 8 240 6 952 2 1650 92 362 12 1299 2 610 14 245 6 729 6 1305 10 958 26 614 10 1203 4 736 6 368 24 616 10 617 8 1914 4 370 8 622 6 1310 6 968 26 261 88 1919 6 1452 2 1319 8 1566 134 123 42 1790 24 265 6 1920 24 1793 4 629 18 745 6 128 248 510 8 842 84 
1395 2 1331 4 1171 2 1804 4 1732 2 578 2 702 2 1807 2 925 6 72 2 398 2 1737 2 1687 2 470 2 216 2 218 46 1409 2 587 2 593 2 650 2 649 2 1352 2 1064 2 1694 2 1418 2 85 2 1237 4 164 2 1545 3 826 2 1423 2 600 2 665 37 1141 4 231 1 1642 6 91 2 417 2 93 2 1647 3 1501 2 1768 2 1248 2 1504 2 671 2 952 2 674 2 552 20 1299 2 1506 2 610 2 1369 2 676 2 1305 2 1908 2 554 3 365 2 614 2 891 2 1309 2 1256 2 368 2 736 2 616 2 617 2 738 2 683 2 566 4 261 20 119 2 435 4 1720 2 1919 2 1043 2 46 2 1514 2 1566 44 1790 2 685 2 265 2 1454 2 49 2 1723 2 629 2 745 2 128 45 1522 4 510 6 272 2 323 2 207 2 695 2 
1331 10 1804 10 985 2 1805 2 1807 2 757 4 760 30 276 4 637 4 399 8 1687 10 1002 4 1816 4 649 6 1352 4 1693 4 1694 4 1135 4 665 14 1242 2 667 4 1834 2 1362 4 296 2 549 4 1365 16 416 4 417 10 1501 2 791 4 1504 2 1248 6 552 44 1506 6 422 4 176 2 1369 4 554 30 1604 2 184 8 902 8 1040 4 566 10 1860 4 1720 2 1043 2 46 10 49 4 1723 4 1520 8 60 4 1732 10 1400 4 925 24 72 2 1624 4 212 8 1405 4 1878 2 338 4 215 4 340 4 1631 32 218 78 221 4 1067 8 85 2 483 4 1545 28 938 2 826 2 600 2 947 8 1762 3 1080 4 1647 2 1768 2 952 2 1649 16 240 4 1650 24 362 14 610 6 245 4 729 4 731 4 1305 4 1203 4 736 4 617 2 1914 4 370 4 1310 4 261 36 971 4 1919 4 1566 70 123 16 265 4 840 8 629 10 269 2 745 4 128 104 510 6 842 24 1673 2 
1331 6 1804 6 1402 2 1807 2 925 8 708 2 760 6 399 5 218 28 649 2 1352 2 770 2 411 2 1694 2 85 2 1545 12 826 2 600 2 89 2 665 14 1499 2 296 2 420 1 1647 2 1501 2 1768 2 671 2 952 2 1248 2 552 14 1506 2 1299 2 610 2 1369 4 1305 2 554 12 1203 2 736 4 617 2 430 9 1914 2 370 4 566 6 261 14 1513 1 119 2 1720 2 1919 4 1043 2 1566 26 46 2 265 4 49 2 1723 4 1265 1 629 2 745 4 128 40 510 4 
1610 2 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 
668 1 1839 1 1071 1 1786 1 1013 1 515 1 

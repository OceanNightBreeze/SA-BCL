#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 1253 1814 (907,1705) (907,1705) 1571 
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_81()Z
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:union([I[I)[I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_107()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_210()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.JavaParser:jj_3_35()Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_70()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:eltsGT([II)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:gte(II)Z
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:jj_2_4(I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.PptSlice3:arity()I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:enabled()Z
jtb.JavaParser:jj_3R_119()Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_137()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3R_125()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:eltwiseLT([I)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_68()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_3R_116()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:gt(II)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_15(I)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_12()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.inv.Invariant:getConfidence()D
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_136()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:eq(FF)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:memberOf(F[D)Z
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_1()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:ne(II)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_2_35(I)Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:memberOf(D[F)Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_104()Z
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:has_typeof()Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:isIOASet()Z
jtb.JavaParser:jj_3_4()Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_15()Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:lexGTE([I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern:numIntArrays()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.diff.Node:Node()V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.JavaParser:jj_3R_96()Z
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.RootNode:RootNode()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_2_12(I)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Ppt:Ppt()V
jtb.JavaParser:jj_3R_102()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.MathMDE:gcd([I)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
jtb.JavaCharStream:FillBuff()V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaCharStream:getEndColumn()I
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_109()Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_164()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:enabled()Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:noDups([I)Z
daikon.ModBitTracker:split(I)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_134()Z
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_80()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_72()Z
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:jj_3_22()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_25(I)Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaCharStream:getEndLine()I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.JavaParser:jj_3R_100()Z
daikon.Quant:lexLTE([I[I)Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_98()Z
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParser:jj_3R_56()Z
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_27()Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.PptName:isEnterPoint()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:is_false()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_99()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.PptSlice2:arity()I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_162()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfo:relate_var()V
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_29()Z
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfo:isPrestate()Z
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_126()Z
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.ProglangType:isString()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(F[F)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.ValueTuple:size()I
jtb.JavaParser:jj_3R_51()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:jj_3R_87()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:slice([III)[I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:getSignature()Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:eq(DD)Z
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:setEqual([I[I)Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_3R_121()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_101()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_108()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:min([I)I
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:isDerived()Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_149()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:jj_3R_60()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
jtb.JavaParser:jj_3R_180()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_106()Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_13()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:enabled()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_13(I)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_76()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_114()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_19()Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:isArray()Z
daikon.Quant:eq(II)Z
daikon.PptName:toString()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.Invariants:Invariants()V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.Quant:pairwiseLT([I[I)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:new_ppt()V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:sorted([I)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
utilMDE.Intern:intern([D)[D
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_10(I)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:sameLength([I[I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_161()Z
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String; | ASSIGN | 2111 | = null
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_2_18(I)Z
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_52()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.ModBitTracker:num_vars()I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_3R_47()Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:hashCode()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
jtb.JavaParser:jj_3_28()Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_25()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.JavaParser:jj_3_14()Z
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:jj_2_36(I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_105()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:jj_3R_75()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_103()Z
utilMDE.LimitedSizeIntSet:size()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_73()Z
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_2_14(I)Z
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_samples()I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.VarInfo:isPointer()Z
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:subsetOf([J[J)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice1:arity()I
utilMDE.Intern:intern([J)[J
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.Invariant:logOn()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.inv.Invariant:logDetail()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap:size()I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.VarInfoName:hasTypeOf()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:eltwiseLTE([I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_54()Z
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:jj_3_20()Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaCharStream:backup(I)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_77()Z
daikon.Debug:logDetail()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.ProglangType:baseIsString()Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_74()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_110()Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:jj_3_18()Z
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:pow_fast(II)I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:jj_3R_115()Z
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_67()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isPointerFileRep()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParser:jj_3_17()Z
daikon.ProglangType:isScalar()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:dimensions()I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:jj_3R_120()Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_58()Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.Debug:logOn()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_124()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3_10()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
jtb.JavaCharStream:BeginToken()C
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeToken:numSpecials()I
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_3()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_122()Z
daikon.Quant:subsetOf([B[I)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
874 2 935 2 694 2 356 2 942 2 1570 2 66 2 1004 2 1574 2 1506 4 74 2 127 2 1323 2 1880 2 1201 2 17 4 1204 2 254 2 969 2 778 2 719 2 1837 2 1340 4 1343 2 265 4 195 2 1670 2 30 2 1150 2 1407 4 977 2 1413 2 445 2 1279 2 1482 2 1426 2 1425 2 1042 4 1100 2 1293 2 107 2 1490 2 162 2 517 2 
265 4 842 4 1741 6 63 2 999 52 1894 47 1218 2 1895 4 1505 15 1447 2 1222 3 1412 6 1506 4 1540 2 885 2 1165 6 212 19 178 4 953 4 771 32 892 32 1908 5 479 6 706 15 1652 4 1455 6 801 6 1583 22 19 32 895 2 1910 2 1259 15 744 4 1389 4 1211 4 1429 4 1046 6 438 8 289 15 
517 2 830 2 1786 2 
1036 22 1529 2 1080 2 626 2 1854 2 208 2 779 2 735 2 619 2 1591 2 1872 2 663 2 1862 10 1323 2 
1365 4 265 2 1161 2 1482 2 1742 2 1506 2 1379 2 750 2 198 2 
1603 2 220 2 1464 2 45 6 255 2 330 2 1734 2 1109 6 1771 2 244 6 317 2 
1905 2 265 2 816 2 524 6 1794 6 1743 2 155 2 1700 6 1735 4 1506 2 1250 6 258 2 886 4 
1741 10 842 6 265 6 669 8 1500 2 5 2 999 28 63 4 875 4 1894 26 1636 4 880 2 1447 2 1505 10 1506 6 127 2 212 8 771 16 892 16 706 10 801 8 1583 12 102 4 19 16 1763 8 1259 10 283 2 1835 2 1429 6 289 10 
1472 4 474 6 
1809 2 
842 2 1741 4 63 2 999 6 1145 2 1894 4 1505 2 173 2 1754 2 212 2 1452 2 771 2 1197 2 892 2 706 2 1583 2 19 2 1259 2 404 2 632 2 289 2 639 2 1461 2 
771 8 892 8 479 6 875 2 706 4 999 16 1583 4 1894 12 19 8 1895 4 1259 4 1505 4 1556 2 1334 2 744 4 1165 6 289 4 
60 4 164 4 28 2 4 62 694 4 1774 2 1671 2 1117 2 92 4 727 2 417 4 1503 4 1246 14 795 4 304 4 676 2 1786 2 1088 2 508 2 1852 2 1168 4 215 2 1879 2 1759 10 1067 10 802 2 1040 2 830 6 1619 2 1912 2 969 2 1236 4 517 8 461 2 1298 2 439 2 1340 4 488 2 1561 4 1213 4 
1215 2 1809 2 65 2 1846 2 1188 2 701 2 861 2 1622 2 440 2 23 2 
1506 2 1495 2 
1200 2 1506 4 958 2 
352 8 691 2 690 2 936 2 1566 2 1444 2 1808 2 817 2 1310 4 940 2 1572 2 1813 2 820 16 1056 3 237 1 585 2 121 2 698 2 1057 2 947 2 11 2 1694 2 821 3 243 1 1191 4 1577 2 128 2 475 2 1822 2 14 1 1699 4 708 2 1069 2 252 2 966 1 1833 2 838 2 1338 6 138 1 265 32 1710 2 724 1 266 2 1471 2 1843 2 1221 2 1717 3 850 2 501 1 387 2 502 6 1605 32 274 2 275 2 1353 3 512 2 511 1 47 1 862 1 742 2 1736 2 743 3 1104 16 868 2 1234 1 745 2 1857 2 871 2 286 2 288 2 59 2 753 1 1865 2 1866 2 1632 1 1115 2 1372 8 64 2 168 2 1504 32 644 2 303 2 68 4 1506 34 1755 2 1379 2 426 3 1120 2 428 2 1758 2 893 2 311 2 1518 2 182 2 181 2 1131 4 1519 2 435 4 776 2 320 2 1660 4 660 2 189 1 1665 2 540 3 1265 1 1398 2 787 2 545 3 546 2 1401 2 1147 24 1672 6 1151 2 790 2 1535 2 201 2 1155 3 1157 24 206 3 97 12 209 2 1163 16 1782 2 100 1 1167 2 796 4 1789 2 340 2 1909 2 1038 2 1548 3 1791 2 804 2 1680 8 1911 16 805 2 1795 2 1172 1 1796 5 1292 2 686 12 1684 6 1175 2 1559 2 1686 2 225 2 1302 2 1180 3 
416 2 
1 2 1442 24 938 2 1443 2 470 2 7 2 945 26 1448 6 8 72 948 26 951 14 1451 286 12 188 15 2 16 2 957 24 482 4 21 2 967 4 968 2 971 2 487 10 26 2 973 6 974 6 975 2 495 2 38 2 498 2 39 4 500 2 40 2 503 2 1474 4 41 120 504 338 42 2 982 4 43 2 984 20 509 98 1480 26 510 24 1481 2 988 12 1484 18 990 2 514 38 515 2 49 6 51 6 516 4 1489 4 53 2 995 10 997 4 518 6 1492 6 1493 4 519 2 520 76 1494 2 1498 58 62 8 522 4 523 98 1000 6 1501 192 1003 2 525 174 528 2 1005 2 530 26 529 2 1506 8 1507 6 1508 2 1008 2 73 2 532 6 1012 8 531 2 533 4 76 2 77 2 1510 2 80 2 536 16 1517 2 85 2 1524 6 1020 4 1523 90 1022 10 88 18 1527 2 1530 4 1028 6 550 6 96 4 1029 54 552 14 1030 6 1536 2 99 24 553 6 558 2 1039 42 1550 2 1551 2 1555 2 109 4 566 22 1044 24 110 2 569 2 1558 2 1048 26 111 2 1049 192 572 6 114 18 578 2 575 2 576 2 1050 22 1568 6 115 86 581 2 1053 66 1571 2 583 4 1058 2 1060 2 1575 2 129 2 1580 2 1064 2 593 4 1586 24 1068 2 595 2 599 78 1589 4 603 174 604 6 1070 2 1592 4 1074 2 1593 2 1078 2 612 2 1601 6 1082 2 615 4 1602 42 147 12 618 6 150 6 1086 2 620 4 621 4 1087 4 1609 2 152 26 1616 2 1617 2 1094 172 153 6 625 2 1620 26 630 6 1098 120 1101 6 1099 16 161 6 1106 2 163 2 634 26 633 2 1108 14 635 10 1629 2 165 6 1633 2 1116 4 1637 2 1638 100 169 2 172 6 1644 2 174 174 175 2 648 2 647 2 1123 2 649 4 650 2 1127 6 1648 4 180 156 1128 26 1650 2 1653 4 655 2 1654 4 656 22 1130 2 183 4 1132 4 1133 2 1658 24 186 14 661 12 664 174 665 174 192 156 1142 6 668 2 1144 6 670 4 671 2 673 10 200 6 202 4 203 2 1674 6 1159 108 1160 2 1164 12 677 2 679 12 680 24 214 22 1170 20 1681 6 1682 36 219 26 687 6 1173 2 221 6 1685 6 1176 2 689 4 226 2 1181 2 231 4 1184 2 238 2 699 2 1192 2 703 2 245 2 1696 46 1194 2 1196 12 246 2 705 8 707 44 248 4 710 4 1203 2 712 2 713 2 1702 6 1205 2 714 2 1703 58 1704 2 1705 2 1210 4 1706 4 257 2 723 2 1709 100 265 8 1216 6 268 10 728 66 729 4 1220 10 731 6 270 2 271 26 1719 4 1721 192 1727 2 737 6 1728 6 279 4 278 2 1227 6 282 2 1232 6 1737 2 1237 188 751 2 752 4 754 14 755 8 761 2 1745 2 1243 2 1746 2 1748 2 1245 6 305 4 769 2 770 6 307 2 1757 2 1251 6 1252 4 1253 2 309 100 1256 306 1761 50 315 2 1764 2 1765 16 1767 6 1770 2 321 2 782 4 322 4 1263 2 784 4 1264 2 783 8 1267 2 1268 200 788 4 328 6 1776 12 1271 10 332 2 1273 386 334 16 1278 4 336 6 335 4 1280 2 1281 48 339 2 1787 2 798 6 1788 82 1283 6 1284 4 1792 20 1286 2 341 6 1296 2 1800 6 1803 2 1299 4 346 2 1300 16 348 2 1804 26 1805 2 812 6 1305 6 351 24 1306 6 815 6 1308 174 1307 2 819 2 1314 6 360 10 1814 2 1318 2 362 2 1817 4 1818 2 1819 386 365 4 1325 2 823 60 824 4 1824 6 368 2 827 6 1329 6 1827 2 829 2 1829 10 832 6 1330 6 1832 6 1331 54 834 334 1332 510 1333 2 835 2 1834 2 839 2 1339 2 1839 10 377 2 1840 2 841 2 378 2 845 16 846 4 1349 2 1348 14 848 62 849 6 385 12 386 2 856 306 1351 4 1848 2 1352 2 394 4 395 6 1356 6 1357 2 402 44 1856 2 1857 2 869 2 1861 10 1364 2 1864 174 1366 6 1867 6 414 142 1369 2 877 192 1370 2 879 4 419 2 1375 50 421 10 425 4 1380 42 888 6 1381 38 1383 2 891 2 432 6 1385 174 1384 2 1876 2 1877 4 1878 2 894 4 433 22 434 2 1890 50 1390 2 1396 4 902 14 903 2 1397 42 906 10 905 2 1893 16 907 2 1404 4 1405 2 441 100 909 8 444 6 1897 12 446 6 448 4 1902 2 1906 2 918 166 922 4 1427 306 1914 26 1430 2 930 2 462 16 1433 4 
717 2 1105 2 978 2 1037 2 517 2 1760 2 102 2 1374 1 
1105 2 937 2 1760 2 
106 2 1105 2 1760 2 
343 2 1247 2 828 2 
1105 2 1760 2 
343 2 899 2 
813 2 1105 2 
343 2 1247 2 766 2 
113 2 1247 2 1153 2 
985 2 1247 2 251 2 
13 2 1247 2 314 2 
1247 2 1445 2 980 2 
343 2 1118 2 
933 2 1105 2 
113 2 196 2 
1470 2 251 2 
314 2 921 2 
1697 2 1445 2 
343 2 1533 2 
1445 2 1190 2 
780 2 314 2 
1248 2 251 2 
113 2 1713 2 
343 2 1247 2 766 2 1065 2 
343 2 1247 2 766 2 1065 2 1392 2 
343 2 1247 2 1139 2 
343 2 1581 2 1247 2 
1595 2 1547 2 223 2 451 2 
293 2 294 2 952 2 1036 6 535 2 1565 2 934 4 1198 2 296 2 357 2 379 2 117 2 95 2 358 2 865 2 1414 4 285 2 1915 2 
1247 2 1320 2 
717 2 454 2 764 2 517 2 
717 2 454 2 764 2 1037 2 517 2 31 2 
717 2 1105 2 517 2 1760 2 102 2 992 2 
1574 2 589 2 
717 2 928 2 517 2 102 2 
103 2 314 2 
1738 2 1445 2 
113 2 1244 2 
393 2 251 2 
586 2 1445 2 251 2 
672 2 1445 2 251 2 
134 2 1445 2 251 2 
389 2 1445 2 251 2 
1217 6 422 2 10 2 1228 6 281 2 717 2 517 2 136 2 
343 2 366 2 
1435 2 1105 2 1247 2 
1105 2 1061 2 
1471 2 
936 2 1566 2 1808 2 1310 4 116 2 820 6 120 2 585 2 121 4 471 4 587 2 947 2 1816 2 1694 2 1191 4 1577 2 475 2 131 2 1699 2 708 2 250 2 1069 2 1833 2 838 2 256 2 1338 2 265 26 724 4 266 2 1221 2 502 6 1605 6 274 2 742 2 996 2 1857 2 871 2 1239 2 1865 2 1632 2 413 2 1372 2 1504 4 644 2 68 4 645 2 1506 26 1755 2 1379 2 1758 6 774 4 893 2 182 2 1131 4 1386 2 1519 2 435 2 1660 2 660 2 191 2 546 2 1672 2 790 2 201 2 1535 2 97 8 100 2 1167 2 1789 2 559 2 1909 2 686 8 1428 2 1684 4 1175 2 345 2 
936 2 1566 2 1808 2 1310 4 820 6 585 2 121 4 471 4 587 2 947 2 1816 2 1694 2 1191 4 1577 2 475 2 131 2 1699 2 708 2 250 2 1069 2 252 2 1833 2 838 2 256 2 1338 2 265 26 724 1 266 2 1221 2 502 6 1605 6 274 2 981 2 512 2 991 2 742 2 1857 2 286 2 871 2 1239 2 1865 2 1632 2 413 2 1372 2 1504 4 644 2 68 4 645 2 1506 26 1755 2 1379 2 1758 6 774 4 893 2 182 2 1131 4 1386 2 1519 2 435 2 1660 2 660 2 191 2 325 2 546 2 1672 2 790 2 201 2 1535 2 97 8 100 2 1167 2 1789 2 559 2 1909 2 686 8 1428 2 1684 6 1175 2 345 2 
354 2 
814 2 1399 2 
429 4 350 2 1687 2 229 2 1907 2 45 2 989 2 1679 2 1656 2 300 2 458 4 70 2 255 2 1723 2 722 2 1177 2 1109 2 1771 2 
350 2 1687 2 229 2 579 4 1811 2 644 2 300 2 1315 2 585 2 68 2 70 4 947 2 1506 12 1694 2 244 6 429 4 369 2 1762 2 1257 2 1131 2 1519 2 961 2 1656 2 602 2 255 4 722 2 485 2 1771 4 1463 2 139 2 263 2 265 6 1841 2 330 2 197 4 1600 6 1027 2 1154 2 144 4 34 2 1603 2 1715 4 1723 2 734 2 502 4 45 4 1907 2 989 2 1618 2 1679 2 1853 4 742 2 458 4 870 2 1857 2 407 2 1177 2 1109 6 1860 2 349 2 
350 2 1687 2 229 2 579 4 1811 2 644 2 300 2 1315 2 585 2 68 2 70 4 947 2 1506 12 1694 2 244 6 429 4 369 2 1762 2 1257 2 1131 2 1519 2 961 2 1656 2 602 2 255 4 722 2 485 2 1771 4 1463 2 139 2 263 2 265 6 1841 2 197 4 1600 6 1027 2 1154 2 144 4 34 2 1603 2 1715 4 1723 2 734 2 502 4 45 6 1907 2 989 2 1618 2 1679 2 1734 2 1853 4 742 2 458 4 870 2 1857 2 407 2 1177 2 1109 4 1860 2 349 2 
350 2 1687 2 229 2 579 4 1811 2 644 2 300 2 1315 2 585 2 68 2 70 4 947 2 1506 12 1694 2 244 6 429 4 369 2 1762 2 1257 2 1131 2 1519 2 961 2 1656 2 602 2 255 4 722 2 485 2 1771 4 1463 2 139 2 263 2 265 6 1841 2 197 8 1600 6 1027 2 1154 2 144 4 34 2 1603 2 1715 4 1723 2 734 2 502 4 45 6 1907 2 989 2 1618 2 1679 2 1853 4 742 2 220 2 458 4 870 2 1857 2 407 2 1177 2 1109 6 1860 2 349 2 
350 2 1687 2 229 2 579 8 1811 2 644 2 300 2 1315 2 585 2 68 2 70 4 947 2 1506 12 1694 2 244 8 429 4 369 2 1762 2 1257 2 1131 2 1519 2 961 2 1656 2 602 2 255 4 722 2 485 2 1771 4 1463 2 139 2 263 2 265 6 1841 2 197 8 1600 10 1027 2 1154 2 144 4 34 2 1603 2 1715 4 1723 2 734 2 502 4 45 8 1907 2 989 2 1618 2 1679 2 1734 2 1853 4 742 2 220 2 458 4 870 2 1857 2 407 2 1177 2 1109 6 1860 2 349 2 
350 2 1687 2 229 2 579 8 1811 2 644 2 300 2 1315 2 585 2 68 2 70 4 947 2 1506 12 1694 2 244 6 429 4 369 2 1762 2 1257 2 1131 2 1519 2 961 2 1656 2 602 2 255 4 722 2 485 2 1771 4 1463 2 139 2 263 2 265 6 1841 2 197 8 1600 10 1027 2 1154 2 144 4 34 2 1603 2 1715 4 1723 2 734 2 502 4 45 6 1907 2 989 2 1618 2 1679 2 1853 4 742 2 220 2 458 4 870 2 1857 2 407 2 1177 2 1109 6 1860 2 349 2 
1687 2 1438 10 936 2 229 2 234 2 1446 2 471 4 947 2 1694 2 1191 4 244 12 954 6 1699 2 708 2 250 2 958 6 961 2 963 2 252 2 255 4 722 2 970 2 485 2 256 2 1460 1 489 6 1463 2 1462 6 263 2 265 24 494 1 1715 8 1221 2 34 2 497 2 499 2 502 6 1723 2 734 2 506 6 277 2 45 8 280 6 1733 7 989 2 1734 4 742 2 1488 2 284 6 286 2 1495 6 298 2 1504 2 300 2 301 1 527 4 68 4 1751 2 70 4 1506 46 1755 2 1511 2 79 6 1758 6 1514 6 310 2 1017 2 1762 2 1257 2 1519 2 1021 1 1771 4 785 2 323 2 1531 1 790 2 1027 2 1535 2 1277 2 97 4 1783 1 1033 2 1789 2 344 2 345 2 349 2 1303 2 350 2 1564 2 1566 2 1808 2 1310 4 1811 2 820 6 585 2 1062 8 588 2 1577 2 1578 2 369 2 602 2 1833 12 836 6 1075 7 1338 2 840 2 139 2 1841 4 1600 2 144 4 382 1 1083 2 1603 4 1605 8 1607 2 1092 4 1853 6 1618 2 866 1 1358 2 1857 2 407 2 870 4 871 2 1109 4 636 6 1361 6 1860 2 1865 2 411 2 1372 2 416 6 644 2 1379 2 429 4 890 6 657 6 1131 4 1656 2 435 2 437 2 1660 2 660 2 1402 1 1672 2 197 2 201 2 1154 2 1156 2 1162 2 1907 2 1679 2 457 2 686 4 458 4 1428 4 1684 6 460 2 1175 2 1177 2 
350 2 1564 2 1438 10 1687 2 229 2 936 2 1566 2 1808 2 234 2 1446 2 1310 4 1811 2 820 6 585 2 121 2 471 4 947 2 588 2 1062 8 1694 2 1577 2 1191 4 1578 2 244 12 954 6 369 2 1699 4 250 2 708 2 958 6 961 2 963 2 252 2 602 2 1833 12 255 4 836 6 970 2 722 2 485 2 256 2 1338 2 489 6 840 2 1462 6 1463 2 139 2 263 2 265 26 1841 4 1600 2 144 4 1083 2 34 2 1221 2 1715 8 1603 4 497 2 499 2 1605 8 734 2 1723 2 502 6 1607 2 506 6 277 2 280 6 45 8 1092 4 989 2 1618 2 1853 6 742 2 1488 2 1358 2 284 6 870 4 407 2 1857 2 871 2 286 2 636 6 1109 8 1361 6 58 2 1495 6 1860 2 1865 2 411 2 1372 2 298 2 416 6 1504 2 300 2 644 2 527 4 68 4 1751 2 70 4 1506 48 1755 2 1379 2 429 4 1511 2 890 6 79 6 1514 6 1758 6 1017 2 310 2 1762 2 1257 2 657 6 1131 4 1519 2 1656 2 435 4 437 2 1660 4 660 2 1771 4 785 2 323 2 1672 2 197 6 790 2 1027 2 675 2 1535 2 1154 2 201 2 1156 2 1277 2 97 8 1162 2 1033 2 1789 2 1907 2 1679 2 457 2 686 8 220 4 1428 4 458 4 344 2 1684 6 460 2 1175 2 1177 2 345 2 1303 2 349 2 
350 2 1564 2 1438 10 1687 2 229 2 936 2 579 4 1566 2 1808 2 234 2 1446 2 1310 4 1811 2 820 6 585 2 121 2 471 4 947 2 588 2 1062 8 1694 2 1577 2 1191 4 1578 2 244 12 954 6 369 2 1699 4 250 2 708 2 958 6 961 2 963 2 252 2 602 2 1833 12 255 4 836 6 970 2 722 2 485 2 256 2 1338 2 489 6 840 2 1462 6 1463 2 139 2 263 2 265 26 1841 4 1600 6 144 4 1083 2 34 2 1715 8 1603 4 1221 2 497 2 499 2 1605 8 734 2 1723 2 502 6 1607 2 506 6 277 2 280 6 45 8 1092 4 989 2 1618 2 1853 6 742 2 1488 2 1358 2 284 6 870 4 407 2 1857 2 871 2 286 2 636 6 1109 8 1361 6 58 2 1495 6 1860 2 1865 2 411 2 1372 2 298 2 416 6 1504 2 300 2 644 2 527 4 68 4 1751 2 70 4 1506 48 1755 2 1379 2 429 4 1511 2 890 6 79 6 1514 6 1758 6 1017 2 310 2 1762 2 1257 2 657 6 1131 4 1519 2 1656 2 435 4 437 2 1660 4 660 2 1771 4 785 2 323 2 1672 2 197 6 790 2 1027 2 675 2 1535 2 1154 2 201 2 1156 2 1277 2 97 8 1162 2 1033 2 1789 2 1907 2 1679 2 457 2 686 8 220 4 1428 4 458 4 344 2 1684 6 460 2 1175 2 1177 2 345 2 1303 2 349 2 
1687 2 1438 8 936 2 229 2 1446 2 1186 2 471 6 947 2 239 6 1694 2 1191 4 244 16 954 12 704 6 1699 4 708 2 250 4 709 6 958 12 961 2 963 2 252 2 255 4 722 2 970 2 485 2 256 2 486 2 489 6 1463 2 1462 6 263 2 265 24 730 2 1221 2 1715 8 34 2 497 2 499 2 502 6 1723 2 734 2 506 12 277 2 45 10 280 6 989 2 1734 2 742 2 1488 2 284 12 286 2 747 2 58 2 1495 12 298 2 1504 4 300 2 527 4 68 4 1751 2 70 4 1506 52 1755 2 1511 2 79 6 1758 8 1514 6 310 2 1017 2 1762 2 1257 2 1519 2 1771 4 785 2 542 6 323 2 330 2 790 2 1027 2 792 6 1535 2 1277 2 97 10 1033 2 1789 2 560 2 344 2 345 2 349 2 1303 2 350 2 1564 2 1566 2 579 4 1051 2 1808 2 1310 4 818 2 1811 2 820 8 585 2 121 2 588 2 1062 8 1577 2 1578 2 369 2 602 2 1833 10 836 6 1338 4 840 2 139 2 1841 4 1600 6 144 4 145 6 1083 2 1603 4 1605 12 1607 2 1092 4 1853 6 1618 2 1095 6 1358 2 407 2 1857 2 870 4 871 2 1109 10 636 6 1361 6 1860 2 1865 2 411 2 1372 4 416 12 644 2 1379 2 429 4 890 6 889 6 1651 6 657 6 1131 4 1656 2 435 4 437 2 1660 4 660 2 1672 4 197 6 675 2 201 2 1154 2 1156 2 1162 2 1907 2 1679 2 683 2 457 2 220 4 686 10 458 4 1428 4 1684 6 460 2 1175 2 1177 2 
350 2 1463 2 1687 2 579 4 1600 4 197 6 1154 2 1811 2 144 2 300 2 1715 2 1603 2 1506 4 734 2 1723 2 244 4 429 2 1907 2 45 6 369 2 1853 2 1762 2 1257 2 961 2 1656 2 220 2 458 2 255 4 407 2 722 2 1109 6 485 2 1860 2 1771 4 349 2 
350 2 1438 2 1687 2 936 2 1566 2 1808 2 234 2 817 2 1310 4 1811 2 820 6 585 2 471 4 947 2 1694 2 1191 4 1577 2 244 4 1324 3 369 2 708 2 961 2 252 2 255 4 1833 4 722 2 485 2 256 2 1338 3 139 2 1463 2 265 24 1600 2 1471 2 144 2 1715 2 1603 2 1221 2 734 2 1723 2 502 6 1605 8 1613 2 45 6 1853 2 742 2 1736 2 868 2 1857 2 407 2 286 2 1109 6 1860 2 1363 2 1865 2 1504 3 644 2 300 2 68 4 1506 28 1007 2 1755 2 1379 2 429 2 1126 2 1758 6 1762 2 1257 2 1131 4 1519 2 1656 2 660 2 1771 4 1672 3 197 6 790 2 1154 2 201 2 1535 2 1789 2 1907 2 220 2 458 2 1428 2 1684 6 1175 2 810 2 345 2 349 2 
350 2 1687 2 229 2 579 8 1811 2 644 2 300 2 1315 2 585 2 68 2 70 4 947 2 1506 12 1694 2 244 6 429 4 369 2 1762 2 1257 2 1131 2 1519 2 961 2 1656 2 602 2 255 4 722 2 485 2 1771 4 1463 2 139 2 263 2 265 6 1841 2 197 8 1600 10 1027 2 1154 2 144 4 34 2 1603 2 1715 4 1723 2 734 2 502 4 45 6 1907 2 989 2 1618 2 1679 2 1853 4 742 2 220 2 458 4 870 2 1857 2 407 2 1177 2 1109 6 1860 2 349 2 
463 4 350 2 1687 2 229 2 579 8 1811 2 644 2 300 2 68 2 585 2 70 4 947 2 1506 12 1694 2 244 8 429 4 480 2 369 2 1762 2 312 2 1257 2 1131 2 1519 2 961 2 1656 2 602 2 255 4 722 2 485 2 1771 4 1463 2 139 2 263 2 265 6 1841 2 330 2 197 8 1600 10 1027 2 1154 2 144 4 34 2 1603 2 1715 4 1723 2 502 4 1907 2 45 6 989 2 1618 2 1679 2 1853 4 742 2 220 2 458 4 870 2 1857 2 407 2 1177 2 1109 8 1860 2 349 2 
90 2 485 2 349 2 
90 2 485 2 349 2 
350 2 1438 2 1687 4 229 2 936 2 466 4 1566 2 579 4 1808 2 1310 4 820 2 585 2 1450 2 947 2 1694 2 1189 2 1191 4 1577 2 244 16 131 4 369 2 1699 4 708 2 959 2 252 2 133 2 1833 4 255 4 1336 4 485 4 256 2 263 2 265 16 724 2 1841 4 1465 2 1600 6 144 2 34 2 1221 2 1603 4 1715 4 502 6 1605 2 1723 2 1611 2 280 2 45 12 1092 2 1090 2 989 2 1853 4 1734 4 742 2 1621 2 405 2 870 2 1857 2 871 4 286 2 1109 12 1865 2 411 2 1641 2 1504 2 644 2 527 2 68 4 70 4 1506 24 1755 2 1379 2 429 2 1758 2 1131 4 1882 2 1519 2 1134 2 435 4 437 2 1766 2 1660 4 660 2 1771 4 785 2 89 2 90 2 330 4 197 6 790 2 1027 2 201 2 1154 2 97 4 1899 2 1789 2 923 2 686 4 220 4 1428 6 458 2 1684 6 1175 2 345 2 571 2 349 6 
89 2 1438 2 814 2 265 2 280 2 1465 2 1679 2 959 2 143 2 457 2 527 2 1833 2 947 2 588 2 1506 4 1626 2 539 2 
350 2 1687 4 229 2 936 2 466 4 1566 2 579 4 1808 2 1310 4 1054 2 820 2 585 2 1450 2 947 2 1694 2 1191 4 1577 2 244 16 131 4 369 2 1699 4 708 2 959 2 252 2 602 2 133 2 1833 2 255 4 1336 4 485 4 256 2 263 2 265 16 1465 2 1841 4 1600 6 144 2 34 2 1715 4 1221 2 1603 4 502 6 1605 2 1723 2 280 2 45 12 1092 2 1090 2 989 2 1853 4 1734 4 742 2 1621 2 405 2 870 4 1857 2 871 4 286 2 1109 12 1865 2 411 2 1504 4 644 2 68 4 70 4 1506 24 1755 2 1379 2 1013 2 429 2 1758 2 1131 4 1882 2 1519 2 1134 2 435 4 437 2 1660 4 86 2 660 2 1771 4 785 2 89 2 90 2 667 2 330 4 197 6 790 2 1027 2 201 2 1154 2 97 4 1031 2 1899 2 1789 2 923 4 686 4 220 4 1428 6 458 2 1684 6 1175 2 345 2 571 2 349 6 
350 2 1438 2 1687 4 229 2 936 2 466 4 1566 2 579 4 1808 2 1310 4 820 2 585 2 1450 2 947 2 1694 2 1191 4 1577 2 244 16 131 4 369 2 1699 4 708 2 959 2 252 2 602 2 133 2 1833 4 255 4 1336 4 485 4 256 2 263 2 265 16 724 1 1841 4 1465 2 1600 6 144 2 34 2 1221 2 1603 4 1715 4 502 6 1605 2 1723 2 280 2 45 12 1092 2 1090 2 989 2 1853 4 1734 4 742 2 1621 2 405 2 870 4 1857 2 871 4 286 2 1109 12 1865 2 411 2 1504 2 644 2 527 2 68 4 70 4 1506 24 1755 2 1379 2 429 2 1758 2 1131 4 1882 2 1519 2 1134 2 896 2 435 4 437 2 1660 4 660 2 1771 4 785 2 89 2 90 2 1773 2 1146 2 330 4 197 6 790 2 199 2 1027 2 201 2 1154 2 97 4 1899 2 1789 2 923 2 686 4 220 4 1428 6 458 2 459 2 1684 6 1175 2 345 2 571 2 349 6 
0 2 2 3 936 2 6 3 939 112 941 112 943 3 944 2 946 2 9 3 947 2 949 2 950 4 11 2 956 2 19 12 960 2 962 2 964 2 20 2 963 8 965 78 970 2 24 2 25 4 972 158 27 2 29 2 32 4 976 3 33 2 35 3 37 2 979 38 983 38 46 2 986 20 987 2 993 2 50 2 994 558 52 2 54 3 55 2 56 2 57 2 998 2 59 2 999 24 1001 10 64 2 1002 2 67 2 68 8 1006 2 1007 2 1009 2 1010 4 1011 2 75 2 1015 2 78 78 1016 10 81 3 82 2 1017 8 83 80 84 2 1018 2 1019 158 87 2 1023 2 1024 6 91 3 1025 2 1026 2 94 2 97 183 98 20 1032 2 100 3 1033 2 1034 2 1035 2 1036 6 1038 2 101 2 104 2 105 40 1041 2 107 2 1045 234 112 10 1051 2 1052 2 118 2 119 2 1056 2 1057 2 1059 80 123 2 124 2 126 22 125 54 128 2 130 2 1066 2 132 2 135 2 1071 2 1073 4 137 3 1076 2 1077 82 1079 83 140 2 141 8 142 2 1083 2 146 2 1084 2 148 38 1085 2 151 2 1091 2 154 2 156 60 1096 2 157 3 158 2 1097 2 159 10 1102 38 1104 100 160 2 1110 2 1111 2 1112 2 1113 2 164 2 166 2 167 78 168 16 170 2 171 2 1119 2 176 2 1120 2 1121 170 177 2 1124 78 178 4 1125 3 179 38 1129 2 181 2 1131 8 184 2 185 80 187 38 1137 2 188 8 1138 26 189 15 190 2 1140 4 191 2 1141 2 194 2 1147 15 1148 3 1149 24 1151 2 1152 2 201 4 1155 2 1157 61 204 34 205 4 1158 2 1162 2 1163 52 1165 6 1166 4 212 6 1171 2 1169 38 216 3 1172 1 217 2 1174 2 1175 2 222 156 224 2 1178 2 225 2 1179 3 1180 3 228 2 227 106 230 3 232 2 233 80 1182 22 1183 2 235 2 236 2 1185 36 1187 2 1186 2 240 2 241 2 242 2 243 1 1191 402 1193 2 1195 2 247 2 1199 78 1202 234 249 60 250 46 252 318 1206 2 1207 2 253 80 1208 2 256 2 1212 12 260 3 1214 76 261 2 262 4 264 78 265 966 267 3 1219 2 269 76 1221 2 272 2 273 8 1223 2 1224 2 275 2 1225 2 276 2 277 4 1229 38 1230 2 1231 3 1233 38 1236 2 286 328 288 2 1238 4 289 6 1239 2 291 2 292 80 1240 34 1241 4 1242 2 299 4 303 2 302 3 1249 2 304 2 308 38 1254 2 313 3 1258 8 1259 6 319 60 1260 3 1261 20 1262 2 1266 104 324 4 1269 2 326 2 327 2 329 8 1270 2 331 2 1272 2 1274 2 1275 2 333 2 337 8 338 2 340 2 1282 16 1288 2 1289 2 1290 2 342 3 1292 2 1294 2 1295 80 1297 2 347 48 1301 2 1302 2 1304 2 352 14 353 2 355 2 1310 480 1311 3 1313 78 359 2 1317 1 361 2 363 2 364 2 1319 38 1321 2 1322 2 367 22 1324 2 1327 2 1326 2 1328 2 370 2 371 2 1335 10 372 2 1337 4 374 4 373 22 1338 16 1341 8 376 14 1344 6 1345 2 1346 2 1347 2 381 2 383 2 384 2 387 2 388 2 390 4 392 2 1353 2 396 2 1354 2 1355 2 397 38 399 20 398 78 400 2 401 36 403 2 1360 2 1359 2 408 24 409 1 1362 2 1363 2 1367 40 412 24 413 2 1368 2 1371 2 1372 84 417 2 420 1 1376 66 1377 2 423 2 424 24 1379 8 1378 2 426 2 427 2 428 2 1382 6 1386 2 1387 2 1391 4 1393 24 1394 2 438 8 1395 18 1400 22 1398 2 1401 2 1403 18 1406 80 1408 2 442 34 1409 2 443 2 1411 95 447 2 1415 8 1416 16 1417 2 449 2 450 2 1419 24 453 2 1421 4 1422 2 1423 2 1424 1 455 2 456 80 1428 2 1429 4 1432 2 1431 2 1434 2 464 2 1437 2 1438 2 1439 2 1440 2 1441 38 1446 16 468 16 469 2 1447 2 471 12 472 2 1454 3 476 2 478 2 477 4 481 124 1456 14 483 2 1457 2 1458 38 1459 2 490 2 491 2 492 2 1467 120 1466 2 1468 22 1469 20 501 1 502 10 1473 2 1475 2 505 2 1477 8 1478 4 1479 2 511 1 1483 6 1485 2 1486 80 513 1 1487 3 1488 8 1491 4 1496 2 1497 2 1499 4 521 10 1502 26 1504 110 1505 6 526 2 1506 1174 1509 2 534 6 1511 22 1512 40 1513 3 1515 2 1516 8 1518 2 1519 2 1520 2 537 2 1525 78 543 2 1528 3 544 2 545 2 1532 1 1534 2 548 2 547 12 549 2 1535 2 1541 2 1544 2 554 2 1542 32 1543 4 555 2 1545 2 556 78 557 78 559 2 1546 4 1548 2 560 4 1549 10 562 3 1552 2 563 4 564 78 565 2 567 10 1559 2 570 2 1560 2 1561 2 573 60 574 3 1566 84 1567 2 580 2 1569 2 582 2 1572 14 584 3 1573 4 585 2 587 86 1576 2 1577 2 591 2 1582 2 1583 10 1585 10 594 166 596 14 597 10 1587 2 1588 2 601 2 605 2 1590 76 606 4 607 2 1594 2 1596 2 609 2 610 2 1597 2 611 2 1598 2 1599 4 613 4 614 2 616 3 617 2 1604 102 1605 126 1606 78 1608 2 1610 2 622 10 1612 78 623 2 1614 2 1613 2 1615 2 624 2 628 2 629 78 631 1 1623 2 1625 2 637 158 1627 2 638 18 1628 2 1630 24 1631 1 640 2 1632 2 1634 7 1635 2 641 2 642 2 643 2 1639 20 1640 156 644 2 1643 2 1642 2 645 2 646 2 1645 2 1646 2 1649 2 1647 11 652 2 654 2 1655 66 1657 38 658 2 1659 3 659 38 1661 6 660 2 1662 6 1663 2 1664 5 662 2 666 2 1667 2 1668 6 1669 2 1672 46 674 2 1673 2 1675 4 1676 4 1677 2 678 2 681 4 682 80 1678 2 1680 14 683 2 684 2 686 178 685 36 1683 2 1684 1116 688 2 1686 2 691 2 693 12 1688 4 695 2 1689 2 696 2 1691 2 1692 80 697 4 1693 2 1694 2 1695 2 702 2 1698 2 706 6 708 2 711 2 716 2 718 1 721 156 720 2 1707 2 1708 78 724 2 1712 6 725 8 726 1 730 2 1714 38 1716 12 732 3 1718 3 1717 2 1720 2 1722 2 736 80 1726 2 1725 2 1724 10 738 3 1729 2 1731 2 739 2 740 2 1732 2 742 2 741 2 743 2 745 2 746 2 747 2 748 6 753 13 1739 2 1740 2 757 21 758 2 759 2 1744 2 762 2 1747 18 1749 2 763 2 1750 78 1751 2 765 2 1752 38 1755 2 1756 2 767 2 768 10 771 12 1758 18 772 4 773 2 776 2 777 2 1768 20 781 2 1772 38 786 2 787 2 1775 2 790 2 791 3 793 2 1778 4 1779 8 1780 2 1781 2 1784 2 1785 6 796 32 797 3 1789 82 800 2 799 2 1790 2 801 6 1791 2 1793 2 803 2 804 2 805 2 806 38 1798 2 808 2 809 2 1799 2 810 2 1801 3 1806 38 1807 2 1808 2 1810 2 818 2 1812 6 820 32 1813 2 1816 4 1815 2 821 3 1821 2 822 2 1823 2 825 38 826 2 1825 2 1826 2 1828 38 831 2 1830 2 1831 3 1833 10 837 2 1838 2 840 2 844 2 847 3 1842 2 1843 2 850 14 851 2 1845 2 852 2 853 2 854 2 1847 4 855 2 857 2 1849 4 1850 9 1851 2 860 3 859 2 862 1 863 2 864 2 867 16 1857 2 871 18 1858 80 872 2 1859 10 873 2 1863 14 1865 8 1866 2 1868 2 881 2 882 2 883 2 1871 2 884 4 885 2 1873 78 1874 2 892 12 1875 2 1881 2 1883 2 1884 2 1885 20 897 16 1886 4 898 3 1887 2 1888 2 1889 3 900 2 901 2 1891 2 1892 80 904 4 1894 18 1895 4 1896 2 908 6 910 2 911 2 912 2 913 2 914 2 1900 2 1901 2 1903 3 916 2 917 2 1908 6 919 2 920 3 1910 4 1911 14 924 80 926 10 927 2 1913 3 929 2 
1823 2 265 2 1597 2 1758 2 1669 2 46 2 1672 2 250 6 962 2 1535 2 1504 2 715 2 159 4 820 2 272 2 471 2 9 2 1085 2 567 2 1506 2 1605 2 112 2 1541 2 1338 2 
1823 2 265 2 1597 2 1758 2 1669 2 46 2 1672 2 250 6 962 2 1535 2 1504 2 715 2 159 4 820 2 272 2 471 2 9 2 1085 2 567 2 1506 2 1605 2 112 2 1541 2 1338 2 
1823 2 265 2 1597 2 1758 2 1669 2 46 2 1672 2 250 6 962 2 1535 2 1504 2 715 2 159 4 820 2 272 2 471 2 9 2 1085 2 567 2 1506 2 1605 2 112 2 1541 2 1338 2 
1630 3 1499 2 265 4 999 5 1894 4 1672 3 1469 4 1639 4 1690 2 1535 2 1504 3 1505 2 272 2 733 4 1604 6 1605 2 1163 2 1506 10 210 2 1014 2 771 2 213 2 892 2 1093 2 706 2 801 4 1584 3 19 2 1855 2 1701 2 1259 2 318 2 399 4 1104 2 1768 4 408 3 1429 2 1212 2 289 2 608 2 
1630 2 1499 2 999 4 1639 4 1690 2 1504 2 1447 2 1505 2 1506 10 771 2 1014 2 892 2 706 2 1583 2 1584 2 19 2 1259 2 1701 2 318 2 1768 4 1212 2 608 2 265 4 1672 2 1894 4 1469 4 1535 2 272 2 733 4 1604 6 1163 2 1605 2 210 2 212 2 213 2 1093 2 801 4 1855 2 399 4 1104 2 1429 2 408 2 289 2 
1630 2 1499 2 999 4 1639 4 1690 2 1504 2 1447 2 1505 2 1506 10 771 2 1014 2 892 2 706 2 1583 2 1584 2 19 2 1259 2 1701 2 318 2 1768 4 1212 2 608 2 265 4 1672 2 1894 4 1469 4 1535 2 272 2 733 4 1604 6 1163 2 1605 2 210 2 212 2 213 2 1093 2 801 4 1855 2 399 4 1104 2 1429 2 408 2 289 2 
1630 2 1499 2 999 4 1639 4 1690 2 1504 2 1447 2 1505 2 1506 10 771 2 1014 2 892 2 706 2 1583 2 1584 2 19 2 1259 2 1701 2 318 2 1768 4 1212 2 608 2 265 4 1672 2 1894 4 1469 4 1535 2 272 2 733 4 1604 6 1163 2 1605 2 210 2 212 2 213 2 1093 2 801 4 1855 2 399 4 1104 2 1429 2 408 2 289 2 
1630 2 1499 2 999 4 1639 4 1690 2 1504 2 1447 4 1505 2 1506 10 771 2 1014 2 892 2 706 2 1583 4 1584 2 19 2 1259 2 1701 2 318 2 1768 4 1212 2 608 2 265 4 1672 2 1894 4 1469 4 1535 2 272 2 733 4 1604 6 1163 2 1605 2 210 2 212 4 213 2 1093 2 801 4 1855 2 399 4 1104 2 1429 2 408 2 289 2 
61 2 1513 2 1898 2 949 2 1485 2 534 2 
1230 2 1513 2 587 2 390 2 775 2 1830 2 381 2 
28 1 265 8 1143 1 1373 2 1081 1 878 2 1506 10 590 2 507 2 592 2 653 2 1287 2 1619 1 1519 2 627 2 1521 2 833 2 925 2 218 2 1388 2 108 2 284 2 1836 2 1235 1 1624 2 290 2 
543 2 265 6 999 16 1894 12 1895 2 1870 2 1505 6 1447 2 851 2 1506 6 1871 2 1165 4 212 2 178 2 771 6 892 6 1908 4 706 6 801 4 1583 5 19 6 1259 6 1293 2 1135 2 254 2 1359 2 1073 2 1429 2 438 2 289 6 
1114 2 18 2 1469 2 415 2 598 2 399 2 406 2 1768 2 1769 2 71 2 1538 2 858 2 25 2 
1904 2 265 1 1114 6 18 2 1469 2 415 2 598 2 418 2 399 2 406 2 1768 2 1506 1 1769 4 71 2 473 1 1538 2 858 2 25 2 
1904 2 1114 6 18 2 1469 2 415 2 598 4 418 2 399 2 406 2 1768 2 1769 4 71 2 1538 2 858 4 25 4 
1904 8 265 1 1114 10 18 2 1469 2 415 2 598 8 418 6 399 2 406 2 1768 2 1506 1 1769 4 71 2 473 1 1538 2 858 8 25 8 
1436 16 227 16 465 10 692 8 1566 6 1309 2 1310 44 1312 8 1059 4 700 2 1063 8 1191 36 1453 2 1202 24 481 14 594 8 600 2 252 26 965 4 253 4 721 6 1072 4 972 10 1341 5 609 2 1708 4 264 4 265 70 1079 6 724 2 843 10 493 2 1844 2 1714 4 35 4 148 4 1720 2 736 4 1606 4 979 4 1724 2 1226 4 1486 8 629 6 994 24 1487 2 1229 4 398 4 286 28 1858 4 637 10 1627 2 292 4 757 8 167 4 1869 4 1640 11 302 2 1506 78 72 16 1121 30 1873 4 1124 4 78 4 651 32 308 4 316 4 185 4 436 2 187 4 659 4 1019 10 1889 2 1525 4 538 4 1662 2 1140 4 541 1 1772 4 1266 8 1892 4 789 2 1406 4 201 2 1410 2 207 2 97 16 1539 2 1543 4 556 4 557 4 1789 6 1169 4 1285 2 561 2 456 4 924 4 926 4 564 4 1557 2 1684 102 1295 4 1043 4 222 10 568 2 1045 24 1047 10 1806 4 932 4 1562 8 
757 6 521 2 1566 2 1309 2 1310 14 1640 2 1812 2 1313 2 1059 4 1506 28 1121 6 1873 2 1191 14 1124 2 1579 2 1647 2 955 2 252 12 253 4 1019 6 721 2 1662 2 1140 2 972 6 609 2 1528 2 1079 4 265 26 724 2 493 2 1148 2 789 2 201 2 1410 2 551 2 1411 10 496 2 97 14 35 2 1720 2 736 4 1543 2 556 2 1789 2 1285 2 562 2 994 8 629 2 456 4 924 4 926 4 564 2 1684 40 568 2 286 12 222 2 1858 4 637 6 1627 2 
227 42 577 10 1566 14 1309 2 1310 112 1812 4 1313 4 1055 90 122 2 1059 6 1820 4 1191 88 1579 2 1453 2 955 2 1199 24 1202 84 481 12 594 50 252 58 965 6 253 6 721 36 375 2 22 6 972 16 1708 6 609 8 1341 5 264 6 1711 4 1079 8 265 134 724 4 493 2 1714 4 35 6 36 4 148 4 1720 8 736 6 1606 6 979 4 391 4 1612 24 1486 24 629 10 994 124 1487 4 1229 4 398 6 1107 8 1858 6 286 58 749 24 637 16 1627 8 292 6 756 4 757 15 295 26 521 11 876 10 167 6 1640 16 302 2 1506 150 1121 34 1873 10 1122 12 887 90 1124 10 1512 2 1647 7 78 6 308 4 185 6 187 4 659 4 1019 16 1889 2 1525 6 1662 4 1664 2 1140 4 1772 4 1666 8 1266 42 1892 6 1528 2 1148 2 789 2 1406 6 201 8 1410 2 1276 4 551 2 97 28 1411 22 211 18 1418 24 1539 2 1543 4 452 2 556 10 557 6 1789 14 682 6 1169 4 1285 2 562 2 1291 8 456 6 1553 26 924 6 926 8 1797 10 564 10 1684 248 1295 6 1802 4 222 18 1045 92 811 4 931 24 1806 4 1916 4 
410 2 1563 2 3 2 465 2 577 2 1566 2 233 6 876 2 297 2 1309 2 467 4 1310 20 760 2 1640 2 1316 2 69 2 1449 2 1059 2 1506 46 700 2 1873 2 1820 2 1191 20 306 2 1124 2 430 2 955 2 431 2 1255 2 252 6 1136 2 484 2 1522 2 253 2 1019 4 1209 2 721 2 1526 2 259 2 972 4 1342 2 609 2 265 44 1079 6 724 2 843 2 493 2 789 2 380 2 93 2 1777 2 201 2 1410 2 496 2 97 36 35 2 1720 2 794 4 736 2 1537 2 1418 2 1785 4 1350 2 1420 2 915 4 556 2 1730 2 1089 2 44 2 1789 2 1285 2 629 2 1291 2 456 2 994 6 924 2 1554 2 564 2 1797 2 1557 2 1684 48 222 2 286 6 568 2 1858 2 749 2 1047 2 287 2 637 4 931 2 1627 2 
1753 2 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 
1476 1 1103 1 193 1 807 1 149 1 48 1 

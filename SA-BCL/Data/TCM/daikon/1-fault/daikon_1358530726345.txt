#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.NullPointerException 528 1361 260 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 1161 270 235 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ValueTuple:size()I
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptSlice2:arity()I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.FormatCommand:getNumCommands()I
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_164()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.ProglangType:baseIsIntegral()Z
utilMDE.MathMDE:sign(I)I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:jj_3R_60()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.MathMDE:gcd(JJ)J
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParser:jj_3R_114()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_126()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:Node()V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Intern:intern([D)[D
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.ArraysMDE:min([I)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3R_133()Z
utilMDE.MathMDE:negate(I)I
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:lexEqual([I[I)Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Ppt:Ppt()V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:baseIsFloat()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.JavaParser:jj_3R_67()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3R_110()Z
daikon.Quant:subsetOf([J[J)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_116()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:modulus([I)[I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Debug:logOn()Z
daikon.VarInfo:new_ppt()V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_4(I)Z
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
jtb.JavaParser:jj_3_19()Z
utilMDE.MathMDE:gcd([I)I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_2_21(I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_86()Z
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isArray()Z
daikon.ProglangType:isFloat()Z
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_56()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.JavaParser:jj_3_18()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:subsetOf([D[D)Z
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_99()Z
daikon.diff.InvMap:InvMap()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:jj_3R_122()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_98()Z
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:sameLength([I[I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Intern:numIntArrays()I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_88()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V | CONDITION | 32424 | if (x) -> if (!x)
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptSlice1:arity()I
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3_12()Z
daikon.ValueTuple:isMissing(I)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:eltsLTE([II)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3R_89()Z
jtb.JavaParser:jj_3R_70()Z
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:jj_3_4()Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3R_180()Z
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_3_3()Z
daikon.PptName:toString()Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:jj_3R_115()Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.Quant:eltsLT([II)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_134()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.PptName:isCombinedExitPoint()Z
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:jj_3R_107()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_74()Z
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_3_13()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_25(I)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:hashCode()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParser:jj_3R_69()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_117()Z
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Intern:intern([J)[J
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:memberOf(I[I)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:present()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.Quant:isReverse([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_123()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_3R_149()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.Token:newToken(I)Ljtb.Token;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:jj_2_17(I)Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(II)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:jj_2_14(I)Z
jtb.JavaParser:jj_3_35()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:jj_3R_135()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_sets()I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.ProglangType:isIntegral()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.WeakHasherMap:processQueue()V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3R_85()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_3R_72()Z
daikon.Quant:setDiff([I[I)[I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3_17()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_36()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParser:jj_3R_101()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsEqualIndex([I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_3R_55()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.JavaParser:jj_3_29()Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaCharStream:backup(I)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.Quant:eq(FF)Z
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.JavaParser:jj_3R_96()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:subsetOf([D[F)Z
jtb.JavaCharStream:BeginToken()C
daikon.Quant:subsetOf([S[S)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaCharStream:getBeginColumn()I
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[D)D
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:baseIsScalar()Z
utilMDE.MathMDE:gcd_differences([I)I
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:jj_3_27()Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_14()Z
daikon.Quant:memberOf(D[F)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_210()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.ProglangType:isScalar()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.RootNode:RootNode()V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isPseudoArray()Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quant:gte(II)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParser:jj_3R_106()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Quant:eq(JJ)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
jtb.JavaParser:jj_3R_136()Z
jtb.JavaParser:jj_2_36(I)Z
daikon.Quant:lexLT([I[I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.ProglangType:dimensions()I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_2_12(I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:jj_3R_54()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_118()Z
daikon.PptName:isEnterPoint()Z
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.MathMDE:pow_fast(II)I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
jtb.JavaParser:jj_3R_73()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:size()I
daikon.Quant:eq(DD)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_124()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_68()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:jj_3_15()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:jj_3R_119()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:ValueSet(I)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3_25()Z
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:num_vars()I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.Invariant:logOn()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.JavaParser:jj_3R_80()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_2_15(I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.Quant:ne(II)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Quant:noDups([I)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:jj_3_21()Z
daikon.inv.Invariant:logDetail()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParser:jj_2_18(I)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_3R_57()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_97()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_16()Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_162()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.PptSlice1:num_samples()I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.PptName:getSignature()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParser:jj_3R_105()Z
jtb.JavaParser:jj_3R_137()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_109()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.Quant:concat([I[I)[I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.Quant:subsetOf([F[F)Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_10(I)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_104()Z
utilMDE.FuzzyFloat:gt(DD)Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_81()Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_28()Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:jj_3R_63()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:eltwiseEqual([I)Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.JavaParser:jj_2_16(I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:intersection([I[I)[I
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_100()Z
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Debug:logDetail()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:union([I[I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.ModBitTracker:num_samples()I
jtb.JavaParser:jj_2_3(I)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:justified()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaCharStream:ReadByte()C
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0:arity()I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.Quant:lte(II)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.JavaParser:jj_3R_75()Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.FormatCommand:getCommand()I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3_20()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1339 2 451 2 375 2 710 2 541 4 615 2 796 2 107 2 524 2 
966 6 1364 6 264 2 1018 2 158 2 937 2 644 2 1388 2 1237 2 531 6 839 2 
495 6 965 2 1339 2 355 6 796 2 674 6 159 2 1185 2 1163 2 1105 4 1022 4 902 2 754 6 
326 8 25 4 1096 8 1339 6 262 2 1127 8 796 6 1348 2 991 12 1134 2 532 6 1038 10 1270 6 610 10 41 16 735 2 1381 4 855 26 509 8 434 16 476 2 1353 2 318 10 630 10 739 10 812 16 722 2 537 29 557 4 1415 4 
1273 4 534 6 
272 2 
326 2 373 2 523 2 1186 2 991 2 296 2 1038 2 610 2 1270 2 41 2 855 4 1139 2 434 2 318 2 630 2 684 2 739 4 1089 2 812 2 972 2 864 2 537 6 557 2 
1223 4 25 2 610 4 894 2 41 8 855 12 434 8 318 4 379 2 630 4 1332 4 812 8 1118 6 480 6 537 15 991 5 1038 4 
1361 2 1224 2 543 4 1027 2 958 2 259 2 260 2 286 2 750 2 1208 10 772 4 528 2 962 2 487 2 336 30 188 6 246 2 854 2 92 2 777 2 389 6 168 2 1069 2 1020 4 193 2 49 2 394 2 398 2 1049 2 419 2 1334 2 256 2 672 2 
955 2 265 2 1078 2 351 2 290 2 139 2 1408 2 272 2 1409 2 725 2 
101 2 1339 4 374 2 239 2 663 2 796 4 1348 2 1398 2 899 4 115 2 504 2 8 2 505 2 705 2 165 2 1309 2 389 2 168 2 629 2 250 2 596 4 633 2 398 4 1002 2 1316 2 180 2 767 2 1246 2 769 2 1370 2 1164 2 775 2 679 2 1428 2 1015 4 143 2 454 2 144 2 688 2 689 2 539 2 615 2 695 2 893 2 
125 8 1223 4 326 18 1339 4 216 4 796 4 1321 2 698 2 1323 2 939 2 991 22 532 4 204 4 1038 16 610 16 1270 4 649 6 41 32 855 48 166 4 509 6 434 32 476 2 318 16 1276 4 784 6 630 16 739 6 1332 4 812 32 760 4 1118 6 52 2 480 6 195 6 537 54 557 2 1001 6 57 2 
543 2 389 2 1069 2 
90 2 374 2 191 10 681 2 1077 2 194 22 1313 2 949 2 1432 2 303 2 441 2 1254 2 55 2 1294 2 
977 2 1339 34 463 2 1182 2 1183 4 796 32 3 2 466 2 467 2 701 1 1187 2 990 12 623 3 703 8 801 2 1350 2 385 1 472 2 386 2 706 3 11 1 206 6 1195 2 1196 2 708 3 628 16 906 2 477 1 1088 1 1277 2 1356 2 552 1 211 2 813 2 1358 4 1000 2 558 16 726 2 1359 3 305 8 126 2 484 3 1205 2 823 2 1207 2 406 2 309 1 32 2 410 12 1104 2 34 2 35 2 224 1 1375 4 310 16 1288 2 829 2 40 6 1217 2 142 2 145 8 1116 2 1387 2 1024 2 154 3 1026 2 59 2 242 1 748 3 423 1 848 2 1032 3 1397 2 1033 2 1305 2 1132 2 427 2 583 2 850 2 1403 2 586 2 852 2 1230 24 68 1 1406 2 943 2 432 6 510 4 1140 2 947 2 169 2 1410 2 172 2 950 2 1048 2 440 1 951 1 762 2 1148 2 866 2 1413 2 1417 1 1151 2 519 2 1054 2 956 2 346 5 765 3 1056 2 1057 2 1320 3 1155 32 1322 2 524 2 771 16 266 2 1060 4 1162 2 877 2 1063 1 529 4 352 2 1064 2 961 2 880 4 1250 2 881 1 1427 2 91 32 884 2 682 3 356 4 967 6 1330 2 361 2 1251 2 970 1 1171 2 1173 2 536 2 691 2 538 2 788 2 197 3 1256 2 372 24 279 2 280 2 1338 2 
1292 2 
1339 2 19 2 
797 2 1339 4 758 2 
1075 2 2 2 381 10 1080 2 1081 6 700 50 5 2 382 64 702 2 12 198 13 2 1086 2 1085 4 713 16 712 6 14 4 391 204 714 2 1087 6 715 192 716 2 717 2 392 2 16 432 719 132 720 2 18 4 17 4 397 4 723 8 22 6 23 204 399 26 1093 2 24 4 400 32 1095 12 727 4 26 6 28 376 405 2 30 10 1101 18 31 2 729 2 407 18 408 4 1103 2 33 4 730 6 36 6 732 2 731 2 1107 4 38 192 1109 2 411 2 1111 106 412 2 734 28 42 94 1113 2 43 4 413 2 47 2 416 4 417 2 1117 4 418 2 1119 2 53 2 54 2 742 20 1120 4 56 26 1124 336 743 2 60 8 420 2 61 4 421 22 63 2 749 228 425 4 64 112 752 4 753 26 1133 2 65 4 67 2 430 2 756 198 1138 2 433 6 1141 2 435 2 1143 6 436 4 438 2 1145 2 1146 4 761 92 71 30 762 2 73 64 75 2 1149 2 763 198 1150 4 764 8 1153 2 443 2 82 2 444 198 445 2 1156 8 770 46 83 6 1158 4 84 4 446 2 86 290 773 2 776 2 1167 2 781 6 1169 6 1170 20 782 2 95 2 455 8 456 12 457 2 1172 26 1174 4 789 20 99 4 462 28 102 4 1180 46 794 70 795 4 464 2 796 10 465 30 105 2 106 2 1184 4 798 2 108 4 110 2 800 4 469 2 111 6 112 112 114 12 470 6 1191 28 116 6 804 60 473 4 474 112 1192 4 1193 4 807 2 809 6 810 6 119 2 811 2 478 16 1198 2 1199 2 121 2 1200 2 479 8 815 4 1203 4 483 2 127 4 129 2 131 244 133 6 826 12 1211 2 827 2 134 2 828 2 486 2 135 2 138 6 1213 8 140 6 831 8 1215 8 489 60 833 2 1218 2 835 2 1219 2 147 6 490 2 1221 2 836 8 837 2 149 2 152 48 838 2 151 328 491 14 1222 2 153 4 155 26 841 160 494 2 496 2 844 2 847 4 1226 6 499 4 501 6 161 12 162 22 506 6 507 2 851 6 1229 2 1231 2 167 8 857 4 1232 16 511 6 859 2 1235 2 860 6 171 2 513 2 861 12 514 4 515 6 863 2 865 2 174 2 1239 2 1240 2 517 28 176 26 868 566 1241 2 177 6 1242 8 1243 2 1245 4 183 2 527 74 876 6 1247 4 530 30 189 2 190 6 886 8 887 2 192 4 889 2 890 2 892 12 1253 2 1255 2 198 2 1259 140 1262 2 201 28 1263 2 546 6 900 60 202 2 547 224 901 4 1267 2 548 26 1269 2 1268 2 1272 2 1271 2 905 20 1274 4 549 2 207 4 550 8 1279 6 555 182 1280 6 212 6 217 386 218 4 563 46 219 2 564 2 915 2 916 6 222 30 567 6 566 2 570 6 918 6 1289 30 919 2 920 2 226 4 227 68 572 4 923 6 924 6 927 2 229 2 230 30 233 24 1295 2 928 2 236 2 238 6 1299 22 575 14 241 2 576 4 240 24 578 182 243 2 932 2 1301 16 1302 4 933 198 934 20 1304 2 1306 2 940 6 1308 118 584 30 245 2 247 6 942 4 248 12 588 6 944 30 589 198 946 2 590 2 592 4 1311 8 593 14 1312 66 948 6 1314 2 952 2 599 198 601 2 600 2 602 2 255 30 1317 244 1318 4 603 2 267 10 607 8 1325 2 960 6 608 20 964 10 1328 2 1329 12 968 2 969 2 611 46 612 2 1331 2 971 10 1333 2 614 4 278 4 1337 12 283 2 1339 10 1340 2 979 4 980 2 1341 20 981 12 983 14 284 4 984 2 617 6 285 2 618 2 1342 4 288 2 1344 2 621 4 289 6 989 98 292 26 291 60 293 2 622 2 295 2 992 6 1351 2 1352 48 627 244 297 2 298 2 993 82 299 20 1354 84 994 2 631 46 632 6 1357 2 635 2 636 4 1360 4 306 8 1362 10 1366 2 1372 6 1371 432 643 4 1373 2 1377 18 1010 26 1011 106 1013 14 313 2 314 2 1383 4 1384 2 315 2 651 4 317 4 1019 6 655 6 1386 6 319 2 320 88 1021 30 321 26 658 2 322 6 659 2 324 2 323 14 1023 22 660 2 1390 54 1393 86 328 6 1029 2 329 4 1396 8 1031 2 331 6 1399 6 1034 4 1401 2 337 132 1404 2 1039 2 339 4 1405 6 1043 6 1044 4 1411 4 1047 2 1050 2 343 2 1051 26 1052 6 1418 2 1419 328 1053 6 347 2 349 12 676 2 677 6 350 30 1425 4 678 2 1065 6 1426 2 357 4 359 112 683 52 1431 6 362 6 363 14 364 4 1433 6 365 2 692 198 693 2 694 2 
366 2 1181 2 1176 1 604 2 
358 2 604 2 
1324 2 1381 2 721 2 389 2 544 2 1189 2 604 2 
560 2 544 2 604 2 
431 2 544 2 604 2 
366 2 554 2 1098 2 
544 2 604 2 
1098 2 1284 2 
817 2 604 2 
366 2 1098 2 686 2 
366 2 846 2 1094 2 
366 2 1175 2 1282 2 
366 2 774 2 1402 2 
366 2 870 2 995 2 
1303 2 1098 2 
551 2 604 2 
1345 2 846 2 
148 2 1282 2 
1136 2 1402 2 
870 2 353 2 
718 2 1098 2 
870 2 439 2 
1402 2 94 2 
642 2 1282 2 
846 2 1336 2 
366 2 200 2 1098 2 686 2 
366 2 200 2 1233 2 1098 2 686 2 
366 2 1098 2 137 2 
565 2 366 2 1098 2 
1298 2 308 2 605 2 503 2 
1236 2 721 2 225 2 389 2 
1236 2 721 2 225 2 389 2 1355 2 1189 2 
1381 2 721 2 389 2 544 2 661 2 604 2 
775 2 1102 2 
1381 2 721 2 911 2 389 2 
616 2 1402 2 
1346 2 870 2 
846 2 471 2 
403 2 1282 2 
921 2 870 2 1282 2 
870 2 1282 2 312 2 
70 2 870 2 1282 2 
903 2 870 2 1282 2 
975 2 130 6 426 2 646 2 1188 2 389 2 721 2 368 6 
1098 2 747 2 
805 2 237 4 757 2 340 2 982 2 888 2 872 2 685 2 194 6 751 2 755 2 973 4 482 2 1238 2 253 2 802 2 1249 2 1082 2 
366 2 816 2 
142 2 
1339 26 1183 2 796 26 466 2 986 2 701 2 990 8 801 2 1350 2 472 2 386 2 11 2 206 6 208 2 628 6 908 2 301 2 552 4 211 2 813 6 396 2 1358 4 999 2 556 2 1000 2 726 2 126 2 562 2 823 2 1100 2 406 2 32 2 410 8 1104 2 34 2 1375 4 1106 2 40 2 1387 2 1116 2 145 2 840 2 59 4 1397 2 1033 2 1305 2 1132 2 427 2 163 4 586 2 432 2 510 4 1142 2 172 2 950 2 762 2 1148 2 1151 2 518 2 1155 4 524 2 1060 2 529 2 961 2 91 6 356 4 967 4 1330 2 1072 2 538 2 540 2 1435 2 1256 2 279 2 280 2 282 4 
1179 2 1339 26 1183 2 796 26 466 2 701 2 990 8 801 2 1350 2 472 2 386 2 11 2 206 6 208 2 628 6 908 2 552 2 211 2 813 6 396 2 1358 4 999 2 556 2 1000 2 726 2 126 2 823 2 1100 2 406 2 32 2 410 8 1104 2 34 2 1375 4 1106 2 40 2 654 2 1387 2 1116 2 145 2 840 2 59 4 848 2 1397 2 1033 2 1305 2 1132 2 427 2 163 4 586 2 432 2 510 4 1142 2 172 2 950 2 762 2 1148 2 1151 2 518 2 1155 4 524 2 1060 2 529 2 961 2 963 2 91 6 356 4 967 6 1330 2 1173 2 1072 2 538 2 540 2 1435 2 1256 2 279 2 280 2 1338 2 282 4 
1201 2 
1177 2 1257 2 
1339 12 103 2 376 2 796 6 1076 8 1030 4 699 2 936 2 937 2 472 2 941 2 206 4 945 2 1045 2 996 2 1278 2 668 4 1147 4 122 2 762 2 634 2 724 2 1148 2 123 4 1358 2 481 2 304 2 1151 2 1204 2 179 8 728 2 348 2 402 2 823 2 1364 6 264 4 824 4 874 2 220 2 644 2 1375 2 1009 2 878 2 531 6 450 2 571 2 883 2 141 2 780 2 966 6 1290 2 453 10 1018 4 653 2 146 4 1387 2 574 2 367 2 1256 2 492 2 
1297 2 1339 12 103 2 376 2 796 6 1076 8 1030 4 699 2 936 2 937 2 472 2 941 2 206 4 1045 2 996 2 1278 2 668 4 1147 4 122 2 762 2 634 2 724 2 1148 2 1358 2 123 4 304 2 1151 2 819 4 1204 2 179 8 728 2 348 2 402 2 823 2 1364 6 264 4 824 4 874 2 220 2 644 2 1375 2 1009 2 878 2 531 8 450 2 571 2 883 2 141 2 780 2 966 8 1290 2 453 10 1018 4 653 2 1387 2 146 4 574 2 1220 2 367 2 839 2 1256 2 492 2 
571 2 728 2 780 2 348 2 1290 2 1364 2 1018 2 264 2 824 4 146 4 668 2 122 2 634 2 1009 2 878 2 531 2 304 2 450 2 
1339 12 103 2 376 2 796 6 1076 4 1030 4 699 2 936 2 937 2 472 2 941 2 206 4 945 2 1045 2 996 2 1278 2 668 4 1147 4 122 2 762 2 634 2 724 2 1148 2 123 4 1358 2 481 2 304 2 1151 2 1204 2 179 4 728 2 348 2 402 2 823 2 1364 4 264 4 824 4 874 2 220 2 1375 2 1009 2 878 2 531 6 450 2 571 2 883 2 141 2 780 2 966 6 1290 2 453 6 1018 4 653 2 146 4 1387 2 574 2 367 2 839 2 1256 2 492 2 
1339 12 103 2 376 2 796 6 1076 4 1030 4 699 2 936 2 937 2 472 2 941 2 206 4 945 2 1045 2 996 2 1278 2 668 4 1147 4 122 2 762 2 634 2 724 2 1148 2 123 4 1358 2 481 2 304 2 1151 2 1204 2 179 4 728 2 348 2 402 2 823 2 1364 6 264 4 824 4 874 2 220 2 1375 2 1009 2 878 2 531 4 450 2 571 2 883 2 141 2 780 2 966 6 1290 2 453 6 1018 4 653 2 146 4 1387 2 574 2 1388 2 367 2 1256 2 492 2 
1339 12 103 2 376 2 796 6 1076 8 1030 4 699 2 936 2 937 2 472 2 941 2 206 4 945 2 1045 2 996 2 1278 2 668 4 1147 4 122 2 762 2 634 2 724 2 1148 2 123 4 1358 2 481 2 304 2 1151 2 1204 2 179 4 728 2 348 2 402 2 823 2 1364 6 264 4 824 4 874 2 220 2 644 2 1375 2 1009 2 878 2 531 6 450 2 571 2 883 2 141 2 780 2 966 6 1290 2 453 6 1018 4 653 2 146 4 1387 2 574 2 367 2 1256 2 492 2 
1339 12 103 2 376 2 796 6 1076 8 1030 4 699 2 936 2 937 2 472 2 941 2 206 4 945 2 1045 2 996 2 1278 2 668 4 1147 4 122 2 762 2 634 2 724 2 1148 2 1358 2 123 4 481 2 304 2 1151 2 1204 2 179 8 728 2 348 2 402 2 823 2 1364 8 264 4 824 4 874 2 220 2 644 2 1375 2 1009 2 878 2 531 6 450 2 571 2 883 2 141 2 780 2 966 8 1290 2 453 10 1018 4 653 2 146 4 1387 2 574 2 1388 2 367 2 1256 2 492 2 
1339 12 103 2 376 2 796 6 1076 8 1030 4 699 2 936 2 937 2 472 2 941 2 206 4 945 2 1045 2 996 2 1278 2 668 4 1147 4 122 2 762 2 634 2 724 2 1148 2 123 4 1358 2 481 2 304 2 1151 2 1204 2 179 8 728 2 348 2 402 2 823 2 1364 6 264 4 824 4 874 2 220 2 644 2 1375 2 1009 2 878 2 531 6 450 2 571 2 883 2 141 2 780 2 966 6 1290 2 453 10 1018 4 653 2 146 4 1387 2 574 2 367 2 1256 2 492 2 
376 2 697 2 1076 2 699 2 1079 10 4 2 206 6 208 2 1278 2 396 4 19 6 724 2 726 2 728 2 402 2 29 6 1100 2 1286 2 406 2 220 2 410 4 34 2 568 2 1108 2 1110 2 40 2 571 2 736 2 737 2 1290 2 48 2 1116 2 574 4 1292 6 58 2 745 2 1125 6 937 4 936 4 1132 2 1135 6 941 2 586 2 432 2 945 2 758 6 950 2 1147 8 762 2 1148 2 1151 2 261 2 766 2 264 4 768 2 1155 2 85 1 1165 1 961 2 450 2 91 8 780 2 966 12 93 2 453 2 967 6 783 2 790 2 974 1 459 2 279 12 280 2 1338 2 282 4 1339 46 103 2 1183 2 796 24 985 2 466 2 1349 2 1347 2 988 2 990 4 801 2 1350 2 472 2 625 6 806 2 1194 6 628 6 996 2 813 6 122 2 634 2 1358 4 123 4 1000 2 637 1 1003 2 304 2 126 2 1204 2 823 2 1364 8 824 4 825 2 1368 4 1375 4 1009 2 1012 1 136 2 650 7 1379 1 141 2 1018 4 653 2 652 2 1387 2 146 4 145 2 1388 4 492 2 1225 2 848 2 1030 6 160 1 1033 2 332 6 856 7 510 4 1407 2 1045 2 341 6 1412 4 668 4 671 2 345 8 520 6 522 1 348 2 524 2 874 2 1424 6 1060 2 185 1 529 2 878 2 531 4 882 2 883 2 356 4 1067 6 885 6 1068 2 367 2 690 6 1072 2 1256 2 542 6 
1339 48 103 2 376 2 697 2 1183 4 796 26 985 2 1076 6 466 2 699 2 1079 10 1347 2 1349 2 4 2 988 2 990 8 801 2 1350 2 472 2 625 6 206 6 806 2 1194 6 208 2 628 6 996 2 1278 2 396 4 813 6 19 6 122 2 634 2 724 2 123 4 1358 4 1000 2 1003 2 726 2 304 2 126 2 1204 2 728 2 402 2 823 2 29 6 1364 8 1100 2 824 4 1286 2 825 2 406 2 1368 4 220 2 410 8 644 4 34 2 1375 4 568 2 1009 2 648 2 1108 2 1110 2 136 2 571 2 40 2 736 2 141 2 737 2 1290 2 1018 4 652 2 653 2 48 2 145 2 1116 2 146 4 1387 2 1292 6 574 4 492 2 58 2 59 2 745 2 1125 6 1225 2 1030 6 848 2 936 4 937 4 1033 2 332 6 1132 2 1135 6 941 2 586 2 432 2 510 4 1407 2 758 6 945 2 341 6 1045 2 1412 4 950 2 668 4 1147 8 762 2 1148 2 345 8 671 2 1151 2 520 6 261 2 348 2 1244 2 766 2 264 4 1155 2 768 2 524 2 1424 6 874 2 1060 4 529 4 878 2 531 8 961 2 882 2 450 2 91 8 883 2 885 6 1067 6 356 4 93 2 966 12 780 2 453 2 1068 2 967 6 783 2 367 2 690 6 1072 2 790 2 459 2 1256 2 279 12 542 6 280 2 282 4 1338 2 
1339 48 103 2 376 2 697 2 1183 4 796 26 985 2 1076 6 466 2 699 2 1079 10 1347 2 1349 2 4 2 988 2 990 8 801 2 1350 2 472 2 625 6 206 6 806 2 1194 6 208 2 628 6 996 2 1278 2 396 4 813 6 19 6 122 2 634 2 724 2 123 4 1358 4 1000 2 1003 2 726 2 304 2 126 2 1204 2 728 2 402 2 823 2 29 6 1364 8 1100 2 824 4 1286 2 825 2 406 2 1368 4 220 2 410 8 644 4 34 2 1375 4 568 2 1009 2 648 2 1108 2 1110 2 136 2 571 2 40 2 736 2 141 2 737 2 1290 2 1018 4 652 2 653 2 48 2 145 2 1116 2 146 4 1387 2 1292 6 574 4 492 2 58 2 59 2 745 2 1125 6 1225 2 1030 6 848 2 936 4 937 4 1033 2 332 6 1132 2 1135 6 941 2 586 2 432 2 510 4 1407 2 758 6 945 2 341 6 1045 2 1412 4 950 2 668 4 1147 8 762 2 1148 2 345 8 671 2 1151 2 179 4 520 6 261 2 348 2 1244 2 766 2 264 4 1155 2 768 2 524 2 1424 6 874 2 1060 4 529 4 878 2 531 8 961 2 882 2 450 2 91 8 883 2 885 6 1067 6 356 4 93 2 966 12 780 2 453 6 1068 2 967 6 783 2 367 2 690 6 1072 2 790 2 459 2 1256 2 279 12 542 6 280 2 282 4 1338 2 
376 2 697 2 1076 6 380 2 699 2 1079 8 4 2 387 6 206 6 208 2 1278 2 396 4 19 12 724 2 726 2 728 2 402 2 29 6 1099 2 1100 4 1286 2 406 2 220 2 410 10 34 2 568 2 1108 2 1110 2 40 4 571 2 736 2 737 2 1290 2 48 2 926 2 1116 2 574 4 1292 12 58 2 59 2 745 2 1125 6 937 4 936 4 1132 2 1135 6 941 2 586 2 432 4 945 2 758 12 950 2 597 6 1147 8 762 2 1148 2 1151 2 261 2 766 2 264 4 768 2 1155 4 448 2 961 2 450 2 91 12 780 2 966 16 93 2 453 6 967 6 783 2 276 6 613 6 277 2 790 2 459 2 279 10 280 2 1338 2 282 6 1339 52 103 2 1183 4 796 24 985 2 466 2 1349 2 1347 2 988 2 990 10 801 2 1350 2 472 2 625 12 806 2 1194 12 475 6 628 8 996 2 813 8 122 2 634 2 1358 4 123 4 1000 2 1003 2 304 2 126 2 1204 2 820 2 823 2 1364 10 824 4 1368 4 644 4 1375 4 1009 2 648 2 136 2 141 2 1018 4 653 2 652 2 1387 2 146 4 145 4 1388 2 839 2 492 2 1225 2 848 2 1030 6 1033 2 332 6 334 6 510 4 1407 2 1045 2 341 6 1412 4 668 4 669 6 671 2 345 8 179 4 520 6 348 2 1244 2 524 2 874 2 1424 6 1060 4 875 2 186 2 529 4 878 2 531 10 1248 6 882 2 883 2 356 4 1067 6 885 6 1068 2 1429 6 367 2 690 6 1072 2 1256 2 542 12 
1204 2 1339 4 179 4 103 2 728 2 376 2 348 2 1364 6 264 4 1076 6 824 2 1030 2 699 2 220 2 937 2 644 2 878 2 1009 2 531 6 450 2 941 2 966 4 780 2 945 2 453 4 1290 2 1045 2 1018 4 653 2 146 2 1278 2 367 2 1147 2 123 2 492 2 
1339 28 977 2 103 2 376 2 796 24 1076 6 466 2 699 2 1079 2 801 2 803 2 1350 2 472 2 206 6 208 2 628 6 1278 2 813 6 396 2 123 2 1358 4 1000 2 726 2 126 2 1204 2 728 2 402 2 823 2 1364 6 824 2 825 2 406 2 220 2 644 2 34 2 1375 4 1009 2 917 2 40 3 1290 2 142 2 1018 4 653 2 146 2 1387 2 492 2 1030 2 848 2 937 2 1033 2 1132 2 583 2 941 2 586 2 585 2 432 3 510 4 945 2 1045 2 666 2 950 2 1147 2 762 2 1148 2 1151 2 348 2 1057 2 264 4 1155 3 524 2 878 2 531 6 961 2 450 2 91 8 356 4 966 4 780 2 453 2 967 6 367 2 1072 2 196 3 1074 2 1256 2 279 4 280 2 1338 2 282 4 
367 2 492 2 533 2 
367 2 492 2 533 2 
1339 24 0 2 1183 4 796 16 104 2 1076 6 466 2 287 2 1079 2 619 2 990 4 801 2 1350 2 472 2 206 6 806 2 208 2 628 2 552 2 813 2 396 6 122 2 724 2 1358 4 123 2 556 4 1000 2 214 2 726 2 304 2 1204 2 728 2 640 2 823 2 1364 12 824 2 406 2 1368 2 410 4 644 4 34 2 1375 4 830 2 737 2 141 2 1018 4 653 2 1116 4 1387 2 146 2 574 4 51 2 1388 4 839 4 492 6 1300 2 1030 4 848 2 936 2 937 4 665 4 1033 2 1132 2 1037 2 586 2 853 2 510 4 858 2 341 2 1046 2 1412 2 950 2 668 4 1147 4 762 2 1148 2 671 2 1151 2 179 4 348 4 871 2 264 4 1155 2 524 2 874 2 1060 4 1159 2 268 2 529 4 531 12 961 2 533 2 91 2 356 4 780 2 966 16 453 6 967 6 891 2 367 4 1072 2 1256 2 279 4 281 4 280 2 1338 2 
1339 4 215 2 341 2 796 2 579 2 985 2 619 2 1079 2 1368 2 1387 2 891 2 634 2 1037 2 1257 2 279 2 1003 2 164 2 
1339 24 1183 4 796 16 104 2 1076 6 466 2 619 2 990 4 801 2 1350 2 472 2 206 6 806 2 208 2 628 2 813 2 396 6 122 2 724 2 123 2 1358 4 556 4 1000 2 214 2 726 2 304 2 1204 2 728 2 640 4 823 2 1364 12 1006 2 824 2 406 2 410 4 644 4 34 2 1375 4 830 2 737 2 141 2 1018 4 415 2 653 2 1116 4 1387 2 146 2 574 4 51 2 1388 4 839 4 492 6 1030 4 848 2 936 4 937 4 665 4 1033 2 1132 2 1307 2 1037 2 586 2 510 4 858 2 341 2 1046 2 1412 2 950 2 668 4 1147 4 762 2 670 2 1148 2 671 2 1151 2 179 4 348 4 871 2 264 4 1155 4 524 2 1059 2 874 2 1060 4 1159 2 268 2 529 4 531 12 961 2 533 2 91 2 883 2 356 4 780 2 966 16 453 6 967 6 891 2 367 4 1072 2 1256 2 279 2 281 4 280 2 1338 2 
1339 24 1183 4 796 16 104 2 1076 6 466 2 1079 2 619 2 990 4 801 2 1350 2 472 2 206 6 806 2 208 2 628 2 300 2 395 2 552 1 813 2 396 6 122 2 724 2 1358 4 123 2 556 4 1000 2 214 2 726 2 304 2 1204 2 728 2 640 2 823 2 1364 12 824 2 406 2 1368 2 410 4 644 4 34 2 1375 4 830 2 737 2 141 2 1018 4 653 2 1116 4 1387 2 146 2 574 4 51 2 1388 4 839 4 492 6 1030 4 848 2 936 4 937 4 665 4 1033 2 1132 2 1037 2 586 2 510 4 858 2 341 2 170 2 1046 2 1412 2 950 2 668 4 1147 4 762 2 1148 2 671 2 1151 2 179 4 521 2 348 4 871 2 264 4 1155 2 524 2 874 2 1060 4 1159 2 268 2 609 2 529 4 531 12 961 2 533 2 91 2 883 2 356 4 780 2 966 16 453 6 967 6 891 2 367 4 1072 2 1256 2 279 4 281 4 280 2 1338 2 
461 2 1339 28 793 2 792 2 1261 2 796 22 466 2 1264 2 896 2 898 2 988 2 990 10 991 4 6 2 801 2 803 2 1350 2 472 2 206 6 707 4 390 4 208 2 628 10 1197 2 907 2 630 2 394 2 812 4 813 10 396 2 480 6 213 2 1092 4 1358 4 1000 2 124 2 726 2 126 2 639 2 1004 2 822 2 823 2 1005 4 1100 6 1367 2 406 2 221 6 410 10 34 2 1376 6 1375 4 37 2 647 2 1212 1 311 2 1112 2 733 2 40 6 41 4 1382 6 44 1 46 2 318 2 1017 2 652 2 925 1 656 2 1116 2 145 6 1387 2 657 2 150 4 840 4 1123 2 235 2 1223 4 662 2 1392 4 326 4 1028 14 1225 2 845 6 746 2 580 1 1128 2 848 2 1395 6 424 2 938 4 1033 2 1132 2 1035 2 1038 2 586 2 585 2 855 6 432 6 1042 4 510 4 434 4 1310 4 666 2 342 4 251 2 862 2 595 2 516 2 950 2 252 2 762 2 74 4 1148 2 256 2 672 2 77 2 1151 2 442 4 79 2 78 2 1154 4 1421 2 766 2 182 6 768 2 1155 6 1423 2 873 4 1323 4 524 2 1061 2 1161 2 606 2 526 2 447 2 270 2 879 2 88 1 961 2 610 2 1166 4 91 16 680 2 356 4 1068 2 967 6 786 6 97 2 537 8 1073 2 790 2 196 2 1074 2 1256 2 98 2 279 2 280 2 1338 2 282 8 
1296 2 126 2 1339 2 1420 2 157 3 796 2 1100 6 1155 3 1265 2 1129 2 1083 4 89 2 40 3 91 2 432 3 628 2 228 2 15 2 1070 2 813 2 21 2 1090 2 1178 2 282 2 
126 2 1296 2 89 2 40 2 1339 2 91 2 1420 2 432 2 157 2 628 2 1100 6 796 2 228 2 1155 2 15 2 1070 2 1265 2 813 2 1129 2 21 2 1090 2 1178 2 1083 4 282 2 
126 2 1296 2 89 2 40 2 1339 2 91 2 1420 2 432 2 157 2 628 2 1100 6 796 2 228 2 1155 2 15 2 1070 2 1265 2 813 2 1129 2 21 2 1090 2 1178 2 1083 4 282 2 
843 2 1296 2 1339 10 156 3 930 4 931 4 796 4 468 3 335 2 1038 2 117 3 855 4 432 3 509 4 434 2 630 2 120 4 812 2 594 2 175 4 126 2 128 2 1155 3 771 2 310 2 87 2 532 2 449 2 610 2 41 2 91 2 414 6 316 4 488 2 360 2 318 2 50 2 687 2 537 5 231 2 
1296 2 126 2 843 2 326 2 1339 10 156 2 930 4 128 2 931 4 796 4 1155 2 771 2 468 2 991 2 310 2 87 2 335 2 532 2 449 2 1038 2 610 2 117 2 91 2 41 2 855 4 509 4 432 2 414 6 316 4 434 2 476 2 488 2 318 2 360 2 630 2 50 2 120 4 687 2 594 2 812 2 231 2 537 4 175 4 
1296 2 126 2 843 2 326 2 1339 10 156 2 930 4 128 2 931 4 796 4 1155 2 771 2 468 2 991 2 310 2 87 2 335 2 532 2 449 2 1038 2 610 2 117 2 91 2 41 2 855 4 509 4 432 2 414 6 316 4 434 2 476 2 488 2 318 2 360 2 630 2 50 2 120 4 687 2 594 2 812 2 231 2 537 4 175 4 
1296 2 126 2 843 2 326 2 1339 10 156 2 930 4 128 2 931 4 796 4 1155 2 771 2 468 2 991 2 310 2 87 2 335 2 532 2 449 2 1038 2 610 2 117 2 91 2 41 2 855 4 509 4 432 2 414 6 316 4 434 2 476 2 488 2 318 2 360 2 630 2 50 2 120 4 687 2 594 2 812 2 231 2 537 4 175 4 
1296 2 126 2 843 2 326 4 1339 10 156 2 930 4 128 2 931 4 796 4 1155 2 771 2 468 2 991 4 310 2 87 2 335 2 532 2 449 2 1038 2 610 2 117 2 91 2 41 2 855 4 509 4 432 2 414 6 316 4 434 2 476 4 488 2 318 2 360 2 630 2 50 2 120 4 687 2 594 2 812 2 231 2 537 4 175 4 
210 2 1008 2 582 2 98 2 325 2 785 2 
96 2 1160 2 1319 2 913 2 582 2 840 2 1343 2 
1339 10 1 2 1097 2 263 2 1365 2 796 8 1007 2 545 2 1227 1 502 2 1326 2 1287 1 581 2 962 1 487 1 10 1 1014 2 624 2 1040 2 740 2 1071 2 814 2 1091 2 1148 2 542 2 401 2 
125 2 1223 2 976 2 326 3 1339 6 78 2 796 6 698 1 1400 2 991 5 879 2 9 2 532 2 1038 6 705 2 610 6 41 6 1166 2 855 12 509 4 434 6 476 2 143 2 1276 2 318 6 630 6 812 6 480 4 537 15 1001 4 371 2 
791 2 100 2 1339 1 199 2 388 2 316 2 922 2 535 4 45 2 485 2 931 2 796 1 271 6 895 2 173 2 1434 2 818 1 175 2 
791 4 100 2 199 2 388 2 316 2 922 2 535 4 45 4 931 2 485 4 271 6 895 2 173 2 1434 2 175 2 
791 8 100 6 1339 1 199 2 388 2 316 2 922 2 535 4 45 8 931 2 485 8 796 1 271 10 895 2 173 8 1434 2 818 1 175 2 
791 2 199 2 388 2 316 2 922 2 535 2 45 2 931 2 485 2 271 2 895 2 1434 2 175 2 
1339 150 978 2 1260 10 377 16 796 134 987 10 799 4 203 4 383 4 113 4 294 24 7 2 1350 8 205 4 704 6 626 42 904 6 1084 1 808 6 118 10 909 6 997 6 393 6 998 17 552 4 302 4 553 90 1202 92 1281 2 27 24 912 10 1283 6 1363 4 821 6 404 2 641 8 1285 6 406 14 409 4 410 28 132 24 1374 4 645 4 39 10 1378 6 1382 22 1214 8 1385 26 1216 8 832 6 1016 4 44 11 738 2 573 2 834 4 1114 6 925 16 1291 12 232 10 1122 6 1121 24 1025 2 493 4 1391 8 744 4 327 2 929 4 577 124 497 10 422 8 1394 4 62 2 848 58 580 8 500 12 935 2 333 84 1036 4 428 2 66 50 1137 8 338 18 586 14 69 10 510 112 249 2 1144 8 591 4 437 6 1234 6 759 26 512 6 667 2 954 2 72 8 344 16 598 6 76 4 1414 6 254 24 673 42 257 36 1152 24 957 6 1055 2 869 2 81 4 1422 4 675 90 1157 6 873 34 959 4 269 2 1062 4 1327 6 187 16 88 8 1066 2 356 88 778 2 967 248 273 6 274 6 275 4 786 4 369 2 370 18 1338 58 
1391 2 842 2 1339 46 1260 2 664 2 577 6 377 4 378 2 497 2 422 2 244 2 796 44 498 2 848 2 987 2 935 2 620 2 1266 2 384 2 1228 2 7 2 1190 2 428 2 849 2 1350 2 338 2 586 2 587 2 69 2 1275 2 510 20 808 2 709 2 118 2 209 4 1144 6 998 2 552 2 910 2 954 2 72 2 344 4 598 2 1416 2 638 2 257 2 1152 2 258 2 80 4 912 2 1283 2 1206 2 1285 2 307 2 181 2 1422 2 1157 2 406 2 1209 2 1369 2 132 2 525 4 410 38 645 2 184 2 569 2 187 4 1066 2 39 2 1380 2 452 2 356 20 1214 2 832 4 967 44 573 2 1114 2 1430 2 1252 2 1115 2 741 2 787 2 458 2 150 6 232 2 1293 2 1073 4 1121 2 1335 2 460 2 1258 2 1338 2 
1339 78 1260 4 377 10 378 10 796 70 109 32 203 4 113 4 383 4 294 8 1350 2 205 4 704 4 626 16 904 4 709 10 808 4 711 16 997 4 393 4 998 10 910 10 20 4 1202 24 1281 2 559 8 561 4 912 4 1283 4 1363 4 821 4 914 2 1285 4 406 6 409 2 1210 8 410 14 1374 4 569 2 39 6 1378 4 1380 2 1214 2 832 2 834 4 573 2 1114 4 925 8 1291 14 232 4 1122 4 234 4 929 4 577 24 422 2 1394 4 62 2 580 4 848 30 935 2 1130 2 333 24 1131 4 428 2 66 8 1137 4 429 4 338 10 586 6 69 4 1041 2 510 44 1144 6 437 4 1234 4 512 4 954 2 953 4 72 2 344 10 598 4 1315 4 673 8 257 6 178 2 957 4 1055 2 81 4 873 30 1058 2 1157 4 959 4 184 2 1327 4 187 10 1066 2 354 8 356 36 778 2 779 16 1168 2 967 104 274 4 273 4 275 4 696 8 1338 28 
1339 28 327 2 1260 2 577 8 377 6 422 2 796 26 848 12 935 2 113 2 7 2 428 2 1350 2 1137 4 338 2 586 2 69 2 510 14 808 4 1144 4 998 2 667 2 552 2 954 2 72 2 344 6 598 4 257 2 912 2 1283 4 1285 4 406 2 873 6 1157 4 409 2 410 14 184 2 269 2 1062 2 187 6 88 2 1066 2 39 2 1382 10 1214 2 356 14 44 2 832 2 967 40 573 2 275 2 1114 4 925 6 786 2 787 2 232 2 369 2 1025 2 1338 12 
223 2 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 
508 1 1126 1 867 1 1389 1 330 1 897 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.RuntimeException (898,1312) (898,1312) (196,382) (196,382) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.RuntimeException (898,1312) (898,1312) (196,382) (196,382) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.RuntimeException (898,1312) (898,1312) (196,382) (196,382) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.RuntimeException (898,1312) (898,1312) (196,382) (196,382) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_60()Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.PptName:toString()Ljava.lang.String;
daikon.Quant:eltsLTE([II)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.PptName:getSignature()Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:jj_3R_118()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_10()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.ArraysMDE:sum([[I)I
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_81()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndColumn()I
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_88()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_148()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.ValueTuple:isMissingFlow(I)Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:eltsGT([II)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:jj_2_18(I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_104()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.Quant:subsetOf([F[D)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(D[F)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_80()Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_17(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:jj_3_27()Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_3R_73()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.ValueTuple:size()I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_121()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.Quant:eq(DD)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice3:arity()I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_3_28()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParser:jj_3_1()Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsLteIndex([I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_125()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_4()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.Ppt:Ppt()V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.ProglangType:baseIsFloat()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Assert:assertTrue(Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.ModBitTracker:num_vars()I
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_2_25(I)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_12(I)Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:intersection([I[I)[I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:pow(II)I
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_57()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
daikon.ValueTuple:isMissing(I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaParser:jj_3_15()Z
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsGtIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.ModBitTracker:split(I)I
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
jtb.visitor.TreeFormatter:TreeFormatter()V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern:numIntArrays()I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
daikon.PptSlice0:arity()I
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_108()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_12()Z
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:jj_3R_115()Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DDD)D
daikon.ProglangType:isScalar()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_137()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_70()Z
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.Invariant:justified()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.PptSlice1:arity()I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_3_5()Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Debug:logDetail()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(II)Z
daikon.ProglangType:baseIsScalar()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_62()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.ArraysMDE:element_range([I)I
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.Quant:union([I[I)[I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.VarInfo:isDerived()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:memberOf(F[F)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([I)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:jj_3_36()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.Quant:setEqual([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lte(II)Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_100()Z
daikon.VarInfo:isPointer()Z
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:jj_3R_48()Z
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3_30()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3_20()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
jtb.JavaParser:jj_3R_56()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaCharStream:FillBuff()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.MathMDE:gcd(JJ)J
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:readChar()C
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.JavaParser:jj_3R_74()Z
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_4(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.ProglangType:baseIsString()Z
jtb.JavaParser:jj_3R_109()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.visitor.FormatCommand:getCommand()I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfo:relate_var()V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:jj_3R_164()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_17()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_110()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
jtb.JavaParser:jj_3R_133()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.Quant:ne(II)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:has_typeof()Z
jtb.JavaParser:jj_3R_77()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DD)D
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_3R_101()Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParser:jj_3_18()Z
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:isString()Z
daikon.Quant:eq(FF)Z
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_14(I)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.Quant:noDups([I)Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:BeginToken()C
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexLT([I[I)Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:subsetOf([F[F)Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_98()Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_14()Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_99()Z
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:jj_3R_47()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_106()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_3R_55()Z
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_105()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.ProglangType:dimensions()I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.Intern:intern([J)[J
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_180()Z
jtb.JavaParser:jj_3_13()Z
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:isReverse([I[I)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_114()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:jj_3_22()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:hashCode()I
jtb.JavaParser:jj_3R_126()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGT([I[I)Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:memberOf(I[I)Z
utilMDE.Intern:intern([D)[D
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:sum([[D)D
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_136()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.Quant:lexEqual([I[I)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_210()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_16()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_3R_149()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptName:isEnterPoint()Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
utilMDE.FuzzyFloat:lt(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfo:isPrestate()Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.Quant:lexLTE([I[I)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_67()Z
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I | STATEMENT | 12352 | stmt -> ;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_58()Z
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.visitor.FormatCommand:FormatCommand(II)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_3R_87()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.ProglangType:isIntegral()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_96()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
jtb.JavaParser:jj_3R_68()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ModBitTracker:num_samples()I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
jtb.JavaParser:jj_3R_161()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_19()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.Quant:subsetOf([D[D)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.VarInfoName:hasTypeOf()Z
jtb.JavaParser:jj_ntk()I
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_72()Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_119()Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_25()Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_61()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.Invariants:Invariants()V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_2_5(I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.ArraysMDE:sum([D)D
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.Debug:logOn()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_116()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.Quant:setDiff([I[I)[I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:isIOASet()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.Invariant:logOn()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.syntaxtree.NodeListOptional:present()Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_35(I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:min([I)I
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_117()Z
daikon.Quant:memberOf(F[D)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.MathMDE:gcd([I)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:gt(II)Z
jtb.JavaParser:jj_2_36(I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaParser:jj_3R_51()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_169()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.visitor.FormatCommand:getNumCommands()I
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:is_false()Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3_21()Z
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:getFullClassName()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.ProglangType:isFloat()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:sameLength([I[I)Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_29()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([JJ)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_15(I)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
154 2 1914 2 1538 2 217 2 1853 2 1266 4 1475 2 1267 2 40 2 750 2 790 2 412 2 877 2 656 4 1813 2 201 2 621 2 1027 2 1759 2 1062 2 816 2 549 6 385 2 
750 8 615 4 154 5 1363 6 412 4 1914 4 1027 8 1759 4 1062 8 1191 2 34 2 1538 4 1103 6 549 15 1266 12 1016 2 1626 4 
577 2 740 4 709 2 364 2 1223 10 771 10 1258 2 1006 4 900 4 1204 2 535 4 1472 2 1745 2 780 4 952 4 1449 14 1653 62 249 2 1153 2 194 4 685 2 540 2 106 2 1416 2 502 4 202 8 109 4 228 4 175 2 1551 2 482 4 1609 2 1460 2 1211 2 257 4 484 2 148 6 181 2 358 2 965 4 
739 2 237 2 464 2 1593 2 684 2 1661 2 792 2 1831 2 80 2 119 2 
128 2 740 2 670 2 863 2 64 2 1467 2 804 4 1473 2 934 2 1477 4 1358 2 619 2 620 2 202 2 1303 2 256 2 1609 2 1793 2 1796 4 1494 2 456 2 1679 2 30 2 1256 2 272 2 392 2 1319 2 1264 4 278 2 1852 2 1746 2 952 4 842 2 1571 2 1753 2 1391 2 1159 2 1868 2 1578 2 1339 2 1870 2 422 4 180 2 1525 2 
154 22 1914 16 1538 16 496 6 1264 4 217 18 1743 4 1448 2 1568 2 1503 8 1855 6 221 2 72 2 1266 48 1508 2 1055 2 1626 4 750 32 615 4 1299 4 790 4 1363 6 412 16 170 6 1238 4 656 6 1027 32 1759 16 1062 32 816 2 572 4 818 6 144 4 1029 4 548 6 549 53 1103 6 422 4 231 2 
148 2 358 2 202 2 
788 2 667 22 872 10 566 2 57 2 1035 2 755 2 272 2 1028 2 815 2 399 2 102 2 1388 2 373 2 
306 2 176 2 1763 4 1264 2 1852 2 422 2 718 2 1175 2 1507 2 
665 2 1017 2 310 2 59 6 654 2 743 2 275 2 760 2 1686 2 1182 6 387 6 
1374 2 267 2 580 2 1172 6 1173 2 1380 4 570 6 1444 6 437 6 1264 2 422 2 1230 4 1496 2 
520 4 154 12 1038 4 1914 10 899 8 1538 10 34 4 278 2 217 8 1264 6 1855 8 1409 2 1266 26 1720 2 1508 2 647 2 280 8 750 16 790 6 1238 6 412 10 1860 2 656 10 1027 16 1759 10 1062 16 816 4 549 28 422 6 206 2 
686 6 690 4 
684 2 
1289 2 
1264 2 1143 2 
1264 4 657 2 1063 2 
1709 8 487 32 1220 12 1466 2 241 2 1350 3 1590 1 745 2 5 4 611 1 1592 2 499 2 250 2 8 1 869 2 1478 2 1601 2 1364 2 757 2 986 2 1485 2 142 1 881 2 883 2 989 16 1489 16 1371 1 1838 2 627 2 519 8 268 6 26 1 1843 3 1377 3 1000 2 768 2 1002 2 1845 2 638 1 156 2 1259 1 640 3 773 2 1264 34 536 2 35 3 904 2 905 8 1151 2 1014 2 402 6 1623 2 1018 2 649 5 1269 2 1750 2 1270 2 409 2 413 2 1155 2 1861 1 1629 3 1271 4 1514 2 45 2 1517 4 658 2 1760 2 288 3 49 2 1867 2 422 32 1875 2 1876 2 1637 2 1527 2 1400 2 1169 2 1640 2 184 2 430 2 803 2 1283 2 61 2 1043 2 1405 2 1044 2 1045 2 1776 2 932 2 1052 1 1780 2 1297 2 1654 24 1412 12 1900 2 1184 2 308 2 1301 2 810 2 1547 1 1305 2 569 4 1549 24 1789 2 203 2 573 2 1552 4 82 2 1668 2 697 6 1792 2 574 1 319 16 820 2 1795 3 1426 2 1196 32 1911 2 831 4 1681 1 1564 4 1076 2 214 2 715 1 1807 4 836 2 584 1 718 2 472 1 1087 2 1922 2 586 2 478 2 227 1 111 2 726 16 1814 2 1815 2 1701 3 1213 2 1340 2 852 6 122 2 1463 2 1342 3 1465 3 1585 2 967 3 
975 6 1468 4 494 26 977 8 493 4 1470 386 1471 94 6 2 1476 2 500 30 9 4 12 2 503 198 984 2 1482 2 1484 112 15 2 1486 4 987 2 509 24 988 8 511 2 1491 2 992 2 20 2 514 2 515 2 1495 26 1497 20 24 4 1498 16 523 30 524 14 999 4 997 2 1499 2 527 26 528 2 1007 2 1009 2 33 30 1011 2 534 26 36 6 1505 26 37 12 1015 2 538 2 41 6 1510 28 542 8 1023 82 1024 4 1513 4 1025 2 1026 4 545 2 1515 2 1030 4 1522 14 1524 68 52 6 552 6 53 6 54 2 1032 4 1528 2 55 2 58 2 1036 182 554 26 1040 8 1042 4 63 16 1533 2 1534 2 1536 30 1535 2 67 48 558 6 71 2 1050 2 1051 8 1540 46 563 2 1542 2 1054 2 1543 2 75 2 76 2 1544 4 77 2 1057 2 78 328 1058 2 1545 244 1059 30 79 8 1064 26 1550 4 1065 46 83 20 85 198 1067 2 1557 2 575 6 1559 10 1558 6 1068 132 1069 2 1560 30 576 2 87 2 1562 2 91 70 1563 6 92 566 1075 2 1565 6 1077 2 1078 2 1079 8 1081 22 97 60 98 4 1567 2 101 6 103 50 105 28 1092 6 1093 2 1095 46 1097 6 1101 376 1577 6 114 8 1579 2 1106 4 120 4 601 2 121 4 1108 2 1582 2 1110 2 1584 112 126 2 606 2 1114 198 1115 2 609 86 610 6 1121 2 138 2 614 4 1597 160 1125 14 1598 6 1600 6 618 6 1602 2 141 224 1608 6 623 4 1610 2 1611 20 149 2 628 2 629 6 631 6 1613 30 1140 14 633 2 153 6 1142 12 1615 2 637 2 1145 2 157 2 642 32 641 2 159 204 1149 46 1620 244 164 84 1624 6 166 228 168 6 652 2 653 2 655 328 174 2 173 2 1162 8 1635 2 1634 2 1164 6 179 26 1638 6 1642 2 669 2 1171 2 186 4 673 64 1177 2 674 10 675 2 677 6 1646 6 1647 336 1181 60 681 6 1652 2 683 2 1660 2 1185 2 687 4 1187 28 1188 4 1663 2 199 2 198 26 1193 2 699 48 1671 2 702 4 1195 4 208 2 209 30 1198 2 213 2 710 4 713 4 714 6 1682 2 1201 8 716 6 1205 4 719 2 1687 2 1690 2 1693 4 1207 46 1696 6 1698 2 1210 2 733 4 735 2 1707 2 1217 4 736 2 737 2 235 2 741 8 236 244 1222 290 239 2 240 4 1713 2 1714 6 242 4 243 2 244 2 1228 4 246 2 248 2 1718 4 748 88 252 4 1237 52 1724 28 1725 2 1240 2 1241 60 1726 30 254 2 1729 20 758 2 761 106 1244 8 260 2 1246 2 262 2 263 6 765 2 265 66 1736 132 767 6 269 198 270 10 1254 2 1257 2 274 2 1260 6 1742 198 775 2 1264 10 1261 2 1263 2 1744 4 1268 2 785 4 283 2 1756 2 1272 2 794 20 1758 4 1274 6 286 4 795 192 287 6 1276 2 797 6 1761 4 289 30 1764 4 798 432 799 2 1279 6 1770 2 1282 22 1284 74 1286 4 297 2 805 2 1288 2 1775 2 1777 2 1290 2 1779 2 1293 2 1295 2 1297 2 806 6 304 2 1784 2 312 30 316 4 817 12 1800 4 1802 22 1313 2 326 2 329 4 331 4 1805 24 1318 2 1806 2 333 2 840 2 337 2 1321 12 1324 2 1325 10 1327 6 1326 2 342 6 845 2 343 4 1328 54 1810 2 344 2 1334 6 347 4 1335 8 350 4 351 4 1341 2 357 26 360 2 1343 4 1821 2 856 12 857 4 860 4 861 6 365 118 1347 2 1825 6 369 204 866 140 1353 18 370 2 1355 6 371 2 1357 8 874 6 873 2 1368 4 885 2 1837 4 1839 6 1841 2 389 2 893 6 894 16 895 2 1379 2 897 2 1847 20 901 8 395 2 1383 14 397 2 902 4 1854 4 1387 4 907 6 1857 4 1389 6 909 8 410 12 910 4 414 182 1393 4 1863 2 1864 14 1865 198 1395 18 419 6 422 10 1871 2 1873 8 918 18 919 112 1398 12 920 12 424 4 423 6 1877 6 425 2 427 2 921 2 1401 64 1881 12 925 10 1883 6 1887 2 1404 14 1888 2 1406 2 929 4 438 98 1895 4 931 6 1893 4 1407 10 441 2 1408 2 1896 2 1410 106 445 4 1899 12 935 4 936 2 446 6 1414 112 448 26 1417 92 1905 12 1421 2 450 2 455 2 457 2 1427 8 942 198 459 20 945 432 461 20 947 2 1435 2 1437 4 462 6 1440 4 463 28 949 2 1442 6 467 4 950 192 468 6 1446 4 1917 22 471 6 473 60 474 2 953 2 1920 2 1453 4 955 6 1455 4 476 12 1456 6 1925 6 960 2 481 16 483 2 485 198 962 4 963 6 1934 6 
1674 1 307 2 108 2 202 2 982 2 
749 2 307 2 959 2 108 2 202 2 982 2 
1298 2 1617 2 520 2 108 2 202 2 725 2 
1473 2 1107 2 
520 2 582 2 108 2 202 2 
145 2 841 2 
626 2 1233 2 
1628 2 273 2 
1755 2 13 2 
626 2 1120 2 1755 2 
1396 2 626 2 1755 2 
626 2 1755 2 1294 2 
431 2 626 2 1755 2 
1803 6 1452 6 1657 2 108 2 202 2 624 2 355 2 890 2 
1203 2 1041 2 
1298 2 520 2 469 2 959 2 108 2 202 2 725 2 
1298 2 830 2 725 2 
1298 2 1084 2 725 2 
1247 2 1041 2 1886 2 
1298 2 725 2 
211 2 1041 2 
7 2 725 2 
1859 2 1041 2 1886 2 
418 2 273 2 1886 2 
833 2 1755 2 1886 2 
841 2 1886 2 232 2 
1722 2 626 2 1886 2 
961 2 1041 2 
1133 2 725 2 
1019 2 273 2 
1537 2 1755 2 
1308 2 841 2 
626 2 444 2 
1432 2 1041 2 
1047 2 626 2 
841 2 557 2 
1755 2 384 2 
273 2 406 2 
1859 2 1338 2 1041 2 1886 2 
1859 2 1338 2 421 2 1041 2 1886 2 
1041 2 1265 2 1886 2 
1250 2 1041 2 1886 2 
1675 2 1833 2 927 2 694 2 
1124 2 667 6 858 2 200 2 756 2 812 2 1727 2 1158 2 559 2 230 2 1520 2 298 4 1445 2 837 4 1083 2 562 2 498 2 1767 2 
1365 2 1886 2 
1820 2 1886 2 725 2 
432 2 725 2 
478 2 
487 6 738 2 1220 8 241 2 1229 4 5 4 250 2 869 4 871 2 1601 2 143 4 881 2 1489 6 1838 2 627 2 150 2 519 2 268 4 1000 2 1002 2 1845 2 155 2 638 2 1264 26 1384 2 904 2 402 6 1623 2 1269 2 1750 2 1271 4 1517 4 658 6 1760 2 422 26 1872 2 1876 2 1169 2 184 2 430 2 672 2 1043 2 442 2 1297 2 1411 2 1780 2 1412 8 1184 2 809 2 1301 2 569 2 1305 2 203 2 1552 4 697 2 1792 2 1799 2 1196 4 1911 2 831 2 1681 2 1076 2 1807 2 717 2 718 2 472 4 1087 2 586 2 1692 2 226 2 1812 2 1814 2 111 2 851 2 852 2 122 2 
487 6 1220 8 241 2 1229 4 5 4 1592 2 250 2 869 4 871 2 1601 2 1366 2 143 4 881 2 1489 6 1838 2 627 2 993 2 150 2 519 2 268 6 1000 2 1002 2 1845 2 155 2 638 2 1264 26 904 2 402 6 1623 2 1269 2 1750 2 1271 4 1517 4 658 6 1760 2 422 26 1872 2 1876 2 1169 2 184 2 430 2 672 2 1043 2 1405 2 442 2 1297 2 1411 2 1780 2 1412 8 1184 2 809 2 1301 2 1302 2 569 2 1305 2 203 2 1552 4 697 2 1792 2 1799 2 1196 4 1911 2 831 2 1681 2 1076 2 1807 2 717 2 718 2 472 1 1087 2 586 2 1692 2 226 2 1814 2 111 2 1815 2 851 2 852 2 122 2 
1715 2 
939 2 356 2 
665 2 1399 2 184 2 430 2 59 6 1039 2 1884 2 743 4 1043 2 5 2 193 2 682 2 1182 6 1297 2 1296 2 1360 2 875 4 1728 2 692 2 203 2 17 10 1552 2 1490 8 698 2 1372 4 627 2 513 2 821 2 387 6 1425 2 891 2 1375 4 1248 2 998 4 1317 2 275 4 1502 2 216 2 1382 2 470 2 1264 12 1447 8 1385 2 1622 2 402 4 1017 2 1269 2 791 2 590 2 1330 4 1096 2 1757 2 1100 2 914 2 729 2 1519 4 290 2 422 6 291 2 1165 2 
665 2 1399 2 184 2 430 2 59 8 1039 2 743 4 1043 2 5 2 193 2 682 2 1182 8 1297 2 1296 2 1360 2 875 4 1728 2 14 4 692 2 203 2 1552 2 695 2 17 10 1490 8 698 2 1372 4 627 2 513 2 821 2 1425 2 387 6 891 2 1375 4 1248 2 998 4 1317 2 275 4 1502 2 216 2 1382 2 470 2 1264 12 1447 8 1686 2 1622 2 402 4 1017 2 1269 2 791 2 590 2 1330 4 1096 2 1757 2 1100 2 914 2 729 2 1519 4 290 2 422 6 291 2 1165 2 600 2 
1360 2 875 2 791 2 743 2 1757 2 1100 2 275 2 729 2 216 2 1519 4 290 2 1372 4 1165 2 193 2 513 2 1182 2 1425 2 387 2 
665 2 1399 2 184 2 430 2 59 6 1039 2 1884 2 743 4 1043 2 5 2 193 2 682 2 1182 6 1297 2 1296 2 1360 2 875 4 1728 2 692 2 203 2 17 6 1552 2 1490 4 698 2 1372 4 627 2 513 2 821 2 387 4 1425 2 891 2 1375 4 1248 2 998 4 1317 2 275 4 1502 2 216 2 1382 2 470 2 1264 12 1447 4 1385 2 1686 2 1622 2 402 4 1269 2 791 2 590 2 1330 4 1096 2 1757 2 1100 2 914 2 729 2 1519 4 290 2 422 6 291 2 1165 2 
665 2 1399 2 184 2 430 2 59 6 1039 2 1884 2 743 4 1043 2 5 2 193 2 682 2 1182 4 1297 2 1296 2 1360 2 875 4 310 2 1728 2 692 2 203 2 17 6 1552 2 1490 4 698 2 1372 4 627 2 513 2 821 2 387 6 1425 2 891 2 1375 4 1248 2 998 4 1317 2 275 4 1502 2 216 2 1382 2 470 2 1264 12 1447 4 1385 2 1622 2 402 4 1269 2 791 2 590 2 1330 4 1096 2 1757 2 1100 2 914 2 729 2 1519 4 290 2 422 6 291 2 1165 2 
665 2 1399 2 184 2 430 2 59 6 1039 2 1884 2 743 4 1043 2 5 2 193 2 682 2 1182 6 1297 2 1296 2 1360 2 875 4 1728 2 692 2 203 2 17 6 1552 2 1490 4 698 2 1372 4 627 2 513 2 821 2 387 6 1425 2 891 2 1375 4 1248 2 998 4 1317 2 275 4 1502 2 216 2 1382 2 470 2 1264 12 1447 8 1385 2 1622 2 402 4 1017 2 1269 2 791 2 590 2 1330 4 1096 2 1757 2 1100 2 914 2 729 2 1519 4 290 2 422 6 291 2 1165 2 
665 2 1399 2 184 2 430 2 59 8 1039 2 1884 2 743 4 1043 2 5 2 193 2 682 2 1182 6 1297 2 1296 2 1360 2 875 4 310 2 1728 2 692 2 203 2 1552 2 17 10 1490 8 698 2 1372 4 627 2 513 2 821 2 387 8 1425 2 891 2 1375 4 1248 2 998 4 1317 2 275 4 1502 2 216 2 1382 2 470 2 1264 12 1447 8 1385 2 1622 2 402 4 1017 2 1269 2 791 2 590 2 1330 4 1096 2 1757 2 1100 2 914 2 729 2 1519 4 290 2 422 6 291 2 1165 2 
665 2 1399 2 184 2 430 2 59 6 1039 2 1884 2 743 4 1043 2 5 2 193 2 682 2 1182 6 1297 2 1296 2 1360 2 875 4 1728 2 692 2 203 2 17 10 1552 2 1490 8 698 2 1372 4 627 2 513 2 821 2 387 6 1425 2 891 2 1375 4 1248 2 998 4 1317 2 275 4 1502 2 216 2 1382 2 470 2 1264 12 1447 8 1385 2 1622 2 402 4 1017 2 1269 2 791 2 590 2 1330 4 1096 2 1757 2 1100 2 914 2 729 2 1519 4 290 2 422 6 291 2 1165 2 
486 6 1 6 487 8 1220 4 743 4 4 1 1229 4 5 4 981 2 250 2 1232 2 11 2 1239 6 1728 2 17 2 1489 6 513 2 764 6 519 2 1248 2 268 6 1251 2 998 4 1000 2 1002 2 275 4 530 7 1502 2 774 2 1264 46 1269 2 44 1 791 2 1511 2 1271 4 793 2 1757 2 1517 4 1516 2 1519 4 290 2 291 2 59 12 1039 2 1043 2 1289 6 1297 2 1296 2 1781 2 303 6 310 4 1783 2 567 2 569 2 1305 2 313 6 1063 6 1552 4 1792 2 1555 1 821 2 831 2 1566 6 1076 2 330 2 1317 2 1807 2 99 6 586 2 587 8 1330 8 590 4 1096 2 1100 2 346 2 1814 2 1815 2 352 6 851 2 852 2 123 6 1345 2 1589 2 1118 7 1354 1 871 2 1360 2 875 4 1601 12 381 2 881 2 1372 4 627 2 891 2 387 8 388 2 1375 6 1614 2 1143 6 1845 2 1382 2 1385 2 904 2 1622 2 402 6 1623 2 1154 1 1390 2 658 6 914 4 177 2 422 24 1872 2 1165 2 1636 10 1876 2 664 2 1639 6 665 4 1399 2 1169 2 184 2 922 2 430 2 1405 2 1890 2 679 1 193 2 682 2 1182 4 1412 4 1903 2 1190 2 1189 1 692 2 203 2 204 1 697 2 698 2 1910 2 701 2 1425 2 703 4 1196 2 1911 2 1429 1 1430 4 216 2 470 2 717 4 1447 2 718 2 1450 2 223 6 723 2 729 2 1459 6 1931 2 1932 2 1462 2 
486 6 1 6 487 8 1345 2 1220 8 743 4 1589 2 1229 4 5 4 981 2 1232 2 250 2 869 2 871 2 1360 2 875 4 1601 12 11 2 1239 6 1728 2 381 2 881 2 17 2 1489 6 1372 4 627 2 764 6 513 2 388 2 387 8 891 2 519 2 1375 6 1248 2 1614 2 1251 2 268 6 998 4 1143 6 1000 2 1002 2 1845 2 275 4 1502 2 774 2 1382 2 777 2 1264 48 1385 2 904 2 1622 2 402 6 1623 2 1017 4 1390 2 1269 2 791 2 1511 2 1271 4 793 2 1757 2 1516 2 658 6 1517 4 914 4 1519 4 177 2 290 2 422 26 1872 2 291 2 1165 2 1636 10 1876 2 1639 6 664 2 1169 2 1399 2 665 4 184 2 922 2 430 2 59 12 1039 2 1043 2 1405 2 1890 2 1289 6 193 2 1182 8 682 2 1296 2 1297 2 1781 2 303 6 1412 8 1783 2 567 2 1903 2 1190 2 313 6 1305 2 569 4 1063 6 692 2 203 2 1552 4 697 2 1792 2 698 2 821 2 701 2 1910 2 1425 2 703 4 1196 2 1911 2 1430 4 831 4 1566 6 330 2 1076 2 1317 2 1807 4 216 2 717 4 470 2 99 6 1447 6 718 2 1450 2 586 2 223 6 587 8 590 4 1330 8 1096 2 723 2 346 2 1100 2 1814 2 112 2 1459 6 729 2 1815 2 1931 2 1932 2 352 6 851 2 1462 2 852 2 123 6 
486 6 1 6 487 8 1345 2 1220 8 743 4 1589 2 1229 4 5 4 981 2 1232 2 250 2 869 2 871 2 1360 2 875 4 1601 12 11 2 1239 6 1728 2 381 2 881 2 17 6 1489 6 1490 4 1372 4 627 2 764 6 513 2 388 2 387 8 891 2 519 2 1375 6 1248 2 1614 2 1251 2 268 6 998 4 1143 6 1000 2 1002 2 1845 2 275 4 1502 2 774 2 1382 2 777 2 1264 48 1385 2 904 2 1622 2 402 6 1623 2 1017 4 1390 2 1269 2 791 2 1511 2 1271 4 793 2 1757 2 1516 2 658 6 1517 4 914 4 1519 4 177 2 290 2 422 26 1872 2 291 2 1165 2 1636 10 1876 2 1639 6 664 2 1169 2 1399 2 665 4 184 2 922 2 430 2 59 12 1039 2 1043 2 1405 2 1890 2 1289 6 193 2 1182 8 682 2 1296 2 1297 2 1781 2 303 6 1412 8 1783 2 567 2 1903 2 1190 2 313 6 1305 2 569 4 1063 6 692 2 203 2 1552 4 697 2 1792 2 698 2 821 2 701 2 1910 2 1425 2 703 4 1196 2 1911 2 1430 4 831 4 1566 6 330 2 1076 2 1317 2 1807 4 216 2 717 4 470 2 99 6 1447 6 718 2 1450 2 586 2 223 6 587 8 590 4 1330 8 1096 2 723 2 346 2 1100 2 1814 2 112 2 1459 6 729 2 1815 2 1931 2 1932 2 352 6 851 2 1462 2 852 2 123 6 
486 6 1 6 487 12 1220 10 743 4 744 6 1229 6 5 4 981 2 250 2 1232 2 11 2 1239 6 1728 2 17 6 1489 8 1490 4 513 2 764 12 519 4 1248 2 268 6 1252 2 1251 2 998 4 1000 2 1002 2 275 4 1502 2 774 2 532 6 777 2 1264 52 1017 4 1269 2 791 2 1511 2 1271 4 793 2 1757 2 1275 2 1517 4 1516 2 1519 4 290 2 291 2 801 6 59 16 1039 2 1043 2 1289 12 1296 2 1297 2 1781 2 303 12 310 2 1783 2 567 2 569 4 1305 2 313 6 1063 12 1552 4 1792 2 821 2 321 6 323 6 831 4 1566 6 1076 2 330 2 1317 2 1807 4 99 6 586 2 587 8 1330 8 590 4 1096 2 1100 2 346 2 1814 2 112 2 1815 2 352 6 851 2 852 4 123 6 366 6 1589 2 1356 2 374 6 869 2 871 2 1360 2 875 4 1601 10 381 2 881 2 1132 2 1372 4 627 2 891 2 387 10 1138 2 388 2 1375 6 1614 2 1143 12 1845 2 1382 2 1385 2 904 2 1622 2 402 6 1623 2 1390 2 411 2 658 8 914 4 417 2 177 2 422 24 1872 4 1165 2 1636 8 1876 2 664 2 1639 12 665 4 1399 2 1169 2 184 2 922 2 430 2 1405 2 1890 2 190 6 193 2 682 2 1182 10 1412 10 1903 2 1190 2 692 2 203 2 697 4 698 2 1670 2 701 2 1910 2 1425 2 703 4 1196 4 1911 2 1430 4 216 2 470 2 717 4 1447 6 718 2 1686 2 1450 2 223 6 723 2 729 2 1459 6 1931 2 1932 2 1462 2 1706 6 
1399 2 665 2 1375 2 1248 2 998 2 59 4 1039 2 743 4 1317 2 275 4 1382 2 216 2 1264 4 470 2 1385 2 1447 6 1622 2 682 2 1182 6 1296 2 1017 2 1360 2 791 2 1330 2 1100 2 17 4 1519 2 1490 4 290 2 698 2 1372 2 513 2 821 2 1425 2 387 6 
487 8 1345 2 743 4 1229 4 5 4 247 2 250 2 871 2 1360 2 1601 4 1830 2 881 2 17 2 1489 6 1372 2 627 2 513 2 387 6 891 2 1375 2 1248 2 268 6 998 2 1000 2 1002 2 1845 2 275 4 773 2 1382 2 1264 28 1851 2 1385 2 904 2 1622 2 402 6 1623 2 1017 2 1269 2 791 2 1271 4 1517 4 658 6 1519 2 290 2 422 24 1636 2 1876 2 1399 2 665 2 1169 2 184 2 430 2 803 2 59 4 1039 2 1043 2 1405 2 1182 6 682 2 1297 2 1296 2 1664 2 1420 3 203 2 1552 4 697 3 1792 2 698 2 821 2 1425 2 1426 2 1196 3 1911 2 1076 2 1317 2 216 2 470 2 717 2 1447 6 718 2 586 2 1330 2 478 2 1100 2 1814 2 1815 2 851 2 852 3 361 2 
1399 2 131 2 682 2 
1399 2 131 2 682 2 
487 2 1220 4 743 4 131 2 1351 2 1116 2 5 4 980 2 250 2 871 2 1360 4 875 4 1601 4 378 2 1728 2 1487 2 17 6 1489 2 1490 4 1372 2 627 2 387 12 1375 4 268 6 998 2 1000 2 1002 2 1845 2 896 2 275 4 774 2 1264 24 904 2 1748 2 402 6 1623 2 648 2 1017 4 1269 2 1271 4 1757 2 1517 4 658 2 914 4 1519 2 290 2 422 16 1397 2 1636 2 1876 2 664 2 1399 6 1169 2 665 4 184 2 430 2 59 16 672 4 1043 2 1405 2 1541 4 193 2 682 4 1182 12 1297 2 1412 4 1415 2 310 4 938 2 1786 2 1903 2 1304 2 1305 4 569 4 691 2 692 2 203 2 451 2 1552 4 454 2 1792 2 703 2 1196 2 1911 2 1430 2 831 4 1566 2 1076 2 1317 2 1807 4 216 2 717 6 470 2 1447 6 718 2 100 4 472 2 1686 4 586 2 590 2 1330 4 1096 2 593 2 1814 2 1815 2 851 2 
703 2 88 2 1601 2 721 2 1566 2 1304 2 691 2 729 2 1264 4 422 2 356 2 627 2 1636 2 551 2 1748 2 701 2 1450 2 
487 2 1220 4 743 4 131 2 1351 4 491 2 5 4 612 2 250 2 871 2 1360 4 875 4 1601 2 378 2 1728 2 1487 2 17 6 1735 2 1489 2 1490 4 1372 2 627 2 1492 2 387 12 1375 4 268 6 998 2 1000 2 1002 2 1845 2 896 2 275 4 1502 2 774 2 1264 24 904 2 1748 2 402 6 1623 2 648 2 1017 4 1269 2 1271 4 1757 2 1517 4 658 2 914 4 1519 2 290 2 422 16 1397 2 1876 2 664 2 1399 6 1169 2 665 4 184 2 430 2 59 16 672 4 1043 2 1405 2 1541 4 193 2 682 4 1182 12 1297 2 1412 4 310 4 938 2 1903 2 1304 2 1305 4 569 4 691 2 692 2 203 2 451 2 1552 4 454 2 1792 2 1196 4 1911 2 1430 2 831 4 1566 2 1076 2 1317 2 1807 4 216 2 717 6 470 2 1447 6 718 2 100 4 1686 4 586 2 590 4 1330 4 1096 2 850 2 593 2 1814 2 1815 2 851 2 
487 2 1220 4 743 4 131 2 608 2 1351 2 5 4 250 2 871 2 1360 4 875 4 1601 4 378 2 1728 2 1487 2 17 6 383 2 1489 2 1490 4 1372 2 627 2 387 12 1375 4 268 6 998 2 1000 2 1002 2 1845 2 896 2 275 4 1502 2 774 2 1264 24 904 2 1748 2 402 6 1623 2 648 2 1017 4 1269 2 1271 4 1757 2 1517 4 658 2 914 4 1519 2 290 2 422 16 1397 2 1636 2 1876 2 664 2 1399 6 1169 2 665 4 184 2 430 2 59 16 1174 2 672 4 1043 2 1405 2 1541 4 193 2 682 4 1182 12 1297 2 1412 4 310 4 938 2 1903 2 1304 2 1305 4 569 4 691 2 692 2 203 2 451 2 1552 4 454 2 1792 2 703 2 1196 2 1911 2 1430 2 831 4 1566 2 1076 2 712 2 1317 2 1807 4 216 2 717 6 470 2 1447 6 718 2 100 4 472 1 1686 4 586 2 590 4 1330 4 1096 2 593 2 1814 2 1815 2 851 2 233 2 
0 2 968 2 969 2 2 2 970 2 971 2 973 2 974 2 976 2 3 3 5 8 978 78 979 2 981 4 983 2 10 2 985 112 16 2 989 14 990 2 19 2 18 4 22 2 994 2 23 80 25 2 995 24 26 1 27 6 996 10 28 8 1000 82 29 24 1002 2 1001 166 1004 10 31 2 1005 102 1008 2 1006 2 1010 2 1012 2 1013 2 35 2 1014 14 38 124 39 2 1018 2 42 2 1020 2 1021 2 1022 16 45 2 46 2 1027 12 47 2 48 54 49 2 50 1 1031 2 51 2 56 2 1033 2 1034 2 1037 4 60 9 61 2 62 2 1043 2 66 2 65 2 1044 2 1045 2 69 76 70 20 1048 2 1049 2 1052 1 1053 22 73 22 1055 4 1056 2 1062 12 82 2 81 2 84 3 86 2 1070 6 89 20 1071 2 1072 2 90 2 1073 2 1074 6 94 1 95 2 1076 2 1080 4 96 2 1082 2 1086 2 1085 78 1088 2 1089 2 1090 10 104 78 1094 2 107 2 1099 10 110 38 1102 2 1103 6 116 2 117 2 115 2 118 2 1105 2 124 34 1109 2 125 21 127 38 130 2 1112 24 1113 2 132 12 133 78 134 3 135 2 1119 3 1122 6 137 2 140 4 1127 6 1128 8 1129 2 146 2 1132 2 1131 3 1130 2 147 158 1134 2 1135 2 1137 2 1138 2 150 4 151 2 152 2 154 10 1141 18 1146 1 155 2 156 2 1148 4 158 3 161 3 162 3 163 2 1152 2 1151 2 165 2 167 2 169 2 1155 2 171 2 1156 10 1157 6 172 2 1159 2 1160 38 1163 4 177 8 1167 2 1168 4 182 2 1169 2 183 2 184 2 185 2 187 38 1176 2 188 38 1178 3 191 2 192 2 1179 38 1183 2 1186 1 197 2 203 2 205 3 1194 2 207 2 1196 110 210 4 1197 2 1199 2 1200 2 214 2 215 3 1202 2 217 6 219 2 1206 2 222 2 224 2 1208 78 1209 2 226 2 227 1 229 2 1214 2 1212 2 1215 14 234 3 1218 20 238 2 1220 183 1225 2 1227 2 245 2 1229 12 247 2 1231 2 1232 2 250 84 251 80 253 80 1235 8 1238 4 1242 4 255 38 1243 2 257 2 258 2 259 2 1245 156 264 36 266 2 1249 2 268 1116 1252 2 1251 2 1253 2 1255 20 271 3 1259 1 276 10 1264 1174 279 1 1266 18 1269 2 281 2 282 2 1270 2 1271 480 1273 2 285 4 284 2 1277 2 1278 170 1280 2 1281 2 293 78 294 2 295 2 1285 1 299 2 1287 3 302 2 301 2 300 2 1291 2 1292 4 1297 2 305 2 309 8 308 2 1300 2 311 2 314 2 1305 18 1306 2 315 2 1307 2 317 10 318 2 1309 2 319 100 1310 2 1311 3 324 2 322 2 325 2 1314 80 1315 2 328 2 1316 8 330 2 1320 78 332 38 334 2 336 4 335 80 338 3 339 2 1322 4 1323 38 340 12 1329 2 345 78 1333 8 346 2 1331 38 1336 2 348 76 1337 8 354 2 353 2 1340 2 359 34 1342 2 361 2 1344 80 363 40 1346 2 1348 83 367 4 1349 2 368 2 1350 2 1352 2 372 2 1356 2 375 16 376 12 1361 80 377 2 1362 2 1364 2 1367 2 1369 2 1370 2 386 66 390 2 1373 2 1376 2 1377 2 1381 2 393 2 394 2 396 2 398 8 1386 38 402 10 403 80 404 4 405 4 408 80 411 2 412 6 1392 38 413 2 1394 3 415 1 416 7 417 2 420 2 422 966 426 6 428 38 429 2 430 2 1403 34 433 2 434 2 1405 318 436 26 440 4 442 2 1411 2 1412 178 1413 60 447 2 449 76 1418 2 1419 2 1420 2 452 2 453 3 1423 2 1428 38 458 80 460 2 1434 60 1433 36 1438 2 1439 3 465 3 466 2 1441 3 1443 2 472 4 1451 3 1454 2 475 2 477 2 1457 2 480 234 479 4 1458 80 1461 2 1462 8 1464 2 487 126 488 2 489 78 1466 2 490 2 492 2 1469 2 496 6 495 2 1474 2 499 16 1478 2 1479 3 1481 8 504 4 1483 2 506 2 507 78 508 4 1488 2 510 2 1489 32 512 2 1493 2 516 2 517 78 518 2 519 84 522 2 521 2 525 4 526 2 1500 16 1501 4 533 6 536 2 535 2 537 4 1503 8 1506 2 1504 2 1508 2 539 3 541 2 1512 1 543 2 1514 2 544 78 1516 2 1517 402 547 2 1518 2 549 24 1521 2 550 2 1523 22 553 2 1527 2 1529 2 1530 2 1531 2 556 10 1532 2 1538 6 1539 3 560 2 561 2 564 2 565 8 568 60 1547 13 1549 15 572 4 571 4 573 2 1552 8 1554 2 1556 2 1561 38 578 24 579 22 1564 32 581 26 1568 2 1569 2 584 15 583 2 585 2 586 2 1572 2 588 3 1573 2 591 2 1574 2 1575 2 595 2 1576 4 596 2 597 2 1580 2 599 2 1581 32 1583 2 1585 2 602 120 604 2 605 2 1587 2 1586 2 1588 6 607 3 1589 8 1591 2 613 3 1594 2 1595 2 1596 2 616 2 1599 2 1601 10 617 112 1603 2 1607 14 1605 80 622 2 625 2 627 2 1612 2 630 10 632 80 635 2 636 2 638 3 1616 14 639 3 640 3 643 2 1618 2 644 2 1621 10 645 2 646 2 1623 2 1625 14 1626 4 1627 2 651 558 1630 3 1629 2 658 18 1632 80 659 2 660 2 662 2 1636 2 663 2 1640 2 666 38 1641 2 667 6 668 2 1643 2 676 3 678 2 1645 2 680 3 1651 8 1654 61 1655 2 1656 78 1659 2 1662 3 689 2 688 2 1664 2 1665 60 1666 2 1667 234 696 2 697 16 1669 2 1670 4 1672 2 1673 4 704 4 705 80 1677 2 1676 2 1678 2 706 36 1680 2 1681 2 707 2 708 2 711 3 715 1 1684 8 717 2 1683 2 718 8 720 38 1689 16 1692 2 1695 20 1694 2 1697 3 723 22 726 52 1700 2 728 2 727 2 730 78 1701 2 1702 2 1703 2 732 2 731 20 1704 2 1705 2 734 2 1708 2 1709 14 742 2 1710 4 1712 2 1717 2 747 2 1719 4 750 12 1723 2 752 24 751 2 753 38 754 3 757 2 1730 2 1732 2 1731 104 759 2 1734 3 762 158 763 4 766 2 1737 2 768 2 1738 10 770 2 772 2 1739 10 1740 2 1741 3 776 2 778 2 779 2 780 2 1747 2 1749 66 782 2 784 2 783 3 787 10 1751 2 789 2 1752 78 1754 4 1759 6 796 2 1762 2 1766 2 1765 2 1768 2 1769 2 802 78 1771 3 1774 78 1776 2 1778 48 807 2 1782 2 808 2 809 2 1785 3 811 4 1787 2 1789 2 814 2 1788 2 1790 2 1791 2 819 2 1792 2 1795 3 1794 3 1798 2 1797 2 822 6 1799 86 823 2 1801 1 824 2 825 2 826 2 827 40 828 2 832 10 1804 2 834 2 835 38 836 2 838 2 839 2 1809 2 844 2 843 2 846 18 1811 4 847 2 849 2 848 18 1814 8 1815 328 1816 2 1817 10 852 46 853 156 854 2 855 2 1818 38 1819 3 1822 4 859 4 1823 4 862 2 864 6 865 4 1827 2 867 2 1828 4 868 2 870 24 871 2 1829 2 878 2 1830 2 879 2 1832 2 881 2 880 2 882 2 1834 40 883 2 886 2 884 106 887 2 888 3 1840 2 1842 2 892 18 1843 2 1844 2 1845 2 1846 2 900 2 1850 2 1849 2 903 2 904 4 1855 6 905 14 1856 2 906 38 908 2 1862 2 911 22 1866 95 913 2 1867 14 915 24 1869 4 916 38 917 3 1872 46 1875 2 1876 2 1879 5 922 16 1880 38 923 2 924 3 1882 2 1885 12 926 2 1889 20 928 6 1891 2 1892 2 1894 158 930 11 1898 1 1897 4 1900 2 1901 156 937 2 1902 3 1904 2 1906 82 1907 2 940 22 1909 2 1910 2 941 2 1911 2 944 2 943 2 946 2 1912 2 1914 6 1913 2 1915 2 948 4 1916 78 1918 2 1919 2 1921 2 1922 2 954 2 956 2 1923 6 1924 20 1926 16 1930 2 1928 2 1933 2 1935 2 966 80 967 2 
1196 2 487 2 832 2 276 2 1849 2 1264 2 1229 2 1591 2 1094 2 658 2 881 2 546 2 660 2 317 4 886 2 697 2 1734 2 1489 2 258 2 422 2 1872 6 852 2 51 2 1672 2 
1196 2 487 2 832 2 276 2 1849 2 1264 2 1229 2 1591 2 1094 2 658 2 881 2 546 2 660 2 317 4 886 2 697 2 1734 2 1489 2 258 2 422 2 1872 6 852 2 51 2 1672 2 
1196 2 487 2 832 2 276 2 1849 2 1264 2 1229 2 1591 2 1094 2 658 2 881 2 546 2 660 2 317 4 886 2 697 2 1734 2 1489 2 258 2 422 2 1872 6 852 2 51 2 1672 2 
1196 3 487 2 1218 4 89 4 212 2 1822 2 1219 2 1885 2 1914 2 1005 6 1644 2 1538 2 1849 2 70 4 1264 10 781 2 1855 4 1808 2 1266 4 870 3 74 2 786 3 750 2 1695 4 957 2 412 2 1238 2 1548 2 724 2 1027 2 1759 2 726 2 881 2 1062 2 915 3 1066 4 549 4 422 4 319 2 852 3 
487 2 1218 4 1822 2 1219 2 1885 2 1644 2 1538 2 70 4 870 2 74 2 750 2 1238 2 1548 2 1062 2 881 2 1066 4 319 2 1196 2 89 4 212 2 154 2 1914 2 1005 6 1849 2 1264 10 217 2 1855 4 781 2 1266 4 1808 2 1508 2 786 2 1695 4 957 2 412 2 1027 2 724 2 1759 2 726 2 915 2 549 4 422 4 852 2 
487 2 1218 4 1822 2 1219 2 1885 2 1644 2 1538 2 70 4 870 2 74 2 750 2 1238 2 1548 2 1062 2 881 2 1066 4 319 2 1196 2 89 4 212 2 154 2 1914 2 1005 6 1849 2 1264 10 217 2 1855 4 781 2 1266 4 1808 2 1508 2 786 2 1695 4 957 2 412 2 1027 2 724 2 1759 2 726 2 915 2 549 4 422 4 852 2 
487 2 1218 4 1822 2 1219 2 1885 2 1644 2 1538 2 70 4 870 2 74 2 750 2 1238 2 1548 2 1062 2 881 2 1066 4 319 2 1196 2 89 4 212 2 154 2 1914 2 1005 6 1849 2 1264 10 217 2 1855 4 781 2 1266 4 1808 2 1508 2 786 2 1695 4 957 2 412 2 1027 2 724 2 1759 2 726 2 915 2 549 4 422 4 852 2 
487 2 1218 4 1822 2 1219 2 1885 2 1644 2 1538 2 70 4 870 2 74 2 750 2 1238 2 1548 2 1062 2 881 2 1066 4 319 2 1196 2 89 4 212 2 154 4 1914 2 1005 6 1849 2 1264 10 217 4 1855 4 781 2 1266 4 1808 2 1508 4 786 2 1695 4 957 2 412 2 1027 2 724 2 1759 2 726 2 915 2 549 4 422 4 852 2 
0 2 215 2 169 2 1530 2 1144 2 504 2 1799 2 
1691 2 928 2 834 2 976 2 215 2 700 2 
829 2 1431 2 1043 2 277 2 32 2 1264 10 497 1 443 2 1123 1 1509 2 303 2 685 1 225 1 876 2 501 2 589 2 1061 2 661 2 113 2 484 1 422 8 1836 2 1104 2 261 2 21 2 1874 2 
154 4 1914 6 1538 6 1264 6 496 4 217 3 1448 1 1503 2 1855 4 1266 12 1508 2 1626 2 1322 2 750 6 807 2 1454 2 1091 2 1391 2 412 6 1238 2 958 2 1027 6 1759 6 1062 6 572 2 1243 2 1339 2 549 15 1103 4 1704 2 422 6 
341 2 89 2 1218 2 972 2 479 2 379 2 505 2 1226 2 1633 1 68 2 1422 2 1733 4 70 2 1264 1 178 6 422 1 1619 2 1570 2 
341 2 89 2 1218 2 972 4 479 4 379 2 505 2 1226 2 68 2 1422 4 1733 4 70 2 178 6 1619 2 1570 2 
341 6 89 2 1218 2 972 8 479 8 379 2 505 2 1226 2 1633 1 68 2 1422 8 1733 4 70 2 1264 1 178 10 422 1 1619 8 1570 2 
89 2 1218 2 972 2 479 2 379 2 505 2 1226 2 68 2 1422 2 1733 2 70 2 178 2 1570 2 
127 4 603 24 1710 4 1711 90 489 4 1220 28 1224 2 1824 1 1348 8 133 10 1826 2 978 6 1122 4 250 14 251 6 253 6 1236 2 139 10 1479 2 1361 6 1605 24 255 4 507 24 1731 42 884 42 887 8 762 16 1835 24 147 16 889 4 1245 18 23 6 632 6 517 6 268 248 1000 14 1001 50 391 2 769 10 1008 8 531 4 158 6 1264 150 160 26 1150 8 904 8 400 4 38 12 403 6 906 4 783 2 407 2 408 6 1752 10 651 124 1271 112 1631 12 544 6 1517 88 1632 6 1160 4 1866 22 422 134 1278 34 1166 2 1526 90 1168 4 426 4 1879 2 666 4 802 10 1880 4 187 4 293 10 556 8 296 2 1773 2 435 4 189 4 1405 58 1046 4 1179 4 1180 10 1894 16 930 7 439 8 1774 6 1648 4 1651 7 1658 2 1656 24 1901 17 1662 2 1902 4 1546 4 1060 24 813 4 1553 2 1667 92 1311 2 705 6 827 2 327 18 711 2 1436 6 1320 6 332 4 835 4 1916 6 951 2 1085 6 472 4 335 6 104 6 1208 6 722 26 1573 8 345 10 480 84 1099 11 1458 6 592 8 1815 58 349 2 853 36 964 2 966 6 125 15 
1878 2 802 2 362 2 1344 6 603 2 129 2 1402 2 1111 2 293 2 1220 38 296 2 1773 2 189 2 1405 2 133 2 1348 6 1716 2 1180 2 1894 4 1117 2 136 2 1650 2 933 2 1721 2 250 2 1658 2 251 2 253 2 1234 2 139 2 1359 2 1901 2 1361 2 1902 2 1126 2 1060 2 1604 2 1606 4 380 2 693 2 1908 2 887 2 1835 2 147 4 762 4 991 2 1245 2 23 2 1139 2 268 44 1000 2 93 2 391 2 769 2 529 2 1147 2 1008 2 1848 2 158 4 1262 2 1264 46 218 2 220 2 1150 2 472 2 904 2 407 2 1858 4 650 2 408 2 43 2 1752 2 651 6 1271 20 345 2 912 2 1157 4 1573 2 1098 2 1458 2 1927 4 1517 20 1161 2 1929 2 1815 2 422 44 598 2 853 2 292 2 1166 2 1216 2 800 2 
127 4 1710 4 129 2 1221 2 1220 14 133 4 1348 6 1826 2 978 4 1122 2 250 6 251 4 253 4 1479 2 1361 4 1480 4 1126 2 1605 8 255 4 1731 8 884 16 887 2 762 10 147 10 991 10 1245 10 1136 4 23 4 632 4 517 4 634 2 268 104 1000 6 1001 8 391 2 1378 8 1003 4 1008 2 158 2 1264 78 904 2 38 14 403 4 906 4 407 2 787 2 408 4 651 24 1752 4 1271 44 544 4 1517 36 1632 4 1160 4 422 70 1278 30 1166 2 1168 4 666 4 802 6 1880 4 1170 4 1772 4 187 4 671 8 293 4 555 16 556 4 1773 2 1405 28 1179 4 1894 10 1774 4 1649 2 1651 3 1658 2 1901 10 195 4 1667 24 1908 10 1192 32 320 16 1424 2 93 2 711 2 1320 4 332 4 835 4 1916 4 951 2 1685 8 220 10 335 4 1085 4 104 4 1208 4 1699 4 1573 2 345 4 480 24 1332 8 1458 4 594 2 1815 30 853 6 966 4 125 8 
802 2 1710 2 489 2 293 2 1220 14 556 4 1224 2 296 2 1773 2 1405 12 1348 4 133 2 930 1 1894 6 1122 2 250 2 1658 2 251 4 253 4 1361 4 1901 2 1662 2 887 2 147 6 762 6 1311 2 1245 2 23 4 268 40 1000 2 93 2 391 2 1008 2 158 2 1264 28 472 2 904 2 783 2 407 2 408 4 651 8 1752 2 1271 14 345 2 1573 2 1099 1 1458 4 1517 14 1866 10 1161 2 1815 12 349 2 422 26 1278 6 853 2 1166 2 426 2 1168 2 125 5 
1688 2 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 
196 1 746 1 401 1 1312 1 898 1 382 1 

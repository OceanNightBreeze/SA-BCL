#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V ERROR java.lang.NullPointerException (97,936) 1291 (1389,1414) 1437 1010 
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException (97,936) 1291 (1389,1414) 1437 1010 
daikon.test.diff.DiffTester:testPpts1Ppts1()V ERROR java.lang.NullPointerException (97,936) 1291 (1389,1414) 1437 1010 
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException (97,936) 1291 (1389,1414) 1437 1010 
daikon.test.diff.DiffTester:testPpts1Ppts3()V ERROR java.lang.NullPointerException (97,936) 1291 (1389,1414) 1437 1010 
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException (97,936) 1291 (1389,1414) 1437 1010 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR java.lang.NullPointerException (97,936) 1291 (1389,1414) 1437 1010 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR java.lang.NullPointerException (97,936) 1291 (1389,1414) 1437 1010 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR java.lang.NullPointerException (97,936) 1291 (1389,1414) 1437 1010 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V ERROR java.lang.NullPointerException (97,936) 1291 (1389,1414) 1437 1010 
daikon.test.diff.DiffTester:testConditionalPptsTrue()V ERROR java.lang.NullPointerException (97,936) 1291 (1389,1414) 1437 1010 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:jj_3R_50()Z
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:jj_3R_53()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase:passes()Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.MathMDE:negate(I)I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_85()Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.VarInfo:isPrestate()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.ModBitTracker:num_samples()I
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.Invariant:getConfidence()D
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.inv.Invariants:Invariants()V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3_15()Z
daikon.PptName:getSignature()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.Quant:lte(II)Z
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_99()Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:ReadByte()C
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfo:isIOASet()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_103()Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.VarInfo:new_ppt()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_126()Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.FuzzyFloat:gt(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_87()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.PptSlice2:arity()I
jtb.JavaParser:jj_3R_54()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Debug:logOn()Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndColumn()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_62()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.Assert:assertTrue(Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.ProglangType:isString()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:eq(DD)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:intersection([I[I)[I
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.JavaParser:jj_3R_86()Z
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_25()Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:jj_3R_97()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_72()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:jj_3_4()Z
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_36(I)Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.Quant:slice([III)[I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_118()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:size()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.unary.string.OneOfString:is_type()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_2_25(I)Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_21()Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_114()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParser:jj_3_27()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.ArraysMDE:sum([D)D
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_3_16()Z
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd_differences([I)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:sign(I)I
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:ne(II)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_100()Z
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:jj_3R_107()Z
daikon.PptSlice0:arity()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(J[J)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:jj_3R_51()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:jj_3R_137()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_169()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:lexGTE([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
utilMDE.MathMDE:modulus([I)[I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.ProglangType:isPointerFileRep()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.JavaParser:jj_3R_148()Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_3_17()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:present()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.ModBitTracker:split(I)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([J)[J
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:lte(DD)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd([I)I
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:jj_3R_106()Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsString()Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_3_19()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.Quant:gte(II)Z
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_3R_163()Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.ProglangType:baseIsIntegral()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.PptName:isEnterPoint()Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.PptSlice3:arity()I
jtb.JavaParser:jj_3R_121()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([F[F)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_58()Z
daikon.ProglangType:isArray()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:jj_3R_136()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.VarInfo:relate_var()V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:has_typeof()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.Quant:eq(JJ)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_104()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice1:arity()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([J[J)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:isPointer()Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.ArraysMDE:subarray([III)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissing(I)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.Quant:eq(II)Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:jj_3R_81()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.JavaParser:jj_3R_164()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaCharStream:backup(I)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_108()Z
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.VarInfoName:hashCode()I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String; | ASSIGN | 18974 | = null
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_115()Z
jtb.JavaParser:jj_3R_134()Z
daikon.inv.Invariant:logDetail()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:union([I[I)[I
jtb.JavaParser:jj_3R_119()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Quant:memberOf(D[F)Z
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParser:jj_3R_122()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_35(I)Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
jtb.JavaParser:jj_3_29()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.visitor.FormatCommand:getNumCommands()I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_124()Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:jj_3R_77()Z
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(I[I)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:jj_3R_60()Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_35()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern([D)[D
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.ProglangType:isScalar()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(F[F)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceString.MemberString:enabled()Z
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:jj_3R_125()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_68()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_3_20()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:sort_rep()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.NodeOptional:present()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3R_98()Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:jj_3R_73()Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.visitor.TreeFormatter:TreeFormatter()V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.Quant:lexLTE([I[I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Debug:logDetail()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.ProglangType:base()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:jj_3R_162()Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.Quant:isReverse([I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_109()Z
daikon.ProglangType:dimensions()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.Quant:lexLT([I[I)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.JavaParser:jj_3R_105()Z
jtb.JavaParser:jj_3R_116()Z
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.JavaParser:jj_3R_180()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_75()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.Quant:setEqual([I[I)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName:hasTypeOf()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.ModBitTracker:num_sets()I
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.ProglangType:baseIsFloat()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_1()Z
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
jtb.JavaParser:jj_3R_57()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParser:jj_3R_161()Z
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.Ppt:Ppt()V
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
jtb.JavaParser:jj_3_14()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.ValueTuple:size()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_69()Z
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[I)I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptSlice1:num_samples()I
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.Node:Node()V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_18()Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaParser:jj_2_12(I)Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_3R_133()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.PptName:toString()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.Quant:gt(II)Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:isIOAArray()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaParser:jj_3R_102()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.JavaParser:jj_3_22()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.visitor.FormatCommand:getCommand()I
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_149()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:eq(FF)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_67()Z
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.Invariant:is_false()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
jtb.visitor.FormatCommand:FormatCommand(II)V
utilMDE.ArraysMDE:indexOf([JJ)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_70()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:isDerived()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_3R_96()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:enabled()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
223 2 707 2 312 2 1673 4 1930 2 521 2 55 2 365 2 1096 2 
1484 2 850 2 807 6 1020 2 1669 6 508 2 876 6 991 2 510 2 1802 2 1302 2 
93 2 791 4 184 6 1770 6 1845 2 312 2 875 6 1421 4 1930 2 453 2 522 6 345 2 162 2 
240 29 426 2 0 6 363 16 1084 4 1565 4 1431 10 765 16 1911 4 601 16 713 10 312 6 160 2 220 2 690 6 982 2 880 10 375 8 1349 2 556 10 227 8 616 12 1454 10 886 4 173 8 1499 2 1930 6 1393 8 1783 26 302 2 
1016 6 1865 4 
1211 2 
240 6 0 2 363 2 99 2 330 2 1431 4 765 2 1911 2 430 2 601 2 464 2 713 2 1442 2 726 2 880 2 852 2 556 2 1777 2 616 2 1454 2 1393 2 300 2 1783 4 
240 15 1084 2 363 8 880 4 529 2 765 8 556 4 1142 4 1104 4 616 5 1511 2 155 6 601 8 1454 4 131 6 713 4 1783 12 
182 6 1903 10 1 2 334 4 153 4 1762 2 903 14 1655 10 434 4 104 2 366 4 572 2 609 2 498 4 610 4 77 2 1131 2 502 2 1768 4 1069 2 1552 2 79 2 1769 2 1288 4 290 2 1100 2 1140 2 376 2 796 4 1077 2 917 4 747 8 19 2 640 62 1147 4 618 4 1896 2 236 4 1784 2 706 2 
1211 2 1086 2 188 2 1315 2 465 2 1621 2 1578 2 1827 2 1666 2 753 2 
426 2 1617 4 434 2 312 4 6 2 1127 2 77 2 611 4 1133 2 1017 2 951 2 777 2 1839 2 451 2 1529 2 674 2 1533 2 1897 2 1082 2 1213 2 1332 2 1596 2 897 2 338 2 1652 4 467 2 342 2 975 2 1846 2 574 2 1096 2 1550 2 1177 2 226 2 1103 2 1355 2 1185 2 917 4 747 2 477 2 1740 2 1930 4 589 2 592 2 
240 54 0 4 363 32 32 2 895 2 1431 6 765 32 541 6 154 2 213 4 1911 2 155 6 601 32 131 6 713 16 312 4 160 2 1545 2 1408 2 316 4 371 6 576 8 690 4 1046 6 112 6 880 16 556 16 1449 4 1489 4 227 6 1104 4 1142 4 616 22 1454 16 1639 2 1150 4 1930 4 1393 18 1783 48 
182 2 747 2 1762 2 
303 2 1019 2 196 2 415 10 1789 2 1609 2 614 2 463 2 205 2 5 2 1532 22 1846 2 704 2 1920 2 
1679 2 483 4 931 3 708 3 486 2 808 1 1566 2 810 16 242 2 812 2 126 2 1824 2 491 4 1064 2 7 12 714 2 497 2 819 2 820 1 822 4 1075 2 1198 2 1450 4 1583 2 1584 3 827 2 829 1 1078 2 509 2 1709 2 1460 16 512 2 1209 3 1710 2 269 6 737 2 842 2 1219 2 517 3 1842 2 1336 2 39 2 275 2 402 2 403 2 277 2 521 2 406 1 407 24 1229 2 163 8 1848 2 633 2 1729 2 1346 12 527 1 47 3 1102 2 854 2 1105 2 989 2 170 2 171 3 1491 1 296 2 990 2 421 6 993 4 1498 2 997 2 1500 2 61 4 301 1 865 1 1365 2 67 2 427 2 1001 1 763 2 429 1 1115 2 1005 2 764 32 1508 2 1758 8 869 2 1253 1 1759 1 542 2 1874 6 311 2 312 32 71 4 1264 2 1877 1 75 2 1630 8 195 2 1520 3 655 3 657 2 1137 32 773 1 197 2 1385 2 1525 16 1886 3 322 3 83 24 669 2 1024 2 1025 2 561 2 1781 2 1782 2 1156 2 1032 2 1397 2 1278 1 678 2 1648 2 896 2 900 2 108 2 1918 2 1659 2 1547 6 575 2 1799 2 111 4 1175 2 1549 1 1803 16 911 5 689 2 353 3 915 2 1047 2 113 2 1807 2 1049 2 355 2 229 2 1419 1 1186 2 587 2 1054 2 1930 34 1816 2 
1646 2 
1257 2 1930 2 
538 2 1551 2 1930 4 
1428 6 1429 2 1430 6 488 2 489 2 490 22 935 2 492 24 1439 4 1440 2 941 2 942 8 496 2 1443 2 9 4 501 2 1445 2 1446 30 503 8 947 2 506 2 18 2 1451 2 1453 2 21 6 953 2 954 2 1456 30 955 566 1458 12 958 26 28 60 967 20 1470 4 35 2 36 4 969 4 970 4 971 228 1476 2 519 4 1478 6 1479 2 41 2 1477 2 973 8 1480 2 1482 30 1481 2 979 2 1483 48 981 198 1486 2 48 244 530 2 984 2 985 2 1490 2 987 8 531 4 1493 2 1494 2 1496 6 60 2 536 6 998 2 999 192 63 8 65 2 66 4 539 2 1504 8 1008 6 69 2 1512 2 544 4 545 4 1514 4 73 4 1011 6 1519 6 1015 16 552 2 1522 4 80 2 81 2 559 2 1022 18 560 2 85 26 1527 4 89 30 88 132 562 6 1530 4 90 4 1531 2 1029 2 563 88 1030 4 1535 2 1036 6 96 14 1038 2 1541 2 1540 4 568 6 1542 2 102 8 106 2 1042 30 1043 18 1548 4 1045 2 577 4 1555 2 1556 60 581 52 115 198 117 198 1052 2 118 14 1053 2 586 4 1055 290 588 2 1564 2 119 2 1057 8 1058 106 1059 10 596 4 1567 28 597 2 1570 2 125 2 1573 98 600 2 130 2 1063 2 603 2 602 2 608 2 1066 192 135 204 1070 30 1580 2 1073 2 138 386 1074 6 1583 2 615 4 1585 6 1588 6 1589 10 619 14 1590 74 1079 2 1591 6 623 2 1593 12 1085 2 146 2 1595 2 1597 2 1090 6 159 10 1094 2 1602 2 1095 2 161 432 164 328 1606 4 635 6 166 4 1099 4 1101 50 639 2 1106 2 641 4 642 28 1109 12 645 2 644 4 1113 198 646 2 1615 2 1116 2 1117 2 1119 2 1120 2 187 198 1125 2 1626 60 191 6 1129 4 192 2 1629 46 193 2 1130 2 654 328 1136 2 200 2 660 6 201 244 202 6 1141 2 1143 2 204 2 1144 6 665 6 1145 2 666 2 668 118 206 10 1149 46 670 2 671 26 1641 2 672 6 1642 6 1643 2 1644 20 1160 2 1645 4 1165 106 1166 2 680 2 681 4 1647 22 1650 70 1170 12 215 2 216 4 217 2 686 336 1172 6 221 4 1661 4 1662 6 1178 2 695 2 1181 6 1182 2 1184 4 697 2 230 4 699 86 1674 6 1675 84 700 4 1187 2 701 2 1188 2 1189 2 237 6 703 54 705 2 239 14 1682 8 1687 2 1689 6 1191 12 245 2 1192 2 711 12 246 2 251 6 1195 26 1695 2 719 92 722 2 255 4 725 4 254 182 1698 4 258 4 1702 4 1202 6 261 4 728 4 1708 16 1208 12 732 6 1212 26 1214 2 268 4 1218 2 1712 6 272 8 1222 6 1720 2 279 4 1724 2 281 198 1230 4 1231 12 1725 2 282 16 1232 2 1233 2 1728 4 289 4 1236 8 745 2 744 64 1732 2 751 2 1735 2 755 68 1738 2 757 2 758 2 298 2 759 4 1745 82 1746 6 760 6 1245 30 1748 2 1248 224 1250 160 1753 2 1252 20 1251 28 1755 2 766 6 1254 8 1255 2 307 2 1763 4 1764 4 312 10 313 6 314 2 1262 4 1261 204 771 20 1767 6 1265 2 1266 30 1267 8 1270 6 1774 12 776 4 325 32 778 10 1277 8 1785 2 783 8 1279 20 332 6 1791 2 786 30 339 4 788 140 341 6 1796 16 1283 14 1798 6 1284 2 1286 6 1285 2 792 6 1805 4 352 2 354 2 1290 2 1808 26 1811 4 798 8 1814 182 1297 2 1298 4 1299 66 359 12 360 2 361 6 804 2 1820 20 805 2 1304 6 1822 30 809 4 364 20 813 2 1309 18 1310 2 1312 6 1825 6 814 2 815 6 367 376 1826 2 1828 46 373 2 824 8 378 26 830 6 380 6 1326 2 835 2 385 2 386 6 1328 198 1329 2 1331 4 392 2 839 20 395 2 841 26 843 2 398 112 400 2 846 12 401 6 1340 64 404 6 1341 2 848 22 408 4 409 2 1342 6 1852 26 1854 2 853 28 416 4 418 24 1856 2 1356 2 1858 4 419 6 420 30 1862 48 1863 2 1362 6 863 2 1864 14 864 4 1366 198 1866 112 1367 4 1868 60 868 94 1870 8 871 22 436 4 1377 6 1379 12 437 6 439 2 444 2 1881 46 446 14 1884 2 1888 2 883 2 887 6 1891 4 1893 2 1391 2 890 28 452 2 1394 4 1395 10 454 2 1396 2 891 4 458 2 459 6 1399 132 1400 432 1909 4 899 6 1401 4 1402 6 1913 244 469 2 470 4 1409 2 909 2 472 2 1923 2 1415 2 474 2 1924 4 918 2 1927 2 1928 2 1930 10 923 6 480 112 1933 26 1932 112 1934 46 926 2 482 4 929 6 1426 26 
594 1 1834 2 908 2 1744 2 
1432 2 908 2 
886 2 357 2 1139 2 908 2 1677 2 747 2 524 2 
1139 2 1497 2 908 2 
1089 2 1139 2 908 2 
515 2 1403 2 1834 2 
1139 2 908 2 
515 2 443 2 
1837 2 908 2 
286 2 515 2 1834 2 
1834 2 750 2 172 2 
1834 2 1723 2 1014 2 
123 2 1237 2 1834 2 
1834 2 1908 2 1743 2 
515 2 1672 2 
908 2 1013 2 
834 2 750 2 
1723 2 648 2 
505 2 123 2 
1843 2 1908 2 
515 2 1258 2 
1347 2 1908 2 
123 2 928 2 
432 2 1723 2 
780 2 750 2 
286 2 515 2 1834 2 1660 2 
286 2 515 2 1834 2 109 2 1660 2 
515 2 1834 2 139 2 
515 2 1670 2 1834 2 
1448 2 1524 2 604 2 944 2 
851 2 1159 2 1633 2 1215 2 553 2 305 2 335 4 986 2 1873 2 873 4 262 2 629 2 571 2 250 2 1532 6 1044 2 455 2 806 2 
1787 2 1834 2 
31 2 190 2 1677 2 747 2 
31 2 1041 2 190 2 1677 2 747 2 524 2 
886 2 1139 2 908 2 1677 2 747 2 92 2 
1533 2 1471 2 
886 2 405 2 1677 2 747 2 
1750 2 123 2 
1797 2 1908 2 
1068 2 750 2 
1289 2 1723 2 
1474 2 1908 2 1723 2 
1320 2 1908 2 1723 2 
144 2 1723 2 1908 2 
605 2 1723 2 1908 2 
593 2 650 6 543 2 78 6 724 2 795 2 747 2 1677 2 
515 2 499 2 
1175 2 
483 4 486 2 1566 2 1307 2 242 2 491 4 7 8 822 2 1075 2 1450 2 1583 2 827 2 829 4 1078 2 511 2 512 2 269 4 151 2 842 2 1219 2 1842 2 1336 2 1599 2 403 2 521 2 977 2 978 2 1229 2 1848 2 980 2 633 4 1346 8 1102 2 854 2 296 2 421 2 993 4 1498 2 61 2 1614 2 865 2 866 2 67 2 763 2 429 2 764 6 1509 2 1756 2 1758 2 1874 2 309 2 311 2 312 26 1264 2 195 2 1137 4 197 2 1525 6 558 2 1776 2 561 2 1156 6 683 4 1547 6 575 2 111 4 689 2 1047 2 915 2 1049 2 114 4 232 2 1671 2 1054 2 587 2 1930 26 
483 4 486 2 1566 2 1307 2 242 2 491 4 7 8 822 2 1075 2 1450 2 1583 2 827 2 829 1 1078 2 511 2 512 2 1710 2 269 6 1087 2 151 2 842 2 1219 2 1842 2 1599 2 1336 2 403 2 521 2 977 2 1229 2 1848 2 980 2 633 4 1346 8 1102 2 854 2 296 2 421 2 993 4 1498 2 61 2 1614 2 865 2 1246 2 866 2 67 2 763 2 429 2 764 6 1509 2 1758 2 1874 2 309 2 311 2 312 26 1264 2 195 2 1137 4 197 2 1525 6 558 2 561 2 1156 6 896 2 683 4 1659 2 1547 6 575 2 111 4 689 2 1047 2 915 2 1049 2 114 4 232 2 1671 2 1295 2 1054 2 587 2 1930 26 
457 2 
1210 2 1357 2 
484 2 850 2 634 2 440 4 1804 2 1414 2 599 2 1669 2 1637 4 37 2 1437 2 1010 2 876 2 11 2 1604 2 1081 2 283 2 1802 2 
484 2 483 2 807 6 1247 2 486 2 2 2 599 2 1572 2 1062 2 244 2 767 2 1437 2 1010 2 1123 2 312 6 876 4 940 2 435 2 550 2 1264 2 500 4 11 2 1317 2 440 4 137 2 1583 2 1637 4 1275 2 508 2 1389 2 142 2 510 2 561 2 1081 4 97 2 736 4 393 4 333 2 1167 2 1842 2 1336 2 37 2 520 4 1547 4 575 2 471 2 1604 2 1802 4 283 2 111 2 634 2 850 4 1804 2 349 2 1414 2 1291 2 1669 6 1930 12 238 4 1817 4 
484 2 483 2 807 6 1247 2 486 2 2 2 599 2 1572 2 1062 2 244 2 767 2 1437 2 1010 2 1123 2 312 6 876 6 940 2 435 2 550 2 1264 2 500 4 11 2 1317 2 440 4 137 2 1583 2 1637 4 1275 2 1389 2 142 2 510 2 561 2 1081 4 97 2 736 4 393 4 333 2 1167 2 1842 2 1336 2 37 2 520 4 1547 4 575 2 471 2 1604 2 1802 4 283 2 111 2 634 2 850 4 1804 2 349 2 1414 2 1291 2 1669 4 991 2 1930 12 238 4 1817 4 
484 2 483 2 807 6 1247 2 486 2 2 2 599 2 1572 2 1062 2 244 2 767 2 1437 2 1010 2 1123 2 312 6 876 6 940 2 435 2 550 2 1264 2 500 4 11 2 1317 2 440 4 1020 2 137 2 1583 2 1637 4 1275 2 1389 2 142 2 510 2 561 2 1081 4 97 2 736 8 393 4 333 2 1167 2 1842 2 1336 2 37 2 520 4 1547 4 575 2 471 2 1604 2 1802 4 283 2 111 2 634 2 850 4 1804 2 349 2 1414 2 1291 2 1669 6 1930 12 238 4 1817 4 
484 2 483 2 807 8 1247 2 486 2 2 2 599 2 1572 2 1062 2 244 2 767 2 1437 2 1010 2 1123 2 312 6 876 8 940 2 435 2 550 2 1264 2 500 4 11 2 1317 2 440 4 1020 2 137 2 1583 2 1637 4 1275 2 1389 2 142 2 510 2 561 2 1081 4 97 2 736 8 393 8 333 2 1167 2 1842 2 1336 2 37 2 520 8 1547 4 575 2 471 2 1604 2 111 2 1802 4 283 2 634 2 850 4 1804 2 349 2 1414 2 1291 2 1669 6 991 2 1930 12 238 4 1817 4 
484 2 483 2 807 6 1247 2 486 2 2 2 599 2 1572 2 1062 2 244 2 767 2 1437 2 1010 2 1123 2 312 6 876 6 940 2 435 2 550 2 1264 2 500 4 11 2 1317 2 440 4 1020 2 137 2 1583 2 1637 4 1275 2 1389 2 142 2 510 2 561 2 1081 4 97 2 736 8 393 8 333 2 1167 2 1842 2 1336 2 37 2 520 8 1547 4 575 2 471 2 1604 2 1802 4 283 2 111 2 634 2 850 4 1804 2 349 2 1414 2 1291 2 1669 6 1930 12 238 4 1817 4 
483 4 484 2 486 2 242 12 709 2 1686 2 2 2 243 2 244 2 1434 6 491 4 710 1 936 2 1437 2 1438 2 248 2 940 2 7 4 500 4 1694 7 11 2 949 2 1450 2 510 4 512 2 1710 2 29 8 736 2 269 6 966 2 1716 4 37 2 521 2 283 2 980 2 528 2 296 2 991 4 993 4 299 4 61 2 1501 2 1502 2 1247 2 540 2 763 2 1004 2 764 8 1754 10 1757 2 767 2 1758 2 1257 6 70 6 1010 2 546 2 312 24 550 2 1264 2 1525 6 1275 2 84 6 561 2 1031 2 97 2 333 4 569 2 1281 6 103 6 1547 6 575 2 111 4 1802 4 1551 6 1804 2 349 2 1047 2 1291 2 1049 2 582 2 116 6 1813 2 1054 2 1815 2 1301 1 1817 6 591 2 807 12 1566 2 1307 2 599 2 1572 2 1062 4 128 2 129 2 368 6 370 2 1317 2 821 6 822 2 137 2 1075 2 1583 2 1078 2 142 2 832 2 833 6 1081 4 394 2 842 2 1842 2 1333 2 1336 2 1599 2 403 2 1601 1 1604 2 1848 2 634 2 850 4 1344 2 1346 4 1853 6 1608 6 1102 2 421 2 1359 2 866 4 1874 2 1373 1 1123 2 876 8 435 2 1878 1 195 2 440 4 1879 6 879 1 1137 2 1634 1 1637 4 448 2 1389 2 1894 7 1156 6 1646 6 461 1 1167 2 683 4 1916 6 1658 2 1659 2 689 2 225 1 1414 2 1416 2 1669 4 1930 46 238 8 
484 2 483 4 807 12 486 2 1566 2 1307 2 709 2 242 12 1686 2 243 2 2 2 599 2 1572 2 1434 6 1062 4 244 2 128 2 491 4 129 2 936 2 1437 2 1438 2 248 2 940 2 7 8 368 6 500 4 11 2 1317 2 370 2 821 6 949 2 822 4 137 2 1075 2 1450 4 1583 2 1078 2 832 2 142 2 833 6 510 4 512 2 1081 4 1710 2 29 8 736 6 966 2 269 6 394 2 1716 4 842 2 1842 2 1333 2 1599 2 37 2 1336 2 403 2 521 2 1604 2 632 2 980 2 1848 2 283 2 633 2 1344 2 850 4 634 2 1346 8 528 2 1853 6 1608 6 1102 2 296 2 1359 2 421 2 993 4 299 4 61 4 1501 2 1502 2 1247 2 540 2 866 4 1004 2 763 2 764 8 1754 10 1757 2 1758 2 767 2 70 6 1257 6 1874 2 546 2 1010 2 1123 2 312 26 876 8 435 2 550 2 1264 2 195 2 440 4 1879 6 1020 4 1137 2 1525 6 1637 4 448 2 1275 2 84 6 1389 2 561 2 1031 2 1156 6 97 2 1646 6 333 4 1167 2 683 4 569 2 1281 6 1916 6 103 6 1658 2 1659 2 1547 6 575 2 1802 4 111 4 1551 6 689 2 349 2 1804 2 1414 2 913 2 1416 2 1047 2 1291 2 1049 2 582 2 1669 8 116 6 1813 2 1054 2 1815 2 1930 48 1817 6 238 8 591 2 
484 2 483 4 807 12 486 2 1566 2 1307 2 709 2 242 12 1686 2 243 2 2 2 599 2 1572 2 1434 6 1062 4 244 2 128 2 491 4 129 2 936 2 1437 2 1438 2 248 2 940 2 7 8 368 6 500 4 11 2 1317 2 370 2 821 6 949 2 822 4 137 2 1075 2 1450 4 1583 2 1078 2 832 2 142 2 833 6 510 4 512 2 1081 4 1710 2 29 8 393 4 736 6 966 2 269 6 394 2 1716 4 842 2 1842 2 1333 2 1336 2 1599 2 37 2 520 4 403 2 521 2 1604 2 632 2 980 2 1848 2 283 2 633 2 1344 2 850 4 634 2 1346 8 528 2 1853 6 1608 6 1102 2 296 2 1359 2 421 2 993 4 299 4 61 4 1501 2 1502 2 1247 2 540 2 866 4 1004 2 763 2 764 8 1754 10 1757 2 1758 2 767 2 70 6 1257 6 1874 2 546 2 1010 2 1123 2 312 26 876 8 435 2 550 2 1264 2 195 2 440 4 1879 6 1020 4 1137 2 1525 6 1637 4 448 2 1275 2 84 6 1389 2 561 2 1031 2 1156 6 97 2 1646 6 333 4 1167 2 683 4 569 2 1281 6 1916 6 103 6 1658 2 1659 2 1547 6 575 2 1802 4 111 4 1551 6 689 2 349 2 1804 2 1414 2 913 2 1047 2 1416 2 1291 2 1049 2 582 2 1669 8 116 6 1813 2 1054 2 1815 2 1930 48 1817 6 238 8 591 2 
483 4 484 2 486 2 242 10 709 2 1686 2 2 2 243 2 244 2 1434 6 491 4 936 2 1437 2 1438 2 248 2 940 2 7 10 500 4 11 2 949 2 948 6 1450 4 508 2 510 4 512 2 730 6 1710 2 29 8 736 6 269 6 966 2 1716 4 37 2 520 4 521 2 1228 2 283 2 980 4 528 2 1731 6 296 2 991 2 993 4 994 2 299 4 996 6 61 4 1501 2 1502 2 1247 2 540 2 763 2 1004 2 764 12 1754 8 1757 2 767 2 1758 4 1257 12 70 6 546 2 1010 2 312 24 550 2 1264 2 1020 4 1525 8 1275 2 84 6 561 2 1031 2 98 2 97 2 333 4 569 2 1281 6 103 6 1547 6 575 2 111 4 1802 4 1551 12 1804 2 349 2 1047 2 1291 2 1049 2 582 2 116 6 1813 2 1054 2 1815 2 1817 6 591 2 807 16 1566 2 1307 2 599 2 1572 2 1062 4 128 2 1576 6 368 12 1317 2 370 2 821 6 822 4 137 2 1075 2 1583 2 1078 2 142 2 832 2 833 6 1081 4 624 2 393 4 394 2 842 2 1842 2 1333 2 1599 2 1336 2 403 2 1604 2 632 2 1848 2 1343 2 633 2 634 2 850 4 1344 2 1346 10 1853 6 1608 12 1102 2 421 4 1359 2 177 2 866 4 1874 4 1123 2 876 10 435 2 195 2 440 4 1135 2 1879 12 1137 4 1637 4 448 2 1389 2 1156 8 1901 6 1646 12 1167 2 682 6 683 6 1916 6 904 6 1658 2 1407 6 1659 2 689 2 1414 2 913 2 1416 2 1668 2 1669 10 1930 52 238 8 
484 2 807 4 1247 2 393 4 736 6 1167 2 2 2 767 2 244 2 37 2 1123 2 520 4 876 6 940 2 435 2 550 2 500 2 11 2 1604 2 283 2 1802 4 634 2 440 2 850 4 1020 2 349 2 1804 2 1669 6 1637 2 1275 2 142 2 510 2 1930 4 1817 2 238 2 
484 2 483 4 1679 2 807 4 486 2 1566 2 1307 2 242 4 2 2 1572 2 244 2 491 4 129 2 940 2 500 2 11 2 1583 2 1078 2 142 2 510 2 512 2 1710 2 736 6 269 6 842 2 1842 2 37 2 1599 2 1336 2 518 2 520 2 403 2 277 2 521 2 1604 2 1848 2 283 2 850 4 634 2 1352 2 1102 2 296 2 1611 2 421 3 993 4 534 3 1247 2 866 2 763 2 764 8 1754 2 767 2 1874 3 1123 2 312 24 876 6 435 2 550 2 1264 2 195 2 440 2 1020 2 1137 3 1525 6 1637 2 1275 2 561 2 1781 2 450 2 1156 6 1167 2 211 2 683 4 1659 2 1547 6 575 2 1802 4 111 4 1175 2 689 2 1804 2 349 2 1047 2 1049 2 1669 6 1054 2 1930 28 1817 2 238 2 
484 2 483 2 807 6 1247 2 486 2 2 2 599 2 1572 2 1062 2 244 2 767 2 1437 2 1010 2 1123 2 312 6 876 6 940 2 435 2 550 2 1264 2 500 4 11 2 1317 2 440 4 1020 2 137 2 1583 2 1637 4 1275 2 1389 2 142 2 510 2 561 2 1081 4 97 2 736 8 393 8 333 2 1167 2 1842 2 1336 2 37 2 520 8 1547 4 575 2 471 2 1604 2 1802 4 283 2 111 2 634 2 850 4 1804 2 349 2 1414 2 1291 2 1669 6 1930 12 238 4 1817 4 
483 2 484 2 807 8 1247 2 486 2 2 2 599 2 1572 2 1062 2 244 2 1437 2 1010 2 312 6 1123 2 876 6 940 2 435 2 550 2 1264 2 500 4 11 2 1317 2 440 4 1020 2 137 2 1583 2 1637 4 1275 2 508 2 1389 2 142 2 561 2 510 2 1081 4 97 2 736 8 393 8 333 2 1167 2 898 2 1842 2 1336 2 37 2 520 8 1547 4 575 2 1604 2 111 2 283 2 1802 4 1850 2 634 2 850 4 1921 4 1804 2 349 2 1414 2 1291 2 1669 8 1930 12 238 4 1817 4 
1247 2 1123 2 1571 2 
1247 2 1123 2 1571 2 
483 4 484 2 241 2 807 16 486 2 1566 2 1307 2 242 4 1571 2 243 2 2 2 1062 4 491 4 1437 2 7 4 500 2 1317 2 949 2 1831 2 822 4 1076 2 1075 4 1450 4 1583 2 829 2 1078 2 508 4 510 4 512 2 1080 4 1081 4 1710 2 1840 4 736 6 393 4 269 6 1716 2 842 2 1842 2 1599 2 1336 2 38 2 37 2 1475 2 520 6 403 2 521 2 977 4 1604 4 1848 2 850 4 1346 4 1102 2 292 2 1857 2 296 2 991 4 1359 2 993 4 299 2 176 2 61 4 1247 4 866 6 763 2 764 2 1754 2 1370 2 870 2 1256 2 874 2 1123 6 312 16 876 12 1264 2 195 2 440 2 1020 4 1137 2 1525 2 1637 2 1389 2 561 2 1156 2 892 2 333 2 1167 2 1656 2 103 2 1659 2 1547 6 790 2 1174 2 575 2 111 4 1802 4 1414 2 1047 2 1291 2 1049 2 1669 12 1558 2 1054 2 1930 24 1817 4 238 4 
241 2 390 2 242 2 709 2 1754 2 599 2 1716 2 1357 2 292 2 476 2 1404 2 103 2 1475 2 312 2 248 2 561 2 1930 4 
483 4 484 2 241 2 807 16 486 2 1566 2 1307 2 242 2 1571 2 243 2 2 2 1062 4 491 4 1437 2 7 4 500 2 1317 2 949 2 1831 2 822 4 137 2 1075 4 1450 4 1583 2 1078 2 508 4 510 4 512 2 1080 4 1081 4 1710 2 1840 4 736 6 393 4 269 6 842 2 1842 2 1599 2 1336 2 38 2 37 2 1475 2 520 6 403 2 521 2 977 4 1604 4 1848 2 850 4 1346 4 50 2 1353 2 1102 2 292 2 1857 4 295 2 296 2 991 4 1359 2 993 4 299 2 176 2 61 4 1247 4 866 6 1003 2 763 2 764 2 1370 2 870 2 1256 2 1123 6 312 16 876 12 1264 2 195 2 440 2 1020 4 1137 4 1525 2 1637 2 1389 2 561 2 1156 2 892 2 333 4 1167 2 103 2 1657 2 1659 2 1547 6 790 2 575 2 111 4 1802 4 1414 2 1047 2 1291 2 1049 2 1669 12 1558 2 1054 2 1930 24 1817 4 238 4 
483 4 484 2 241 2 807 16 486 2 1566 2 1307 2 242 4 1571 2 243 2 2 2 1062 4 491 4 1437 2 7 4 500 2 1317 2 949 2 1831 2 822 4 137 2 1075 4 1450 4 1583 2 829 1 1078 2 508 4 510 4 512 2 1080 4 1081 4 1710 2 1083 2 1840 4 736 6 393 4 269 6 1716 2 842 2 1842 2 1599 2 1336 2 38 2 37 2 1475 2 520 6 403 2 521 2 977 4 1604 4 1848 2 850 4 1346 4 1102 2 292 2 1857 2 296 2 991 4 1359 2 993 4 299 2 176 2 61 4 1247 4 866 6 763 2 764 2 1754 2 1370 2 1760 2 870 2 1256 2 1123 6 312 16 876 12 548 2 1264 2 195 2 440 2 1020 4 1137 2 1525 2 1637 2 1389 2 561 2 456 2 1156 2 892 2 333 4 1167 2 212 2 103 2 1659 2 1547 6 790 2 575 2 111 4 1802 4 1414 2 1047 2 1291 2 1049 2 1669 12 1558 2 1054 2 1930 24 1817 4 238 4 
931 2 932 14 933 36 3 10 934 104 937 20 939 4 7 183 8 4 10 2 946 2 12 2 13 2 950 3 14 2 15 2 16 3 17 3 952 2 20 1 22 2 23 2 24 2 25 3 956 38 957 2 26 3 27 2 959 38 960 1 30 2 962 2 961 38 963 2 965 2 964 2 33 2 968 20 39 2 972 4 40 2 42 2 974 2 976 2 45 4 980 46 44 2 43 2 47 2 49 4 983 2 52 3 53 3 54 60 56 2 988 2 57 2 990 2 58 2 992 3 993 480 994 2 59 2 995 2 997 2 62 156 64 2 1000 2 1002 2 1006 2 1005 2 68 2 1009 158 71 32 72 2 76 2 1012 2 1018 4 1021 158 82 2 83 61 1024 16 1023 80 87 2 86 4 1025 2 1026 2 1027 78 1028 80 1031 16 1034 2 94 3 1033 2 1035 78 95 38 1037 2 98 4 1039 2 100 2 107 2 108 2 110 10 111 8 112 6 1047 2 113 2 1049 82 1050 2 1051 2 1054 2 1056 2 120 2 122 2 124 2 127 2 126 2 1060 3 128 2 131 6 1064 2 1065 2 1067 2 133 2 136 2 1071 2 1075 18 140 78 1078 2 141 8 143 26 148 2 147 2 149 8 151 4 150 40 152 174 153 2 1092 2 156 2 1093 2 157 38 158 78 160 2 163 14 165 3 1098 2 1102 84 168 2 170 2 1105 2 171 2 1107 2 1108 78 174 14 175 2 1110 2 1112 2 1111 2 179 2 178 4 181 24 180 2 183 2 1114 2 1118 22 186 2 1121 2 1122 4 1124 2 1126 2 1128 2 194 2 195 2 1132 2 1134 1 1135 2 1137 110 1138 2 199 2 203 2 1142 4 1146 2 1148 22 207 80 1152 2 1153 2 1154 2 1155 80 1156 18 1157 60 1158 2 1161 2 1162 2 1164 2 1163 2 209 2 210 2 1168 4 211 2 1169 2 214 48 1171 10 218 2 219 2 222 2 1176 2 224 80 1179 18 1180 16 227 6 1183 3 229 2 231 2 232 2 233 78 1186 2 234 2 236 2 235 3 1190 2 240 24 242 10 1194 2 247 2 249 2 252 2 253 2 1196 2 256 9 257 2 1197 2 1198 2 1199 12 259 4 1201 4 260 38 1204 2 1203 4 264 2 263 2 1207 78 266 4 1209 2 267 2 1216 2 1217 80 269 1112 270 2 271 6 1220 38 1221 2 273 2 1223 4 1224 2 274 2 275 2 1226 3 1227 2 276 2 278 2 1228 2 280 3 285 2 284 2 1234 78 288 2 1235 10 291 2 1239 2 296 2 297 2 1240 2 1241 2 1242 234 1243 2 1244 2 306 8 308 76 309 2 1259 2 312 966 315 2 1263 2 1264 2 317 2 318 2 1268 2 1269 2 319 2 321 6 1271 558 1272 2 1273 2 1274 18 324 2 326 3 327 2 1278 1 328 2 329 2 334 2 1280 2 337 4 340 78 1282 84 343 2 344 4 347 2 348 2 1287 4 351 2 353 2 1288 2 1293 3 356 2 1294 34 1296 2 358 38 1300 2 1303 12 362 1 363 12 1305 2 1306 4 1307 2 1311 2 1313 10 1314 3 1316 2 369 2 370 2 372 8 1318 2 1319 4 374 2 1323 78 379 2 1324 2 381 1 1327 2 382 2 384 8 383 2 387 12 389 2 388 34 391 2 394 8 396 2 397 2 1333 22 1335 54 1336 2 1337 2 1338 2 402 2 1339 7 403 8 406 13 407 15 410 4 411 2 1343 2 412 4 1345 10 414 2 1346 178 413 2 1348 4 1350 2 1351 2 1352 2 417 6 1354 16 1358 112 421 46 1360 2 1361 2 422 14 1364 12 1365 2 425 166 428 3 427 2 429 2 1369 4 1371 2 1372 2 431 2 433 38 1375 2 1380 38 1381 2 438 12 1382 10 441 2 442 2 1384 2 1383 2 1385 2 1387 2 445 80 1386 76 1390 3 449 78 450 2 1392 2 1393 6 1397 2 462 2 466 2 1406 2 468 2 1410 20 1412 6 1411 2 1413 2 473 2 1417 2 1418 2 1419 1 1420 2 478 38 479 2 1422 2 1423 2 481 38 1425 80 483 8 485 80 486 2 1427 8 487 2 1433 2 491 402 1436 2 1438 2 493 26 494 2 495 6 497 2 504 2 1449 4 1452 2 1454 6 1455 2 509 14 511 2 1459 2 1460 52 512 2 513 24 1462 2 1463 2 1464 2 514 2 1465 4 1468 2 1469 80 517 2 1473 66 518 2 521 8 523 156 1485 4 525 2 526 36 527 1 1487 2 1488 2 532 2 1492 2 1495 2 533 2 534 2 535 4 1501 2 537 4 1502 8 1503 14 540 4 1506 22 1507 13 1509 2 542 2 1515 2 547 2 549 7 1516 2 1517 2 1520 3 1518 4 551 2 1521 2 1523 2 554 12 555 3 1525 32 556 6 557 2 558 86 1526 2 561 2 1528 38 1532 6 1536 2 1537 66 565 2 566 10 1538 2 1539 2 567 2 569 2 1543 2 570 4 1544 22 1545 4 1546 3 573 2 1547 10 575 2 576 8 578 6 1554 124 580 2 579 4 1559 2 1557 2 585 10 1560 4 1561 2 1562 2 1563 2 590 2 1566 4 1568 2 595 2 598 2 1574 20 1575 20 601 12 1577 1 606 2 610 2 613 80 1582 2 1583 2 616 10 617 18 1586 2 1587 4 621 38 622 2 624 2 1592 2 625 2 1594 2 626 2 627 2 628 98 1600 2 1603 2 631 2 630 2 1605 2 1607 78 636 3 638 38 1610 2 643 10 1612 3 1613 4 1614 2 649 4 1618 2 651 2 1619 2 1620 2 1622 2 1623 16 652 2 1625 1 1624 2 1628 2 1627 16 1630 14 655 2 1631 2 657 2 658 2 659 6 662 2 661 24 663 4 664 2 1635 80 1636 2 667 2 675 8 676 4 678 2 679 2 1648 2 683 12 1649 1 1651 8 1653 2 1654 5 684 2 685 2 687 6 1658 2 1659 324 689 2 1663 38 690 4 692 2 691 3 694 38 696 80 1664 2 1665 22 1667 2 1668 2 698 32 1671 2 702 2 1678 2 1680 2 708 2 1681 2 1683 2 1685 2 1688 3 1690 6 1691 2 1692 2 712 2 713 6 1693 2 714 2 715 2 717 80 718 2 720 6 721 2 1696 78 1697 8 1699 2 1700 3 1701 1 1703 2 1704 3 1705 2 1706 2 1707 112 729 2 1709 2 731 2 1710 314 733 2 734 2 735 10 1713 2 1714 2 737 2 1715 3 1717 3 1718 2 1719 3 738 6 1721 2 742 10 743 2 1727 3 1729 2 1730 38 746 2 1733 7 748 102 1734 2 752 80 754 3 1736 38 756 24 1737 2 1741 120 1742 2 761 3 1747 24 1751 234 762 2 763 2 764 126 1754 2 765 12 1759 1 1758 84 1761 40 768 2 1765 2 770 2 1766 2 772 5 773 15 1771 24 1772 2 1773 2 774 2 1775 10 1778 38 775 3 1779 2 1780 2 777 2 1783 18 779 82 781 2 782 4 1788 156 785 2 1790 2 1792 3 1793 34 1794 2 789 2 1799 2 1800 2 1801 2 1803 14 793 2 794 2 1806 3 1810 20 1812 24 797 1 799 2 800 2 1815 8 801 2 802 2 803 2 1816 2 1819 8 1818 2 1821 16 810 100 1823 2 811 80 816 78 817 40 819 14 1829 2 820 1 1830 2 1832 4 1833 2 823 8 825 2 826 2 1835 2 828 2 829 4 831 38 1838 2 836 2 837 4 838 2 840 2 842 2 1841 20 1842 2 844 22 1844 38 845 2 847 3 1847 76 1849 3 1848 2 1851 2 1855 2 855 2 856 2 1859 2 1860 2 857 2 860 60 859 106 861 2 1861 36 862 2 865 3 866 2 1867 2 867 2 869 2 1872 4 1874 16 872 3 1875 3 1876 3 878 2 1880 78 880 6 1883 2 1882 2 1886 3 1887 2 1885 4 882 18 884 78 1890 2 888 2 1892 2 889 2 1895 3 1899 10 1900 2 1904 2 1905 2 893 78 895 2 894 78 1906 2 1907 8 901 2 1910 2 1912 2 1914 4 1915 2 906 20 905 2 1917 60 1918 2 907 2 1919 2 910 158 912 2 914 2 916 2 1925 25 1926 2 920 2 1929 38 1930 1174 1931 2 924 2 1935 2 930 2 
764 2 3 4 683 2 1874 2 312 2 1226 2 1406 2 631 2 1382 2 980 6 12 2 689 2 14 2 1137 2 1525 2 1146 2 507 2 1492 2 585 2 421 2 1930 2 64 2 1156 2 1244 2 
764 2 3 4 683 2 1874 2 312 2 1226 2 1406 2 631 2 1382 2 980 6 12 2 689 2 14 2 1137 2 1525 2 1146 2 507 2 1492 2 585 2 421 2 1930 2 64 2 1156 2 1244 2 
764 2 3 4 683 2 1874 2 312 2 1226 2 1406 2 631 2 1382 2 980 6 12 2 689 2 14 2 1137 2 1525 2 1146 2 507 2 1492 2 585 2 421 2 1930 2 64 2 1156 2 1244 2 
240 4 1398 4 304 2 363 2 810 2 764 2 765 2 1841 4 968 4 4 2 601 2 310 2 1193 2 906 4 713 2 312 4 945 2 74 2 1410 4 656 2 12 2 689 2 690 2 1137 3 880 2 1771 3 556 2 661 3 1199 2 227 4 1454 2 749 3 748 6 421 3 673 2 1930 10 1460 2 1783 4 1424 2 537 2 
240 4 1398 4 304 2 363 2 810 2 764 2 765 2 1841 4 968 4 4 2 601 2 310 2 1193 2 906 4 713 2 312 4 160 2 945 2 74 2 1410 4 656 2 12 2 689 2 690 2 1137 2 880 2 1771 2 556 2 661 2 1199 2 227 4 616 2 1454 2 749 2 748 6 421 2 673 2 1930 10 1393 2 1460 2 1783 4 1424 2 537 2 
240 4 1398 4 304 2 363 2 810 2 764 2 765 2 1841 4 968 4 4 2 601 2 310 2 1193 2 906 4 713 2 312 4 160 2 945 2 74 2 1410 4 656 2 12 2 689 2 690 2 1137 2 880 2 1771 2 556 2 661 2 1199 2 227 4 616 2 1454 2 749 2 748 6 421 2 673 2 1930 10 1393 2 1460 2 1783 4 1424 2 537 2 
240 4 1398 4 304 2 363 2 810 2 764 2 765 2 1841 4 968 4 4 2 601 2 310 2 1193 2 906 4 713 2 312 4 160 2 945 2 74 2 1410 4 656 2 12 2 689 2 690 2 1137 2 880 2 1771 2 556 2 661 2 1199 2 227 4 616 2 1454 2 749 2 748 6 421 2 673 2 1930 10 1393 2 1460 2 1783 4 1424 2 537 2 
240 4 1398 4 304 2 363 2 810 2 764 2 765 2 1841 4 968 4 4 2 601 2 310 2 1193 2 906 4 713 2 312 4 160 4 945 2 74 2 1410 4 656 2 12 2 689 2 690 2 1137 2 880 2 1771 2 556 2 661 2 1199 2 227 4 616 4 1454 2 749 2 748 6 421 2 673 2 1930 10 1393 4 1460 2 1783 4 1424 2 537 2 
228 2 687 2 679 2 1875 2 278 2 647 2 
606 2 1875 2 1369 2 558 2 653 2 369 2 411 2 
1249 2 1569 1 677 2 902 2 1513 2 1336 2 101 2 1795 2 312 8 572 1 1441 2 1378 1 368 2 1444 2 688 2 1131 1 1632 1 693 2 320 2 1553 2 51 2 1581 2 377 2 885 2 1388 2 1930 10 
240 15 363 6 1308 2 765 6 601 6 131 4 712 2 312 6 1338 2 494 2 713 6 160 2 8 2 576 2 690 2 1177 2 112 4 880 6 1449 2 556 6 227 4 1142 2 616 4 1454 6 1639 1 1737 2 1930 6 265 2 1393 3 1783 12 592 2 
1684 2 331 2 1321 2 968 2 1200 2 1872 2 919 2 906 2 1151 2 1676 2 716 2 1173 2 1410 2 
1922 2 1684 4 331 2 1321 2 968 2 1200 6 1872 2 919 2 906 2 312 1 1151 2 1676 2 1930 1 943 2 716 2 849 1 1173 2 1410 2 
1922 2 1684 4 331 2 1321 4 968 2 1200 6 1872 4 919 2 906 2 1151 2 1676 2 943 2 716 2 1173 4 1410 2 
1922 6 1684 4 331 2 1321 8 968 2 1200 10 1872 8 919 2 906 2 312 1 1151 2 1676 2 1930 1 943 8 716 2 849 1 1173 8 1410 2 
485 4 1427 2 1566 2 811 4 934 8 491 36 1435 8 1313 4 132 2 938 2 816 4 7 15 717 4 613 4 1699 2 1323 4 829 1 1325 16 140 4 1457 4 621 4 1205 2 145 10 1207 4 1710 27 516 2 1217 4 269 103 34 4 152 30 1715 3 399 10 1225 2 740 4 523 6 1607 4 46 4 1730 4 1238 8 1102 6 169 10 752 4 643 2 1108 4 1242 24 993 44 858 2 859 16 178 2 62 11 425 8 1616 32 1505 4 1751 24 1510 2 1009 10 433 4 1260 2 312 70 1376 2 1380 4 772 4 1880 4 1021 10 554 4 1271 24 1635 8 1778 4 884 4 207 4 1023 4 449 6 1640 4 1528 4 1027 4 1276 8 1028 4 1155 4 1786 2 1034 2 1035 4 1788 10 894 4 460 16 1040 8 336 2 1654 4 340 4 1282 6 1405 4 1659 29 344 2 910 10 1663 4 694 4 350 2 1554 14 1049 6 1809 2 583 1 1925 8 478 4 233 4 921 2 1930 78 481 4 927 2 235 1 1425 4 930 2 
485 4 1427 2 1566 2 1507 1 1061 2 1009 6 491 14 1314 1 132 2 312 26 938 2 7 14 772 2 717 4 1021 6 613 4 1699 2 1271 8 554 4 829 2 140 2 1203 2 449 2 1205 2 387 1 1207 2 1710 12 1034 2 1788 2 564 2 893 2 1217 4 269 40 1715 2 152 6 1654 2 1282 4 340 2 628 9 1225 2 739 2 1659 12 523 2 910 6 1607 2 579 2 1733 2 1049 2 1102 2 1809 2 752 4 1925 5 922 2 858 2 993 14 1930 28 62 2 1425 4 930 2 
485 6 1427 4 1566 8 811 6 934 42 1061 2 491 88 1313 5 1314 2 132 2 938 2 816 6 607 2 7 28 818 4 717 6 134 10 1447 4 612 4 723 6 1696 24 613 6 1072 4 1699 8 1322 24 1323 6 829 4 140 10 1203 2 621 4 1461 26 1206 8 1207 10 387 11 1330 26 1710 58 1217 6 269 248 1469 6 150 2 152 34 1715 6 1472 8 1598 2 1334 10 628 22 158 24 1225 2 1339 2 739 2 523 36 1097 4 287 24 1726 4 1607 10 1730 4 637 4 1733 4 1102 14 752 6 1108 6 1739 18 1242 92 993 112 858 2 859 42 178 2 423 8 62 16 1749 90 425 50 1751 84 1507 7 1009 16 769 4 433 4 1374 10 312 134 1260 2 1376 2 1380 4 772 4 1880 6 1021 16 1271 124 554 8 1635 24 1778 4 884 6 323 24 207 6 1023 6 449 10 1528 4 208 90 1027 6 1028 6 1534 4 1155 6 1034 8 1035 6 564 2 1788 18 784 12 893 4 894 6 1654 4 1282 8 340 10 1659 58 344 2 346 2 910 16 1663 4 694 4 1554 12 579 2 1049 14 1809 2 1925 15 478 4 233 6 1930 150 481 4 235 4 1425 6 930 8 
485 2 1566 2 1752 2 1007 2 1869 2 1690 4 1009 4 491 20 185 2 189 2 132 2 1374 2 312 44 938 2 7 36 717 2 877 2 134 2 1447 2 1579 4 1021 4 613 2 881 2 198 2 1699 2 1271 6 1322 2 727 2 1889 2 323 2 1638 2 447 2 140 2 829 2 1836 2 449 2 620 2 1205 2 1207 2 145 2 1466 2 91 2 1710 6 516 2 1034 2 1788 2 1902 2 1467 4 1711 2 1217 2 269 48 1715 2 1088 2 1334 2 1091 2 340 2 1282 6 399 2 105 2 1225 2 739 2 1659 6 523 2 910 4 287 2 1607 2 224 6 1292 4 1048 2 167 2 475 2 1049 2 1102 2 1809 2 169 2 294 2 584 2 293 2 752 2 922 2 858 2 993 20 1930 46 62 2 423 2 927 2 1425 2 1363 2 121 2 424 2 930 2 
1871 2 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 
1898 1 1368 1 1722 1 925 1 741 1 787 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V FAILED junit.framework.AssertionFailedError 1121 1279 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 1121 1279 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.VarInfo:is_direct_non_slice_array()Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_18()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:intersection([I[I)[I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_12()Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.test.FormatTestCase:passes()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_2_21(I)Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.VarInfoName:isLiteralConstant()Z
daikon.PptSlice3:arity()I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.PptSlice1:arity()I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:baseIsScalar()Z
daikon.PptSlice0:arity()I
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.Quant:slice([III)[I
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Debug:logOn()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_27()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_133()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.MathMDE:gcd(II)I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_119()Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_60()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_47()Z
utilMDE.WeakHasherMap:size()I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
jtb.JavaParser:jj_3R_136()Z
daikon.inv.Invariant:logDetail()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_vars()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.JavaParser:jj_3R_97()Z
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:numIntArrays()I
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:eltwiseLT([I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Ppt:Ppt()V
daikon.Quant:noDups([I)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:getConfidence()D
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_70()Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:jj_3R_80()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_148()Z
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.JavaParser:jj_3_30()Z
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_108()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd(JJ)J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaCharStream:BeginToken()C
daikon.Quant:gt(II)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.ProglangType:isScalar()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:InvMap()V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParser:jj_3_17()Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.ArraysMDE:indexOf([J[J)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.syntaxtree.NodeList:NodeList()V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_68()Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:union([I[I)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.FormatCommand:getCommand()I
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:subsetOf([J[J)Z
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.VarInfo:new_ppt()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaParser:jj_3_3()Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.Ppt:indexOf(Ljava.lang.String;)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_163()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:jj_3_20()Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_72()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaCharStream:getEndLine()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.visitor.FormatCommand:FormatCommand(II)V
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexLTE([I[I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.ProglangType:isPseudoArray()Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_12(I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.ModBitTracker:num_sets()I
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.ProglangType:isArray()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_69()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:jj_3R_120()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParser:jj_3R_134()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_106()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3_16()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_1()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.JavaParser:jj_3_14()Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Debug:logDetail()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_3R_62()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
jtb.JavaParser:jj_3R_124()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:jj_3R_118()Z
daikon.VarInfo:isIOAArray()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:jj_3R_162()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.Quant:lt(II)Z
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_125()Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
jtb.JavaParser:jj_3R_137()Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.PptName:getSignature()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_107()Z
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_76()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaCharStream:getBeginLine()I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_110()Z
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_116()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_105()Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String; | OPERATOR | 57093 | < -> >
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.string.OneOfString:enabled()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(F[F)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eq(FF)Z
jtb.JavaCharStream:ReadByte()C
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.syntaxtree.NodeOptional:present()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.NodeListOptional:present()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_13()Z
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptName:toString()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.ValueTuple:size()I
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:jj_3R_121()Z
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_87()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3_25()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ProglangType:isString()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.Quant:setEqual([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.JavaParser:jj_3R_210()Z
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.Quant:eq(II)Z
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_122()Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(DD)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.Quant:eltwiseLTE([I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_100()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.PptSlice2:arity()I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaCharStream:FillBuff()V
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParser:jj_2_18(I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE:sign(I)I
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_4()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:element_range([I)I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfo:has_typeof()Z
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.Invariants:Invariants()V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
jtb.JavaParser:jj_3R_115()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParser:jj_3R_58()Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.Quant:lexLT([I[I)Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.visitor.FormatCommand:getNumCommands()I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_13(I)Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[I)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.JavaParser:jj_3R_57()Z
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:jj_3R_149()Z
daikon.Quant:ne(II)Z
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.string.OneOfString:sort_rep()V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptName:isEnterPoint()Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.VarInfo:isDerived()Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:jj_3R_81()Z
daikon.Quant:memberOf(S[S)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.ProglangType:isFloat()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.ProglangType:baseIsString()Z
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lte(II)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.Quant:eltsLT([II)Z
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.visitor.TreeFormatter:TreeFormatter()V
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:sameLength([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_35()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParser:jj_3R_164()Z
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.Invariant:logOn()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.Invariant:prob_or(DD)D
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.Invariant:is_false()Z
jtb.JavaParser:jj_3R_126()Z
daikon.diff.Node:Node()V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptName:isCombinedExitPoint()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:gcd([I)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_104()Z
daikon.Quant:gte(II)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName:hasTypeOf()Z
jtb.JavaParser:jj_3R_114()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:is_type()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.ProglangType:base()Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_77()Z
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_10()Z
daikon.Quant:concat([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.VarInfo:isPrestate()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:jj_3_21()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:sorted([I)Z
jtb.JavaParser:jj_3R_117()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:jj_3R_109()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfo:relate_var()V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_98()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:dimensions()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_101()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:isIOASet()Z
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.PptSlice1:num_samples()I
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_88()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_67()Z
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_2_4(I)Z
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:backup(I)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaParser:jj_3R_180()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseGT([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.JavaParser:jj_3_15()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
375 2 1895 2 1117 2 867 4 421 2 1631 2 469 2 1224 2 1691 2 
264 2 752 2 1063 2 824 2 1223 2 209 2 1173 6 1407 2 435 6 1563 2 894 6 
1116 2 1150 2 1117 2 1725 6 1712 6 1453 6 1729 6 1472 4 1038 2 1369 2 840 2 787 4 1691 2 
735 12 1656 10 1117 6 367 2 1421 8 1120 2 252 10 381 4 971 2 1291 6 1692 10 1691 6 142 10 1438 4 1165 8 1617 26 464 6 1253 10 813 16 725 8 1850 8 1405 4 530 2 1574 16 1328 2 1409 16 1266 28 892 2 1144 4 244 2 
150 6 468 4 
542 2 
1626 2 1274 2 1631 2 368 4 600 2 6 2 8 2 1397 2 1284 2 1523 2 1639 2 662 2 258 4 1743 2 1691 4 1403 2 267 2 846 4 1408 2 1298 2 1412 2 1107 2 1763 2 1887 2 218 2 1117 4 283 2 1317 4 1904 2 1182 2 457 2 226 2 1432 2 181 2 1493 2 1077 2 1789 2 1328 2 755 2 1140 2 704 2 1794 2 888 2 1510 2 
1383 6 735 22 1656 15 1117 4 739 8 450 2 252 15 576 2 1068 6 831 4 875 4 376 2 1562 6 76 6 1692 15 1691 4 1291 4 142 6 1754 4 1617 47 52 2 1165 19 464 4 1253 15 145 6 813 32 975 2 943 4 1352 4 1850 6 530 2 1574 32 1409 32 1853 3 1266 52 1415 4 645 4 1144 2 1707 5 
718 2 704 2 1556 2 
691 2 724 2 733 2 1864 2 1927 10 1805 2 1021 2 1838 2 1783 2 1357 2 1217 22 218 2 1218 2 348 2 
590 2 735 2 1656 2 1897 2 252 2 225 2 313 2 1692 2 1291 2 142 4 1165 2 1617 4 1253 2 146 2 813 2 1079 2 1646 2 1574 2 886 2 1409 2 1266 6 217 2 1144 2 
1383 6 462 2 735 4 1617 12 1656 4 1253 4 813 8 943 4 252 4 1574 8 1409 8 1266 16 381 2 1415 4 1600 2 1562 6 1692 4 
1313 4 571 4 249 2 1065 4 1607 4 1556 2 1175 4 872 2 653 2 288 4 718 6 176 4 1664 2 907 2 1244 2 258 4 1666 2 1127 2 1460 2 1249 2 1916 2 723 14 1042 2 1292 2 1592 2 1135 62 267 2 1013 2 1929 4 1298 4 120 2 704 8 191 10 857 10 1378 2 1414 2 615 4 1544 2 1233 4 620 4 
402 2 712 2 542 2 486 2 552 2 1590 2 912 2 1619 2 239 2 1356 2 
1090 2 710 4 823 1 3 3 1094 2 713 2 370 2 1450 2 138 4 378 4 139 3 838 2 140 2 1691 34 1104 6 974 2 268 2 850 2 1224 2 494 16 1465 2 157 2 1353 2 495 1 1469 2 1595 2 496 2 614 2 1354 1 1816 1 276 2 1230 6 1818 2 163 4 278 12 501 3 164 2 30 3 1478 2 1829 8 400 2 31 2 1604 2 1832 3 989 24 1117 32 624 2 740 1 509 2 1238 2 1608 2 170 2 870 2 172 4 1610 2 408 2 177 2 178 2 179 2 46 2 184 16 516 1 1004 2 50 2 1843 2 1133 2 1844 2 1622 2 189 1 525 2 754 32 642 2 1262 2 1017 2 1623 2 1380 2 1022 2 302 8 1858 3 304 3 646 2 1625 2 428 1 764 2 64 4 1151 2 766 2 432 2 69 2 902 2 1396 2 1633 2 551 6 660 16 661 1 1747 1 1746 2 664 2 77 2 914 3 1643 1 1878 1 1644 2 920 2 782 2 1533 2 83 4 1647 32 1410 2 1411 2 1890 3 1773 8 1653 2 330 6 789 1 1422 2 101 12 798 2 931 2 1903 2 803 2 1320 4 453 2 458 2 1560 2 1784 2 1185 24 689 2 1436 2 938 1 461 1 1919 3 1670 2 110 16 111 2 1080 1 1326 2 1923 2 696 3 240 2 699 2 585 1 470 3 1573 2 1934 2 955 5 819 2 364 2 1087 2 
963 2 1691 2 
1370 2 1691 4 1166 2 
1645 2 
479 2 480 2 964 2 2 2 5 4 1451 2 1452 6 485 4 10 10 1455 18 488 88 1459 6 1458 2 1456 2 12 106 489 2 972 6 1461 14 16 2 1467 4 979 30 981 4 20 2 22 4 1474 60 497 20 498 2 27 6 28 2 29 2 984 2 1480 204 505 26 504 2 1483 2 990 4 1484 244 993 8 995 2 996 6 37 2 41 32 1490 204 43 4 1491 2 45 6 1002 4 1003 4 1005 4 519 4 520 2 1007 386 1498 2 1499 10 1011 26 1502 2 527 4 526 14 529 2 1016 4 1018 2 1020 182 534 6 537 8 1026 12 62 12 540 2 1027 182 63 2 1029 4 543 8 71 8 545 2 70 2 1521 2 1036 20 75 6 1524 2 1525 2 553 10 556 2 1528 2 78 2 558 112 1043 2 560 4 561 106 1044 6 1046 432 1534 2 1047 22 82 2 564 2 1536 18 1538 6 1052 132 565 2 566 12 1053 70 90 2 1056 12 91 112 1058 4 568 2 1060 566 94 4 97 6 1552 66 99 2 1554 6 1066 2 105 12 1067 224 1070 52 579 198 578 2 1561 2 109 6 581 328 1566 4 1074 336 1076 8 112 2 1570 4 116 6 586 2 1572 4 118 6 1082 2 122 198 1576 22 124 26 125 6 591 12 128 4 1580 2 130 10 1093 20 131 4 1092 60 599 4 598 6 602 16 601 2 135 2 137 6 1588 2 1589 8 1100 2 147 6 149 2 1105 2 1594 18 154 4 155 2 156 4 612 6 158 4 159 6 1106 64 160 2 1108 2 1599 16 1601 30 616 26 1602 6 619 20 1114 2 1117 10 623 2 1606 4 626 30 169 46 171 4 1122 30 1124 4 1611 2 633 6 180 4 183 2 1126 2 1129 2 636 4 1615 6 1130 8 1618 244 1621 2 185 4 186 2 639 4 641 2 644 6 1142 2 192 2 1146 4 1148 6 1147 6 1149 20 651 68 200 2 201 30 655 6 1635 6 1634 2 202 2 203 6 205 10 1162 26 207 22 669 2 671 2 210 2 672 2 214 48 213 4 1649 2 216 4 1167 6 673 4 1652 6 679 74 223 2 683 46 1658 2 1172 8 685 132 1174 86 1179 4 1178 2 1183 2 1188 2 1189 14 692 30 233 10 694 2 236 4 1671 2 1192 12 698 26 1194 30 702 4 1197 198 1673 2 242 2 703 112 243 4 1674 290 1201 8 246 20 1677 376 1679 2 1204 6 1203 2 711 8 1681 4 1682 6 714 4 1208 4 1211 6 1213 4 254 2 1687 2 1215 2 259 98 260 26 1690 2 722 244 1691 10 1220 2 1222 4 1693 2 266 2 1696 2 269 12 1225 2 1700 14 1229 2 1705 8 1704 4 277 2 731 2 279 2 732 2 1235 2 281 2 734 6 738 4 741 2 742 192 1241 24 286 4 1716 2 1718 64 745 2 1243 48 746 2 293 2 1247 84 294 6 1250 46 1252 112 1724 2 750 2 1723 2 753 4 1261 2 1260 6 1264 2 756 2 757 6 1730 432 299 60 300 2 1267 2 1268 2 305 6 761 2 1273 6 1735 12 308 140 1739 6 768 2 771 46 1281 2 1285 6 773 2 775 6 1286 4 1748 2 1750 2 1289 2 777 2 1751 4 1290 6 779 6 1755 26 1756 14 1757 12 1294 2 1760 6 1759 50 1761 8 323 6 1300 16 1764 4 326 2 1767 26 1768 2 328 2 1310 2 329 16 1771 328 1772 192 788 28 790 4 1775 2 332 4 1314 2 333 4 1776 2 794 6 795 60 796 198 1779 2 340 198 1322 2 807 2 344 2 1787 8 347 6 1788 6 350 2 351 2 1325 8 812 2 356 2 1795 30 363 2 365 28 1799 2 820 4 1801 2 371 2 827 12 1806 30 377 6 1807 6 379 4 836 2 838 2 1810 2 843 2 1347 4 845 2 1351 8 388 6 849 2 389 2 851 4 854 2 1815 2 855 2 1355 2 858 4 860 2 861 28 1358 8 393 8 863 2 1822 14 1825 26 1361 6 396 2 864 4 1363 4 1831 2 405 6 1837 6 873 30 1367 2 411 2 412 2 878 198 1842 2 1845 4 881 4 884 2 1375 6 1851 6 1379 2 893 2 423 20 1859 6 895 4 896 2 1384 46 1385 2 899 2 900 2 1387 4 1391 92 433 2 1394 4 434 160 904 4 905 54 1399 6 908 28 1401 2 437 2 1873 2 1874 82 438 198 1875 4 1404 22 1876 2 918 4 921 6 442 28 1416 12 1418 2 1419 2 925 2 448 2 930 6 1426 2 932 2 452 2 1907 2 454 4 1908 20 456 2 1910 2 1430 2 1431 2 1914 2 1915 8 937 2 1434 4 939 4 1920 228 466 6 941 2 1440 94 944 2 1922 2 947 30 471 6 1442 6 950 198 951 4 1933 26 1932 6 1935 14 473 24 957 2 959 2 1937 118 477 6 
1180 2 637 1 175 2 1612 2 
1180 2 546 2 
667 2 1180 2 455 2 704 2 1881 2 35 2 1405 2 
1180 2 455 2 1161 2 
1180 2 455 2 594 2 
1540 2 1612 2 1462 2 
1180 2 455 2 
539 2 1462 2 
1180 2 55 2 
1612 2 1462 2 958 2 
1612 2 747 2 1672 2 
439 2 1612 2 1511 2 
973 2 1612 2 1577 2 
1654 2 1612 2 891 2 
1462 2 1809 2 
1180 2 1583 2 
317 2 1672 2 
439 2 1207 2 
1931 2 1577 2 
1226 2 891 2 
1462 2 682 2 
891 2 1546 2 
1365 2 1577 2 
439 2 366 2 
903 2 1672 2 
751 2 1612 2 1462 2 958 2 
751 2 1612 2 1462 2 958 2 1708 2 
1917 2 1612 2 1462 2 
1612 2 1462 2 799 2 
1350 2 493 2 977 2 584 2 
704 2 1758 2 1881 2 1913 2 
667 2 704 2 1758 2 1881 2 1913 2 517 2 
1180 2 455 2 704 2 1881 2 1055 2 1405 2 
1182 2 331 2 
704 2 1881 2 1405 2 134 2 
1577 2 1307 2 
1099 2 891 2 
1587 2 1672 2 
439 2 384 2 
439 2 891 2 1360 2 
439 2 891 2 606 2 
439 2 891 2 413 2 
439 2 891 2 190 2 
965 2 309 6 1388 2 549 6 1102 2 1881 2 704 2 219 2 
859 2 1462 2 
523 4 1529 2 132 2 1628 2 1045 2 1152 2 1257 2 1035 2 390 2 1199 4 1701 2 1782 2 1868 2 325 2 1217 6 730 2 1720 2 1041 2 
1612 2 776 2 
1411 2 
710 4 595 2 1094 2 1450 2 138 4 378 2 838 2 140 2 720 2 607 2 1691 26 1101 2 1104 2 387 2 151 2 1224 2 494 6 496 2 1699 2 614 2 1473 4 1230 4 1818 2 163 4 278 8 164 2 167 2 1117 26 170 2 172 2 876 2 177 2 408 2 1844 2 1622 2 525 2 1726 2 754 4 1262 4 1017 2 1380 2 1623 2 1022 2 302 2 646 2 428 2 1518 2 1151 2 432 2 652 4 1633 2 551 2 1039 2 1746 2 77 2 1643 2 1533 2 83 2 1647 6 674 2 92 2 330 6 101 8 1903 2 931 2 1320 4 803 2 453 6 458 2 107 2 459 2 111 2 1080 4 1934 2 819 2 1087 2 
710 4 595 2 1094 2 1450 2 138 4 378 2 838 2 140 2 720 2 607 2 1691 26 1101 2 1104 2 387 2 151 2 850 2 1224 2 494 6 496 2 1699 2 614 2 1473 4 1230 6 1818 2 163 4 278 8 164 2 1476 2 31 2 167 2 1117 26 170 2 172 2 177 2 408 2 1844 2 1622 2 525 2 1726 2 754 4 1262 4 1017 2 1380 2 1623 2 1022 2 302 2 646 2 428 2 1518 2 1151 2 432 2 652 4 1633 2 551 2 1746 2 77 2 1643 2 1533 2 83 2 1647 6 92 2 330 6 101 8 1903 2 931 2 1320 4 803 2 453 6 458 2 107 2 1560 2 459 2 111 2 1080 1 357 2 1934 2 819 2 1087 2 127 2 
1025 2 
398 2 1446 2 
1514 4 710 2 1450 2 1632 4 1392 2 435 6 1585 2 838 2 1158 2 1343 2 1746 2 141 2 1691 12 264 2 1812 10 1697 2 1295 2 209 4 1698 2 978 2 1407 4 212 2 1299 2 1650 4 1651 2 444 8 676 2 1110 2 570 8 330 4 1550 2 1117 6 1657 2 1713 2 929 2 1903 2 1173 6 871 4 1661 4 1320 2 744 2 1429 2 174 4 106 2 182 2 1497 2 1251 2 1844 2 1568 2 752 2 111 2 188 2 114 2 949 2 1380 2 474 2 894 6 1798 2 425 2 962 2 
1514 4 710 2 824 2 1450 2 1632 4 1392 2 435 6 1585 2 838 2 1158 2 1343 2 1746 2 141 2 1691 12 264 2 1812 10 1697 2 1295 2 209 4 1698 2 978 2 1407 4 212 2 1299 2 1650 4 1651 2 444 8 676 2 1110 2 570 8 330 4 1550 2 1117 6 1486 2 1713 2 929 2 1903 2 1173 8 871 4 1320 2 1661 4 744 2 1429 2 174 4 106 2 1071 2 182 2 229 4 1251 2 1844 2 111 2 1568 2 752 2 188 2 114 2 949 2 1380 2 474 2 894 8 1798 2 425 2 962 2 
1550 2 1251 2 1697 2 1632 4 209 2 1698 2 1407 2 744 2 212 2 435 2 174 2 1650 4 474 2 1110 2 894 2 1798 2 425 2 141 2 
1514 4 710 2 824 2 1450 2 1632 4 1392 2 435 4 1585 2 838 2 1158 2 1343 2 1746 2 141 2 1691 12 264 2 1812 6 1697 2 1295 2 209 4 1698 2 978 2 1407 4 212 2 1299 2 1650 4 1651 2 444 4 676 2 1110 2 570 4 330 4 1550 2 1117 6 1657 2 1713 2 929 2 1903 2 1173 6 871 4 1661 4 1320 2 744 2 1429 2 174 4 106 2 182 2 1497 2 1251 2 1844 2 1568 2 111 2 188 2 114 2 949 2 1380 2 474 2 894 6 1798 2 425 2 962 2 
1514 4 710 2 1450 2 1632 4 1392 2 435 6 1585 2 838 2 1158 2 1343 2 1746 2 141 2 1691 12 264 2 1812 6 1697 2 1295 2 1223 2 209 4 1698 2 978 2 1407 4 212 2 1299 2 1650 4 1651 2 444 4 676 2 1110 2 570 4 330 4 1550 2 1117 6 1657 2 1713 2 929 2 1903 2 1173 6 871 4 1661 4 1320 2 744 2 1429 2 174 4 106 2 182 2 1497 2 1251 2 1844 2 1568 2 111 2 188 2 114 2 949 2 1380 2 474 2 894 4 1798 2 425 2 962 2 
1514 4 710 2 1450 2 1632 4 1392 2 435 6 1585 2 838 2 1158 2 1343 2 1746 2 141 2 1691 12 264 2 1812 6 1697 2 1295 2 209 4 1698 2 978 2 1407 4 212 2 1299 2 1650 4 1651 2 444 4 676 2 1110 2 570 8 330 4 1550 2 1117 6 1657 2 1713 2 929 2 1903 2 1173 6 871 4 1661 4 1320 2 744 2 1429 2 174 4 106 2 182 2 1497 2 1251 2 1844 2 1568 2 752 2 111 2 188 2 114 2 949 2 1380 2 474 2 894 6 1798 2 425 2 962 2 
1514 4 710 2 1450 2 1632 4 1392 2 435 8 1585 2 838 2 1158 2 1343 2 1746 2 141 2 1691 12 264 2 1812 10 1697 2 1295 2 1223 2 209 4 1698 2 978 2 1407 4 212 2 1299 2 1650 4 1651 2 444 8 676 2 1110 2 570 8 330 4 1550 2 1117 6 1657 2 1713 2 929 2 1903 2 1173 8 871 4 1320 2 1661 4 744 2 1429 2 174 4 106 2 182 2 1497 2 1251 2 1844 2 1568 2 752 2 111 2 188 2 114 2 949 2 1380 2 474 2 894 6 1798 2 425 2 962 2 
1514 4 710 2 1450 2 1632 4 1392 2 435 6 1585 2 838 2 1158 2 1343 2 1746 2 141 2 1691 12 264 2 1812 10 1697 2 1295 2 209 4 1698 2 978 2 1407 4 212 2 1299 2 1650 4 1651 2 444 8 676 2 1110 2 570 8 330 4 1550 2 1117 6 1657 2 1713 2 929 2 1903 2 1173 6 871 4 1661 4 1320 2 744 2 1429 2 174 4 106 2 182 2 1497 2 1251 2 1844 2 1568 2 752 2 111 2 188 2 114 2 949 2 1380 2 474 2 894 6 1798 2 425 2 962 2 
963 6 710 4 1450 2 1686 2 256 2 257 1 1691 46 264 4 1697 2 1223 4 1224 2 494 6 978 2 1698 2 496 2 1699 2 1230 6 278 4 1232 1 31 2 987 6 1713 2 512 2 744 2 999 1 1495 2 1497 2 49 6 1251 2 525 2 57 1 754 2 59 2 1017 2 1509 2 1022 2 302 2 1732 6 1734 1 1514 8 769 2 551 2 1746 2 1753 1 780 2 316 6 1295 2 83 2 1299 2 1305 6 1543 2 330 6 570 2 1061 2 1550 2 1315 2 101 4 1320 4 577 1 106 2 107 4 1786 6 1072 2 111 2 1568 2 114 2 353 6 1081 2 358 2 1083 2 1333 2 819 2 1798 2 1087 2 129 7 1094 2 825 7 1585 2 138 4 378 2 838 2 140 12 1808 6 1343 2 607 2 841 2 141 2 844 4 386 2 1591 8 1104 2 1812 2 850 2 1814 2 391 2 1817 6 1818 2 163 4 1110 2 164 2 1828 1 399 2 167 2 1117 24 1119 2 407 1 871 6 172 2 174 4 177 2 182 2 1844 2 188 2 1380 2 894 4 646 2 425 2 1627 2 1151 2 1632 4 1154 6 652 4 1392 2 435 8 1633 2 1158 2 1638 10 1163 6 1880 6 1645 6 1882 6 209 4 1407 4 1166 6 212 2 1884 4 922 2 1647 8 1650 4 1651 4 676 4 923 2 929 2 451 2 1901 2 224 2 1903 2 1173 12 1661 4 453 6 1429 2 458 2 933 2 1668 2 693 2 465 2 949 2 1934 2 474 2 962 2 
963 6 710 4 1094 2 1450 2 1686 2 1585 2 138 4 256 2 378 4 140 12 838 2 1808 6 1343 2 841 2 607 2 1691 48 141 2 844 4 386 2 264 4 1591 8 1812 2 1104 2 1697 2 1224 2 850 2 494 6 1698 2 978 2 1814 2 1699 2 496 2 391 2 1817 6 1818 2 1230 6 163 4 278 8 1110 2 164 2 399 2 31 2 167 2 987 6 1117 26 1119 2 1713 2 871 6 172 4 744 2 512 2 174 4 177 2 182 2 1495 2 1497 2 49 6 1251 2 1844 2 752 4 1255 2 188 2 525 2 59 2 754 2 1262 2 1017 2 1509 2 1380 2 532 2 1022 2 302 2 646 2 894 8 1732 6 425 2 1514 8 1627 2 1151 2 1632 4 1154 6 1392 2 652 4 769 2 435 8 1633 2 551 2 1158 2 1638 10 1746 2 1163 6 780 2 316 6 1880 6 1645 6 1295 2 1882 6 83 4 209 4 1166 6 1407 4 922 2 1884 4 212 2 1647 8 1299 2 1650 4 1651 4 1543 2 1305 6 923 2 676 4 570 6 330 6 1550 2 1061 2 1315 2 451 2 929 2 224 2 1901 2 101 8 1173 12 1903 2 1661 4 1320 4 453 6 1429 2 933 2 458 2 106 2 107 4 1786 6 1072 2 1668 2 693 2 1568 2 111 2 465 2 114 2 353 6 1081 2 358 2 949 2 1934 2 1083 2 1333 2 819 2 474 2 1087 2 1798 2 962 2 
963 6 710 4 1094 2 1450 2 1686 2 1585 2 138 4 256 2 378 4 140 12 838 2 1808 6 1343 2 841 2 607 2 1691 48 141 2 844 4 386 2 264 4 1591 8 1104 2 1812 6 1697 2 1224 2 850 2 494 6 1698 2 978 2 1814 2 1699 2 496 2 391 2 1817 6 1818 2 1230 6 163 4 278 8 1110 2 164 2 399 2 31 2 167 2 987 6 1117 26 1119 2 1713 2 871 6 172 4 744 2 512 2 174 4 177 2 182 2 1495 2 1497 2 49 6 1251 2 1844 2 752 4 1255 2 188 2 525 2 59 2 754 2 1262 2 1017 2 1509 2 1380 2 532 2 1022 2 302 2 646 2 894 8 1732 6 425 2 1514 8 1627 2 1151 2 1632 4 1154 6 1392 2 652 4 769 2 435 8 1633 2 551 2 1158 2 1638 10 1746 2 1163 6 780 2 316 6 1880 6 1645 6 1295 2 1882 6 83 4 209 4 1166 6 1407 4 922 2 1884 4 212 2 1647 8 1299 2 1650 4 1651 4 444 4 1543 2 1305 6 923 2 676 4 570 6 330 6 1550 2 1061 2 1315 2 451 2 929 2 224 2 1901 2 101 8 1903 2 1173 12 1661 4 1320 4 453 6 1429 2 933 2 458 2 106 2 107 4 1786 6 1072 2 1668 2 693 2 1568 2 111 2 465 2 114 2 353 6 1081 2 358 2 949 2 1934 2 1083 2 1333 2 819 2 474 2 1087 2 1798 2 962 2 
963 12 710 4 4 6 1450 2 1686 2 256 2 1691 52 264 4 1697 2 1223 2 1224 2 494 8 978 2 1698 2 496 2 1699 2 1230 6 278 10 31 2 736 6 987 12 1713 2 512 2 744 2 1495 2 1497 2 49 6 1251 2 752 4 1255 2 525 2 754 4 59 2 1262 2 1017 2 1509 2 532 2 1022 2 759 2 302 4 1732 12 1514 8 769 2 551 4 1746 2 780 2 316 6 1295 2 83 4 786 6 1299 2 327 2 1305 6 1543 2 330 6 570 6 1550 2 1315 2 101 10 1780 2 1320 4 106 2 107 4 806 6 1786 6 1072 2 111 2 1568 2 114 2 353 6 1081 2 358 2 362 6 1332 2 1083 2 1333 2 819 2 1089 2 1798 2 1087 2 824 2 1094 2 1585 2 374 6 138 4 378 4 838 2 140 10 1808 6 1343 2 607 2 841 2 141 2 844 4 386 2 1591 8 1812 6 1104 4 850 2 1813 2 1814 2 391 2 1817 6 1818 2 163 4 1110 2 164 2 399 2 167 4 1117 24 1119 2 871 6 172 4 174 4 177 2 182 2 1844 2 416 6 188 2 883 6 1380 2 894 10 646 2 425 2 1627 2 1151 2 1632 4 1154 6 652 6 1392 2 435 10 1633 2 1400 6 1158 2 1638 8 1163 6 1880 6 1645 12 1882 12 209 4 1407 4 1166 12 212 2 1884 4 922 2 1647 12 1650 4 1168 2 444 4 1651 4 923 2 676 4 929 2 451 2 1901 2 224 2 1173 16 1903 2 1661 4 453 8 1429 2 458 2 933 2 1668 2 693 2 465 2 949 2 1934 2 474 2 245 2 962 2 
570 6 1514 2 929 2 1632 2 1173 4 871 2 1661 2 1585 2 435 6 1429 2 1158 2 1343 2 1497 2 1691 4 141 2 1251 2 264 2 752 2 1568 2 1812 4 188 2 1697 2 209 4 978 2 1407 4 212 2 949 2 1299 2 1650 2 444 4 474 2 1110 2 894 6 962 2 425 2 
710 4 1094 2 1336 2 1450 2 1340 2 1585 2 138 4 838 2 140 4 1343 2 607 2 141 2 1691 28 264 2 1104 3 1812 2 1697 2 850 2 1224 2 494 6 1465 2 852 2 978 2 1595 2 496 2 1699 2 1230 6 1818 2 163 4 1110 2 164 2 31 2 1117 24 871 2 177 2 1719 2 1497 2 1251 2 1844 2 752 2 188 2 525 2 754 3 642 2 1017 2 1380 2 1022 2 894 6 646 2 1861 3 425 2 1514 2 1151 2 1632 2 652 4 435 6 1633 2 551 3 1158 2 1638 2 1746 2 209 4 1407 4 212 2 1647 8 1299 2 1411 2 1650 2 330 6 570 6 1061 2 929 2 1173 4 1903 2 1661 2 1320 4 453 6 1429 2 458 2 107 2 1665 2 1568 2 111 2 114 2 949 2 1934 2 819 2 474 2 962 2 
1585 2 889 2 1343 2 
1585 2 889 2 1343 2 
710 4 1094 2 824 4 1450 2 1686 2 1585 6 138 4 378 4 11 2 838 2 140 4 720 4 1343 4 607 2 1691 24 141 2 844 2 264 4 1812 6 1223 4 850 2 1224 2 494 2 1814 2 496 2 1699 2 856 2 1230 6 1818 2 1820 2 163 4 278 4 164 2 622 2 31 2 1117 16 1364 2 1713 2 625 2 871 4 172 4 744 2 174 4 177 2 1251 2 1844 2 752 4 525 2 1137 2 297 2 754 2 1017 2 1380 2 889 2 1022 2 894 12 897 2 1514 4 1151 2 1632 2 1865 2 1392 2 435 12 1633 2 1867 2 1636 2 1638 2 1746 2 1295 2 83 4 209 4 1407 4 922 2 1884 2 1647 2 1650 2 1651 2 444 4 676 4 1169 4 330 6 570 6 678 2 791 2 927 4 929 2 101 4 1903 2 1173 16 1320 4 1661 2 453 2 1429 2 458 2 107 6 1667 2 1075 2 111 2 1080 2 353 2 946 2 1934 2 819 2 474 4 1798 2 1087 4 
1073 2 1072 2 398 2 1550 2 844 2 678 2 792 2 111 2 1117 2 353 2 1867 2 256 2 140 2 11 2 1638 2 228 2 1691 4 
710 4 1094 2 824 4 1450 2 1686 2 1585 6 138 4 378 4 11 2 838 2 140 2 720 4 1343 4 607 2 1691 24 141 2 264 4 1812 6 1223 4 850 2 1224 2 494 2 1814 2 496 2 1699 2 856 2 1230 6 1818 2 1820 2 163 4 278 4 164 2 1826 2 622 2 31 2 1117 16 1713 2 625 2 871 4 172 4 744 2 174 4 177 2 522 2 1251 2 1844 2 752 4 525 2 297 2 754 4 1017 2 1141 2 1380 2 889 2 1022 2 894 12 1514 4 897 2 1151 2 1632 2 1392 2 435 12 1633 2 1156 2 1867 2 1636 4 1746 2 1295 2 83 4 209 4 1407 4 922 2 1884 2 1647 2 1650 2 1651 4 444 4 676 4 1169 4 330 6 570 6 678 2 791 2 927 4 929 2 573 2 101 4 1903 2 1173 16 1661 2 1320 4 453 2 1429 2 458 2 106 2 107 6 1075 2 111 2 353 2 946 2 1934 2 819 2 474 4 1798 2 1087 4 
710 4 1094 2 824 4 1450 2 1686 2 1585 6 138 4 378 4 11 2 838 2 140 4 720 4 1343 4 607 2 1691 24 141 2 844 2 264 4 1812 6 1223 4 850 2 1224 2 494 2 1814 2 496 2 1699 2 856 2 1230 6 1818 2 1820 2 163 4 278 4 164 2 622 2 31 2 1117 16 1713 2 625 2 871 4 172 4 744 2 174 4 177 2 1251 2 1844 2 752 4 525 2 297 2 754 2 1017 2 1380 2 889 2 1022 2 1143 2 894 12 897 2 1514 4 1151 2 1632 2 1392 2 435 12 1633 2 1398 2 1867 2 1636 2 1638 2 1744 2 1746 2 1295 2 83 4 209 4 1407 4 922 2 1884 2 1647 2 1650 2 1651 4 444 4 676 4 1169 4 330 6 570 6 678 2 791 2 927 4 929 2 101 4 1903 2 1173 16 1320 4 1661 2 453 2 1429 2 458 2 106 2 107 6 1075 2 111 2 1439 2 1080 1 353 2 946 2 1934 2 819 2 474 4 475 2 1798 2 1087 4 
1 2 0 2 966 8 3 2 968 2 7 4 970 2 13 2 14 2 15 2 975 4 974 2 17 3 18 2 19 26 23 2 25 2 983 2 26 2 30 2 31 324 986 4 988 2 989 15 32 2 34 2 33 2 992 2 991 2 994 2 997 2 998 156 38 2 39 2 40 3 44 2 1000 10 1001 2 46 2 1004 2 48 16 50 2 51 2 52 2 1008 2 53 170 1009 3 54 2 56 2 58 2 1014 2 59 8 60 80 1017 2 1019 78 1022 82 61 2 64 32 1028 78 65 38 1030 3 1031 78 1032 4 67 10 66 158 1034 16 69 14 68 4 72 2 73 2 74 6 1037 2 79 2 80 4 1049 2 1051 2 85 4 86 2 88 2 89 38 1054 2 1057 2 1059 2 92 2 93 38 1062 2 95 2 96 2 1064 2 1065 2 100 3 101 183 102 2 103 38 104 2 1069 2 107 2 108 2 111 2 110 52 113 20 1080 3 115 120 117 2 119 18 121 2 1083 8 1084 40 1086 18 123 2 1088 2 126 2 1089 2 1087 18 1090 14 1094 2 1096 4 1097 2 136 4 138 402 139 2 140 10 1101 2 144 2 143 4 1103 2 1104 16 148 2 152 2 151 2 157 2 1107 2 161 4 162 2 163 480 1111 3 165 2 164 2 1113 2 1115 2 167 46 168 2 1117 966 1118 2 173 4 1123 22 177 2 179 2 1125 2 1128 2 184 14 1132 9 1131 2 1133 2 187 2 1138 2 1139 2 1145 22 194 2 195 2 196 3 197 3 1151 2 198 2 199 2 1155 2 204 3 1157 2 1159 3 1160 80 206 8 1164 2 1165 6 211 4 215 156 220 3 221 2 222 14 1171 2 224 16 1177 4 1175 2 1181 7 1184 2 227 2 1185 61 1186 4 231 2 1187 234 230 4 1190 1 234 2 1191 2 237 2 238 2 1193 10 240 2 241 2 1196 3 1198 2 1200 2 245 2 1202 80 247 2 1205 2 248 3 1206 2 250 3 252 6 253 2 1209 78 1210 2 1212 2 1214 2 1216 38 1217 6 261 12 262 2 1221 20 265 156 1224 8 270 2 271 2 272 2 1227 2 273 8 275 76 274 38 1230 1112 276 2 278 178 1231 3 1233 2 1234 3 280 78 282 3 1237 2 1238 2 1239 2 1240 2 287 2 288 2 1242 2 290 40 292 60 1245 2 1246 2 1248 2 295 6 1253 6 1254 9 1256 16 1259 2 1258 95 298 78 1263 2 1265 2 1266 24 302 84 1269 2 1271 1 1270 2 306 2 1272 2 1275 2 1276 2 310 2 1277 4 1283 104 311 2 312 24 1288 6 314 32 1293 3 1297 2 319 60 318 2 320 2 321 2 322 2 324 2 1301 38 1303 2 327 2 1304 2 1306 22 1308 2 1311 34 330 10 1312 2 1313 2 335 2 336 2 337 78 338 112 1316 2 1318 2 1319 2 339 2 1320 8 341 3 1321 38 1323 2 343 80 345 2 346 2 1324 80 352 8 354 2 1327 2 359 2 1329 2 360 16 361 2 1331 16 1332 4 1333 8 364 2 1334 2 1335 2 1336 2 1337 2 1338 2 369 2 1339 18 373 2 1340 2 1341 2 380 1 1342 3 382 10 383 2 1344 38 1345 2 1346 2 385 6 1348 38 1349 10 387 2 1353 2 391 2 1359 18 394 2 395 2 397 2 400 2 399 2 1362 2 401 2 404 6 403 3 406 2 1366 2 409 2 410 20 1368 80 414 38 1371 2 415 38 1372 2 418 11 1373 2 1374 2 1376 2 1377 234 1380 2 420 2 1381 1 422 2 424 8 426 24 427 2 428 3 1386 2 429 2 430 2 431 76 1389 2 1390 2 1393 3 1395 80 1402 2 440 1 441 2 1406 2 1409 12 1410 2 1417 2 445 80 446 6 1420 6 447 4 1422 2 1423 12 449 2 1424 2 1428 2 453 18 458 4 459 4 1433 2 460 2 1435 3 1436 2 1437 2 464 4 465 2 467 2 470 2 1441 2 472 2 1443 10 1444 2 476 2 1447 2 1448 2 478 78 481 3 482 2 1449 3 483 2 1450 2 484 24 1454 2 487 2 1457 2 490 2 491 2 492 2 1463 2 494 32 1464 2 1466 2 1468 80 496 2 1470 2 1471 38 499 8 500 2 501 2 502 2 503 2 1477 2 1479 2 1481 2 506 2 1482 10 1485 2 507 4 510 14 511 2 1488 2 1489 2 512 2 514 2 1492 2 1494 10 516 1 518 2 1496 2 521 3 1500 2 1501 2 524 66 525 2 1504 80 1503 2 530 2 1507 2 531 20 1508 12 533 2 535 4 536 2 1512 2 1513 2 1516 2 1518 86 541 3 1519 2 544 2 1520 38 547 2 548 3 1522 2 550 24 551 46 554 6 1526 1 1527 78 1530 2 557 158 1531 4 1532 3 563 2 1535 48 1539 2 1542 2 567 2 1545 2 1547 2 1549 2 1548 36 1551 2 572 4 1553 2 1555 38 574 3 575 4 1559 2 1562 6 580 2 1565 10 1567 3 582 3 1569 2 583 2 585 1 1571 2 587 3 1574 12 1573 2 1575 106 588 4 1578 2 589 80 1579 34 592 2 593 2 595 2 596 2 597 78 1582 14 1584 2 1586 2 603 2 604 2 605 2 608 78 609 76 1593 2 610 78 1596 6 613 4 1597 2 1598 2 618 2 617 4 621 2 1603 4 1604 2 1605 2 1608 16 1609 158 627 2 630 2 1610 2 631 2 1613 2 1614 2 635 36 1616 2 1617 18 1620 2 638 2 640 2 643 2 1624 80 647 4 646 2 1625 2 648 4 1630 80 1629 2 652 12 654 2 1633 8 656 2 659 78 660 100 1638 2 663 2 1640 2 666 2 665 4 1642 1 1641 10 668 2 1643 2 670 102 1644 2 1647 126 1648 2 675 2 677 3 1653 2 1655 2 1656 6 680 2 684 2 1659 2 1660 2 686 3 1663 2 1662 3 688 78 689 2 690 2 1668 2 1669 26 695 2 697 6 699 2 700 2 705 2 706 3 707 2 1676 3 1678 22 708 2 709 2 710 8 1680 2 713 2 1683 24 1684 2 715 2 716 2 1685 2 717 8 719 80 1688 2 1689 2 1692 6 1691 1174 1694 8 726 2 727 2 1699 2 728 2 1703 2 1702 2 729 2 1706 3 1707 6 1709 2 735 10 737 4 740 13 739 8 1714 6 743 2 1715 12 1717 2 1719 2 1721 2 1722 4 748 20 749 38 1727 2 1726 2 1728 10 754 110 759 2 1731 3 760 8 1733 3 763 2 1736 38 765 2 1737 54 1738 36 766 2 767 2 1740 8 770 2 769 4 772 2 774 2 1746 2 1745 166 1747 15 1749 3 778 2 1752 2 781 2 783 2 782 2 784 2 785 2 1762 2 1765 38 1769 2 1770 38 1773 14 789 1 1774 6 793 2 1777 2 1778 2 797 2 798 2 1780 2 800 2 804 2 1781 82 1784 2 1785 2 808 2 809 2 810 124 811 1 813 12 1790 10 1791 2 1792 2 1793 2 817 558 1797 78 819 2 818 2 1800 2 821 4 822 38 823 1 1802 2 1803 4 826 2 828 38 1804 80 832 2 830 2 833 4 835 2 837 38 838 2 839 2 841 22 842 2 1811 2 847 2 848 2 850 314 1813 2 852 2 853 34 1819 2 1818 2 1821 4 1823 10 1824 20 1827 2 1829 14 1832 3 865 2 1833 78 868 2 1834 3 870 2 1835 10 1836 2 875 4 874 40 877 78 1839 60 1840 3 1841 2 1843 2 879 22 1844 2 1846 2 1847 14 1848 3 1849 2 1850 6 1852 60 887 2 1854 2 1855 2 1856 2 1857 66 890 1 1858 2 1860 3 1861 2 1862 2 1863 2 901 6 902 2 1866 2 1869 2 906 78 1870 2 1871 2 1872 2 909 4 910 3 914 2 913 22 915 2 916 12 917 22 1878 1 1877 2 1879 24 919 24 920 2 1883 112 1885 80 1886 2 1888 2 1889 2 924 20 1890 3 1891 2 1893 2 1892 2 1894 38 926 2 1898 2 928 2 1899 4 1900 2 1903 2 1902 6 1905 2 1906 2 1909 2 933 2 1911 4 1912 4 934 2 935 2 936 2 940 2 1918 20 1919 2 943 4 945 2 1924 83 1925 2 1926 1 1928 2 948 2 952 4 1934 84 953 2 954 8 956 4 1936 2 960 2 
709 2 167 6 1117 2 1104 2 1680 2 1030 2 67 2 611 2 494 2 754 2 652 2 716 2 453 2 1647 2 1227 2 1214 2 324 2 1000 4 551 2 382 2 1640 2 646 2 1115 2 1691 2 
709 2 167 6 1117 2 1104 2 1680 2 1030 2 67 2 611 2 494 2 754 2 652 2 716 2 453 2 1647 2 1227 2 1214 2 324 2 1000 4 551 2 382 2 1640 2 646 2 1115 2 1691 2 
709 2 167 6 1117 2 1104 2 1680 2 1030 2 67 2 611 2 494 2 754 2 652 2 716 2 453 2 1647 2 1227 2 1214 2 324 2 1000 4 551 2 382 2 1640 2 646 2 1115 2 1691 2 
1656 2 1117 4 1423 2 252 2 1153 2 1427 3 550 3 551 3 660 2 410 4 312 3 1287 2 1640 2 1692 2 263 2 1691 10 1918 4 1617 4 464 2 1253 2 110 2 670 6 813 2 1850 4 701 4 754 3 1574 2 1647 2 982 2 1409 2 1930 2 613 2 531 4 1330 2 1266 5 1302 2 1109 2 303 2 646 2 1824 4 
735 2 1656 2 1117 4 1423 2 252 2 1153 2 1427 2 550 2 551 2 660 2 410 4 312 2 1287 2 1640 2 1692 2 263 2 1691 10 1918 4 1165 2 1617 4 464 2 1253 2 110 2 670 6 813 2 1850 4 701 4 754 2 530 2 1574 2 1647 2 982 2 1409 2 1930 2 613 2 531 4 1330 2 1266 4 1302 2 1109 2 303 2 646 2 1824 4 
735 2 1656 2 1117 4 1423 2 252 2 1153 2 1427 2 550 2 551 2 660 2 410 4 312 2 1287 2 1640 2 1692 2 263 2 1691 10 1918 4 1165 2 1617 4 464 2 1253 2 110 2 670 6 813 2 1850 4 701 4 754 2 530 2 1574 2 1647 2 982 2 1409 2 1930 2 613 2 531 4 1330 2 1266 4 1302 2 1109 2 303 2 646 2 1824 4 
735 2 1656 2 1117 4 1423 2 252 2 1153 2 1427 2 550 2 551 2 660 2 410 4 312 2 1287 2 1640 2 1692 2 263 2 1691 10 1918 4 1165 2 1617 4 464 2 1253 2 110 2 670 6 813 2 1850 4 701 4 754 2 530 2 1574 2 1647 2 982 2 1409 2 1930 2 613 2 531 4 1330 2 1266 4 1302 2 1109 2 303 2 646 2 1824 4 
735 4 1656 2 1117 4 1423 2 252 2 1153 2 1427 2 550 2 551 2 660 2 410 4 312 2 1287 2 1640 2 1692 2 263 2 1691 10 1918 4 1165 4 1617 4 464 2 1253 2 110 2 670 6 813 2 1850 4 701 4 754 2 530 4 1574 2 1647 2 982 2 1409 2 1930 2 613 2 531 4 1330 2 1266 4 1302 2 1109 2 303 2 646 2 1824 4 
443 2 404 2 1597 2 1675 2 1239 2 587 2 
654 2 507 2 1518 2 681 2 460 2 1051 2 587 2 
762 2 985 2 987 2 249 1 1117 8 1581 1 251 2 1425 2 284 2 1903 2 869 1 801 2 628 2 1637 2 721 1 634 2 1691 10 1695 2 882 2 1050 2 815 2 980 2 419 2 1544 1 1112 2 961 2 
735 4 168 2 1656 6 1117 6 739 2 252 6 875 2 1562 4 911 2 1691 6 1692 6 1617 12 1165 2 1530 2 464 2 1253 6 813 6 943 2 237 2 848 2 1850 4 530 2 1574 6 1408 2 1409 6 952 2 1266 16 1796 2 1707 4 1510 2 
1918 2 880 1 1117 1 1921 4 417 2 355 2 372 2 1487 2 816 2 575 2 21 2 410 2 342 2 1024 2 1564 6 1824 2 1691 1 166 2 
1918 2 1921 4 417 2 355 2 372 4 1487 2 816 2 575 4 21 2 410 2 342 2 1024 2 1564 6 1824 2 166 4 
1918 2 880 1 1117 1 1921 4 417 2 355 2 372 8 1487 2 816 6 575 8 21 2 410 2 342 2 1024 8 1564 10 1824 2 1691 1 166 8 
1918 2 1921 2 417 2 355 2 372 2 1487 2 575 2 21 2 410 2 342 2 1564 2 1824 2 166 2 
1202 6 1091 4 248 2 597 6 967 90 1209 6 1804 6 138 88 255 2 969 4 837 4 1216 4 608 24 1691 150 265 17 976 18 610 10 850 58 1468 6 392 26 274 4 1230 248 163 112 1823 8 1475 26 1234 2 280 4 1710 2 282 4 31 58 1362 8 1711 10 1117 134 866 2 1833 6 36 2 285 8 998 18 1609 16 1121 2 513 12 877 6 291 10 42 4 1368 24 47 1 414 4 879 15 415 4 749 4 1009 2 53 34 1254 7 528 24 1504 6 418 11 296 4 1258 22 1015 2 298 24 60 6 1019 6 758 2 1377 84 1022 14 301 8 307 4 1028 10 1630 6 1033 2 1031 6 66 16 1393 2 1395 6 74 2 548 6 1278 10 1279 2 1280 90 657 4 658 24 1282 4 1283 42 906 6 659 6 1040 8 1288 4 1160 6 909 4 1745 50 1527 10 557 16 80 4 916 7 559 2 562 4 84 2 215 36 89 4 569 2 445 6 93 4 1896 2 1555 4 101 28 337 6 339 8 103 4 1557 4 458 8 805 6 688 10 1187 92 343 6 1324 6 810 12 1080 4 814 24 1924 8 697 4 1571 8 1575 42 1934 14 1084 2 817 124 706 2 1797 10 589 6 
538 2 1028 2 1095 2 650 2 1098 2 66 4 1395 2 9 2 548 3 834 2 1278 2 255 2 138 20 1279 2 657 2 658 2 436 2 1742 2 1160 2 1219 2 555 2 1691 46 1527 2 208 2 557 4 265 2 1296 2 610 2 850 3 84 2 1468 2 1537 2 215 2 1228 2 1885 6 1541 2 1413 2 862 2 1230 45 569 2 163 20 445 2 1236 2 31 3 1362 2 282 1 1711 2 1896 2 1117 44 334 2 98 2 508 2 1714 4 285 2 101 37 998 2 1176 2 339 2 629 2 1609 4 1121 2 1558 2 458 2 289 2 291 2 632 2 688 2 515 2 232 4 1006 2 349 2 463 2 1134 2 1078 4 1080 2 814 2 1136 2 1012 2 528 2 1924 6 1505 2 1571 2 1506 2 60 2 1195 4 1934 2 1445 2 1022 2 817 6 1797 2 1382 2 589 2 
1202 4 248 2 597 4 1209 4 1804 4 834 10 138 36 255 2 837 4 1216 4 1691 78 265 10 850 28 153 8 610 4 1468 4 274 4 1230 104 163 44 1823 4 31 30 1362 2 1830 2 1117 70 1833 4 866 2 998 10 1835 2 1609 10 1121 2 877 4 1368 8 414 4 879 8 415 4 749 4 1254 3 53 30 1010 32 1505 2 1015 2 1506 2 60 4 1019 4 1377 24 1022 6 1023 2 1515 2 193 4 1517 4 898 8 1028 4 649 8 650 10 1630 4 1031 4 66 10 1395 4 548 2 1279 2 1283 8 906 4 659 4 909 4 1288 2 1745 8 1160 4 1527 6 315 2 80 4 557 10 81 4 1048 2 84 2 1537 10 215 6 87 4 89 4 1766 16 1309 4 93 4 445 4 1896 2 98 2 1555 4 101 14 337 4 339 2 103 4 458 2 687 8 688 4 1187 24 343 4 1324 4 810 14 235 4 942 16 1924 6 1571 2 1575 16 1934 6 817 24 706 2 1085 4 1797 4 589 4 
1028 2 66 6 1393 2 1395 4 548 2 255 2 138 14 1279 2 1288 2 909 2 1160 4 1691 28 1527 2 557 6 80 2 916 1 265 2 850 12 610 2 84 2 1468 4 215 2 1230 40 163 14 569 2 1823 4 445 4 1234 1 280 2 1362 2 31 12 1896 2 1117 26 36 2 101 14 339 2 998 2 1609 6 1121 2 458 2 688 2 879 5 1009 2 53 6 1080 2 697 2 1924 4 1505 2 418 1 1258 9 1571 2 60 4 758 2 1934 2 1445 2 1022 2 817 8 1797 2 589 4 
24 2 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 
829 1 1741 1 1170 1 133 1 802 1 885 1 

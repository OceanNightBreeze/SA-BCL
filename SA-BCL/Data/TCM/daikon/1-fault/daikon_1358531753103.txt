#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V FAILED junit.framework.AssertionFailedError 755 
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.Ppt:indexOf(Ljava.lang.String;)I
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_114()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_3R_101()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:jj_3R_100()Z
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_162()Z
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_102()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_56()Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:concat([I[I)[I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_149()Z
daikon.VarInfo:isDerived()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.Invariant:logDetail()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.ModBitTracker:num_sets()I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:jj_2_36(I)Z
daikon.ValueTuple:size()I
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_86()Z
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:has_typeof()Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.Quant:memberOf(F[F)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:lexEqual([I[I)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.Debug:logOn()Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_61()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_76()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_70()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
jtb.syntaxtree.NodeList:NodeList()V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:gt(II)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_18()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern([D)[D
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.VarInfoName:hashCode()I
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.PptSlice2:arity()I
daikon.Quant:ne(II)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
jtb.JavaParser:jj_2_21(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_50()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3_22()Z
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.Quant:eltsEqual([II)Z
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:jj_3R_164()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
jtb.JavaParser:jj_2_25(I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.ProglangType:isString()Z
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexGTE([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.inv.Invariant:prob_and(DDD)D
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:gcd(II)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.WeakHasherMap:size()I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:jj_3R_81()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:num_samples()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.Quant:eq(FF)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.ProglangType:baseIsFloat()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Intern:intern([I)[I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_96()Z
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:isArray()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.PptSlice0:arity()I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.FormatCommand:getCommand()I
jtb.visitor.TreeFormatter:TreeFormatter()V
jtb.JavaParser:jj_3R_73()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([III)[I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_106()Z
daikon.PptName:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.FormatCommand:getNumCommands()I
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_15()Z
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:passes()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_110()Z
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_77()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.Quant:slice([III)[I
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_14()Z
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:getBeginLine()I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_134()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_98()Z
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_148()Z
jtb.JavaParser:jj_3R_115()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.ModBitTracker:split(I)I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_118()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:jj_3_1()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.Reverse:enabled()Z
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_27()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_126()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
jtb.JavaParser:jj_2_10(I)Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_60()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_89()Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_124()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
jtb.JavaParser:jj_3_36()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_109()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:jj_3_29()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaCharStream:readChar()C
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Debug:logDetail()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.ArraysMDE:min([I)I
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaCharStream:getEndColumn()I
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_74()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.MathMDE:modulus([I)[I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.binary.sequenceString.MemberString:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_180()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_169()Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:noDups([I)Z
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3R_117()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_58()Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:isIOASet()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.JavaParser:jj_2_35(I)Z
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_28()Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
utilMDE.ArraysMDE:sum([[D)D
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_17()Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_161()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_3_13()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:pairwiseGT([I[I)Z
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.Quant:eltsGTE([II)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_104()Z
daikon.VarInfo:relate_var()V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_88()Z
utilMDE.ArraysMDE:sum([[I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_57()Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_125()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_20()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eltsGT([II)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.PptSlice1:arity()I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.Quant:sameLength([I[I)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_48()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_3R_120()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_72()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:isPrestate()Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_30()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_52()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.ProglangType:base()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D | CONDITION | 37236 | if (x) -> if (!x)
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfo:isPointer()Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.diff.Node:Node()V
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_163()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.MathMDE:pow(II)I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.Intern:intern([J)[J
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaParser:jj_3R_108()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_21()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParser:jj_3R_116()Z
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.PptName:isEnterPoint()Z
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.ProglangType:baseIsString()Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:element_range([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.Quant:union([I[I)[I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eq(II)Z
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:jj_2_18(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfo:isIOAArray()Z
daikon.PptName:isCombinedExitPoint()Z
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_105()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.Invariant:is_false()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:jj_3_19()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.NodeOptional:present()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_85()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_3(I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([J[J)I
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLTE([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.ArraysMDE:sorted([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.JavaParser:jj_2_12(I)Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.LimitedSizeIntSet:size()I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_210()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.PptSlice3:arity()I
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParser:jj_3R_80()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:isReverse([I[I)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:subsetOf([F[F)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.PptName:getSignature()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_119()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_137()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:subsetOf([B[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_67()Z
jtb.JavaParser:jj_3R_54()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_4()Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:gte(II)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Assert:assertTrue(Z)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_5()Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:isFloat()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_62()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_136()Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
jtb.JavaParser:jj_3_35()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:dimensions()I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.Quant:memberOf(J[J)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.Invariant:justified()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseLT([I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:jj_3_25()Z
jtb.JavaParser:jj_3R_99()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfoName:hasTypeOf()Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lt(II)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1111 2 541 2 1534 2 1239 2 1591 2 201 2 1833 2 1621 4 1757 2 
1788 2 1335 6 1865 2 303 2 463 2 1226 6 608 6 581 2 181 2 1877 2 217 2 
247 2 1210 6 1240 2 1795 6 190 2 541 2 35 4 578 4 1833 2 661 6 1352 2 1530 2 511 6 
1281 4 1579 10 1341 10 541 6 1471 2 858 2 644 4 610 16 1833 6 548 2 458 10 297 2 1289 10 227 8 987 10 1650 2 685 26 1780 8 466 6 741 16 404 4 1150 8 313 2 1024 16 1230 28 1661 8 523 4 752 12 1306 6 57 2 
1789 4 624 6 
1206 2 
720 2 1702 2 114 2 1464 2 1527 2 541 4 482 4 1583 2 1833 4 678 2 1351 2 862 2 1710 2 1170 2 1353 2 1591 2 1592 2 1180 2 306 2 1595 2 313 2 625 2 1232 4 1233 2 1114 2 197 2 1728 2 1911 2 1125 2 1188 2 200 2 1248 2 826 2 579 2 1804 4 1015 2 1741 2 1864 4 1323 2 900 2 709 2 836 2 337 2 168 2 
1123 4 1790 2 1609 6 448 2 1579 15 1341 15 88 4 1162 8 824 6 541 4 576 6 610 32 1833 4 1171 2 182 4 458 6 1289 15 227 19 1533 5 987 15 652 6 102 4 685 47 1780 6 466 4 404 2 741 32 1024 32 1660 6 1230 52 995 3 1699 4 1756 4 752 22 627 2 318 4 1306 4 57 2 1572 2 
1125 2 1161 2 73 2 
1027 2 1924 2 897 2 1337 2 883 22 762 2 1268 10 467 2 331 2 579 2 749 2 1097 2 20 2 567 2 
418 2 1579 2 1703 2 1341 2 1582 2 355 2 610 2 1679 2 226 2 458 4 1289 2 227 2 987 2 685 4 466 2 404 2 741 2 1024 2 1230 6 1454 2 750 2 752 2 1700 2 
378 2 987 4 652 6 102 4 685 12 1579 4 1341 4 741 8 824 6 1024 8 644 2 1230 16 610 8 1256 2 1756 4 752 4 1289 4 
1372 4 1125 8 1311 4 1188 2 416 10 1157 2 116 2 1376 2 1284 2 1161 2 352 4 730 4 455 2 289 4 482 4 1093 2 1709 2 1772 14 613 4 1353 4 73 6 769 2 424 2 1531 4 1442 2 1684 62 1326 10 552 4 1688 4 362 2 310 4 1870 2 518 2 903 2 1051 2 164 4 1304 2 626 2 341 2 1936 2 
1083 2 1122 2 1497 2 889 2 978 2 191 2 1184 2 875 2 1206 2 215 2 
845 2 1336 2 604 2 967 2 1466 2 118 2 854 2 480 16 481 2 1473 8 1346 1 354 2 123 2 860 2 1833 32 1474 1 1585 2 127 2 733 3 982 2 615 2 1355 2 864 2 616 8 734 2 1841 2 1103 2 1224 2 1590 2 1842 2 1225 3 136 2 743 2 873 2 1363 2 745 1 746 3 496 2 874 2 1487 8 16 3 1723 2 1598 2 17 2 1725 2 500 2 245 2 1851 4 998 2 145 4 501 2 1607 16 1239 2 878 2 248 2 1853 2 1129 3 633 2 252 2 634 1 637 2 1498 2 1009 1 645 2 1503 2 1622 2 515 2 1387 2 1021 2 270 2 1389 3 656 2 901 32 1391 1 48 3 1267 3 520 2 51 1 274 2 1272 1 662 2 1878 2 1629 3 414 2 531 4 278 2 784 6 786 6 1633 2 788 1 1405 32 541 34 1639 2 67 3 423 2 681 2 1290 2 75 2 1044 12 1645 2 1176 1 1646 2 796 4 924 2 1048 2 308 2 799 2 561 1 1666 2 196 2 1186 2 1307 2 939 5 320 2 941 16 322 4 1793 4 1671 2 1427 1 1190 2 816 2 945 3 1797 24 1193 2 1919 2 1437 4 1803 2 827 16 1069 2 953 2 585 12 707 1 1447 2 1071 1 956 1 831 24 1199 2 334 2 1565 1 1452 2 835 2 1202 1 959 2 1204 4 211 6 1694 2 1079 3 1571 6 1082 2 
541 2 120 2 
413 2 541 4 1713 2 
1422 2 
473 26 471 2 1461 26 476 2 1462 192 477 2 3 82 969 12 4 22 971 4 972 432 8 2 980 6 1475 198 984 198 983 2 985 28 487 14 13 2 992 2 18 2 19 386 21 20 996 2 997 8 22 140 999 8 1491 8 1000 2 1001 2 1002 24 27 2 1496 2 505 16 506 6 508 4 32 2 1010 4 1011 4 1502 20 1507 20 509 4 510 2 1509 2 40 10 41 2 42 2 43 4 1020 2 1022 2 44 2 1514 2 517 2 1515 2 1025 30 1518 224 1519 4 1520 6 54 86 1521 2 1026 4 55 328 56 6 58 4 527 6 528 2 529 6 1028 12 534 376 1030 2 60 4 1035 8 1038 60 541 10 543 4 542 94 544 112 1528 4 1040 2 1042 2 68 2 70 4 549 2 76 192 1532 2 1536 2 1537 4 553 6 555 22 81 6 1539 244 560 112 563 160 565 2 566 2 1055 6 1056 6 1057 6 1546 2 571 2 1547 2 1550 4 1058 198 574 92 575 6 1060 4 1062 2 87 2 1063 2 90 4 1555 2 583 4 582 6 1556 106 95 10 1558 2 97 14 1070 10 99 4 1561 2 588 2 1562 12 1563 2 1073 20 593 14 109 6 110 132 1568 2 599 4 1570 64 1573 2 1084 2 115 2 605 8 119 4 607 2 1091 14 609 2 121 2 1584 4 124 2 1098 26 612 2 614 204 1099 8 130 46 1102 2 132 28 619 8 134 2 1107 26 620 2 1108 6 1596 46 1113 2 1597 10 1115 6 1600 30 1120 12 1604 20 628 60 1608 2 632 198 1127 4 1128 2 1611 4 1612 2 633 2 1613 2 635 6 638 6 151 2 639 4 641 14 1135 4 1617 2 1618 10 1619 2 1141 2 1142 2 1143 2 650 6 1144 2 156 66 157 2 1623 2 654 6 160 2 659 2 163 198 1628 2 1153 14 663 16 664 6 1154 26 172 2 1160 4 671 2 672 8 1634 2 178 2 1163 30 676 28 677 2 1640 2 1173 2 184 4 1651 2 1653 6 1659 2 1182 2 193 2 194 2 1662 46 688 26 689 2 1667 8 691 112 693 64 1670 22 699 2 1194 4 1673 2 1676 2 1677 12 203 4 705 30 1683 12 1681 2 1685 2 206 4 1690 2 1200 2 210 2 1693 6 1203 4 710 2 711 4 1697 30 716 4 216 6 719 2 1208 4 218 2 721 2 1211 4 1213 6 727 2 1704 4 731 2 1218 6 1714 8 228 6 230 2 1223 4 1228 2 1720 2 740 52 747 2 1231 2 1234 2 1724 22 1726 2 1236 8 244 8 1727 6 1730 6 757 2 1731 2 1242 30 1732 2 1245 2 1734 6 255 2 1253 6 1737 6 257 4 1738 2 258 4 1254 6 764 2 765 18 766 6 768 4 1258 2 261 6 1260 4 1742 74 773 20 1261 4 262 244 1262 4 264 4 774 4 1264 6 268 2 267 4 269 16 776 8 777 2 1748 4 1747 2 1753 6 781 46 1273 6 1275 4 275 6 1758 6 1759 6 1276 68 1761 4 276 4 783 2 277 30 279 2 283 26 1286 4 1763 2 1765 2 286 6 1767 2 1768 8 1769 12 291 4 1771 328 292 50 293 6 792 2 793 2 295 20 795 46 302 2 1294 2 305 182 1295 32 1782 6 1783 2 802 12 803 2 1784 6 1300 4 807 6 806 2 809 2 810 6 319 4 1791 4 813 2 1792 2 815 2 325 2 817 2 819 204 822 2 328 48 1316 6 1801 18 330 2 1318 2 1319 132 1320 2 830 16 1809 2 1810 60 332 4 1811 26 333 4 1327 30 1813 6 837 2 840 4 1819 4 1820 6 847 8 848 2 851 432 348 6 349 2 853 8 1829 2 351 2 1345 24 1348 6 1832 10 1833 10 359 6 1354 6 361 4 1359 12 1843 2 363 182 866 4 870 48 871 2 364 2 1364 6 1365 8 1845 2 370 2 1846 566 372 2 1369 2 373 18 1371 30 375 88 1373 2 879 198 880 198 881 6 1378 4 382 2 383 2 1857 2 1856 244 884 198 388 4 1858 4 890 54 390 4 392 4 892 12 395 2 895 6 896 2 1385 70 1867 2 1869 2 406 6 407 4 409 106 1393 228 410 6 1396 2 909 14 1880 2 415 2 1401 2 1884 84 1400 290 911 6 912 6 1406 2 917 26 1407 2 915 26 1408 6 419 6 1410 2 421 6 920 28 1890 4 1412 98 922 6 923 2 426 2 427 2 1896 2 1415 30 1416 8 928 6 1901 2 929 2 1417 112 930 2 1903 4 1420 2 1904 2 1421 6 933 2 934 2 1423 2 1906 2 938 26 1907 2 442 2 445 2 1912 60 944 30 1429 2 1430 4 947 4 1914 2 1916 4 1433 2 1920 2 950 20 1921 2 1922 336 1445 6 1925 12 1449 4 465 12 1451 2 1929 28 1453 2 961 2 1930 4 963 118 1935 2 
1397 2 504 2 1214 2 1478 1 
1397 2 1375 2 
1397 2 1125 2 1663 2 1834 2 499 2 523 2 780 2 
1397 2 400 2 780 2 
1397 2 374 2 780 2 
335 2 1647 2 1214 2 
1397 2 780 2 
335 2 368 2 
1397 2 1848 2 
335 2 1712 2 1214 2 
846 2 1785 2 1214 2 
298 2 1037 2 1214 2 
981 2 1085 2 1214 2 
1918 2 1049 2 1214 2 
335 2 703 2 
1397 2 1477 2 
1785 2 1885 2 
298 2 1305 2 
981 2 369 2 
1444 2 1918 2 
335 2 485 2 
1100 2 1918 2 
981 2 1682 2 
298 2 84 2 
453 2 1785 2 
335 2 202 2 1712 2 1214 2 
335 2 139 2 202 2 1712 2 1214 2 
335 2 1340 2 1214 2 
335 2 1643 2 1214 2 
1448 2 1198 2 872 2 964 2 
1729 2 782 2 1648 2 1649 2 62 2 45 2 452 2 883 6 189 2 1636 4 1830 2 1707 2 49 2 1013 2 1068 2 713 2 38 4 1876 2 
1303 2 1214 2 
175 2 1125 2 1834 2 93 2 
175 2 1125 2 1360 2 1834 2 499 2 93 2 
1397 2 1125 2 1834 2 523 2 780 2 412 2 
678 2 937 2 
623 2 1125 2 1834 2 523 2 
981 2 1197 2 
1918 2 1096 2 
1785 2 117 2 
298 2 1569 2 
298 2 1918 2 1601 2 
298 2 1918 2 478 2 
298 2 1918 2 470 2 
298 2 405 2 1918 2 
1605 2 1125 2 1379 2 1834 2 133 2 1900 6 935 2 1119 6 
335 2 464 2 
123 2 
1574 2 967 2 604 2 1466 2 860 2 1833 26 1355 2 616 2 1103 2 1590 2 1104 2 1842 2 743 2 1363 2 745 2 993 2 1723 2 1598 2 1851 2 145 2 501 2 1239 2 630 2 878 2 248 2 633 2 1005 2 1614 2 634 2 1133 2 637 2 1498 2 645 2 1622 2 656 2 901 4 906 2 1395 2 662 2 1878 2 414 6 531 4 784 2 786 6 1405 6 540 4 541 26 1167 4 681 2 1290 2 1044 8 796 2 924 2 308 2 1654 2 312 2 559 2 1307 2 941 6 322 4 1793 4 1671 2 1190 2 816 2 704 2 953 2 1560 2 585 8 1447 2 1565 4 1201 2 1074 2 1204 4 211 2 1694 4 1571 4 
967 2 604 2 1466 2 860 2 1833 26 1585 2 1355 2 616 2 1103 2 1590 2 1104 2 1842 2 743 2 873 2 1363 2 745 2 993 2 1723 2 1598 2 1851 2 145 2 501 2 1239 2 630 2 878 2 248 2 1853 2 633 2 1005 2 1614 2 634 2 1133 2 384 2 637 2 1498 2 645 2 1622 2 656 2 901 4 906 2 1395 2 662 2 1878 2 414 6 531 4 784 2 786 6 1405 6 540 4 541 26 1167 4 681 2 1290 2 1044 8 796 2 924 2 308 2 1654 2 311 2 559 2 1307 2 941 6 322 4 1793 4 1671 2 1190 2 816 2 94 2 953 2 1560 2 585 8 1447 2 1565 1 1201 2 1074 2 1204 4 211 2 1694 4 1571 6 
1159 2 
530 2 1152 2 
1760 4 1335 6 531 2 417 2 1883 2 786 4 541 12 608 6 1833 6 546 2 181 4 72 2 1220 2 12 2 1839 2 303 2 1293 4 1590 2 1897 2 988 4 1898 2 990 10 867 2 1226 6 433 2 1363 2 495 2 1419 2 1723 2 315 2 687 2 1908 2 142 2 501 2 1310 4 146 2 1793 2 877 2 633 2 1616 2 86 2 31 2 1008 8 886 4 1435 2 581 4 1923 2 1016 2 829 8 513 2 1622 2 1865 2 1624 2 1872 2 1266 4 1874 2 1330 2 53 2 841 2 662 2 
1760 4 531 2 1335 6 417 2 1883 2 786 4 541 12 608 8 1833 6 546 2 181 4 72 2 1220 2 12 2 1839 2 303 2 1293 4 1590 2 1897 2 988 4 1898 2 990 10 867 2 1226 8 433 2 1363 2 495 2 1723 2 315 2 687 2 1908 2 142 2 501 2 1310 4 1793 2 146 2 877 2 633 2 1616 2 86 2 31 2 1008 8 886 4 1435 2 581 4 1505 2 1140 4 1923 2 1016 2 829 8 513 2 1622 2 1865 2 463 2 1624 2 1872 2 1266 4 1874 2 53 2 841 2 1456 2 662 2 
1016 2 1760 4 1335 2 1293 4 1883 2 867 2 86 2 1266 2 31 2 608 2 53 2 841 2 687 2 181 2 546 2 581 2 72 2 142 2 
1760 4 1335 4 531 2 417 2 1883 2 786 4 541 12 608 6 1833 6 546 2 181 4 72 2 1220 2 12 2 1839 2 1293 4 1590 2 1897 2 988 4 1898 2 990 6 867 2 1226 6 433 2 1363 2 495 2 1419 2 1723 2 315 2 687 2 1908 2 142 2 501 2 1310 4 146 2 1793 2 877 2 633 2 1616 2 86 2 31 2 1008 4 886 4 1435 2 581 4 1923 2 1016 2 829 4 513 2 1622 2 1865 2 463 2 1624 2 1872 2 1266 4 1874 2 1330 2 53 2 841 2 662 2 
1760 4 1335 6 531 2 417 2 1883 2 786 4 541 12 608 4 1833 6 546 2 181 4 72 2 1220 2 12 2 1839 2 1293 4 1590 2 1897 2 988 4 1898 2 990 6 867 2 1226 6 433 2 1363 2 495 2 1419 2 1723 2 315 2 687 2 1908 2 142 2 501 2 1310 4 146 2 1793 2 877 2 633 2 1616 2 86 2 31 2 1008 4 886 4 1435 2 581 4 1923 2 1016 2 829 4 513 2 1622 2 1865 2 1624 2 1872 2 1266 4 1874 2 1330 2 53 2 841 2 662 2 1877 2 
1760 4 1335 6 531 2 417 2 1883 2 786 4 541 12 608 6 1833 6 546 2 181 4 72 2 1220 2 12 2 1839 2 303 2 1293 4 1590 2 1897 2 988 4 1898 2 990 6 867 2 1226 6 433 2 1363 2 495 2 1419 2 1723 2 315 2 687 2 1908 2 142 2 501 2 1310 4 146 2 1793 2 877 2 633 2 1616 2 86 2 31 2 1008 4 886 4 1435 2 581 4 1923 2 1016 2 829 8 513 2 1622 2 1865 2 1624 2 1872 2 1266 4 1874 2 1330 2 53 2 841 2 662 2 
1760 4 531 2 1335 8 417 2 1883 2 786 4 541 12 608 6 1833 6 546 2 181 4 72 2 1220 2 12 2 1839 2 303 2 1293 4 1590 2 1897 2 988 4 1898 2 990 10 867 2 1226 8 433 2 1363 2 495 2 1419 2 1723 2 315 2 687 2 1908 2 142 2 501 2 1310 4 146 2 1793 2 877 2 633 2 1616 2 86 2 31 2 1008 8 886 4 1435 2 581 4 1923 2 1016 2 829 8 513 2 1622 2 1865 2 1624 2 1872 2 1266 4 1874 2 1330 2 53 2 841 2 662 2 1877 2 
1760 4 1335 6 531 2 417 2 1883 2 786 4 541 12 608 6 1833 6 546 2 181 4 72 2 1220 2 12 2 1839 2 303 2 1293 4 1590 2 1897 2 988 4 1898 2 990 10 867 2 1226 6 433 2 1363 2 495 2 1419 2 1723 2 315 2 687 2 1908 2 142 2 501 2 1310 4 146 2 1793 2 877 2 633 2 1616 2 86 2 31 2 1008 8 886 4 1435 2 581 4 1923 2 1016 2 829 8 513 2 1622 2 1865 2 1624 2 1872 2 1266 4 1874 2 1330 2 53 2 841 2 662 2 
967 2 1466 2 1465 8 723 2 1467 2 1706 2 1713 6 1220 2 12 4 489 2 988 4 990 2 1226 12 1484 2 743 2 495 4 1723 2 498 7 501 2 1492 2 1239 2 248 12 1005 2 31 2 1007 2 36 2 1504 2 1016 2 260 2 513 2 263 2 1266 4 1752 6 52 1 53 2 1754 2 1760 4 531 4 784 2 786 6 285 2 541 46 790 2 65 6 546 2 72 2 1290 2 1044 4 78 6 1293 4 796 2 307 1 308 2 1781 6 800 1 315 2 1307 2 1310 6 1793 4 322 4 86 2 1800 10 1065 6 1317 6 91 6 581 4 829 2 585 4 106 2 1330 2 841 2 1571 6 113 2 1335 8 347 1 1087 2 120 6 608 4 860 2 859 2 1095 2 1833 24 861 1 1355 2 1589 2 616 2 1839 2 1103 2 1590 2 1105 1 1842 2 867 2 138 2 1363 2 873 2 142 2 1851 2 145 2 146 2 877 2 1853 2 149 4 150 1 633 2 1614 2 1616 2 636 2 637 2 886 8 394 2 1622 2 1865 4 1624 2 1386 2 655 2 656 2 901 2 1872 2 1874 2 166 6 1395 2 907 6 662 2 1877 4 1878 2 1155 6 414 6 1882 4 417 2 1883 2 1405 8 177 6 916 6 181 4 1167 4 681 2 1897 2 186 2 1898 2 1899 6 926 1 433 2 1422 6 687 2 936 1 1424 2 1908 2 443 2 941 6 1190 2 700 2 1435 2 952 7 1923 2 1196 2 1928 2 1201 4 1204 4 211 2 962 2 
1335 8 967 2 723 2 1465 8 1087 2 1466 2 1467 2 1706 2 120 6 608 8 859 2 860 2 1095 2 1833 26 1713 6 1220 2 1355 2 1589 2 616 2 489 2 12 4 1839 2 1103 2 1590 2 988 4 990 2 1842 2 867 2 1226 12 138 2 743 2 1484 2 238 2 873 2 1363 2 495 4 1723 2 142 2 1851 4 145 4 501 2 1492 2 1239 2 146 2 877 2 248 12 149 4 1853 2 633 2 1005 2 1614 2 1616 2 636 2 637 2 1007 2 31 2 886 8 36 2 1504 2 394 2 260 2 1016 2 513 2 1865 4 1622 2 263 2 1386 2 1624 2 655 2 901 2 656 2 1872 2 1266 4 1874 2 1752 6 53 2 166 6 1754 2 907 6 1395 2 662 2 1878 2 1155 6 668 2 414 6 1760 4 531 4 784 2 1882 4 417 2 1883 2 786 6 1405 8 285 2 177 6 541 48 790 2 916 6 65 6 181 4 546 2 1167 4 72 2 681 2 1290 2 78 6 1044 8 303 4 1293 4 796 4 1897 2 186 2 1899 6 1898 2 308 2 1781 6 433 2 1422 6 315 2 687 2 1424 2 1307 2 1908 2 443 2 941 6 1310 6 322 4 1793 4 1190 2 700 2 86 2 1800 10 1065 6 1435 2 1317 6 91 6 581 4 1923 2 585 8 829 6 1196 2 1928 2 1201 4 106 2 211 2 1204 4 1694 2 1330 2 962 2 841 2 113 2 1571 6 
1335 8 967 2 723 2 1465 8 1087 2 1466 2 1467 2 1706 2 120 6 608 8 859 2 860 2 1095 2 1833 26 1713 6 1220 2 1355 2 1589 2 616 2 489 2 12 4 1839 2 1103 2 1590 2 988 4 1842 2 990 6 867 2 1226 12 138 2 743 2 1484 2 238 2 873 2 1363 2 495 4 1723 2 142 2 1851 4 145 4 501 2 1492 2 1239 2 146 2 877 2 248 12 149 4 1853 2 633 2 1005 2 1614 2 1616 2 636 2 637 2 1007 2 31 2 886 8 1008 4 36 2 1504 2 394 2 260 2 1016 2 513 2 1865 4 1622 2 263 2 1386 2 1624 2 655 2 901 2 656 2 1872 2 1266 4 1874 2 1752 6 53 2 166 6 1754 2 907 6 1395 2 662 2 1878 2 1155 6 668 2 414 6 1760 4 531 4 784 2 1882 4 417 2 1883 2 786 6 1405 8 285 2 177 6 541 48 790 2 916 6 65 6 181 4 546 2 1167 4 72 2 681 2 1290 2 78 6 1044 8 303 4 1293 4 796 4 1897 2 186 2 1899 6 1898 2 308 2 1781 6 433 2 1422 6 315 2 687 2 1424 2 1307 2 1908 2 443 2 941 6 1310 6 322 4 1793 4 1190 2 700 2 86 2 1800 10 1065 6 1435 2 1317 6 91 6 581 4 1923 2 585 8 829 6 1196 2 1928 2 1201 4 106 2 211 2 1204 4 1694 2 1330 2 962 2 841 2 113 2 1571 6 
967 2 1466 2 1465 8 723 2 1467 2 1706 2 483 6 1713 12 1220 2 489 2 12 4 988 4 990 6 1226 16 1227 6 1484 2 743 2 238 2 495 4 1723 2 501 2 1492 2 1239 2 1733 6 248 10 1246 6 1005 2 31 2 1007 2 1008 4 36 2 1504 2 1016 2 513 2 263 2 1266 4 519 6 1752 6 53 2 1754 2 1760 4 531 4 784 4 786 6 285 2 541 52 790 2 65 6 546 2 72 2 1290 2 1774 2 1044 10 78 6 303 4 1293 4 796 4 308 2 1781 6 315 2 1307 2 1310 6 1793 4 322 4 86 2 1800 8 1065 6 1317 6 91 6 581 4 829 6 585 10 1325 6 106 2 1330 2 841 2 1571 6 113 2 1335 10 1087 2 855 2 120 12 353 6 608 10 860 2 859 2 1095 2 1833 24 1836 2 1355 2 1589 2 616 4 1839 2 1103 2 1590 2 1842 2 867 2 138 2 1363 2 873 2 142 2 1851 4 145 4 146 2 147 2 877 2 1853 2 149 4 633 2 1614 2 1616 2 636 2 637 2 886 8 394 2 1865 4 1622 2 899 2 1624 2 1386 2 655 2 656 2 901 4 902 6 1872 2 1874 2 166 12 1395 4 907 12 1877 2 662 2 1878 2 1155 6 668 2 414 8 1882 4 417 2 1883 2 1405 12 177 6 916 12 181 4 1167 6 681 2 1897 2 186 2 1898 2 1899 6 430 2 433 2 1422 12 687 2 1424 2 1908 2 443 2 941 8 447 6 1190 2 700 2 1192 2 1435 2 1923 2 1196 2 1928 2 463 2 1201 4 1204 4 211 4 1694 2 712 2 962 2 
1310 2 1760 2 146 2 1335 6 417 2 1883 2 1616 2 86 2 541 4 31 2 886 2 1008 4 608 6 546 2 581 4 181 4 1923 2 1016 2 1220 2 829 6 513 2 303 2 1865 2 1839 2 1293 2 988 2 1897 2 990 4 1898 2 1226 4 1874 2 1330 2 315 2 841 2 142 2 
1335 6 967 2 1466 2 608 6 354 2 123 2 860 2 1833 24 1220 2 1355 2 1839 2 1103 2 1590 2 988 2 990 2 1226 4 743 2 1363 2 873 2 1723 2 142 2 501 2 1239 2 146 2 248 4 1853 2 633 2 1005 2 1614 2 1616 2 637 2 31 2 886 2 260 2 1016 2 513 2 1865 2 1622 2 1624 2 1513 2 656 2 901 3 1874 2 662 2 1878 2 1760 2 414 6 531 4 784 3 417 2 1883 2 786 6 1405 8 541 28 181 4 546 2 1167 4 681 2 1290 2 1646 2 303 2 1293 2 1897 2 1898 2 308 2 798 2 1301 2 315 2 1307 2 1310 2 941 6 1793 4 322 4 1190 2 86 2 1800 2 581 4 1680 3 1923 2 829 6 1446 2 1452 2 1201 2 1204 4 211 3 1330 2 841 2 1571 6 600 2 
684 2 417 2 1616 2 
684 2 417 2 1616 2 
844 2 1335 12 1466 2 608 12 860 2 1833 16 1355 2 12 4 1103 2 1590 2 988 2 1842 4 990 6 867 2 1226 16 15 2 743 2 873 2 1363 2 495 2 1723 2 748 2 1851 4 145 4 501 2 376 4 1239 2 877 2 1243 2 248 4 149 2 1853 2 633 2 1005 2 1614 2 1616 6 637 2 31 4 1008 4 886 4 394 2 647 2 1622 2 1865 4 656 2 901 2 1266 4 904 2 53 2 1271 4 1754 2 662 2 1877 4 1878 2 414 2 1760 2 531 4 1882 2 417 4 1883 2 670 2 786 6 1403 2 1405 2 541 24 1889 2 181 4 681 2 1290 2 1044 4 303 4 1293 2 684 2 796 4 1897 2 308 2 1655 2 557 2 433 2 1905 2 1424 2 1307 2 1310 4 941 2 322 4 1793 4 1190 2 324 2 1800 2 948 2 1435 2 91 2 581 4 1923 2 706 2 585 4 829 6 463 4 1565 2 1201 6 1074 4 336 2 1204 4 340 2 841 2 1571 6 
501 2 706 2 1589 2 204 2 1882 2 248 2 138 2 1655 2 948 2 1800 2 7 2 541 4 763 2 1833 2 91 2 1152 2 72 2 
844 2 1335 12 1466 2 608 12 860 2 1833 16 1355 2 12 4 1103 2 1590 2 736 2 988 2 1842 4 990 6 867 2 1226 16 743 2 873 2 1363 2 495 4 1723 2 748 2 1851 4 145 4 501 2 376 4 1239 2 877 2 248 2 149 2 1853 2 633 2 1005 2 1614 2 1616 6 637 2 31 4 886 4 1008 4 394 2 1622 2 1865 4 656 2 901 4 1871 2 1266 4 904 2 53 2 660 2 1271 4 1754 2 662 2 1877 4 1878 2 414 2 1760 2 531 4 417 4 1883 2 670 2 786 6 1403 2 1525 2 1405 2 1635 2 541 24 1889 2 181 4 681 2 1290 2 1044 4 303 4 1293 2 684 2 796 4 1897 2 308 2 1655 2 557 2 433 2 1905 2 1424 2 1307 2 1908 2 1310 4 941 2 322 4 1793 4 1190 2 324 4 948 2 1435 2 91 2 581 4 1923 2 706 2 585 4 829 6 463 4 1201 6 1074 4 336 2 1204 4 841 2 1571 6 
844 2 472 2 1335 12 1466 2 608 12 860 2 1833 16 1355 2 12 4 1103 2 1590 2 988 2 1842 4 990 6 867 2 1226 16 743 2 873 2 1363 2 495 4 1723 2 748 2 1851 4 145 4 501 2 376 4 1239 2 877 2 248 4 149 2 1853 2 633 2 1005 2 1614 2 1616 6 637 2 31 4 1008 4 886 4 394 2 1622 2 1865 4 656 2 901 2 1266 4 904 2 53 2 1271 4 1754 2 662 2 1877 4 1878 2 414 2 1760 2 531 4 171 2 1882 2 417 4 1883 2 670 2 786 6 1403 2 1405 2 541 24 1889 2 181 4 681 2 1290 2 1044 4 303 4 1293 2 684 2 796 4 1897 2 308 2 1655 2 1657 2 557 2 433 2 1905 2 1424 2 1307 2 1908 2 1310 4 941 2 322 4 1793 4 1190 2 324 2 1800 2 948 2 577 2 1435 2 91 2 581 4 1923 2 706 2 585 4 829 6 463 4 1072 2 1565 1 1201 6 1074 4 336 2 1204 4 841 2 1571 6 
0 2 966 3 2 2 1 16 967 2 970 2 5 2 6 3 973 2 974 38 976 2 975 14 979 3 10 234 9 2 982 2 11 4 987 6 989 36 991 4 14 2 993 4 16 2 994 6 998 2 23 2 25 2 24 6 26 158 1003 2 1004 2 28 78 1005 2 1006 78 30 2 29 2 34 2 1009 13 36 8 37 2 1012 78 1014 14 39 2 1017 2 1018 3 1019 2 1021 2 46 80 47 2 1023 2 48 2 1024 12 50 2 57 2 59 2 1029 2 1031 2 1032 2 1034 2 1033 2 61 2 63 166 1036 2 1039 2 67 3 69 10 71 2 74 2 75 2 77 2 1044 183 1045 2 79 2 1046 2 1047 22 80 2 1052 2 1053 2 82 2 1054 2 85 10 1059 2 1061 76 88 4 1064 80 1066 2 1067 2 1069 2 92 12 96 2 98 38 100 3 1071 15 102 4 103 2 104 2 105 38 107 8 108 8 1075 80 111 4 112 7 1078 3 1080 2 113 16 1081 2 1082 2 1086 8 1087 2 1092 2 1094 24 126 2 127 2 129 2 128 18 1101 2 131 60 1103 2 1104 2 1106 6 135 2 136 2 1109 2 1110 38 1112 8 140 2 141 2 1117 2 1116 2 1121 3 143 3 144 3 147 2 1126 2 148 2 1129 3 1130 34 1131 3 1132 2 1133 2 1134 2 152 2 1136 2 1137 2 1138 10 154 38 155 2 1145 4 1146 2 158 32 159 2 1147 2 1148 6 1149 8 161 6 162 2 1151 2 165 80 167 83 168 2 169 8 1156 2 173 2 1162 8 179 22 1164 2 1165 2 1166 78 1167 12 1168 2 1169 2 1172 2 1174 80 1175 78 1177 2 185 2 1178 80 187 2 1181 95 1183 2 195 2 196 2 1186 2 1185 2 1187 2 198 38 199 2 1189 1 1190 2 1192 2 1193 2 1195 20 205 2 1196 4 207 2 208 3 209 2 1201 2 1202 1 211 46 1204 402 212 2 1205 2 213 2 1207 2 214 2 1209 2 219 2 220 156 221 2 1212 6 223 80 222 2 1215 34 225 4 1216 2 1217 2 1219 78 227 6 1221 2 229 2 232 2 231 2 1224 2 233 2 1225 2 234 3 235 2 236 3 1229 12 237 2 1230 24 240 2 241 2 242 8 243 2 1237 2 1238 2 246 38 1239 8 248 10 1244 10 1247 38 250 2 252 2 251 26 1249 2 1250 3 1251 2 254 2 1252 38 256 2 1255 2 1257 3 259 2 1259 2 263 2 265 4 270 2 1265 2 272 2 1269 2 1270 3 274 2 1272 1 1274 2 1277 2 1278 11 1279 2 280 16 281 2 1280 2 282 10 1283 54 1285 38 285 2 1287 2 287 2 289 2 288 2 290 2 294 2 1288 2 296 2 1289 6 1290 2 299 34 1291 18 301 4 1292 4 304 4 1296 3 308 82 310 2 1298 2 1299 2 1301 2 1302 2 314 3 316 2 1306 4 1307 2 317 2 1308 78 1309 2 322 480 321 3 323 2 1312 2 1313 2 326 2 327 12 1314 38 1315 2 329 2 1321 2 1322 2 1324 2 334 2 1328 3 1329 2 338 4 1331 24 339 2 1332 2 1333 4 1334 60 342 2 343 26 1336 2 346 2 1338 2 1339 10 350 1 1341 6 1342 2 1343 2 352 2 1347 4 1349 2 1350 2 356 8 357 6 358 3 1355 2 1356 2 1357 66 1358 2 1362 2 1363 2 366 3 365 4 367 1 1367 2 371 2 1368 2 1370 2 377 2 1374 2 379 24 380 2 381 2 1380 158 385 2 386 40 387 80 389 2 391 2 397 8 396 4 1382 2 1381 2 1383 2 1384 2 399 2 401 6 1388 4 1389 2 403 2 402 158 1392 2 408 80 1394 2 1395 46 411 4 414 18 1398 2 1399 38 1402 2 1405 126 1409 2 420 2 422 2 1411 38 1413 38 423 2 428 3 430 4 431 2 432 2 1418 40 434 38 435 10 437 2 438 2 439 2 441 3 1425 2 1426 4 1427 1 448 4 449 4 450 2 451 120 1431 36 1432 24 454 1 456 2 1436 2 1437 32 1438 14 457 2 1439 3 1440 10 1441 4 460 2 1443 2 1446 2 462 4 1450 2 1455 2 469 78 1457 2 1458 2 1460 78 474 2 475 2 1463 2 1466 2 479 2 480 100 1470 2 1469 3 1472 6 1473 14 484 3 486 2 1479 3 1480 3 488 2 490 6 491 3 492 2 1481 24 493 3 1482 1 494 4 1485 4 1487 14 497 2 1488 2 500 14 1490 2 501 2 502 2 1493 4 1495 38 503 2 507 80 1499 12 1501 2 1503 2 1504 8 1506 2 1508 2 512 2 1510 2 1511 2 514 112 1513 2 515 2 520 2 522 8 525 2 531 8 532 2 1523 2 535 14 537 2 1526 2 538 2 539 2 541 1174 545 2 1529 16 547 78 550 38 1531 2 1533 6 1535 2 552 2 1538 38 554 48 558 2 561 1 559 2 1541 2 562 2 1542 2 1543 2 1545 3 1544 22 570 22 572 78 573 2 1548 2 1551 2 1552 3 1553 36 580 2 1554 2 584 4 1559 2 1560 2 585 178 586 2 591 3 592 3 1565 3 1566 2 594 4 596 78 1567 2 597 2 598 2 1571 1112 600 2 1572 2 1576 2 1575 16 606 2 1577 2 1578 2 1579 6 1580 2 1581 2 610 12 611 2 1588 2 1587 2 615 2 616 84 617 2 618 102 1590 2 1593 2 1594 2 621 170 622 38 1603 40 1606 2 629 16 1607 14 630 2 631 2 1610 10 633 2 1615 2 634 3 637 2 640 2 642 2 643 2 1620 2 646 124 648 2 649 2 1622 2 652 6 653 3 651 10 655 2 656 4 1625 2 1626 78 657 4 658 2 662 2 1629 2 665 22 666 10 667 24 1630 6 1631 2 669 2 1632 2 674 2 673 80 1637 2 1638 3 1641 38 679 4 680 20 681 2 1642 2 682 2 1645 2 1644 2 683 2 1652 2 685 18 1654 86 1656 4 1658 3 1664 2 1666 2 690 2 694 8 692 3 1668 4 695 2 696 2 697 78 698 2 700 2 1672 2 702 76 1674 2 1678 2 1680 2 1686 2 707 1 1687 2 1689 2 1691 38 708 2 1692 2 1695 1 1696 60 712 2 714 2 715 2 717 2 718 2 1701 2 722 2 724 2 725 2 728 4 729 80 1708 2 732 3 1711 2 733 2 735 2 734 2 1716 2 737 2 1717 2 738 20 1718 78 739 10 741 12 742 2 743 8 1721 2 745 2 744 24 1722 6 746 2 1723 2 1725 16 751 2 752 10 754 2 753 106 759 9 760 2 761 2 1735 2 767 22 770 76 771 2 1743 2 772 2 1744 4 1745 2 775 60 1746 2 1749 2 1751 2 1750 2 778 2 779 2 1755 2 784 16 1762 2 785 2 786 10 787 2 789 18 1764 2 790 2 1766 10 1770 2 791 4 1774 2 1775 2 797 2 1777 6 1778 78 1780 6 799 2 804 2 805 558 808 2 811 156 812 3 1787 2 1793 8 814 2 1794 2 818 2 820 2 821 112 1797 61 823 2 1798 2 1799 80 1800 2 1803 14 827 52 1806 2 1805 2 1807 2 1808 4 831 15 833 2 1812 38 834 2 835 2 1814 2 1815 2 838 2 839 2 1816 2 842 2 843 1 1817 3 1818 4 1822 234 1821 156 845 2 1823 2 849 2 1824 20 1826 2 850 104 1827 1 852 4 854 2 1828 3 1831 2 856 2 857 4 860 84 859 22 1833 966 863 4 1836 2 1835 9 1837 2 1838 2 1840 6 865 2 1841 2 1842 18 868 2 869 2 873 314 1844 66 874 2 1849 18 1847 2 1850 2 1852 4 876 2 1853 324 1854 78 1855 2 883 6 882 2 885 4 888 3 891 2 1860 80 893 2 1861 2 1862 2 894 3 1863 2 1866 2 898 3 899 2 901 110 1868 38 1873 20 905 2 906 2 908 2 1875 2 1878 2 1879 2 1881 20 910 2 913 2 914 80 1888 2 918 2 919 2 1891 2 1893 2 1894 20 925 20 927 4 1902 2 931 2 1909 22 940 2 941 32 942 82 945 2 946 2 1915 2 1917 2 1919 2 951 80 954 2 955 78 1926 1 1927 1 1928 8 957 2 958 2 959 2 960 4 1931 2 1933 10 965 3 1934 2 1937 12 
941 2 414 2 666 2 784 2 1794 2 967 2 1405 2 823 2 1798 2 541 2 1888 2 1833 2 1167 2 1440 4 1259 2 651 2 591 2 901 2 211 2 1050 2 195 2 141 2 1395 6 717 2 
941 2 414 2 666 2 784 2 1794 2 967 2 1405 2 823 2 1798 2 541 2 1888 2 1833 2 1167 2 1440 4 1259 2 651 2 591 2 901 2 211 2 1050 2 195 2 141 2 1395 6 717 2 
941 2 414 2 666 2 784 2 1794 2 967 2 1405 2 823 2 1798 2 541 2 1888 2 1833 2 1167 2 1440 4 1259 2 651 2 591 2 901 2 211 2 1050 2 195 2 141 2 1395 6 717 2 
533 2 967 2 1825 3 1796 4 1579 2 1341 2 1405 2 480 2 541 10 33 2 1094 3 610 2 1833 4 827 2 393 2 92 2 1476 2 1289 2 1892 2 425 2 1894 4 1259 2 618 6 987 2 925 4 738 4 590 2 991 2 685 4 901 3 1780 4 741 2 1873 4 744 3 932 2 211 3 1024 2 1516 2 1230 5 1306 2 
967 2 533 2 1825 2 1579 2 1405 2 1341 2 480 2 541 10 610 2 1094 2 1833 4 1476 2 1289 2 425 2 1892 2 227 2 1894 4 618 6 987 2 925 4 991 2 738 4 685 4 1780 4 741 2 932 2 744 2 1230 4 752 2 1306 2 1796 4 33 2 827 2 393 2 92 2 1259 2 590 2 901 2 1873 4 211 2 1024 2 1516 2 57 2 
967 2 533 2 1825 2 1579 2 1405 2 1341 2 480 2 541 10 610 2 1094 2 1833 4 1476 2 1289 2 425 2 1892 2 227 2 1894 4 618 6 987 2 925 4 991 2 738 4 685 4 1780 4 741 2 932 2 744 2 1230 4 752 2 1306 2 1796 4 33 2 827 2 393 2 92 2 1259 2 590 2 901 2 1873 4 211 2 1024 2 1516 2 57 2 
967 2 533 2 1825 2 1579 2 1405 2 1341 2 480 2 541 10 610 2 1094 2 1833 4 1476 2 1289 2 425 2 1892 2 227 2 1894 4 618 6 987 2 925 4 991 2 738 4 685 4 1780 4 741 2 932 2 744 2 1230 4 752 2 1306 2 1796 4 33 2 827 2 393 2 92 2 1259 2 590 2 901 2 1873 4 211 2 1024 2 1516 2 57 2 
967 2 533 2 1825 2 1579 2 1405 2 1341 2 480 2 541 10 610 2 1094 2 1833 4 1476 2 1289 2 425 2 1892 2 227 4 1894 4 618 6 987 2 925 4 991 2 738 4 685 4 1780 4 741 2 932 2 744 2 1230 4 752 4 1306 2 1796 4 33 2 827 2 393 2 92 2 1259 2 590 2 901 2 1873 4 211 2 1024 2 1516 2 57 4 
1287 2 755 2 994 2 6 2 524 2 754 2 
742 2 960 2 385 2 173 2 6 2 1654 2 1739 2 
444 2 1282 1 176 2 541 10 1886 2 122 2 1675 1 1833 8 125 2 1586 2 459 2 1895 2 1512 2 589 1 1776 2 429 2 101 2 239 2 686 2 1304 1 521 2 1698 2 1932 2 166 2 1936 1 662 2 
1124 2 1579 6 1341 6 1162 2 88 2 1764 2 1434 2 541 6 610 6 1833 6 1351 2 1710 2 1620 2 296 2 1289 6 227 2 1533 4 987 6 652 4 265 2 102 2 103 2 685 12 1780 4 741 6 1024 6 1230 16 752 4 1306 2 57 2 
1557 2 1894 2 986 6 758 2 968 2 1179 2 738 2 1404 2 1627 4 541 1 1873 2 887 1 1347 2 595 2 1517 2 1833 1 977 2 1489 2 
1557 2 1894 2 986 6 758 2 968 2 1179 2 738 2 1404 4 1627 4 1873 2 595 2 1347 4 1517 2 977 4 1489 2 
1557 2 1894 2 986 10 758 2 968 2 1179 8 738 2 1404 8 1627 4 541 1 1873 2 887 1 595 2 1347 8 1517 2 1833 1 977 8 1489 6 
1557 2 1894 2 986 2 758 2 968 2 738 2 1404 2 1627 2 1873 2 595 2 1347 2 1517 2 977 2 
1821 17 1822 92 1823 8 1460 6 603 90 966 4 220 18 850 42 223 6 1828 6 1468 4 729 6 860 14 1833 134 1835 7 10 84 1480 2 1219 6 1222 4 1718 10 493 2 1719 10 1229 7 621 34 1110 4 873 58 1722 2 1235 2 1603 2 753 42 246 4 144 2 1493 4 1241 1 24 4 25 8 26 16 1853 58 28 6 1854 4 1006 6 1736 8 1380 16 507 24 387 6 153 4 1012 6 1500 2 646 12 154 4 516 6 656 8 402 16 1390 2 271 4 1626 24 46 6 165 6 167 8 1630 4 1399 4 1278 11 1524 90 536 2 284 24 63 50 174 8 673 6 541 150 675 24 914 6 1887 2 1166 10 1641 4 547 10 550 4 794 26 1043 4 1174 6 1175 6 1044 28 1644 8 1414 4 304 4 1178 6 1778 6 1297 2 1779 12 308 14 1538 4 309 2 1181 22 1540 2 192 26 805 124 314 2 1665 8 811 36 568 2 1308 24 569 2 198 4 1544 15 1910 4 83 10 697 10 322 112 1428 2 572 6 85 8 1549 18 701 4 1064 6 951 6 955 6 828 4 461 2 587 10 100 2 1564 24 1812 4 1691 4 1565 4 1204 88 596 10 1075 6 1571 248 601 2 
1821 2 526 2 602 2 1823 2 1459 2 344 2 345 4 170 2 1522 2 966 1 220 2 1158 2 1212 4 536 2 284 2 1828 3 64 2 1344 2 673 2 541 46 675 2 860 2 1041 2 1833 44 180 2 1166 2 547 2 1043 2 183 2 300 2 1044 37 551 2 1644 2 1178 2 1297 2 1718 2 308 2 1719 2 137 2 1483 2 309 2 801 2 873 3 1540 2 805 6 1486 2 1366 4 564 2 1599 2 1118 2 811 2 1786 2 440 2 83 2 1669 2 697 2 446 2 1494 2 322 20 25 2 26 4 1853 3 1913 4 1736 2 825 2 1799 6 1380 4 89 2 949 2 387 2 1802 2 951 2 1139 2 1740 2 461 2 587 2 398 2 1263 2 1564 2 832 2 656 2 1565 2 402 4 1390 2 1204 20 596 2 468 2 1075 2 273 2 165 2 167 6 1571 45 
1821 10 1822 24 1823 2 1460 4 220 10 850 8 1088 2 223 4 1089 4 224 8 1828 2 1705 16 729 4 860 6 1833 70 1835 3 10 24 360 2 1480 2 1219 4 1718 6 621 30 1110 4 1361 4 873 28 1602 4 753 16 246 4 144 2 756 8 1493 4 24 2 25 2 26 10 1244 2 1377 2 1853 30 28 4 253 2 1006 4 1380 10 507 8 387 4 1500 2 1012 4 1859 4 646 14 1740 10 154 4 266 8 656 2 402 10 1390 2 46 4 165 4 167 6 526 10 1399 4 63 8 541 78 673 4 914 4 180 2 1166 4 1773 4 921 4 1641 4 547 4 550 4 1174 4 1175 4 300 2 1044 14 1644 2 304 4 1178 4 1778 4 1297 2 308 6 1538 4 309 2 556 2 1540 2 805 24 436 4 568 2 811 6 198 4 1544 8 322 44 697 4 85 4 572 4 1191 8 89 10 951 4 955 4 461 2 1812 4 1691 4 1204 36 468 2 596 4 1075 4 1076 32 1077 16 1571 104 
1821 2 1823 2 1630 2 1278 1 220 2 536 2 1828 2 541 28 673 4 1887 2 860 2 1833 26 180 2 1166 2 547 2 1644 2 1044 14 304 2 1178 4 1297 2 308 2 1718 2 493 2 1229 1 309 2 621 6 1181 9 873 12 1540 2 805 8 314 2 1786 2 811 2 569 2 1544 5 1493 2 322 14 697 2 24 2 25 2 26 6 85 4 1853 12 1854 2 1380 6 387 4 951 4 461 2 100 1 656 2 402 6 1565 2 1390 2 1204 14 596 2 1075 4 165 4 167 4 1571 40 
943 2 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 
1715 1 66 1 249 1 188 1 1090 1 726 1 

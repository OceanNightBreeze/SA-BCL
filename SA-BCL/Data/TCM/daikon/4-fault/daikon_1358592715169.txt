#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V FAILED junit.framework.AssertionFailedError 
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 1133 1215 377 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.MathMDE:sign(I)I
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.Quant:eltwiseLTE([I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_73()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfo:is_direct_non_slice_array()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:isPrestate()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.MathMDE:negate(I)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Quant:subsetOf([D[D)Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:eq(II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
jtb.JavaCharStream:FillBuff()V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_77()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_47()Z
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaCharStream:getEndColumn()I
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lte(II)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:eltsLTE([II)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_3R_118()Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:jj_3R_119()Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_52()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_25()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_68()Z
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.JavaParser:jj_3R_103()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.PptName:getMethodName()Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_133()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_48()Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:ReadByte()C
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.Invariant:prob_and(DDD)D
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:size()I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_169()Z
daikon.PptName:isCombinedExitPoint()Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Debug:logDetail()Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.diff.RootNode:RootNode()V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:jj_3R_114()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.ProglangType:isPseudoArray()Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_17()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_3_14()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_3R_50()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.InvariantFormatTester:execute()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_117()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_180()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(S[S)Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_98()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice2:arity()I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_162()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_164()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:jj_3R_121()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_69()Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([J)[J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParser:jj_3R_124()Z
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptSlice1:arity()I
jtb.JavaParser:jj_3R_61()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.ProglangType:dimensions()I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParser:jj_3R_100()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:eq(DD)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfo:isDerived()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z | STATEMENT | 149930 | stmt -> ;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.VarInfoName:hashCode()I
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_101()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_16(I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:new_ppt()V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isFloat()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.Quant:slice([III)[I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String; | ASSIGN | 123126 | = null
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.LimitedSizeIntSet:size()I
daikon.Quant:lexLTE([I[I)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_3R_107()Z
jtb.JavaParser:jj_3R_106()Z
jtb.JavaParser:jj_3R_149()Z
jtb.JavaParser:jj_3R_51()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_87()Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_15()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.Invariant:logOn()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_10()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_137()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.Quant:intersection([I[I)[I
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:jj_3R_81()Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_109()Z
daikon.PptName:isEnterPoint()Z
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_2_17(I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.MathMDE:pow(II)I
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.Intern:numIntArrays()I
daikon.ModBitTracker:num_samples()I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.Quant:memberOf(I[I)Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_2_3(I)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3R_136()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:isIntegral()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_72()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:lt(DD)Z
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParser:jj_3_5()Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
jtb.JavaCharStream:readChar()C
daikon.Ppt:Ppt()V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaCharStream:getBeginLine()I
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParser:jj_3_18()Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:jj_3R_123()Z
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.MathMDE:gcd_differences([I)I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.Quant:eltsGtIndex([I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_3_13()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
utilMDE.LimitedSizeIntSet:add(I)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_80()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsEqual([II)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaCharStream:BeginToken()C
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.syntaxtree.NodeListOptional:present()Z
jtb.JavaParser:jj_3R_60()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
daikon.Quant:gt(II)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:isIOAArray()Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.Quant:eq(FF)Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.Invariants:Invariants()V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:setDiff([I[I)[I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.PptName:getSignature()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.syntaxtree.NodeList:NodeList()V
jtb.JavaParser:jj_3_28()Z
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParser:jj_3_4()Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:jj_3_19()Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_35()Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:jj_3R_116()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_54()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_2_12(I)Z
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfo:isIOASet()Z
daikon.ProglangType:isScalar()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_53()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_96()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:gte(II)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
utilMDE.Intern:intern([D)[D
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:noDups([I)Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quant:lexGTE([I[I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ProglangType:isPointerFileRep()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.FormatTestCase:passes()Z
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3R_57()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaCharStream:getEndLine()I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_88()Z
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.JavaParser:jj_3R_76()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:jj_3R_126()Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
jtb.visitor.FormatCommand:getCommand()I
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_67()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:setEqual([I[I)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_99()Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:jj_3_27()Z
jtb.JavaParser:jj_3_36()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quant:lexLT([I[I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.MathMDE:gcd([I)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_134()Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:jj_3_12()Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3R_105()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.MathMDE:gcd(JJ)J
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_104()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.Invariant:logDetail()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:eltwiseEqual([I)Z
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:union([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ProglangType:isArray()Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
jtb.JavaParser:jj_3R_89()Z
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:split(I)I
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:jj_2_13(I)Z
utilMDE.WeakHasherMap:size()I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:jj_3R_49()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_3R_115()Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.ArraysMDE:element_range([I)I
utilMDE.ArraysMDE:sum([[D)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParser:jj_3R_120()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.visitor.FormatCommand:getNumCommands()I
jtb.JavaParser:jj_3R_85()Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_122()Z
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.Quant:subsetOf([F[F)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.Quant:subsetOf([J[J)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_108()Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Debug:logOn()Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:jj_3_20()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:memberOf(F[F)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_70()Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfo:isPointer()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.Quant:eltsGT([II)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_86()Z
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.PptName:toString()Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
utilMDE.Options.OptionInfo:argument_required()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3R_102()Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:justified()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:TreeFormatter()V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_62()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_18(I)Z
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1265 2 659 4 534 2 1507 2 626 2 840 2 919 2 232 2 1247 2 
1230 6 614 2 559 6 318 2 1220 2 327 2 721 2 1430 2 1418 2 1395 6 355 2 
552 2 429 6 1265 2 978 4 589 2 1412 2 5 6 1099 4 534 2 268 6 714 2 358 6 1592 2 
461 29 1472 10 624 8 1053 2 487 4 1254 2 1516 6 748 4 699 8 945 12 603 2 470 10 1565 2 217 4 511 6 577 26 1326 10 796 16 298 16 1483 4 1265 6 1290 2 274 16 781 8 201 10 1129 2 785 10 534 6 1492 2 617 8 
892 4 1186 6 
340 2 
1318 2 1472 2 461 6 941 2 890 2 1516 2 1582 2 945 2 765 2 470 4 220 2 1303 2 1326 2 577 4 796 2 439 2 1483 2 298 2 274 2 781 2 201 2 785 2 456 2 
461 15 1472 4 778 4 1022 4 487 2 274 8 945 5 201 4 785 4 592 2 577 12 1326 4 597 2 796 8 1020 6 298 8 662 6 
1340 14 59 4 745 2 1025 2 67 2 3 4 432 2 391 2 1544 62 1385 2 37 2 509 2 473 2 926 4 797 2 188 2 74 8 1282 6 398 4 1286 4 195 2 419 2 374 2 1356 4 1014 2 521 4 143 10 276 4 449 2 1097 2 635 4 1361 4 1231 2 1046 4 114 10 760 2 620 2 887 4 89 2 1074 4 
340 2 235 2 295 2 75 2 173 2 984 2 111 2 1535 2 261 2 118 2 
996 2 1053 2 65 2 898 2 240 2 900 4 704 2 795 2 74 2 906 2 1265 4 1124 2 145 2 1361 2 453 2 1489 2 853 2 84 2 206 2 561 2 855 2 1181 2 1362 2 622 2 1452 2 719 2 1368 2 265 2 1077 2 626 2 569 4 1079 2 1191 2 1587 4 1459 2 579 2 979 2 106 2 374 2 521 4 109 2 1154 2 534 4 1203 2 
1472 16 461 54 624 6 1022 4 720 8 1516 4 945 22 1236 2 724 2 322 6 603 2 470 6 511 4 1326 16 577 48 1117 4 796 32 189 4 1329 2 1483 2 298 32 662 6 1265 4 778 4 731 6 13 6 1307 6 1332 4 274 32 781 18 201 16 150 4 1554 4 1423 2 785 16 534 4 313 2 1020 6 1496 2 
188 2 74 2 1282 2 
9 2 153 22 1171 2 996 2 331 10 1476 2 1140 2 819 2 1190 2 128 2 1156 2 86 2 1158 2 1088 2 
1343 2 1162 1 121 2 944 2 1167 2 543 2 948 6 1431 2 129 2 548 2 750 2 657 16 241 2 1433 2 752 8 1436 2 843 24 1265 34 1442 2 663 4 1358 3 1444 2 757 2 1531 2 1359 12 1532 3 1179 2 558 4 452 2 254 1 1180 3 673 1 562 2 1275 1 965 2 1183 3 762 2 1540 2 764 2 156 2 264 4 1280 2 867 2 571 1 369 4 40 2 873 2 976 2 1195 2 1372 2 272 2 977 4 476 32 1092 2 168 1 980 2 779 2 170 3 1199 2 1464 2 53 2 1098 2 379 2 481 1 1204 2 1293 16 1102 2 886 32 696 1 1105 1 1382 2 62 2 485 2 997 1 63 2 1212 2 792 2 64 24 602 4 390 2 897 2 1564 2 71 1 395 1 1112 6 1480 4 1218 2 492 2 496 2 299 2 400 5 800 3 402 16 78 2 403 2 404 3 1224 2 303 2 1225 2 1127 2 405 2 1397 2 807 16 203 3 1130 2 1488 4 914 1 1577 2 921 2 1578 2 1579 1 1319 2 1023 2 718 2 817 2 1499 2 723 2 1501 2 416 2 510 2 1588 2 326 3 1239 2 330 2 1507 2 730 2 222 2 629 3 1596 2 1149 2 224 12 105 2 630 2 827 2 1331 3 108 3 733 1 830 6 228 2 737 6 834 2 112 1 534 32 1336 2 643 2 738 1 115 8 536 8 537 2 
489 2 
1265 2 616 2 
1265 4 319 2 641 2 
1 2 1255 2 430 4 431 14 1257 2 839 26 841 28 6 2 1260 2 8 2 437 12 438 2 440 6 441 2 844 192 444 28 1265 10 445 2 447 6 446 70 448 4 17 8 18 6 19 6 848 4 20 2 850 112 851 112 23 4 1269 6 854 198 856 198 1273 2 1276 26 460 2 462 16 861 6 31 2 465 4 865 2 467 8 469 4 1281 12 869 2 38 4 39 2 474 2 1284 4 43 2 44 2 875 2 1288 6 45 18 876 6 878 4 879 6 478 2 880 8 50 4 48 2 51 4 52 4 882 30 54 2 480 30 883 4 56 566 885 18 1294 198 888 4 482 6 488 2 894 84 69 6 1299 8 1298 64 70 2 1300 2 1302 26 1301 8 490 4 902 12 497 4 908 20 1306 12 1308 2 1309 118 80 2 1310 2 911 6 912 2 913 60 1312 46 500 6 85 46 916 16 918 386 502 22 503 6 504 2 1317 46 90 6 507 2 506 74 923 2 91 6 92 204 1323 8 93 6 94 24 1324 192 96 82 98 2 925 12 100 10 512 244 928 2 1330 6 518 2 519 2 931 4 520 2 932 6 933 198 522 2 935 4 936 6 525 6 526 26 527 2 529 66 534 10 939 336 1338 30 119 6 539 2 942 6 940 2 540 2 123 20 124 112 946 2 1345 2 1347 2 130 2 1349 22 131 2 133 2 1350 6 950 2 1351 4 551 4 134 2 1354 2 1355 4 138 48 137 132 954 2 955 4 142 4 1357 2 140 28 553 12 554 2 555 2 148 6 557 2 959 12 560 2 963 6 964 16 1363 6 1366 4 1365 6 1364 30 157 2 565 18 1367 4 971 2 568 2 570 88 161 2 163 2 575 6 574 2 164 2 165 6 167 2 578 2 580 2 581 8 582 4 583 6 171 4 982 182 1378 2 174 198 172 198 986 2 988 2 990 46 593 4 595 6 993 2 995 2 180 2 600 8 1383 2 1384 30 1005 10 1387 4 1389 6 1390 6 191 30 193 2 1391 2 196 2 197 2 198 30 608 2 610 4 199 8 1394 12 611 2 1398 6 202 6 613 4 1399 4 205 4 1402 2 621 4 209 2 1404 2 1407 328 1405 16 210 2 213 244 1028 12 625 4 215 2 1030 20 1031 2 1033 10 1032 8 1034 6 1415 60 219 2 1416 8 628 6 1419 2 223 2 1420 2 225 26 226 2 632 2 638 4 1045 2 1047 2 230 376 1425 2 1426 2 1049 4 646 6 1428 2 649 2 1051 2 1054 2 1055 4 1056 4 237 22 238 4 242 2 244 2 1441 8 247 26 248 98 1443 2 665 2 249 2 251 2 666 2 252 4 1066 2 1446 2 667 14 668 4 670 4 253 2 1069 8 671 2 672 14 1071 2 257 4 260 2 1072 2 1073 30 676 2 1451 6 1076 6 263 4 679 6 1455 6 1078 2 267 4 266 160 1080 2 1458 2 1082 4 1460 48 683 2 1087 14 1089 20 1090 2 1462 26 273 4 686 132 1094 6 1095 26 688 68 1096 4 1466 182 1465 4 691 2 277 2 280 4 1103 2 1470 2 1474 2 281 2 1106 26 284 4 285 2 1108 2 700 4 1109 2 287 8 702 4 291 2 290 140 703 204 293 432 1116 2 1118 106 294 6 1482 54 705 4 1484 52 706 4 300 26 1121 6 707 2 709 12 1128 2 306 6 308 14 1131 6 311 2 1490 2 1494 2 314 6 1497 6 1136 26 1135 4 316 4 1138 198 317 14 722 2 1142 2 725 4 1506 2 727 2 1145 2 328 6 1147 2 332 20 734 24 1153 92 334 8 1155 30 336 4 1159 2 337 2 1513 2 339 20 1515 2 742 2 1164 10 746 2 747 112 342 30 343 6 345 4 1521 2 753 2 348 2 349 2 350 2 755 86 1173 4 351 4 353 64 1529 2 1176 2 1533 2 758 2 1178 6 1534 20 1536 2 356 2 759 2 357 8 1538 2 1539 2 360 290 761 328 763 50 1542 12 1543 6 767 2 1545 28 367 22 368 2 771 2 1547 4 1194 4 370 6 371 2 774 2 1196 2 776 198 777 2 1551 2 373 60 1198 6 375 4 1200 28 378 2 782 244 1201 60 783 6 1202 2 784 2 382 6 788 6 383 6 1209 6 384 4 790 2 1561 2 1560 2 389 8 1563 4 1217 2 1216 2 393 6 394 2 1566 2 798 2 397 30 1567 4 799 4 399 4 1568 14 801 2 804 6 405 2 1227 6 1572 224 806 12 808 10 810 2 1233 4 1575 106 811 2 407 6 1576 46 408 2 1234 2 814 8 816 10 1581 2 414 6 1583 228 818 6 820 2 1589 6 1237 4 824 2 1595 2 1597 4 826 94 1599 2 1246 32 829 432 1248 2 1249 4 832 2 422 20 1602 2 
794 1 246 2 413 2 113 2 
541 2 113 2 
768 2 748 2 113 2 74 2 1003 2 1422 2 741 2 
768 2 1193 2 113 2 
768 2 113 2 466 2 
413 2 190 2 805 2 
768 2 113 2 
929 2 190 2 
1084 2 113 2 
413 2 1042 2 190 2 
1111 2 1137 2 413 2 
960 2 413 2 585 2 
177 2 413 2 1316 2 
989 2 413 2 544 2 
190 2 1283 2 
113 2 305 2 
1111 2 999 2 
960 2 41 2 
177 2 1315 2 
544 2 1495 2 
1063 2 190 2 
544 2 1189 2 
889 2 177 2 
1062 2 960 2 
1111 2 828 2 
1017 2 413 2 1042 2 190 2 
1017 2 604 2 413 2 1042 2 190 2 
413 2 341 2 190 2 
413 2 864 2 190 2 
862 2 1279 2 802 2 95 2 
1406 2 153 6 689 2 1421 4 970 2 947 2 681 2 97 2 572 4 973 2 1479 2 1083 2 1035 2 1467 2 435 2 535 2 426 2 715 2 
1449 2 413 2 
674 2 1019 2 74 2 1003 2 
1287 2 674 2 1019 2 74 2 1003 2 1422 2 
768 2 748 2 113 2 74 2 1003 2 983 2 
106 2 1120 2 
650 2 748 2 74 2 1003 2 
177 2 1508 2 
60 2 544 2 
1111 2 1151 2 
960 2 187 2 
960 2 1219 2 544 2 
960 2 660 2 544 2 
960 2 1333 2 544 2 
960 2 1123 2 544 2 
1559 6 1235 2 1321 2 1003 2 1027 6 74 2 693 2 1206 2 
599 2 190 2 
222 2 
344 2 948 2 1431 2 241 2 949 2 7 2 1436 2 550 2 1265 26 663 4 141 4 757 2 1359 8 558 2 673 4 455 2 1450 2 1075 2 762 2 867 2 369 2 873 2 976 2 1372 2 977 4 476 4 1092 6 980 2 477 2 1204 2 886 6 62 2 997 2 891 2 792 2 1212 2 602 4 390 2 392 2 1112 2 1480 2 1218 2 493 2 299 2 403 2 1224 2 1127 2 1225 4 405 2 807 6 1488 4 618 2 623 4 815 2 1578 2 1499 2 1322 2 1588 2 1239 2 330 2 1507 2 730 2 1149 2 224 8 630 2 733 2 830 6 228 2 737 4 834 2 534 26 1335 2 423 2 643 2 536 2 537 2 
344 2 948 2 1431 2 241 2 7 2 1436 2 550 2 1265 26 663 4 141 4 757 2 1359 8 558 2 673 2 455 2 1450 2 1075 2 762 2 156 2 867 2 369 2 873 2 976 2 1372 2 977 4 476 4 1092 6 980 2 477 2 379 2 1204 2 886 6 62 2 997 2 891 2 792 2 1212 2 602 4 286 2 390 2 392 2 1112 2 1480 2 1218 2 299 2 403 2 1224 2 1127 2 1225 4 405 2 807 6 1488 4 812 2 623 4 815 2 1578 2 817 2 1499 2 1322 2 1588 2 513 2 1239 2 330 2 1507 2 730 2 1149 2 224 8 630 2 733 2 830 6 228 2 737 6 834 2 534 26 1335 2 423 2 643 2 536 2 537 2 
365 2 
256 2 981 2 
1341 10 1253 4 789 2 792 2 283 2 2 2 1430 4 749 2 654 2 655 2 1519 2 1259 2 905 2 436 2 754 2 1011 2 952 2 1265 12 663 2 302 2 664 2 352 4 1224 2 1395 6 355 2 405 2 1230 6 559 6 1447 2 1448 4 154 2 361 2 463 2 505 2 1141 2 867 2 1327 2 327 2 1239 2 1417 2 1418 4 976 2 475 2 823 2 977 2 103 4 685 8 930 8 1244 2 1043 2 586 2 881 2 830 4 938 2 834 2 534 6 1380 4 1556 4 1208 2 338 2 
1341 10 1253 4 789 2 792 2 283 2 1296 4 2 2 1430 4 749 2 654 2 655 2 1519 2 1259 2 905 2 436 2 1011 2 952 2 1265 12 663 2 302 2 664 2 352 4 1224 2 1395 8 355 2 405 2 1230 6 559 8 1447 2 1448 4 154 2 361 2 463 2 505 2 318 2 320 2 1141 2 867 2 1327 2 327 2 1239 2 1417 2 1418 4 976 2 475 2 823 2 977 2 103 4 685 8 930 8 1244 2 1043 2 586 2 881 2 830 4 938 2 834 2 534 6 591 2 1380 4 1556 4 1208 2 
1253 2 463 2 505 2 664 2 283 2 1244 2 1043 2 1430 2 586 2 352 4 1230 2 559 2 1519 2 1447 2 1380 4 905 2 1418 2 1208 2 
1341 6 1253 4 789 2 792 2 283 2 2 2 1430 4 749 2 654 2 655 2 1519 2 1259 2 905 2 436 2 754 2 1011 2 952 2 1265 12 663 2 302 2 664 2 352 4 1224 2 1395 6 355 2 405 2 1230 4 559 6 1447 2 1448 4 154 2 361 2 463 2 505 2 318 2 1141 2 867 2 1327 2 1239 2 1417 2 1418 4 976 2 475 2 823 2 977 2 103 4 685 4 930 4 1244 2 1043 2 586 2 881 2 830 4 938 2 834 2 534 6 1380 4 1556 4 1208 2 338 2 
1341 6 1253 4 789 2 792 2 283 2 2 2 1430 4 749 2 654 2 655 2 1519 2 1259 2 905 2 436 2 754 2 1011 2 952 2 1265 12 1220 2 663 2 302 2 664 2 352 4 1224 2 1395 6 355 2 405 2 1230 6 559 4 1447 2 1448 4 154 2 361 2 463 2 505 2 1141 2 867 2 1327 2 1239 2 1417 2 1418 4 976 2 475 2 823 2 977 2 103 4 685 4 930 4 1244 2 1043 2 586 2 881 2 830 4 938 2 834 2 534 6 1380 4 1556 4 1208 2 338 2 
1341 6 1253 4 789 2 792 2 283 2 2 2 1430 4 749 2 654 2 655 2 1519 2 1259 2 905 2 436 2 754 2 1011 2 952 2 1265 12 663 2 302 2 664 2 352 4 1224 2 1395 6 355 2 405 2 1230 6 559 6 1447 2 1448 4 154 2 361 2 463 2 505 2 1141 2 867 2 1327 2 327 2 1239 2 1417 2 1418 4 976 2 475 2 823 2 977 2 103 4 685 4 930 8 1244 2 1043 2 586 2 881 2 830 4 938 2 834 2 534 6 1380 4 1556 4 1208 2 338 2 
1341 10 1253 4 789 2 792 2 283 2 2 2 1430 4 749 2 654 2 655 2 1519 2 1259 2 905 2 436 2 754 2 1011 2 952 2 1265 12 1220 2 663 2 302 2 664 2 352 4 1224 2 1395 8 355 2 405 2 1230 8 559 6 1447 2 1448 4 154 2 361 2 463 2 505 2 1141 2 867 2 1327 2 327 2 1239 2 1417 2 1418 4 976 2 475 2 823 2 977 2 103 4 685 8 930 8 1244 2 1043 2 586 2 881 2 830 4 938 2 834 2 534 6 1380 4 1556 4 1208 2 338 2 
1341 10 1253 4 789 2 792 2 283 2 2 2 1430 4 749 2 654 2 655 2 1519 2 1259 2 905 2 436 2 754 2 1011 2 952 2 1265 12 663 2 302 2 664 2 352 4 1224 2 1395 6 355 2 405 2 1230 6 559 6 1447 2 1448 4 154 2 361 2 463 2 505 2 1141 2 867 2 1327 2 327 2 1239 2 1417 2 1418 4 976 2 475 2 823 2 977 2 103 4 685 8 930 8 1244 2 1043 2 586 2 881 2 830 4 938 2 834 2 534 6 1380 4 1556 4 1208 2 338 2 
1253 4 651 2 234 6 2 2 1430 4 655 2 654 2 4 6 1258 2 1259 2 241 2 842 1 434 1 7 2 436 2 1436 12 1262 2 1263 6 10 6 1265 46 663 4 664 2 1266 6 15 6 22 2 1270 1 24 2 1447 2 1274 2 1448 6 860 1 463 2 35 1 867 2 472 6 1086 2 873 2 475 2 476 2 1092 6 881 4 1291 7 278 1 57 2 886 8 62 2 283 2 1297 2 701 10 489 6 1112 2 1113 2 1480 2 905 2 1122 2 301 6 302 2 1127 2 304 7 1488 4 711 2 505 2 1141 2 1327 2 329 1 330 2 1507 2 730 2 103 8 930 2 523 6 333 6 737 6 938 2 534 24 1335 2 536 2 740 6 1341 2 943 2 1166 2 749 2 344 2 948 2 547 2 1168 2 1519 2 346 2 754 2 549 2 550 4 1352 2 952 2 953 1 1526 2 141 4 352 4 757 2 1359 4 355 4 1360 6 558 2 559 4 1537 6 154 2 361 2 762 2 156 2 968 2 1188 4 158 2 369 2 975 1 976 2 1372 2 775 2 977 4 980 2 586 2 1553 2 379 2 590 2 1555 4 1380 4 1556 4 1208 2 1558 8 789 2 792 2 602 4 1214 2 390 2 182 2 1218 2 1011 4 192 2 1220 4 803 2 1223 2 1224 2 1395 12 405 2 1230 8 807 6 616 6 1029 2 1239 2 1417 2 1418 4 823 2 224 4 630 2 1244 2 1043 2 830 6 228 2 834 2 424 2 641 6 643 2 
1341 2 1253 4 651 2 943 2 234 6 1166 2 1430 4 2 2 344 2 749 2 654 2 948 2 655 2 4 6 1258 2 1168 2 547 2 1519 2 241 2 1259 2 346 2 7 2 1436 12 754 2 436 2 549 2 550 4 1262 2 1263 6 1352 2 952 2 10 6 1265 48 1526 2 663 4 141 4 1266 6 664 2 15 6 352 4 757 2 1359 8 1360 6 355 4 558 4 22 2 559 8 1537 6 1447 2 24 2 1274 2 1448 6 154 2 361 2 762 2 463 2 156 2 968 2 1188 4 158 2 867 2 369 4 472 6 1086 2 873 2 976 2 475 2 775 2 1372 2 476 2 977 4 1092 6 980 2 586 2 47 2 881 4 1553 2 379 2 590 2 57 2 1555 4 1556 4 1380 4 886 8 1208 2 1558 8 789 2 62 2 792 2 283 2 602 4 1214 2 1297 2 390 2 701 10 182 2 489 6 1113 2 1112 2 1480 4 905 2 1011 4 1218 2 192 2 1122 2 301 6 803 2 302 2 1223 2 1224 2 1225 2 1395 12 1127 2 405 2 807 6 1230 8 711 2 1488 4 616 6 505 2 1141 2 1029 2 327 4 1327 2 1239 2 1417 2 1507 2 330 2 1418 4 730 2 823 2 224 8 103 8 930 6 630 2 1244 2 1043 2 523 6 333 6 830 6 228 2 938 2 737 6 834 2 424 2 1335 2 534 26 641 6 643 2 740 6 536 2 1050 2 
1341 6 1253 4 651 2 943 2 234 6 1166 2 1430 4 2 2 344 2 749 2 654 2 948 2 655 2 4 6 1258 2 1168 2 547 2 1519 2 1259 2 241 2 346 2 7 2 1436 12 754 2 436 2 549 2 550 4 1262 2 1263 6 1352 2 952 2 10 6 1265 48 1526 2 663 4 141 4 1266 6 664 2 15 6 352 4 757 2 1359 8 1360 6 355 4 558 4 22 2 559 8 1537 6 1447 2 24 2 1274 2 1448 6 154 2 361 2 762 2 463 2 156 2 968 2 1188 4 158 2 867 2 369 4 472 6 1086 2 873 2 976 2 475 2 775 2 1372 2 476 2 977 4 1092 6 685 4 980 2 586 2 47 2 881 4 1553 2 379 2 590 2 57 2 1555 4 1556 4 1380 4 886 8 1208 2 1558 8 789 2 62 2 792 2 283 2 602 4 1214 2 1297 2 390 2 701 10 182 2 489 6 1113 2 1112 2 1480 4 905 2 1011 4 1218 2 192 2 1122 2 301 6 803 2 302 2 1223 2 1224 2 1225 2 1395 12 1127 2 405 2 807 6 1230 8 711 2 1488 4 616 6 505 2 1141 2 1029 2 327 4 1327 2 1239 2 1417 2 1507 2 330 2 1418 4 730 2 823 2 224 8 103 8 930 6 630 2 1244 2 1043 2 523 6 333 6 830 6 228 2 938 2 737 6 834 2 424 2 1335 2 534 26 641 6 643 2 740 6 536 2 1050 2 
1253 4 651 2 234 6 2 2 1430 4 655 2 654 2 4 6 1258 2 241 2 1259 2 7 2 436 2 1436 10 1262 2 1263 6 10 12 1265 52 663 4 664 2 1266 6 15 6 22 2 24 2 1447 2 1274 2 1448 6 463 2 867 2 870 6 472 6 1086 2 873 2 475 2 476 4 1092 8 685 4 47 2 881 4 57 2 886 12 62 2 283 2 896 6 1297 2 701 8 899 6 489 12 1112 4 1113 2 1480 4 905 2 1122 2 301 6 302 2 79 2 1127 2 307 2 1488 4 711 2 505 2 318 2 1141 2 1327 2 327 4 330 2 1507 2 516 2 730 2 103 8 930 6 523 6 333 6 528 2 737 6 938 2 534 24 1335 2 536 4 740 12 1341 6 943 2 1166 2 749 2 344 4 948 4 1168 2 547 2 1519 2 1522 2 346 2 754 2 549 2 550 4 1352 2 952 2 1526 2 141 6 144 2 352 4 757 2 1359 10 355 4 1360 12 558 4 559 10 1537 6 154 2 361 2 762 2 156 2 968 2 1188 4 158 2 573 6 369 4 976 2 1372 2 775 2 977 4 980 2 586 2 1553 2 379 2 590 2 1555 4 1380 4 1556 4 1208 2 1558 8 789 2 792 2 602 4 390 2 182 2 1008 6 1218 2 1011 4 192 2 1220 2 803 2 1222 6 1223 2 1224 2 1225 2 1395 16 405 2 1230 10 807 8 1573 6 616 12 1403 2 1408 6 1410 6 1029 2 1239 2 1417 2 1418 4 823 2 224 10 630 2 1244 2 1043 2 830 6 228 2 834 2 424 2 641 12 643 2 1050 2 1252 2 
1341 4 789 2 154 2 463 2 505 2 283 2 2 2 1430 4 749 2 655 2 1259 2 327 2 1327 2 754 2 436 2 1418 4 823 2 1265 4 103 2 685 4 930 6 302 2 664 2 1244 2 586 2 352 2 1395 4 355 2 1230 6 938 2 559 6 1556 2 1380 2 1208 2 1448 2 
1341 2 1343 2 1161 3 1430 4 2 2 749 2 655 2 948 3 241 2 1259 2 7 2 754 2 436 2 1436 4 550 2 1265 28 663 4 141 4 664 2 352 2 757 2 355 2 559 6 1448 2 966 2 154 2 361 2 156 2 463 2 34 2 867 2 873 2 976 2 1550 2 1372 2 977 4 476 3 1092 6 980 2 586 2 1098 2 379 2 1556 2 1380 2 886 8 1208 2 789 2 62 2 792 2 283 2 602 4 1214 2 390 2 701 2 1112 3 1218 2 302 2 1015 2 1224 2 1395 4 1127 2 405 2 1230 6 807 6 1488 4 921 2 505 2 327 2 1239 2 1327 2 330 2 1507 2 1418 4 730 2 823 2 222 2 103 2 930 6 630 2 1244 2 830 6 228 2 737 6 938 2 834 2 534 24 1335 2 642 2 643 2 
302 2 1396 2 655 2 
302 2 1396 2 655 2 
1341 6 1253 4 651 2 1430 4 749 2 654 2 655 6 1348 2 547 2 1519 2 241 2 7 2 1436 4 550 6 1265 24 663 4 664 4 352 2 757 2 1359 4 355 4 558 4 559 12 1537 2 673 2 1448 4 762 4 156 2 32 4 1188 2 867 2 1081 2 369 4 772 2 976 2 475 2 1372 2 977 4 476 2 1092 2 685 4 980 2 881 4 379 2 479 2 1555 2 1380 2 1556 2 886 2 484 2 62 2 792 2 283 2 602 4 390 2 701 2 185 2 288 2 1114 2 1480 4 905 2 1011 2 1218 2 192 2 77 2 1013 2 1220 4 302 4 1224 2 1127 2 1395 16 1396 2 405 2 807 2 1230 12 1488 4 1232 2 1313 2 315 2 318 4 1322 4 1239 2 327 4 1417 2 330 2 1507 2 728 2 1418 4 730 2 822 4 823 2 224 4 103 4 930 6 630 2 934 2 1244 2 830 6 228 2 737 6 834 2 534 16 1335 2 1048 2 335 2 643 2 
1265 4 484 2 1526 2 362 2 1043 2 567 2 701 2 867 2 1232 2 1537 2 256 2 1114 2 590 2 534 2 1555 2 1436 2 1061 2 
1341 6 1253 4 651 2 1430 4 749 2 654 2 655 6 1348 2 547 2 1519 2 241 2 7 2 1436 2 550 6 952 2 1265 24 663 4 664 4 352 2 757 2 1359 4 355 4 558 4 559 12 1537 2 1448 4 762 4 156 2 32 4 1188 2 867 2 1081 2 369 4 772 2 976 2 475 2 1372 2 1373 2 977 4 476 4 1092 2 685 4 980 2 1552 2 881 4 379 2 479 2 1556 2 1380 2 886 2 484 2 62 2 792 2 283 2 602 4 390 2 185 2 288 2 1114 2 1480 4 905 2 1011 4 1218 2 192 2 1013 2 1220 4 302 4 1224 2 1127 2 1395 16 1396 2 405 2 807 2 1230 12 1488 4 1232 2 1313 2 1132 2 501 2 917 2 318 4 1322 4 1239 2 327 4 1417 2 330 2 1507 2 728 4 1418 4 730 2 822 4 823 2 224 4 103 4 930 6 630 2 934 2 1244 2 830 6 228 2 737 6 834 2 534 16 1335 2 643 2 
1341 6 1253 4 651 2 1430 4 1256 2 749 2 654 2 655 6 1348 2 547 2 1519 2 241 2 7 2 1436 4 550 6 952 2 1265 24 663 4 664 4 352 2 250 2 757 2 1359 4 355 4 669 2 558 4 559 12 1537 2 673 1 1448 4 762 4 156 2 32 4 1188 2 867 2 1081 2 369 4 772 2 976 2 475 2 1372 2 977 4 476 2 1092 2 685 4 980 2 881 4 379 2 479 2 1555 2 1380 2 1556 2 886 2 484 2 62 2 792 2 283 2 602 4 390 2 701 2 185 2 288 2 1114 2 1480 4 905 2 1011 4 1218 2 192 2 1013 2 1220 4 302 4 1224 2 1127 2 1395 16 1396 2 405 2 807 2 1230 12 1488 4 1232 2 1313 2 318 4 1322 4 1144 2 1239 2 327 4 1417 2 330 2 1507 2 728 2 1418 4 517 2 730 2 822 4 823 2 224 4 103 4 930 6 630 2 934 2 1244 2 830 6 228 2 737 6 834 2 534 16 1335 2 643 2 
428 12 433 48 1261 2 442 2 1264 2 11 2 1265 378 12 2 845 2 846 2 14 21 1267 10 16 2 451 2 1268 2 21 3 25 48 24 4 455 2 1271 2 26 4 457 2 857 2 858 4 27 2 458 24 459 2 1274 2 28 1 859 2 461 16 1277 24 1278 1 29 16 464 50 33 14 863 1 34 2 866 2 867 2 471 14 872 2 873 2 1285 1 476 37 874 14 477 2 46 1 55 2 884 2 1293 26 886 48 58 2 61 4 483 2 62 2 891 2 486 24 895 2 1304 2 901 2 72 4 903 2 904 10 73 48 76 2 495 2 907 2 498 4 909 2 79 2 910 24 81 2 82 14 1311 2 83 6 915 2 1314 2 920 18 88 2 922 2 1325 2 508 24 511 4 514 2 1326 4 926 2 516 2 1328 2 104 1 107 24 531 2 532 14 534 300 1335 2 1337 48 116 3 536 32 1339 28 122 24 1344 12 945 6 125 2 126 30 546 2 127 8 948 16 1346 10 132 24 550 2 951 2 1353 10 1352 2 139 2 141 12 144 2 146 2 956 2 1359 68 147 48 958 4 556 2 962 2 151 4 966 2 563 18 155 2 967 14 156 98 564 10 566 24 969 2 1369 30 972 25 159 30 1370 2 1371 10 974 2 576 6 577 12 166 2 976 2 1372 2 1374 2 977 4 169 26 980 28 1376 2 584 24 588 2 985 2 987 2 991 90 992 8 594 2 994 2 1381 24 997 2 598 14 601 2 602 152 1004 2 1006 2 1386 2 184 24 1007 16 605 2 606 2 1009 6 1010 24 194 2 1392 2 1012 2 1393 24 609 4 1015 2 1016 4 201 4 612 2 1400 3 615 2 1401 2 1018 3 619 2 1020 6 1403 2 1022 4 624 6 212 2 1026 2 1411 10 214 24 216 3 627 2 1413 2 218 10 1036 2 1038 8 224 71 630 4 1040 24 1041 8 631 2 633 2 227 5 637 22 228 2 636 2 635 2 639 2 1423 2 640 2 1424 8 1046 2 229 2 642 2 643 2 1427 2 233 16 645 4 647 2 648 4 1052 14 652 2 236 4 653 2 656 14 657 10 1058 2 1059 1 241 2 658 24 243 2 1060 8 1436 2 1437 14 1439 2 1438 10 1440 2 245 2 663 4 1445 2 1067 2 255 1 1070 24 258 2 259 2 675 1 677 2 262 24 678 28 1450 2 1453 21 1075 2 1454 2 680 2 1456 10 682 2 1085 2 1086 2 1461 2 271 26 1091 2 684 14 1092 14 1463 24 1093 2 687 10 274 8 275 28 690 50 276 2 1100 2 694 2 1101 2 1468 2 695 24 697 4 1471 2 1472 4 1473 3 1477 10 289 2 1110 18 1115 2 1112 37 292 2 1481 16 296 2 298 8 1485 2 1486 16 1125 4 710 2 1127 4 1487 4 307 4 1488 128 711 2 712 4 1491 2 713 2 312 2 1493 2 1133 2 716 3 1498 2 724 4 1500 4 321 48 1502 2 1143 48 1503 2 1505 10 325 2 1146 2 330 28 1507 4 730 2 729 24 1148 2 732 2 733 2 736 2 1152 2 1510 10 737 348 1157 2 1511 2 1160 2 1512 2 1161 2 744 2 1514 3 1163 10 1165 2 344 46 1518 24 1169 14 1520 24 751 2 346 2 1522 2 1523 26 1524 24 1525 14 756 24 1172 12 1527 2 1528 2 1174 24 1175 2 757 2 1177 2 359 2 1185 12 762 6 1184 24 1187 14 363 2 364 2 769 10 366 2 1548 2 775 2 372 24 1197 2 780 3 781 4 377 2 379 98 380 2 785 4 381 48 786 24 787 2 1557 2 1207 3 1210 28 386 2 792 2 791 4 388 2 1562 2 390 2 1215 2 392 26 396 2 796 8 1218 2 398 2 401 2 1221 2 1569 48 803 2 1570 2 1224 2 1226 10 1571 18 405 2 1229 2 807 14 809 24 1574 2 406 37 411 2 815 2 412 24 415 11 1585 2 1238 2 1239 2 1590 170 1241 2 1242 2 1593 2 1594 2 420 2 825 2 1598 2 1600 4 1245 50 830 6 831 2 833 10 834 2 835 2 836 6 424 2 423 2 1250 2 837 4 838 2 427 14 425 2 1252 2 
476 2 1265 2 1092 2 1000 2 141 2 1267 2 631 2 1477 4 344 6 680 2 1456 2 956 2 1177 2 948 2 807 2 985 2 21 2 534 2 1304 2 1112 2 886 2 873 2 1557 2 1439 2 
476 2 1265 2 1092 2 1000 2 141 2 1267 2 631 2 1477 4 344 6 680 2 1456 2 956 2 1177 2 948 2 807 2 985 2 21 2 534 2 1304 2 1112 2 886 2 873 2 1557 2 1439 2 
476 2 1265 2 1092 2 1000 2 141 2 1267 2 631 2 1477 4 344 6 680 2 1456 2 956 2 1177 2 948 2 807 2 985 2 21 2 534 2 1304 2 1112 2 886 2 873 2 1557 2 1439 2 
1472 2 461 5 813 2 1104 2 563 4 1453 3 624 4 366 2 1110 4 657 2 511 2 1112 3 1326 2 577 4 1240 4 796 2 418 3 873 2 1439 2 1353 2 298 2 443 2 476 3 1265 10 14 3 274 2 587 2 499 2 1571 4 1334 2 201 2 852 2 785 2 534 4 991 6 1293 2 886 2 1272 2 920 4 409 2 
1104 2 1472 2 945 2 603 2 657 2 1110 4 1112 2 796 2 1439 2 298 2 1353 2 443 2 1265 10 14 2 499 2 201 2 1571 4 852 2 1272 2 409 2 920 4 813 2 461 4 563 4 1453 2 624 4 366 2 511 2 577 4 1326 2 1240 4 418 2 873 2 476 2 274 2 587 2 781 2 1334 2 534 4 785 2 991 6 1293 2 886 2 
1104 2 1472 2 945 2 603 2 657 2 1110 4 1112 2 796 2 1439 2 298 2 1353 2 443 2 1265 10 14 2 499 2 201 2 1571 4 852 2 1272 2 409 2 920 4 813 2 461 4 563 4 1453 2 624 4 366 2 511 2 577 4 1326 2 1240 4 418 2 873 2 476 2 274 2 587 2 781 2 1334 2 534 4 785 2 991 6 1293 2 886 2 
1104 2 1472 2 945 2 603 2 657 2 1110 4 1112 2 796 2 1439 2 298 2 1353 2 443 2 1265 10 14 2 499 2 201 2 1571 4 852 2 1272 2 409 2 920 4 813 2 461 4 563 4 1453 2 624 4 366 2 511 2 577 4 1326 2 1240 4 418 2 873 2 476 2 274 2 587 2 781 2 1334 2 534 4 785 2 991 6 1293 2 886 2 
1104 2 1472 2 945 4 603 4 657 2 1110 4 1112 2 796 2 1439 2 298 2 1353 2 443 2 1265 10 14 2 499 2 201 2 1571 4 852 2 1272 2 409 2 920 4 813 2 461 4 563 4 1453 2 624 4 366 2 511 2 577 4 1326 2 1240 4 418 2 873 2 476 2 274 2 587 2 781 4 1334 2 534 4 785 2 991 6 1293 2 886 2 
1068 2 1546 2 186 2 1250 2 1065 2 661 2 
1068 2 160 2 421 2 1021 2 961 2 1150 2 392 2 
179 2 1342 2 1409 1 745 1 30 2 792 2 766 2 1586 2 323 2 1457 2 1517 2 770 2 515 1 42 2 1265 10 1289 2 1305 2 847 2 354 1 634 2 1360 2 454 2 534 8 1251 2 760 1 1134 2 
461 15 1472 6 1022 2 624 4 720 2 1107 2 945 5 603 2 1191 2 1388 2 511 2 577 12 1326 6 189 2 796 6 298 6 1265 6 13 4 498 2 274 6 16 2 145 2 200 2 781 3 201 6 110 2 534 6 785 6 1468 2 313 1 1020 4 
1375 2 563 2 717 2 1295 2 125 2 1571 2 1044 2 1478 2 1504 2 162 2 279 2 1549 2 920 2 
1375 2 563 2 717 2 1265 1 1295 2 125 2 149 1 376 2 1571 2 1044 2 1478 2 1504 6 309 2 162 4 534 1 279 2 1549 2 920 2 
1375 4 563 2 717 2 1295 2 125 4 376 2 1571 2 1044 2 1478 2 1504 6 309 2 162 4 279 4 1549 2 920 2 
1375 8 563 2 717 2 1265 1 1295 2 125 8 149 1 376 8 1571 2 1044 2 1478 2 1504 10 309 6 162 4 534 1 279 8 1549 2 920 2 
0 4 1429 18 122 10 743 2 542 2 545 26 1346 4 239 90 656 2 1518 6 433 34 1520 24 1059 2 658 24 751 8 132 6 1438 4 1524 6 1170 2 1265 150 756 6 1174 6 1530 10 147 16 849 2 255 2 1070 6 673 4 151 4 858 11 675 6 458 6 152 8 262 6 1277 6 155 8 1184 42 156 58 464 84 564 4 1541 26 566 6 863 2 159 12 972 8 1369 4 468 2 36 1 1371 4 1285 4 270 4 372 6 980 14 1463 6 584 6 46 2 690 92 1379 24 379 58 381 18 786 10 1205 2 695 6 1381 6 998 4 486 6 282 4 698 6 386 8 1213 4 181 10 602 112 1002 2 904 4 1010 6 1119 8 1393 6 1569 16 910 42 1126 2 81 4 1226 4 1127 8 1228 90 1487 7 809 6 1488 88 615 4 310 2 406 22 87 2 208 8 412 10 1320 10 415 15 212 4 1584 24 1411 4 321 16 214 10 726 4 1143 36 216 2 1505 4 508 6 218 4 927 4 221 2 1590 124 330 14 729 6 102 2 1039 12 224 28 104 2 1509 2 1040 24 107 10 1245 50 735 24 227 7 1510 4 737 248 534 134 836 8 1337 17 739 4 117 4 
0 2 1211 4 120 2 122 2 1475 2 385 2 893 2 387 2 386 2 66 2 181 2 1002 2 602 20 68 2 183 2 1432 2 1434 2 751 2 1010 2 297 2 607 2 1524 2 494 2 1170 2 136 2 1265 46 756 2 1569 4 1530 2 1126 2 1127 2 147 4 957 2 1311 4 809 2 1070 2 1488 20 673 2 87 2 675 4 208 2 412 2 155 2 1320 2 156 2 1024 2 566 2 1584 2 321 4 214 2 972 6 1143 2 868 2 1192 2 99 2 417 2 101 2 221 2 330 2 871 2 1590 6 1037 2 821 4 269 2 773 2 102 2 1285 2 1243 2 224 38 980 2 1377 2 107 2 275 6 1601 2 735 2 49 4 1379 2 175 2 379 2 530 2 737 44 937 2 176 2 1292 2 533 2 381 2 534 44 786 2 178 2 596 2 1337 2 644 2 
120 2 743 2 122 4 542 2 1346 4 1518 4 433 30 1057 8 1520 8 1059 2 751 2 1435 2 132 4 1438 4 1524 4 1170 2 135 2 1265 78 756 4 1064 4 1174 4 147 10 1070 4 1182 4 675 2 458 4 262 4 1277 4 155 2 1184 16 156 30 464 24 564 4 566 4 863 2 159 14 972 6 1371 4 269 2 372 4 980 6 1463 4 877 2 584 4 690 24 379 28 381 10 786 6 1469 2 695 4 1381 4 486 4 1001 2 386 2 66 10 602 44 1002 2 793 8 904 4 491 4 1010 4 297 10 708 4 1569 10 910 8 81 4 1126 2 1226 4 1127 2 1487 4 204 2 809 4 615 4 1488 36 207 32 87 2 410 8 412 4 1580 4 415 8 212 2 211 4 1411 4 321 10 214 4 1143 6 924 8 1505 4 324 16 508 4 218 4 1414 4 1590 24 330 6 1591 16 729 4 102 2 224 14 1245 8 107 4 1601 10 1510 4 530 2 737 104 836 4 534 70 1337 10 
120 2 122 2 386 2 1002 2 602 14 433 6 751 2 1010 4 1524 4 1170 2 1265 28 756 4 1569 6 1126 2 81 2 1127 2 147 6 849 2 255 2 809 4 615 2 1488 14 1070 4 406 10 673 2 151 2 858 2 87 2 675 2 155 2 412 2 156 12 415 6 212 2 566 4 321 6 1369 2 972 4 214 2 1143 2 468 2 330 2 1590 8 221 2 102 2 224 14 104 2 980 2 107 2 46 2 227 2 379 12 737 40 534 26 381 2 836 4 786 2 1337 2 644 2 
524 2 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 
692 1 1139 1 347 1 231 1 450 1 538 1 

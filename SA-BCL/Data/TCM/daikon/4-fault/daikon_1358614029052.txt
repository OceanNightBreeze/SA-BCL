#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 667 95 578 963 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([JJ)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:jj_3R_180()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
utilMDE.MathMDE:pow(II)I
daikon.test.InvariantFormatTester:execute()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_16(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_149()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:jj_3R_48()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.ProglangType:isString()Z
jtb.JavaCharStream:readChar()C
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.Quant:eltwiseGTE([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_126()Z
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.JavaParser:jj_3R_68()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_74()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_35()Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_29()Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_15()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:lt(II)Z
daikon.inv.Invariant:is_false()Z
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_70()Z
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_3R_85()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:eltsEqualIndex([I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.WeakHasherMap:size()I
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_163()Z
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName:hashCode()I
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_4()Z
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:isLiteralConstant()Z
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:jj_3_3()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.ValueSet:ValueSet(I)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:jj_3R_102()Z
jtb.JavaParser:jj_3R_88()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
daikon.VarInfo:isDerived()Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:setEqual([I[I)Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_96()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_109()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_104()Z
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:size()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.Quant:concat([I[I)[I
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:has_typeof()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.Quant:lexGTE([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.string.OneOfString:enabled()Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([I)[I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lexEqual([I[I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:jj_3_36()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_119()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_117()Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_103()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.JavaParser:jj_3R_69()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_115()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
jtb.JavaParser:jj_3R_137()Z
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:new_ppt()V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.ProglangType:isPointerFileRep()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.JavaCharStream:getEndLine()I
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_55()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:jj_3R_76()Z
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:jj_3_5()Z
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsGT([II)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node; | RETURN | 1057 | return null
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:jj_3_18()Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:jj_3R_105()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.Debug:logOn()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOf([J[J)I
jtb.JavaParser:jj_3R_81()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.Invariant:justified()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_161()Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:jj_3R_100()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.ProglangType:isIntegral()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Quant:eq(FF)Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.Invariant:logOn()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_60()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_3R_58()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[I)I
daikon.ProglangType:dimensions()I
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.VarInfo:relate_var()V
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
jtb.JavaParser:jj_2_4(I)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.JavaParser:jj_3_27()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3_17()Z
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:enabled()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_125()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_110()Z
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus([I)[I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.PptSlice2:arity()I
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_122()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.Invariant:logDetail()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_164()Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_samples()I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.syntaxtree.NodeOptional:present()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_106()Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.PptSlice0:arity()I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
utilMDE.MathMDE:sign(I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.JavaParser:jj_3R_148()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_114()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_123()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.MathMDE:negate(I)I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_116()Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:gte(II)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:sameLength([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:baseIsString()Z
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:jj_2_18(I)Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.NodeListOptional:present()Z
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_3R_77()Z
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
jtb.JavaParser:jj_2_3(I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_98()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Quant:subsetOf([F[D)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:memberOf(S[S)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsEqual([II)Z
daikon.ProglangType:isArray()Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
jtb.JavaParser:jj_3R_107()Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z | STATEMENT | 149930 | stmt -> ;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.ProglangType:isScalar()Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice3:arity()I
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3R_57()Z
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_162()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Debug:logDetail()Z
jtb.JavaParser:jj_3R_73()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_135()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I | CONSTANT | 11181 | 1 -> 0
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:numIntArrays()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.VarInfo:isPrestate()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.diff.Node:Node()V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:getEndColumn()I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.Quant:eltsGtIndex([I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_101()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.JavaParser:jj_3R_67()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:passes()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_89()Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.Quant:slice([III)[I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:isFloat()Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
jtb.JavaParser:jj_3R_99()Z
jtb.JavaParser:jj_3_19()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLT([II)Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_108()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern([J)[J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_80()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_3_13()Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLTE([II)Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
jtb.JavaParser:jj_3R_136()Z
daikon.PptSlice1:num_samples()I
utilMDE.Intern:intern([D)[D
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_61()Z
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_51()Z
jtb.JavaParser:jj_2_17(I)Z
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:isIOASet()Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo; | CONDITION | 3097 | if (x) -> if (!x)
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.ProglangType:base()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quant:memberOf(D[F)Z
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Ppt:Ppt()V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:subsetOf([I[I)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.string.OneOfString:is_type()Z
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_25()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Quant:lte(II)Z
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:jj_3_20()Z
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_86()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:ReadByte()C
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:ne(II)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.VarInfoName:hasTypeOf()Z
jtb.JavaParser:jj_3R_120()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.PptSlice1:arity()I
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_72()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:jj_3R_124()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_2_5(I)Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
9 2 1835 2 1138 2 399 4 842 2 1210 2 1156 2 483 2 1563 2 
790 6 1740 2 386 2 1316 2 1863 2 597 2 886 2 854 2 215 6 906 6 1497 2 
9 1 1450 4 1822 4 938 2 251 2 1210 1 1773 4 142 2 1252 2 1217 2 309 1 476 1 958 4 
869 2 1810 2 959 10 819 10 1614 6 1727 4 368 8 1881 2 436 6 1108 8 802 2 1653 10 1560 12 1204 29 971 10 862 8 9 6 1681 4 58 2 122 16 1302 4 1018 10 1210 6 566 16 1865 2 1162 2 1715 8 924 4 1307 26 1747 16 
512 6 1187 4 
920 2 
173 2 959 2 819 2 1466 2 196 2 318 2 199 2 436 2 255 2 1819 2 1653 2 627 2 1560 2 1204 6 971 4 862 2 122 2 1018 2 566 2 165 2 924 2 1307 4 1747 2 
959 4 819 4 772 6 1016 4 122 8 1727 2 730 2 1644 4 1018 4 566 8 622 6 719 2 1653 4 1307 12 1560 5 1204 15 1747 8 
998 2 820 4 1101 2 1289 6 758 4 74 4 1106 2 649 10 3 2 227 2 553 2 1817 4 588 2 204 2 1891 2 354 2 1038 2 113 2 656 2 861 10 591 4 55 2 1453 14 57 2 1627 4 418 4 980 4 358 4 271 62 191 8 1460 4 885 2 779 2 748 2 359 2 1218 4 888 4 1721 4 1462 2 995 2 
1553 2 470 2 292 2 970 2 382 2 1418 2 1707 2 920 2 1093 2 844 2 
1225 2 1173 2 616 2 1337 2 439 4 204 2 806 2 501 2 9 4 207 2 1626 2 914 2 1243 2 385 2 1865 2 455 2 216 2 991 2 1309 2 1641 2 820 2 822 2 468 2 175 4 703 2 223 2 1646 2 183 2 1274 2 1894 2 1768 2 116 2 418 4 1770 2 1210 4 1662 2 483 2 191 2 1604 2 305 2 488 4 1712 2 1428 2 424 2 
1193 4 959 16 1810 2 819 16 1614 4 1644 4 198 2 137 6 1698 2 622 6 964 2 436 4 402 2 853 6 1653 16 1890 6 1560 22 1204 54 971 6 9 4 862 18 1658 4 975 2 533 8 772 6 122 32 1016 4 236 4 1018 16 1210 4 566 32 390 2 1715 6 362 4 924 2 1307 48 1377 6 675 4 1747 32 
227 2 1289 2 191 2 
1564 2 1183 2 472 2 1485 2 624 2 1030 10 1449 2 333 2 1140 22 441 2 1374 2 1434 2 991 2 1117 2 
1781 2 1668 1 134 8 726 2 727 1 618 2 735 3 1789 2 1554 2 372 2 966 2 1790 2 1557 2 1677 8 1114 2 258 1 1343 24 259 2 859 2 9 34 11 12 265 2 630 4 1241 3 504 4 1119 2 157 2 1457 2 982 2 981 2 1689 2 1459 2 1124 4 1804 2 990 2 280 1 1807 1 1580 2 993 4 515 2 516 2 29 2 999 2 1696 2 1815 16 757 16 1006 2 401 3 1008 6 1360 3 40 1 1588 2 294 4 651 2 528 2 880 12 1700 2 185 4 1276 2 1594 2 51 2 1279 16 1015 2 1013 4 773 2 1020 2 1155 2 1831 24 1835 2 539 2 1284 2 887 2 1024 2 1163 3 1026 2 1167 2 787 2 313 2 72 2 894 1 1027 2 791 2 1846 1 549 2 1728 2 795 2 435 2 75 2 686 2 437 2 901 2 321 2 1732 6 554 2 1297 4 324 32 1037 2 1040 3 1042 3 692 2 91 1 562 1 1630 2 212 1 813 16 453 2 1051 2 696 2 698 2 1053 2 1634 3 1746 6 1520 2 1637 2 1059 2 1192 3 1194 2 1195 3 929 8 1528 2 1531 1 704 1 826 6 347 1 1073 3 830 2 1759 2 1765 2 1077 2 936 1 835 2 114 2 592 2 1659 2 594 2 118 5 596 2 481 2 1210 32 943 1 239 32 1426 2 484 2 600 2 1427 2 1330 3 1430 1 491 2 1332 2 
1647 2 
9 2 182 2 
9 4 695 2 944 2 
960 2 961 6 1 2 493 2 963 2 1445 4 497 24 4 2 968 2 499 24 969 192 973 2 9 4 10 10 1451 92 974 114 12 2 977 2 506 2 507 184 510 6 983 2 984 4 985 2 987 2 1461 2 21 2 989 42 25 6 994 2 26 6 996 10 517 282 1465 2 521 10 1468 2 33 10 526 2 38 2 42 2 43 2 1011 2 45 2 1474 24 48 6 50 6 49 2 530 2 1012 2 1476 2 54 6 53 10 532 62 1479 4 1017 6 1484 14 1022 22 538 2 62 2 1489 168 1491 22 1492 10 1493 2 63 4 64 4 542 2 543 6 71 12 1028 2 551 2 552 2 1503 4 77 4 79 22 1031 18 1032 40 1036 2 557 2 83 6 1508 2 84 2 85 4 1041 2 1043 4 90 4 92 12 1047 4 1045 4 94 48 95 4 96 6 1050 24 570 2 572 38 571 2 575 2 101 376 1058 6 1056 4 1057 14 1521 22 578 2 579 4 1524 2 105 4 1064 2 581 18 1065 14 107 2 1068 40 584 6 1532 94 1533 6 587 2 111 168 1534 2 1076 18 589 2 590 96 112 2 593 4 121 10 123 2 1538 6 125 2 1090 106 602 2 1092 6 604 2 1548 4 608 26 1094 12 130 6 131 2 132 20 1550 2 615 168 1551 2 619 4 621 4 140 2 141 2 143 2 1111 24 146 2 147 2 1112 2 1556 2 628 24 1115 82 152 16 1118 2 631 2 154 2 1567 6 1120 2 1570 6 635 2 1571 24 162 12 1573 2 1123 6 1574 2 1125 168 1130 332 1132 4 638 2 1583 4 177 2 644 182 646 168 1585 4 652 10 184 96 1591 2 657 2 658 2 1596 4 1147 6 660 56 188 2 1150 2 1153 2 1603 2 662 54 1159 6 667 4 669 2 1606 10 672 96 673 2 1607 10 194 4 1609 2 676 2 1169 2 1170 2 1613 6 678 46 679 6 681 2 682 2 1615 6 1617 2 201 2 1619 4 202 24 1176 322 1179 6 1624 24 1182 10 209 2 691 2 1628 6 1186 2 1185 2 1629 2 1631 50 1632 2 1188 186 217 162 701 2 219 48 1196 294 1643 2 221 114 1198 2 226 4 1199 2 228 2 1201 2 708 6 1652 6 229 4 709 20 230 2 1656 2 1205 294 237 2 1210 4 1211 2 1663 4 241 48 1665 4 1216 2 1666 2 1220 2 245 4 722 6 1223 12 250 6 1669 14 1228 6 1229 2 252 4 1230 10 1674 2 736 2 738 2 256 4 257 2 1237 152 740 4 1239 12 742 2 266 22 1680 2 1682 2 1684 2 1685 6 1686 4 267 2 1687 2 1245 2 1244 6 1688 6 269 4 1246 2 1251 2 1250 2 274 4 749 24 1254 18 750 2 1259 168 751 2 279 184 281 6 285 2 1263 10 1264 2 289 184 1266 2 291 4 296 2 1275 2 1701 4 766 2 769 6 770 2 1280 24 781 18 1713 2 1714 2 307 18 785 22 312 2 316 14 794 4 1291 2 1293 2 797 2 320 6 798 2 322 2 801 50 803 4 804 4 807 86 809 82 811 6 1739 72 1741 2 330 16 331 2 814 6 332 2 1311 6 336 6 1312 4 338 2 341 6 824 6 344 2 1755 42 1315 6 825 2 1317 138 829 4 1320 2 350 4 832 2 833 78 1760 2 834 2 355 8 836 2 356 2 1324 4 1769 2 1325 2 1771 2 838 6 1331 96 845 2 1334 2 1779 4 1780 56 1782 6 1784 6 850 168 365 4 1787 2 369 2 371 6 1340 22 1341 10 1342 36 376 4 374 14 375 20 1793 4 855 14 856 4 858 2 379 2 1797 2 1344 6 1800 6 1347 2 863 2 391 2 1802 2 1808 2 398 6 1356 2 400 2 1816 6 875 182 403 4 1361 40 408 4 1363 2 1364 42 410 2 881 4 412 12 413 480 417 2 1824 40 1826 2 1369 6 1830 2 1834 376 1837 2 1372 24 1373 2 1378 2 893 6 892 6 891 24 1845 24 1847 6 1848 6 434 6 1850 2 437 2 900 2 1854 6 902 2 1385 168 1386 4 1387 74 440 2 905 2 908 4 445 152 1392 4 913 2 451 4 452 2 1864 2 922 6 1399 2 1867 2 456 6 458 294 1873 2 462 58 1875 2 1876 6 1403 24 1404 14 1879 38 927 14 465 6 1880 2 1407 2 1408 4 930 12 471 10 474 4 1409 4 1882 2 1416 62 1897 2 1898 2 1899 22 482 2 1423 2 942 2 1425 6 949 6 486 6 951 168 1432 4 1431 2 957 2 
1164 2 1839 2 225 2 1417 1 
225 2 1796 2 
1681 2 1582 2 6 2 1519 2 191 2 225 2 718 2 
370 2 1519 2 225 2 
1751 2 1519 2 225 2 
1164 2 1256 2 1838 2 
1519 2 225 2 
1838 2 1278 2 
1322 2 225 2 
965 2 1164 2 1838 2 
816 2 1135 2 1164 2 
1691 2 1625 2 1164 2 
1164 2 1590 2 1766 2 
1164 2 178 2 478 2 
1709 2 1838 2 
225 2 261 2 
882 2 1135 2 
1691 2 910 2 
564 2 1766 2 
120 2 178 2 
233 2 1838 2 
1281 2 178 2 
1502 2 1766 2 
1691 2 782 2 
392 2 1135 2 
965 2 459 2 1164 2 1838 2 
965 2 459 2 1164 2 1838 2 1495 2 
1164 2 1856 2 1838 2 
815 2 1164 2 1838 2 
874 2 525 2 988 2 1870 2 
1818 2 406 2 1582 2 191 2 
1818 2 406 2 1582 2 150 2 191 2 718 2 
1681 2 1582 2 1519 2 191 2 225 2 262 2 
1626 2 1513 2 
1681 2 1582 2 1559 2 191 2 
664 2 1766 2 
178 2 684 2 
1135 2 1577 2 
1691 2 1636 2 
1691 2 812 2 178 2 
1691 2 599 2 178 2 
1691 2 231 2 178 2 
1691 2 428 2 178 2 
1582 2 933 2 799 2 46 2 808 2 918 6 191 2 489 6 
1296 2 1838 2 
1724 2 1261 2 1380 2 1683 4 1227 2 915 2 89 2 60 2 759 2 1801 2 238 2 1832 4 745 2 921 2 1140 6 297 2 1794 2 169 2 
1235 2 1164 2 
1051 2 
134 2 1105 2 1554 2 1789 4 1114 2 258 2 259 2 9 26 265 2 11 8 630 4 504 2 982 2 1124 4 990 2 993 4 170 2 999 2 757 6 1696 2 1268 2 1008 2 294 4 880 8 185 2 1594 2 186 2 1015 2 420 2 1020 2 1835 2 539 2 1605 2 1024 2 1167 2 1288 2 787 2 1027 2 791 2 901 2 437 2 321 2 1732 6 554 2 1297 2 805 2 324 4 1298 4 1037 2 444 4 1862 2 99 2 696 2 1746 2 1194 2 704 2 1531 4 826 4 830 2 1765 2 1077 2 1078 2 114 2 594 2 596 2 1088 2 481 2 1210 26 124 2 239 6 1426 2 1543 2 1429 2 491 2 1332 6 1221 2 
134 2 1105 2 1554 2 1789 4 1113 2 1114 2 258 2 259 2 9 26 265 2 11 8 630 4 504 2 157 2 982 2 747 2 1124 4 990 2 993 4 170 2 516 2 999 2 757 6 1696 2 1268 2 1008 2 294 4 880 8 185 2 1594 2 186 2 1015 2 773 2 1020 2 1835 2 539 2 1024 2 1167 2 1288 2 787 2 1027 2 791 2 437 2 901 2 321 2 1732 6 554 2 1297 2 324 4 1298 4 1037 2 444 4 1862 2 99 2 696 2 1746 2 1194 2 1531 1 704 2 826 6 830 2 1765 2 1077 2 1078 2 114 2 594 2 596 2 1088 2 481 2 1210 26 124 2 239 6 1426 2 1543 2 1429 2 491 2 1332 6 364 2 1221 2 
641 2 
1394 2 1277 2 
283 2 712 2 870 2 1226 2 1598 2 790 2 1304 2 1829 2 1316 2 1483 4 705 2 931 2 1350 2 1212 4 1384 2 128 2 854 2 215 2 
1437 2 1226 2 790 4 791 2 431 2 1232 4 1384 2 901 2 437 2 854 4 1732 4 906 6 1037 2 9 12 630 2 1304 2 982 2 1350 2 1249 2 166 2 1401 2 277 4 573 2 215 6 393 2 993 2 283 4 870 2 754 2 999 2 1752 4 1527 2 1469 2 176 2 1004 2 1316 4 705 2 931 2 1359 2 712 2 117 2 1598 2 595 2 1480 2 1829 2 1540 2 597 2 1210 6 1020 2 1483 4 1212 4 306 4 886 2 540 2 1023 6 128 2 603 4 363 2 1168 2 847 2 
1437 2 1226 2 790 6 791 2 431 2 1232 4 1384 2 901 2 437 2 854 4 1732 4 906 6 1037 2 9 12 630 2 1304 2 1863 2 982 2 1350 2 1249 2 166 2 1401 2 277 4 573 2 215 4 393 2 993 2 283 4 870 2 754 2 999 2 1752 4 1527 2 1469 2 176 2 1004 2 1316 4 705 2 931 2 1359 2 712 2 117 2 1598 2 595 2 1480 2 1829 2 1540 2 1210 6 1020 2 1483 4 1212 4 306 4 886 2 540 2 1023 6 128 2 603 4 363 2 1168 2 847 2 
1437 2 1226 2 790 6 791 2 431 2 1232 4 1384 2 901 2 437 2 854 4 1732 4 906 6 1037 2 9 12 630 2 1740 2 1304 2 982 2 1350 2 1249 2 166 2 1401 2 277 8 573 2 215 6 393 2 993 2 283 4 870 2 754 2 999 2 1752 4 1527 2 1469 2 176 2 1004 2 1316 4 705 2 931 2 1359 2 712 2 117 2 1598 2 595 2 1480 2 1829 2 1540 2 1210 6 1020 2 1483 4 1212 4 306 4 886 2 540 2 1023 6 128 2 603 4 363 2 1168 2 847 2 
1437 2 1226 2 790 8 791 2 431 2 1232 4 1384 2 901 2 437 2 854 4 1732 4 906 8 1037 2 9 12 630 2 1740 2 1304 2 1863 2 982 2 1350 2 1249 2 166 2 1401 2 277 8 573 2 215 6 393 2 993 2 283 4 870 2 754 2 999 2 1752 8 1527 2 1469 2 176 2 1004 2 1316 4 705 2 931 2 1359 2 712 2 117 2 1598 2 595 2 1480 2 1829 2 1540 2 1210 6 1020 2 1483 4 1212 4 306 4 886 2 540 2 1023 10 128 2 603 4 363 2 1168 2 847 2 
1437 2 1226 2 790 6 791 2 431 2 1232 4 1384 2 901 2 437 2 854 4 1732 4 906 6 1037 2 9 12 630 2 1740 2 1304 2 982 2 1350 2 1249 2 166 2 1401 2 277 8 573 2 215 6 393 2 993 2 283 4 870 2 754 2 999 2 1752 8 1527 2 1469 2 176 2 1004 2 1316 4 705 2 931 2 1359 2 712 2 117 2 1598 2 595 2 1480 2 1829 2 1540 2 1210 6 1020 2 1483 4 1212 4 306 4 886 2 540 2 1023 10 128 2 603 4 363 2 1168 2 847 2 
1437 2 1226 2 729 4 1673 2 1232 4 1446 6 9 46 11 4 265 2 504 2 982 2 1249 2 277 2 993 4 283 4 516 2 754 2 999 2 1695 2 518 2 757 6 1469 4 1004 2 1268 2 1008 2 294 4 1015 2 774 10 1480 4 776 8 1020 2 1483 4 1021 1 1283 7 306 8 540 2 1488 2 1023 2 1024 2 1285 2 1287 1 1498 2 545 6 546 1 790 8 1726 6 791 2 321 2 1731 2 1732 6 554 2 1297 2 1506 2 324 2 1037 2 558 2 1301 6 1304 2 1048 2 573 2 1746 2 103 2 1526 2 1316 4 826 6 1072 1 830 2 108 2 1762 1 1765 2 1077 2 1078 2 114 2 117 2 594 2 1086 2 595 2 596 2 1540 2 839 6 1543 2 1329 6 601 1 128 2 603 6 363 2 1332 6 847 2 133 4 614 6 134 2 1100 1 1554 2 1110 6 854 4 377 2 1114 2 630 4 156 1 157 2 1569 2 1350 2 1124 4 166 2 393 2 1355 2 870 2 1357 7 176 2 1359 2 1137 6 405 2 182 6 880 4 185 2 653 2 411 6 1598 2 1829 2 663 2 1835 2 886 4 1167 2 1168 2 425 2 1610 2 1612 2 431 2 1384 2 901 2 437 2 906 12 444 4 911 2 450 2 1863 4 1862 4 1396 6 1397 2 1398 2 695 6 696 12 1401 2 215 4 1197 6 705 2 931 2 1647 6 712 2 1657 6 234 2 1208 2 1210 24 239 8 1426 2 1212 4 242 2 244 2 954 1 955 2 
614 6 1437 2 134 2 1226 2 729 4 1673 2 1789 2 1232 4 1554 2 1446 6 1110 6 854 4 377 2 1114 2 9 48 265 2 11 8 630 4 504 4 1569 2 157 2 982 2 1350 2 1249 2 1124 4 166 2 1253 2 277 6 393 2 993 4 1355 2 283 4 870 2 516 2 754 2 999 2 518 2 1695 2 757 6 1469 4 1004 2 176 2 1268 2 1008 2 1137 6 1359 2 405 2 294 4 182 6 880 8 653 2 185 4 411 6 1598 2 1015 2 1480 4 774 10 1829 2 776 8 1483 4 1020 2 1835 2 306 8 663 2 886 4 540 2 1023 2 1488 2 1024 2 1285 2 1167 2 1610 2 425 2 1168 2 1498 2 1612 2 545 6 1726 6 790 8 791 2 431 2 1384 2 321 2 437 2 901 2 1731 2 1732 6 554 2 1297 4 1506 2 906 12 324 2 1037 2 444 4 558 2 911 2 1301 6 1740 4 450 2 1304 2 1048 2 1862 4 1396 6 1398 2 1397 2 695 6 696 12 1401 2 573 2 215 8 1746 2 103 2 1526 2 1197 6 1316 4 705 2 826 6 931 2 1647 6 830 2 108 2 1765 2 1077 2 1078 2 114 2 1657 6 712 2 117 2 594 2 1086 2 234 2 595 2 1208 2 596 2 839 6 1540 2 1210 26 239 8 1543 2 1426 2 1212 4 1329 6 242 2 1219 2 603 6 128 2 244 2 363 2 955 2 1332 6 847 2 133 4 
614 6 1437 2 134 2 1226 2 729 4 1673 2 1789 2 1554 2 1232 4 1446 6 1110 6 854 4 377 2 1114 2 9 48 265 2 11 8 630 4 504 4 1569 2 157 2 982 2 1350 2 1249 2 1124 4 166 2 1253 2 277 6 393 2 993 4 1355 2 283 4 870 2 516 2 754 2 999 2 518 2 1695 2 757 6 1469 4 1004 2 176 2 1268 2 1008 2 1137 6 1359 2 405 2 294 4 182 6 880 8 653 2 185 4 411 6 1598 2 1015 2 1480 4 774 10 1829 2 776 8 1483 4 1020 2 1835 2 306 8 663 2 886 4 540 2 1488 2 1023 6 1024 2 1285 2 1167 2 1610 2 425 2 1168 2 1498 2 1612 2 545 6 1726 6 790 8 791 2 431 2 1384 2 321 2 901 2 437 2 1731 2 1732 6 554 2 1297 4 1506 2 906 12 324 2 1037 2 444 4 558 2 911 2 1301 6 1740 4 450 2 1304 2 1048 2 1862 4 1396 6 1398 2 1397 2 695 6 696 12 1401 2 573 2 215 8 1746 2 103 2 1526 2 1197 6 1752 4 1316 4 705 2 826 6 931 2 1647 6 830 2 108 2 1765 2 1077 2 1078 2 114 2 1657 6 712 2 117 2 594 2 1086 2 234 2 595 2 1208 2 596 2 839 6 1540 2 1210 26 239 8 1543 2 1426 2 1212 4 1329 6 242 2 1219 2 603 6 128 2 244 2 363 2 955 2 1332 6 847 2 133 4 
1437 2 1226 2 729 4 1673 2 1232 4 1446 6 9 52 11 10 265 2 504 4 982 2 1249 2 1253 2 277 6 993 4 283 4 516 2 1464 2 754 2 999 2 518 2 287 2 1695 2 757 8 519 2 1469 4 1004 2 1268 2 1008 4 294 4 1015 2 1480 4 774 8 776 8 1483 4 1020 2 61 6 306 8 540 2 1023 6 1488 2 1024 2 1285 2 1723 6 545 6 790 10 1726 6 791 2 321 2 1731 2 1732 6 554 2 1297 4 1506 2 324 4 1037 2 558 2 1301 6 1740 4 1304 2 1048 2 573 2 1746 4 103 2 1526 2 1752 4 1316 4 826 6 830 2 108 2 1765 2 1077 2 1078 2 114 2 117 2 594 2 1086 2 595 2 596 2 1540 2 597 2 839 6 1543 4 1329 12 603 6 128 2 363 2 1332 8 847 2 133 4 614 6 134 4 1789 2 1554 2 1110 6 854 4 377 2 1114 2 630 4 157 2 1569 2 1350 2 1124 4 166 2 393 2 395 2 167 6 171 6 1355 2 870 2 176 2 1359 2 1137 12 405 2 182 12 880 10 185 4 653 2 411 6 1821 6 1598 2 1367 2 1829 2 663 2 1835 2 886 4 889 2 1167 2 1610 2 1168 2 425 2 1612 2 431 2 1384 2 437 2 901 2 904 6 906 16 1391 6 444 6 911 2 1184 2 450 2 1863 2 1862 4 1396 6 1397 2 1398 2 695 12 696 10 697 6 1401 2 215 10 699 2 1197 6 469 6 705 2 931 2 1647 12 712 2 1657 12 234 2 1208 2 1210 24 239 12 1426 2 1212 4 242 2 1219 2 244 2 955 2 
754 2 1226 2 790 6 1752 4 431 2 1004 2 176 2 1316 4 705 2 1359 2 1232 2 1384 2 854 4 906 4 9 4 712 2 1740 2 1829 2 1540 2 1483 2 306 2 1350 2 1212 2 886 2 540 2 1023 4 603 2 166 2 128 2 277 6 215 6 363 2 393 2 847 2 1168 2 
1226 2 1232 2 1554 2 854 4 1114 2 859 2 9 28 265 2 630 4 634 2 157 2 982 2 1457 2 1350 2 1249 2 1124 4 166 2 277 6 393 2 993 4 516 2 754 2 999 2 757 6 176 2 1004 2 1268 2 1008 3 1359 2 1271 3 294 4 1015 2 189 2 774 2 1829 2 1483 2 1020 2 306 2 1835 2 886 2 540 2 1023 2 1024 2 1167 2 1168 2 1498 2 790 6 791 2 431 2 1384 2 437 2 901 2 321 2 1732 6 554 2 906 4 324 3 1037 2 444 4 1740 2 1862 2 1630 2 1051 2 696 4 215 6 1746 3 340 2 1316 4 826 6 705 2 830 2 1765 2 1077 2 1078 2 114 2 712 2 594 2 596 2 1900 2 1210 24 1540 2 239 8 1212 2 1546 2 603 2 128 2 363 2 1332 6 847 2 
1437 2 1226 2 790 6 791 2 431 2 1232 4 1384 2 901 2 437 2 854 4 1732 4 906 6 1037 2 9 12 630 2 1740 2 1304 2 982 2 1350 2 1249 2 166 2 1401 2 277 8 573 2 215 6 393 2 993 2 283 4 870 2 754 2 999 2 1752 8 1527 2 1469 2 176 2 1004 2 1316 4 705 2 931 2 1359 2 712 2 117 2 1598 2 595 2 1480 2 1829 2 1540 2 1210 6 1020 2 1483 4 1212 4 306 4 886 2 540 2 1023 10 128 2 603 4 363 2 1168 2 847 2 
1437 2 1226 2 790 6 791 2 431 2 1232 4 1384 2 901 2 437 2 144 4 854 4 1732 4 906 8 1037 2 1798 2 9 12 630 2 1740 2 1304 2 982 2 1350 2 1249 2 166 2 1401 2 277 8 573 2 215 8 393 2 993 2 283 4 870 2 999 2 1752 8 290 2 1469 2 176 2 1004 2 1316 4 705 2 931 2 1359 2 712 2 117 2 1598 2 595 2 1480 2 1829 2 1210 6 1540 2 597 2 1020 2 1483 4 1212 4 306 4 886 2 540 2 1023 10 128 2 603 4 363 2 1168 2 847 2 
363 2 393 2 1442 2 
363 2 393 2 1442 2 
1226 2 367 2 729 2 1442 2 1554 2 1232 2 1109 2 854 4 1114 2 9 24 11 4 630 4 504 4 1345 2 1568 2 157 2 982 2 1350 2 1124 4 166 2 277 6 393 4 993 4 170 4 283 4 516 2 871 2 999 2 757 2 643 2 1469 4 1268 2 648 2 293 2 294 4 880 4 185 4 1597 4 1598 2 1015 2 1014 2 1480 2 774 2 1829 4 1020 2 1483 2 421 2 1835 2 306 4 886 4 1023 6 1024 2 1167 2 429 2 790 12 791 2 1383 2 437 2 901 2 321 2 1620 4 1732 6 554 2 1297 4 82 2 906 16 324 2 1037 2 1740 4 1304 2 1048 2 1862 6 1863 4 1397 2 923 2 696 4 1401 2 573 2 215 12 460 2 218 2 103 2 1752 4 1316 4 1531 2 826 6 830 2 1765 2 1077 2 1078 2 114 2 594 2 595 2 596 2 839 2 1210 16 597 4 239 2 1426 4 1212 2 603 4 363 6 1332 2 1333 2 847 2 133 2 
9 4 1394 2 367 2 729 2 774 2 839 2 1210 2 717 2 421 2 982 2 931 2 97 2 1214 2 923 2 696 2 1488 2 377 2 
1436 2 1437 2 1226 2 367 2 1442 2 1232 2 1554 2 1109 4 854 4 1114 2 9 24 11 4 630 4 504 4 1568 2 157 2 982 2 1350 2 1124 4 166 2 277 6 393 4 1693 2 993 4 170 4 283 4 516 2 999 2 757 2 643 2 1469 4 1268 2 648 2 293 2 294 4 880 4 185 4 1597 4 1598 2 1015 2 1014 2 1480 4 1829 4 1020 2 1483 2 421 2 306 4 1835 2 886 4 1023 6 1024 2 1167 2 429 2 790 12 791 2 548 2 1383 2 437 2 901 2 321 2 1620 4 1732 6 554 2 1297 4 906 16 324 4 1037 2 1740 4 1304 2 1048 2 1862 6 1863 4 1397 2 923 2 696 2 1401 2 573 2 215 12 460 2 218 2 103 2 1752 4 1529 2 1316 4 826 6 830 2 1765 2 1077 2 1078 2 114 2 594 2 595 2 596 2 839 2 1210 16 597 4 239 2 1426 4 1212 2 603 4 363 6 1332 2 847 2 613 2 133 2 
1437 2 1226 2 367 2 729 2 1442 2 1104 2 1554 2 1232 2 1109 2 854 4 1114 2 9 24 11 4 630 4 504 4 1568 2 157 2 982 2 1350 2 1124 4 166 2 277 6 393 4 993 4 170 4 283 4 516 2 999 2 757 2 643 2 1469 4 1268 2 648 2 293 2 294 4 880 4 185 4 1597 4 1598 2 1015 2 1014 2 1480 4 774 2 1829 4 1020 2 1483 2 421 2 1835 2 306 4 886 4 1023 6 1024 2 1167 2 429 2 790 12 791 2 1383 2 437 2 901 2 321 2 1620 4 1732 6 554 2 1297 4 906 16 324 2 1037 2 1740 4 1304 2 1048 2 1862 6 1863 4 1397 2 923 2 696 4 1401 2 1306 2 573 2 215 12 460 2 218 2 103 2 339 2 1523 2 1752 4 1316 4 1531 1 826 6 830 2 1765 2 1077 2 1078 2 114 2 1085 2 594 2 595 2 596 2 839 2 1210 16 597 4 239 2 1426 4 1212 2 603 4 363 6 1332 2 847 2 133 2 
959 6 0 2 2 2 964 4 967 1 5 2 7 2 972 2 9 1174 8 38 11 183 976 2 13 2 14 2 15 4 17 2 981 2 982 2 18 2 986 3 20 2 22 2 23 2 992 3 24 24 993 8 27 38 28 2 997 4 29 2 999 2 1000 2 31 4 32 2 1001 2 1002 2 34 2 1003 2 1005 80 35 38 1007 2 1008 46 1009 2 37 2 40 1 39 3 1010 2 41 2 44 2 47 2 51 2 52 2 56 2 1015 2 1013 32 59 80 1018 6 1019 2 1020 2 1024 84 1025 2 65 2 1026 2 67 2 69 6 70 3 72 2 73 2 74 2 75 2 76 2 1029 2 80 2 1033 2 1034 3 81 2 1037 2 1040 2 1039 48 1042 2 86 10 87 2 88 2 91 1 1044 10 93 2 1046 2 1049 2 98 2 99 2 1052 2 100 2 1054 2 102 2 1055 2 1059 2 1060 2 1061 14 1062 2 104 2 1066 3 1067 2 1070 2 1069 2 1071 3 1074 34 1075 2 109 2 1077 82 1078 2 1079 2 114 4 115 2 1083 4 1082 3 1081 2 1084 2 119 2 122 12 1088 2 124 4 1089 2 126 2 127 4 1091 2 1095 2 1096 18 1097 2 1098 38 1099 4 134 84 1102 2 1103 2 1105 2 1107 2 145 2 148 4 1114 2 149 2 151 38 1116 10 153 2 1119 2 155 22 157 328 158 20 1122 2 1121 3 161 8 163 2 164 3 1124 402 1126 80 1127 2 168 2 1129 3 1131 2 172 2 1134 2 174 2 1136 2 179 2 180 2 181 6 1140 6 1142 2 1143 4 1141 106 186 86 187 2 1144 36 1145 3 1146 2 1149 38 1151 60 189 2 190 2 1152 112 1157 2 1160 2 1161 4 1163 2 1165 2 1166 2 1167 2 195 3 1171 16 1172 34 197 18 1175 2 200 2 203 2 1178 2 1177 10 1180 3 1181 36 205 80 206 170 208 2 1184 2 211 2 210 2 213 10 214 16 1189 2 1190 2 1191 2 1192 3 1195 2 220 2 222 24 224 2 1200 2 1202 4 1203 2 1204 24 1206 66 1207 2 234 8 235 2 1208 2 236 4 1209 4 1210 966 239 126 240 8 1213 80 1215 14 243 3 244 8 246 2 248 3 247 2 1221 2 1222 4 1224 2 1231 2 253 2 1233 2 258 3 1238 78 260 2 1240 2 263 3 265 2 1242 95 268 2 270 10 1247 2 1248 20 272 3 273 78 275 2 1255 10 278 38 1257 2 1258 6 282 10 284 38 1262 2 287 2 1265 78 288 2 1267 3 1269 2 1271 2 1272 10 294 480 295 4 1273 2 1276 2 299 2 300 10 1279 100 302 38 303 20 304 2 308 2 310 2 1285 2 1286 2 1288 2 314 8 315 2 317 8 1292 2 1295 1 321 8 323 4 324 110 325 11 326 6 1299 2 327 4 1300 4 1303 2 329 2 1305 2 334 80 1307 18 1310 2 1313 2 340 2 342 2 343 76 345 38 346 2 347 1 348 2 349 38 1321 2 351 80 353 76 352 38 1323 2 357 4 1326 9 1327 2 1330 2 360 2 361 2 1332 18 1336 2 366 10 1337 2 372 2 1338 2 1339 2 373 2 378 18 1343 15 381 38 383 2 1346 80 387 2 388 2 389 36 1353 3 1352 8 394 38 1354 34 1358 83 401 2 1360 2 407 4 1362 2 1365 2 1367 2 1368 2 419 124 1370 3 1371 1 422 22 423 2 1375 24 1376 20 1379 2 426 2 427 3 430 1 432 78 433 2 1382 2 435 2 437 2 438 38 1388 8 1389 2 1390 2 442 78 443 2 444 12 1393 2 446 6 447 2 448 2 449 1 1395 158 1398 22 454 234 1400 2 457 2 461 2 1402 2 463 38 464 2 466 3 1405 3 467 2 1406 8 473 2 1410 2 1411 8 1412 2 1414 102 1415 2 477 2 1419 2 1420 24 1421 80 479 2 480 2 1422 20 1424 2 1426 18 1427 2 485 2 484 2 487 4 1429 2 1433 2 1435 2 1438 2 1439 6 1440 2 1441 4 1443 4 495 2 1444 2 498 2 1448 3 503 2 1455 10 1454 2 505 3 509 2 511 2 1460 2 515 2 514 2 516 318 1464 2 1467 2 519 2 523 4 522 2 1470 16 1472 3 527 2 1473 40 529 2 1475 38 531 24 1477 38 1478 2 533 8 534 2 535 8 1482 78 1481 3 537 2 1486 4 1487 6 1490 2 1494 2 1496 2 1501 1 1500 2 544 2 547 234 549 2 554 2 1505 38 1506 4 555 2 556 2 1507 2 559 2 1511 2 560 3 561 1 1512 2 563 2 565 2 566 12 567 3 568 2 1515 112 569 2 1517 6 1516 2 574 2 1518 4 576 2 1520 14 1522 2 1525 2 1526 2 1528 2 580 2 1530 120 1531 2 583 2 582 4 586 2 1536 2 591 2 592 2 594 2 1537 2 596 2 1539 2 1542 2 1541 4 598 2 1543 46 600 2 1545 2 1544 2 1546 2 606 3 607 18 609 2 611 158 610 2 612 2 1552 2 617 60 618 14 620 2 622 6 623 3 1554 2 625 2 1555 6 626 2 1557 2 1558 3 1560 10 1561 2 629 2 1562 4 1565 2 630 8 632 2 1566 4 633 2 634 2 1569 8 636 6 1572 2 1575 2 1576 2 1578 2 1579 2 1580 2 637 2 639 2 640 2 642 2 645 78 1584 2 647 26 1586 2 1587 2 1588 2 1589 8 651 16 1592 2 1593 2 655 20 654 4 1595 6 659 4 1600 2 1602 2 1601 2 665 2 666 2 668 3 670 2 671 2 1608 2 674 156 1611 2 680 2 1614 4 683 2 1616 3 1618 2 686 2 1621 40 1622 2 688 2 1623 2 689 3 690 2 693 10 694 78 696 10 1633 2 698 2 1634 3 1635 2 1637 2 699 4 700 2 1638 2 1639 12 1640 158 702 2 1644 4 704 2 706 8 1648 2 1649 38 1651 2 707 2 1653 6 1654 2 711 2 710 80 1655 1 1659 2 714 2 1661 14 716 1 715 82 1664 2 721 4 1667 16 723 2 725 2 724 4 727 15 728 3 731 2 1670 2 1671 14 1673 2 732 2 1672 2 735 2 733 2 734 4 737 2 1675 2 739 20 1676 2 1677 14 741 2 1678 2 1679 54 743 2 744 2 1690 40 1692 22 752 2 753 2 1694 2 756 2 755 10 1695 2 757 32 758 2 1697 2 760 38 1698 2 761 32 762 2 763 2 764 3 765 2 1699 2 1700 2 768 60 1702 22 767 80 1703 2 1704 2 771 3 774 2 1706 2 1705 4 775 2 777 80 1708 2 1710 2 780 78 1711 2 1715 6 1717 2 1716 156 1718 2 1721 2 1719 21 786 2 788 80 1722 2 789 2 1725 2 791 2 792 2 1728 2 793 4 795 2 796 8 800 78 1730 2 1731 2 1732 10 1733 2 1734 78 1735 2 810 80 1736 38 1738 7 813 14 1744 24 817 6 1746 16 1747 12 1748 2 819 6 1750 2 1749 3 821 2 823 20 1754 2 1753 2 826 1116 1756 12 827 2 830 2 1759 2 831 22 1761 2 1763 6 1764 80 1765 2 1767 1 835 2 837 26 1772 2 1774 2 840 3 843 2 1775 2 1777 2 1776 16 846 2 1781 2 848 2 1783 2 849 2 851 4 1785 4 852 2 1786 2 1788 2 853 6 1790 2 1792 2 1795 2 860 4 862 6 1799 2 864 2 866 2 1803 2 867 104 1806 78 1807 13 1809 24 1810 2 1811 10 872 4 1812 2 1813 2 1814 2 1815 52 876 78 878 2 880 178 879 2 1820 2 1823 2 1825 2 883 2 884 12 1828 2 1831 61 1833 2 1835 8 1836 2 887 2 889 2 890 2 1840 2 1842 78 894 1 1844 22 1843 2 895 2 897 2 896 78 1846 1 898 2 1849 2 1851 2 1852 2 901 2 1855 38 1857 78 907 4 1858 166 909 2 1859 3 1860 3 912 2 911 16 916 2 917 2 1861 80 919 76 1862 2 1866 3 1869 2 1872 2 925 2 1874 3 1877 78 1878 2 928 2 929 14 934 2 1883 2 1884 66 1886 2 1887 2 1888 2 1889 156 935 4 1893 12 1895 5 1896 558 939 2 940 2 941 2 945 3 947 2 1901 78 1902 3 1903 2 948 2 950 2 1904 2 952 2 953 60 956 2 1905 2 
9 2 1811 2 265 2 1825 2 86 2 757 2 1207 2 1044 4 1210 2 1247 2 239 2 1543 6 947 2 1008 2 950 2 1010 2 1448 2 23 2 1166 2 1332 2 68 2 1746 2 324 2 444 2 
9 2 1811 2 265 2 1825 2 86 2 757 2 1207 2 1044 4 1210 2 1247 2 239 2 1543 6 947 2 1008 2 950 2 1010 2 1448 2 23 2 1166 2 1332 2 68 2 1746 2 324 2 444 2 
9 2 1811 2 265 2 1825 2 86 2 757 2 1207 2 1044 4 1210 2 1247 2 239 2 1543 6 947 2 1008 2 950 2 1010 2 1448 2 23 2 1166 2 1332 2 68 2 1746 2 324 2 444 2 
959 2 135 2 249 3 819 2 1639 2 1815 2 1614 2 823 4 222 3 1008 3 1010 2 1758 2 739 4 1236 2 110 2 1653 2 1414 6 1204 4 324 3 655 4 1279 2 9 10 1509 2 265 2 303 4 122 2 1827 2 1018 2 1210 4 239 2 566 2 1744 3 193 2 129 4 1715 4 1307 4 1260 2 335 2 1099 2 1747 2 
135 2 959 2 249 2 1614 2 739 4 1236 2 1560 2 324 2 9 10 862 2 1509 2 265 2 566 2 1744 2 1307 4 1260 2 335 2 1747 2 1810 2 819 2 1639 2 1815 2 823 4 222 2 1008 2 1010 2 1758 2 1653 2 110 2 1414 6 1204 4 655 4 1279 2 122 2 303 4 1827 2 1018 2 1210 4 239 2 193 2 1715 4 129 4 1099 2 
135 2 959 2 249 2 1614 2 739 4 1236 2 1560 2 324 2 9 10 862 2 1509 2 265 2 566 2 1744 2 1307 4 1260 2 335 2 1747 2 1810 2 819 2 1639 2 1815 2 823 4 222 2 1008 2 1010 2 1758 2 1653 2 110 2 1414 6 1204 4 655 4 1279 2 122 2 303 4 1827 2 1018 2 1210 4 239 2 193 2 1715 4 129 4 1099 2 
135 2 959 2 249 2 1614 2 739 4 1236 2 1560 2 324 2 9 10 862 2 1509 2 265 2 566 2 1744 2 1307 4 1260 2 335 2 1747 2 1810 2 819 2 1639 2 1815 2 823 4 222 2 1008 2 1010 2 1758 2 1653 2 110 2 1414 6 1204 4 655 4 1279 2 122 2 303 4 1827 2 1018 2 1210 4 239 2 193 2 1715 4 129 4 1099 2 
135 2 959 2 249 2 1614 2 739 4 1236 2 1560 4 324 2 9 10 862 4 1509 2 265 2 566 2 1744 2 1307 4 1260 2 335 2 1747 2 1810 4 819 2 1639 2 1815 2 823 4 222 2 1008 2 1010 2 1758 2 1653 2 110 2 1414 6 1204 4 655 4 1279 2 122 2 303 4 1827 2 1018 2 1210 4 239 2 193 2 1715 4 129 4 1099 2 
319 2 466 2 181 2 1579 2 1131 2 1282 2 
466 2 765 2 1494 2 1128 2 1305 2 186 2 582 2 
520 2 106 2 1757 2 139 2 1137 2 254 2 1650 2 1853 2 901 2 9 10 937 2 55 1 1599 2 1210 8 159 2 946 2 1743 2 19 2 1328 1 1868 2 1871 2 1720 1 1462 1 397 2 311 2 577 1 
959 6 1810 2 819 6 1614 2 1644 2 223 2 198 1 622 4 1504 2 853 4 148 2 1653 6 1560 5 1204 15 1678 2 1561 2 9 6 862 3 533 2 122 6 1243 2 236 2 1018 6 1210 6 566 6 163 2 1715 4 1307 12 310 2 66 2 1747 6 
9 1 1314 1 492 6 1660 2 31 2 16 2 823 2 1210 1 494 4 1729 2 720 2 192 2 1351 2 1319 2 276 2 739 2 655 2 414 2 
492 6 1660 2 31 4 16 2 823 2 494 4 1729 2 720 2 192 2 1351 2 1319 2 276 4 739 2 655 2 414 4 
9 1 1314 1 492 10 1660 2 31 8 16 2 823 2 1210 1 494 4 1729 2 720 6 192 8 1351 2 1319 2 276 8 739 2 655 2 414 8 
492 2 1660 2 31 2 16 2 823 2 494 2 1729 2 1351 2 1319 2 276 2 739 2 655 2 414 2 
1335 2 138 2 1234 2 857 4 151 4 9 78 11 16 508 8 157 28 1121 2 160 2 1122 2 273 4 1124 36 1126 4 867 8 394 4 513 10 1806 4 1463 4 1129 2 282 2 284 4 516 26 872 4 1265 4 1358 6 1005 4 524 2 1471 4 1139 16 876 4 294 44 877 2 1141 16 298 2 767 4 300 4 416 2 415 8 301 4 1366 8 1477 4 1149 4 419 14 1601 2 1481 2 1482 6 777 8 536 2 423 2 780 4 1024 6 1716 11 541 16 1719 8 783 8 674 10 70 4 788 4 1842 4 1499 10 547 24 896 4 1290 4 432 4 685 2 800 4 1857 4 1505 4 1858 8 442 4 206 30 1736 4 810 4 1395 10 1861 4 1742 2 454 24 817 2 334 4 1745 32 926 4 463 4 1877 4 337 2 1640 10 1063 2 1531 2 826 102 1649 4 1885 2 1889 6 351 4 1892 2 232 1 1077 6 710 4 114 2 713 4 1896 24 1421 4 357 4 1210 70 240 5 1901 4 1213 4 841 10 611 10 1098 4 
896 2 800 2 1234 2 442 2 1734 2 325 2 9 28 206 6 11 14 810 4 1510 2 560 2 1242 10 1395 6 157 12 1514 2 636 2 1122 2 273 2 1124 14 817 2 334 4 516 12 1640 6 872 2 1642 2 1358 4 1531 2 1005 4 524 2 826 40 1472 2 1272 2 1885 2 294 14 877 2 764 2 1889 2 351 4 1535 2 1077 2 416 2 114 2 300 4 1896 8 1601 2 357 2 1482 2 1210 26 536 2 423 2 1213 4 1024 2 1716 2 611 6 1719 6 674 2 70 2 788 4 
962 8 138 2 496 2 1447 8 500 6 1234 2 1238 24 151 4 264 4 9 150 11 28 1242 22 978 2 1456 10 157 58 636 4 1458 90 1121 2 1122 8 746 4 273 10 1124 88 1126 6 867 42 868 4 394 4 1806 6 1129 4 284 4 516 58 1133 4 872 4 873 26 1265 6 1358 8 1005 6 645 24 1472 2 1272 11 876 6 294 112 877 2 764 2 1473 2 1141 42 409 4 767 6 416 2 300 8 1477 4 1149 4 419 12 1601 8 1481 2 1482 10 59 6 777 24 1154 4 536 2 423 8 1158 24 780 6 1024 14 1716 16 1719 15 674 18 70 6 788 6 1841 12 1842 6 1381 8 896 10 547 92 432 6 1174 90 1294 24 78 10 800 10 687 4 903 2 1857 6 1505 4 442 10 1858 50 1734 4 206 34 325 7 1736 4 810 6 1510 2 560 2 1395 16 1861 6 1514 2 454 84 817 4 334 6 463 4 1877 6 1640 16 1642 2 1063 2 1531 4 826 248 1318 4 1649 4 585 26 1885 2 1889 36 351 6 710 6 1077 14 1895 2 114 8 1896 124 1421 6 1087 18 357 4 1210 134 240 5 1901 6 1213 6 1547 10 611 16 490 24 1098 4 1778 4 
1499 2 677 2 896 2 136 2 550 2 1294 2 899 2 78 2 800 2 1447 2 1234 2 1035 2 442 2 380 2 446 4 9 46 11 36 1452 2 810 2 384 4 1737 2 1456 2 1395 4 328 2 157 6 1514 2 1348 4 1349 2 1122 2 746 2 273 2 1124 20 334 2 513 2 1805 2 396 2 1308 2 818 2 337 2 1581 2 286 2 516 6 1640 4 1358 6 1531 2 1005 2 826 48 524 2 932 2 36 4 828 2 404 2 650 2 1885 2 294 20 877 2 1889 2 1413 2 351 2 475 2 1892 2 1764 6 1535 2 1077 2 416 2 114 2 1080 2 1896 6 1148 2 661 2 1601 2 1482 2 1210 44 778 2 536 2 423 2 1158 2 1213 2 1547 2 841 2 605 2 1024 2 1716 2 611 4 1549 2 490 2 1906 2 674 2 784 2 70 2 788 2 
30 2 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 
502 1 1270 1 865 1 1791 1 979 1 1645 1 

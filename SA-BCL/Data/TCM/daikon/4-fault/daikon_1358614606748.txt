#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 787 1210 (208,749) (208,749) 157 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 661 526 225 130 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V FAILED junit.framework.AssertionFailedError 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 415 738 94 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 415 738 94 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaCharStream:FillBuff()V
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_56()Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.ModBitTracker:split(I)I
jtb.JavaParser:jj_3R_149()Z
daikon.Quant:setDiff([I[I)[I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_80()Z
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_3_36()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.MathMDE:gcd(II)I
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:eltwiseLT([I)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:subsetOf([D[D)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.ProglangType:isIntegral()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.Quant:eltwiseGTE([I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.Quant:lt(II)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.diff.RootNode:RootNode()V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.PptSlice1:arity()I
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_74()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_3_4()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:jj_3R_134()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.JavaParser:jj_3R_62()Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_97()Z
jtb.JavaCharStream:backup(I)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_17()Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_137()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_115()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getEndLine()I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_3R_58()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.PptName:getSignature()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:lexLTE([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.Invariant:logOn()Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_68()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_77()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.PptSlice1:num_samples()I
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_81()Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_3_5()Z
jtb.JavaParser:jj_3_10()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:lexEqual([I[I)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_2_18(I)Z
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_85()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.NodeOptional:present()Z
jtb.JavaParser:jj_3R_133()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_61()Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:memberOf(I[I)Z
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:dimensions()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaCharStream:BeginToken()C
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:slice([III)[I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([J)[J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:sameLength([I[I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_72()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_63()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.Assert:assertTrue(Z)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.PptName:isEnterPoint()Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_100()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:jj_3R_116()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.JavaParser:jj_2_17(I)Z
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
utilMDE.FuzzyFloat:lte(DD)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:lte(II)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_2_14(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsGT([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_76()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptName:toString()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfo:new_ppt()V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:jj_3R_101()Z
jtb.JavaParser:jj_ntk()I
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_99()Z
utilMDE.FuzzyFloat:lt(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.ArraysMDE:element_range([I)I
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParser:jj_3R_121()Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:jj_3R_136()Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_3R_106()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_162()Z
utilMDE.ArraysMDE:min([I)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_210()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.Intern:intern([D)[D
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_3_3()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
utilMDE.Intern:internSubsequence([JII)[J
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_122()Z
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:eq(JJ)Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:noDups([I)Z
jtb.JavaParser:jj_3_28()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:jj_3R_109()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
utilMDE.MathMDE:pow(II)I
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:numIntArrays()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParser:jj_3R_60()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.ProglangType:baseIsScalar()Z
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.diff.Node:Node()V
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_14()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.Quant:eltsLTE([II)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.PptName:getFullClassName()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3R_49()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.syntaxtree.NodeList:NodeList()V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:jj_3_35()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.JavaParser:jj_3_20()Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.Debug:logDetail()Z
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_108()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:jj_3_30()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_3R_161()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.ModBitTracker:num_vars()I
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:size()I
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.Quant:lexGT([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_104()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:jj_3R_119()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_3R_107()Z
daikon.Quant:gt(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_21()Z
jtb.JavaParser:jj_3R_55()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:ne(II)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_114()Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isArray()Z
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_3_27()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaParser:jj_3R_105()Z
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String; | ASSIGN | 2209 | = null
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DDD)D
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eq(II)Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.WeakHasherMap:size()I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:jj_3_25()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_87()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3R_163()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.JavaParser:jj_3_18()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_2_12(I)Z
utilMDE.MathMDE:gcd(JJ)J
utilMDE.ArraysMDE:sorted([I)Z
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:jj_2_13(I)Z
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_102()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.Quant:eltsEqual([II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParser:jj_2_16(I)Z
daikon.ProglangType:isScalar()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_3R_88()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParser:jj_3_19()Z
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:intersection([I[I)[I
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn; | ASSIGN | 105786 | = null
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName:hashCode()I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:jj_3R_103()Z
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_73()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([S[S)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_169()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.ModBitTracker:num_samples()I
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:jj_3R_54()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:jj_3R_98()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long; | RETURN | 14834 | return null
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_3(I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:logDetail()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.PptSlice0:arity()I
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.JavaParser:jj_3R_110()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.Quant:union([I[I)[I
daikon.Quant:memberOf(D[F)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:eq(DD)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:jj_2_35(I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParser:jj_3R_135()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:memberOf(S[S)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.Quant:gte(II)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.Quant:concat([I[I)[I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:memberOf(F[F)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.PptSlice2:arity()I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.NodeListOptional:present()Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:gcd([I)I
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_148()Z
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:jj_scan_token(I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_125()Z
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_164()Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:jj_3_12()Z
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_180()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:num_sets()I
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:subsetOf([F[F)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
jtb.JavaParser:jj_3R_118()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:jj_2_10(I)Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.Quant:eq(FF)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_3_1()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParser:jj_3R_89()Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_126()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
380 2 667 2 669 2 372 2 964 4 1279 2 834 2 1080 2 730 2 
1168 6 36 2 840 2 124 2 85 2 1223 2 111 6 740 2 241 2 649 6 1022 2 
459 6 431 6 372 2 660 4 633 2 159 4 333 6 867 6 378 2 23 2 759 2 834 2 1050 2 
1298 2 253 2 316 4 439 16 551 2 1239 8 1299 8 1301 10 366 2 1139 8 817 10 834 6 284 12 11 10 1198 8 1200 2 679 10 372 6 992 4 35 16 540 26 520 29 211 10 1250 2 335 6 1233 6 337 16 684 4 805 4 1275 2 
882 6 483 4 
1272 2 
937 2 569 2 86 2 1001 2 830 2 672 2 535 2 410 2 974 4 1244 2 494 2 834 4 1009 2 1065 2 1066 2 870 2 803 2 50 2 580 2 372 4 1291 2 15 2 16 2 874 2 292 2 729 2 63 2 380 2 1082 2 144 2 954 2 1298 2 985 4 957 2 387 4 1036 2 556 2 818 2 616 2 1044 2 852 2 1148 4 223 2 193 2 
486 6 182 6 955 2 253 2 439 32 793 4 68 4 1299 6 691 6 1301 16 1138 2 237 6 960 2 426 4 886 8 797 2 834 4 817 6 284 22 1040 4 11 16 1198 18 539 4 642 2 679 16 931 2 372 4 122 6 35 32 540 48 211 16 520 54 542 6 335 4 1233 4 546 4 337 32 294 4 805 2 
15 2 823 2 165 2 
761 2 166 2 354 2 233 2 223 2 359 2 920 10 831 2 114 2 703 2 491 2 435 22 401 2 769 2 
810 2 439 2 507 2 1301 2 511 2 817 4 284 2 11 2 1198 2 679 2 35 2 839 2 540 4 211 2 520 6 210 2 586 2 1233 2 589 2 337 2 805 2 39 2 594 2 
284 4 1040 4 11 4 182 6 539 4 439 8 679 4 35 8 540 12 1301 4 211 4 583 2 520 16 903 2 237 6 337 8 684 2 
1127 2 823 6 648 2 195 2 708 62 487 2 1212 2 1277 2 600 2 735 4 385 4 985 4 1187 2 281 4 795 4 830 2 347 2 1003 2 5 4 206 2 558 2 367 4 656 10 494 4 1173 2 613 4 48 10 676 4 137 2 1015 2 579 2 12 2 76 4 15 8 662 4 1122 2 707 4 501 2 313 14 165 2 
1129 2 914 2 256 2 812 2 922 2 514 2 923 2 1229 2 1272 2 164 2 
1163 2 484 2 1236 4 1164 4 1052 2 1166 1 319 12 318 3 752 2 405 1 832 2 1057 2 673 1 833 2 1172 2 96 2 834 34 1245 2 412 3 1174 6 977 4 1247 12 175 2 908 2 102 2 1077 32 1078 2 1180 2 500 2 770 2 1080 2 502 2 596 2 181 2 108 2 599 16 255 2 913 1 773 16 918 2 695 2 509 24 115 1 1260 3 779 3 1088 2 1191 8 850 2 614 2 27 2 118 2 516 2 928 2 617 3 698 2 702 8 854 16 432 2 1095 2 267 2 1204 2 704 4 859 2 269 2 1101 8 1102 2 436 1 272 2 437 2 997 2 629 2 1211 1 40 2 792 2 1281 2 794 2 42 1 1216 2 204 2 532 1 1004 4 282 24 538 3 638 5 448 1 639 2 1008 2 135 6 1288 1 136 2 450 2 947 2 1114 2 1116 2 1014 3 373 2 372 32 209 2 287 2 724 2 374 2 376 2 139 2 56 2 545 1 1021 2 728 2 1026 2 1027 2 458 2 807 6 381 2 214 2 382 3 460 2 733 4 734 2 1029 3 877 2 1300 4 880 2 465 4 70 16 71 2 884 2 653 2 652 2 887 2 1303 3 220 1 221 2 962 2 561 32 1041 2 1228 1 892 2 1045 2 820 2 1307 2 477 1 161 2 1153 1 311 6 1048 2 78 3 1154 2 1234 2 80 1 1157 3 
965 2 834 2 
743 2 798 2 834 4 
1242 2 
970 4 969 4 665 6 972 2 0 98 666 8 668 20 670 4 1 24 3 338 973 6 323 286 324 174 8 4 9 10 975 2 10 6 325 174 675 2 979 6 331 10 334 2 680 46 682 12 681 4 336 192 683 4 338 24 18 12 340 6 341 6 981 2 982 2 983 2 343 26 689 2 984 2 692 2 693 2 694 2 22 2 349 2 696 2 24 2 350 6 987 2 25 12 351 2 352 100 28 2 29 2 30 4 991 4 31 2 33 2 700 6 357 2 993 2 994 2 37 2 360 2 705 12 706 6 38 6 709 4 710 2 1000 6 711 22 712 2 365 2 716 4 1005 2 368 2 370 38 47 42 1007 100 1011 2 719 8 722 142 372 10 53 2 54 6 1019 2 726 6 1020 4 58 4 727 100 57 44 1023 4 379 2 1025 4 64 2 65 58 66 4 383 26 67 2 384 6 1031 2 736 2 737 2 1032 12 386 24 1033 2 739 2 69 6 388 108 741 26 1037 188 1039 2 1043 2 75 8 391 12 392 2 744 2 395 4 746 6 77 90 747 2 748 6 749 2 400 2 750 42 751 2 402 66 84 50 1051 2 1053 2 1054 4 406 2 754 2 755 4 1059 2 95 2 756 306 757 2 760 6 1064 2 97 2 762 2 1067 2 99 2 1069 2 1075 26 416 2 764 2 104 6 105 6 1076 24 106 6 765 334 767 6 768 2 1081 2 107 306 771 4 420 2 421 6 774 2 1085 2 113 14 116 2 424 42 425 48 117 6 427 4 119 2 1089 2 428 172 430 6 1092 6 1094 6 1097 6 783 120 784 2 433 2 434 26 125 174 126 4 1103 18 129 4 786 2 787 2 788 188 789 2 791 4 1105 2 440 2 1107 2 443 174 444 10 445 6 1109 6 1110 16 1112 12 446 2 134 2 799 16 801 6 449 4 1117 2 452 4 453 50 455 2 1123 2 456 2 143 386 1128 4 457 6 146 2 809 2 147 2 1134 20 148 2 464 26 814 6 1140 2 1141 6 151 10 816 2 466 2 1144 6 469 4 468 82 471 2 153 6 474 60 473 2 155 86 157 2 156 2 158 4 481 2 162 22 482 2 163 192 1158 6 1160 54 485 12 827 2 1167 2 169 2 1169 4 489 2 170 6 171 16 492 6 490 2 493 14 172 2 834 10 173 2 495 2 836 2 174 8 496 2 497 26 838 156 498 6 841 10 499 16 842 2 178 6 843 6 844 62 179 192 845 22 180 6 183 2 504 4 184 6 185 174 1183 16 186 6 1184 306 187 2 1185 6 1186 4 847 4 1188 2 508 2 848 6 849 6 188 4 1192 2 515 2 189 4 190 22 851 10 1199 24 853 6 191 2 1201 510 517 4 855 50 192 10 857 72 1203 2 858 36 519 10 521 2 1206 2 1207 10 861 4 1208 2 522 6 1210 2 524 2 525 6 863 4 196 4 199 2 527 2 528 174 200 2 530 2 201 26 202 6 865 4 534 4 868 6 205 2 207 2 537 2 869 2 1218 6 208 2 871 4 872 16 541 2 1220 4 543 10 1222 6 547 6 549 4 548 2 213 4 875 18 550 4 552 4 879 4 878 4 217 16 554 2 1225 26 555 26 883 100 888 42 559 6 889 38 1226 8 560 2 890 2 564 2 563 2 1230 10 894 2 226 6 566 2 567 120 899 8 231 22 568 2 900 6 1237 2 901 2 572 2 573 2 1240 10 1241 24 1243 2 575 6 240 2 242 6 905 2 907 14 578 4 247 14 582 24 585 2 249 2 587 6 588 2 591 4 1254 14 592 2 1255 2 593 4 1256 6 911 26 595 4 251 2 597 2 252 192 598 6 912 2 1257 2 916 4 257 2 601 2 917 4 1259 26 259 2 921 2 603 2 605 54 260 10 1263 6 607 26 924 2 1264 2 1265 6 262 2 1266 6 926 2 927 78 930 6 618 4 1269 156 1270 2 1271 2 933 2 620 2 622 20 269 2 934 10 268 2 270 4 625 2 626 4 274 2 940 44 943 2 278 98 279 200 280 4 944 2 635 2 634 2 1282 66 1284 6 946 2 285 4 1285 12 1286 4 640 174 641 4 948 4 1290 2 643 2 949 76 288 2 645 16 290 58 1292 4 647 2 295 2 953 2 1296 2 1297 6 297 24 298 2 958 4 959 14 301 174 657 6 302 24 658 2 1304 2 304 166 659 2 1306 386 1308 4 1310 2 1311 6 309 2 967 14 1314 6 312 4 664 18 314 4 
800 2 348 2 1058 1 230 2 
800 2 32 2 
15 2 800 2 291 2 963 2 316 2 306 2 123 2 
938 2 800 2 306 2 
800 2 306 2 655 2 
348 2 1262 2 758 2 
800 2 306 2 
906 2 758 2 
800 2 1268 2 
348 2 562 2 758 2 
348 2 1147 2 701 2 
745 2 348 2 876 2 
413 2 348 2 571 2 
348 2 79 2 245 2 
1038 2 758 2 
800 2 1030 2 
51 2 1147 2 
745 2 300 2 
413 2 389 2 
79 2 73 2 
417 2 758 2 
909 2 79 2 
413 2 697 2 
745 2 307 2 
808 2 1147 2 
348 2 562 2 758 2 265 2 
348 2 120 2 562 2 758 2 265 2 
348 2 778 2 758 2 
348 2 758 2 610 2 
167 2 856 2 409 2 624 2 
15 2 1149 2 291 2 1061 2 
15 2 1149 2 291 2 1098 2 123 2 1061 2 
15 2 800 2 19 2 291 2 316 2 306 2 
870 2 565 2 
15 2 332 2 291 2 316 2 
413 2 429 2 
79 2 699 2 
864 2 1147 2 
745 2 609 2 
745 2 79 2 1156 2 
745 2 79 2 222 2 
745 2 732 2 79 2 
745 2 480 2 79 2 
1130 2 902 2 21 2 411 6 15 2 896 6 291 2 1182 2 
355 2 758 2 
1195 2 1115 4 342 4 1133 2 826 2 475 2 1280 2 346 2 397 2 1302 2 1151 2 1251 2 1099 2 435 6 557 2 60 2 996 2 447 2 
348 2 87 2 
877 2 
1164 4 315 2 1052 2 89 2 671 2 752 2 319 8 93 2 1057 2 1172 4 96 2 834 26 1245 2 1174 6 977 4 837 2 1247 8 908 2 1077 6 250 2 1078 2 770 2 1080 2 1083 2 918 6 1088 2 1191 2 611 4 118 2 27 2 516 2 698 2 432 2 1205 2 704 4 269 2 436 4 272 2 364 2 1281 2 204 2 532 2 1004 2 369 4 135 2 450 2 1114 2 372 26 209 2 950 2 56 2 458 2 807 4 381 2 460 2 733 2 461 2 1300 2 1137 2 465 4 70 6 71 2 218 2 653 2 652 2 961 2 887 2 962 2 221 2 561 4 1042 2 1152 2 311 2 1048 2 1234 2 80 2 
1164 4 1052 2 671 2 828 2 752 2 319 8 93 2 1057 2 1172 4 96 2 834 26 1245 2 1174 6 977 4 837 2 1247 8 908 2 1077 6 250 2 1078 2 770 2 1080 2 181 2 686 2 1083 2 918 6 1088 2 1191 2 611 4 27 2 118 2 516 2 698 2 432 2 704 4 269 2 436 2 272 2 364 2 1281 2 204 2 532 2 1004 2 369 4 135 2 450 2 1114 2 372 26 209 2 950 2 56 2 458 2 807 6 381 2 460 2 733 2 461 2 1300 2 650 2 880 2 1137 2 465 4 70 6 71 2 218 2 653 2 652 2 961 2 887 2 962 2 221 2 561 4 1042 2 820 2 1152 2 311 2 1048 2 1234 2 80 2 
1312 2 
976 2 154 2 
1104 2 1278 2 529 4 88 4 1214 4 1215 2 829 2 1168 6 204 2 1170 2 1171 2 241 2 637 4 834 12 1174 4 49 2 1289 8 329 2 1016 2 372 6 908 2 1219 2 248 2 375 2 289 4 644 2 840 2 1293 2 140 2 1078 2 293 2 1022 4 1124 2 61 2 1024 2 111 6 649 6 506 2 602 4 465 2 815 2 1035 2 740 4 150 2 652 2 962 2 74 2 26 2 118 2 990 2 1305 8 356 2 266 2 932 2 479 2 663 2 704 2 398 2 269 2 127 10 
1104 2 1278 2 529 4 88 4 1214 4 1215 2 829 2 1168 8 204 2 1170 2 1171 2 241 2 637 4 834 12 1174 4 1113 2 1289 8 329 2 1016 2 372 6 908 2 1219 2 248 2 289 4 644 2 840 2 1293 2 140 2 1078 2 1223 2 293 2 1022 4 1124 2 61 2 1024 2 111 8 649 6 506 2 1258 2 602 4 465 2 815 2 1035 2 740 4 150 2 652 2 261 4 962 2 74 2 26 2 118 2 990 2 1305 8 356 2 266 2 932 2 479 2 663 2 704 2 398 2 269 2 127 10 
74 2 990 2 111 2 88 4 649 2 329 2 1016 2 1219 2 248 2 289 2 602 4 1170 2 663 2 398 2 740 2 1171 2 1022 2 61 2 
1104 2 1278 2 529 4 88 4 1214 4 1215 2 829 2 1168 6 204 2 1170 2 1171 2 637 4 834 12 1174 4 49 2 1289 4 329 2 1016 2 372 6 908 2 1219 2 248 2 375 2 289 4 644 2 840 2 1293 2 140 2 1223 2 1078 2 293 2 1022 4 1124 2 61 2 1024 2 111 6 649 4 506 2 602 4 465 2 815 2 1035 2 740 4 150 2 652 2 962 2 74 2 26 2 118 2 990 2 1305 4 356 2 266 2 932 2 479 2 663 2 704 2 398 2 269 2 127 6 
85 2 1104 2 1278 2 529 4 88 4 1214 4 1215 2 829 2 1168 6 204 2 1170 2 1171 2 637 4 834 12 1174 4 49 2 1289 4 329 2 1016 2 372 6 908 2 1219 2 248 2 375 2 289 4 644 2 840 2 1293 2 140 2 1078 2 293 2 1022 4 1124 2 61 2 1024 2 111 4 649 6 506 2 602 4 465 2 815 2 1035 2 740 4 150 2 652 2 962 2 74 2 26 2 118 2 990 2 1305 4 356 2 266 2 932 2 479 2 663 2 704 2 398 2 269 2 127 6 
1104 2 1278 2 529 4 88 4 1214 4 1215 2 829 2 1168 6 204 2 1170 2 1171 2 241 2 637 4 834 12 1174 4 49 2 1289 8 329 2 1016 2 372 6 908 2 1219 2 248 2 375 2 289 4 644 2 840 2 1293 2 140 2 1078 2 293 2 1022 4 1124 2 61 2 1024 2 111 6 649 6 506 2 602 4 465 2 815 2 1035 2 740 4 150 2 652 2 962 2 74 2 26 2 118 2 990 2 1305 4 356 2 266 2 932 2 479 2 663 2 704 2 398 2 269 2 127 6 
85 2 1104 2 1278 2 529 4 88 4 1214 4 1215 2 829 2 1168 8 204 2 1170 2 1171 2 241 2 637 4 834 12 1174 4 49 2 1289 8 329 2 1016 2 372 6 908 2 1219 2 248 2 375 2 289 4 644 2 840 2 1293 2 140 2 1078 2 293 2 1022 4 1124 2 61 2 1024 2 111 6 649 8 506 2 602 4 465 2 815 2 1035 2 740 4 150 2 652 2 962 2 74 2 26 2 118 2 990 2 1305 8 356 2 266 2 932 2 479 2 663 2 704 2 398 2 269 2 127 10 
1104 2 1278 2 529 4 88 4 1214 4 1215 2 829 2 1168 6 204 2 1170 2 1171 2 241 2 637 4 834 12 1174 4 49 2 1289 8 329 2 1016 2 372 6 908 2 1219 2 248 2 375 2 289 4 644 2 840 2 1293 2 140 2 1078 2 293 2 1022 4 1124 2 61 2 1024 2 111 6 649 6 506 2 602 4 465 2 815 2 1035 2 740 4 150 2 652 2 962 2 74 2 26 2 118 2 990 2 1305 8 356 2 266 2 932 2 479 2 663 2 704 2 398 2 269 2 127 10 
1164 4 319 4 829 2 1168 12 1170 2 6 1 1171 2 834 46 1174 6 977 4 1175 6 329 2 840 4 339 2 181 2 687 2 505 2 506 2 345 2 512 6 1191 2 986 6 988 6 26 4 27 2 990 2 698 2 358 1 356 2 704 4 995 2 194 4 364 2 529 6 41 6 1214 4 1215 2 204 2 44 1 45 2 1004 2 369 4 371 2 1016 2 209 2 372 24 1219 2 375 2 56 2 544 2 1022 4 61 2 1024 2 381 2 733 2 70 6 740 4 1035 2 218 2 885 6 561 2 74 2 743 6 224 10 398 2 1234 2 85 4 232 2 1052 2 1238 6 234 2 88 4 404 2 752 12 753 2 1242 6 93 4 407 2 239 2 576 6 96 2 1060 2 1062 1 414 6 1247 4 246 6 1070 6 908 2 248 2 100 2 1074 4 1077 8 1078 2 1252 2 590 2 418 2 1080 2 111 4 254 2 918 6 602 4 1086 1 1088 2 118 2 1090 2 121 2 264 2 266 2 1096 7 932 2 619 2 269 2 1100 1 127 2 128 7 272 2 438 1 1104 2 790 2 1278 2 1281 2 637 8 135 2 1114 2 1289 2 804 2 1118 1 289 4 644 2 1121 2 140 2 1293 4 141 8 293 2 1294 6 1124 2 952 6 458 2 807 6 296 2 145 2 460 2 649 8 1300 2 299 1 465 4 815 2 150 2 652 2 653 2 961 2 962 2 820 2 965 6 478 2 968 2 663 2 479 2 311 2 1155 2 
232 2 1164 4 234 2 1238 6 1052 2 88 4 404 2 752 12 319 8 753 2 1168 12 829 2 1242 6 1170 2 407 2 93 4 576 6 239 2 1171 2 1172 2 241 4 1060 2 96 2 834 48 1174 6 977 4 1175 6 414 6 1247 8 246 6 329 2 1070 6 908 2 1074 4 100 2 248 2 840 4 1077 8 1252 2 1078 2 590 2 339 2 418 2 1080 2 181 2 687 2 505 2 111 8 254 2 506 2 345 2 918 6 602 4 512 6 1088 2 1191 2 986 6 988 6 26 4 27 2 118 2 990 2 1090 2 121 2 264 2 698 2 356 2 266 2 932 2 619 2 704 4 860 2 995 2 269 2 127 2 272 2 194 4 364 2 790 2 1104 2 529 6 1278 2 41 6 1214 4 1215 2 1281 2 204 2 45 2 1004 4 637 8 369 4 135 2 371 2 1114 2 1289 6 804 2 1016 2 372 26 209 2 1219 2 375 2 289 4 644 2 1121 2 1293 4 140 2 141 8 56 2 544 2 1294 6 293 2 1124 2 1022 4 61 2 952 6 1024 2 458 2 381 2 807 6 145 2 296 2 460 2 733 4 649 8 1300 4 465 4 70 6 815 2 218 2 1035 2 740 4 150 2 885 6 961 2 653 2 652 2 962 2 1143 2 561 2 74 2 743 6 820 2 965 6 478 2 224 10 968 2 479 2 663 2 311 2 398 2 1234 2 1155 2 
232 2 1164 4 234 2 1238 6 1052 2 88 4 404 2 752 12 319 8 753 2 1168 12 829 2 1242 6 1170 2 407 2 93 4 576 6 239 2 1171 2 1172 2 241 4 1060 2 96 2 834 48 1174 6 977 4 1175 6 414 6 1247 8 246 6 329 2 1070 6 908 2 1074 4 100 2 248 2 840 4 1077 8 1252 2 1078 2 590 2 339 2 418 2 1080 2 181 2 687 2 505 2 111 8 254 2 506 2 345 2 918 6 602 4 512 6 1088 2 1191 2 986 6 988 6 26 4 27 2 118 2 990 2 1090 2 121 2 264 2 698 2 356 2 266 2 932 2 619 2 704 4 860 2 995 2 269 2 127 6 272 2 194 4 364 2 790 2 1104 2 529 6 1278 2 41 6 1214 4 1215 2 1281 2 204 2 45 2 1004 4 637 8 369 4 135 2 371 2 1114 2 1289 6 804 2 1016 2 372 26 209 2 1219 2 375 2 289 4 644 2 1121 2 1293 4 140 2 141 8 56 2 544 2 1294 6 293 2 1124 2 1022 4 61 2 952 6 1024 2 458 2 381 2 807 6 145 2 296 2 460 2 733 4 649 8 1300 4 465 4 70 6 815 2 218 2 1035 2 740 4 150 2 885 6 961 2 653 2 652 2 962 2 1143 2 561 2 74 2 743 6 1305 4 820 2 965 6 478 2 224 10 968 2 479 2 663 2 311 2 398 2 1234 2 1155 2 
1164 4 168 2 488 6 319 10 829 2 1168 16 1170 2 1171 2 1172 2 834 52 1174 6 977 4 1175 6 329 2 677 6 840 4 339 2 181 2 687 2 505 2 506 2 345 2 512 6 1191 4 986 6 988 6 26 4 27 2 990 2 698 2 356 2 704 4 860 2 995 2 194 4 364 2 529 6 41 6 1214 4 1215 2 43 2 204 2 45 2 1004 4 369 6 371 2 1016 2 209 2 372 24 1219 2 375 2 56 2 1223 2 544 2 59 6 1022 4 61 2 1024 2 381 2 733 4 70 8 740 4 1035 2 218 4 885 6 561 4 74 2 743 12 224 8 895 2 398 2 1234 2 85 2 232 2 234 2 1052 2 1238 6 88 4 235 2 404 2 752 10 753 2 1242 12 93 4 408 2 407 2 904 6 576 12 241 4 96 2 1060 2 1063 6 414 6 1247 10 246 12 1070 12 1071 6 908 2 248 2 100 2 1074 4 101 2 1077 12 1078 2 1252 2 590 2 418 2 1080 2 111 10 254 2 918 8 602 4 1088 2 118 2 1090 2 1091 2 121 2 264 2 266 2 932 2 619 2 269 2 127 6 272 2 1104 2 790 2 1278 2 1281 2 637 8 135 4 1114 2 1289 6 804 2 289 4 644 2 454 2 1121 2 140 2 1293 4 141 8 293 2 1294 6 1124 2 1125 6 952 6 458 2 807 6 296 2 145 2 460 2 649 10 1300 4 1135 6 465 4 815 2 150 2 652 2 653 2 961 2 962 2 1143 2 820 2 1305 4 965 12 478 2 966 6 968 2 663 2 479 2 311 4 1155 2 
1024 2 111 6 529 2 1278 2 88 2 649 6 1214 2 1168 4 829 2 602 2 1170 2 815 2 740 4 150 2 1171 2 637 2 241 2 834 4 74 2 1305 4 1289 6 1016 2 356 2 1219 2 248 2 375 2 840 2 644 2 932 2 140 2 398 2 293 2 127 4 1124 2 1022 4 
1164 4 1165 2 1052 2 88 2 752 4 1168 4 829 2 1170 2 93 2 833 2 239 2 1171 2 241 2 96 2 834 28 1174 6 977 4 908 2 248 2 840 2 1077 8 1078 2 1080 2 181 2 111 6 918 6 602 2 1088 2 27 2 118 2 1267 3 698 2 356 2 266 2 932 2 704 4 269 2 127 2 364 2 529 2 631 2 1278 2 1214 2 1281 2 204 2 637 2 369 4 135 3 802 2 1114 2 1289 6 1016 2 372 24 209 2 1219 2 375 2 376 2 644 2 140 2 56 2 293 2 1124 2 1022 4 1024 2 458 2 807 6 381 2 460 2 649 6 877 2 465 4 815 2 70 6 740 4 150 2 652 2 653 2 961 2 152 2 962 2 561 3 74 2 892 2 820 2 224 2 311 3 398 2 1234 2 822 2 
862 2 932 2 815 2 
862 2 932 2 815 2 
825 2 570 4 1164 4 85 4 1052 2 88 2 319 4 752 4 1168 16 93 6 241 4 96 2 834 24 1174 6 98 4 977 4 1247 4 1072 2 908 2 1074 2 248 4 1179 2 840 4 1077 2 1078 2 1080 2 181 2 505 2 111 12 506 2 918 2 602 2 1190 2 1088 2 988 2 26 2 27 2 118 2 990 2 1197 2 698 2 1202 2 932 4 704 4 269 2 127 6 361 2 436 2 1274 2 272 4 862 2 194 2 197 2 364 2 790 2 529 4 1106 2 1214 2 1281 2 714 2 204 2 1004 4 637 4 286 2 1114 2 1289 6 372 16 209 2 289 4 1018 2 1121 2 1293 4 56 2 1223 4 212 2 951 2 1022 4 1124 2 61 2 1024 2 807 6 381 2 460 2 733 4 649 12 1300 4 465 4 815 6 70 2 1035 2 740 4 653 2 652 2 961 2 962 2 561 2 74 2 820 2 1305 4 224 2 897 2 479 2 1152 4 398 2 1234 2 1159 2 
988 2 976 2 234 2 329 2 752 2 372 2 1202 2 224 2 1074 2 1078 2 636 2 212 2 1111 2 513 2 361 2 418 2 834 4 
83 2 570 4 1164 4 85 4 1052 2 88 2 319 4 752 2 1168 16 93 6 674 2 241 4 96 2 834 24 1174 6 98 4 977 4 1247 4 1072 2 908 2 248 4 1179 2 840 4 1077 2 1078 2 1080 2 181 2 505 2 111 12 506 2 918 2 422 2 602 2 1190 2 1088 2 988 2 26 4 27 2 118 2 990 2 1197 4 698 2 1202 2 932 4 704 4 269 2 127 6 361 2 1274 2 272 4 862 2 194 2 364 2 790 2 529 4 1214 2 1215 2 1281 2 714 2 204 2 1004 4 637 4 717 2 286 2 1114 2 1289 6 372 16 209 2 289 4 1018 2 1121 2 1293 4 56 2 1223 4 212 2 951 2 1022 4 1124 2 61 2 1024 2 807 6 381 2 460 2 733 4 649 12 1300 4 465 4 553 2 815 6 70 2 1035 2 740 4 653 2 652 2 961 2 962 2 561 4 74 2 820 2 1305 4 479 2 1152 4 398 2 1234 2 1159 2 
570 4 1164 4 85 4 1052 2 88 2 319 4 752 4 1168 16 93 6 241 4 96 2 834 24 1174 6 98 4 977 4 327 2 1247 4 1072 2 908 2 1074 2 248 4 1179 2 840 4 1077 2 1078 2 1080 2 181 2 505 2 111 12 506 2 918 2 602 2 1190 2 1088 2 988 2 26 4 27 2 118 2 990 2 1197 2 698 2 1202 2 932 4 704 4 269 2 127 6 361 2 436 1 1274 2 272 4 862 2 194 2 364 2 131 2 790 2 529 4 1214 2 1215 2 1281 2 714 2 204 2 1004 4 637 4 286 2 1287 2 1114 2 1289 6 372 16 209 2 138 2 289 4 1018 2 1121 2 1293 4 56 2 1223 4 377 2 212 2 951 2 1022 4 1124 2 61 2 1024 2 807 6 381 2 460 2 733 4 649 12 1300 4 465 4 815 6 70 2 1035 2 740 4 653 2 652 2 961 2 962 2 561 2 74 2 820 2 1305 4 224 2 479 2 1152 4 398 2 1234 2 1159 2 
1164 4 232 2 1052 2 752 2 93 2 96 2 834 26 1174 6 977 4 835 2 978 2 1068 2 678 2 908 2 1178 2 1077 8 1078 2 766 2 1080 2 181 2 915 2 918 6 606 2 1088 2 1193 2 612 4 27 2 118 2 353 2 698 2 264 2 619 2 704 4 623 6 269 2 271 2 130 2 526 2 942 2 1281 2 204 2 1108 2 369 4 135 2 1114 2 209 2 372 20 1221 2 56 2 646 2 544 2 458 2 807 6 381 2 145 2 460 2 465 4 70 6 652 2 653 2 961 2 962 2 561 2 303 2 820 2 1146 2 478 2 661 2 225 2 1047 2 311 2 1234 2 1161 2 
362 2 458 2 939 2 806 2 215 2 918 2 2 2 574 2 796 2 604 3 70 2 1283 2 777 2 72 1 218 6 369 2 834 2 561 3 135 3 451 2 372 2 308 4 1077 2 311 3 229 2 
362 2 458 2 939 2 806 2 215 2 918 2 2 2 574 2 796 2 604 2 70 2 1283 2 777 2 218 6 369 2 834 2 561 2 135 2 451 2 372 2 308 4 1077 2 311 2 229 2 
362 2 458 2 939 2 806 2 215 2 918 2 2 2 574 2 796 2 604 2 70 2 1283 2 777 2 218 6 369 2 834 2 561 2 135 2 451 2 372 2 308 4 1077 2 311 2 229 2 
362 2 275 4 198 2 999 3 439 2 276 2 533 4 322 4 243 6 834 10 11 2 721 2 372 4 679 2 177 3 540 4 211 2 335 2 1077 2 337 2 731 4 458 2 846 2 599 2 772 2 773 2 690 2 1299 4 651 2 1301 2 654 2 561 3 742 4 518 2 35 2 520 6 311 3 1313 3 81 2 273 2 
362 2 275 4 458 2 846 2 198 2 599 2 999 2 253 2 276 2 439 2 772 2 773 2 1299 4 690 2 651 2 1301 2 533 4 322 4 654 2 243 6 834 10 742 4 561 2 284 2 11 2 1198 2 721 2 679 2 372 4 518 2 177 2 35 2 540 4 211 2 520 4 1077 2 335 2 1313 2 311 2 337 2 81 2 731 4 273 2 
362 2 275 4 458 2 846 2 198 2 599 2 999 2 253 2 276 2 439 2 772 2 773 2 1299 4 690 2 651 2 1301 2 533 4 322 4 654 2 243 6 834 10 742 4 561 2 284 2 11 2 1198 2 721 2 679 2 372 4 518 2 177 2 35 2 540 4 211 2 520 4 1077 2 335 2 1313 2 311 2 337 2 81 2 731 4 273 2 
362 2 275 4 458 2 846 2 198 2 599 2 999 2 253 2 276 2 439 2 772 2 773 2 1299 4 690 2 651 2 1301 2 533 4 322 4 654 2 243 6 834 10 742 4 561 2 284 2 11 2 1198 2 721 2 679 2 372 4 518 2 177 2 35 2 540 4 211 2 520 4 1077 2 335 2 1313 2 311 2 337 2 81 2 731 4 273 2 
362 2 275 4 458 2 846 2 198 2 599 2 999 2 253 4 276 2 439 2 772 2 773 2 1299 4 690 2 651 2 1301 2 533 4 322 4 654 2 243 6 834 10 742 4 561 2 284 4 11 2 1198 4 721 2 679 2 372 4 518 2 177 2 35 2 540 4 211 2 520 4 1077 2 335 2 1313 2 311 2 337 2 81 2 731 4 273 2 
873 2 1055 2 1120 2 715 2 811 2 176 2 
781 2 1120 2 950 2 1176 2 956 2 1093 2 467 2 
403 2 487 1 1132 2 20 2 320 2 1224 1 441 1 258 2 1217 2 834 10 718 2 263 1 1246 2 579 1 763 2 372 8 1070 2 908 2 1017 2 725 2 821 2 621 2 17 2 1162 2 523 2 785 2 
1221 2 
628 2 824 2 275 2 363 2 472 1 1046 2 372 1 531 2 866 4 533 2 423 2 980 6 1209 2 322 2 910 2 608 2 834 1 503 2 
824 2 628 4 275 2 363 2 1046 2 531 2 866 4 533 2 423 2 980 6 1209 2 322 2 910 2 608 4 503 4 
824 8 628 8 275 2 363 2 472 1 1046 2 372 1 531 2 866 4 533 2 423 2 980 10 1209 2 322 2 910 6 608 8 834 1 503 8 
628 2 866 2 275 2 363 2 533 2 1046 2 980 2 423 2 1209 2 322 2 608 2 531 2 503 2 
971 2 1164 6 1052 4 319 4 321 2 94 2 834 20 977 8 326 1 415 2 1073 2 1248 1 1249 2 1079 2 419 2 181 4 1084 2 344 2 1189 4 1261 2 780 4 925 2 27 4 1273 1 630 1 632 2 277 2 536 2 283 2 1006 2 1012 2 372 20 56 4 62 2 807 14 463 2 738 2 1136 2 1142 2 891 2 390 4 305 1 820 4 394 1 1150 2 399 2 82 4 
1164 20 998 4 941 2 1052 2 317 2 132 2 319 38 713 2 91 2 1213 2 442 2 1002 2 92 2 203 4 1056 4 236 2 133 2 238 2 945 2 94 2 7 4 46 2 834 46 244 2 1006 4 977 20 577 6 720 2 328 2 723 2 415 2 52 2 372 44 13 4 1177 2 1119 2 1073 2 581 2 103 2 56 2 1253 6 1295 2 1181 4 1079 2 142 2 685 2 1131 2 807 42 110 2 216 2 688 2 462 2 775 2 919 2 776 2 112 2 738 2 881 2 1136 2 510 2 149 2 1261 2 1034 2 989 2 1227 2 1145 2 27 2 1196 2 390 6 893 2 819 2 929 2 393 2 394 2 782 2 476 2 1231 4 34 2 396 2 160 2 1232 2 228 2 1049 2 898 2 399 2 1235 2 935 2 936 2 436 2 1276 2 
971 2 1164 8 998 2 1052 2 319 14 277 2 90 2 91 2 92 2 4 4 133 2 536 2 94 2 7 2 834 26 283 2 1006 2 977 10 415 2 723 2 372 26 330 4 1073 2 1249 4 584 2 55 2 56 2 1079 2 419 2 181 4 1028 4 109 2 807 20 344 2 463 2 738 2 1189 6 1136 2 813 2 149 2 1142 2 1261 2 1034 2 780 6 219 2 891 2 470 2 925 2 27 2 390 6 893 2 820 4 394 2 1231 2 1235 2 82 2 1276 2 
1164 14 998 6 1052 2 632 2 319 14 713 4 442 2 92 2 236 2 94 2 7 6 46 4 834 28 244 2 1006 2 1010 2 577 6 977 14 326 2 1012 10 1013 2 328 4 415 2 372 26 1073 2 14 2 1248 2 103 2 56 2 62 2 1079 2 1126 2 181 10 807 38 1084 10 738 2 1136 2 1261 2 1087 4 1194 2 989 4 27 2 615 4 390 8 893 2 305 6 820 10 394 2 1309 2 782 2 1231 6 310 2 227 2 228 4 1150 2 1049 2 1235 2 935 2 436 2 936 4 1273 2 1276 2 
627 2 

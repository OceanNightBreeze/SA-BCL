#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V ERROR java.lang.NullPointerException 338 210 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 269 371 517 327 157 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 338 210 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 338 210 
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 338 210 
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 338 210 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 338 210 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 338 210 204 97 99 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 550 550 550 314 43 345 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.Quant:eltsEqual([II)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName:hashCode()I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:lte(II)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaCharStream:FillBuff()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:ne(II)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:eq(DD)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.Intern:intern([I)[I
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:intersection([I[I)[I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.ModBitTracker:num_vars()I
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap:processQueue()V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.MathMDE:pow_fast(II)I
daikon.Quant:eltwiseLT([I)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:union([I[I)[I
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:subsetOf([F[F)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:lexLT([I[I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaCharStream:backup(I)V
daikon.Quant:eq(II)Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:eltwiseGTE([I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:eq(JJ)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:lexGTE([I[I)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I | OPERATOR | 52438 | != -> >=
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:gte(II)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice0:arity()I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:gt(II)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:lexLTE([I[I)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String; | RETURN | 54759 | return null
daikon.Quant:eltwiseLTE([I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:concat([I[I)[I
utilMDE.WeakHasherMap:size()I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:memberOf(F[D)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_ntk()I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:noDups([I)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V | ASSIGN | 10801 | = null
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eq(FF)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:memberOf(S[S)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:lexGT([I[I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Intern:intern([D)[D
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern:internSubsequence([JII)[J
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.Quant:slice([III)[I
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:lt(II)Z
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.ValueTuple:size()I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.Intern:numIntArrays()I
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:memberOf(I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:eltsGtIndex([I)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.Quant:isReverse([I[I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern:intern([J)[J
daikon.Quant:memberOf(D[F)Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.ArraysMDE:element_range([I)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.ArraysMDE:sum([D)D
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.MathMDE:gcd(II)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:dimensions()I
daikon.Quant:eltsGTE([II)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.ArraysMDE:max([I)I
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE:pow(II)I
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaCharStream:readChar()C
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:Ppt()V
daikon.Quant:setDiff([I[I)[I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.ArraysMDE:min([I)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
372 2 466 2 386 2 431 2 35 2 518 2 445 2 535 4 264 2 
422 2 252 2 443 6 146 2 331 6 47 2 182 2 488 2 409 2 206 2 491 6 
0 2 386 2 436 2 2 6 119 6 519 2 161 6 264 2 447 4 27 4 267 6 356 2 544 2 
361 4 195 10 546 12 304 26 120 6 274 10 486 8 8 2 12 10 286 4 525 2 55 2 493 10 386 6 389 2 61 2 391 8 293 4 25 16 181 4 264 6 498 8 218 30 501 2 150 8 470 6 395 2 570 16 571 16 38 10 
271 4 524 6 
441 2 
195 2 546 2 304 4 117 2 120 2 274 2 449 2 310 2 12 2 554 2 413 2 286 2 246 2 416 2 493 4 391 2 321 2 25 2 218 6 469 2 570 2 571 2 38 2 
195 4 137 4 60 2 546 5 304 12 482 2 142 6 274 4 181 2 25 8 218 14 89 4 570 8 12 4 571 8 38 4 192 6 
115 4 44 4 118 62 481 4 520 2 234 2 237 2 201 4 88 4 202 2 275 2 487 2 279 4 281 2 205 2 379 2 557 4 451 2 489 4 383 2 167 6 53 8 339 2 249 2 96 4 462 2 22 4 102 4 144 14 322 4 496 10 350 2 538 2 185 2 569 10 502 2 396 2 73 4 110 2 77 2 
441 2 549 2 368 2 448 2 343 2 58 2 213 2 141 2 63 2 467 2 
360 2 512 2 79 2 364 2 516 2 82 2 234 2 372 2 450 2 382 2 455 2 386 4 96 4 254 2 533 4 264 4 106 2 545 2 479 4 40 2 481 2 551 2 45 2 122 2 404 2 278 2 128 2 50 2 490 2 135 2 53 2 492 2 419 2 562 2 564 2 347 2 62 4 566 2 501 2 503 2 572 2 71 2 222 2 574 2 
195 16 1 2 304 48 546 22 42 8 440 2 120 4 274 16 446 6 49 4 163 6 89 4 12 16 284 2 286 2 336 2 55 2 493 6 386 4 137 4 461 6 460 4 391 18 142 6 180 4 349 2 25 32 264 4 352 4 218 54 150 6 470 4 393 4 570 32 571 32 38 16 575 2 192 6 359 6 
185 2 167 2 53 2 
510 2 480 2 98 2 139 2 390 10 123 2 402 2 429 22 127 2 472 2 355 2 169 2 574 2 76 2 
78 4 437 1 80 4 13 2 386 4 100 2 23 1 263 2 264 4 30 2 196 2 328 2 484 2 559 4 285 2 338 2 210 2 211 2 140 5 64 2 151 2 70 2 505 2 72 2 508 2 
148 2 
386 2 214 2 
386 4 306 2 258 2 
269 2 193 2 327 2 157 2 517 2 400 2 235 2 371 2 87 2 132 2 410 6 166 2 453 2 17 2 319 2 145 2 497 2 323 6 392 2 540 6 473 2 542 2 
362 2 57 1 216 2 236 2 
459 2 236 2 
361 2 230 2 177 2 10 2 452 2 53 2 236 2 
291 2 452 2 236 2 
33 2 452 2 236 2 
362 2 90 2 456 2 
452 2 236 2 
9 2 90 2 
522 2 236 2 
362 2 468 2 90 2 
362 2 282 2 227 2 
362 2 539 2 288 2 
362 2 56 2 81 2 
362 2 414 2 238 2 
90 2 526 2 
236 2 217 2 
203 2 282 2 
288 2 300 2 
81 2 103 2 
240 2 414 2 
176 2 90 2 
521 2 414 2 
81 2 454 2 
288 2 458 2 
282 2 233 2 
362 2 468 2 90 2 19 2 
362 2 468 2 90 2 19 2 308 2 
362 2 90 2 5 2 
362 2 90 2 354 2 
158 2 255 2 424 2 297 2 
113 2 340 2 341 4 478 2 344 2 232 2 346 2 105 4 428 2 429 6 242 2 471 2 394 2 67 2 324 2 298 2 224 2 226 2 
362 2 16 2 
309 2 10 2 259 2 53 2 
230 2 309 2 219 2 10 2 259 2 53 2 
361 2 560 2 10 2 452 2 53 2 236 2 
419 2 332 2 
361 2 10 2 397 2 53 2 
81 2 189 2 
500 2 414 2 
220 2 282 2 
288 2 187 2 
229 2 288 2 414 2 
288 2 414 2 294 2 
288 2 365 2 414 2 
288 2 265 2 414 2 
124 2 86 2 243 6 10 2 337 2 53 2 31 2 107 6 
90 2 91 2 
152 2 
78 4 80 4 196 2 328 2 484 2 13 2 559 4 285 2 338 2 386 4 211 2 210 2 140 4 100 2 263 2 264 4 64 2 151 2 505 2 70 2 72 2 508 2 357 2 
78 4 437 2 80 4 13 2 386 4 100 2 23 2 263 2 264 4 196 2 328 2 484 2 559 4 285 2 338 2 210 2 211 2 140 6 64 2 151 2 70 2 505 2 72 2 508 2 357 2 
515 2 358 2 385 2 
515 2 358 2 385 2 
78 4 80 4 196 2 328 2 484 2 13 2 559 4 285 2 338 2 386 4 211 2 210 2 140 4 100 2 263 2 264 4 64 2 151 2 505 2 70 2 72 2 508 2 357 2 
78 4 80 4 196 2 328 2 484 2 13 2 559 4 285 2 338 2 386 4 211 2 210 2 140 4 100 2 263 2 264 4 64 2 151 2 505 2 70 2 72 2 508 2 357 2 
78 4 437 1 80 4 196 2 328 2 484 2 13 2 559 4 285 2 338 2 386 4 211 2 210 2 140 5 100 2 23 1 263 2 264 4 64 2 151 2 505 2 70 2 72 2 508 2 357 2 
78 4 80 4 366 2 13 2 95 2 386 8 97 2 99 2 100 2 263 2 264 4 186 2 196 2 197 2 328 2 484 2 204 2 131 2 559 4 285 2 338 2 138 2 211 2 210 2 140 4 563 2 64 2 568 2 151 2 353 2 505 2 70 2 72 2 508 2 
301 2 250 2 290 2 212 2 160 2 287 2 
184 2 303 2 241 2 529 2 32 2 260 2 287 2 
514 1 547 2 439 2 4 2 399 2 520 1 202 1 125 2 377 2 553 1 415 2 170 2 387 2 386 10 425 2 256 2 351 1 264 8 183 2 295 2 28 2 506 2 507 2 225 2 74 2 326 2 
545 2 195 6 1 1 304 12 546 1 42 2 274 6 45 2 199 2 405 2 552 2 12 6 244 2 94 2 386 6 137 2 460 2 461 4 391 1 264 6 25 6 218 15 150 4 470 2 570 6 571 6 266 2 474 2 38 6 192 4 
302 1 386 1 438 2 495 2 483 4 348 2 264 1 499 2 296 2 239 2 333 7 378 2 335 2 433 2 134 2 51 2 311 2 283 2 
438 2 495 2 483 4 348 2 499 2 296 2 239 2 333 6 378 2 433 2 335 4 51 2 134 4 311 2 283 4 
302 1 386 1 438 2 495 2 483 4 348 2 264 1 499 2 296 2 239 2 333 10 378 6 433 8 335 8 51 2 134 8 311 2 283 8 
438 2 495 2 483 2 348 2 499 2 296 2 239 2 333 2 335 2 51 2 134 2 311 2 283 2 
437 27 159 2 442 2 162 16 6 4 307 2 164 4 165 10 14 14 312 4 314 2 171 4 173 2 172 10 174 6 457 4 316 8 318 10 463 4 179 4 320 24 23 25 465 4 29 4 188 2 325 4 36 8 475 4 476 4 190 4 191 4 477 4 39 2 43 2 198 4 329 2 48 4 334 2 52 2 207 2 342 2 211 2 345 2 215 8 68 24 221 4 505 6 508 6 75 2 509 2 78 44 511 24 80 36 83 4 369 8 370 8 376 4 374 10 375 4 381 4 380 4 92 4 247 2 248 4 527 4 386 78 388 4 251 4 528 32 253 4 531 4 530 11 257 8 261 8 104 10 534 4 264 70 536 4 109 10 543 4 268 2 116 4 548 4 398 4 550 16 121 4 401 4 277 7 280 2 407 2 129 16 408 16 411 4 558 4 136 4 417 4 420 2 561 1 421 4 423 4 140 101 292 6 565 6 567 2 147 10 426 4 430 30 154 2 573 8 156 2 
78 14 437 12 159 2 3 2 80 14 84 10 374 2 165 6 381 2 523 2 92 4 314 2 384 2 172 6 386 28 388 2 174 2 457 2 253 4 530 2 257 6 23 12 320 8 264 26 24 2 536 2 34 2 190 4 109 6 543 4 270 2 116 2 43 2 398 4 550 14 485 2 401 4 407 2 556 2 207 2 418 2 420 2 421 2 209 2 211 2 59 2 345 2 140 40 292 2 565 4 567 2 426 2 430 6 505 2 221 4 154 2 508 2 509 2 156 2 
435 26 437 42 159 4 3 2 442 2 7 26 164 6 165 12 14 12 312 6 314 2 15 2 315 4 172 12 457 2 174 18 317 8 316 12 20 12 463 6 179 4 464 8 23 42 320 66 465 6 24 2 29 4 188 2 475 4 190 6 191 4 477 4 194 26 41 10 43 2 485 6 330 10 54 4 211 8 59 4 345 2 494 2 68 48 504 2 221 4 505 14 223 2 508 14 509 2 78 74 228 12 511 50 513 2 80 62 83 6 84 18 367 2 369 24 375 6 374 14 381 2 380 6 523 2 92 6 384 2 245 26 247 2 248 4 527 6 386 116 388 6 251 6 253 6 531 6 530 12 257 10 532 4 261 24 262 8 534 6 264 104 536 6 108 2 541 6 109 12 543 6 268 2 112 2 270 2 116 2 272 8 548 4 273 4 398 6 550 14 121 6 401 6 277 1 276 2 403 10 406 2 280 2 407 4 408 24 556 7 133 2 411 4 558 4 136 4 417 6 418 2 420 4 421 6 423 6 140 170 292 6 565 8 567 1 426 6 430 28 299 2 155 2 434 6 156 4 
78 20 231 2 437 6 363 2 305 6 159 2 80 20 444 2 85 2 307 2 373 2 374 2 165 4 11 2 92 2 313 2 168 4 314 2 93 2 173 2 172 4 457 2 174 2 388 2 175 2 386 46 317 2 18 2 253 2 530 2 178 2 318 2 21 2 101 2 464 2 23 6 320 6 104 2 26 2 264 44 536 2 537 2 34 2 190 2 37 4 109 4 543 2 111 2 114 2 41 2 272 2 43 2 273 2 398 2 550 36 46 2 330 2 200 2 401 2 403 2 126 2 130 4 555 2 412 2 207 2 54 2 420 2 208 2 421 2 209 2 289 2 211 2 345 2 140 48 292 2 565 6 143 2 567 2 426 2 147 2 427 2 149 2 65 2 153 2 69 4 505 2 432 2 154 2 508 2 509 2 156 2 
66 2 

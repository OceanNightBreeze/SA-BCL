#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 471 682 1366 915 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.Debug:logDetail()Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_samples()I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.JavaParser:jj_2_10(I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.Invariant:logDetail()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_75()Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.Intern:internSubsequence([III)[I
daikon.Quant:setDiff([I[I)[I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.ModBitTracker:split(I)I
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.Intern:numIntArrays()I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quant:eltsGTE([II)Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_162()Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:lt(II)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_17(I)Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_3R_96()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.MathMDE:mod_positive(JJ)J
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:hashCode()I
daikon.Quant:noDups([I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParser:jj_3R_89()Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_35(I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.JavaParser:jj_3_35()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:eq(JJ)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd_differences([I)I
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_117()Z
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.WeakHasherMap:size()I
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:gte(II)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:pairwiseEqual([I[I)Z
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.Quant:subsetOf([D[F)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3_14()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_27()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:setEqual([I[I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.diff.Node:Node()V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_73()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParser:jj_3_19()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_107()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_54()Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.Quant:subsetOf([D[D)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3_21()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_109()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_2_25(I)Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
jtb.JavaParser:jj_2_36(I)Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.Quant:subsetOf([F[D)Z
daikon.ProglangType:baseIsScalar()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_72()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:sameLength([I[I)Z
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_3R_70()Z
daikon.Quant:lexLTE([I[I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_17()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:jj_2_18(I)Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice1:arity()I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:new_ppt()V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.inv.Invariant:getConfidence()D
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 7816 | 80 -> 0
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_134()Z
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:intersection([I[I)[I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_80()Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_100()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_133()Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaCharStream:getEndColumn()I
daikon.inv.Invariant:logOn()Z
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_97()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.PptSlice0:arity()I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:ne(II)Z
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:eltsNotEqual([II)Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfo:isPointer()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3_25()Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfo:relate_var()V
jtb.JavaParser:jj_3R_62()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([S[S)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap:processQueue()V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaCharStream:getBeginColumn()I
utilMDE.Intern:intern([J)[J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:memberOf(F[D)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:jj_3R_76()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:element_range([I)I
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:jj_3_10()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:lte(II)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_148()Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.MathMDE:negate(I)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_99()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfo:isDerived()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:concat([I[I)[I
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(S[S)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_123()Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
jtb.JavaParser:jj_3R_47()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.ValueTuple:isMissing(I)Z
jtb.JavaParser:jj_3_18()Z
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.FormatTestCase:passes()Z
jtb.JavaParser:jj_3R_122()Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:indexOf(Ljava.lang.String;)I
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_101()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:size()I
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_22()Z
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.PptSlice1:num_samples()I
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.Ppt:Ppt()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_52()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:eq(DD)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow(II)I
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.MathMDE:sign(I)I
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([B[I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaCharStream:ReadByte()C
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:union([I[I)[I
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:eq(FF)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_74()Z
daikon.Quant:eltwiseLT([I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_119()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:isScalar()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.Invariant:justified()Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:jj_3R_105()Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:jj_3R_51()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:jj_3R_106()Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.Debug:logOn()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_124()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.ValueSet:ValueSet(I)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptSlice2:arity()I
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_115()Z
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z | ASSIGN | 2307 | = null
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoAux:hashCode()I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:jj_3R_60()Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_108()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_103()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParser:jj_3R_57()Z
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:jj_3R_61()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_53()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_118()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:jj_2_5(I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_104()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:jj_3R_163()Z
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quantify.Constant:Constant(I)V
daikon.VarInfo:isPrestate()Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaCharStream:BeginToken()C
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_77()Z
utilMDE.MathMDE:gcd([I)I
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_3R_67()Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_5()Z
jtb.JavaCharStream:getEndLine()I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_126()Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([I)[I
jtb.JavaParser:jj_3_12()Z
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.ProglangType:isFloat()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quant:gt(II)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.ProglangType:dimensions()I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:jj_2_1(I)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:jj_3R_50()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.ProglangType:isArray()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParser:jj_3R_56()Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:jj_3_20()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quantify.Length:esc_name()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.Quant:pairwiseSquare([I[I)Z
daikon.ProglangType:isPseudoArray()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_36()Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_125()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:num_sets()I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:lexLT([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:isIntegral()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.VarInfo:isIOAArray()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.VarInfo:name()Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:jj_3_4()Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_28()Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
858 2 251 2 777 2 186 2 846 4 742 2 1239 2 1109 2 596 2 
1002 2 239 6 369 2 1215 2 398 2 782 6 1199 2 296 6 555 2 567 2 1181 2 
785 6 709 4 1109 2 596 2 197 6 129 6 1212 2 330 4 1272 2 893 2 209 6 719 2 48 2 
1336 8 355 8 1194 6 60 2 928 2 1109 6 588 2 977 4 1035 8 1291 10 163 16 1056 4 202 4 1076 4 365 8 691 2 822 12 291 2 1233 29 666 6 618 2 596 6 827 10 746 16 106 16 1332 10 993 2 85 26 653 10 1159 10 
32 6 247 4 
757 2 
213 2 738 4 252 2 1109 4 1003 2 688 2 220 2 1148 2 690 2 691 2 959 2 222 2 391 2 142 2 596 4 184 2 102 2 598 2 1081 2 701 2 568 2 920 2 13 2 1305 2 189 2 807 2 403 4 656 2 233 2 359 2 1133 4 815 2 411 4 537 2 455 2 540 2 1230 2 617 2 989 2 29 2 670 2 732 2 419 2 777 2 
355 6 1194 4 1277 4 551 2 928 2 1109 4 1340 4 977 2 714 2 1074 6 45 2 1291 6 199 6 163 32 365 18 6 6 1371 2 1372 2 822 22 770 2 1233 54 666 4 542 8 519 4 596 4 827 16 746 32 992 6 700 6 622 4 1332 16 106 32 1158 6 85 48 653 16 469 4 132 4 707 4 1159 16 
598 2 427 2 1244 2 
353 10 152 2 503 2 74 2 973 2 114 2 975 2 450 22 156 2 1132 2 648 2 885 2 913 2 455 2 
1192 2 1194 2 42 2 977 2 1291 4 1010 2 163 2 365 2 822 2 1233 6 827 2 746 2 1376 2 1332 2 106 2 804 2 248 2 84 2 85 4 653 2 830 2 866 2 1159 2 
6 6 1229 2 822 4 1340 4 1233 16 827 4 746 8 622 4 1074 6 1332 4 106 8 85 12 653 4 164 2 163 8 1076 2 1159 4 
172 4 924 2 678 2 870 10 304 2 383 62 1244 6 1133 4 717 4 908 2 1137 2 690 4 257 4 574 4 427 2 1170 2 240 2 500 2 201 2 744 2 843 2 49 4 224 4 72 2 179 2 1231 2 576 4 564 14 29 2 963 2 1301 4 507 4 80 2 598 8 148 2 625 2 33 4 921 2 399 4 1033 10 
18 2 757 2 978 2 792 2 531 2 982 2 392 2 901 2 12 2 736 2 
251 2 512 2 681 2 175 2 1197 2 789 8 1109 34 1284 2 94 8 3 2 1290 1 258 2 877 2 956 2 1115 3 960 2 265 2 180 2 1296 2 1204 2 1205 2 182 2 8 2 596 32 183 3 965 2 802 2 273 6 350 2 522 2 351 1 441 16 275 2 111 2 970 2 1219 4 602 2 1050 3 1049 24 528 2 446 3 113 4 886 6 1312 2 357 2 887 2 1130 2 195 2 711 2 449 2 980 2 607 2 1315 2 21 2 22 4 23 3 1055 2 200 2 1320 2 897 1 367 1 205 6 721 1 987 2 126 3 988 2 294 2 1234 16 727 2 1326 2 1325 16 1142 1 547 2 299 2 1063 3 734 1 1145 1 131 2 1237 32 1069 4 629 2 379 2 1070 3 998 2 134 3 215 2 837 2 381 6 216 2 740 2 907 5 1005 2 1006 4 385 2 221 8 389 2 223 1 640 2 847 2 1349 12 641 2 1154 2 481 1 849 2 1013 2 745 1 566 2 316 1 1015 2 150 2 852 4 652 2 1016 1 1083 2 923 1 400 2 228 3 323 16 229 2 1163 2 1164 2 756 2 1361 2 1088 1 406 32 408 3 572 2 231 1 1264 2 326 2 327 2 66 2 1365 24 158 4 1094 2 333 2 1027 2 1096 2 243 2 938 2 73 2 775 2 945 4 865 3 1031 2 421 2 1105 2 
514 2 1109 2 
593 2 1109 4 453 2 
1238 2 
1 2 679 8 174 2 869 2 1195 6 173 2 1196 48 341 2 873 2 683 2 515 2 343 8 345 4 5 2 1037 2 1040 2 1041 4 692 6 7 14 1042 4 347 2 698 2 348 2 185 2 11 4 1044 2 883 4 188 8 521 2 884 2 1214 4 1216 6 1217 2 526 4 192 2 1218 4 17 2 1046 2 1048 2 194 2 1052 2 888 4 20 24 534 2 361 2 25 20 1226 2 896 2 720 2 368 2 900 10 1059 2 723 2 206 2 543 4 726 2 370 36 729 2 545 48 1062 4 1064 4 375 2 1065 2 34 16 377 2 905 2 550 4 906 2 1072 4 1241 26 382 20 739 6 41 2 554 4 1243 4 741 8 556 2 43 16 1075 4 743 2 387 2 557 2 910 2 912 2 47 2 50 2 560 22 225 2 226 22 52 2 1251 2 749 2 917 4 751 2 1257 2 1084 2 57 2 1259 2 1085 8 1260 2 402 2 407 2 1089 4 758 2 409 4 232 8 760 2 65 2 234 2 762 2 237 216 933 146 1092 2 575 2 414 48 1098 4 415 42 75 16 76 2 578 2 1100 4 941 2 772 2 77 48 1101 26 944 2 420 2 245 2 1103 2 1104 2 1271 2 87 2 786 14 788 8 1107 8 584 2 949 2 1279 2 90 4 91 2 586 4 1280 2 587 4 1282 4 425 2 1110 4 791 4 93 2 590 2 254 2 1289 2 1112 2 259 2 428 2 795 36 958 8 798 2 594 48 267 2 100 2 101 4 268 2 1300 2 437 2 1119 48 1302 146 801 2 271 2 109 2 803 2 272 2 439 4 1303 2 1304 2 806 8 1126 22 276 2 600 6 444 2 1307 48 971 2 972 2 810 2 279 2 1311 2 605 2 447 4 448 4 1134 2 813 2 979 2 1316 2 122 2 981 4 1139 48 612 2 983 2 984 2 123 2 458 2 1322 4 985 2 288 4 819 8 1140 2 820 2 615 2 986 2 823 2 824 2 462 2 1327 2 825 14 826 44 1328 2 1329 2 1143 2 298 2 466 2 628 2 470 2 831 2 996 2 631 2 632 48 1339 4 839 2 840 2 1007 24 309 2 140 24 637 2 478 2 844 2 639 2 313 2 642 2 143 2 314 2 1350 2 1351 2 147 6 484 2 1353 2 1354 2 322 8 1018 10 488 2 325 2 657 4 153 2 658 2 857 2 659 2 1022 22 660 2 1363 146 332 2 160 2 1169 2 161 2 502 2 166 10 1028 48 1174 2 504 2 665 48 667 28 1178 2 1179 48 861 48 1183 2 509 4 338 2 1189 2 1188 2 1032 2 1380 36 170 2 1191 2 
929 2 1252 1 1255 2 473 2 
465 2 1255 2 
598 2 1253 2 1255 2 1157 2 571 2 202 2 833 2 
1255 2 336 2 1157 2 
1116 2 1255 2 1157 2 
270 2 609 2 473 2 
1255 2 1157 2 
236 2 609 2 
1255 2 619 2 
609 2 473 2 297 2 
955 2 287 2 473 2 
1200 2 1245 2 473 2 
724 2 636 2 473 2 
98 2 116 2 473 2 
609 2 410 2 
1255 2 932 2 
287 2 950 2 
0 2 1200 2 
443 2 724 2 
1342 2 116 2 
609 2 1335 2 
1122 2 116 2 
779 2 724 2 
1200 2 563 2 
674 2 287 2 
609 2 146 2 473 2 297 2 
609 2 110 2 146 2 473 2 297 2 
680 2 609 2 473 2 
1267 2 609 2 473 2 
401 2 269 2 548 2 1146 2 
598 2 1253 2 1054 2 771 2 
598 2 1253 2 935 2 1054 2 771 2 833 2 
598 2 1253 2 1255 2 1157 2 61 2 202 2 
159 2 537 2 
39 2 598 2 1253 2 202 2 
724 2 1021 2 
95 2 116 2 
638 2 287 2 
685 2 1200 2 
1308 2 1200 2 116 2 
1200 2 479 2 116 2 
581 2 1200 2 116 2 
1200 2 1025 2 116 2 
787 2 89 2 307 6 1113 2 580 2 1030 6 598 2 1253 2 
609 2 2 2 
412 2 898 4 936 4 214 2 937 2 1071 2 1348 2 927 2 305 2 799 2 773 2 671 2 450 6 646 2 994 2 675 2 440 2 212 2 
947 2 473 2 
847 2 
251 2 88 2 1109 26 589 2 877 2 433 2 182 2 8 2 596 26 518 2 349 2 965 6 273 4 525 4 352 2 1219 4 602 2 528 2 604 2 113 2 886 6 1130 2 195 2 1315 2 607 2 22 2 1055 2 121 2 200 2 1320 2 205 2 987 2 988 2 1325 6 727 2 208 2 1237 4 629 2 1069 4 834 2 998 2 838 2 837 2 381 2 1006 2 1005 2 385 2 221 2 223 2 640 2 1349 8 641 2 1154 2 316 2 150 4 652 2 1083 2 400 2 756 2 406 6 759 2 572 2 326 2 1090 2 66 2 1024 2 158 4 67 2 1095 2 1096 2 73 2 945 4 1377 4 1105 2 
251 2 88 2 681 2 1109 26 589 2 877 2 433 2 182 2 8 2 596 26 518 2 965 6 273 6 525 4 352 2 111 2 1219 4 602 2 528 2 604 2 113 2 886 6 1130 2 195 2 1315 2 607 2 118 2 22 2 1055 2 121 2 200 2 1320 2 205 2 987 2 988 2 1325 6 727 2 208 2 1237 4 629 2 1069 4 834 2 998 2 837 2 381 2 1006 2 1005 2 385 2 221 2 223 2 640 2 1349 8 641 2 1154 2 316 2 150 4 652 2 1083 2 56 2 400 2 756 2 406 6 759 2 572 2 326 2 1090 2 66 2 158 4 333 2 67 2 1095 2 766 2 1096 2 73 2 945 4 1377 4 1105 2 
498 2 
1213 2 69 2 
1069 2 1002 2 1109 12 340 4 1199 2 555 4 1285 8 139 2 256 2 1009 2 1039 2 558 2 1011 2 346 4 1078 2 1154 2 643 2 393 4 1206 2 182 2 596 6 567 4 747 2 570 2 652 2 485 2 1083 2 524 2 487 10 442 2 354 2 708 4 59 2 1219 2 602 2 1020 2 405 2 886 4 235 2 931 4 1315 2 24 2 239 6 362 4 1224 2 535 8 1096 2 1173 2 722 2 293 2 728 2 296 6 31 2 624 2 373 2 735 2 627 2 782 6 1236 2 171 2 
1069 2 1002 2 1109 12 340 4 1199 2 555 4 1285 8 139 2 256 2 1009 2 1039 2 558 2 346 4 1078 2 1154 2 643 2 393 4 1206 2 182 2 596 6 567 4 747 2 570 2 1082 2 652 2 485 2 398 2 1083 2 524 2 487 10 442 2 354 2 708 4 59 2 602 2 1219 2 1360 2 1020 2 405 2 886 4 491 4 235 2 931 4 1315 2 24 2 239 6 362 4 1224 2 535 8 1096 2 1173 2 722 2 728 2 296 8 31 2 624 2 373 2 735 2 627 2 782 8 1236 2 171 2 
1173 2 59 2 346 4 405 2 643 2 340 4 296 2 555 2 31 2 567 2 931 2 624 2 373 2 256 2 485 2 239 2 1039 2 171 2 
1069 2 1002 2 1109 12 340 4 555 4 1285 4 139 2 256 2 1009 2 1039 2 558 2 1011 2 346 4 1078 2 1154 2 643 2 393 4 1206 2 182 2 596 6 567 4 747 2 570 2 652 2 485 2 398 2 1083 2 524 2 487 6 442 2 354 2 708 4 59 2 1219 2 602 2 1020 2 405 2 886 4 235 2 931 4 1315 2 24 2 239 4 362 4 1224 2 535 4 1096 2 1173 2 722 2 293 2 728 2 296 6 31 2 624 2 373 2 735 2 627 2 782 6 1236 2 171 2 
1069 2 1002 2 1109 12 340 4 555 4 1285 4 139 2 256 2 1009 2 1039 2 558 2 1011 2 346 4 1078 2 1154 2 643 2 393 4 1206 2 182 2 596 6 567 4 747 2 570 2 652 2 485 2 1215 2 1083 2 524 2 487 6 442 2 354 2 708 4 59 2 1219 2 602 2 1020 2 405 2 886 4 235 2 931 4 1315 2 24 2 239 6 362 4 1224 2 535 4 1096 2 1173 2 722 2 293 2 728 2 296 4 31 2 624 2 373 2 735 2 627 2 782 6 1236 2 171 2 
1069 2 1002 2 1109 12 340 4 1199 2 555 4 1285 4 139 2 256 2 1009 2 1039 2 558 2 1011 2 346 4 1078 2 1154 2 643 2 393 4 1206 2 182 2 596 6 567 4 747 2 570 2 652 2 485 2 1083 2 524 2 487 6 442 2 354 2 708 4 59 2 1219 2 602 2 1020 2 405 2 886 4 235 2 931 4 1315 2 24 2 239 6 362 4 1224 2 535 8 1096 2 1173 2 722 2 293 2 728 2 296 6 31 2 624 2 373 2 735 2 627 2 782 6 1236 2 171 2 
1069 2 1002 2 1109 12 340 4 1199 2 555 4 1285 8 139 2 256 2 1009 2 1039 2 558 2 1011 2 346 4 1078 2 1154 2 643 2 393 4 1206 2 182 2 596 6 567 4 747 2 570 2 652 2 485 2 1215 2 1083 2 524 2 487 10 442 2 354 2 708 4 59 2 1219 2 602 2 1020 2 405 2 886 4 235 2 931 4 1315 2 24 2 239 8 362 4 1224 2 535 8 1096 2 1173 2 722 2 293 2 728 2 296 6 31 2 624 2 373 2 735 2 627 2 782 8 1236 2 171 2 
1069 2 1002 2 1109 12 340 4 1199 2 555 4 1285 8 139 2 256 2 1009 2 1039 2 558 2 1011 2 346 4 1078 2 1154 2 643 2 393 4 1206 2 182 2 596 6 567 4 747 2 570 2 652 2 485 2 1083 2 524 2 487 10 442 2 354 2 708 4 59 2 1219 2 602 2 1020 2 405 2 886 4 235 2 931 4 1315 2 24 2 239 6 362 4 1224 2 535 8 1096 2 1173 2 722 2 293 2 728 2 296 6 31 2 624 2 373 2 735 2 627 2 782 6 1236 2 171 2 
681 2 514 6 340 4 872 2 875 6 877 2 1039 2 1203 2 346 4 182 2 1206 2 8 2 518 4 9 2 699 6 1215 4 524 2 525 4 708 6 354 2 1219 4 528 2 886 6 713 2 530 2 22 2 1055 2 718 2 362 4 24 2 1224 2 535 2 538 6 205 2 539 2 722 2 728 2 31 2 373 2 208 2 374 1 735 2 211 2 1236 4 1067 1 1237 2 1238 6 1069 4 1073 2 381 2 1242 6 555 4 44 2 385 2 558 2 221 2 1078 2 393 8 394 6 567 4 747 2 748 2 570 4 1083 2 1086 2 58 6 59 2 756 2 405 2 406 8 62 1 759 2 235 2 66 2 931 4 239 8 67 2 1096 2 1099 6 577 6 945 4 1105 2 782 12 1274 2 251 2 1109 46 951 2 426 2 256 2 793 1 1114 2 961 6 99 2 1294 2 595 10 596 24 965 6 966 1 273 6 968 4 442 2 1125 2 601 2 602 2 603 2 113 2 1130 2 1131 2 606 1 1315 2 607 2 453 6 814 1 817 2 1320 2 1319 2 616 7 988 12 293 2 292 2 461 8 296 4 1325 6 624 2 626 1 627 2 467 2 1334 6 629 2 998 2 1002 4 137 2 634 2 1006 2 139 2 1009 2 1349 4 641 2 1154 2 643 2 851 2 1352 4 652 2 485 2 487 2 1019 6 1020 2 324 2 856 1 489 2 326 2 661 6 1364 7 158 4 333 2 1173 2 664 6 1180 2 171 2 
1274 2 251 2 681 2 514 6 1109 48 340 4 1199 4 951 2 872 2 426 2 875 6 256 2 877 2 1039 2 1114 2 1203 2 961 6 99 2 1294 2 346 4 595 10 1206 2 182 2 8 2 518 4 596 26 9 2 699 6 965 6 273 6 525 4 524 2 968 4 1306 2 1125 2 442 2 601 2 354 2 708 6 1219 4 602 2 603 2 528 2 113 4 886 6 1130 2 280 2 1131 2 713 2 530 2 607 2 1315 2 22 4 718 2 1055 2 24 2 362 4 453 6 817 2 535 6 1224 2 1319 2 1320 2 538 6 205 2 539 2 722 2 988 12 292 2 293 2 461 8 1325 6 296 8 728 2 31 2 624 2 373 2 208 2 735 2 467 2 627 2 211 2 1236 4 1334 6 1237 2 1238 6 629 2 1069 4 998 2 1073 2 381 2 1002 4 137 2 634 2 1242 6 555 4 1006 4 44 2 139 2 385 2 1009 2 558 2 221 2 1349 8 641 2 1078 2 643 2 1154 2 393 8 394 6 567 4 851 2 1352 4 747 2 748 2 150 2 570 4 652 2 485 2 1083 2 487 2 58 6 1086 2 59 2 1019 6 1020 2 756 2 324 2 405 2 489 2 406 8 759 2 326 2 661 6 235 2 931 4 66 2 158 4 239 8 67 2 333 2 1173 2 1096 2 664 6 1099 6 577 6 1180 2 945 4 1105 2 782 12 171 2 
1274 2 251 2 681 2 514 6 1109 48 340 4 1199 4 951 2 872 2 1285 4 426 2 875 6 256 2 877 2 1039 2 1114 2 1203 2 961 6 99 2 1294 2 346 4 595 10 1206 2 182 2 8 2 518 4 596 26 9 2 699 6 965 6 273 6 525 4 524 2 968 4 1306 2 1125 2 442 2 601 2 354 2 708 6 1219 4 602 2 603 2 528 2 113 4 886 6 1130 2 280 2 1131 2 713 2 530 2 607 2 1315 2 22 4 718 2 1055 2 24 2 362 4 453 6 817 2 535 6 1224 2 1319 2 1320 2 538 6 205 2 539 2 722 2 988 12 292 2 293 2 461 8 1325 6 296 8 728 2 31 2 624 2 373 2 208 2 735 2 467 2 627 2 211 2 1236 4 1334 6 1237 2 1238 6 629 2 1069 4 998 2 1073 2 381 2 1002 4 137 2 634 2 1242 6 555 4 1006 4 44 2 139 2 385 2 1009 2 558 2 221 2 1349 8 641 2 1078 2 643 2 1154 2 393 8 394 6 567 4 851 2 1352 4 747 2 748 2 150 2 570 4 652 2 485 2 1083 2 487 6 58 6 1086 2 59 2 1019 6 1020 2 756 2 324 2 405 2 489 2 406 8 759 2 326 2 661 6 235 2 931 4 66 2 158 4 239 8 67 2 333 2 1173 2 1096 2 664 6 1099 6 577 6 1180 2 945 4 1105 2 782 12 171 2 
681 2 514 12 340 4 1199 4 872 2 875 12 689 2 877 2 1039 2 1203 2 346 4 693 6 182 2 1206 2 8 2 518 4 9 2 699 6 1043 6 523 6 1215 2 524 2 525 6 708 6 354 2 1219 4 528 2 886 6 713 2 530 2 22 4 1055 2 718 2 362 4 24 2 1224 2 535 6 1057 6 538 6 205 4 539 2 722 2 728 2 31 2 373 2 208 2 735 2 211 2 1236 4 1237 4 1238 12 1069 4 1073 2 381 4 1242 6 555 4 44 2 385 2 46 2 558 2 221 4 561 6 1078 2 393 8 394 6 567 4 747 2 748 2 570 4 1083 2 398 2 922 2 1086 2 58 12 59 2 756 2 405 2 406 12 759 2 235 2 66 2 931 4 239 10 67 4 242 2 1096 2 1099 6 577 12 579 6 945 4 1105 2 782 16 1274 2 251 2 1109 52 951 2 1285 4 426 2 256 2 1114 2 961 6 99 2 266 6 595 8 596 24 965 8 273 6 968 4 1306 2 442 2 1125 2 601 2 602 2 603 2 113 4 1130 2 280 2 1131 2 1315 2 607 2 453 12 817 2 1138 6 1320 2 1319 2 290 2 988 10 293 2 292 2 461 8 296 10 1325 8 624 2 627 2 467 2 1334 6 629 2 997 6 998 2 1002 4 137 2 634 2 1006 4 139 2 1009 2 1349 10 641 2 1154 2 643 2 851 2 1352 4 150 2 652 2 485 2 1355 2 487 6 1162 2 1019 6 1020 2 324 2 489 2 326 2 661 6 158 4 333 2 1173 2 664 6 1180 2 1186 2 171 2 
708 2 1002 2 1109 4 340 2 1199 2 555 4 1285 4 235 2 256 2 362 2 1009 2 239 6 558 2 535 6 1224 2 1173 2 346 2 1078 2 643 2 293 2 393 2 728 2 296 6 31 2 567 4 747 2 624 2 373 2 485 2 735 2 627 2 782 4 524 2 442 2 487 4 
251 2 681 2 175 2 1109 28 340 2 1199 2 256 2 877 2 346 2 1294 2 431 3 595 2 182 2 1206 2 8 2 596 24 518 2 964 2 965 6 273 6 275 2 524 2 525 4 442 2 708 2 602 2 1219 4 528 2 886 6 357 2 1130 2 1315 2 1055 2 362 2 535 6 1224 2 1320 2 205 3 988 4 293 2 296 6 728 2 1325 6 31 2 624 2 373 2 208 2 735 2 627 2 1237 3 1069 4 629 2 998 2 1002 2 381 3 555 4 385 2 1009 2 558 2 847 2 641 2 1078 2 1154 2 643 2 393 2 1247 2 1080 2 567 4 747 2 652 2 485 2 1083 2 487 2 756 2 406 8 759 2 326 2 235 2 66 2 158 4 239 6 333 2 1096 2 1173 2 945 4 672 2 1378 2 1105 2 782 4 
321 2 728 2 442 2 
321 2 728 2 442 2 
1274 2 251 2 681 2 1109 24 340 2 92 4 1199 4 1285 4 1111 2 1288 2 256 2 261 2 346 2 432 2 595 2 182 2 8 2 596 16 518 6 697 2 965 2 273 6 1215 4 968 2 442 6 354 2 708 4 1219 4 602 2 528 2 113 4 886 6 1130 2 607 4 1315 2 452 2 22 4 120 2 1055 2 362 2 535 6 1320 2 538 2 722 2 988 4 292 2 1325 2 728 4 296 12 373 2 208 2 627 2 1236 2 737 2 1237 2 472 2 629 2 1069 4 834 4 998 2 1240 4 1002 4 1004 2 555 4 1006 4 139 2 385 2 558 2 1349 4 641 2 1154 2 393 4 145 2 567 4 647 2 1352 2 570 4 652 2 321 2 1083 2 398 4 487 6 59 2 1261 2 854 2 756 2 405 2 406 2 759 2 326 2 931 4 66 2 492 2 158 4 1091 2 239 12 1367 2 333 2 1096 2 1173 4 1180 2 945 4 1105 2 782 16 
602 2 538 2 1373 2 1058 2 988 2 595 2 1109 4 634 2 145 2 596 2 951 2 532 2 1213 2 452 2 120 2 1039 2 968 2 
1274 2 867 2 251 2 681 2 1109 24 340 2 92 4 1199 4 1285 4 1111 2 256 2 261 2 346 2 432 2 182 2 8 2 596 16 518 6 697 2 965 2 273 6 1215 4 442 6 15 2 354 2 708 4 1219 4 602 2 528 2 113 4 886 6 1130 2 607 4 1315 2 117 2 452 2 22 4 120 2 1055 2 362 2 535 6 1320 2 538 2 722 2 988 2 292 2 1325 2 728 4 296 12 373 2 208 2 1333 2 627 2 1236 4 1237 4 629 2 1069 4 834 4 998 2 1240 4 1002 4 555 4 1006 4 139 2 385 2 558 2 1349 4 641 2 1154 2 393 4 1248 2 145 2 567 4 647 2 1352 2 570 4 652 2 321 2 1083 2 398 4 487 6 59 2 1261 4 854 2 1020 2 756 2 405 2 406 2 759 2 326 2 931 4 66 2 492 2 158 4 1091 2 239 12 1367 2 333 2 1096 2 1173 4 1180 2 945 4 1105 2 782 16 
1274 2 251 2 681 2 1278 2 1109 24 340 2 92 4 1199 4 1285 4 1111 2 256 2 4 2 261 2 346 2 432 2 595 2 182 2 8 2 596 16 518 6 697 2 965 2 273 6 1215 4 968 2 442 6 354 2 708 4 1219 4 602 2 528 2 113 4 886 6 1130 2 607 4 1315 2 452 2 22 4 120 2 1055 2 362 2 535 6 1320 2 538 2 722 2 988 4 292 2 1325 2 728 4 296 12 620 2 902 2 373 2 208 2 627 2 1236 4 1237 2 629 2 1069 4 834 4 998 2 1240 4 1002 4 555 4 1006 4 139 2 385 2 558 2 1349 4 641 2 1154 2 393 4 145 2 567 4 647 2 1352 2 570 4 652 2 321 2 1083 2 398 4 487 6 59 2 1261 2 854 2 1020 2 756 2 405 2 406 2 759 2 326 2 931 4 66 2 492 2 158 4 1091 2 239 12 1367 2 333 2 1096 2 1173 4 939 2 1180 2 945 4 1105 2 782 16 
681 6 339 56 682 2 684 2 687 2 689 2 1036 2 1038 2 8 2 696 12 10 10 703 2 704 2 705 24 352 2 1045 2 16 2 355 6 710 2 358 8 712 10 19 20 1055 2 363 2 365 4 28 3 725 78 1060 4 730 2 731 2 733 2 372 22 1061 12 33 2 376 2 1068 2 37 4 1069 4 381 35 1074 6 46 2 386 72 1077 2 51 2 1080 2 746 8 53 12 397 2 1083 2 399 2 1086 2 753 2 754 8 756 4 755 2 406 48 759 2 63 2 64 2 1090 2 761 2 1093 2 764 2 67 46 1095 2 1096 2 1097 2 768 84 416 2 417 2 79 26 81 2 776 2 1102 2 82 2 83 8 422 2 780 4 85 12 781 2 1106 10 783 2 88 24 1109 66 1108 2 790 24 426 2 96 24 431 2 433 2 1117 19 434 2 435 4 800 2 104 2 1120 20 1121 32 106 8 805 2 441 10 1125 2 1123 4 808 4 112 2 1129 16 811 2 1130 4 812 2 451 2 1135 6 121 2 816 2 456 2 460 32 459 2 821 2 822 8 1141 4 827 4 128 52 828 8 130 3 463 3 829 10 467 2 471 2 832 2 135 2 138 2 474 20 475 10 1149 2 141 2 845 2 848 6 1154 2 144 2 1156 2 483 2 151 2 853 24 1159 4 1160 2 1165 2 490 4 154 2 155 6 157 19 158 6 496 2 162 2 163 8 859 20 1171 12 499 2 501 2 1172 1 860 2 1175 2 1176 2 506 4 862 2 1185 3 510 2 1186 2 172 2 511 2 1198 4 513 2 176 2 872 2 874 2 876 2 177 2 877 2 1201 2 1203 4 1202 12 517 2 178 10 881 2 181 2 182 2 882 4 518 2 1208 2 1210 2 1209 16 1211 20 187 18 525 12 1219 4 193 2 528 2 886 6 1220 2 891 2 892 20 198 12 1222 2 533 2 1223 2 894 2 1225 2 536 2 203 4 1227 2 205 16 1233 16 1232 2 1234 40 544 20 904 2 211 2 1237 35 551 4 553 2 909 12 911 2 1246 2 221 30 223 2 562 24 1249 2 915 2 1250 2 565 4 1254 10 569 8 918 8 919 3 1258 12 922 2 925 16 573 2 1265 8 238 2 1266 2 241 40 242 2 1268 2 942 2 244 2 945 6 246 2 946 12 948 2 249 40 251 4 1275 10 583 2 1276 2 253 2 589 2 952 2 1286 12 953 2 1287 8 257 2 1293 8 592 2 957 2 262 2 264 2 962 2 596 34 1301 2 964 2 965 14 597 4 967 2 273 14 274 6 599 2 969 8 602 2 278 2 277 38 604 2 976 8 1314 2 1315 2 607 6 608 2 284 6 1317 8 610 12 285 24 286 108 1320 2 613 3 1321 2 614 1 290 4 1323 8 289 2 988 2 990 8 991 20 1325 14 1330 4 1332 4 998 4 1000 2 302 3 633 4 1338 12 1340 4 306 2 1341 12 1343 2 308 4 1346 2 1347 2 310 2 1349 100 641 2 315 2 644 2 316 2 645 3 1014 20 649 20 318 2 652 2 319 2 320 2 653 4 1355 2 1356 12 1358 10 1017 2 655 2 326 4 328 20 329 2 1026 2 1366 2 333 6 662 2 1368 2 1369 2 663 3 1372 2 1029 20 666 4 668 2 669 2 672 2 1378 2 1379 2 676 2 
381 2 406 2 1109 2 533 2 877 2 67 6 592 2 536 2 262 2 141 2 663 2 205 2 178 2 1325 2 596 2 1250 2 10 2 965 2 829 4 1379 2 14 2 525 2 1237 2 832 2 
381 2 406 2 1109 2 533 2 877 2 67 6 592 2 536 2 262 2 141 2 663 2 205 2 178 2 1325 2 596 2 1250 2 10 2 965 2 829 4 1379 2 14 2 525 2 1237 2 832 2 
381 2 406 2 1109 2 533 2 877 2 67 6 592 2 536 2 262 2 141 2 663 2 205 2 178 2 1325 2 596 2 1250 2 10 2 965 2 829 4 1379 2 14 2 525 2 1237 2 832 2 
355 4 1275 2 301 2 381 3 406 2 1109 10 1166 3 157 3 715 2 19 4 892 4 1168 2 1345 2 877 2 163 2 818 2 364 2 559 2 366 2 1268 2 725 6 1155 2 1233 5 1117 3 666 2 1234 2 596 4 827 2 508 4 746 2 1211 4 649 4 1332 2 106 2 85 4 653 2 441 2 1379 2 1237 3 1159 2 
355 4 1275 2 301 2 928 2 381 2 406 2 1109 10 1166 2 157 2 715 2 19 4 892 4 1168 2 1345 2 877 2 163 2 818 2 364 2 559 2 365 2 366 2 822 2 1268 2 725 6 1155 2 1233 4 1117 2 666 2 1234 2 596 4 827 2 508 4 746 2 1211 4 649 4 1332 2 106 2 85 4 653 2 441 2 1379 2 1237 2 1159 2 
355 4 1275 2 301 2 928 2 381 2 406 2 1109 10 1166 2 157 2 715 2 19 4 892 4 1168 2 1345 2 877 2 163 2 818 2 364 2 559 2 365 2 366 2 822 2 1268 2 725 6 1155 2 1233 4 1117 2 666 2 1234 2 596 4 827 2 508 4 746 2 1211 4 649 4 1332 2 106 2 85 4 653 2 441 2 1379 2 1237 2 1159 2 
355 4 1275 2 301 2 928 2 381 2 406 2 1109 10 1166 2 157 2 715 2 19 4 892 4 1168 2 1345 2 877 2 163 2 818 2 364 2 559 2 365 2 366 2 822 2 1268 2 725 6 1155 2 1233 4 1117 2 666 2 1234 2 596 4 827 2 508 4 746 2 1211 4 649 4 1332 2 106 2 85 4 653 2 441 2 1379 2 1237 2 1159 2 
355 4 1275 2 301 2 928 4 381 2 406 2 1109 10 1166 2 157 2 715 2 19 4 892 4 1168 2 1345 2 877 2 163 2 818 2 364 2 559 2 365 4 366 2 822 4 1268 2 725 6 1155 2 1233 4 1117 2 666 2 1234 2 596 4 827 2 508 4 746 2 1211 4 649 4 1332 2 106 2 85 4 653 2 441 2 1379 2 1237 2 1159 2 
1269 2 476 2 1374 2 769 2 310 2 774 2 
1309 2 88 2 169 2 695 2 878 2 1297 2 774 2 
1128 2 1109 10 217 2 342 2 908 1 1023 2 1315 2 1167 1 611 2 454 2 765 1 591 2 413 2 263 1 797 2 1295 2 963 1 577 2 943 2 850 2 596 8 78 2 103 2 1331 2 337 2 35 2 
355 4 928 2 1109 6 1340 2 1003 2 890 2 1074 4 308 2 477 2 163 6 365 2 899 2 1227 2 822 4 1233 16 542 2 666 2 596 6 827 6 184 2 746 6 700 4 650 2 106 6 1332 6 704 2 85 12 653 6 707 2 1159 6 
1337 7 796 2 934 2 1109 1 596 1 207 2 1298 2 1375 2 168 2 621 2 19 2 1211 2 892 2 763 4 750 1 752 2 378 2 1124 2 
1337 6 934 2 796 4 207 2 1298 2 1375 2 168 2 621 2 19 2 1211 2 892 2 763 4 752 4 378 2 1124 4 
1337 10 934 2 796 8 1109 1 596 1 207 6 1298 2 1375 2 168 2 621 8 19 2 1211 2 892 2 763 4 750 1 752 8 378 2 1124 8 
1337 2 934 2 796 2 1298 2 1375 2 168 2 19 2 1211 2 892 2 763 2 752 2 378 2 1124 2 
424 22 1193 24 677 6 681 58 1109 150 585 92 1034 8 1281 24 686 17 954 2 97 2 516 10 260 2 879 26 880 8 430 4 694 12 1207 16 434 8 596 134 1118 24 1299 4 436 90 967 8 702 1 520 28 438 4 107 24 273 248 706 4 191 2 1047 124 356 24 1051 6 1130 14 1313 6 974 4 529 6 282 4 196 4 115 42 1221 4 889 2 1136 16 119 4 895 4 26 4 124 2 204 4 27 2 1228 10 125 2 1324 6 541 4 30 4 1235 4 371 6 546 4 903 18 468 6 210 4 549 10 38 4 835 6 1147 2 133 10 630 8 380 8 552 50 40 26 218 34 384 2 219 10 1344 2 842 2 388 4 914 6 390 4 1151 42 312 4 482 6 916 18 395 6 317 2 396 5 651 4 1256 6 486 10 1357 2 1161 10 926 6 1359 4 855 6 1087 10 404 2 756 8 1362 6 1262 2 1263 6 326 14 930 36 493 6 494 4 158 112 495 8 333 58 662 8 165 2 70 2 1370 6 71 6 767 24 1177 16 940 8 505 90 167 6 418 6 1182 6 335 8 945 88 1184 4 673 2 582 6 1187 12 86 11 1273 16 1190 84 250 2 
784 2 677 4 300 2 868 6 133 2 681 3 836 2 630 6 999 2 1001 2 303 2 1109 46 219 2 686 2 841 2 1008 4 794 2 516 2 311 2 880 2 1150 2 429 2 1152 2 480 2 1012 2 434 2 1207 4 596 44 1118 2 916 2 395 2 149 2 396 2 967 2 520 38 1256 2 108 4 273 45 486 2 227 2 55 2 706 2 654 4 1127 2 191 2 1161 2 527 2 1310 2 1047 6 445 2 809 2 1087 2 356 2 404 2 756 2 230 4 1313 2 1130 2 529 2 889 2 326 2 1053 2 716 2 930 2 360 2 158 20 333 3 1318 2 68 2 662 2 26 2 1370 2 457 2 27 2 767 2 1228 2 1177 4 125 2 945 20 464 2 673 2 1270 2 864 2 623 2 778 2 995 2 1066 2 468 2 1273 4 549 2 36 2 423 2 
677 2 681 28 1109 78 585 24 1281 8 1283 2 871 2 686 10 954 2 255 4 344 2 1292 8 430 4 694 14 1207 10 434 2 596 70 967 2 438 4 520 14 105 4 273 104 1127 10 190 8 191 2 1047 24 1130 6 1313 4 281 4 529 4 196 4 115 8 1221 4 889 2 283 16 1136 8 895 2 204 4 1228 4 125 2 1324 4 127 2 30 4 1235 4 1144 8 371 4 468 4 549 4 38 4 835 4 1147 2 133 6 836 10 630 6 999 2 380 4 136 16 552 8 218 30 384 2 635 2 842 2 388 4 914 4 390 4 1151 16 312 4 1079 8 1153 4 482 4 916 10 395 4 1256 4 486 4 54 4 926 4 404 2 1087 4 855 4 756 2 1362 4 1263 4 326 6 930 6 493 4 494 4 158 44 495 4 331 2 497 4 333 30 68 2 662 2 334 4 71 4 1370 4 1177 10 418 4 1182 4 945 36 673 2 863 32 1270 10 864 2 582 4 1273 10 1190 24 
424 10 677 2 681 12 133 2 630 4 999 2 1109 28 218 6 686 2 97 2 260 2 312 2 434 2 1207 6 596 26 916 2 395 4 967 2 396 2 520 14 1256 4 273 40 486 2 55 2 1357 2 191 2 1047 8 404 2 1087 2 756 2 1130 2 1313 4 529 4 889 2 326 2 930 2 1136 6 158 14 495 4 333 12 895 2 662 2 165 2 1370 4 124 2 27 2 1228 2 1177 6 125 2 541 2 940 2 1235 2 945 14 673 2 468 4 86 2 210 2 1273 6 549 2 
295 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 131 667 (13,46,63,201,251,323,367,473,521,800,885,1018,1130,1140) 656 667 (13,46,63,201,251,323,367,473,521,800,885,1018,1130,1140) 833 (13,46,63,201,251,323,367,473,521,800,885,1018,1130,1140) 458 (13,46,63,201,251,323,367,473,521,800,885,1018,1130,1140) 749 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 952 950 210 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 425 124 1178 925 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 676 124 1178 925 
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 676 124 1178 925 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 676 124 1178 925 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.ProglangType:isPseudoArray()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(F[D)Z
daikon.Quant:lexEqual([I[I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Ppt:Ppt()V
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min_max([I)[I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoAux:hashCode()I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:num_sets()I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:concat([I[I)[I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isScalar()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:lte(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_124()Z
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_3R_105()Z
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:jj_3R_102()Z
daikon.ProglangType:isPointerFileRep()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.PptSlice1:num_samples()I
jtb.JavaCharStream:getBeginLine()I
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.VarInfo:java_name()Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaCharStream:getEndColumn()I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:gte(II)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_106()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:lte(DD)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:jj_3R_125()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.JavaParser:jj_3R_103()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:jj_3R_164()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParser:jj_3R_108()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.WeakHasherMap:size()I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.JavaParser:jj_3R_47()Z
jtb.JavaParser:jj_ntk()I
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.MathMDE:pow(II)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_116()Z
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3_27()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_19()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName; | RETURN | 86983 | return null
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.MathMDE:negate(I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Quant:union([I[I)[I
daikon.ModBitTracker:num_vars()I
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Debug:logDetail()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.MathMDE:gcd(II)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
jtb.JavaParser:jj_3R_77()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3_35()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_3_14()Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.Quant:gt(II)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.config.Configuration:apply(Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaCharStream:readChar()C
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.PptSlice0:arity()I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_3_12()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.JavaParser:jj_3R_107()Z
daikon.Quant:lexLT([I[I)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_scan_token(I)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_148()Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeListOptional:present()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.ArraysMDE:min([I)I
utilMDE.MathMDE:mod_positive(JJ)J
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:subsetOf([I[I)Z
jtb.JavaParser:jj_3R_81()Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_149()Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.ArraysMDE:element_range([I)I
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:jj_3R_57()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:noDuplicates([D)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3_4()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeOptional:present()Z
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:lexLTE([I[I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.Debug:logOn()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:jj_3R_109()Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.Invariant:prob_and(DDD)D
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:jj_3_22()Z
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_50()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.ProglangType:dimensions()I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_180()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_28()Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:jj_3R_101()Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_10(I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:ReadByte()C
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.RootNode:RootNode()V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:jj_2_21(I)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration; | ASSIGN | 13768 | = null
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_87()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParser:jj_3R_75()Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_120()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.PptName:isEnterPoint()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_86()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:jj_2_35(I)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_5()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:jj_3R_135()Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:jj_3R_163()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_110()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:jj_2_36(I)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:isIntegral()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_3R_126()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.ProglangType:baseIsFloat()Z
utilMDE.Intern:intern([I)[I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
jtb.JavaParser:jj_3R_72()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_67()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.JavaParser:jj_3R_121()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.JavaParser:jj_3R_119()Z
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_2_15(I)Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:isFloat()Z
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([J[J)Z
daikon.ProglangType:isArray()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParser:jj_3R_161()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:jj_3_21()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | CONDITION | 12410 | if (x) -> if (!x)
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_3R_169()Z
jtb.JavaParser:jj_3_30()Z
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internSubsequence([JII)[J
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptSlice2:arity()I
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:lt(II)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:eltsEqual([II)Z
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:eltsEqualIndex([I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_17()Z
jtb.JavaParser:jj_3R_53()Z
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3R_162()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_115()Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:ne(II)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:jj_3_25()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quant:eq(DD)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_17(I)Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_104()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:sameLength([I[I)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Quant:eltsLteIndex([I)Z | CONDITION | 178697 | if (x) -> if (!x)
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_20()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_73()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:sum([D)D
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_3()Z
daikon.Quant:slice([III)[I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_80()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName:name()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:jj_2_4(I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:memberOf(D[F)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_48()Z
utilMDE.ArraysMDE:concat([I[I)[I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.inv.Invariant:getConfidence()D
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.JavaParser:jj_3R_137()Z
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([D)[D
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_117()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:eltsLTE([II)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:hashCode()I
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
daikon.Quant:memberOf(I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltwiseEqual([I)Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quant:memberOf(J[J)Z
daikon.Quant:noDups([I)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.Invariant:logOn()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:jj_3R_122()Z
daikon.test.FormatTestCase:passes()Z
daikon.Quant:lexGTE([I[I)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:jj_3_29()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_100()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.Quant:eltsLT([II)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:eq(II)Z
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3_15()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.PptSlice1:arity()I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_98()Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.ArraysMDE:subarray([III)[I
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_2_25(I)Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:memberOf(S[S)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_2_12(I)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsGTE([II)Z
daikon.VarInfo:relate_var()V
daikon.Quant:eltwiseGTE([I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.diff.Node:Node()V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:jj_3R_61()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:isPointer()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltsGT([II)Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.JavaParser:jj_3R_97()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_18()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:lexGT([I[I)Z
daikon.Quant:pairwiseSquare([I[I)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_1()Z
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_36()Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_58()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariants:Invariants()V
daikon.VarInfo:new_ppt()V
jtb.JavaParser:getToken(I)Ljtb.Token;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_3R_136()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaCharStream:backup(I)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.MathMDE:modulus([I)[I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.JavaParser:jj_3R_60()Z
daikon.ValueTuple:size()I
jtb.JavaParser:jj_3R_62()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_210()Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.LimitedSizeIntSet:add(I)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
205 2 969 2 1227 2 1079 2 422 2 935 2 500 2 268 2 778 4 
298 2 468 2 275 2 1000 2 577 6 926 2 137 2 893 6 931 6 174 2 675 2 
1028 6 1073 4 993 4 500 2 433 2 110 2 1091 6 781 2 178 2 422 2 736 6 472 2 163 6 
842 4 1087 2 376 4 760 10 1053 10 1017 10 1167 29 116 8 266 2 422 6 199 10 118 8 271 2 949 16 23 6 1212 2 988 12 618 2 500 6 278 16 242 26 658 2 1154 8 439 8 94 10 1037 4 1081 4 219 2 598 6 790 16 
525 4 357 6 
406 2 
285 2 1010 4 605 2 148 2 527 2 847 2 452 4 942 2 455 2 538 2 690 2 618 2 315 2 779 2 399 2 32 4 321 2 249 2 250 2 791 2 890 2 727 2 106 2 644 2 112 2 1132 2 976 2 196 2 486 2 422 4 810 2 54 2 815 4 205 2 348 2 60 2 500 4 359 2 503 2 61 2 923 2 661 2 1158 2 756 2 
1 2 376 2 760 16 1053 16 479 6 1017 16 481 4 482 4 294 4 975 6 1097 2 1167 54 803 2 116 6 422 4 980 6 199 6 579 4 490 6 948 2 949 32 863 6 23 4 988 22 913 2 500 4 278 32 748 4 242 48 360 2 132 6 593 8 1154 18 877 4 94 16 219 2 598 4 790 32 671 4 
455 2 342 2 1150 2 
544 2 492 2 886 2 620 10 623 2 934 2 1092 22 942 2 467 2 133 2 1137 2 232 2 158 2 835 2 
376 2 760 2 1164 2 1053 2 1017 2 1167 6 199 4 120 2 949 2 988 2 1218 2 1146 2 278 2 242 4 173 2 1154 2 662 2 94 2 99 2 563 2 598 2 565 2 790 2 
988 4 842 2 760 4 4 2 479 6 1053 4 278 8 242 12 1017 4 294 4 132 6 1167 16 94 4 882 2 949 8 671 4 790 8 
476 4 188 4 602 2 1046 62 840 2 224 2 729 2 573 2 390 4 902 4 765 4 455 8 1208 2 983 2 342 6 234 2 493 2 346 4 350 4 742 4 85 4 348 4 1072 10 1177 2 773 14 240 10 776 2 1150 2 175 2 213 2 592 2 32 4 830 2 180 2 629 2 1082 4 1158 2 672 4 636 2 600 2 
406 2 237 2 677 2 637 2 998 2 1116 2 95 2 857 2 982 2 371 2 
2 2 146 5 445 2 609 2 939 2 299 2 945 1 453 4 1100 2 1099 6 155 3 613 1 947 3 19 1 614 2 457 1 162 2 22 6 1107 1 310 2 771 2 461 2 27 2 1111 16 312 2 168 2 1113 2 777 2 31 1 1118 2 33 1 631 2 34 2 633 16 40 2 967 4 186 1 792 2 793 1 191 8 477 1 970 1 639 2 333 2 1131 2 338 32 487 2 979 2 197 4 1136 2 488 2 51 2 981 2 807 3 986 2 1142 3 56 2 991 1 352 24 500 34 501 2 825 3 211 2 505 12 214 2 215 8 1155 4 664 2 1156 2 665 2 363 2 365 2 218 2 510 24 65 32 370 6 669 2 670 2 515 2 68 2 517 2 519 2 838 2 523 2 1011 8 223 3 1013 16 683 2 379 2 1019 2 226 3 849 3 851 3 850 1 853 2 389 2 1024 2 692 2 86 2 397 2 698 2 1032 2 868 1 704 2 1180 3 1181 2 552 2 554 2 93 2 721 2 409 2 1047 2 1195 2 1049 2 726 2 1052 2 108 4 107 2 260 2 895 2 113 2 896 4 1204 2 263 4 422 32 267 2 907 2 268 2 580 1 1068 2 1069 2 581 16 911 2 127 2 432 3 1075 2 277 2 919 4 1077 2 589 6 1226 1 281 2 595 3 1229 2 755 2 933 2 1231 2 
1030 2 500 2 
74 2 500 4 394 2 
1054 2 
283 16 286 4 287 4 606 74 288 2 290 4 936 2 292 358 938 2 297 2 11 2 295 16 13 2 14 30 612 2 16 2 17 2 303 4 18 2 305 14 617 18 309 2 308 2 951 18 25 2 619 18 622 2 621 2 28 246 313 2 314 48 957 2 317 4 30 22 960 2 320 2 626 4 323 2 38 2 37 94 325 2 964 2 635 90 968 2 332 2 638 4 640 2 641 2 972 2 336 2 974 8 46 2 47 2 339 2 340 6 52 2 650 104 55 2 989 4 652 2 653 62 654 2 351 4 353 2 655 2 656 12 657 2 997 22 659 52 63 4 367 2 366 2 667 8 369 12 372 2 67 2 673 2 1007 2 69 2 377 2 680 2 1012 8 682 4 1015 2 1018 2 381 14 685 2 1021 4 387 2 75 2 76 2 1022 2 688 4 78 2 1023 4 391 4 392 2 80 2 1025 6 691 30 393 94 83 2 693 42 395 4 84 4 697 2 396 2 1031 6 90 2 89 94 703 2 1034 30 1033 28 705 14 398 4 1035 4 707 2 709 4 710 50 712 2 713 2 711 12 714 4 716 2 404 2 1041 48 718 2 1044 2 1043 2 407 2 723 94 100 4 102 2 724 4 411 2 103 94 728 4 109 2 111 2 415 2 732 2 416 4 733 2 1057 6 420 2 419 4 734 2 421 2 1064 8 423 2 737 4 1066 12 1067 4 739 2 738 42 426 56 122 2 1071 42 1070 4 743 4 128 2 746 2 747 6 129 2 130 2 749 2 436 8 131 2 438 4 1078 18 136 2 135 4 441 2 1080 8 138 2 1084 2 1085 8 757 2 442 2 144 2 758 2 149 2 762 2 763 2 450 2 449 4 451 246 1094 2 153 2 1096 2 1095 4 1103 2 1102 4 767 4 1104 2 159 2 458 14 768 4 161 2 1105 14 770 2 1109 44 1110 94 171 2 1112 2 1114 2 176 4 469 2 179 2 177 44 782 12 783 2 182 18 1121 4 785 2 473 2 786 2 184 2 1122 2 474 94 1124 2 789 2 1123 4 1125 2 475 2 187 2 794 2 1127 12 1128 2 1130 2 480 4 800 2 483 4 484 2 194 4 802 12 195 2 1135 4 805 14 804 2 808 2 809 2 489 2 1140 14 201 34 200 4 1141 2 812 2 813 4 491 18 202 2 817 2 495 2 206 2 496 2 498 4 818 2 208 36 820 94 823 12 1147 62 502 2 1151 2 829 4 1157 4 833 2 513 46 1159 2 1160 2 836 2 516 2 1162 2 521 12 522 44 220 8 1163 34 841 2 524 2 528 2 1166 20 531 2 852 2 536 2 539 2 855 4 1169 94 858 2 1171 2 861 12 1172 2 236 2 865 2 548 2 870 18 874 2 244 2 555 2 1183 10 878 4 556 2 248 2 881 16 880 2 1185 4 251 4 562 4 883 18 1187 2 1188 4 253 22 1190 94 566 2 885 14 254 2 1193 2 568 2 569 2 570 2 571 2 1197 2 258 4 572 4 898 2 897 4 900 2 1205 62 574 2 576 2 903 2 1209 2 905 74 909 14 1211 2 273 2 1216 2 274 246 1217 2 912 18 916 4 585 2 917 2 584 94 1220 4 918 2 279 8 588 2 282 2 601 2 
797 2 1002 2 775 2 378 1 
1002 2 651 2 
190 2 455 2 845 2 1002 2 1037 2 720 2 910 2 
1002 2 164 2 910 2 
319 2 1002 2 910 2 
735 2 971 2 775 2 
1002 2 910 2 
687 2 735 2 
1002 2 514 2 
735 2 775 2 212 2 
115 2 775 2 252 2 
413 2 256 2 775 2 
62 2 775 2 272 2 
679 2 29 2 775 2 
735 2 915 2 
1173 2 1002 2 
154 2 115 2 
978 2 256 2 
62 2 1051 2 
679 2 1076 2 
735 2 699 2 
679 2 485 2 
62 2 1001 2 
780 2 
115 2 615 2 
735 2 775 2 8 2 212 2 
1059 2 735 2 775 2 8 2 212 2 
735 2 843 2 775 2 
735 2 1120 2 775 2 
696 2 434 2 470 2 82 2 
741 4 844 2 499 2 824 2 798 2 1222 2 7 2 1092 6 921 2 660 2 645 2 751 2 1203 2 77 2 1062 2 649 2 632 4 1161 2 
123 2 775 2 
455 2 856 2 50 2 720 2 
455 2 845 2 856 2 50 2 720 2 227 2 
455 2 1002 2 1037 2 183 2 720 2 910 2 
922 2 810 2 
795 2 455 2 1037 2 720 2 
62 2 1101 2 
679 2 1074 2 
115 2 985 2 
256 2 894 2 
679 2 289 2 256 2 
679 2 256 2 384 2 
679 2 1119 2 256 2 
953 2 679 2 256 2 
386 2 262 2 533 2 455 2 906 2 583 6 774 6 720 2 
70 2 735 2 
698 2 
447 2 609 2 299 2 453 4 1099 2 22 6 1107 2 27 2 312 2 466 2 1118 2 784 2 967 2 40 2 792 2 331 2 477 2 338 6 979 2 48 4 1136 2 51 2 981 2 344 4 56 6 500 26 505 8 1155 4 215 2 664 2 1156 2 665 2 363 2 365 2 218 2 831 2 65 4 370 2 669 2 518 2 523 2 838 2 71 2 1165 2 389 2 1024 2 692 2 1027 2 397 2 1032 2 704 2 872 2 92 2 245 2 93 2 97 2 1195 4 725 2 108 2 1196 2 896 4 1204 2 263 4 422 26 904 2 907 2 268 2 581 6 127 2 1075 2 919 2 589 4 281 2 1231 2 
447 2 609 2 299 2 453 4 1099 2 22 6 1107 2 27 2 312 2 172 2 466 2 1117 2 1118 2 631 2 784 2 967 2 40 2 792 2 331 2 477 2 338 6 979 2 48 4 1136 2 51 2 981 2 344 4 56 6 500 26 505 8 1155 4 215 2 664 2 1156 2 665 2 363 2 365 2 218 2 831 2 65 4 370 2 669 2 518 2 523 2 838 2 389 2 1024 2 692 2 1027 2 397 2 1032 2 704 2 92 2 245 2 93 2 97 2 1195 4 726 2 725 2 108 2 107 2 1196 2 896 4 1204 2 263 4 422 26 904 2 907 2 268 2 581 6 127 2 1075 2 919 2 589 6 281 2 141 2 1231 2 
634 2 
876 2 846 2 
1213 2 345 2 43 2 125 2 105 2 1090 4 893 2 170 2 465 4 1153 2 418 2 468 2 577 2 926 2 766 2 557 2 79 2 541 2 
1090 4 298 2 766 2 79 2 1170 2 1024 2 541 2 22 4 954 6 167 4 312 2 397 2 241 2 867 2 465 4 170 2 174 2 1115 2 468 4 557 2 402 4 247 2 965 4 43 2 410 2 105 2 414 2 730 2 192 2 893 6 1198 2 418 2 263 2 577 4 1060 2 422 6 53 2 1213 4 345 2 987 4 428 2 125 2 500 12 1225 2 1153 2 281 2 134 4 1155 2 362 2 926 4 217 2 365 2 440 2 218 2 511 2 373 2 930 2 1006 2 931 6 1231 2 
1090 4 766 2 79 2 1170 2 1024 2 541 2 22 4 954 6 167 4 312 2 397 2 241 2 867 2 465 4 170 2 174 2 1115 2 468 4 557 2 402 4 247 2 965 4 43 2 410 2 105 2 414 2 730 2 192 2 893 4 1198 2 418 2 263 2 577 6 1060 2 422 6 53 2 1213 4 345 2 987 4 428 2 125 2 500 12 1225 2 1153 2 281 2 134 4 1000 2 1155 2 362 2 926 4 217 2 365 2 440 2 218 2 511 2 373 2 930 2 1006 2 931 6 1231 2 
1090 4 766 2 79 2 1170 2 1024 2 541 2 22 4 954 6 167 4 312 2 397 2 241 2 867 2 465 4 170 2 174 2 1115 2 468 4 557 2 402 4 247 2 965 4 43 2 410 2 105 2 414 2 730 2 192 2 893 6 1198 2 418 2 263 2 577 6 1060 2 422 6 53 2 1213 4 345 2 987 4 428 2 125 2 500 12 1225 2 1153 2 281 2 134 8 1155 2 362 2 926 4 217 2 365 2 440 2 137 2 218 2 511 2 373 2 930 2 1006 2 931 6 1231 2 
1090 4 766 2 79 2 1170 2 1024 2 541 2 22 4 954 10 167 4 312 2 397 2 241 2 867 2 465 4 170 2 174 2 1115 2 468 4 557 2 402 4 247 2 965 8 43 2 410 2 105 2 414 2 730 2 192 2 893 6 1198 2 418 2 263 2 577 8 1060 2 422 6 53 2 1213 4 345 2 987 4 428 2 125 2 500 12 1225 2 1153 2 281 2 1155 2 134 8 1000 2 362 2 926 4 217 2 365 2 440 2 137 2 218 2 511 2 373 2 930 2 1006 2 931 8 1231 2 
1090 4 766 2 79 2 1170 2 1024 2 541 2 22 4 954 10 167 4 312 2 397 2 241 2 867 2 465 4 170 2 174 2 1115 2 468 4 557 2 402 4 247 2 965 8 43 2 410 2 105 2 414 2 730 2 192 2 893 6 1198 2 418 2 263 2 577 6 1060 2 422 6 53 2 1213 4 345 2 987 4 428 2 125 2 500 12 1225 2 1153 2 281 2 134 8 1155 2 362 2 926 4 217 2 365 2 440 2 137 2 218 2 511 2 373 2 930 2 1006 2 931 6 1231 2 
5 2 291 2 609 2 610 2 611 2 15 2 302 2 304 2 20 2 22 6 954 2 27 2 312 2 624 2 625 6 35 1 630 2 966 2 967 2 43 2 335 2 338 8 337 2 646 6 979 2 48 4 51 2 981 2 53 2 56 6 345 2 987 8 990 2 355 1 361 6 1000 4 664 2 362 2 363 2 365 2 65 2 1004 2 370 2 669 2 373 2 1006 4 674 2 1009 6 74 6 389 12 79 2 1024 2 689 2 692 2 1027 4 1030 6 397 2 88 6 702 4 91 2 708 2 93 2 402 4 719 2 410 2 726 2 105 2 107 2 108 2 414 4 1054 6 730 2 418 2 1060 2 422 24 428 2 125 2 127 2 745 2 1075 2 437 2 134 2 440 2 143 2 1090 4 448 6 453 4 1099 2 766 2 160 1 459 2 1106 1 1108 6 167 6 465 4 170 2 174 4 1115 2 468 4 792 2 1126 2 796 2 478 2 192 2 1143 1 497 4 500 46 505 4 1153 2 1155 4 215 2 1156 2 217 2 218 2 831 2 511 2 520 1 839 6 537 2 231 2 540 2 1170 2 541 2 862 6 235 6 545 6 867 2 241 2 549 2 245 2 557 2 247 2 560 2 567 6 255 7 893 4 896 4 1201 1 263 4 577 8 575 1 904 2 907 2 268 2 1213 4 581 6 1214 8 1223 1 919 2 587 7 589 6 1225 2 281 2 926 4 927 10 928 6 930 2 931 12 1231 2 
143 2 1090 4 5 2 448 6 291 2 609 2 610 2 611 2 15 2 453 4 1099 2 302 2 304 2 766 2 20 2 459 2 22 6 954 2 1108 6 27 2 167 6 312 2 624 2 170 2 465 4 625 6 174 4 1115 2 468 4 630 2 966 2 967 4 792 2 1126 2 796 2 43 2 478 2 335 2 192 2 337 2 338 8 646 6 979 2 48 4 51 2 981 2 53 2 987 8 345 2 56 6 990 2 497 4 500 48 361 6 505 8 1153 2 215 2 1155 4 1156 2 362 2 664 2 363 2 217 2 365 2 218 2 831 2 65 2 511 2 370 2 1004 2 373 2 669 2 1006 4 674 2 1009 6 839 6 74 6 537 2 389 12 231 2 540 2 79 2 1170 2 1024 2 541 2 542 2 689 2 862 6 692 2 235 6 1027 4 545 6 1030 6 397 2 88 6 91 2 241 2 702 4 867 2 549 2 708 2 245 2 93 2 402 4 557 2 247 2 560 2 719 2 567 6 410 2 1195 2 726 2 105 2 414 4 108 4 107 2 730 2 1054 6 893 8 896 4 418 2 263 4 1060 2 577 8 422 26 904 2 907 2 268 2 1213 4 1214 8 581 6 428 2 125 2 127 2 745 2 1075 2 435 2 919 4 437 2 1225 2 589 6 281 2 134 6 926 4 927 10 137 4 440 2 928 6 930 2 931 12 1231 2 
143 2 1090 4 5 2 448 6 291 2 609 2 610 2 611 2 15 2 453 4 1099 2 302 2 304 2 766 2 20 2 459 2 22 6 954 6 1108 6 27 2 167 6 312 2 624 2 170 2 465 4 625 6 174 4 1115 2 468 4 630 2 965 4 966 2 967 4 792 2 1126 2 796 2 43 2 478 2 335 2 192 2 337 2 338 8 646 6 979 2 48 4 51 2 981 2 53 2 56 6 987 8 345 2 990 2 497 4 500 48 361 6 505 8 1153 2 215 2 1155 4 1156 2 362 2 664 2 363 2 217 2 365 2 218 2 831 2 65 2 511 2 370 2 1004 2 373 2 669 2 1006 4 674 2 1009 6 839 6 74 6 537 2 389 12 231 2 540 2 79 2 1170 2 1024 2 541 2 542 2 689 2 862 6 692 2 235 6 1027 4 545 6 1030 6 397 2 88 6 91 2 241 2 702 4 867 2 549 2 708 2 245 2 93 2 402 4 557 2 247 2 560 2 719 2 567 6 410 2 1195 2 726 2 105 2 414 4 108 4 107 2 730 2 1054 6 893 8 896 4 418 2 263 4 1060 2 577 8 422 26 904 2 907 2 268 2 1213 4 1214 8 581 6 428 2 125 2 127 2 745 2 1075 2 435 2 919 4 437 2 1225 2 589 6 281 2 134 6 926 4 927 10 137 4 440 2 928 6 930 2 931 12 1231 2 
0 6 5 2 609 2 610 2 611 2 298 2 15 2 946 2 302 2 304 2 20 2 22 6 954 6 27 2 312 2 624 2 625 12 630 2 36 2 327 6 965 4 966 2 967 4 43 2 335 2 338 12 337 2 646 6 979 2 48 6 51 2 981 2 53 2 345 2 987 8 56 8 990 2 361 12 1000 2 664 2 362 2 363 2 365 2 65 4 1004 2 370 4 668 2 669 2 373 2 1006 4 674 2 1009 6 74 12 389 10 79 2 1024 2 689 2 692 2 1027 4 1030 12 397 2 87 6 88 12 702 4 91 2 706 2 708 2 93 2 402 4 719 2 722 2 1045 6 410 2 726 2 105 2 107 2 108 4 414 4 730 2 1054 12 418 2 1060 2 422 24 428 2 429 6 125 2 127 2 745 2 1075 2 435 2 437 2 134 6 754 2 440 2 137 4 139 6 143 2 1090 4 448 6 453 4 1099 4 766 2 157 2 459 2 1108 6 167 6 465 4 170 2 174 4 1115 2 468 4 792 2 1126 2 796 2 478 2 192 2 497 4 500 52 505 10 1153 2 1155 4 215 4 1156 2 508 2 217 2 218 2 831 4 511 2 512 6 839 6 537 2 231 2 540 2 1170 2 541 2 542 2 862 6 235 6 545 6 867 2 241 2 549 2 245 2 557 2 247 2 560 2 567 6 1195 2 893 10 896 4 263 4 577 10 904 2 907 2 268 2 1213 4 581 8 1214 8 919 4 1224 6 589 6 1225 2 281 2 591 6 926 4 927 8 928 6 930 2 931 16 1231 2 
410 2 105 2 1090 2 192 2 893 6 1060 2 577 6 79 2 1170 2 541 2 987 2 954 4 345 2 428 2 125 2 167 2 500 4 867 2 170 2 465 2 174 2 1115 2 468 4 134 6 362 2 217 2 926 4 137 2 440 2 402 2 557 2 511 2 965 4 930 2 931 4 
1090 2 445 2 446 2 291 2 609 2 453 4 1099 3 22 6 954 2 27 2 167 2 312 2 772 3 465 2 170 2 174 2 1115 2 468 4 792 2 192 2 338 8 979 2 48 4 51 2 981 2 53 2 987 2 56 6 345 2 500 28 1155 4 362 2 664 2 1156 2 217 2 365 2 218 2 511 2 65 3 370 3 669 2 72 2 389 4 79 2 1170 2 1024 2 541 2 692 2 1027 2 698 2 397 2 547 2 867 2 552 2 245 2 93 2 402 2 557 2 409 2 410 2 726 2 105 2 107 2 893 6 896 4 1199 2 263 4 1060 2 577 6 422 24 1063 2 904 2 907 2 268 2 581 6 428 2 125 2 127 2 1075 2 589 6 281 2 134 6 926 4 137 2 440 2 927 2 930 2 931 4 1231 2 
1090 4 766 2 79 2 1170 2 1024 2 541 2 22 4 954 10 167 4 312 2 397 2 241 2 867 2 465 4 170 2 174 2 1115 2 468 4 557 2 402 4 247 2 965 8 43 2 410 2 105 2 414 2 730 2 192 2 893 6 1198 2 418 2 263 2 577 6 1060 2 422 6 53 2 1213 4 345 2 987 4 428 2 125 2 500 12 1225 2 1153 2 281 2 134 8 1155 2 362 2 926 4 217 2 365 2 440 2 137 2 218 2 511 2 373 2 930 2 1006 2 931 6 1231 2 
1090 4 298 2 766 2 79 2 1170 2 1024 2 541 2 22 4 954 10 167 4 312 2 397 2 241 2 464 2 867 2 170 2 465 4 174 2 1115 2 468 4 557 2 402 4 247 2 965 8 43 2 410 2 105 2 414 2 730 2 192 2 893 8 418 2 263 2 577 6 1060 2 422 6 53 2 1213 4 345 2 987 4 428 2 125 2 500 12 920 4 1225 2 1153 2 281 2 1155 2 663 2 134 8 362 2 217 2 926 4 365 2 440 2 137 2 218 2 373 2 930 2 1006 2 931 8 1231 2 
222 2 362 2 1170 2 
222 2 362 2 1170 2 
1090 2 609 2 298 4 15 2 453 4 454 2 616 2 22 6 954 6 27 2 167 4 312 2 170 2 465 2 174 4 468 4 181 4 965 4 967 4 792 2 642 2 338 2 193 2 979 2 51 2 981 2 56 2 987 4 497 2 59 2 500 24 1148 2 505 4 1153 2 1155 4 1000 4 362 6 664 2 1156 2 363 4 365 2 218 2 368 2 832 2 65 2 373 2 669 2 1006 4 518 4 222 2 684 2 1020 2 686 2 389 4 540 2 79 4 1024 2 1170 4 862 2 1027 6 397 2 91 2 702 2 550 2 245 2 93 2 402 2 410 2 104 2 726 2 414 2 108 4 107 2 730 2 893 12 731 4 1056 2 896 4 418 2 263 4 265 2 577 12 1060 2 422 16 904 2 578 2 907 2 268 2 1213 4 581 2 125 2 127 2 1075 2 919 4 1225 2 589 6 590 2 281 2 134 6 926 4 927 2 137 4 931 16 1231 2 
796 2 497 2 500 4 846 2 1148 2 281 2 389 2 422 2 927 2 766 2 304 2 578 2 832 2 561 2 564 2 270 2 862 2 
1086 2 1090 2 609 2 298 4 15 2 453 4 454 2 616 2 22 6 954 6 27 2 167 4 312 2 170 2 465 2 318 2 174 4 468 4 181 4 965 4 967 4 792 2 642 2 338 2 193 2 979 2 51 2 981 2 987 4 56 2 59 4 500 24 1148 2 999 2 505 4 1153 2 1155 4 1000 4 362 6 664 2 1156 2 363 4 365 2 218 2 832 2 65 4 373 2 669 2 1006 4 518 4 222 2 385 2 684 2 1020 2 686 2 389 2 540 2 79 4 1024 2 1170 4 862 2 1027 6 397 2 91 2 702 2 245 2 93 2 402 2 247 2 403 2 410 2 726 2 414 4 108 4 107 2 730 2 893 12 731 4 1056 2 896 4 418 2 263 4 577 12 1060 2 422 16 904 2 578 2 907 2 268 2 1213 4 581 2 125 2 127 2 1075 2 919 4 1225 2 589 6 590 2 281 2 134 6 926 4 137 4 931 16 1231 2 
1090 2 609 2 298 4 15 2 301 2 453 4 454 2 616 2 22 6 954 6 27 2 167 4 312 2 170 2 465 2 174 4 468 4 181 4 326 2 965 4 967 4 792 2 642 2 338 2 193 2 979 2 51 2 981 2 56 2 987 4 497 2 59 2 821 2 500 24 1148 2 505 4 1153 2 1155 4 1000 4 362 6 664 2 1156 2 363 4 365 2 218 2 832 2 65 2 834 2 373 2 669 2 1006 4 518 4 222 2 684 2 1020 2 686 2 389 4 540 2 79 4 1024 2 1170 4 862 2 1027 6 397 2 91 2 702 2 245 2 93 2 402 2 247 2 96 2 410 2 726 2 414 4 108 4 107 2 730 2 893 12 731 4 1056 2 896 4 418 2 263 4 577 12 1060 2 422 16 904 2 578 2 907 2 268 2 1213 4 581 2 125 2 127 2 1075 2 919 4 1225 2 589 6 590 2 281 2 134 6 926 4 927 2 137 4 931 16 1231 2 
284 2 604 2 607 2 937 4 6 2 609 2 9 2 10 2 610 2 943 2 941 2 300 2 306 2 949 4 950 2 22 6 952 2 27 2 312 2 316 6 959 10 628 4 630 2 328 2 39 2 331 2 643 2 334 2 338 18 979 2 48 10 51 2 56 12 988 4 347 4 58 26 995 2 664 2 364 2 363 4 365 2 65 11 1003 2 370 11 1004 2 1005 2 66 2 671 4 1014 4 380 2 1017 2 383 2 72 2 73 2 388 2 390 2 389 2 81 2 1024 2 689 2 1026 24 692 2 1027 2 397 2 700 2 1036 4 92 2 94 2 97 2 719 2 408 2 101 10 725 2 726 2 1053 2 107 2 417 6 114 12 1058 2 117 2 422 24 1065 2 121 2 740 2 742 2 126 1 430 4 745 2 1075 2 132 6 1083 6 140 2 142 6 147 2 759 26 760 2 444 2 446 2 447 2 1098 2 453 2 1099 11 764 8 456 2 459 2 460 2 1107 2 769 2 772 2 466 2 471 2 784 10 787 4 790 4 476 2 792 2 188 2 189 2 477 2 799 2 1134 2 803 4 1138 2 203 4 1144 2 819 2 500 30 210 2 504 12 505 28 1154 4 506 2 1155 4 215 14 1156 2 507 4 509 2 216 2 218 2 831 22 221 2 526 8 532 6 534 2 1167 8 229 2 1168 4 543 8 238 2 547 2 242 6 871 2 243 2 873 2 1182 2 246 2 1186 2 884 2 1191 2 1192 2 1194 3 1196 2 1199 2 896 2 263 4 902 2 904 2 907 2 908 2 268 2 581 12 582 2 278 4 589 4 281 2 924 2 597 4 1230 2 1231 2 599 2 
221 2 1191 2 1194 2 1014 2 380 2 338 2 534 2 1099 2 48 2 422 2 1168 2 692 2 56 2 581 2 1144 2 462 2 500 2 1182 2 506 2 831 6 1003 2 65 2 370 2 1230 4 
221 2 1191 2 1194 2 1014 2 380 2 338 2 534 2 1099 2 48 2 422 2 1168 2 692 2 56 2 581 2 1144 2 462 2 500 2 1182 2 506 2 831 6 1003 2 65 2 370 2 1230 4 
221 2 1191 2 1194 2 1014 2 380 2 338 2 534 2 1099 2 48 2 422 2 1168 2 692 2 56 2 581 2 1144 2 462 2 500 2 1182 2 506 2 831 6 1003 2 65 2 370 2 1230 4 
3 2 1013 2 760 2 761 3 1017 2 940 2 1167 6 859 4 949 2 23 2 692 2 955 4 169 2 242 4 400 4 94 2 879 3 324 2 1039 2 633 2 98 4 788 2 790 2 1053 2 1055 2 259 3 338 2 647 4 116 4 422 4 269 6 500 10 278 2 358 2 827 2 64 2 594 2 65 3 1003 2 370 3 
3 2 1013 2 760 2 761 2 1017 2 940 2 1167 4 859 4 949 2 23 2 692 2 955 4 169 2 242 4 400 4 94 2 879 2 324 2 1039 2 633 2 98 4 788 2 790 2 1053 2 1055 2 259 2 338 2 647 4 116 4 422 4 269 6 988 2 500 10 278 2 358 2 827 2 1154 2 64 2 594 2 219 2 65 2 1003 2 370 2 
3 2 1013 2 760 2 761 2 1017 2 940 2 1167 4 859 4 949 2 23 2 692 2 955 4 169 2 242 4 400 4 94 2 879 2 324 2 1039 2 633 2 98 4 788 2 790 2 1053 2 1055 2 259 2 338 2 647 4 116 4 422 4 269 6 988 2 500 10 278 2 358 2 827 2 1154 2 64 2 594 2 219 2 65 2 1003 2 370 2 
3 2 1013 2 760 2 761 2 1017 2 940 2 1167 4 859 4 949 2 23 2 692 2 955 4 169 2 242 4 400 4 94 2 879 2 324 2 1039 2 633 2 98 4 788 2 790 2 1053 2 1055 2 259 2 338 2 647 4 116 4 422 4 269 6 988 2 500 10 278 2 358 2 827 2 1154 2 64 2 594 2 219 2 65 2 1003 2 370 2 
3 2 1013 2 760 2 761 2 1017 2 940 2 1167 4 859 4 949 2 23 2 692 2 955 4 169 2 242 4 400 4 94 2 879 2 324 2 1039 2 633 2 98 4 788 2 790 2 1053 2 1055 2 259 2 338 2 647 4 116 4 422 4 269 6 988 4 500 10 278 2 358 2 827 2 1154 4 64 2 594 2 219 4 65 2 1003 2 370 2 
1215 2 582 2 801 2 463 2 276 2 1149 2 
57 2 427 2 887 2 443 2 276 2 784 2 151 2 
42 2 375 1 889 2 145 2 608 2 293 2 529 1 1133 2 228 2 422 8 1207 2 1210 2 204 2 311 2 1175 1 1176 2 349 2 354 2 500 10 994 2 239 2 776 1 625 2 180 1 365 2 1038 2 
147 2 760 6 1053 6 1017 6 112 2 530 2 975 4 1167 16 116 4 422 6 1138 2 949 6 343 2 23 2 988 4 500 6 278 6 748 2 242 12 1036 2 779 2 132 4 593 2 1154 2 94 6 219 2 1040 2 1228 2 790 6 671 2 
837 7 374 2 1029 1 1088 2 822 2 500 1 586 4 209 2 296 2 551 2 400 2 401 2 422 1 49 2 1139 2 558 2 98 2 859 2 
837 6 374 2 1088 2 822 4 586 4 209 2 551 2 296 4 400 2 401 2 49 2 1139 2 558 4 98 2 859 2 
837 10 374 2 1029 1 1088 8 822 8 500 1 586 4 209 6 551 2 296 8 400 2 401 2 422 1 49 2 1139 2 558 8 98 2 859 2 
837 2 374 2 822 2 586 2 551 2 296 2 400 2 401 2 49 2 1139 2 558 2 98 2 859 2 
678 2 609 2 944 2 453 6 233 2 1174 2 864 2 166 2 956 2 1178 2 627 3 1184 2 717 2 1042 2 726 2 107 2 45 2 896 6 901 2 264 2 422 14 907 2 425 2 984 1 811 6 814 2 124 2 914 2 431 2 207 2 500 14 589 12 925 2 664 2 
676 2 678 2 726 4 107 4 891 2 609 2 45 2 896 6 1093 2 453 6 264 2 422 14 907 2 233 2 811 4 814 2 1174 2 864 2 124 2 166 2 207 2 431 2 992 2 500 16 1178 2 875 2 589 16 627 2 664 2 925 2 717 2 1042 2 
676 2 603 2 678 2 225 2 609 4 150 2 1093 2 12 2 535 2 453 10 233 2 860 1 24 4 864 2 26 4 166 2 956 2 1178 2 701 2 1179 2 875 2 627 2 963 2 559 2 329 2 717 2 1042 2 1189 1 405 2 888 2 412 2 726 4 107 4 891 2 892 2 973 1 45 2 896 12 901 2 1061 4 422 28 907 6 119 2 806 2 811 4 814 2 494 2 124 2 207 2 431 6 500 32 996 1 750 2 589 22 1152 2 752 2 753 2 925 2 664 6 666 2 
676 2 678 2 1089 2 681 2 1016 2 848 2 609 2 382 2 1093 2 152 2 453 20 854 2 230 6 156 2 233 4 21 2 307 2 165 4 1174 2 864 2 166 2 694 2 695 2 546 4 866 4 1178 2 869 2 875 2 553 2 958 2 961 2 962 2 627 2 715 2 322 2 717 2 330 2 1042 4 41 2 185 2 1048 2 1050 2 726 4 1129 2 107 4 891 2 257 6 44 2 45 4 261 2 896 20 1200 2 1202 2 899 2 977 2 264 2 1206 2 422 44 648 2 341 2 198 2 907 2 811 30 814 2 816 2 124 2 744 2 1145 2 207 2 992 2 431 4 500 46 356 2 1219 2 1221 2 280 4 826 2 589 46 828 2 925 2 664 2 596 2 929 2 932 2 1008 2 
424 2 

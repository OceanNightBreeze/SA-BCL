#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR jtb.TokenMgrError 703 910 790 506 554 902 301 374 164 1012 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 485 646 899 535 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 589 493 197 504 129 789 719 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 589 493 197 129 789 719 
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_13(I)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([F[D)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:num_vars()I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:jj_3R_88()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.TokenMgrError:TokenMgrError(Ljava.lang.String;I)V
daikon.inv.Invariant:justified()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_56()Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.ModBitTracker:num_sets()I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.JavaParser:jj_3_10()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.PptSlice1:arity()I
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.TokenMgrError:LexicalError(ZIIILjava.lang.String;C)Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_2_15(I)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ValueTuple:isMissing(I)Z
daikon.Quant:eq(DD)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:isReverse([I[I)Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_69()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_16()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.Ppt:Ppt()V
utilMDE.MathMDE:mod_positive(II)I
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:jj_3R_68()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:jj_3R_53()Z
daikon.Quant:gt(II)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.PptSlice0:arity()I
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.ProglangType:isFloat()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3_14()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_163()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.Quant:subsetOf([J[J)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.ValueTuple:size()I
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfo:relate_var()V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_61()Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_3R_123()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.MathMDE:gcd([I)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:eltsNotEqual([II)Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.WeakHasherMap:size()I
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3_13()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoAux:hashCode()I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:noDups([I)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_148()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:base()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | CONDITION | 3770 | if (x) -> if (!x)
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaCharStream:getEndLine()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I | CONSTANT | 4877 | 40 -> 1
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.ProglangType:isIntegral()Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:jj_3R_118()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:eltsGtIndex([I)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.Invariant:logOn()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParser:jj_3R_96()Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:dimensions()I
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:lt(II)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltsLTE([II)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaCharStream:getBeginLine()I
daikon.Quantify.Constant:Constant(I)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParser:jj_3R_54()Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
daikon.ProglangType:isArray()Z
jtb.JavaParser:jj_3_5()Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:format()Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:setDiff([I[I)[I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:jj_2_4(I)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.diff.Node:Node()V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName:hashCode()I
jtb.JavaParser:jj_3_3()Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
jtb.JavaParser:jj_2_3(I)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_1()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.FuzzyFloat:indexOf([D[D)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_119()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.InvMap:InvMap()V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.Quant:ne(II)Z
daikon.ModBitTracker:split(I)I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:passes()Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Debug:logOn()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:eq(FF)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.ArraysMDE:sum([I)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:concat([I[I)[I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_60()Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:pow(II)I
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:slice([III)[I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:eq(JJ)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:jj_3R_116()Z
jtb.JavaCharStream:backup(I)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaCharStream:BeginToken()C
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:subsetOf([D[F)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:jj_3R_50()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_62()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariants:Invariants()V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String; | RETURN | 48940 | return null
daikon.Quant:memberOf(F[F)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.TokenMgrError:TokenMgrError(ZIIILjava.lang.String;CI)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:jj_3R_55()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.Quant:eltsGTE([II)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.Intern:intern([D)[D
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:negate(I)I
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_scan_token(I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:isPrestate()Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
utilMDE.MathMDE:mod_positive(JJ)J
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(I[I)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_3R_48()Z
daikon.Quant:eltsGT([II)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:new_ppt()V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_3R_58()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptName:isEnterPoint()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:eltsLT([II)Z
daikon.Quant:subsetOf([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.Debug:logDetail()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ValueSet:ValueSet(I)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.Quant:lexGTE([I[I)Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_97()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String; | ASSIGN | 8802 | = null
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfo:isDerived()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.TokenMgrError:addEscapes(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_122()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Quant:pairwiseDivides([I[I)Z
jtb.JavaParser:jj_3R_85()Z
daikon.Quant:sameLength([I[I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:max([I)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_89()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_76()Z
utilMDE.Intern:intern([J)[J
jtb.JavaParser:jj_3R_120()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.RootNode:RootNode()V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_121()Z
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:intersection([I[I)[I
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:union([I[I)[I
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.Quant:lexLT([I[I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isScalar()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1008 2 457 2 494 2 559 2 880 2 821 4 847 2 9 2 404 2 
840 2 96 2 788 2 829 6 257 2 1057 6 259 2 585 2 16 2 856 6 802 2 
907 6 494 2 766 2 543 6 229 6 946 2 155 4 404 2 949 2 950 2 71 2 628 6 685 4 
786 2 826 2 132 26 0 10 195 4 1000 2 443 10 35 6 404 6 835 10 895 2 347 2 245 16 838 30 804 4 494 6 419 4 48 8 767 8 497 2 1092 6 583 12 544 16 1124 16 1125 8 699 2 160 10 394 4 855 10 991 8 
755 6 466 4 
1052 2 
132 4 0 2 925 2 443 4 35 2 835 2 6 2 312 2 314 2 245 2 838 6 146 2 419 2 767 2 583 2 544 2 1124 2 502 2 1060 2 14 2 160 2 855 2 1065 2 
707 4 98 2 132 12 0 4 195 2 583 5 544 8 1124 8 835 4 160 4 7 6 855 4 903 6 268 4 245 8 192 2 838 14 
303 2 558 62 638 2 333 2 676 2 444 4 679 4 369 4 642 4 308 2 483 2 797 2 894 2 106 2 109 2 800 2 138 14 1048 4 534 2 178 4 78 2 292 4 381 2 842 2 81 4 692 10 153 2 579 2 851 4 852 4 127 6 299 10 884 2 917 4 512 2 514 4 591 2 1037 4 362 8 272 2 
1052 2 787 2 330 2 1090 2 353 2 694 2 304 2 727 2 527 2 156 2 
62 2 713 2 560 4 404 4 1076 2 200 2 72 2 565 2 1011 2 1082 2 287 2 9 2 1087 2 876 2 657 2 494 4 656 2 153 2 499 2 18 2 817 2 885 2 1033 4 514 4 1039 2 362 2 674 2 442 2 1105 4 749 2 444 2 893 2 895 2 174 2 315 2 385 2 912 2 773 2 258 2 915 2 630 2 555 2 1127 2 190 2 
707 4 132 48 0 16 742 2 599 2 1000 2 443 6 35 4 404 4 171 8 835 16 611 6 7 6 903 6 42 6 245 32 906 6 763 2 838 54 873 4 378 2 250 4 494 4 419 2 767 18 845 4 772 6 1092 4 544 32 583 22 1124 32 160 16 855 16 670 2 268 4 270 4 991 6 57 2 702 4 
127 2 362 2 78 2 
248 2 165 2 1074 2 463 22 773 2 38 2 606 2 484 2 722 2 218 2 610 2 344 10 775 2 761 2 
705 12 399 2 274 4 859 32 559 2 561 1 278 1 402 2 860 2 404 32 282 1 5 1 409 3 410 2 867 2 137 6 412 2 140 2 415 2 724 2 144 1 874 2 1019 3 875 4 877 1 151 2 12 3 422 2 584 8 731 16 157 2 426 2 589 4 25 2 432 2 440 2 746 2 601 2 166 3 750 4 1043 2 445 1 753 32 891 6 172 2 900 2 450 2 176 2 175 2 452 2 179 2 617 1 316 2 764 2 909 2 461 2 182 24 769 2 50 4 464 3 54 2 467 1 776 2 191 2 59 3 1066 5 922 3 64 2 923 2 334 2 481 2 926 2 927 16 792 2 1075 24 1077 2 794 1 796 4 341 2 76 1 346 2 650 2 653 2 77 1 493 4 208 3 805 2 494 34 941 8 942 2 209 2 84 2 83 2 810 6 211 2 811 2 355 2 1094 2 951 3 504 2 668 3 509 16 91 3 954 2 92 2 819 2 820 2 515 2 823 2 824 2 97 2 520 2 523 1 525 2 368 2 370 1 530 2 836 2 105 2 531 2 237 2 114 4 375 16 688 2 247 2 117 2 377 2 539 2 541 8 542 2 253 2 1118 2 1119 2 121 2 977 2 255 2 696 2 1123 3 850 2 982 1 698 2 984 2 986 1 854 2 266 2 267 2 397 6 
240 2 
235 2 494 2 
494 4 94 2 965 2 
709 4 998 2 276 2 277 2 134 4 403 120 135 4 716 2 862 46 718 2 136 20 566 36 870 2 1012 2 414 2 413 6 569 2 1013 2 1014 2 8 2 570 2 143 2 1018 4 147 4 1021 2 728 4 729 2 577 10 730 38 296 18 1031 14 159 36 19 2 734 4 736 38 1035 4 590 2 301 2 592 2 737 20 594 2 26 8 1040 4 163 34 433 36 302 36 434 22 597 2 28 2 164 2 745 38 600 4 1041 10 31 2 751 2 608 8 1045 14 40 4 612 16 902 2 904 2 762 4 455 36 1054 2 911 2 910 102 1055 2 459 2 49 4 621 2 320 4 185 4 623 2 322 2 324 2 1062 4 783 2 58 2 1067 8 1069 2 790 2 194 2 478 120 1072 4 67 24 336 2 68 2 69 2 641 2 1078 2 198 2 201 4 1081 22 202 4 343 14 652 120 651 20 490 2 79 14 655 4 352 2 943 4 496 4 85 2 1091 2 1093 2 814 2 815 2 88 2 215 4 506 2 510 2 1097 4 219 2 1100 2 672 2 822 2 95 2 958 4 1103 4 827 4 366 38 1106 4 367 24 233 24 680 10 372 38 682 2 683 4 374 2 244 4 537 14 116 4 973 4 841 4 380 2 844 2 1120 6 545 4 393 2 554 2 700 10 701 2 128 6 269 2 703 38 557 24 
551 1 574 2 1068 2 1073 2 
574 2 451 2 
275 2 669 2 362 2 704 2 
994 2 275 2 669 2 1107 2 362 2 704 2 
552 2 275 2 574 2 394 2 362 2 938 2 
385 2 327 2 
275 2 394 2 686 2 362 2 
421 2 944 2 
437 2 849 2 
853 2 978 2 
148 2 441 2 
148 2 1116 2 437 2 
148 2 437 2 491 2 
148 2 437 2 294 2 
148 2 437 2 1007 2 
275 2 477 2 605 6 447 2 283 2 886 2 362 2 517 6 
181 2 643 2 
994 2 275 2 574 2 1104 2 394 2 362 2 938 2 
574 2 1084 2 938 2 
574 2 979 2 938 2 
1073 2 112 2 643 2 
574 2 938 2 
45 2 643 2 
574 2 309 2 
1073 2 329 2 643 2 
853 2 249 2 1073 2 
1058 2 148 2 1073 2 
421 2 1073 2 1003 2 
437 2 1073 2 546 2 
667 2 643 2 
908 2 574 2 
1061 2 853 2 
148 2 41 2 
421 2 139 2 
437 2 391 2 
383 2 643 2 
437 2 449 2 
382 2 421 2 
148 2 550 2 
1017 2 853 2 
465 2 1073 2 329 2 643 2 
465 2 1073 2 588 2 329 2 643 2 
1071 2 1073 2 643 2 
1073 2 349 2 643 2 
635 2 1004 2 424 2 453 2 
706 2 807 2 317 2 102 4 1122 2 210 2 463 6 338 2 231 4 13 2 625 2 74 2 798 2 758 2 113 2 243 2 723 2 654 2 
818 2 1073 2 
399 2 
705 8 131 4 274 4 859 4 559 2 404 26 410 2 137 6 412 2 415 4 145 2 875 2 589 4 426 2 432 2 740 2 440 2 750 2 753 6 891 2 175 2 613 2 617 2 316 2 319 2 54 2 774 2 776 2 919 2 191 2 334 2 639 2 926 2 792 2 796 4 933 2 342 2 650 2 493 4 805 2 494 26 82 2 659 2 209 2 84 2 810 2 504 2 954 2 515 2 823 2 97 2 520 2 675 4 523 2 529 2 530 2 236 2 968 2 114 2 375 6 688 2 539 2 541 2 1119 6 977 2 696 2 387 2 850 2 698 2 984 2 553 2 266 2 267 2 397 4 
705 8 131 4 274 4 859 4 559 2 404 26 410 2 137 6 412 2 415 4 145 2 875 2 589 4 426 2 432 2 740 2 440 2 750 2 753 6 891 2 175 2 613 2 1050 2 617 2 316 2 769 2 319 2 54 2 774 2 776 2 919 2 191 2 334 2 639 2 926 2 792 2 796 4 342 2 650 2 493 4 805 2 494 26 82 2 659 2 209 2 83 2 84 2 810 2 504 2 954 2 1099 2 92 2 515 2 823 2 97 2 520 2 675 4 523 2 228 2 530 2 236 2 968 2 114 2 375 6 688 2 539 2 541 2 1119 6 977 2 696 2 387 2 850 2 698 2 984 2 266 2 267 2 397 6 
458 2 
645 2 27 2 
274 2 788 2 404 6 564 4 1009 2 796 2 721 2 720 2 137 4 725 2 291 2 494 12 1025 2 881 8 581 2 666 2 359 2 216 2 507 4 1098 4 23 2 515 2 823 2 739 10 887 2 959 2 96 2 435 4 598 2 439 2 828 2 747 2 829 6 524 2 1110 2 39 4 170 2 609 2 896 2 175 2 533 2 1113 2 177 8 688 2 975 2 840 4 977 2 913 2 125 2 257 4 1057 6 323 2 627 2 698 2 188 2 856 6 920 4 191 2 556 2 993 2 
274 2 788 2 562 2 404 6 793 2 796 2 564 4 1009 2 721 2 720 2 137 4 725 2 291 2 494 12 1025 2 881 8 581 2 666 2 359 2 216 2 507 4 1098 4 23 2 515 2 823 2 739 10 887 2 959 2 96 2 435 4 598 2 439 2 828 2 747 2 829 8 1110 2 607 4 39 4 170 2 609 2 896 2 175 2 533 2 1113 2 177 8 688 2 840 4 977 2 913 2 125 2 257 4 1057 8 259 2 323 2 627 2 698 2 188 2 856 6 191 2 920 4 556 2 993 2 
291 2 840 2 1025 2 581 2 257 2 1110 2 1057 2 627 2 564 4 721 2 896 2 507 2 188 2 1098 4 1113 2 23 2 856 2 556 2 
274 2 788 2 404 6 564 4 1009 2 796 2 721 2 720 2 137 4 725 2 291 2 494 12 1025 2 881 4 581 2 666 2 359 2 216 2 507 4 1098 4 23 2 515 2 823 2 739 6 887 2 959 2 435 4 598 2 439 2 828 2 747 2 829 6 524 2 1110 2 39 4 170 2 609 2 896 2 175 2 533 2 1113 2 177 4 688 2 975 2 840 4 977 2 913 2 125 2 257 4 1057 6 259 2 323 2 627 2 698 2 188 2 856 4 920 4 191 2 556 2 993 2 
274 2 788 2 404 6 564 4 1009 2 796 2 721 2 720 2 137 4 725 2 291 2 494 12 1025 2 881 4 581 2 666 2 359 2 16 2 216 2 507 4 1098 4 23 2 515 2 823 2 739 6 887 2 959 2 435 4 598 2 439 2 828 2 747 2 829 6 524 2 1110 2 39 4 170 2 609 2 896 2 175 2 533 2 1113 2 177 4 688 2 975 2 840 4 977 2 913 2 125 2 257 4 1057 4 323 2 627 2 698 2 188 2 856 6 920 4 191 2 556 2 993 2 
274 2 788 2 404 6 564 4 1009 2 796 2 721 2 720 2 137 4 725 2 291 2 494 12 1025 2 881 8 581 2 666 2 359 2 216 2 507 4 1098 4 23 2 515 2 823 2 739 6 887 2 959 2 96 2 435 4 598 2 439 2 828 2 747 2 829 6 524 2 1110 2 39 4 170 2 609 2 896 2 175 2 533 2 1113 2 177 4 688 2 975 2 840 4 977 2 913 2 125 2 257 4 1057 6 323 2 627 2 698 2 188 2 856 6 920 4 191 2 556 2 993 2 
274 2 788 2 404 6 796 2 564 4 1009 2 721 2 720 2 137 4 725 2 291 2 494 12 1025 2 881 8 581 2 666 2 359 2 16 2 216 2 507 4 1098 4 23 2 515 2 823 2 739 10 887 2 959 2 96 2 435 4 598 2 439 2 828 2 747 2 829 8 524 2 1110 2 39 4 170 2 609 2 896 2 175 2 533 2 1113 2 177 8 688 2 975 2 840 4 977 2 913 2 125 2 257 4 1057 6 323 2 627 2 698 2 188 2 856 8 920 4 191 2 556 2 993 2 
274 2 788 2 404 6 564 4 1009 2 796 2 721 2 720 2 137 4 725 2 291 2 494 12 1025 2 881 8 581 2 666 2 359 2 216 2 507 4 1098 4 23 2 515 2 823 2 739 10 887 2 959 2 96 2 435 4 598 2 439 2 828 2 747 2 829 6 524 2 1110 2 39 4 170 2 609 2 896 2 175 2 533 2 1113 2 177 8 688 2 975 2 840 4 977 2 913 2 125 2 257 4 1057 6 323 2 627 2 698 2 188 2 856 6 920 4 191 2 556 2 993 2 
273 2 274 4 859 2 559 2 564 4 868 2 567 6 290 1 291 2 872 6 875 2 881 2 581 2 16 4 23 2 589 4 887 2 598 2 306 6 32 4 34 6 891 2 39 6 609 2 896 2 898 2 613 2 47 8 318 6 913 4 319 2 624 2 626 2 627 2 323 2 54 2 914 2 919 2 920 8 634 6 334 2 930 2 934 2 650 12 350 2 937 2 939 2 82 4 666 2 359 2 954 2 92 2 94 6 955 2 957 6 959 2 675 4 963 6 108 2 110 1 114 2 375 6 971 2 688 2 974 2 975 2 977 2 384 10 696 2 124 1 125 2 981 2 388 2 389 2 698 2 984 2 397 6 993 4 705 4 398 2 997 6 400 2 401 2 404 24 408 2 1009 2 720 2 410 2 721 2 137 6 412 2 141 1 142 6 725 2 149 6 1022 2 150 2 1025 2 154 1 739 2 431 1 432 2 435 4 439 2 747 2 748 6 750 2 167 2 1044 6 753 8 170 2 175 2 759 4 1053 7 769 2 1057 4 188 2 1063 2 191 2 788 4 792 2 796 4 1079 2 199 7 1080 2 1086 2 493 4 494 46 209 2 810 2 504 2 507 4 216 2 1098 4 220 1 515 2 823 2 828 2 829 12 521 2 830 2 232 1 1110 2 530 2 235 6 238 1 240 6 533 2 1113 2 840 4 541 2 1119 6 254 2 850 2 257 4 266 2 856 8 267 2 556 2 
398 2 705 8 273 2 859 2 274 4 559 2 997 6 401 2 400 2 404 26 408 2 1009 2 564 4 868 2 721 2 410 2 720 2 137 6 567 6 412 2 142 6 415 2 725 2 291 2 872 6 149 6 875 4 1022 2 150 2 1025 2 881 6 581 2 23 2 589 4 739 2 887 2 432 2 435 4 598 2 439 2 306 6 747 2 748 6 750 4 32 4 34 6 167 2 1044 6 891 2 753 8 39 6 170 2 609 2 896 2 898 2 613 2 175 2 759 4 47 8 318 6 769 2 913 4 319 2 624 2 626 2 1057 8 323 2 627 2 914 2 54 2 326 2 188 2 189 2 1063 2 919 2 920 8 191 2 634 6 788 4 334 2 792 2 1079 2 796 4 1080 2 930 2 934 2 650 12 350 2 1086 2 937 2 493 4 939 2 494 48 82 4 209 2 810 2 666 2 359 2 504 2 216 2 507 4 954 2 1098 4 92 2 515 2 94 6 823 2 955 2 957 6 959 2 96 4 828 2 675 4 521 2 829 12 830 2 963 6 1110 2 530 2 235 6 108 2 240 6 533 2 1113 2 114 4 971 2 375 6 688 2 974 2 975 2 541 2 840 4 1119 6 977 2 254 2 384 10 696 2 125 2 981 2 850 2 388 2 257 4 389 2 984 2 698 2 266 2 267 2 856 8 556 2 993 4 397 6 
398 2 705 8 273 2 859 2 274 4 559 2 997 6 401 2 400 2 404 26 408 2 1009 2 564 4 868 2 721 2 410 2 720 2 137 6 567 6 412 2 142 6 415 2 725 2 291 2 872 6 149 6 875 4 1022 2 150 2 1025 2 881 6 581 2 23 2 589 4 739 6 887 2 432 2 435 4 598 2 439 2 306 6 747 2 748 6 750 4 32 4 34 6 167 2 1044 6 891 2 753 8 39 6 170 2 609 2 896 2 898 2 613 2 175 2 759 4 177 4 47 8 318 6 769 2 913 4 319 2 624 2 626 2 1057 8 323 2 627 2 914 2 54 2 326 2 188 2 189 2 1063 2 919 2 920 8 191 2 634 6 788 4 334 2 792 2 1079 2 796 4 1080 2 930 2 934 2 650 12 350 2 1086 2 937 2 493 4 939 2 494 48 82 4 209 2 810 2 666 2 359 2 504 2 216 2 507 4 954 2 1098 4 92 2 515 2 94 6 823 2 955 2 957 6 959 2 96 4 828 2 675 4 521 2 829 12 830 2 963 6 1110 2 530 2 235 6 108 2 240 6 533 2 1113 2 114 4 971 2 375 6 688 2 974 2 975 2 541 2 840 4 1119 6 977 2 254 2 384 10 696 2 125 2 981 2 850 2 388 2 257 4 389 2 984 2 698 2 266 2 267 2 856 8 556 2 993 4 397 6 
273 2 274 4 859 4 559 2 564 4 868 2 567 6 291 2 872 6 875 4 879 2 881 6 581 2 16 2 23 2 589 4 887 2 598 2 306 6 32 4 36 2 34 6 891 4 39 6 609 2 896 2 898 2 613 4 47 8 318 6 913 4 319 2 624 2 626 2 627 2 323 2 54 2 914 2 326 2 916 6 328 2 919 2 920 8 634 12 334 2 928 6 930 2 934 2 650 10 350 2 937 2 939 2 82 4 666 2 359 2 954 2 92 2 94 12 955 2 957 12 96 4 959 2 675 6 963 12 371 6 108 2 114 4 375 8 971 2 688 2 974 2 975 2 690 6 977 2 384 8 696 2 125 2 981 2 388 2 389 2 698 2 984 2 987 6 397 6 993 4 705 10 398 2 997 6 401 2 400 2 404 24 405 6 408 2 1009 2 720 2 410 2 721 2 137 6 412 2 142 6 415 2 725 2 149 6 1022 2 1025 2 735 2 739 6 432 2 435 4 439 2 747 2 748 6 750 4 1042 6 167 2 1044 6 753 12 170 2 175 2 759 4 177 4 769 2 184 2 186 6 1057 10 188 2 189 2 1063 2 191 2 788 4 476 6 792 2 796 4 1079 2 1080 2 1086 2 493 4 494 52 209 2 810 4 504 2 507 4 216 2 1098 4 515 2 221 2 823 2 828 2 829 16 521 2 830 2 1110 2 530 2 235 12 240 12 533 2 1113 2 242 2 840 4 541 4 1119 8 254 2 547 2 850 2 257 4 259 2 266 2 856 10 267 2 556 2 
96 2 435 2 598 2 788 2 439 2 828 2 829 4 747 2 39 2 1009 2 564 2 609 2 896 2 720 2 533 2 1113 2 177 4 975 2 725 2 291 2 840 4 494 4 1025 2 125 2 881 6 257 4 1057 6 627 2 359 2 1098 2 23 2 856 6 920 2 739 4 556 2 
399 2 274 4 859 3 559 2 404 24 1009 2 564 2 720 2 410 2 137 6 412 2 291 2 725 2 150 2 1025 2 881 6 23 2 589 4 739 2 432 2 435 2 436 3 598 2 439 2 747 2 753 8 891 3 39 2 170 2 609 2 896 2 175 2 764 2 909 2 769 2 319 2 1057 6 627 2 54 2 919 2 920 2 191 2 788 2 334 2 792 2 1077 2 796 4 486 2 650 4 649 2 493 4 494 28 82 2 209 2 809 2 810 3 359 2 504 2 1098 2 954 2 92 2 515 2 823 2 96 2 828 2 675 4 829 4 533 2 1113 2 375 6 688 2 538 2 975 2 840 4 120 2 1119 6 977 2 384 2 696 2 125 2 850 2 257 4 698 2 984 2 266 2 856 6 267 2 556 2 397 6 
720 2 125 2 469 2 
720 2 125 2 469 2 
705 4 274 4 859 2 559 2 1001 4 404 16 564 2 1009 2 720 4 869 2 137 6 412 2 142 2 145 4 875 4 1022 2 881 6 15 2 16 4 23 2 589 4 739 6 432 2 435 2 602 2 750 4 32 2 604 2 753 2 39 4 898 2 1047 4 175 2 759 2 177 4 769 2 770 2 913 2 319 2 321 2 1057 12 323 2 627 4 54 2 188 2 919 2 469 2 191 2 920 4 788 4 334 2 480 2 792 2 796 4 932 2 650 4 493 4 494 24 82 6 660 2 209 2 666 2 948 2 504 2 216 2 507 4 952 2 954 2 1098 2 92 2 515 2 823 2 96 4 828 2 521 2 829 16 104 2 1110 2 530 4 107 2 687 2 114 4 375 2 688 2 840 4 1119 2 695 2 977 2 384 2 696 2 125 6 850 2 549 2 257 4 259 4 698 2 984 2 985 2 266 2 267 2 856 12 556 2 993 4 397 6 
1070 2 494 4 695 2 384 2 32 2 581 2 404 2 1080 2 15 2 932 2 650 2 760 2 971 2 142 2 191 2 27 2 118 2 
705 4 274 4 859 4 559 2 1001 4 404 16 564 2 1009 2 720 4 869 2 137 6 412 2 142 2 145 4 875 4 1022 2 881 6 15 2 16 4 23 2 589 4 739 6 887 2 432 2 435 2 602 2 750 4 604 2 753 2 39 4 898 2 1047 4 175 2 759 2 1049 2 177 4 769 2 770 2 913 4 319 2 1057 12 323 2 627 4 54 2 188 2 778 2 919 2 469 2 920 4 191 2 788 4 334 2 480 4 792 2 70 2 796 4 932 2 650 2 493 4 494 24 82 6 660 2 209 2 666 2 948 2 87 2 504 2 216 2 507 4 954 2 1098 2 92 2 515 2 823 2 96 4 828 2 521 2 829 16 1110 2 530 4 107 2 111 2 114 4 375 2 688 2 840 4 1119 2 695 2 977 2 696 2 125 6 850 2 549 2 257 4 259 4 698 2 984 2 985 2 266 2 267 2 856 12 556 2 993 4 397 6 
705 4 274 4 859 2 559 2 1001 4 404 16 564 2 1009 2 720 4 869 2 137 6 412 2 142 2 416 2 145 4 875 4 1022 2 881 6 586 2 15 2 16 4 23 2 589 4 739 6 887 2 432 2 435 2 602 2 750 4 32 2 604 2 753 2 39 4 898 2 1047 4 175 2 759 2 177 4 769 2 770 2 913 4 319 2 1057 12 323 2 627 4 54 2 188 2 780 2 919 2 469 2 191 2 920 4 788 4 334 2 480 2 792 2 796 4 932 2 650 4 493 4 494 24 82 6 660 2 209 2 666 2 948 2 504 2 216 2 507 4 954 2 1098 2 92 2 515 2 823 2 96 4 828 2 521 2 829 16 1110 2 530 4 967 2 107 2 114 4 375 2 688 2 840 4 1119 2 695 2 977 2 384 2 696 2 125 6 697 2 850 2 549 2 257 4 259 4 698 2 984 2 985 2 266 2 267 2 856 12 556 2 993 4 397 6 
858 12 274 4 859 19 0 4 559 4 1 3 3 2 563 2 861 2 281 2 864 2 866 2 284 2 568 2 871 2 572 2 10 3 293 2 292 2 575 6 879 2 878 2 582 2 295 2 583 6 300 4 24 22 589 6 595 2 596 2 599 4 888 2 889 3 307 2 36 2 891 19 310 2 897 2 899 2 311 2 901 2 313 2 613 46 903 6 616 2 617 2 619 2 620 4 52 38 622 2 626 2 54 2 325 2 328 2 919 2 632 2 631 2 637 4 63 2 331 2 65 2 639 2 924 4 927 4 642 2 339 2 929 6 73 2 342 2 934 2 345 2 646 2 650 2 649 2 937 2 80 2 351 2 658 2 82 2 659 2 663 4 662 2 947 2 354 2 356 2 358 2 89 4 90 2 954 2 92 4 956 2 955 4 363 2 99 12 960 2 961 2 675 12 677 2 678 2 679 2 369 2 964 2 681 2 108 2 968 2 969 2 375 14 972 4 688 2 974 2 119 2 379 2 120 2 977 2 696 2 387 2 126 2 983 2 984 4 698 2 392 2 395 2 991 6 397 12 705 46 132 12 710 20 711 2 996 2 133 8 404 30 1006 4 410 2 137 6 411 12 412 4 1015 2 1016 4 1020 4 1023 2 420 2 1027 2 1029 2 1028 2 1030 10 1032 2 160 4 735 2 1034 3 161 10 425 2 162 2 430 2 740 2 741 2 436 2 744 2 753 28 169 2 446 2 1046 10 175 2 454 2 456 2 763 2 1051 12 180 2 767 4 768 2 462 4 769 4 184 2 187 2 774 2 777 12 1063 2 781 4 468 40 782 2 191 2 471 2 470 2 472 2 473 2 474 14 475 3 791 2 193 4 196 2 796 4 485 2 486 2 489 2 1085 2 205 2 207 2 493 6 1089 24 494 40 808 2 810 16 809 2 1092 4 213 2 1095 4 505 14 504 4 816 4 508 2 509 8 513 4 515 2 823 2 222 4 1101 2 224 2 518 2 519 2 227 4 523 2 1108 2 526 2 528 2 1109 2 234 2 833 4 530 4 835 4 236 14 535 2 242 2 245 8 246 2 1114 2 838 16 541 20 252 2 843 4 1119 14 1121 2 846 2 848 2 547 2 544 8 548 2 850 2 1124 8 256 10 852 2 260 1 1126 2 263 2 855 4 265 2 266 4 267 2 268 4 
473 2 859 2 675 2 677 2 404 2 861 2 891 2 753 2 73 2 410 2 1046 4 613 6 1083 2 375 2 454 2 10 2 494 2 1119 2 810 2 947 2 622 2 256 2 161 2 470 2 
473 2 859 2 675 2 677 2 404 2 861 2 891 2 753 2 73 2 410 2 1046 4 613 6 1083 2 375 2 454 2 10 2 494 2 1119 2 810 2 947 2 622 2 256 2 161 2 470 2 
473 2 859 2 675 2 677 2 404 2 861 2 891 2 753 2 73 2 410 2 1046 4 613 6 1083 2 375 2 454 2 10 2 494 2 1119 2 810 2 947 2 622 2 256 2 161 2 470 2 
132 4 0 2 859 3 889 3 133 6 227 2 1 3 890 4 927 2 404 4 832 3 753 2 891 3 795 2 754 2 835 2 892 2 410 2 969 4 871 4 536 2 245 2 838 5 494 10 771 2 183 2 1092 2 544 2 1124 2 160 2 509 2 855 2 361 2 1064 2 425 4 427 2 991 4 1036 2 470 2 956 4 
132 4 0 2 859 2 889 2 133 6 227 2 1 2 1000 2 890 4 927 2 404 4 832 2 753 2 891 2 795 2 754 2 835 2 892 2 410 2 969 4 871 4 536 2 245 2 838 4 494 10 767 2 771 2 183 2 583 2 1092 2 544 2 1124 2 160 2 509 2 855 2 361 2 1064 2 425 4 427 2 991 4 1036 2 470 2 956 4 
132 4 0 2 859 2 889 2 133 6 227 2 1 2 1000 2 890 4 927 2 404 4 832 2 753 2 891 2 795 2 754 2 835 2 892 2 410 2 969 4 871 4 536 2 245 2 838 4 494 10 767 2 771 2 183 2 583 2 1092 2 544 2 1124 2 160 2 509 2 855 2 361 2 1064 2 425 4 427 2 991 4 1036 2 470 2 956 4 
132 4 0 2 859 2 889 2 133 6 227 2 1 2 1000 2 890 4 927 2 404 4 832 2 753 2 891 2 795 2 754 2 835 2 892 2 410 2 969 4 871 4 536 2 245 2 838 4 494 10 767 2 771 2 183 2 583 2 1092 2 544 2 1124 2 160 2 509 2 855 2 361 2 1064 2 425 4 427 2 991 4 1036 2 470 2 956 4 
132 4 0 2 859 2 889 2 133 6 227 2 1 2 1000 4 890 4 927 2 404 4 832 2 753 2 891 2 795 2 754 2 835 2 892 2 410 2 969 4 871 4 536 2 245 2 838 4 494 10 767 4 771 2 183 2 583 4 1092 2 544 2 1124 2 160 2 509 2 855 2 361 2 1064 2 425 4 427 2 991 4 1036 2 470 2 956 4 
236 2 995 2 693 2 365 2 2 2 203 2 733 2 
808 2 647 2 152 2 203 2 980 2 60 2 
712 2 333 1 101 2 305 2 103 2 676 1 29 1 831 2 230 2 404 8 644 2 239 2 935 2 571 1 688 2 976 2 494 10 495 2 578 2 423 2 55 2 629 1 22 2 1038 2 516 2 634 2 
132 12 0 6 791 2 1000 2 404 6 200 2 171 2 835 6 611 4 1112 2 903 4 287 2 245 6 838 15 494 6 767 3 845 2 945 2 544 6 882 2 1092 2 583 5 1124 6 160 6 300 2 855 6 268 2 991 4 57 1 595 2 223 2 
691 4 438 1 1117 2 226 2 494 1 714 2 1024 2 404 1 966 7 297 2 158 2 989 2 969 2 44 2 425 2 593 2 936 2 956 2 
691 4 1117 2 226 2 714 2 1024 2 966 6 297 4 158 4 989 2 969 2 425 2 44 4 593 2 936 2 956 2 
691 4 438 1 1117 6 226 2 494 1 714 2 1024 2 404 1 966 10 297 8 158 8 989 2 969 2 425 2 44 8 593 2 936 8 956 2 
691 2 226 2 714 2 1024 2 966 2 297 2 158 2 989 2 969 2 425 2 44 2 593 2 956 2 
999 4 715 12 280 2 1005 2 404 80 863 6 719 2 1010 4 412 10 286 6 289 2 288 4 573 22 726 2 418 4 1026 13 580 4 732 4 298 3 17 6 20 2 589 44 428 4 429 12 738 6 752 4 33 6 37 12 168 4 173 2 756 6 448 6 311 2 614 8 757 6 905 12 615 4 46 6 769 20 1056 2 1059 2 785 2 784 6 633 1 61 2 921 6 636 6 789 2 65 2 479 2 337 12 482 6 197 2 340 1 488 4 801 6 204 2 348 8 206 12 803 42 493 38 1088 12 494 92 806 2 661 6 498 12 665 6 86 6 214 2 501 6 813 6 354 2 357 4 504 4 1096 4 671 4 953 6 511 6 92 20 825 6 225 2 364 2 522 6 532 6 373 12 837 2 241 4 115 4 689 6 376 2 839 6 251 12 123 6 386 6 261 2 262 2 988 2 264 6 266 10 857 6 396 6 129 2 397 90 
708 2 789 2 65 2 66 2 640 2 279 2 335 2 1002 4 197 2 404 30 4 2 719 2 487 2 412 2 204 2 206 2 803 2 492 2 493 14 417 4 806 2 494 30 212 2 500 2 214 2 354 2 504 2 21 2 20 2 511 2 360 4 589 14 429 2 1102 2 364 2 743 2 30 2 752 20 834 2 311 2 373 2 970 2 1111 2 689 2 839 2 540 2 618 2 765 2 460 2 122 2 51 2 390 2 53 2 266 2 918 2 990 2 271 2 129 2 633 2 992 2 397 26 130 2 
404 70 717 2 863 4 406 4 865 6 407 2 719 2 1010 4 285 2 412 6 286 4 289 5 288 4 573 34 418 4 1026 10 576 32 11 10 580 4 732 4 883 8 587 4 17 4 21 2 589 44 428 4 429 10 738 4 603 8 752 14 33 4 37 6 168 4 311 2 614 6 757 4 615 4 43 10 905 10 46 4 769 28 56 4 779 2 784 4 921 8 636 4 789 2 332 4 65 2 479 2 337 14 482 4 931 16 75 2 799 16 801 4 204 2 348 9 206 10 803 24 493 36 1088 24 494 78 940 4 661 4 498 24 664 8 665 4 812 2 86 4 813 6 214 2 501 16 354 2 357 4 503 2 504 2 217 2 1096 2 671 5 953 4 511 4 92 30 673 2 825 4 100 4 962 10 532 4 684 8 373 10 241 5 837 2 115 4 689 4 839 4 251 8 123 4 386 4 261 2 262 2 988 5 264 4 266 6 857 8 396 4 129 2 397 104 
61 2 789 2 65 2 999 2 715 10 280 2 404 26 719 2 285 2 488 2 801 2 412 2 648 2 286 2 204 2 348 6 289 2 206 6 803 8 493 14 573 6 494 28 1026 2 214 2 813 2 354 2 298 2 504 2 17 2 1096 2 21 2 671 4 511 4 92 12 93 2 589 14 429 6 738 4 752 14 37 2 173 2 311 2 373 6 614 4 905 2 689 4 839 4 769 12 1056 2 1059 2 988 2 264 4 266 2 396 4 785 2 129 2 784 2 633 2 397 40 
1115 2 

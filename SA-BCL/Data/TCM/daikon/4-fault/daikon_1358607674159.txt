#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V ERROR java.lang.NullPointerException 870 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 274 701 581 785 822 224 1015 970 17 537 1045 65 1160 618 300 456 1050 189 1107 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V ERROR java.lang.NullPointerException 870 460 
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 132 1094 313 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParser:jj_3R_120()Z
daikon.PptSlice1:arity()I
daikon.ValueTuple:isMissing(I)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:new_ppt()V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_2_12(I)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.diff.InvMap:InvMap()V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:isReverse([I[I)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:jj_2_21(I)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Debug:logOn()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_73()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfo:isPrestate()Z
daikon.PptSlice0:arity()I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3R_161()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
jtb.JavaParser:jj_3R_55()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_3R_77()Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:lexGTE([I[I)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.test.FormatTestCase:passes()Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.ProglangType:isFloat()Z
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:jj_3R_125()Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:isDerived()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:jj_3_15()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_3R_57()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_3_14()Z
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaCharStream:BeginToken()C
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqual([II)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:jj_2_18(I)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.Quant:eq(FF)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String; | ASSIGN | 14599 | = null
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.Ppt:Ppt()V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_20()Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:jj_3_36()Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
utilMDE.MathMDE:pow_fast(II)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression; | STATEMENT | 66792 | stmt -> ;
daikon.Quant:lte(II)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_134()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3R_56()Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.ProglangType:baseIsScalar()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
utilMDE.WeakHasherMap:size()I
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:eltwiseEqual([I)Z
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_48()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.JavaParser:jj_3_16()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_123()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3R_81()Z
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfo:relate_var()V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf([D[D)Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_117()Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.JavaParser:jj_3_10()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:isLiteralConstant()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.Node:Node()V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParser:jj_3R_114()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:lexNotEqual([I[I)Z
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.Quant:subsetOf([B[I)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ModBitTracker:num_sets()I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:noDups([I)Z
jtb.JavaCharStream:backup(I)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfo:isIOAArray()Z
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_96()Z
daikon.Quant:memberOf(D[F)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.JavaParser:jj_3_3()Z
daikon.ProglangType:base()Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:memberOf(F[F)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_163()Z
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:jj_2_16(I)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.Quant:setDiff([I[I)[I
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:ne(II)Z
daikon.Quant:eq(DD)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_27()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.ValueTuple:size()I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.ModBitTracker:num_vars()I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:jj_3R_121()Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_61()Z
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_115()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:jj_2_14(I)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE:sum([I)I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaCharStream:readChar()C
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.inv.Invariant:justified()Z
daikon.ModBitTracker:split(I)I
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:memberOf(F[D)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParser:jj_3_5()Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3_4()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
utilMDE.Intern:intern([J)[J
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:eltsLTE([II)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfo:isPointer()Z
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.ProglangType:isScalar()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.Ppt:indexOf(Ljava.lang.String;)I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_21()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_53()Z
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3R_88()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.ProglangType:isArray()Z
jtb.JavaParser:jj_3R_89()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_80()Z
daikon.diff.RootNode:RootNode()V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.Invariant:logOn()Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParser:jj_3R_119()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DD)D
jtb.JavaParser:jj_2_10(I)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
jtb.JavaParser:jj_3R_122()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.Quant:subsetOf([F[F)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:min([I)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:gt(II)Z
utilMDE.ArraysMDE:noDuplicates([I)Z | ASSIGN | 57082 | = null
jtb.JavaParser:jj_3R_135()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:eltsNotEqual([II)Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_85()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:getConfidence()D
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.Invariant:isWorthPrinting()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.MathMDE:mod_positive(JJ)J
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_29()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_3R_72()Z
daikon.inv.Invariants:Invariants()V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_58()Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_2_15(I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eq(II)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:gte(II)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_3R_62()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:lexGT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:max([I)I
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_25()Z
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_22()Z
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_3R_68()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_3_30()Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3_35()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.PptSlice2:arity()I
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_63()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.ModBitTracker:num_samples()I
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:lexLT([I[I)Z
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:pairwiseGT([I[I)Z
jtb.JavaParser:jj_3R_47()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_12()Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
utilMDE.Intern:intern([I)[I
daikon.VarInfo:name()Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:jj_2_35(I)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([I[I)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:jj_3_18()Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(S[S)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.JavaCharStream:FillBuff()V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:jj_3R_162()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.ProglangType:isPointerFileRep()Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern([D)[D
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_3_13()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.LimitedSizeIntSet:size()I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:jj_3R_116()Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
573 2 51 2 915 2 886 2 1237 4 825 2 291 2 106 2 1072 2 
553 2 720 2 418 2 647 6 730 2 731 2 522 2 303 2 927 6 599 2 1171 6 
348 4 143 2 812 2 225 6 935 6 20 2 291 2 959 6 738 2 393 4 509 2 1072 2 48 6 
1129 30 183 8 1130 10 854 4 145 4 771 2 536 10 230 2 1101 16 944 16 695 6 1072 6 82 10 165 2 1207 8 559 2 291 6 560 8 59 26 752 2 295 4 371 10 996 10 173 2 174 4 452 2 1002 8 1122 6 213 12 846 16 
566 4 967 6 
469 2 
1179 2 1129 6 1130 2 536 2 1101 2 538 2 318 2 944 2 906 2 321 2 1199 2 82 2 554 2 560 2 59 4 371 2 996 4 1000 2 174 2 1122 2 213 2 305 2 846 2 
220 2 1129 14 854 2 1130 4 4 4 166 6 536 4 59 12 1101 8 371 4 944 8 953 6 429 4 359 2 213 5 846 8 82 4 
463 4 149 2 271 2 192 2 776 2 353 4 899 2 902 2 430 2 945 4 202 2 436 2 548 2 913 2 1073 4 1241 10 510 62 638 2 916 4 289 2 678 4 448 2 749 4 58 14 169 4 89 2 90 2 796 4 924 4 884 2 374 4 1220 2 487 2 1121 4 26 10 97 4 572 2 1177 2 30 6 413 8 
490 2 5 2 469 2 242 2 1208 2 209 2 596 2 1227 2 716 2 175 2 
573 2 443 2 830 2 448 2 562 2 924 2 542 2 374 4 173 2 1255 2 648 2 1221 2 1019 2 866 2 214 2 870 2 1022 2 308 2 703 2 413 2 14 2 364 2 
765 4 1129 54 182 2 1130 16 183 6 4 4 536 16 858 6 1101 32 944 32 695 4 429 4 1060 2 111 8 389 4 867 4 119 6 1072 4 82 16 986 2 166 6 291 4 59 48 560 18 88 6 371 16 1211 2 953 6 996 6 682 4 1218 4 174 2 452 2 1169 2 1122 4 213 22 652 6 846 32 377 2 
30 2 413 2 776 2 
346 2 1133 2 1079 2 497 2 971 2 837 2 952 2 1104 22 260 2 824 2 650 2 737 2 506 10 1124 2 
141 1 311 2 767 16 462 2 770 3 937 2 612 16 940 2 619 2 620 3 943 3 12 2 11 2 779 2 153 2 631 2 13 2 322 2 1111 2 786 2 787 2 161 4 163 2 643 2 330 2 951 4 1120 2 955 2 486 2 488 2 1123 12 805 2 343 1 178 2 180 2 808 1 962 2 495 24 659 1 1131 2 350 2 662 2 34 2 1140 2 1141 2 44 2 46 1 672 2 673 8 49 4 1153 24 512 3 1155 1 515 3 517 2 834 2 993 1 1162 2 994 2 997 2 372 2 63 2 521 2 999 2 839 2 523 4 66 4 840 2 841 2 1175 1 529 1 849 12 218 2 1181 6 853 3 228 6 1013 2 1012 1 229 2 382 4 74 2 859 3 1188 2 861 5 544 1 390 2 697 4 1196 8 1026 2 1200 2 1030 2 873 2 1203 2 399 2 398 1 706 32 244 8 85 3 707 4 1034 1 251 32 885 2 1040 2 256 2 412 2 890 2 1042 16 717 2 101 2 262 2 574 2 1047 2 896 2 1049 1 1054 2 272 2 727 1 106 2 1234 2 107 6 729 3 109 2 1059 2 733 2 1063 2 735 3 1065 1 284 2 583 3 1072 32 287 3 588 2 744 2 592 2 921 2 291 34 128 2 1083 2 1085 2 753 2 450 2 1088 1 754 6 301 16 1092 2 758 2 598 2 600 2 1259 2 
210 2 
291 2 806 2 
863 2 813 2 291 4 
604 8 312 2 1 8 609 4 611 4 939 2 317 8 941 2 617 2 618 2 8 2 622 2 624 2 10 2 627 2 629 2 324 4 325 2 635 2 947 6 637 10 16 2 17 2 639 4 329 4 331 8 22 48 950 2 23 20 954 2 956 2 654 48 345 2 31 2 963 4 660 146 349 2 663 4 970 2 972 146 358 4 365 4 980 8 981 2 53 2 57 2 992 2 60 2 369 2 680 2 65 2 1001 2 69 36 685 2 70 4 1007 2 1008 2 379 14 380 8 1011 22 692 2 1015 2 384 6 383 2 1021 2 79 4 80 48 1027 2 702 2 701 2 404 48 1037 2 712 2 410 2 1041 6 714 8 100 2 1045 2 1046 2 417 4 416 2 1048 2 725 4 726 14 1050 2 1056 2 1057 4 728 2 424 36 427 2 110 2 1062 18 736 4 113 20 1067 2 739 2 740 48 1069 2 1071 2 122 4 742 2 1075 2 1077 2 446 2 133 2 1087 2 451 26 1090 2 756 4 456 2 759 2 760 2 762 2 763 2 766 2 768 2 461 48 146 2 464 2 466 2 774 28 150 4 1105 2 777 2 468 2 1107 2 1108 4 781 48 473 2 782 14 1110 4 159 22 785 2 160 2 1112 6 1113 2 475 2 790 4 793 48 167 2 168 4 478 48 794 24 480 48 1119 2 170 8 171 2 798 8 489 2 802 2 176 48 1126 2 1125 2 1127 2 1128 2 185 2 186 2 188 2 189 2 1132 2 814 2 819 8 821 2 1144 2 822 2 501 30 199 2 503 6 504 2 508 2 1152 2 204 2 1156 146 513 6 1160 2 518 2 1165 20 525 2 527 4 528 2 1174 2 848 2 223 36 534 4 224 2 227 42 537 2 860 2 1186 4 1190 4 1189 10 1191 4 1193 22 547 4 1195 26 239 2 871 4 241 2 549 2 551 2 1204 2 1205 48 555 4 876 4 557 2 883 4 561 4 565 2 254 2 257 48 1226 2 1228 14 266 2 575 4 1231 14 577 16 268 8 1232 2 269 2 270 2 274 2 276 4 579 192 1235 8 901 4 904 2 279 4 581 2 1239 8 909 2 585 2 591 2 298 4 300 2 1254 2 302 16 930 2 
580 2 743 1 987 2 326 2 
552 2 987 2 
441 2 987 2 844 2 351 2 413 2 295 2 657 2 
987 2 1016 2 657 2 
987 2 1135 2 657 2 
580 2 29 2 563 2 
987 2 657 2 
181 2 563 2 
987 2 877 2 
580 2 563 2 1201 2 
580 2 989 2 632 2 
580 2 949 2 869 2 
580 2 275 2 1109 2 
580 2 668 2 1025 2 
307 2 563 2 
987 2 969 2 
989 2 334 2 
426 2 869 2 
895 2 275 2 
668 2 131 2 
874 2 563 2 
668 2 247 2 
71 2 275 2 
1097 2 869 2 
989 2 238 2 
580 2 42 2 563 2 1201 2 
580 2 42 2 431 2 563 2 1201 2 
580 2 56 2 563 2 
580 2 933 2 563 2 
1035 2 134 2 683 2 434 2 
1158 2 332 2 351 2 413 2 
441 2 1158 2 332 2 351 2 665 2 413 2 
987 2 558 2 351 2 413 2 295 2 657 2 
870 2 460 2 
918 2 351 2 413 2 295 2 
684 2 275 2 
668 2 99 2 
989 2 297 2 
699 2 869 2 
1103 2 668 2 869 2 
705 2 668 2 869 2 
668 2 869 2 1005 2 
124 2 668 2 869 2 
222 6 689 2 351 2 838 6 411 2 960 2 413 2 718 2 
543 2 563 2 
1150 2 442 2 828 2 55 4 514 2 677 2 190 2 691 2 87 2 816 2 539 2 564 4 1089 2 1104 6 734 2 1066 2 376 2 807 2 
580 2 234 2 
873 2 
2 2 937 2 612 6 7 2 940 2 11 2 779 2 153 2 13 2 631 2 1111 4 787 2 161 2 163 2 951 4 484 2 486 2 1123 8 805 2 1131 2 350 2 661 2 662 2 34 2 1141 2 46 4 49 4 207 4 517 2 63 2 839 2 1166 4 523 2 66 4 375 2 68 2 840 2 211 2 1172 2 1173 2 529 2 687 2 849 8 1181 2 228 6 382 4 697 2 1023 2 1200 2 1030 2 399 2 706 4 244 2 1034 2 251 6 1036 2 1213 2 1040 2 408 2 717 6 262 2 1047 2 574 2 106 2 107 2 733 2 910 2 1072 26 592 2 291 26 1084 2 753 2 754 4 758 2 598 2 1259 2 
2 2 937 2 612 6 940 2 11 2 779 2 153 2 13 2 631 2 156 2 1111 4 787 2 161 2 163 2 333 2 951 4 484 2 486 2 1123 8 805 2 1131 2 350 2 661 2 662 2 34 2 1141 2 46 2 49 4 207 4 834 2 517 2 63 2 839 2 1166 4 523 2 66 4 375 2 68 2 840 2 211 2 1172 2 1173 2 529 2 687 2 849 8 1181 2 228 6 382 4 697 2 1023 2 1026 2 1200 2 1030 2 399 2 706 4 244 2 1034 2 251 6 1036 2 1040 2 256 2 408 2 1225 2 717 6 262 2 1047 2 574 2 106 2 107 2 733 2 1072 26 592 2 291 26 1084 2 753 2 754 6 758 2 598 2 1259 2 
1161 2 
237 2 922 2 
228 4 1184 2 387 2 235 8 778 4 1024 2 158 2 787 2 553 2 476 2 641 2 400 4 642 2 556 2 248 2 951 2 93 2 24 2 647 6 483 2 800 2 805 2 344 4 1047 2 720 4 961 2 33 2 187 2 964 10 422 2 1136 2 1053 2 818 2 1141 2 425 2 1143 2 277 2 820 8 733 2 1238 2 121 4 1072 6 125 2 291 12 679 2 1082 2 370 4 995 2 1086 2 63 2 839 2 522 4 303 2 1093 2 66 2 524 4 927 6 138 2 1171 6 1178 2 
226 2 228 4 1184 2 387 2 235 8 778 4 1024 2 158 2 787 2 553 2 476 2 641 2 400 4 642 2 556 2 248 2 951 2 93 2 24 2 647 6 483 2 800 2 805 2 344 4 1047 2 894 2 720 4 961 2 33 2 418 2 187 2 964 10 422 2 1136 2 1053 2 1141 2 425 2 1143 2 277 2 820 8 733 2 1236 4 1238 2 121 4 1072 6 125 2 291 12 679 2 370 4 995 2 1086 2 63 2 839 2 522 4 66 2 303 2 1093 2 524 4 927 8 138 2 1171 8 1178 2 
720 2 125 2 641 2 400 4 187 2 642 2 1053 2 93 2 24 2 425 2 647 2 387 2 1143 2 277 2 522 2 524 2 778 4 1171 2 
228 4 1184 2 387 2 235 4 778 4 1024 2 158 2 787 2 553 2 476 2 641 2 400 4 642 2 556 2 248 2 951 2 93 2 24 2 647 4 483 2 800 2 805 2 344 4 1047 2 720 4 961 2 33 2 418 2 187 2 964 6 422 2 1136 2 1053 2 818 2 1141 2 425 2 1143 2 277 2 820 4 733 2 1238 2 121 4 1072 6 125 2 291 12 679 2 1082 2 370 4 995 2 1086 2 63 2 839 2 522 4 1093 2 66 2 524 4 927 6 138 2 1171 6 1178 2 
228 4 1184 2 387 2 235 4 778 4 1024 2 158 2 787 2 553 2 476 2 641 2 400 4 642 2 556 2 248 2 951 2 93 2 24 2 647 6 483 2 800 2 805 2 344 4 1047 2 720 4 961 2 33 2 187 2 964 6 422 2 1136 2 1053 2 818 2 1141 2 425 2 1143 2 277 2 820 4 731 2 733 2 1238 2 121 4 1072 6 125 2 291 12 679 2 1082 2 370 4 995 2 1086 2 63 2 839 2 522 4 1093 2 66 2 524 4 927 6 138 2 1171 4 1178 2 
228 4 1184 2 387 2 235 8 778 4 1024 2 158 2 787 2 553 2 476 2 641 2 400 4 642 2 556 2 248 2 951 2 93 2 24 2 647 6 483 2 800 2 805 2 344 4 1047 2 720 4 961 2 33 2 187 2 964 6 422 2 1136 2 1053 2 818 2 1141 2 425 2 1143 2 277 2 820 4 733 2 1238 2 121 4 1072 6 125 2 291 12 679 2 1082 2 370 4 995 2 1086 2 63 2 839 2 522 4 303 2 1093 2 66 2 524 4 927 6 138 2 1171 6 1178 2 
228 4 1184 2 387 2 235 8 778 4 1024 2 158 2 787 2 553 2 476 2 641 2 400 4 642 2 556 2 248 2 951 2 93 2 24 2 647 8 483 2 800 2 805 2 344 4 1047 2 720 4 961 2 33 2 187 2 964 10 422 2 1136 2 1053 2 818 2 1141 2 425 2 1143 2 277 2 820 8 731 2 733 2 1238 2 121 4 1072 6 125 2 291 12 679 2 1082 2 370 4 995 2 1086 2 63 2 839 2 522 4 303 2 1093 2 66 2 524 4 927 8 138 2 1171 6 1178 2 
228 4 1184 2 387 2 235 8 778 4 1024 2 158 2 787 2 553 2 476 2 641 2 400 4 642 2 556 2 248 2 951 2 93 2 24 2 647 6 483 2 800 2 805 2 344 4 1047 2 720 4 961 2 33 2 187 2 964 10 422 2 1136 2 1053 2 818 2 1141 2 425 2 1143 2 277 2 820 8 733 2 1238 2 121 4 1072 6 125 2 291 12 679 2 1082 2 370 4 995 2 1086 2 63 2 839 2 522 4 303 2 1093 2 66 2 524 4 927 6 138 2 1171 6 1178 2 
0 7 2 4 607 1 612 6 613 6 614 1 940 2 320 2 11 2 13 2 634 2 640 2 641 2 642 2 951 4 24 2 647 8 336 1 957 2 958 2 339 6 27 6 344 8 961 2 33 2 964 2 350 2 968 6 34 12 35 2 38 1 669 4 360 2 979 6 49 4 52 6 366 6 679 2 370 4 995 2 63 2 66 4 687 2 382 4 385 2 387 2 1017 6 1018 2 697 2 1023 2 1024 2 1030 2 83 1 706 2 400 4 401 6 93 2 1040 2 717 6 1047 2 720 4 422 2 1053 2 106 2 107 2 423 2 425 2 731 4 733 2 116 2 121 6 1072 24 745 1 125 2 447 6 750 2 1082 2 1086 2 1084 2 753 2 754 6 1093 2 758 2 138 2 764 2 769 2 778 4 153 2 158 4 787 2 161 2 476 2 795 10 1118 2 483 2 486 2 800 2 1123 4 805 2 806 6 1131 2 187 2 813 6 1136 2 1134 2 1141 2 1143 2 194 2 1146 1 1148 2 1151 8 827 2 511 2 834 2 516 1 839 2 1166 4 210 6 522 4 523 2 524 4 1170 2 1171 4 1178 4 849 4 1181 2 228 6 535 2 1184 2 235 2 1200 2 553 4 244 2 556 2 248 2 251 8 1212 7 1215 6 1216 2 568 2 256 2 892 2 277 2 280 2 1238 2 908 2 911 6 589 2 592 2 288 1 1247 6 290 2 291 46 294 2 296 2 1252 4 925 2 927 12 598 2 1259 2 
769 2 2 4 612 6 613 6 940 2 320 2 778 4 11 2 153 2 13 2 634 2 158 4 1111 2 787 2 161 4 476 2 640 2 641 2 642 2 795 10 951 4 1118 2 24 2 647 8 483 2 957 2 486 2 958 2 339 6 800 2 27 6 1123 8 806 6 805 2 344 8 961 2 33 2 1131 2 964 2 187 2 813 6 350 2 968 6 1134 2 1136 2 35 2 34 12 1141 2 1143 2 194 2 669 4 360 2 979 6 1148 2 1151 8 49 4 827 2 52 6 511 2 1159 2 366 6 834 2 679 2 995 2 370 4 63 2 1166 4 839 2 210 6 522 4 523 4 66 4 524 4 1170 2 1171 8 1178 4 687 2 849 8 1181 2 535 2 228 6 1184 2 382 4 385 2 387 2 1017 6 235 6 1018 2 697 4 1023 2 1024 2 1200 2 1030 2 553 4 706 2 244 2 400 4 556 2 401 6 86 2 248 2 251 8 93 2 1215 6 568 2 1216 2 1040 2 256 2 717 6 892 2 1047 2 720 4 422 2 1053 2 106 2 423 2 107 2 425 2 277 2 280 2 733 2 1238 2 908 2 116 2 911 6 121 6 1072 26 589 2 592 2 125 2 1247 6 290 2 291 48 447 6 750 2 294 2 1082 2 296 2 1084 2 1086 2 753 2 925 2 1252 4 754 6 303 4 1093 2 927 12 758 2 598 2 138 2 764 2 1259 2 
769 2 2 4 612 6 613 6 940 2 320 2 778 4 11 2 153 2 13 2 634 2 158 4 1111 2 787 2 161 4 476 2 640 2 641 2 642 2 795 10 951 4 1118 2 24 2 647 8 483 2 957 2 486 2 958 2 339 6 800 2 27 6 1123 8 806 6 805 2 344 8 961 2 33 2 1131 2 187 2 964 6 813 6 350 2 968 6 1134 2 1136 2 35 2 34 12 1141 2 1143 2 820 4 194 2 669 4 360 2 979 6 1148 2 1151 8 49 4 827 2 52 6 511 2 1159 2 366 6 834 2 679 2 995 2 370 4 63 2 1166 4 839 2 210 6 522 4 523 4 66 4 524 4 1170 2 1171 8 1178 4 687 2 849 8 1181 2 535 2 228 6 1184 2 382 4 385 2 387 2 1017 6 235 6 1018 2 697 4 1023 2 1024 2 1200 2 1030 2 553 4 706 2 244 2 400 4 556 2 401 6 86 2 248 2 251 8 93 2 1215 6 568 2 1216 2 1040 2 256 2 717 6 892 2 1047 2 720 4 422 2 1053 2 106 2 423 2 107 2 425 2 277 2 280 2 733 2 1238 2 908 2 116 2 911 6 121 6 1072 26 589 2 592 2 125 2 1247 6 290 2 291 48 447 6 750 2 294 2 1082 2 296 2 1084 2 1086 2 753 2 925 2 1252 4 754 6 303 4 1093 2 927 12 758 2 598 2 138 2 764 2 1259 2 
2 4 608 6 612 8 938 2 613 6 940 2 320 2 11 2 13 2 634 2 640 2 641 2 642 2 951 4 24 2 647 10 957 2 339 12 27 6 28 2 344 8 961 2 33 2 964 6 350 2 968 6 34 10 35 2 666 2 669 4 360 2 979 6 49 4 52 6 366 6 368 2 679 2 370 4 995 2 61 6 63 2 66 4 67 2 687 4 382 4 385 2 387 2 1017 6 1018 2 697 4 1023 2 1024 2 1030 2 706 4 400 4 401 6 86 2 710 6 93 2 1040 2 717 8 1043 2 1047 2 720 4 418 2 422 2 1053 2 106 2 107 4 423 2 425 2 731 2 733 2 117 6 116 2 121 6 1072 24 125 2 447 6 750 2 1082 2 1086 2 1084 2 753 2 754 6 1093 2 758 2 138 2 764 2 769 2 778 4 153 2 154 2 158 4 1111 2 787 2 161 4 162 6 476 2 1117 6 795 8 1118 2 483 2 486 2 800 2 1123 10 805 2 806 12 1131 2 187 2 813 12 1136 2 1134 2 1141 2 1143 2 194 2 820 4 1148 2 1151 8 827 2 511 2 1159 2 834 2 839 2 1166 6 210 12 522 4 523 4 524 4 212 6 1170 2 1171 10 1178 4 849 10 1181 4 1180 6 228 6 535 2 1184 2 235 6 1200 2 550 2 553 4 244 4 556 2 248 2 251 12 1215 12 568 2 1216 2 256 2 892 2 277 2 280 2 1238 2 908 2 286 6 911 6 589 2 592 2 1247 12 290 2 291 52 294 2 296 2 1252 4 925 2 303 4 927 16 598 2 1259 2 
720 4 961 2 33 2 964 4 422 2 1053 2 1184 2 425 2 387 2 1143 2 820 4 277 2 235 6 778 2 1238 2 121 2 1024 2 553 2 400 2 556 2 291 4 679 2 995 2 370 2 1082 2 1086 2 24 2 93 2 647 6 522 4 303 2 927 4 138 2 1171 6 344 2 
2 2 612 6 940 2 778 2 11 2 153 2 13 2 787 2 795 2 951 4 24 2 647 6 486 2 488 2 958 2 805 2 344 2 655 2 184 2 961 2 33 2 1131 2 964 2 350 2 34 4 1141 2 1143 2 505 2 672 2 49 4 834 2 679 2 995 2 370 2 63 2 839 2 1166 4 522 4 66 4 1171 6 1181 3 228 6 1184 2 382 4 387 2 235 6 1023 2 1024 2 1200 2 1030 2 873 2 553 2 706 3 400 2 556 2 251 8 93 2 567 2 1040 2 256 2 717 6 1047 2 720 4 422 2 1053 2 106 2 107 3 425 2 277 2 733 2 1061 2 1238 2 121 2 1072 24 914 3 291 28 1082 2 1086 2 1084 2 753 2 754 6 303 2 1093 2 927 4 758 2 598 2 600 2 138 2 1259 2 
868 2 995 2 1024 2 
868 2 995 2 1024 2 
142 2 2 6 612 2 940 2 942 2 11 2 778 2 153 2 13 2 158 4 787 2 161 4 640 2 476 2 642 2 795 2 951 4 24 4 647 12 483 2 799 2 1123 4 805 2 344 4 1131 2 187 2 964 6 350 2 1134 2 664 2 1138 4 34 4 1141 2 1143 2 820 4 669 2 46 2 360 2 826 2 49 4 982 2 984 2 834 2 995 6 370 2 1164 2 63 2 839 2 522 4 523 4 66 4 1168 2 524 4 375 4 1171 12 1178 2 849 4 228 6 382 4 1184 2 231 4 387 2 75 2 235 6 697 4 868 2 1023 2 1024 4 1200 2 1030 2 553 4 706 2 400 2 879 2 246 2 248 2 251 2 1040 2 256 2 888 2 717 2 264 2 1047 2 720 4 418 4 273 2 106 2 731 4 733 2 911 2 121 4 1072 16 586 2 592 4 291 24 1084 2 1086 2 753 2 1252 2 754 6 303 4 927 16 758 2 137 2 598 2 1259 2 
931 2 511 2 125 2 291 4 34 2 795 2 942 2 352 2 63 2 888 2 237 2 137 2 669 2 908 2 911 2 653 2 1072 2 
142 2 2 6 612 2 940 2 942 2 11 2 778 2 153 2 13 2 158 4 787 2 161 4 640 2 476 2 642 2 951 4 24 4 647 12 483 2 800 2 799 2 1123 4 805 2 344 4 32 2 1131 2 187 2 964 6 350 2 1134 2 664 2 1138 4 34 2 1141 2 1143 2 820 4 360 2 826 2 49 4 984 2 991 2 834 2 995 6 370 2 1164 2 63 2 839 2 522 4 523 4 66 4 1168 4 524 4 375 4 1171 12 530 2 1178 4 849 4 228 6 1014 2 382 4 1184 2 231 4 387 2 235 6 697 4 868 2 1023 2 1024 4 1200 2 1030 2 553 4 706 4 400 2 246 2 248 2 251 2 1040 2 256 2 888 2 717 2 264 2 1047 2 720 4 418 4 273 2 106 2 731 4 733 2 911 2 121 4 1072 16 592 4 291 24 1084 2 1086 2 753 2 1252 2 754 6 303 4 927 16 758 2 137 2 598 2 459 2 1259 2 
142 2 2 6 612 2 940 2 942 2 11 2 778 2 153 2 13 2 323 2 158 4 787 2 161 4 640 2 476 2 642 2 795 2 951 4 24 4 647 12 483 2 800 2 799 2 1123 4 805 2 344 4 1131 2 187 2 964 6 350 2 1134 2 664 2 1138 4 34 4 1141 2 1143 2 820 4 669 2 46 1 360 2 826 2 49 4 984 2 834 2 995 6 370 2 1164 2 63 2 839 2 522 4 523 4 66 4 1168 2 524 4 375 4 1171 12 1178 4 849 4 228 6 382 4 1184 2 231 4 387 2 235 6 697 4 868 2 1197 2 1023 2 1024 4 1200 2 1030 2 553 4 706 2 708 2 400 2 246 2 248 2 251 2 1040 2 256 2 888 2 717 2 264 2 1047 2 720 4 418 4 273 2 106 2 731 4 733 2 911 2 121 4 1072 16 746 2 592 4 291 24 1084 2 1086 2 753 2 1252 2 754 6 303 4 927 16 758 2 137 2 598 2 457 2 1259 2 
605 2 2 2 606 3 4 4 612 14 6 8 615 8 623 18 626 2 11 2 13 2 633 1 634 2 15 20 636 12 21 4 646 2 25 4 651 2 655 2 656 2 661 2 34 2 35 2 37 2 40 2 39 2 666 2 667 12 43 8 45 1 671 2 46 1 49 56 50 2 54 18 674 4 676 4 59 12 681 2 63 2 62 6 64 4 66 4 67 2 68 2 687 46 73 2 688 2 693 2 695 4 76 4 77 2 78 2 698 8 700 2 81 18 82 4 704 8 706 25 711 1 91 2 92 2 94 8 96 8 713 4 97 2 98 2 717 14 104 4 723 2 722 6 724 2 106 4 107 16 733 2 112 2 114 4 115 8 126 16 748 2 127 10 129 2 130 2 749 2 132 2 753 2 754 120 755 8 757 2 135 4 758 2 136 2 761 2 139 4 767 12 144 2 148 2 772 2 773 8 775 2 151 3 152 4 153 2 154 2 157 6 783 2 787 2 788 8 164 2 791 2 166 6 172 2 801 6 803 2 804 2 805 2 177 2 809 2 182 2 811 8 183 6 184 2 193 2 823 6 196 12 195 2 198 2 197 2 201 2 200 2 203 2 205 3 206 3 831 4 832 10 834 30 208 2 835 6 839 2 211 2 213 6 843 2 845 8 846 8 847 2 217 2 849 45 221 4 850 6 852 2 855 2 857 9 228 6 233 2 864 8 236 2 240 2 872 2 244 24 880 4 878 6 882 2 881 2 251 36 255 12 256 30 887 4 258 9 889 8 261 6 263 2 892 4 265 8 893 2 897 3 278 2 280 2 903 8 905 2 283 4 907 8 285 12 912 16 914 2 917 4 920 2 293 2 291 158 923 8 299 2 301 4 926 6 304 6 929 6 306 2 309 4 310 4 932 8 313 2 936 2 934 20 315 6 938 2 940 4 944 8 320 2 945 2 946 2 327 2 328 2 951 4 335 2 338 2 340 2 341 4 966 2 965 3 350 2 973 2 354 16 356 8 355 16 975 2 361 2 362 2 363 2 978 2 985 24 988 2 990 8 367 8 368 2 371 4 373 2 998 12 1003 6 378 7 1009 16 382 48 1018 2 1020 8 395 2 396 4 1029 1 1030 4 397 20 1031 1 402 20 403 8 1034 2 1036 2 406 2 1039 2 1038 22 1040 2 408 2 1043 2 1047 2 421 8 1052 12 1051 2 1055 4 1058 6 1060 4 428 2 432 2 1064 10 433 58 435 6 1070 2 437 2 439 3 1072 120 1074 12 1078 8 445 8 1084 2 1091 32 1094 2 454 2 1095 2 455 4 1096 2 463 2 465 20 1099 2 1101 8 1100 8 467 4 470 2 474 4 1115 4 477 6 479 2 1118 2 481 4 482 2 484 18 486 2 1121 2 1123 42 1129 16 491 4 1130 4 494 18 493 2 1131 12 1137 2 499 2 500 1 1141 2 1142 18 505 2 507 8 1149 2 1154 2 1157 2 1163 2 520 16 1166 12 1167 8 526 6 1172 2 1173 2 1176 2 529 2 531 4 1181 25 536 4 1183 6 1187 18 540 2 541 25 545 4 546 4 1194 2 1198 2 1200 12 550 2 1202 4 1206 10 560 4 1214 2 1217 2 567 2 1222 16 1224 18 570 2 569 2 571 4 1229 16 576 10 578 2 1233 2 1240 2 1243 4 587 2 1245 2 590 2 592 4 1246 8 1248 1 1250 42 1249 2 593 18 594 8 598 2 1256 2 601 4 602 2 603 2 1259 2 
1181 2 576 2 612 2 616 2 107 2 428 2 39 2 470 2 1064 4 1198 2 439 2 1072 2 706 2 988 2 920 2 832 2 291 2 208 2 251 2 1166 2 486 2 717 2 603 2 687 6 
1181 2 576 2 612 2 616 2 107 2 428 2 39 2 470 2 1064 4 1198 2 439 2 1072 2 706 2 988 2 920 2 832 2 291 2 208 2 251 2 1166 2 486 2 717 2 603 2 687 6 
1181 2 576 2 612 2 616 2 107 2 428 2 39 2 470 2 1064 4 1198 2 439 2 1072 2 706 2 988 2 920 2 832 2 291 2 208 2 251 2 1166 2 486 2 717 2 603 2 687 6 
1129 4 767 2 1181 3 1130 2 183 4 419 2 857 3 690 2 536 2 1101 2 944 2 9 2 695 2 428 2 467 2 630 2 780 2 285 4 1072 4 1074 4 1242 4 82 2 784 3 706 3 919 2 1250 6 291 10 59 4 251 2 371 2 998 4 255 4 301 2 486 2 1223 2 258 3 306 2 846 2 1006 2 719 2 
1129 4 767 2 1181 2 1130 2 183 4 419 2 857 2 690 2 536 2 1101 2 944 2 9 2 695 2 428 2 467 2 630 2 780 2 285 4 1072 4 1074 4 1242 4 82 2 784 2 706 2 919 2 1250 6 291 10 560 2 59 4 251 2 371 2 998 4 255 4 301 2 486 2 452 2 1223 2 258 2 213 2 306 2 846 2 1006 2 719 2 
1129 4 767 2 1181 2 1130 2 183 4 419 2 857 2 690 2 536 2 1101 2 944 2 9 2 695 2 428 2 467 2 630 2 780 2 285 4 1072 4 1074 4 1242 4 82 2 784 2 706 2 919 2 1250 6 291 10 560 2 59 4 251 2 371 2 998 4 255 4 301 2 486 2 452 2 1223 2 258 2 213 2 306 2 846 2 1006 2 719 2 
1129 4 767 2 1181 2 1130 2 183 4 419 2 857 2 690 2 536 2 1101 2 944 2 9 2 695 2 428 2 467 2 630 2 780 2 285 4 1072 4 1074 4 1242 4 82 2 784 2 706 2 919 2 1250 6 291 10 560 2 59 4 251 2 371 2 998 4 255 4 301 2 486 2 452 2 1223 2 258 2 213 2 306 2 846 2 1006 2 719 2 
1129 4 767 2 1181 2 1130 2 183 4 419 2 857 2 690 2 536 2 1101 2 944 2 9 2 695 2 428 2 467 2 630 2 780 2 285 4 1072 4 1074 4 1242 4 82 2 784 2 706 2 919 2 1250 6 291 10 560 4 59 4 251 2 371 2 998 4 255 4 301 2 486 2 452 4 1223 2 258 2 213 4 306 2 846 2 1006 2 719 2 
243 2 1147 2 644 2 216 2 578 2 118 2 
484 2 388 2 409 2 472 2 645 2 216 2 1210 2 
179 2 1230 1 1047 2 721 2 3 2 271 1 670 2 976 1 977 2 392 2 548 1 1072 8 123 1 444 2 291 10 709 2 1080 2 1209 2 1081 2 595 2 1215 2 1219 2 1253 2 928 2 597 2 458 2 
1129 15 856 2 855 2 1130 6 183 4 4 2 966 2 536 6 105 2 858 4 1101 6 386 2 944 6 695 2 111 2 1072 6 82 6 1076 2 831 2 166 4 291 6 59 12 560 3 1251 2 371 6 682 2 452 2 1169 1 649 2 213 5 846 6 
533 2 84 2 291 1 1098 2 250 2 833 4 815 2 836 2 519 1 998 2 255 2 797 7 974 2 628 2 453 2 842 2 1072 1 1074 2 
533 4 84 2 1098 2 250 2 833 4 815 2 836 2 998 2 255 2 797 6 974 4 628 2 453 2 842 4 1074 2 
533 8 84 2 291 1 1098 2 250 2 833 4 815 2 836 8 519 1 998 2 255 2 797 10 974 8 628 6 453 2 842 8 1072 1 1074 2 
533 2 84 2 1098 2 250 2 833 2 815 2 998 2 255 2 797 2 974 2 453 2 842 2 1074 2 
310 4 932 6 314 4 773 6 6 10 940 8 615 24 1100 6 151 4 625 12 1106 1 633 4 15 4 636 12 788 6 789 24 1114 2 18 2 19 4 479 5 482 2 803 5 341 10 342 2 809 8 811 24 1131 14 496 26 1139 24 36 4 500 2 354 16 355 17 356 6 1145 2 43 6 45 2 502 26 46 4 507 42 49 112 54 50 829 2 990 6 676 4 367 6 834 57 64 4 1167 6 215 8 845 10 72 90 847 8 849 28 217 8 378 17 219 8 221 4 1009 16 1010 18 1182 2 382 88 1185 5 1187 92 232 4 862 2 541 24 696 10 545 4 698 6 864 42 391 2 700 2 1028 2 1029 6 1200 14 704 10 245 8 1206 8 880 4 403 24 1033 4 711 2 252 90 406 5 407 2 887 4 256 57 1222 18 1224 84 96 6 889 6 571 2 102 2 1229 36 414 2 265 6 104 4 267 4 421 6 897 7 1055 4 900 10 903 6 281 2 433 124 582 5 907 6 115 6 912 16 741 4 1072 134 1243 4 917 7 445 10 1078 10 1246 6 1248 2 291 150 751 10 594 6 923 6 754 247 1091 37 755 6 1257 24 1096 12 140 6 
532 2 849 37 217 2 932 2 1009 4 1182 2 147 2 610 2 465 6 6 2 940 2 382 20 1100 2 319 2 694 2 621 2 696 2 471 2 391 2 155 2 633 1 1028 2 1200 2 1029 3 704 2 789 2 875 4 1032 2 1206 6 792 2 405 2 249 2 253 2 95 2 407 2 485 2 256 3 1222 2 259 2 715 2 1044 2 1229 2 415 2 414 2 891 2 658 4 103 2 265 2 347 2 809 2 492 2 810 4 420 2 1131 2 498 2 191 2 1139 2 898 2 817 2 108 2 37 4 900 2 354 4 355 2 281 2 43 2 357 2 433 6 46 2 438 2 47 2 912 4 741 2 584 2 1072 44 49 20 983 2 445 2 1078 2 675 2 367 2 291 46 834 3 751 2 449 2 754 45 1167 2 1257 2 1258 2 215 2 845 2 847 2 
310 4 932 4 316 16 6 4 773 4 940 2 1100 4 151 2 1102 8 621 2 636 14 948 4 788 4 1116 32 337 4 482 2 341 4 803 4 342 2 809 2 492 2 811 8 1131 6 354 10 355 10 41 2 356 4 43 4 507 8 49 44 54 8 829 2 675 10 990 4 676 4 367 4 834 30 64 4 1167 4 1004 8 845 4 686 2 847 2 849 14 217 2 378 8 221 4 1009 10 851 4 1182 2 382 36 381 4 1187 24 545 4 1192 2 865 8 698 4 864 16 391 2 700 2 394 4 1029 2 1200 6 704 6 1206 6 880 4 249 10 406 4 407 2 887 4 256 28 1222 10 1224 24 96 4 889 4 1229 6 414 2 891 10 265 4 104 4 421 4 1055 4 732 4 281 2 282 2 433 24 1068 2 115 4 907 4 438 2 120 2 912 10 1072 70 1243 4 440 16 1244 8 917 3 1078 4 445 4 747 4 1246 4 291 78 594 4 923 4 754 104 1091 30 755 4 
217 2 849 14 378 5 932 4 1009 6 1182 2 6 2 940 2 382 14 1100 4 151 2 541 9 621 2 391 2 1200 2 1028 2 1029 2 15 2 704 2 1114 2 1206 4 479 2 406 2 95 2 407 2 256 12 1222 2 803 2 341 4 414 2 1229 2 265 4 809 2 1131 2 897 1 500 2 354 6 355 2 281 2 1145 2 43 4 45 2 433 8 46 2 912 6 1072 26 49 14 1078 2 445 2 1248 1 367 4 291 28 834 12 754 40 1091 6 1167 4 845 2 847 2 1096 1 
292 2 

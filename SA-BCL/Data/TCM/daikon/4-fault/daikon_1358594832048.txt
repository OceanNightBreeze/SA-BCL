#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (484,698) (484,698) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V ERROR java.lang.Error 
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 1488 804 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_2_10(I)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_60()Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lte(II)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.InvMap:InvMap()V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.Quant:eltwiseLTE([I)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_103()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.Quant:subsetOf([D[F)Z
jtb.JavaCharStream:getBeginLine()I
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.JavaParser:jj_3R_76()Z
daikon.Quant:eltsLTE([II)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptName:getSignature()Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.Quant:eltsLteIndex([I)Z
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaCharStream:BeginToken()C
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:jj_ntk()I
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_5()Z
daikon.Quant:gte(II)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3_28()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:jj_3_21()Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexGT([I[I)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.ModBitTracker:num_sets()I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_samples()I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Debug:logDetail()Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.Quant:eltsGtIndex([I)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_134()Z
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.Quant:eltwiseEqual([I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:lt(II)Z
jtb.JavaParser:jj_3_19()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsLtIndex([I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.Debug:logOn()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
jtb.JavaParser:jj_3_20()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_1(I)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseGT([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.inv.Invariant:justified()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3R_162()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.Quant:eq(DD)Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.PptName:getMethodName()Ljava.lang.String;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_163()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_115()Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_22()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:jj_3R_70()Z
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z | CONDITION | 7862 | if (x) -> if (!x)
jtb.JavaParser:jj_3R_99()Z
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:jj_3R_210()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.Invariant:prob_and(DDD)D
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_80()Z
jtb.JavaParser:jj_3R_121()Z
utilMDE.Intern:numIntArrays()I
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.visitor.FormatCommand:getCommand()I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_105()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptName:isCombinedExitPoint()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.Quant:pairwiseGT([I[I)Z
daikon.PptName:getFullClassName()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_62()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:isScalar()Z
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:jj_3R_58()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParser:jj_3_27()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_61()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParser:jj_3R_55()Z
daikon.Quant:memberOf(D[F)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_100()Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_4()Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:min_max([I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.Quant:concat([I[I)[I
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfo:relate_var()V
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_12(I)Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.PptSlice0:arity()I
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:jj_3R_180()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_137()Z
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfo:isPointer()Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:lexLT([I[I)Z | STATEMENT | 170908 | stmt -> ;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
jtb.JavaParser:jj_3R_85()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.JavaParser:jj_3R_67()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([F[D)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice1:arity()I
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_73()Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaParser:jj_3R_123()Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE:sum([[I)I
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.syntaxtree.NodeOptional:present()Z
jtb.JavaParser:jj_3R_164()Z
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_89()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:jj_3R_48()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:eltsNotEqual([II)Z
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:pairwiseLT([I[I)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_72()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.JavaParser:jj_3R_96()Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptSlice2:arity()I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_109()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_169()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:jj_3_35()Z
jtb.JavaParser:jj_3R_117()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.ValueTuple:size()I
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.Quant:eltsGteIndex([I)Z
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_56()Z
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.ArraysMDE:sum([I)I
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:slice([III)[I
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_98()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.JavaParser:jj_3R_136()Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_126()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ModBitTracker:split(I)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_3_14()Z
jtb.JavaParser:jj_3R_161()Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:eltsGT([II)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.PptName:toString()Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_2_13(I)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_3R_104()Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
jtb.JavaParser:jj_3R_116()Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.PptSlice1:num_samples()I
daikon.inv.Invariant:getConfidence()D
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaCharStream:ReadByte()C
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsEqual([II)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_106()Z
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3R_87()Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_149()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:lexGTE([I[I)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[F)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:eltwiseNotEqual([I)Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:jj_3R_118()Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_110()Z
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_3R_75()Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Intern:intern([J)[J
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isArray()Z
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:memberOf(J[J)Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.JavaParser:jj_2_17(I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
jtb.visitor.FormatCommand:FormatCommand(II)V
jtb.JavaParser:jj_2_25(I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfo:isPrestate()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_133()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd(II)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.test.FormatTestCase:passes()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.ProglangType:dimensions()I
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:lexEqual([I[I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:subarray([III)[I
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:hashCode()I
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.ProglangType:isFloat()Z
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:gt(II)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:ne(II)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.ProglangType:base()Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_124()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:min([I)I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:sign(I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsLT([II)Z
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfoName:name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quant:subsetOf([D[D)Z
jtb.visitor.TreeFormatter:TreeFormatter()V
jtb.JavaParser:jj_3_17()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:isIOAArray()Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:noDups([I)Z
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:sameLength([I[I)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3_29()Z
daikon.diff.Node:Node()V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParser:jj_3R_122()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.Ppt:Ppt()V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_2_21(I)Z
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.ProglangType:baseIsFloat()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.ValueTuple:isMissing(I)Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3_36()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfo:new_ppt()V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_114()Z
daikon.ProglangType:isPointerFileRep()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:readChar()C
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_25()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.ProglangType:isIntegral()Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_3_18()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_148()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_2_18(I)Z
jtb.syntaxtree.NodeListOptional:present()Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.ProglangType:baseIsScalar()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.Invariant:prob_or(DD)D
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfo:isDerived()Z
jtb.JavaParser:jj_3R_68()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:jj_3R_107()Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.Invariant:logDetail()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_86()Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
utilMDE.MathMDE:gcd([I)I
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus; | CONSTANT | 3685 | 0 -> -1
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.visitor.FormatCommand:getNumCommands()I
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
jtb.JavaParser:jj_3_13()Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap:size()I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.Quant:memberOf(I[I)Z
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:jj_3R_135()Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaCharStream:FillBuff()V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.filter.ObviousFilter:ObviousFilter()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
647 2 698 2 1044 2 63 2 484 2 1376 4 145 2 895 2 1402 2 
834 6 1419 2 1265 2 884 2 531 2 1032 2 551 2 1297 2 544 6 1128 6 1351 2 
50 2 208 2 42 6 109 2 866 4 1415 6 484 2 602 2 698 2 1261 4 1524 2 89 6 277 6 
1196 2 347 8 1167 8 1204 2 1114 8 1090 8 1013 16 1555 17 693 12 484 4 1458 2 698 4 936 6 1020 4 1372 2 1541 8 307 17 740 4 1290 2 1377 8 203 8 
1302 6 188 4 
1137 2 
1414 2 1167 2 1114 2 1090 2 1360 2 1526 2 686 2 1377 2 989 2 347 2 1013 4 1555 6 1077 2 693 4 231 2 353 2 936 2 1242 2 307 6 1541 2 203 2 
347 8 1167 8 210 4 1114 8 1090 8 1013 16 1555 19 373 8 44 2 1372 2 760 4 1111 2 307 9 1541 8 1530 8 1377 8 203 8 
1249 2 31 2 710 2 1169 10 1062 4 1398 2 81 2 33 2 1443 2 434 2 1095 2 846 2 785 14 1071 8 395 4 1228 2 220 4 790 2 928 4 513 4 1344 2 574 4 168 2 1347 10 1479 2 1557 2 668 4 1558 2 254 2 469 4 405 4 997 4 1433 2 255 6 1482 2 1195 4 1485 4 1058 2 452 62 455 4 
1206 2 621 2 886 2 613 2 256 2 1054 2 1137 2 1240 2 608 2 980 2 
457 2 1331 4 918 2 1064 2 1399 2 844 2 316 2 1334 4 1071 2 1228 2 569 2 513 4 370 2 1294 2 931 2 427 2 726 2 474 2 133 2 943 2 1245 2 1468 2 680 2 336 2 824 2 484 4 536 4 1512 2 436 2 391 2 290 2 738 2 645 2 647 2 901 2 1050 2 604 2 694 2 1522 2 698 4 306 2 1485 2 155 2 1489 2 
347 4 1167 4 964 2 1114 4 1090 4 1505 8 1013 8 1555 9 484 4 275 4 698 4 307 8 1541 4 368 8 1377 4 203 4 
1071 2 255 2 1557 2 
408 2 991 22 1030 2 692 2 1031 2 600 2 754 2 125 2 1236 2 485 2 340 2 290 2 543 10 261 2 
1166 2 1 2 409 2 801 4 1275 2 314 2 1493 1 111 2 1173 2 412 1 317 32 215 2 7 3 417 2 216 2 11 6 1178 1 1403 2 118 3 321 2 970 1 1504 2 421 2 16 4 815 4 227 3 1192 2 626 2 232 2 522 3 1408 1 888 8 523 2 977 2 1409 16 1411 1 129 16 631 2 818 1 978 1 632 1 132 2 528 2 820 24 1413 2 529 2 983 2 335 1 636 8 1308 4 637 3 338 2 535 2 895 2 438 2 243 2 1513 2 1198 2 1200 2 542 6 739 2 245 2 1314 6 345 2 41 2 1203 4 549 2 1205 2 648 2 903 2 905 2 553 4 1427 2 1428 1 907 2 651 2 1107 16 447 2 556 1 748 2 449 2 1112 2 1436 3 916 2 838 2 753 3 51 2 1437 5 360 2 1439 4 362 2 1442 16 1445 2 55 2 659 1 1123 2 269 2 464 2 663 2 1127 2 1009 2 766 12 854 2 1014 2 376 4 1460 2 68 3 582 6 1019 2 473 1 1021 2 1542 2 1024 2 72 2 477 2 1352 2 779 1 1354 2 1253 2 387 2 1357 3 586 32 77 2 79 2 947 8 187 2 484 34 1368 2 1259 12 392 2 786 24 88 2 396 1 293 2 1378 1 1476 2 795 2 1157 2 101 3 195 2 1162 3 1385 2 698 32 104 2 103 2 702 2 496 3 1057 2 499 2 
1446 2 
1325 2 484 2 
333 2 484 4 1270 2 
0 328 1168 2 3 8 410 2 411 8 1174 6 416 2 8 2 1175 8 805 22 10 2 808 2 809 26 810 2 1180 60 1183 26 1184 14 418 2 1186 4 1187 2 1189 6 814 376 422 2 424 4 425 2 19 2 428 4 817 20 25 6 432 84 825 4 435 12 35 2 34 2 1197 2 1199 6 827 2 442 6 830 88 831 6 40 6 1207 4 833 8 46 20 1211 2 47 2 836 2 451 4 48 46 454 28 837 2 456 4 1216 64 841 4 458 2 1218 198 843 2 52 12 460 6 1223 10 57 198 58 4 1227 2 1229 2 848 2 465 4 60 6 466 2 855 6 1232 2 856 244 1234 6 64 2 65 112 1235 8 858 2 1237 2 472 192 471 4 1241 32 1243 6 476 4 69 26 70 2 71 2 1247 6 860 6 75 198 76 2 1250 50 482 4 484 10 861 2 1258 2 83 2 1260 204 487 12 863 6 85 30 87 6 1262 2 865 2 90 182 490 2 91 106 1264 12 492 6 93 2 95 6 494 4 102 4 105 12 870 14 871 4 872 4 873 2 500 2 874 8 501 2 1273 2 1272 12 503 182 504 16 108 8 875 4 876 2 877 6 1277 4 110 6 1279 60 1278 2 505 12 1282 6 115 24 507 46 1284 2 1285 2 510 8 117 20 1288 4 883 2 121 2 120 12 514 16 1292 4 1293 4 122 198 1295 6 1296 6 887 6 520 12 1299 4 126 68 130 2 1303 2 134 2 135 18 891 8 137 2 1307 30 1306 2 1305 386 138 4 894 2 1309 2 140 2 1310 6 540 20 141 2 897 26 144 6 1313 6 546 6 146 8 899 2 547 4 148 2 550 2 1317 2 552 6 554 2 1318 2 151 4 909 2 910 60 557 2 558 2 911 4 912 2 1322 2 917 2 1330 2 920 10 160 12 922 6 923 4 162 2 1337 64 163 2 567 4 568 4 570 26 571 6 1341 2 166 4 929 8 573 2 1345 92 575 2 1348 4 170 6 169 2 172 4 932 48 174 2 579 4 178 6 177 6 940 24 941 2 1350 14 584 12 1353 2 1355 6 1356 2 1358 74 945 4 1362 28 186 2 1365 4 589 4 190 2 592 2 593 10 1369 2 951 2 596 6 597 4 598 566 953 132 1381 2 1384 6 957 4 1387 432 958 4 1391 2 1394 4 610 2 206 94 205 204 1395 2 211 2 612 6 1397 198 213 4 615 46 221 12 971 2 619 6 620 4 972 14 973 46 226 4 1406 2 974 2 1407 2 622 2 625 4 1410 6 629 6 234 54 1412 4 979 2 633 30 981 2 1417 132 639 2 241 2 242 8 1418 2 987 30 244 4 988 22 642 2 646 2 650 30 1423 2 1425 4 1426 28 252 2 1430 2 253 2 1431 336 1434 2 998 6 1000 6 1438 2 264 2 655 4 1002 46 266 6 1004 2 656 2 658 6 1447 118 1448 6 1449 4 660 26 1007 2 1450 2 1008 198 1451 2 1010 160 1011 6 1454 26 665 2 666 6 1456 2 669 224 670 2 1015 432 274 6 1459 2 1018 98 1462 6 672 16 1463 52 1464 2 677 6 1465 28 279 26 1025 2 1467 2 678 10 679 20 1033 20 1469 244 284 2 285 2 1470 2 1036 2 286 2 1037 2 287 2 684 6 685 2 1039 4 289 4 291 6 292 8 1042 48 1474 14 1043 6 1045 4 296 2 1475 4 690 2 1047 10 1048 6 691 2 1477 82 1478 4 301 4 1480 8 695 4 698 10 701 198 1055 4 1486 2 1056 6 308 2 1491 8 1060 86 706 6 310 2 1061 20 1492 4 312 2 711 66 1494 4 1065 6 1066 14 1067 14 318 2 1496 4 713 18 714 6 716 2 320 290 321 2 1498 2 322 2 324 6 326 2 325 2 1499 4 1500 60 327 4 329 2 721 4 722 2 331 2 1507 22 1082 4 1083 2 1087 6 1086 2 1088 8 1089 2 730 26 731 6 732 2 334 2 337 4 1091 30 1093 2 339 6 736 112 341 2 737 2 1096 2 1097 2 741 244 1516 2 348 6 1102 198 1518 328 743 22 351 2 352 30 1104 2 357 4 746 2 1108 2 1523 2 1109 2 359 2 752 2 1525 2 1113 28 1118 2 1527 2 1528 2 1121 2 1124 30 366 4 1125 6 761 2 367 2 1533 70 1129 30 1130 2 1534 112 1132 2 372 2 768 4 374 6 1133 2 375 2 769 4 1134 2 1537 4 1538 2 771 26 1540 2 772 2 380 2 1139 2 775 8 1140 16 777 2 778 30 385 6 388 4 1546 2 1142 20 1547 30 780 106 1143 18 1144 140 1145 2 1549 2 783 4 1147 192 784 2 393 2 1550 112 1551 228 1149 8 789 2 792 10 791 2 1154 6 1155 4 1156 2 798 2 404 2 1163 4 1164 26 
1466 2 1012 1 756 2 1289 2 
1016 2 756 2 
1196 2 611 2 1071 2 1535 2 1416 2 756 2 1444 2 
1535 2 1076 2 756 2 
1535 2 343 2 756 2 
794 2 1221 2 1289 2 
1535 2 756 2 
1221 2 1034 2 
699 2 756 2 
757 2 1221 2 1289 2 
709 2 131 2 1289 2 
1215 2 671 2 1289 2 
371 2 37 2 1289 2 
1122 2 189 2 1289 2 
171 2 1221 2 
1085 2 756 2 
131 2 986 2 
1215 2 43 2 
219 2 37 2 
189 2 1084 2 
511 2 1221 2 
793 2 189 2 
164 2 37 2 
1215 2 107 2 
192 2 131 2 
1194 2 757 2 1221 2 1289 2 
1194 2 757 2 534 2 1221 2 1289 2 
401 2 1221 2 1289 2 
1221 2 1289 2 377 2 
1222 2 433 2 201 2 749 2 
94 2 853 2 991 6 1117 2 1255 2 1276 2 576 2 483 2 1172 2 1158 2 390 4 1080 2 56 2 233 4 378 2 641 2 450 2 27 2 
962 2 1289 2 
1071 2 1416 2 782 2 515 2 
1071 2 299 2 1416 2 782 2 1444 2 515 2 
1196 2 1071 2 1535 2 1416 2 756 2 1038 2 
824 2 1283 2 
1196 2 1071 2 864 2 1416 2 
927 2 37 2 
382 2 189 2 
1254 2 131 2 
1215 2 86 2 
1215 2 566 2 189 2 
1215 2 1040 2 189 2 
1215 2 142 2 189 2 
1215 2 189 2 1078 2 
1116 2 1545 2 823 2 1416 2 1071 2 806 2 1404 6 1049 6 
1221 2 577 2 
103 2 
1166 2 708 2 1 2 1275 2 212 2 314 2 1171 4 111 2 317 4 215 2 712 2 417 2 11 2 321 2 618 2 970 2 16 4 813 2 815 2 232 2 626 2 523 2 977 2 1409 6 128 4 528 2 983 2 1308 4 636 2 535 2 895 2 438 2 1198 2 542 2 828 2 1314 6 1517 2 1203 4 549 2 250 2 905 2 553 4 1428 2 907 2 447 6 262 2 838 2 51 2 360 2 1439 2 269 2 1123 2 1340 2 1342 2 766 8 376 2 276 2 582 4 1019 2 473 4 1021 2 278 2 1024 2 1352 2 585 2 387 2 1253 4 586 6 77 2 484 26 1259 8 99 2 195 2 698 26 104 2 609 2 
1166 2 708 2 1 2 1275 2 212 2 314 2 1171 4 111 2 317 4 215 2 712 2 417 2 11 2 321 2 618 2 970 2 16 4 813 2 815 2 232 2 626 2 523 2 977 2 1409 6 128 4 528 2 983 2 1308 4 636 2 535 2 895 2 438 2 1198 2 542 2 828 2 1314 6 1203 4 549 2 250 2 905 2 553 4 1427 2 1428 2 907 2 447 6 262 2 838 2 51 2 360 2 1439 2 269 2 1123 2 766 8 173 2 376 2 1460 2 276 2 582 6 1019 2 473 2 1021 2 278 2 1024 2 384 2 1352 2 585 2 387 2 1253 4 586 6 77 2 484 26 1368 2 1259 8 594 2 99 2 195 2 698 26 104 2 609 2 
662 2 
926 2 904 2 
884 2 601 2 420 2 300 2 925 2 403 2 724 4 1069 2 179 2 153 2 544 2 774 2 1128 2 776 2 1351 2 1324 2 39 2 1304 4 
1166 2 1 2 561 2 360 2 1001 2 1068 2 925 2 417 2 880 2 1069 2 365 2 319 6 321 2 1128 6 884 4 812 2 420 2 857 2 1297 2 426 2 724 4 976 2 1017 2 725 2 580 2 179 2 23 2 774 4 776 2 727 4 1351 4 1304 4 1251 4 531 2 1308 2 484 12 1150 2 544 4 39 2 1314 4 549 2 601 2 1554 4 300 2 97 2 553 2 403 2 251 2 1520 2 697 4 834 6 1521 2 907 2 698 6 153 2 555 2 1320 2 1393 4 1324 2 839 2 
1166 2 1 2 561 2 360 2 1001 2 1068 2 925 2 417 2 880 2 1069 2 365 2 319 6 321 2 1128 4 884 4 812 2 420 2 857 2 1297 2 426 2 724 4 976 2 1017 2 725 2 580 2 179 2 23 2 774 4 776 2 727 4 1351 4 1304 4 1251 4 1308 2 484 12 1150 2 544 6 39 2 1314 4 549 2 601 2 1554 4 300 2 97 2 551 2 553 2 403 2 251 2 1520 2 697 4 834 6 1521 2 907 2 698 6 153 2 555 2 1320 2 1393 4 1324 2 839 2 
1166 2 1 2 561 2 360 2 1001 2 1068 2 925 2 417 2 880 2 1069 2 365 2 319 6 321 2 1128 6 884 4 812 2 420 2 857 2 1297 2 426 2 724 4 976 2 1017 2 725 2 580 2 179 2 23 2 774 4 776 2 727 4 1351 4 1304 4 1251 4 1308 2 484 12 1419 2 1150 2 544 6 39 2 1314 4 549 2 601 2 1554 8 300 2 97 2 553 2 403 2 251 2 1520 2 697 4 834 6 1521 2 907 2 698 6 153 2 555 2 1320 2 1393 4 1324 2 839 2 
1166 2 1 2 561 2 360 2 1001 2 1068 2 925 2 417 2 880 2 1069 2 365 2 319 10 321 2 1128 6 884 4 812 2 420 2 857 2 1297 2 426 2 724 4 976 2 1017 2 725 2 580 2 179 2 23 2 774 4 776 2 727 8 1351 4 1304 4 1251 4 1308 2 484 12 1419 2 1150 2 544 8 39 2 1314 4 549 2 601 2 1554 8 300 2 97 2 551 2 553 2 403 2 251 2 1520 2 697 4 834 8 1521 2 907 2 698 6 153 2 555 2 1320 2 1393 4 1324 2 839 2 
1166 2 1 2 561 2 360 2 1001 2 1068 2 925 2 417 2 880 2 1069 2 365 2 319 10 321 2 1128 6 884 4 812 2 420 2 857 2 1297 2 426 2 724 4 976 2 1017 2 725 2 580 2 179 2 23 2 774 4 776 2 727 8 1351 4 1304 4 1251 4 1308 2 484 12 1419 2 1150 2 544 6 39 2 1314 4 549 2 601 2 1554 8 300 2 97 2 553 2 403 2 251 2 1520 2 697 4 834 6 1521 2 907 2 698 6 153 2 555 2 1320 2 1393 4 1324 2 839 2 
1166 2 1 2 963 1 215 2 417 2 1176 6 11 2 222 4 812 2 16 4 420 2 815 2 17 6 228 2 426 2 976 2 626 2 977 2 1409 6 23 4 238 1 431 1 635 1 636 2 1198 2 828 2 39 2 1203 4 249 6 1422 2 994 6 444 2 1424 6 1427 2 251 2 995 6 45 2 834 12 447 6 839 2 999 2 1439 2 265 6 1001 2 1003 2 54 2 1446 6 269 2 272 2 857 2 468 8 1460 2 1017 2 1461 2 1019 2 674 2 1022 2 278 2 1027 1 1251 4 77 2 484 46 1035 2 288 1 1259 4 1263 2 300 2 97 2 1270 6 697 8 104 2 698 24 1059 10 708 2 1275 2 314 2 1068 2 317 2 880 2 1069 2 1070 2 882 2 319 2 321 2 119 6 719 2 720 2 1501 6 884 4 1297 4 724 4 725 2 523 2 524 1 128 4 526 2 1304 4 1308 4 535 2 895 2 139 6 542 2 544 8 1314 6 549 2 350 2 551 4 905 2 553 4 1520 2 907 2 1521 4 153 2 555 2 1320 2 358 2 158 1 1324 2 159 2 1325 6 561 2 360 2 1332 2 919 2 921 6 1119 2 925 2 1336 2 1128 4 764 4 766 4 376 2 580 2 179 2 1539 2 582 6 937 2 939 2 774 4 776 2 1351 4 1352 2 585 4 387 2 586 8 587 7 591 6 191 2 1150 2 1380 2 601 2 1554 2 403 2 195 12 197 2 196 6 1559 1 198 2 607 7 1393 6 
708 2 1166 2 1 2 1275 2 314 2 1068 2 317 2 215 2 880 2 417 2 1070 2 1069 2 1176 6 319 2 882 2 11 2 222 4 321 2 119 6 719 2 1501 6 720 2 884 4 812 2 420 2 16 4 815 4 228 2 17 6 1297 4 426 2 724 4 976 2 725 2 626 2 523 2 977 2 1409 6 128 4 23 4 526 2 1304 4 532 2 636 2 1308 4 535 2 895 2 139 6 1419 4 1198 2 828 2 542 2 544 8 39 2 1314 6 249 6 1203 4 1422 2 549 2 350 2 994 6 444 2 1424 6 905 2 553 4 1427 2 251 2 45 2 995 6 1520 2 834 12 1521 4 907 2 153 2 447 6 555 2 1320 2 358 2 159 2 1324 2 839 2 999 2 1325 6 561 2 360 2 919 2 1332 2 1439 4 1119 2 265 6 921 6 1001 2 1003 2 925 2 54 2 1336 2 1446 6 269 2 1128 8 764 4 766 8 272 2 857 2 376 4 468 8 1017 2 1460 2 1461 2 580 2 1539 2 179 2 582 6 939 2 937 2 1019 2 674 2 774 4 1022 2 278 2 776 2 1351 4 1352 2 585 4 1251 4 1253 2 387 2 586 8 77 2 484 48 1035 2 591 6 1259 8 191 2 1150 2 1263 2 1380 2 601 2 1554 6 97 2 300 2 1270 6 403 2 195 12 697 8 196 6 197 2 698 26 104 2 198 2 200 2 1393 6 1059 10 
708 2 1166 2 1 2 1275 2 314 2 1068 2 317 2 215 2 880 2 417 2 1070 2 1069 2 1176 6 882 2 11 2 319 6 222 4 321 2 119 6 719 2 1501 6 720 2 884 4 812 2 420 2 16 4 815 4 228 2 17 6 1297 4 426 2 724 4 976 2 725 2 626 2 523 2 977 2 1409 6 128 4 23 4 526 2 727 4 1304 4 532 2 636 2 1308 4 535 2 895 2 139 6 1419 4 1198 2 828 2 542 2 544 8 39 2 1314 6 249 6 1203 4 1422 2 549 2 350 2 994 6 444 2 1424 6 905 2 553 4 1427 2 251 2 45 2 995 6 1520 2 834 12 1521 4 907 2 153 2 447 6 555 2 1320 2 358 2 159 2 1324 2 839 2 999 2 1325 6 561 2 360 2 919 2 1332 2 1439 4 1119 2 265 6 921 6 1001 2 1003 2 925 2 54 2 1336 2 1446 6 269 2 1128 8 764 4 766 8 272 2 857 2 376 4 468 8 1017 2 1460 2 1461 2 580 2 1539 2 179 2 582 6 939 2 937 2 1019 2 674 2 774 4 1022 2 278 2 776 2 1351 4 1352 2 585 4 1251 4 1253 2 387 2 586 8 77 2 484 48 1035 2 591 6 1259 8 191 2 1150 2 1263 2 1380 2 601 2 1554 6 97 2 300 2 1270 6 403 2 195 12 697 8 196 6 197 2 698 26 104 2 198 2 200 2 1393 6 1059 10 
1166 2 1 2 4 6 215 2 417 2 1176 6 11 4 969 2 222 4 812 2 16 4 420 2 815 4 17 6 228 2 426 2 976 2 626 2 977 2 1409 8 23 4 24 6 636 4 1419 4 1198 2 828 4 39 2 1203 4 249 6 1422 2 994 12 444 2 1424 6 1427 2 251 2 995 6 45 2 834 16 447 8 448 2 839 2 999 2 1439 4 265 6 1001 2 1003 2 657 2 54 2 1446 12 269 2 1230 2 272 2 857 2 468 8 1460 2 1017 2 1461 2 1019 2 674 2 673 6 1022 2 278 2 1251 4 1253 2 77 2 484 52 1035 2 1259 10 1263 2 687 6 300 2 97 2 1051 2 1270 12 697 8 104 2 698 24 1059 8 708 2 1275 2 314 2 1068 2 317 4 880 2 1069 2 116 6 1070 2 319 6 882 2 1072 2 321 2 119 6 719 2 720 2 1501 6 884 4 1297 4 724 4 725 2 523 2 128 6 526 2 727 4 1304 4 532 2 531 2 1308 4 1092 6 535 2 895 2 139 12 542 4 544 10 1314 6 549 2 149 2 350 2 551 2 905 2 553 4 1520 2 907 2 1521 4 153 2 555 2 1320 2 358 2 1324 2 159 2 1325 12 561 2 360 2 1332 2 919 2 921 6 1119 2 925 2 1128 10 764 4 1532 6 766 10 930 6 376 4 580 2 179 2 1539 2 582 6 937 2 939 2 583 2 774 4 776 2 1351 4 1352 2 585 4 387 2 586 12 591 6 191 2 1150 2 1380 2 601 2 194 6 1554 6 403 2 195 10 197 2 196 12 198 2 200 2 1393 6 
1251 2 484 4 1001 2 1068 2 880 2 1419 2 1150 2 319 4 544 6 1128 6 39 2 884 4 601 2 1554 6 97 2 857 2 300 2 1297 2 426 2 251 2 403 2 724 2 697 2 1520 2 725 2 1017 2 834 4 580 2 179 2 1393 2 727 4 776 2 1324 2 1351 4 1304 2 
1166 2 708 2 1 2 1275 2 314 2 1400 2 1068 2 317 3 215 2 880 2 417 2 11 3 319 2 321 2 884 4 421 2 16 4 124 2 1297 2 426 2 724 2 725 2 523 2 977 2 1409 6 128 4 1304 2 1308 4 535 2 895 2 1419 2 1198 2 542 3 544 6 644 2 1314 6 39 2 1203 4 549 2 445 2 905 2 553 4 1427 2 251 2 1520 2 834 4 907 2 447 6 839 2 1324 2 360 2 1001 2 1336 2 269 2 1128 6 467 2 1014 2 857 2 1460 2 175 3 1017 2 580 2 179 2 582 6 1019 2 278 2 776 2 1351 4 1352 2 1251 2 585 2 387 2 586 8 77 2 484 28 1150 2 601 2 1554 6 97 2 300 2 1157 2 403 2 697 2 195 4 698 24 103 2 104 2 1393 2 1059 2 
1166 2 1 2 561 2 360 2 1001 2 1068 2 925 2 417 2 880 2 1069 2 365 2 319 10 321 2 1128 6 884 4 812 2 420 2 857 2 1297 2 426 2 724 4 976 2 1017 2 725 2 580 2 179 2 23 2 774 4 776 2 727 8 1351 4 1304 4 1251 4 1308 2 484 12 1419 2 1150 2 544 6 39 2 1314 4 549 2 601 2 1554 8 300 2 97 2 553 2 403 2 251 2 1520 2 697 4 834 6 1521 2 907 2 698 6 153 2 555 2 1320 2 1393 4 1324 2 839 2 
1166 2 1 2 561 2 360 2 1001 2 1068 2 925 2 417 2 880 2 1069 2 319 10 321 2 1128 8 517 4 884 4 812 2 420 2 857 2 1297 2 426 2 724 4 976 2 1017 2 725 2 580 2 179 2 182 2 23 2 774 4 776 2 727 8 1351 4 1304 4 281 2 1251 4 531 2 1308 2 484 12 1419 2 1150 2 544 6 39 2 1314 4 549 2 601 2 1554 8 300 2 553 2 403 2 251 2 1520 2 697 4 834 8 1521 2 907 2 698 6 153 2 555 2 1320 2 1393 4 1324 2 839 2 
880 2 565 2 1001 2 
880 2 565 2 1001 2 
1166 2 708 2 1 2 1275 2 1170 2 314 2 879 2 317 2 1401 2 215 2 880 6 417 2 319 6 222 2 321 2 884 4 419 2 812 2 123 2 16 4 815 4 1297 4 624 2 426 2 724 2 626 4 523 2 977 2 1409 2 23 4 727 4 1304 2 531 4 1308 4 535 2 895 2 1419 4 541 4 1198 2 544 12 248 2 1314 6 39 4 147 2 1203 4 549 2 551 4 905 2 553 4 1427 2 995 2 834 16 1521 2 907 2 153 2 747 2 447 2 1320 2 358 2 262 4 750 2 999 2 561 2 360 2 1332 2 1439 4 53 2 1001 4 462 2 925 2 565 2 269 2 1128 12 764 2 766 4 1455 2 376 4 1460 2 179 2 582 6 1019 2 473 2 675 2 774 4 278 2 1351 4 1352 2 585 6 1251 2 586 2 77 2 484 24 781 2 1259 4 1472 2 1150 2 1554 6 1383 4 403 2 195 4 697 4 698 16 104 2 959 2 1393 4 1059 2 
419 2 549 2 420 2 1455 2 484 4 53 2 413 2 195 2 995 2 191 2 698 2 926 2 938 2 939 2 1110 2 222 2 1059 2 
1166 2 708 2 1 2 1275 2 1170 4 314 2 1280 2 879 2 317 4 1401 2 215 2 880 6 417 2 319 6 321 2 225 2 884 4 419 2 812 2 123 2 16 4 815 4 1297 4 624 2 426 2 724 2 626 4 523 2 977 2 1409 2 23 4 727 4 1304 2 531 4 1308 4 535 2 895 2 1419 4 541 4 1198 2 544 12 1314 6 39 4 147 2 1203 4 549 2 551 4 905 2 553 4 1427 2 995 2 834 16 1521 4 907 2 153 2 447 2 555 2 1320 2 358 2 262 4 750 2 999 2 561 2 360 2 1332 2 1439 4 53 2 1001 4 462 2 925 2 565 2 269 2 1128 12 764 2 766 4 1455 2 376 4 1460 2 1135 2 179 2 582 6 1019 2 675 2 774 4 278 2 1351 4 1352 2 1251 2 585 6 282 2 586 2 77 2 484 24 1259 4 1150 2 1554 6 1383 4 403 2 697 4 195 2 799 2 698 16 104 2 959 2 1393 4 
1166 2 708 2 1 2 1275 2 1170 2 314 2 879 2 317 2 1401 2 215 2 880 6 417 2 319 6 222 2 321 2 884 4 419 2 812 2 123 2 16 4 815 4 1297 4 624 2 426 2 816 2 724 2 626 4 523 2 977 2 1409 2 23 4 727 4 1304 2 29 2 531 4 1308 4 535 2 895 2 1419 4 541 4 1198 2 544 12 1314 6 39 4 147 2 1203 4 549 2 551 4 905 2 553 4 1427 2 995 2 834 16 1521 4 907 2 153 2 447 2 555 2 1320 2 358 2 262 4 750 2 999 2 561 2 360 2 1332 2 1439 4 53 2 1001 4 462 2 925 2 565 2 269 2 463 2 1128 12 764 2 766 4 1455 2 376 4 1460 2 179 2 582 6 1019 2 473 1 675 2 774 4 278 2 1351 4 1352 2 585 6 1251 2 586 2 77 2 78 2 484 24 681 2 1259 4 1150 2 1554 6 1383 4 403 2 195 4 697 4 698 16 104 2 959 2 1393 4 1059 2 
407 2 1166 2 1165 8 1167 8 1 2 802 10 803 2 414 2 415 2 804 2 6 18 417 2 9 18 807 2 11 34 1177 2 12 2 1179 10 1181 2 13 10 811 16 1185 2 14 2 15 18 813 2 16 98 1188 16 1190 2 423 4 1193 8 20 4 429 2 819 4 821 2 822 6 32 2 826 2 437 2 439 2 1198 2 441 18 828 46 829 4 443 2 1201 2 832 2 1203 116 444 2 445 2 1208 18 1210 2 1209 2 446 18 447 14 448 2 1213 4 453 2 1214 2 455 2 49 5 840 2 842 14 1217 2 1219 12 1220 2 845 8 1224 2 847 2 1225 8 1226 10 59 2 849 2 850 18 851 2 1230 2 62 2 467 2 1231 18 1233 2 470 1 1238 8 1239 8 859 68 475 2 1244 2 74 4 478 2 1252 4 479 2 480 2 77 22 1256 2 80 18 484 296 862 18 1259 57 488 2 489 2 491 1 1266 18 493 128 867 2 868 8 98 8 99 2 1268 10 100 2 869 2 1271 2 104 2 495 18 497 2 1275 22 112 18 878 2 113 2 114 18 1281 10 508 11 509 8 1286 2 882 4 1287 2 512 3 1291 2 516 8 885 2 518 2 124 2 519 2 1298 18 521 18 1301 2 523 4 128 12 890 1 527 22 530 18 893 2 892 36 1308 4 533 2 535 2 895 4 538 4 539 2 542 16 896 10 1312 2 143 4 545 2 898 3 1314 6 900 2 1315 2 1316 2 549 2 149 4 905 2 906 2 553 4 1319 2 907 2 908 2 559 6 156 2 1321 19 915 2 1323 4 560 4 1326 18 1328 10 161 8 1333 2 564 10 165 36 1338 2 928 2 167 2 574 2 1346 2 934 2 175 2 1349 3 176 10 935 8 581 18 582 264 181 18 937 2 583 2 942 38 1352 2 185 2 585 2 586 44 1359 2 1361 3 946 32 948 2 1363 2 588 8 1364 2 1366 10 1367 24 1370 4 950 2 1373 2 1375 22 193 1 1377 8 952 18 599 24 1379 2 1382 4 954 2 603 2 195 2 197 2 1389 2 606 2 960 2 1392 2 202 16 961 8 203 8 609 2 209 2 964 2 210 4 212 2 966 2 1400 2 214 1 614 2 616 1 215 4 217 2 218 2 968 2 220 2 617 8 618 22 224 2 970 2 230 18 626 4 977 2 1409 14 235 8 236 4 237 2 239 26 634 2 982 2 636 28 984 36 240 2 638 10 640 33 1420 32 246 18 1421 2 993 4 649 3 250 2 1427 74 1428 2 996 2 258 2 652 18 1435 8 260 8 263 2 653 2 654 1 1003 2 267 24 1442 8 657 2 1005 3 1006 2 269 2 270 2 661 2 1452 4 271 2 1453 10 664 24 1013 16 667 2 1457 2 1460 74 276 2 1019 2 1023 2 1022 2 1026 2 1028 3 1029 8 283 3 682 2 683 2 1473 36 1046 2 295 2 298 8 1051 2 303 2 302 18 696 2 1481 18 698 232 304 2 1483 2 1053 2 305 2 1484 2 703 2 704 10 307 12 1488 2 1487 26 1490 18 309 2 707 22 708 2 314 2 315 2 317 34 1495 2 712 2 1072 2 715 2 1074 2 321 2 1497 2 717 6 718 24 323 16 719 2 1503 1 328 36 723 2 1506 2 1079 2 728 2 729 16 1090 8 733 2 1511 2 1094 8 342 38 1514 16 1098 18 1099 18 344 2 1100 4 1515 16 347 8 1101 2 744 2 355 8 354 8 356 2 1107 20 1106 2 1114 8 360 2 361 4 1120 18 364 38 758 4 1530 8 1531 6 766 54 767 36 1536 2 1136 3 379 2 1541 8 1138 2 773 16 381 2 1543 2 383 2 386 2 387 2 1544 42 1141 10 389 24 1146 4 394 10 395 2 787 2 1151 18 1552 18 1152 3 1153 18 1553 2 1555 19 402 8 797 2 1161 10 1160 10 406 2 
944 2 1028 2 387 2 586 2 948 2 1268 2 484 2 1457 2 797 2 638 4 317 2 176 2 996 2 698 2 11 2 447 2 1409 2 828 6 128 2 542 2 1244 2 156 2 851 2 406 2 
944 2 1028 2 387 2 586 2 948 2 1268 2 484 2 1457 2 797 2 638 4 317 2 176 2 996 2 698 2 11 2 447 2 1409 2 828 6 128 2 542 2 1244 2 156 2 851 2 406 2 
944 2 1028 2 387 2 586 2 948 2 1268 2 484 2 1457 2 797 2 638 4 317 2 176 2 996 2 698 2 11 2 447 2 1409 2 828 6 128 2 542 2 1244 2 156 2 851 2 406 2 
729 4 1167 2 1114 2 1090 2 1115 2 387 2 1329 2 586 2 80 3 484 10 363 2 1442 2 317 3 967 2 11 3 1286 2 1514 4 399 2 246 3 763 2 1377 2 1100 2 689 3 369 4 347 2 992 2 1013 4 1188 4 1555 5 1193 4 889 2 698 4 1107 2 1239 2 859 6 1541 2 202 4 204 2 406 2 203 2 
729 4 1167 2 1114 2 1090 2 1115 2 387 2 1329 2 586 2 80 2 484 10 363 2 1442 2 317 2 967 2 11 2 1286 2 1514 4 399 2 246 2 763 2 1377 2 1100 2 689 2 369 4 347 2 992 2 1013 4 1188 4 1555 4 1193 4 889 2 698 4 1107 2 1239 2 859 6 307 4 1541 2 202 4 204 2 406 2 203 2 
729 4 1167 2 1114 2 1090 2 1115 2 387 2 1329 2 586 2 80 2 484 10 363 2 1442 2 317 2 967 2 11 2 1286 2 1514 4 399 2 246 2 763 2 1377 2 1100 2 689 2 369 4 347 2 992 2 1013 4 1188 4 1555 5 1193 4 889 2 698 4 1107 2 1239 2 859 6 307 3 1541 2 202 4 204 2 406 2 203 2 
729 4 1167 2 1114 2 1090 2 1115 2 387 2 1329 2 586 2 80 2 484 10 363 2 1442 2 317 2 967 2 11 2 1286 2 1514 4 399 2 246 2 763 2 1377 2 1100 2 689 2 369 4 347 2 992 2 1013 4 1188 4 1555 4 1193 4 889 2 698 4 1107 2 1239 2 859 6 307 4 1541 2 202 4 204 2 406 2 203 2 
729 4 1167 2 1114 2 1090 2 1115 2 387 2 1329 2 586 2 80 2 484 10 363 2 1442 2 317 2 967 2 11 2 1286 2 1514 4 399 2 246 2 763 2 1377 2 1100 2 689 2 369 4 347 2 992 2 1013 4 1188 4 1555 4 1193 4 889 2 698 4 1107 2 1239 2 859 6 307 4 1541 2 202 4 204 2 406 2 203 2 
1148 2 949 2 762 2 1103 2 1536 2 572 2 
28 2 949 2 1131 2 84 2 618 2 956 2 498 2 
311 2 1327 2 965 2 313 2 81 1 484 10 735 2 268 1 563 2 1335 2 139 2 1371 1 1073 2 788 2 223 2 790 1 1343 2 1502 2 1267 1 902 2 907 2 700 2 698 8 154 2 630 2 157 2 
1026 2 1167 6 210 2 1090 6 1114 6 484 6 1530 4 368 4 1377 6 1182 2 1100 2 347 6 1505 2 1013 12 349 2 1555 15 604 2 1193 4 726 2 275 2 698 6 908 2 180 2 1388 2 236 2 1541 6 307 7 203 6 
729 2 742 2 1188 2 1556 2 332 2 1441 2 1429 2 1081 2 1339 2 643 2 1246 2 202 2 990 2 
729 2 742 2 1188 2 1556 2 484 1 332 4 1441 2 1429 2 698 1 1081 6 1339 2 759 1 595 2 643 2 1508 2 1246 2 202 2 990 2 
729 2 742 2 1188 2 1556 4 332 4 1441 2 1429 2 1081 6 1339 2 595 2 1508 2 643 4 1246 4 202 2 990 2 
729 2 742 2 1188 2 1556 8 484 1 332 4 1441 2 1429 2 698 1 1081 10 1339 2 759 1 595 6 1508 8 643 8 1246 8 202 2 990 2 
1165 4 502 32 2 8 1396 4 1275 6 803 2 112 4 114 4 1495 2 6 4 508 8 9 4 881 10 617 4 1075 2 717 4 328 10 15 4 16 36 1506 2 623 8 1191 2 1298 8 521 4 230 4 1300 2 523 2 525 2 628 10 430 2 890 2 136 4 530 6 892 10 1509 2 984 6 342 8 441 16 1098 4 38 4 1202 2 1203 44 1208 8 150 4 1427 26 1105 2 446 4 1212 4 257 8 652 4 260 4 259 8 1321 6 453 4 1326 4 1440 2 845 4 364 24 1225 4 165 10 758 5 850 4 852 16 767 11 1231 4 578 2 770 2 1460 28 935 4 470 2 581 4 582 102 473 2 676 2 942 24 1544 30 481 1 389 14 77 6 484 78 862 4 82 2 1259 16 1473 10 488 2 1151 4 1552 4 688 10 92 16 1153 4 193 2 491 4 952 4 400 2 297 2 1266 4 298 4 493 24 402 4 868 4 955 2 302 4 1481 4 698 70 495 4 305 4 1390 4 1490 4 961 4 207 4 
49 2 1326 4 1275 2 654 2 803 2 214 2 5 2 1495 2 508 6 9 2 165 6 1075 2 850 4 717 4 1503 2 328 6 15 2 767 2 1231 4 16 14 1506 2 1191 2 521 4 230 4 770 2 20 2 1460 12 581 2 523 2 582 40 473 2 239 2 530 2 1248 2 1509 2 892 2 1544 6 984 2 77 2 484 28 640 10 1259 14 1473 6 488 2 397 2 1151 2 143 2 1153 4 491 2 1203 14 493 8 955 2 1427 12 152 2 1105 2 698 26 305 2 1321 4 453 2 
1165 4 1274 8 1275 14 803 8 112 6 214 2 5 2 114 6 1495 8 6 6 508 15 9 10 617 4 1075 2 717 8 1503 2 15 10 328 16 330 10 16 88 1506 8 1191 2 18 4 230 6 1298 24 521 6 20 11 523 8 525 2 127 4 890 2 239 4 30 8 530 10 892 18 1509 2 984 36 537 26 640 22 342 50 441 42 1098 6 1099 24 143 4 1202 2 346 2 548 10 1203 112 649 2 1208 42 1427 58 745 4 152 2 835 4 1432 18 1105 2 446 6 652 6 260 4 1321 8 914 90 453 4 49 7 1326 6 654 2 1120 24 845 4 364 92 1225 4 165 16 758 5 1529 2 850 6 765 24 61 4 767 16 1231 6 933 2 770 2 1460 58 935 4 66 12 67 4 470 2 581 10 582 248 181 6 183 4 473 4 942 84 1248 2 184 4 1544 34 389 12 77 14 484 150 1548 4 1366 2 862 6 486 6 1259 28 1473 16 1041 8 488 4 1151 10 1552 6 1374 24 1153 6 491 6 193 4 952 6 294 10 1266 6 298 4 493 124 402 4 868 4 1269 90 302 6 605 26 1481 6 495 6 698 134 305 4 106 24 1490 6 961 4 
1326 2 1275 2 1063 2 459 2 803 2 562 2 755 2 461 2 924 4 1495 2 9 2 881 2 165 4 1075 2 850 2 765 2 767 2 15 2 328 4 1231 2 330 2 16 20 1506 2 1191 2 230 2 229 2 521 2 770 2 1460 6 67 2 627 4 581 2 523 2 582 48 628 2 473 2 430 2 26 2 73 4 280 2 530 2 892 2 1509 2 984 2 77 2 1510 2 734 2 484 46 1257 2 590 2 985 2 1471 2 1259 36 440 2 1473 4 1311 2 1041 2 1151 2 397 2 398 2 688 2 1374 2 36 2 1153 2 247 2 491 2 294 2 599 6 548 2 1203 20 297 2 493 6 96 2 955 2 796 2 1052 2 1159 2 1427 6 152 2 1519 2 1105 2 1386 2 698 44 199 2 106 2 705 2 913 2 1321 6 751 2 653 4 800 2 
22 2 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 
21 1 1126 1 1405 1 975 1 273 1 506 1 

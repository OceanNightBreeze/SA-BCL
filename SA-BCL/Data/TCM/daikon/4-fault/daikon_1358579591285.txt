#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 495 89 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.ArrayIndexOutOfBoundsException 896 606 776 710 575 392 244 558 9 294 582 878 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V FAILED junit.framework.AssertionFailedError 
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 493 613 855 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsGtIndex([I)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:lexLT([I[I)Z
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:lte(II)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:union([I[I)[I
daikon.Quant:lt(II)Z
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.FuzzyFloat:lt(DD)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONSTANT | 14759 | 1 -> -1
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.PptSlice1:num_samples()I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.ModBitTracker:num_samples()I
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:eltwiseEqual([I)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
utilMDE.MathMDE:gcd(II)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:gt(II)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:getEndColumn()I
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.Debug:logOn()Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.Ppt:Ppt()V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.ValueTuple:isMissing(I)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:setnext2()V
daikon.diff.Node:Node()V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaCharStream:getEndLine()I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ModBitTracker:num_sets()I
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.Invariant:logDetail()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptSlice0:arity()I
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:concat([I[I)[I
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName:hashCode()I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:sign(I)I
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:BeginToken()C
daikon.ValueTuple:size()I
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.Quant:eq(II)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Quant:ne(II)Z
utilMDE.WeakHasherMap:size()I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.Invariant:getConfidence()D
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.ArraysMDE:max([I)I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptName:isEnterPoint()Z
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsGteIndex([I)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:min_max([I)[I
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:memberOf(I[I)Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
utilMDE.ArraysMDE:sum([I)I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:num_vars()I
utilMDE.ArraysMDE:element_range([I)I
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:passes()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.LimitedSizeIntSet:size()I
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:lexGTE([I[I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
utilMDE.MathMDE:gcd([I)I
daikon.ProglangType:isIntegral()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:dimensions()I
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.diff.RootNode:RootNode()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:gte(II)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_ntk()I
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ProglangType:baseIsIntegral()Z
daikon.Quant:isReverse([I[I)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:repr()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.VarInfo:name()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:sum([[I)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.PptSlice1:arity()I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lexGT([I[I)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.JavaCharStream:readChar()C
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:isPseudoArray()Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern:intern([J)[J
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsLTE([II)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.ProglangType:baseIsScalar()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.Invariants:Invariants()V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:gcd(JJ)J
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.Invariant:prob_and(DD)D
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.Quant:eltsLT([II)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:eltsGTE([II)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String; | RETURN | 3594 | return null
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfo:relate_var()V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.MathMDE:negate(I)I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.inv.Invariant:logOn()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.Invariant:justified()Z
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaCharStream:getBeginLine()I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern([I)[I
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:slice([III)[I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.InvMap:InvMap()V
daikon.Quant:setDiff([I[I)[I
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:subsetOf([B[I)Z | CONDITION | 29819 | if (x) -> if (!x)
daikon.Debug:logDetail()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:sameLength([I[I)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONDITION | 50578 | if (x) -> if (!x)
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eltwiseLT([I)Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:isArray()Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:noDups([I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.VarInfoAux:hashCode()I
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
63 2 276 2 608 2 872 2 523 2 459 2 506 4 532 2 190 2 
224 2 236 6 507 6 305 2 762 2 41 2 168 2 920 2 13 2 597 2 353 6 
518 2 820 2 2 4 439 2 459 2 542 6 53 4 707 6 523 2 99 6 528 2 76 6 386 2 
172 16 909 26 885 2 459 6 490 29 680 2 433 10 523 6 923 2 341 8 708 6 128 8 711 8 158 10 82 10 566 4 377 2 688 2 719 4 800 4 317 12 869 4 318 2 805 16 609 2 167 10 449 10 750 16 846 6 908 8 
713 4 384 6 
871 2 
751 2 700 2 459 4 585 2 824 2 463 2 523 4 180 2 72 2 654 2 402 2 282 2 343 2 658 2 470 2 903 2 608 2 195 2 424 2 486 2 851 2 487 2 853 2 494 2 37 4 436 2 498 2 737 2 316 2 797 2 632 2 164 2 54 2 318 2 803 2 744 2 445 4 448 4 807 2 113 2 808 2 321 2 877 2 451 4 
172 32 909 48 252 6 885 2 459 4 145 4 65 4 490 54 760 4 619 2 433 16 523 4 765 2 708 4 372 2 128 18 259 2 711 6 625 6 129 4 158 16 714 6 438 4 82 16 288 8 441 2 741 6 317 22 540 6 869 2 138 4 805 32 906 6 167 16 449 6 750 32 846 4 640 4 248 2 
929 2 628 2 164 2 
880 2 260 2 118 22 585 2 661 2 95 2 85 2 52 2 10 2 620 2 87 2 830 2 435 10 860 2 
172 2 909 4 481 2 490 6 433 2 181 2 128 2 373 2 407 2 158 2 185 2 82 2 378 2 317 2 869 2 414 2 805 2 193 2 167 2 382 2 449 4 750 2 846 2 
172 8 909 12 794 2 158 4 0 2 82 4 65 4 719 2 490 16 317 4 805 8 906 6 433 4 167 4 750 8 625 6 129 4 
699 2 329 2 121 10 31 4 755 4 361 10 486 4 333 2 96 62 200 4 618 2 650 2 556 4 255 2 593 4 526 2 369 2 735 2 624 4 75 2 282 2 284 4 628 2 863 2 739 2 799 2 720 4 164 8 212 2 267 14 929 6 109 4 111 2 804 2 774 2 27 2 696 2 451 4 932 4 879 4 
568 2 461 2 569 2 495 2 98 2 871 2 368 2 89 2 371 2 325 2 673 2 
816 2 817 4 220 3 698 2 117 2 580 2 119 2 819 6 330 4 226 2 332 2 459 34 331 4 703 2 4 2 122 1 227 2 125 4 827 2 12 2 14 2 15 2 235 4 471 16 835 2 716 16 238 2 718 4 604 2 135 2 347 2 605 2 242 2 25 2 476 2 478 2 356 2 480 5 357 1 29 1 362 2 147 2 614 32 489 1 364 2 149 2 150 2 151 2 617 3 365 3 856 2 623 6 859 1 43 2 736 2 44 2 374 2 46 3 156 2 159 2 163 1 630 12 505 2 265 3 743 2 634 1 380 2 269 2 636 6 748 2 873 2 512 2 57 2 270 8 641 8 60 2 173 1 61 2 63 2 752 3 388 2 883 2 886 24 395 2 649 1 67 1 891 2 651 2 892 2 523 32 73 2 527 16 899 1 286 2 769 2 533 2 534 2 187 3 83 2 536 2 415 2 905 2 668 4 907 16 420 2 88 2 295 3 672 3 197 2 780 2 303 2 302 2 428 2 427 2 782 2 554 3 913 2 784 2 429 2 202 1 307 2 432 24 790 2 560 1 791 8 681 2 561 2 310 2 311 32 312 2 683 3 437 1 793 2 205 2 102 2 206 2 563 1 564 2 925 2 798 2 802 4 213 3 215 6 930 2 576 2 323 1 452 2 
459 2 385 2 
459 4 749 2 740 2 
354 2 
582 2 273 2 146 2 254 2 521 2 392 2 97 2 69 2 153 2 9 2 306 2 558 2 338 2 710 2 896 2 161 2 504 2 771 2 663 20 290 2 543 2 606 2 745 20 839 2 693 2 349 2 575 2 294 2 843 2 166 2 419 2 244 2 115 2 776 2 610 20 878 2 479 2 327 2 
549 1 360 2 893 2 584 2 
360 2 257 2 
500 2 360 2 389 2 455 2 344 2 566 2 164 2 
358 2 360 2 455 2 
360 2 455 2 112 2 
406 2 893 2 615 2 
360 2 455 2 
406 2 296 2 
360 2 431 2 
406 2 841 2 893 2 
893 2 577 2 148 2 
342 2 893 2 126 2 
45 2 893 2 583 2 
893 2 71 2 704 2 
406 2 114 2 
360 2 340 2 
901 2 577 2 
126 2 101 2 
45 2 768 2 
71 2 578 2 
406 2 671 2 
444 2 71 2 
45 2 7 2 
126 2 289 2 
787 2 577 2 
406 2 841 2 893 2 847 2 
406 2 841 2 893 2 106 2 847 2 
406 2 691 2 893 2 
406 2 893 2 491 2 
849 2 221 2 250 2 570 2 
888 2 
893 2 595 2 
389 2 812 2 324 2 164 2 
500 2 389 2 70 2 812 2 324 2 164 2 
360 2 389 2 455 2 566 2 858 2 164 2 
494 2 921 2 
389 2 566 2 164 2 848 2 
45 2 352 2 
71 2 772 2 
747 2 577 2 
126 2 712 2 
126 2 26 2 71 2 
579 2 126 2 71 2 
657 2 126 2 71 2 
514 2 126 2 71 2 
389 2 179 6 497 2 684 6 867 2 164 2 417 2 90 2 
406 2 249 2 
88 2 
817 2 117 2 819 2 330 4 456 2 459 26 586 2 6 2 462 2 823 2 125 4 827 2 12 2 235 4 601 2 131 2 238 2 718 4 25 2 476 2 478 2 356 4 614 6 489 2 852 2 151 2 40 2 623 4 156 2 630 8 634 2 636 2 873 2 57 6 642 2 60 2 63 2 644 2 391 4 395 2 891 2 892 2 651 2 523 26 527 6 898 2 286 2 533 2 81 2 83 2 905 2 668 2 420 2 197 2 428 2 427 2 302 2 782 2 913 2 919 2 791 2 681 2 311 4 312 2 102 2 206 2 564 2 208 2 798 2 802 2 443 4 215 6 217 2 452 2 
817 2 117 2 819 2 330 4 456 2 459 26 586 2 6 2 462 2 125 4 827 2 12 2 235 4 601 2 835 2 238 2 718 4 25 2 476 2 478 2 356 4 614 6 489 2 151 2 40 2 623 6 156 2 630 8 634 2 636 2 873 2 57 6 638 2 642 2 60 2 61 2 63 2 644 2 391 4 395 2 891 2 892 2 651 2 523 26 527 6 184 2 898 2 286 2 533 2 81 2 83 2 905 2 668 2 420 2 197 2 780 2 428 2 427 2 302 2 677 2 782 2 913 2 919 2 791 2 681 2 311 4 312 2 102 2 206 2 564 2 208 2 798 2 802 2 443 4 215 6 217 2 452 2 
422 2 
440 2 709 2 
236 2 237 4 253 2 94 2 758 2 676 2 801 2 507 2 785 2 773 2 292 2 574 4 762 2 764 2 41 2 621 2 857 2 466 2 
116 2 117 2 454 2 328 2 224 2 754 2 459 12 758 2 887 2 395 2 125 2 891 2 892 2 762 4 764 2 827 2 523 6 11 2 466 2 766 2 79 2 236 6 237 4 718 2 539 4 348 2 773 2 292 2 24 2 353 6 910 2 251 2 425 2 300 2 253 2 94 2 676 2 732 2 785 4 430 2 41 4 621 2 920 2 857 2 42 6 312 2 206 2 501 4 502 2 864 2 631 2 51 2 801 2 633 2 507 4 211 4 574 4 215 4 874 4 811 4 
116 2 117 2 454 2 328 2 224 2 754 2 459 12 758 2 887 2 395 2 125 2 891 2 892 2 762 4 764 2 827 2 523 6 11 2 466 2 766 2 79 2 236 4 237 4 718 2 539 4 348 2 773 2 292 2 24 2 353 6 910 2 251 2 425 2 300 2 253 2 94 2 676 2 732 2 785 4 430 2 41 4 621 2 857 2 42 6 312 2 206 2 501 4 502 2 864 2 631 2 51 2 801 2 633 2 507 6 211 4 574 4 215 4 874 4 168 2 811 4 
116 2 117 2 454 2 328 2 224 2 754 2 459 12 758 2 887 2 395 2 125 2 891 2 892 2 762 4 764 2 827 2 523 6 11 2 13 2 466 2 766 2 79 2 236 6 237 4 718 2 539 4 348 2 773 2 292 2 24 2 353 6 910 2 251 2 425 2 300 2 253 2 94 2 676 2 732 2 785 4 430 2 41 4 621 2 857 2 42 6 312 2 206 2 501 4 502 2 864 2 631 2 51 2 801 2 633 2 507 6 211 4 574 4 215 4 874 8 811 4 
116 2 117 2 454 2 328 2 224 2 754 2 459 12 758 2 887 2 395 2 125 2 891 2 892 2 762 4 764 2 827 2 523 6 11 2 13 2 466 2 766 2 79 2 236 6 237 4 718 2 539 4 348 2 773 2 292 2 24 2 353 8 910 2 251 2 425 2 300 2 253 2 94 2 676 2 732 2 785 4 430 2 41 4 621 2 857 2 42 10 312 2 206 2 501 4 502 2 864 2 631 2 51 2 801 2 633 2 507 8 211 8 574 4 215 4 874 8 168 2 811 4 
116 2 117 2 454 2 328 2 224 2 754 2 459 12 758 2 887 2 395 2 125 2 891 2 892 2 762 4 764 2 827 2 523 6 11 2 13 2 466 2 766 2 79 2 236 6 237 4 718 2 539 4 348 2 773 2 292 2 24 2 353 6 910 2 251 2 425 2 300 2 253 2 94 2 676 2 732 2 785 4 430 2 41 4 621 2 857 2 42 10 312 2 206 2 501 4 502 2 864 2 631 2 51 2 801 2 633 2 507 6 211 8 574 4 215 4 874 8 811 4 
454 2 224 4 456 2 1 2 459 46 458 6 3 6 11 2 231 1 466 2 232 6 235 4 236 4 237 4 238 2 715 2 718 4 472 2 24 2 25 2 243 2 477 2 246 4 247 2 725 2 251 4 253 2 732 2 492 2 39 6 41 4 42 2 263 2 501 6 502 2 740 6 51 2 507 8 510 1 56 6 57 6 60 2 63 2 274 2 758 2 762 4 523 24 764 2 524 2 278 2 527 6 766 2 285 7 286 2 79 2 287 2 83 2 539 4 86 7 773 2 292 2 544 2 546 2 93 6 780 2 300 2 94 2 781 1 302 2 785 4 788 2 791 2 311 2 312 2 102 2 564 2 798 2 802 2 801 2 574 4 806 10 320 2 811 8 809 4 326 2 116 2 117 2 328 2 817 2 819 2 330 4 335 2 588 8 125 4 827 2 127 6 594 2 599 2 831 1 130 6 835 2 348 4 611 2 353 12 354 6 142 2 614 8 152 2 621 2 154 6 623 6 857 2 156 12 864 2 866 1 630 4 868 6 631 2 633 2 636 2 874 2 168 4 385 6 642 4 387 1 644 2 391 4 887 2 889 2 177 2 395 2 891 2 892 2 651 2 655 2 659 2 660 1 902 2 904 6 192 2 905 2 667 6 668 2 420 2 421 6 674 2 910 2 425 2 676 2 427 2 428 2 913 2 678 1 679 2 430 2 685 1 206 2 208 2 215 6 
116 2 817 4 328 2 454 2 117 2 819 2 224 4 1 2 456 2 330 4 3 6 458 6 459 48 335 2 588 8 336 2 125 4 827 2 594 2 127 6 11 2 13 4 466 2 232 6 599 2 130 6 235 4 236 8 835 2 237 4 715 2 238 2 718 4 472 2 348 4 24 2 25 2 243 2 477 2 611 2 247 2 246 4 353 12 354 6 356 2 725 2 142 2 727 2 251 4 253 2 614 8 732 2 492 2 39 6 152 2 41 4 621 2 154 6 857 2 623 6 42 2 263 2 156 12 501 6 502 2 864 2 868 6 630 8 631 2 740 6 51 2 633 2 507 8 636 2 56 6 874 6 57 6 385 6 642 4 60 2 63 2 274 2 644 2 391 4 758 2 887 2 177 2 889 2 395 2 891 2 762 4 651 2 892 2 524 2 764 2 523 26 278 2 527 6 766 2 655 2 286 2 79 2 287 2 659 2 83 2 539 4 902 2 904 6 773 2 192 2 292 2 667 6 905 2 544 2 668 4 546 2 420 2 421 6 674 2 93 6 910 2 425 2 780 2 300 2 94 2 302 2 428 2 427 2 676 2 913 2 785 4 679 2 788 2 430 2 791 2 311 2 312 2 102 2 206 2 564 2 208 2 798 2 801 2 802 4 574 4 215 6 806 10 320 2 809 4 811 8 326 2 
116 2 817 4 328 2 454 2 117 2 819 2 224 4 1 2 456 2 330 4 3 6 458 6 459 48 335 2 588 8 336 2 125 4 827 2 594 2 127 6 11 2 13 4 466 2 232 6 599 2 130 6 235 4 236 8 835 2 237 4 715 2 238 2 718 4 472 2 348 4 24 2 25 2 243 2 477 2 611 2 247 2 246 4 353 12 354 6 356 2 725 2 142 2 727 2 251 4 253 2 614 8 732 2 492 2 39 6 152 2 41 4 621 2 154 6 857 2 623 6 42 6 263 2 156 12 501 6 502 2 864 2 868 6 630 8 631 2 740 6 51 2 633 2 507 8 636 2 56 6 874 6 57 6 385 6 642 4 60 2 63 2 274 2 644 2 391 4 758 2 887 2 177 2 889 2 395 2 891 2 762 4 651 2 892 2 524 2 764 2 523 26 278 2 527 6 766 2 655 2 286 2 79 2 287 2 659 2 83 2 539 4 902 2 904 6 773 2 192 2 292 2 667 6 905 2 544 2 668 4 546 2 420 2 421 6 674 2 93 6 910 2 425 2 780 2 300 2 94 2 302 2 427 2 676 2 428 2 913 2 785 4 679 2 788 2 430 2 791 2 311 2 312 2 102 2 206 2 564 2 208 2 798 2 801 2 802 4 211 4 574 4 215 6 806 10 320 2 809 4 811 8 326 2 
454 2 224 4 456 2 459 52 458 6 3 6 11 2 13 4 466 2 232 12 235 4 236 10 237 4 238 2 715 2 718 4 472 2 24 2 25 2 243 2 477 2 246 4 247 2 725 2 727 2 251 4 253 2 732 2 492 2 39 6 41 4 42 6 263 2 501 6 47 6 502 2 50 2 740 12 51 2 507 10 746 6 56 6 57 8 60 2 63 2 62 6 274 2 758 2 762 4 277 2 523 24 764 2 524 2 278 2 527 8 766 2 286 2 79 2 287 2 83 2 539 4 773 2 292 2 544 2 546 2 93 12 780 2 300 2 94 2 302 2 304 2 785 4 788 2 791 4 311 4 312 2 102 2 564 2 796 2 798 2 802 4 801 2 319 6 574 4 806 8 320 2 811 8 809 4 326 2 116 2 328 2 817 4 117 2 819 4 330 4 335 2 123 2 588 8 336 2 125 4 827 2 127 6 594 2 599 2 130 6 835 2 348 4 840 6 611 2 353 16 354 12 356 2 142 2 614 12 616 6 152 2 621 2 154 12 623 6 857 2 155 6 156 10 864 2 630 10 868 6 631 2 633 2 636 4 874 6 168 2 385 12 642 4 644 4 391 6 176 2 887 2 889 2 177 2 395 2 891 2 892 2 651 2 398 6 655 2 659 2 662 6 902 2 904 6 192 2 905 2 667 6 668 4 420 2 421 6 674 2 910 2 425 2 428 2 427 2 676 2 913 2 679 2 430 2 920 2 922 2 206 2 208 2 211 4 214 2 215 6 
116 2 328 2 454 2 224 2 425 2 459 4 300 2 94 2 676 2 732 2 762 4 430 2 764 2 41 4 621 2 857 2 13 2 42 4 466 2 766 2 501 2 79 2 502 2 236 6 237 2 539 2 633 2 507 6 211 4 773 2 574 2 24 2 874 6 811 2 353 4 
116 2 117 2 328 2 454 2 819 3 224 2 330 4 456 2 1 2 459 28 457 2 125 4 827 2 13 2 466 2 235 4 236 6 835 2 237 2 238 2 718 4 346 3 347 2 24 2 25 2 353 4 850 2 614 8 732 2 41 4 621 2 623 6 857 2 42 2 156 4 501 2 502 2 633 2 507 6 636 3 748 2 874 6 57 6 642 2 60 2 63 2 174 2 388 2 391 4 395 2 891 2 762 4 651 2 892 2 764 2 523 24 527 6 766 2 286 2 79 2 83 2 539 2 773 2 413 2 905 2 420 2 88 2 910 2 198 2 780 2 425 2 300 2 94 2 428 2 427 2 302 2 676 2 913 2 430 2 311 3 312 2 206 2 102 2 208 2 798 2 574 2 215 6 806 2 811 2 
116 2 117 2 454 2 328 2 224 2 754 2 459 12 758 2 887 2 395 2 125 2 891 2 892 2 762 4 764 2 827 2 523 6 11 2 13 2 466 2 766 2 79 2 236 6 237 4 718 2 539 4 348 2 773 2 292 2 24 2 353 6 910 2 251 2 425 2 300 2 253 2 94 2 676 2 732 2 785 4 430 2 41 4 621 2 857 2 42 10 312 2 206 2 501 4 502 2 864 2 631 2 51 2 801 2 633 2 507 6 211 8 574 4 215 4 874 8 811 4 
116 2 117 2 454 2 328 2 224 2 459 12 758 2 887 2 395 2 125 2 891 2 892 2 762 4 523 6 764 2 827 2 11 2 13 2 466 2 766 2 468 2 79 2 236 8 237 4 718 2 539 4 348 2 773 2 292 2 24 2 353 8 910 2 251 2 779 2 425 2 300 2 253 2 94 2 676 2 732 2 785 4 41 4 621 2 920 2 857 2 312 2 42 10 206 2 501 4 502 2 864 2 631 2 51 2 801 2 633 2 507 6 211 8 574 4 215 4 216 4 874 8 811 4 
502 2 770 2 732 2 
502 2 770 2 732 2 
817 4 117 2 224 4 330 4 456 2 459 24 334 4 705 2 125 4 827 2 13 4 466 2 235 4 835 2 236 12 237 2 715 2 238 2 603 2 718 4 348 4 25 2 844 2 611 2 246 2 353 16 251 2 253 2 614 2 732 6 41 4 623 6 857 4 42 6 156 4 501 4 502 4 864 2 630 4 51 2 633 2 507 12 508 2 874 6 168 4 57 2 642 6 60 2 516 2 63 2 64 2 887 2 648 4 393 2 395 2 891 2 892 2 651 2 762 4 523 16 764 2 400 2 527 2 281 2 286 2 79 2 770 2 81 4 83 2 84 2 539 2 292 2 905 2 544 2 668 4 420 2 547 2 421 2 423 2 780 2 428 2 427 2 913 2 785 4 915 2 786 2 920 4 311 2 312 2 102 2 206 2 564 4 208 2 567 2 798 2 802 4 211 4 574 2 215 6 806 2 809 2 811 4 218 2 697 2 
674 2 156 2 92 2 141 2 64 2 32 2 440 2 459 4 603 2 801 2 806 2 523 2 278 2 809 2 547 2 312 2 421 2 
817 4 117 2 224 4 330 4 456 2 459 24 334 4 705 2 125 4 827 2 13 4 466 2 235 4 835 2 236 12 237 2 715 2 238 2 603 2 718 4 348 4 25 2 611 2 246 2 353 16 251 4 253 2 614 2 732 6 41 4 622 2 623 6 857 4 42 6 156 2 501 4 502 4 48 2 375 2 864 2 630 4 631 2 51 2 633 2 507 12 508 2 874 6 168 4 57 2 642 6 60 2 516 2 63 2 64 2 887 2 648 4 393 2 395 2 891 2 892 2 651 2 762 4 523 16 764 2 400 2 527 2 281 2 408 2 286 2 79 2 770 2 81 4 83 2 539 2 292 2 905 2 544 2 668 4 420 2 547 2 421 2 423 4 780 2 428 2 427 2 913 2 785 4 786 2 920 4 311 4 312 2 102 2 206 2 564 4 208 2 687 2 798 2 802 4 211 4 574 2 215 6 811 4 218 2 697 2 
817 4 117 2 224 4 330 4 456 2 459 24 334 4 705 2 125 4 337 2 827 2 13 4 466 2 235 4 835 2 236 12 237 2 715 2 238 2 22 2 603 2 718 4 348 4 25 2 611 2 246 2 353 16 251 4 729 2 253 2 614 2 732 6 41 4 623 6 857 4 42 6 156 4 501 4 502 4 864 2 630 4 631 2 51 2 633 2 507 12 508 2 874 6 168 4 57 2 642 6 60 2 516 2 63 2 64 2 887 2 648 4 393 2 395 2 891 2 178 2 892 2 651 2 762 4 523 16 764 2 400 2 527 2 281 2 286 2 79 2 770 2 81 4 83 2 539 2 292 2 905 2 544 2 668 4 420 2 547 2 421 2 423 2 780 2 428 2 427 2 913 2 785 4 786 2 920 4 311 2 312 2 102 2 206 2 564 4 208 2 565 2 798 2 802 4 211 4 574 2 215 6 806 2 809 2 811 4 218 2 697 2 
117 2 222 2 819 2 330 2 456 2 459 26 587 2 125 4 826 2 827 2 229 2 129 2 832 1 19 2 469 2 600 2 235 2 833 2 834 4 718 4 838 2 721 2 25 2 243 2 724 2 33 2 613 2 34 2 490 6 614 8 36 2 493 2 855 2 152 2 256 2 623 2 370 2 625 4 263 2 156 2 158 2 264 2 630 2 636 2 167 2 750 2 57 6 642 2 172 2 59 1 60 2 63 2 644 2 391 4 395 2 891 2 651 2 892 2 523 20 524 2 525 1 527 6 74 2 280 2 403 2 286 2 82 2 83 2 902 2 905 2 416 2 545 2 420 2 909 4 550 2 551 2 302 2 913 2 679 2 433 2 308 2 559 2 791 2 311 2 312 2 562 6 313 2 206 2 795 2 798 2 108 2 692 2 927 2 805 2 215 6 320 2 810 2 815 2 
548 2 140 3 819 3 726 2 552 2 144 4 459 2 644 6 391 2 614 2 302 2 68 2 464 2 917 2 523 2 496 2 527 2 311 3 465 2 107 2 572 2 636 3 57 2 139 2 
548 2 140 2 819 2 726 2 552 2 144 4 459 2 644 6 391 2 614 2 302 2 68 2 464 2 917 2 523 2 496 2 527 2 311 2 465 2 107 2 572 2 636 2 57 2 139 2 
548 2 140 2 819 2 726 2 552 2 144 4 459 2 644 6 391 2 614 2 302 2 68 2 464 2 917 2 523 2 496 2 527 2 311 2 465 2 107 2 572 2 636 2 57 2 139 2 
172 2 818 4 459 10 66 2 464 2 523 4 230 2 279 2 708 2 529 2 711 4 656 2 836 6 82 2 716 2 345 2 907 2 196 3 909 4 426 3 911 4 553 4 302 2 614 2 490 6 914 2 789 4 433 2 311 3 158 2 862 2 165 2 690 2 805 2 636 3 446 4 694 2 167 2 750 2 453 3 
172 2 818 4 885 2 459 10 66 2 464 2 523 4 230 2 279 2 708 2 529 2 128 2 711 4 656 2 836 6 82 2 716 2 345 2 907 2 196 2 909 4 426 2 911 4 553 4 302 2 614 2 490 4 914 2 789 4 433 2 311 2 158 2 862 2 317 2 165 2 690 2 805 2 636 2 446 4 694 2 167 2 750 2 453 2 
172 2 818 4 885 2 459 10 66 2 464 2 523 4 230 2 279 2 708 2 529 2 128 2 711 4 656 2 836 6 82 2 716 2 345 2 907 2 196 2 909 4 426 2 911 4 553 4 302 2 614 2 490 4 914 2 789 4 433 2 311 2 158 2 862 2 317 2 165 2 690 2 805 2 636 2 446 4 694 2 167 2 750 2 453 2 
172 2 818 4 885 2 459 10 66 2 464 2 523 4 230 2 279 2 708 2 529 2 128 2 711 4 656 2 836 6 82 2 716 2 345 2 907 2 196 2 909 4 426 2 911 4 553 4 302 2 614 2 490 4 914 2 789 4 433 2 311 2 158 2 862 2 317 2 165 2 690 2 805 2 636 2 446 4 694 2 167 2 750 2 453 2 
172 2 818 4 885 4 459 10 66 2 464 2 523 4 230 2 279 2 708 2 529 2 128 4 711 4 656 2 836 6 82 2 716 2 345 2 907 2 196 2 909 4 426 2 911 4 553 4 302 2 614 2 490 4 914 2 789 4 433 2 311 2 158 2 862 2 317 4 165 2 690 2 805 2 636 2 446 4 694 2 167 2 750 2 453 2 
626 2 761 2 21 2 730 2 759 2 742 2 
761 2 110 2 738 2 753 2 35 2 462 2 18 2 
223 2 482 2 120 2 459 10 275 2 485 2 395 2 733 1 523 8 339 2 682 2 309 2 154 2 735 1 924 2 204 2 103 2 376 2 537 2 665 1 775 2 669 1 27 1 875 2 639 2 777 2 
172 6 909 12 551 2 885 2 459 6 145 2 490 16 394 2 523 6 433 6 708 2 128 2 625 4 711 4 129 2 498 2 158 6 160 2 80 2 288 2 82 6 717 2 741 4 317 4 54 2 692 2 805 6 167 6 750 6 815 2 
207 2 818 2 612 2 459 1 553 2 189 2 210 7 38 4 789 2 523 1 894 2 245 2 203 2 828 2 596 2 813 1 272 2 814 2 
207 2 818 2 612 2 553 2 189 4 210 6 38 4 789 2 894 2 245 2 828 2 596 2 203 4 272 4 814 2 
207 2 818 2 612 2 459 1 553 2 189 8 210 10 38 4 789 2 523 1 894 6 245 2 828 8 596 2 203 8 813 1 272 8 814 2 
207 2 818 2 612 2 553 2 189 2 210 2 38 2 789 2 245 2 596 2 203 2 272 2 814 2 
701 4 225 2 330 44 702 4 459 78 5 4 821 4 706 4 124 2 825 4 591 2 592 4 8 2 829 4 16 10 17 6 233 4 598 10 467 2 235 36 835 28 241 2 240 4 133 1 136 4 137 2 23 6 722 8 607 8 842 2 474 2 845 8 475 4 355 16 359 2 30 2 143 8 728 4 854 4 367 4 734 4 258 2 623 102 861 10 262 4 627 4 503 6 509 2 635 4 511 24 381 4 876 4 169 4 170 4 171 4 881 16 513 4 58 4 517 4 884 2 645 4 390 2 756 16 646 2 647 2 757 4 890 10 651 6 397 4 652 4 653 4 523 70 182 2 401 2 530 4 895 16 897 4 283 8 77 2 409 2 900 24 78 4 535 2 188 8 541 4 664 4 191 30 291 11 666 4 905 2 293 24 297 4 778 2 780 26 912 4 299 10 913 6 783 4 201 14 918 2 434 10 100 8 314 32 315 8 105 4 689 4 571 10 573 4 322 4 219 6 
881 14 330 14 459 28 645 4 647 2 646 2 460 2 706 2 124 2 592 2 651 2 397 4 523 26 16 6 530 4 17 2 233 2 467 2 77 2 409 2 602 10 186 2 235 14 835 12 240 4 837 2 664 2 291 2 191 6 666 4 23 2 905 2 607 6 842 2 778 2 359 2 30 2 780 12 299 6 913 2 731 2 916 2 918 2 734 2 623 40 792 2 861 6 262 4 105 2 689 2 571 2 442 2 928 2 870 2 635 4 511 8 695 2 450 2 219 4 
581 24 701 4 330 112 459 150 5 4 821 4 460 11 822 2 706 10 124 5 825 6 592 10 228 24 829 6 16 16 233 6 17 36 467 4 235 88 602 22 835 58 239 2 240 6 241 2 837 2 132 10 473 4 136 6 23 10 607 16 842 2 845 24 475 6 350 26 359 8 30 2 728 4 363 2 734 4 258 2 623 248 261 6 499 4 262 6 861 16 627 6 503 5 162 4 629 8 266 4 870 2 55 4 635 6 511 124 381 6 383 10 169 6 170 4 271 12 171 6 881 28 513 6 58 6 517 4 884 4 519 4 645 6 390 2 520 4 646 2 647 8 522 24 651 14 652 6 397 6 653 4 523 134 399 10 530 8 531 24 895 42 897 4 767 18 405 8 409 2 900 92 78 6 186 4 410 2 535 2 188 50 541 4 664 10 191 34 291 16 666 6 905 8 293 84 418 6 194 24 670 2 297 6 298 4 778 2 91 8 780 58 912 4 299 16 301 4 913 14 201 12 916 4 918 8 792 8 104 90 315 42 209 90 926 26 105 10 689 4 571 18 442 2 928 2 573 6 695 2 450 2 219 8 
881 36 581 2 515 4 882 2 175 2 643 2 330 20 459 46 645 2 646 2 647 2 589 2 706 2 590 4 124 2 591 2 592 2 890 2 8 2 396 2 763 2 651 2 397 2 228 2 523 44 399 2 183 2 16 4 233 2 17 2 598 2 404 2 405 2 234 2 77 2 409 2 20 2 235 20 835 6 411 2 412 2 538 2 240 2 664 2 132 2 134 2 291 2 23 2 666 2 905 2 842 2 723 2 194 2 28 2 351 2 778 2 359 2 483 2 30 2 780 6 484 2 299 4 488 2 675 2 913 2 731 2 199 2 555 2 366 2 918 2 557 2 434 2 623 48 686 2 262 2 861 4 157 2 49 6 865 4 105 2 571 2 266 2 379 2 635 2 511 6 447 2 450 2 383 2 637 4 931 2 219 6 
268 2 

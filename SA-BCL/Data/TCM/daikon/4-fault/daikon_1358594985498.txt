#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 414 561 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 763 1358 639 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParser:jj_3_28()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.ArraysMDE:subarray([III)[I
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_36(I)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(F[F)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_60()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:jj_2_35(I)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_148()Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:gt(II)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
utilMDE.MathMDE:gcd(II)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParser:jj_3_10()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.JavaParser:jj_3R_133()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:jj_3_22()Z
daikon.PptName:getSignature()Ljava.lang.String;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:eltwiseGTE([I)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:max([I)I
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.Invariant:prob_or(DD)D
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_18(I)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3R_108()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.JavaParser:jj_3R_102()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.Quant:memberOf(J[J)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:jj_3R_162()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_36()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.JavaParser:jj_3R_105()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap:size()I
jtb.JavaParser:jj_3R_72()Z
jtb.JavaParser:jj_3R_57()Z
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:jj_3R_103()Z
jtb.JavaParser:jj_3R_69()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_scan_token(I)Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfo:relate_var()V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:Ppt()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.Invariant:logOn()Z
daikon.Quant:intersection([I[I)[I
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
utilMDE.MathMDE:negate(I)I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_27()Z
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.ProglangType:isScalar()Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_80()Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(II)I
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:gcd([I)I
daikon.ModBitTracker:num_samples()I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.PptSlice0:arity()I
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_48()Z
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_87()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.JavaParser:jj_3R_114()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
jtb.JavaParser:jj_3_20()Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:concat([I[I)[I
daikon.ModBitTracker:num_vars()I
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:jj_3R_134()Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeListOptional:present()Z
jtb.JavaParser:jj_3R_118()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.ProglangType:baseIsIntegral()Z
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([[D)D
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.JavaParser:jj_3R_137()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z | ASSIGN | 9658 | = null
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:setEqual([I[I)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexEqual([I[I)Z
daikon.ModBitTracker:num_sets()I
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.visitor.TreeFormatter:TreeFormatter()V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_14()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:eq(JJ)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern([D)[D
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:jj_2_14(I)Z
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:size()I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_75()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:eq(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:jj_3R_53()Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.Quant:pairwiseEqual([I[I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:jj_3R_210()Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.Quant:eltsLTE([II)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.OrderedPairIterator:setnext2()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.JavaParser:jj_3R_56()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.visitor.FormatCommand:getCommand()I
jtb.JavaCharStream:readChar()C
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_3()Z
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:jj_3R_86()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_2_17(I)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
utilMDE.Assert:assertTrue(Z)V
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.Invariant:getConfidence()D
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_2_12(I)Z
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
jtb.visitor.FormatCommand:getNumCommands()I
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:gte(II)Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.PptSlice1:num_samples()I
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_107()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_149()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:jj_3R_100()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.Quant:eltwiseLTE([I)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.ProglangType:isPseudoArray()Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lt(II)Z
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptName:isEnterPoint()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:jj_3R_99()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.Debug:logDetail()Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.Quant:memberOf(D[F)Z
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(S[S)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_3R_180()Z
jtb.JavaParser:jj_3R_126()Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_98()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.Quant:eltsGT([II)Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaParser:jj_3R_104()Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_163()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.Quant:union([I[I)[I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_81()Z
jtb.JavaParser:jj_3R_169()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.JavaParser:jj_3R_164()Z
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseLT([I)Z
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.JavaParser:jj_3R_109()Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.JavaParser:jj_3R_161()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
jtb.JavaParser:jj_3_25()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_50()Z
utilMDE.Intern:numIntArrays()I
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:subarray([JII)[J
jtb.JavaParser:jj_3R_115()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_136()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.Quant:slice([III)[I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
daikon.Quant:subsetOf([D[F)Z
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_3_13()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.JavaCharStream:backup(I)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.Quant:lte(II)Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3_19()Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.PptName:toString()Ljava.lang.String;
daikon.ProglangType:isIntegral()Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_5()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.Debug:logOn()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:isLiteralConstant()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.syntaxtree.NodeOptional:present()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.PptName:isCombinedExitPoint()Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_21(I)Z
jtb.JavaParser:jj_2_16(I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_3R_77()Z
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexLTE([I[I)Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_3R_124()Z
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.Invariant:isWorthPrinting()Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:jj_3_18()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.Quant:subsetOf([I[I)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_106()Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName:hashCode()I
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.Quant:sameLength([I[I)Z
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParser:jj_2_15(I)Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_2_4(I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.JavaParser:jj_3R_89()Z
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.diff.Node:Node()V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_119()Z
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_97()Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.diff.RootNode:RootNode()V
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:eltsGteIndex([I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_116()Z
daikon.Quant:eq(FF)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:concat([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
jtb.JavaParser:jj_3_17()Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3_35()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.Quant:eq(II)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.JavaParser:jj_3R_54()Z
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.MathMDE:sign(I)I
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.ProglangType:isArray()Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_110()Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_73()Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.PptSlice1:arity()I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.PptSlice2:arity()I
jtb.JavaParser:jj_3R_88()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:memberOf(I[I)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaCharStream:BeginToken()C
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:eltsGTE([II)Z
daikon.inv.Invariant:logDetail()Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.ProglangType:dimensions()I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 9283 | = null
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParser:jj_3R_101()Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_63()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.Intern:intern([J)[J
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant:justified()Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaParser:jj_3R_96()Z
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:eltsEqualIndex([I)Z
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParser:jj_2_1(I)Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.Quant:lexGT([I[I)Z
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3R_123()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_121()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaParser:jj_3R_85()Z
utilMDE.Intern:internSubsequence([III)[I
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfo:new_ppt()V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getEndColumn()I
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.ArraysMDE:min([I)I
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:jj_3_29()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_1()Z
daikon.Quant:noDups([I)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Quant:eltsGtIndex([I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
801 4 1013 2 590 2 276 2 596 2 1110 2 355 2 1245 2 431 2 
106 6 538 6 553 2 797 2 983 2 311 2 1159 2 1124 2 1300 6 1103 2 1137 2 
863 2 276 2 96 2 1027 4 23 6 1254 4 256 2 1029 6 590 2 1206 6 503 2 1007 2 594 6 
651 2 1312 2 537 10 276 6 1188 10 1360 4 976 10 820 10 1168 16 151 8 220 4 325 10 674 12 590 6 1341 2 1235 6 222 28 404 2 183 8 683 16 902 8 576 16 1288 6 1221 2 140 8 15 4 812 4 816 2 274 2 535 26 
339 4 181 6 
1173 2 
0 2 1312 2 397 2 614 2 884 2 1364 2 223 2 702 2 704 2 1365 2 88 4 262 2 50 2 353 2 1325 2 711 2 137 2 985 2 313 2 489 2 577 4 272 2 1125 2 1245 2 145 2 959 2 276 4 370 2 1296 2 724 2 590 4 103 2 155 2 424 2 378 2 1260 4 282 2 465 2 681 2 160 2 784 2 929 2 340 4 293 2 
537 15 276 4 1188 15 149 6 610 3 454 4 1360 2 976 15 909 6 1168 32 820 6 48 4 151 19 325 15 1362 6 839 8 674 22 885 6 590 4 1038 4 872 2 995 4 1132 2 1193 4 888 2 1235 4 1020 5 222 52 90 6 464 2 114 4 358 4 683 32 576 32 1288 4 1221 2 140 6 905 2 535 47 
1125 2 1225 2 1139 2 
124 2 552 2 746 2 1327 2 513 2 102 2 800 2 257 2 637 10 1330 2 1378 2 515 22 262 2 344 2 
537 2 1188 2 1360 2 976 2 1168 2 820 4 151 2 325 2 674 2 1299 2 1235 2 222 6 1066 2 201 2 809 2 1264 2 12 2 683 2 576 2 1184 2 215 2 342 2 535 4 
537 4 710 2 149 6 1188 4 976 4 1168 8 325 4 683 8 674 4 1255 2 576 8 1038 4 812 2 1193 4 222 16 90 6 535 12 
345 4 798 4 296 14 1225 2 278 2 1105 2 3 2 302 2 84 10 724 2 1191 2 304 4 591 2 1192 2 87 4 1135 2 570 4 260 2 328 2 105 4 1239 4 554 2 622 2 711 4 1139 6 488 2 850 4 645 2 34 2 59 4 767 2 226 62 387 2 1125 8 340 4 831 2 1223 10 1034 4 1395 4 1336 2 
725 2 675 2 1155 2 130 2 1173 2 331 2 739 2 624 2 386 2 78 2 
1 2 1224 3 2 1 1058 1 80 2 1062 2 4 2 174 2 1064 2 886 1 1065 4 618 3 523 1 1232 3 524 2 6 2 700 6 442 1 1236 2 179 2 1069 24 894 2 445 2 180 2 13 4 1328 2 1073 2 716 24 269 2 1074 2 1242 2 987 2 97 1 629 3 991 2 273 2 98 2 191 2 366 2 276 34 818 2 1085 4 18 4 19 1 541 2 910 2 542 2 633 2 372 32 374 2 824 3 1089 6 1169 1 915 16 1256 2 1258 2 548 1 379 1 729 16 1261 4 921 2 641 3 462 2 827 2 108 2 828 2 111 2 1175 2 1344 1 1265 2 1346 2 1099 3 1179 1 36 12 647 2 211 2 1003 32 1266 2 1348 3 292 2 1349 2 740 2 741 16 388 2 1353 2 1011 2 1355 2 1185 4 1356 2 1187 2 295 2 394 2 836 3 938 2 475 1 840 2 566 2 841 2 1018 2 403 2 1111 2 1019 2 1194 16 406 2 1366 8 945 6 486 2 56 2 58 4 1286 2 1205 8 854 2 855 2 769 2 582 2 861 2 319 2 962 3 668 2 147 2 494 2 231 5 673 2 1215 2 590 32 1387 1 871 2 677 2 1390 2 597 12 1217 4 875 2 598 2 427 1 599 1 335 2 1050 2 242 2 243 8 431 2 786 2 244 6 1391 2 788 2 433 3 1308 2 793 2 1144 1 436 3 
276 2 1102 2 
385 2 1196 2 276 4 
159 2 
691 28 692 6 1061 2 695 2 348 2 349 12 699 6 7 6 703 6 705 2 10 2 706 2 708 4 1068 2 709 2 712 32 713 4 715 14 1072 6 14 22 718 2 361 4 362 8 1079 6 364 30 363 336 1081 6 16 6 1083 4 369 4 21 160 1087 6 371 6 22 6 373 192 25 12 376 6 1090 112 27 2 1092 6 380 82 1094 30 730 16 1095 6 32 2 732 54 733 2 1096 6 1097 2 736 2 381 24 737 2 1098 64 1100 12 1101 6 742 4 38 2 743 4 390 48 744 6 392 2 42 8 44 6 747 20 46 46 49 6 399 2 750 2 400 2 1109 2 751 2 756 4 407 4 757 2 758 10 1114 2 51 2 53 2 52 2 760 6 761 328 410 328 1116 2 411 10 1119 8 1118 2 412 4 57 28 764 6 765 2 766 2 61 6 768 2 1122 432 419 4 1126 2 1127 2 420 2 1128 2 772 2 773 18 67 8 775 2 68 132 776 2 1129 30 70 4 777 4 423 2 778 4 1131 26 779 2 780 4 425 12 1138 132 782 4 74 4 1140 30 428 2 1143 30 792 2 434 192 794 6 435 8 796 6 795 2 1146 64 437 4 438 2 81 4 439 198 441 60 1149 2 1154 2 802 6 803 2 804 2 89 12 91 24 92 30 1157 2 808 4 810 4 94 112 446 2 448 4 450 198 811 2 1160 106 1162 2 1163 6 815 2 1165 2 817 2 455 20 819 2 456 6 99 2 458 20 1171 244 460 2 107 12 110 2 109 6 112 4 116 6 115 4 117 88 118 2 1180 2 120 2 1181 2 1182 4 1183 6 121 2 470 6 122 2 123 2 1186 2 834 4 1189 2 127 6 477 2 129 2 131 4 844 2 846 4 845 2 482 112 133 66 483 46 484 2 1200 4 487 2 851 60 139 2 852 4 141 4 857 60 143 2 144 8 146 86 1208 12 859 4 1209 6 1212 52 1213 112 496 20 1214 70 497 6 865 2 867 198 869 2 500 8 870 6 154 2 502 6 505 2 504 2 156 10 508 6 157 2 158 6 509 2 873 12 1218 2 874 2 876 228 510 204 877 6 878 60 512 2 162 2 161 22 1219 2 880 2 879 16 881 6 882 2 514 4 165 6 168 30 167 2 1226 26 1227 2 175 4 887 8 522 4 1230 20 1233 2 177 4 178 6 891 4 893 6 895 4 896 2 182 2 899 68 184 2 185 2 901 2 903 2 188 6 529 2 189 2 530 198 1243 4 1244 2 906 18 190 10 536 14 907 4 193 26 1250 6 539 6 540 4 908 2 194 8 543 14 1252 4 1253 8 914 2 545 6 546 6 547 4 1257 2 197 2 198 6 1262 2 202 2 922 2 205 4 924 376 555 4 209 6 556 432 926 4 927 4 210 2 928 6 213 2 212 26 1267 2 1269 198 214 290 931 2 559 2 932 2 933 2 216 2 560 10 934 198 564 2 935 2 217 4 218 2 565 2 1273 2 1275 6 1277 2 221 6 942 2 569 2 1279 2 946 16 1282 30 949 26 950 8 1283 2 572 2 573 6 1284 2 575 6 1285 2 952 2 225 4 954 14 227 2 955 118 1291 12 956 4 578 2 579 6 229 2 230 74 958 26 580 244 960 2 961 6 584 2 232 566 1295 2 233 22 1298 26 1297 2 235 2 587 2 589 140 590 10 966 2 967 2 595 106 1303 4 1302 4 238 2 969 224 239 14 970 16 1305 4 600 4 601 20 602 26 603 4 1307 98 971 2 973 94 605 22 245 182 1310 182 974 6 606 2 1314 20 609 4 251 4 611 28 977 28 613 2 255 26 978 2 1316 12 979 46 258 4 259 2 1319 2 261 2 1321 4 620 2 1323 2 264 2 265 8 266 26 267 8 1329 30 1331 2 625 12 627 14 1333 30 989 28 990 4 630 84 276 10 632 2 634 92 635 2 636 2 1339 2 1340 4 994 2 280 6 279 2 281 4 996 2 283 2 284 2 286 20 287 4 288 2 643 2 1000 2 1001 4 1002 4 291 2 1004 4 1349 2 1350 4 1352 2 1005 2 1006 2 1008 14 1009 2 1010 4 650 2 1357 6 1361 198 298 2 300 386 1014 50 1015 8 301 2 655 6 657 198 659 8 305 2 1021 2 306 46 1023 6 1024 2 307 12 1025 4 308 10 1368 2 1374 4 665 2 317 6 666 2 1376 18 1382 2 322 4 671 2 672 2 324 6 1384 26 1385 204 1036 2 1037 2 1388 6 327 8 676 8 1041 4 1040 2 1046 2 678 8 330 4 1389 2 332 2 333 2 334 6 682 244 337 2 1052 46 1053 4 338 6 1054 30 689 4 1055 2 341 2 1056 6 1393 2 343 48 
972 2 1158 2 1091 2 835 1 
1158 2 1156 2 
1263 2 1125 2 15 2 1158 2 253 2 247 2 1241 2 
426 2 1263 2 1158 2 
1263 2 1059 2 1158 2 
368 2 1091 2 1115 2 
1263 2 1158 2 
1386 2 1115 2 
1158 2 701 2 
1091 2 1115 2 520 2 
685 2 1091 2 612 2 
79 2 1091 2 823 2 
1091 2 1033 2 890 2 
988 2 1091 2 656 2 
1292 2 1115 2 
1158 2 1347 2 
612 2 770 2 
79 2 638 2 
975 2 890 2 
132 2 656 2 
1301 2 1115 2 
1136 2 656 2 
890 2 1380 2 
79 2 1174 2 
275 2 612 2 
1091 2 429 2 1115 2 520 2 
86 2 1091 2 429 2 1115 2 520 2 
1337 2 1091 2 1115 2 
868 2 1091 2 1115 2 
290 2 469 2 726 2 534 2 
1125 2 351 2 1241 2 1145 2 
1125 2 253 2 351 2 1241 2 1145 2 745 2 
1263 2 1125 2 15 2 1158 2 1167 2 1241 2 
1375 2 1364 2 
1125 2 15 2 832 2 1241 2 
731 2 890 2 
1271 2 656 2 
612 2 248 2 
79 2 532 2 
79 2 481 2 656 2 
79 2 1031 2 656 2 
79 2 1313 2 656 2 
79 2 360 2 656 2 
517 2 452 6 1172 6 897 2 1371 2 1241 2 787 2 1125 2 
920 2 1115 2 
722 2 642 4 453 2 323 2 1177 2 1120 2 693 2 1141 2 186 2 451 2 698 2 842 2 843 2 29 2 507 4 781 2 515 6 200 2 
1091 2 234 2 
80 2 
2 4 252 2 254 2 1062 2 1065 2 700 4 179 2 707 2 11 2 13 2 269 2 1328 2 1074 2 1242 2 719 2 273 6 191 2 276 26 1085 4 18 4 1251 2 20 2 372 6 374 2 1089 2 915 6 1258 2 548 2 379 2 1261 4 827 2 1175 2 111 2 1346 2 35 2 36 8 1003 4 1349 2 740 2 1355 2 1356 2 1187 2 394 2 395 2 938 2 219 2 840 2 566 2 944 2 945 2 309 2 58 2 56 4 413 2 1286 2 418 2 581 4 861 2 319 2 494 2 585 2 590 26 1215 2 1130 2 501 4 871 2 597 8 875 2 1217 4 335 2 1050 2 242 2 431 2 243 2 244 6 788 2 
2 2 252 2 254 2 1062 2 1065 2 700 6 179 2 707 2 13 2 269 2 1328 2 1074 2 1242 2 719 2 273 6 191 2 276 26 1085 4 18 4 1251 2 20 2 542 2 372 6 374 2 1089 2 915 6 1258 2 548 2 379 2 1261 4 827 2 1175 2 111 2 1346 2 35 2 36 8 1003 4 1349 2 740 2 1355 2 1356 2 1187 2 394 2 395 2 47 2 938 2 219 2 840 2 566 2 661 2 945 2 309 2 58 2 56 4 413 2 1286 2 855 2 581 4 861 2 319 2 494 2 585 2 673 2 590 26 1215 2 1130 2 501 4 871 2 597 8 875 2 1217 4 335 2 1050 2 242 2 431 2 243 2 244 6 788 2 163 2 
805 2 
473 2 491 2 
106 2 1304 2 553 2 538 2 206 2 1106 2 653 2 76 2 567 2 521 2 1123 4 480 2 64 2 917 2 1134 4 1103 2 771 2 9 2 
799 4 171 2 1106 2 653 2 696 2 567 2 521 2 402 2 480 2 1231 2 1113 2 9 2 983 2 1070 2 1199 2 951 2 1159 2 1123 4 63 2 64 2 1377 6 533 2 771 2 1246 4 861 2 319 2 422 2 538 6 276 12 669 2 18 2 236 2 590 6 1300 6 917 4 1134 4 1093 4 550 4 106 4 997 2 679 2 1304 2 553 4 206 2 875 2 1217 2 207 4 241 2 925 2 644 2 1346 2 75 2 335 2 1051 2 76 2 244 4 788 2 1349 2 791 2 1103 4 
797 2 799 4 171 2 1106 2 653 2 696 2 567 2 521 2 402 2 480 2 1231 2 1113 2 9 2 983 2 1070 2 1199 2 951 2 1123 4 63 2 64 2 1377 6 533 2 771 2 1246 4 861 2 319 2 422 2 538 4 276 12 669 2 18 2 236 2 590 6 1300 6 917 4 1134 4 1093 4 550 4 106 6 997 2 679 2 1304 2 553 4 206 2 875 2 1217 2 207 4 241 2 925 2 644 2 1346 2 75 2 335 2 1051 2 76 2 244 4 788 2 1349 2 791 2 1103 4 
799 4 171 2 1106 2 653 2 696 2 567 2 521 2 402 2 480 2 1231 2 1113 2 9 2 983 2 1070 2 1199 2 951 2 1123 4 63 2 1124 2 64 2 1377 6 533 2 771 2 1246 4 861 2 319 2 422 2 538 6 276 12 669 2 18 2 236 2 590 6 1300 6 917 4 1134 4 1093 4 550 4 106 6 997 2 679 2 1304 2 553 4 206 2 875 2 1217 2 207 8 241 2 925 2 644 2 1346 2 75 2 335 2 1051 2 76 2 244 4 788 2 1349 2 791 2 1103 4 
797 2 799 4 171 2 1106 2 653 2 696 2 567 2 521 2 402 2 480 2 1231 2 1113 2 9 2 983 2 1070 2 1199 2 951 2 1123 4 63 2 1124 2 64 2 1377 10 533 2 771 2 1246 4 861 2 319 2 422 2 538 6 276 12 669 2 18 2 236 2 590 6 1300 8 917 4 1134 4 1093 8 550 4 106 8 997 2 679 2 1304 2 553 4 206 2 1217 2 875 2 207 8 241 2 925 2 644 2 1346 2 75 2 335 2 1051 2 76 2 244 4 788 2 1349 2 791 2 1103 4 
799 4 171 2 1106 2 653 2 696 2 567 2 521 2 402 2 480 2 1231 2 1113 2 9 2 983 2 1070 2 1199 2 951 2 1123 4 63 2 1124 2 64 2 1377 10 533 2 771 2 1246 4 861 2 319 2 422 2 538 6 276 12 669 2 18 2 236 2 590 6 1300 6 917 4 1134 4 1093 8 550 4 106 6 997 2 679 2 1304 2 553 4 206 2 875 2 1217 2 207 8 241 2 925 2 644 2 1346 2 75 2 335 2 1051 2 76 2 244 4 788 2 1349 2 791 2 1103 4 
171 2 1062 2 696 2 347 1 521 2 5 6 1065 2 1231 2 700 6 527 2 9 2 707 2 1070 2 13 2 900 6 1074 2 533 2 1246 8 191 2 538 4 18 4 1085 4 1086 1 1251 4 542 2 372 8 912 6 374 2 544 2 1089 2 915 6 1258 2 917 4 1259 2 550 6 918 2 1261 4 203 6 553 4 206 2 207 2 925 2 36 4 740 2 1102 6 930 7 39 1 41 1 1103 4 1104 2 1106 2 938 12 1272 2 567 2 402 2 1274 6 753 1 1113 4 1280 4 945 2 224 2 58 2 413 2 951 2 62 6 1123 4 63 2 1290 4 64 2 771 2 422 2 236 2 965 6 590 24 1130 2 1300 12 593 6 1134 4 1304 2 597 4 241 4 75 2 242 2 431 2 243 2 244 6 76 2 432 1 788 2 246 10 791 2 607 2 608 1 1311 2 797 4 799 4 440 2 1153 2 1152 1 616 2 1318 2 617 6 1322 2 807 2 444 6 983 4 95 2 269 2 986 2 814 2 992 2 273 6 276 46 101 2 459 6 285 2 106 8 827 2 1175 2 644 2 829 2 1346 2 1003 2 467 2 1349 2 1355 2 471 6 653 2 838 2 476 7 840 2 480 2 1196 6 1199 2 312 2 1203 8 1204 2 855 2 142 2 1377 2 319 2 861 2 667 2 669 2 148 2 494 2 1215 2 501 4 499 2 159 6 1045 2 679 2 1217 4 875 2 511 6 335 2 1050 2 1051 2 164 1 688 2 
1311 2 799 4 171 2 1062 2 440 2 696 2 1153 2 616 2 1318 2 617 6 5 6 521 2 1065 4 1231 2 700 6 527 2 9 2 807 2 1322 2 707 2 444 6 983 4 95 2 1070 2 714 2 13 4 900 6 269 2 986 2 1074 2 814 2 533 2 273 6 1246 8 992 2 191 2 276 48 538 8 1085 4 18 4 1251 4 542 2 101 2 372 8 912 6 544 2 374 2 1089 2 915 6 459 6 1258 2 917 4 1259 2 550 6 918 2 1261 4 203 6 285 2 827 2 106 8 553 4 206 2 1175 2 207 6 925 2 644 2 829 2 1346 2 36 8 467 2 1003 2 1349 2 740 2 1102 6 1103 4 471 6 1355 2 1104 2 938 12 653 2 1106 2 654 2 1272 2 838 2 840 2 567 2 402 2 1274 6 480 2 1113 4 1280 4 945 2 224 2 1196 6 1199 2 56 2 312 2 58 4 413 2 951 2 1204 2 1203 8 62 6 1124 4 63 2 1123 4 1290 4 64 2 855 2 142 2 1377 2 771 2 861 2 319 2 422 2 667 2 669 2 148 2 494 2 965 6 236 2 1215 2 590 26 1130 2 499 2 501 4 1300 12 593 6 1134 4 1045 2 159 6 1304 2 679 2 597 8 875 2 1217 4 241 4 511 6 75 2 335 2 1050 2 1051 2 242 2 243 2 431 2 76 2 244 6 788 2 688 2 246 10 791 2 607 2 
1311 2 799 4 171 2 1062 2 440 2 696 2 1153 2 616 2 1318 2 617 6 5 6 521 2 1065 4 1231 2 700 6 527 2 9 2 807 2 1322 2 707 2 444 6 983 4 95 2 1070 2 714 2 13 4 900 6 269 2 986 2 1074 2 814 2 533 2 273 6 1246 8 992 2 191 2 276 48 538 8 1085 4 18 4 1251 4 542 2 101 2 372 8 912 6 544 2 374 2 1089 2 915 6 459 6 1258 2 917 4 1259 2 550 6 1093 4 918 2 1261 4 203 6 285 2 827 2 106 8 553 4 206 2 1175 2 207 6 925 2 644 2 829 2 1346 2 36 8 467 2 1003 2 1349 2 740 2 1102 6 1103 4 471 6 1355 2 1104 2 938 12 653 2 1106 2 654 2 1272 2 838 2 840 2 567 2 402 2 1274 6 480 2 1113 4 1280 4 945 2 224 2 1196 6 1199 2 56 2 312 2 58 4 413 2 951 2 1204 2 1203 8 62 6 1124 4 63 2 1123 4 1290 4 64 2 855 2 142 2 1377 6 771 2 861 2 319 2 422 2 667 2 669 2 148 2 494 2 965 6 236 2 1215 2 590 26 1130 2 499 2 501 4 1300 12 593 6 1134 4 1045 2 159 6 1304 2 679 2 597 8 875 2 1217 4 241 4 511 6 75 2 335 2 1050 2 1051 2 242 2 243 2 431 2 76 2 244 6 788 2 688 2 246 10 791 2 607 2 
519 6 171 2 1062 2 173 2 1063 6 883 2 696 2 521 2 5 6 1065 4 1231 2 700 6 527 2 9 2 707 2 1070 2 714 2 13 4 900 6 1074 2 533 2 1246 8 191 2 538 10 18 4 1085 4 1251 4 542 2 372 12 912 6 374 2 544 2 1089 4 915 8 1258 2 917 4 1259 2 550 6 1093 4 918 2 1261 4 203 6 553 4 206 2 207 6 925 2 36 10 740 2 1102 12 1103 4 45 2 748 2 1104 2 1106 2 938 10 1272 2 940 6 567 2 402 2 1274 6 752 2 943 6 754 2 1113 4 1280 4 945 4 224 2 56 2 58 4 413 2 951 2 62 6 1123 4 63 2 1124 4 1290 4 64 2 771 2 422 2 236 2 965 12 590 24 1130 4 1300 16 593 6 1134 4 1304 2 597 10 241 4 75 2 242 2 431 2 243 4 244 6 76 2 788 2 246 8 791 2 607 2 1311 2 797 2 799 4 440 2 615 2 1153 2 616 2 1318 2 617 12 1322 2 807 2 444 6 983 4 95 2 269 2 1159 2 986 2 814 2 992 2 273 8 276 52 821 6 101 2 459 6 285 2 106 10 827 2 1175 2 644 2 829 2 1346 2 1178 6 1003 4 467 2 1349 2 1355 2 471 6 653 2 654 2 840 2 658 6 480 2 1196 12 1199 2 1201 2 312 2 1203 8 1204 2 855 2 856 6 142 2 1377 6 319 2 861 2 667 2 669 2 148 2 494 2 1215 2 501 6 499 2 159 12 1045 2 679 2 1217 4 875 2 511 12 335 2 1050 2 1051 2 688 2 1394 6 
422 2 276 4 538 6 669 2 799 2 653 2 1106 2 696 2 236 2 521 2 1231 2 1300 4 550 2 1093 4 1134 2 106 6 1304 2 679 2 553 4 983 2 206 2 1070 2 207 6 925 2 644 2 951 2 76 2 1124 2 63 2 1123 2 1377 4 791 2 1103 4 1246 2 771 2 
80 2 799 2 1062 2 172 2 696 2 521 2 1231 2 700 6 1238 2 707 2 983 2 1070 2 269 2 1074 2 533 2 1246 2 273 6 191 2 538 6 276 28 18 4 1085 4 1251 2 910 2 542 2 372 8 374 2 1089 3 915 6 1258 2 550 2 1261 4 106 6 553 4 206 2 1175 2 207 6 925 2 644 2 1346 2 1265 2 1003 3 1349 2 740 2 389 2 1103 4 1011 2 1355 2 938 4 1106 2 653 2 838 2 840 2 945 3 848 3 413 2 1202 2 951 2 1124 2 1123 2 63 2 855 2 1377 2 771 2 319 2 861 2 422 2 669 2 494 2 236 2 590 24 1215 2 501 4 1300 4 1134 2 506 2 1304 2 679 2 1217 4 875 2 335 2 1050 2 242 2 431 2 76 2 244 6 788 2 246 2 791 2 
799 4 171 2 1106 2 653 2 696 2 567 2 521 2 402 2 480 2 1231 2 1113 2 9 2 983 2 1070 2 1199 2 951 2 1123 4 63 2 1124 2 64 2 1377 10 533 2 771 2 1246 4 861 2 319 2 422 2 538 6 276 12 669 2 18 2 236 2 590 6 1300 6 917 4 1134 4 1093 8 550 4 106 6 997 2 679 2 1304 2 553 4 206 2 875 2 1217 2 207 8 241 2 925 2 644 2 1346 2 75 2 335 2 1051 2 76 2 244 4 788 2 1349 2 791 2 1103 4 
799 4 171 2 1106 2 653 2 696 2 176 4 567 2 521 2 402 2 480 2 1231 2 1113 2 9 2 983 2 1070 2 1199 2 951 2 1159 2 853 2 63 2 1123 4 1124 2 64 2 1377 10 533 2 771 2 1246 4 319 2 861 2 422 2 538 8 276 12 18 2 236 2 590 6 1300 8 917 4 30 2 1093 8 1134 4 550 4 106 6 679 2 1304 2 553 4 206 2 1217 2 875 2 207 8 241 2 925 2 644 2 1346 2 75 2 335 2 1051 2 76 2 244 4 788 2 1349 2 791 2 1103 4 
860 2 236 2 422 2 
860 2 236 2 422 2 
2 2 797 4 1060 2 518 2 799 2 171 2 1062 2 696 2 1065 4 700 6 527 2 807 2 707 2 983 4 1070 2 13 4 269 2 1159 4 1074 2 623 2 1077 2 273 2 1246 4 191 2 276 24 538 12 1085 4 18 4 1251 6 542 2 372 2 374 2 915 2 1258 2 917 4 28 2 550 4 1093 4 918 2 1261 4 827 4 106 12 553 4 206 2 1175 2 207 6 1346 2 36 4 1003 2 1349 2 740 2 1103 4 1355 2 393 2 395 4 938 4 840 2 568 2 480 2 1113 2 1280 2 1367 2 571 2 134 2 58 4 413 2 1123 2 1124 4 1290 2 664 2 64 2 855 2 1377 6 771 4 421 2 860 2 861 2 319 2 422 6 583 2 494 2 153 2 588 2 236 4 590 16 498 2 1300 16 593 2 1134 2 597 4 875 2 1217 4 241 4 1306 2 75 2 335 2 1050 2 1051 2 242 2 431 2 1142 4 244 6 76 2 788 2 77 4 246 2 
319 2 968 2 276 4 473 2 1060 2 938 2 1306 2 119 2 590 2 1290 2 687 2 28 2 142 2 246 2 814 2 593 2 9 2 
797 4 1060 2 518 2 799 2 171 2 1062 2 696 2 1065 4 700 6 527 2 1237 2 807 2 707 2 983 4 1070 2 13 4 269 2 1159 4 1074 2 623 4 1246 4 273 2 191 2 276 24 538 12 1085 4 18 4 1251 6 542 2 195 2 372 2 374 2 915 2 1258 2 917 4 28 2 550 4 199 2 1093 4 918 2 1261 4 827 4 106 12 553 4 206 2 1175 2 207 6 1346 2 36 4 1003 4 1349 2 740 2 1103 4 1355 2 393 2 395 4 474 2 938 2 840 2 568 2 480 2 1113 4 1280 2 571 2 134 2 1199 2 58 4 413 2 1123 2 1124 4 664 2 64 2 855 2 1377 6 771 4 860 2 861 2 319 2 422 6 494 2 153 2 588 2 236 4 590 16 498 2 1300 16 593 2 1134 2 597 4 875 2 1217 4 241 4 1306 2 75 2 335 2 1050 2 1051 2 242 2 431 2 684 2 1142 4 244 6 76 2 788 2 77 4 
2 1 797 4 1060 2 518 2 799 2 171 2 1062 2 696 2 1065 4 700 6 527 2 807 2 707 2 983 4 1070 2 13 4 269 2 1159 4 1074 2 623 2 273 2 1246 4 191 2 276 24 538 12 1249 2 1085 4 18 4 1251 6 542 2 100 2 372 2 374 2 915 2 1258 2 917 4 28 2 550 4 1093 4 918 2 1261 4 827 4 106 12 553 4 206 2 1175 2 207 6 1346 2 36 4 1003 2 1349 2 740 2 648 2 1103 4 1355 2 1270 2 393 2 395 4 938 4 840 2 568 2 480 2 1113 4 1280 2 571 2 134 2 1199 2 58 4 413 2 1123 2 1124 4 1290 2 664 2 64 2 855 2 1377 6 771 4 860 2 861 2 319 2 422 6 494 2 153 2 588 2 236 4 590 16 498 2 1300 16 593 2 1134 2 597 4 875 2 1217 4 241 4 1306 2 75 2 335 2 1050 2 1051 2 242 2 431 2 1142 4 244 6 76 2 788 2 1222 2 77 4 246 2 
1311 2 250 2 976 2 1062 2 440 2 1318 2 700 6 1322 2 93 2 528 2 95 2 1240 2 269 2 1074 2 904 2 717 2 1334 2 273 6 535 4 191 2 537 2 276 26 18 4 1085 4 1166 2 1251 2 542 2 1168 2 372 8 911 2 913 2 374 2 1089 2 915 6 377 2 1258 2 1261 4 285 2 1175 2 208 2 1346 2 1003 2 1349 2 740 2 1354 6 833 2 1355 2 561 2 125 2 1188 2 938 2 840 2 222 6 759 2 945 2 948 2 1369 1 414 2 413 2 1030 2 576 2 855 2 319 2 861 2 149 4 494 2 1294 2 325 2 590 20 1215 2 501 4 1038 2 1047 2 1049 2 680 2 1217 4 875 2 335 2 336 2 1050 2 683 2 242 2 431 2 244 6 788 2 1309 2 790 2 1057 4 
276 2 652 2 495 2 396 2 837 4 69 2 372 2 152 2 1215 2 590 2 1089 3 1130 6 915 2 501 2 237 3 1022 2 945 3 485 2 356 2 383 2 416 2 1003 3 1076 2 273 2 
276 2 652 2 495 2 396 2 837 4 69 2 372 2 152 2 1215 2 590 2 1089 2 1130 6 915 2 501 2 237 2 1022 2 945 2 485 2 356 2 383 2 416 2 1003 2 1076 2 273 2 
276 2 652 2 495 2 396 2 837 4 69 2 372 2 152 2 1215 2 590 2 1089 2 1130 6 915 2 501 2 237 2 1022 2 945 2 485 2 356 2 383 2 416 2 1003 2 1076 2 273 2 
169 2 1188 2 299 2 976 2 1150 2 1108 4 1229 2 526 2 1278 4 222 6 1194 2 945 3 1197 2 1026 4 356 2 576 2 1288 2 1289 4 140 4 1207 6 1161 3 318 2 1293 2 535 4 367 4 1338 2 276 10 537 2 1168 2 372 2 325 2 590 4 1215 2 72 2 640 2 729 2 1044 3 783 3 683 2 1003 3 
1338 2 367 4 537 2 276 10 169 2 1188 2 299 2 976 2 1168 2 151 2 325 2 372 2 1150 2 674 2 1108 4 1215 2 590 4 1229 2 1278 4 526 2 72 2 222 4 1194 2 640 2 729 2 1044 2 945 2 1197 2 1026 4 783 2 356 2 683 2 1003 2 576 2 1289 4 1288 2 1221 2 140 4 1161 2 1207 6 318 2 1293 2 535 4 
1338 2 367 4 537 2 276 10 169 2 1188 2 299 2 976 2 1168 2 151 2 325 2 372 2 1150 2 674 2 1108 4 1215 2 590 4 1229 2 1278 4 526 2 72 2 222 4 1194 2 640 2 729 2 1044 2 945 2 1197 2 1026 4 783 2 356 2 683 2 1003 2 576 2 1289 4 1288 2 1221 2 140 4 1161 2 1207 6 318 2 1293 2 535 4 
1338 2 367 4 537 2 276 10 169 2 1188 2 299 2 976 2 1168 2 151 2 325 2 372 2 1150 2 674 2 1108 4 1215 2 590 4 1229 2 1278 4 526 2 72 2 222 4 1194 2 640 2 729 2 1044 2 945 2 1197 2 1026 4 783 2 356 2 683 2 1003 2 576 2 1289 4 1288 2 1221 2 140 4 1161 2 1207 6 318 2 1293 2 535 4 
1338 2 367 4 537 2 276 10 169 2 1188 2 299 2 976 2 1168 2 151 4 325 2 372 2 1150 2 674 4 1108 4 1215 2 590 4 1229 2 1278 4 526 2 72 2 222 4 1194 2 640 2 729 2 1044 2 945 2 1197 2 1026 4 783 2 356 2 683 2 1003 2 576 2 1289 4 1288 2 1221 4 140 4 1161 2 1207 6 318 2 1293 2 535 4 
562 2 1117 2 981 2 449 2 1247 2 1317 2 
1363 2 1039 2 1359 2 749 2 254 2 981 2 391 2 
276 10 43 2 1148 2 277 2 937 2 1035 2 303 2 590 8 85 2 591 1 401 2 727 1 352 2 1067 2 1326 1 1198 2 54 2 511 2 1372 1 849 2 357 2 430 2 767 1 788 2 1032 2 492 2 
276 6 537 6 1211 2 149 4 1188 6 976 6 1168 6 151 2 325 6 839 2 398 2 674 5 590 6 1038 2 995 2 1020 4 222 16 826 2 93 2 528 2 160 2 683 6 576 6 1288 2 929 2 1221 2 490 2 140 4 1334 2 535 12 
367 2 947 2 276 1 923 2 310 2 670 2 1370 2 126 2 1016 2 83 4 590 1 1228 1 1289 2 531 6 1278 2 294 2 662 2 1320 2 
947 2 367 2 923 2 310 4 670 2 1370 2 126 2 1016 2 83 4 1289 2 531 6 1278 2 294 4 662 2 1320 4 
947 8 367 2 276 1 923 2 310 8 670 2 1370 2 126 6 1016 2 83 4 590 1 1228 1 1289 2 531 10 1278 2 294 8 662 2 1320 8 
367 2 923 2 310 2 670 2 1370 2 1016 2 83 2 1289 2 531 2 1278 2 294 2 662 2 1320 2 
249 6 2 2 1062 2 697 14 350 4 619 4 525 4 980 2 700 102 982 10 889 4 806 4 892 6 621 24 1324 4 984 4 1071 4 270 2 1074 6 1075 4 1332 4 626 4 628 4 813 4 1164 4 1078 4 721 4 365 2 192 2 1080 4 631 8 276 78 17 4 1085 44 1084 8 542 26 993 4 723 16 24 4 375 8 916 16 26 10 639 2 825 4 31 2 1261 36 919 4 551 8 463 2 1343 4 734 4 998 30 1176 2 1345 4 289 8 384 1 830 4 36 16 468 2 37 10 1268 2 40 2 1012 2 563 4 1358 2 297 4 936 4 1190 2 840 6 1107 16 128 10 405 4 755 4 847 4 762 4 55 2 574 4 763 2 1028 2 60 4 415 8 1373 2 953 4 1287 4 314 4 228 2 855 28 65 2 1379 24 858 10 66 2 862 4 963 2 320 32 964 4 586 4 71 4 326 4 590 70 592 2 1133 6 1043 10 329 8 73 6 240 10 1220 4 604 24 686 4 1392 8 166 11 
2 2 1358 2 939 2 1062 2 840 2 700 40 405 2 755 4 806 2 621 8 892 2 847 2 55 2 1071 4 763 2 1028 2 1373 2 359 10 1074 2 314 2 626 4 228 2 855 12 628 4 813 2 858 6 1078 4 721 4 1210 2 276 28 631 6 1085 14 542 12 196 2 71 4 590 26 26 6 1133 4 639 2 1261 14 463 2 1342 2 998 6 735 2 240 2 73 2 557 2 738 2 36 14 466 2 1220 2 468 2 1351 2 37 6 686 2 649 2 1268 2 166 2 516 2 
249 5 2 4 346 8 1315 24 1062 8 694 24 697 12 350 6 619 4 700 248 443 8 889 6 806 10 263 4 892 10 621 124 1324 6 984 6 354 12 1071 6 268 26 1074 14 359 22 187 4 1332 6 626 8 628 6 813 10 1164 6 1078 6 721 6 365 2 1080 6 1248 2 17 6 276 150 631 16 1085 112 1084 50 542 58 993 4 196 2 822 6 24 4 375 24 916 42 26 16 549 90 639 2 825 6 1261 88 31 2 919 4 104 4 461 4 463 4 1342 2 1343 6 734 4 998 34 735 2 1176 4 113 90 382 10 557 4 738 4 830 4 36 28 646 10 466 11 468 8 1351 2 37 16 649 2 1358 2 297 4 936 4 939 8 840 14 479 26 1276 4 660 2 755 6 405 10 1195 18 409 4 847 4 136 2 762 6 55 8 763 2 663 24 1028 8 60 4 1373 2 953 6 1287 6 314 6 228 2 315 2 855 58 957 4 1379 84 858 16 493 24 66 2 862 6 321 8 1383 4 774 6 150 24 71 6 326 4 590 134 592 2 1133 8 329 42 1048 2 73 36 240 18 785 4 1220 10 604 92 686 4 690 10 166 16 516 2 
472 2 2 2 1147 2 1358 2 170 2 82 2 1062 2 1151 2 840 2 478 4 128 2 941 2 1234 2 980 2 700 38 8 2 443 2 982 2 1281 2 621 2 408 2 135 2 898 2 55 2 763 2 663 2 1028 2 1121 2 417 2 1373 2 1074 2 187 2 138 4 271 2 855 6 628 2 316 2 65 2 858 2 1078 2 493 2 721 2 1381 2 276 36 1082 2 1085 16 864 4 542 6 1088 2 150 2 457 4 866 2 590 36 1170 2 26 2 639 2 1042 2 1043 2 1261 16 204 4 1216 2 999 2 382 2 33 2 36 26 646 2 468 2 37 2 558 2 1268 2 690 2 
728 2 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 
789 1 1112 1 447 1 1017 1 720 1 1335 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 207 369 150 429 314 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 157 1062 918 1308 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarInfoNameTest:testParse()V FAILED junit.framework.AssertionFailedError 126 283 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 126 283 
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
jtb.JavaParser:jj_3R_118()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_55()Z
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Debug:logDetail()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_2_25(I)Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.Invariant:getConfidence()D
daikon.Quant:eltsLTE([II)Z
daikon.inv.Invariant:logOn()Z
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_27()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.JavaParser:jj_2_17(I)Z
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:lexEqual([I[I)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
jtb.JavaParser:jj_3R_70()Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsEqualIndex([I)Z
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.Quant:eq(FF)Z
jtb.JavaParser:jj_3R_104()Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
utilMDE.WeakHasherMap:size()I
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:mod_positive(II)I
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:jj_3R_102()Z
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.ProglangType:dimensions()I
daikon.Quant:eltwiseLTE([I)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_57()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_3_10()Z
daikon.ProglangType:isIntegral()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_3R_161()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaCharStream:getBeginLine()I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_4()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:setDiff([I[I)[I
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.Quant:lt(II)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.JavaParser:jj_3R_114()Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.VarInfoName:isLiteralConstant()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:eq(JJ)Z
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:noDups([I)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfo:isIOAArray()Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.Quant:eq(II)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Ppt:Ppt()V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_119()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaCharStream:getBeginColumn()I
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParser:jj_3_29()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_162()Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant; | RETURN | 3378 | return null
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.Quant:pairwiseGTE([I[I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.Quantify.Length:esc_name()Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaCharStream:readChar()C
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.Quantify.Term:simplify_name()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParser:jj_3R_133()Z
utilMDE.Intern:numIntArrays()I
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_47()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.JavaParser:jj_2_12(I)Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.Quant:eq(DD)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.Quant:eltsGtIndex([I)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.PptSlice2:arity()I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
utilMDE.LimitedSizeIntSet:size()I
daikon.diff.RootNode:RootNode()V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE:gcd(II)I
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_116()Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaParser:jj_3_25()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:memberOf(S[S)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_3(I)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.diff.Node:Node()V
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_69()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_14()Z
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 133346 | return null
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:ne(II)Z
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:isPrestate()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_2_36(I)Z
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_135()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration; | RETURN | 35786 | return null
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.FuzzyFloat:gt(DD)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_77()Z
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParser:jj_3R_125()Z
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:jj_3_5()Z
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
daikon.Quant:memberOf(F[F)Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3_3()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3_12()Z
utilMDE.Intern:intern([D)[D
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_3R_126()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_19()Z
daikon.VarInfo:isDerived()Z
jtb.JavaParser:jj_3R_103()Z
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.scalar.NonZero:is_pointer()Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.Debug:logOn()Z
jtb.JavaParser:jj_3R_86()Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:jj_3R_53()Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:min([I)I
jtb.JavaParser:jj_2_4(I)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:sum([[I)I
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quantify.FreeVar:simplify_name()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_36()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.MathMDE:pow_fast(II)I
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.JavaParser:jj_3R_163()Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.ProglangType:isFloat()Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
jtb.JavaParser:jj_3R_80()Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.Invariant:logDetail()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.Quantify.SimplifyQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:isPointer()Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_51()Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.ProglangType:base()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:isMissingFlow(I)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.ValueTuple:size()I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.MathMDE:modulus([I)[I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.Quant:setEqual([I[I)Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
utilMDE.SimpleLog.LongVal:LongVal(J)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quant:pairwiseLTE([I[I)Z
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3R_63()Z
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.JavaParser:jj_3_15()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:jj_2_18(I)Z
daikon.PptName:isCombinedExitPoint()Z
daikon.PptSlice0:arity()I
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.Quant:gt(II)Z
jtb.JavaCharStream:backup(I)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.Invariant:justified()Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
utilMDE.Assert:assertTrue(Z)V
jtb.JavaParser:jj_2_35(I)Z
daikon.Quantify.Length:simplify_name()Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:relate_var()V
jtb.JavaParser:jj_3R_115()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:lexGT([I[I)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_2_10(I)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_81()Z
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.PptSlice1:arity()I
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_106()Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
daikon.PptSlice1:num_samples()I
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.Quant:lexGTE([I[I)Z
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:jj_3_35()Z
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.Quant:gte(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.Quant:eltwiseEqual([I)Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.ModBitTracker:num_sets()I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_110()Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.JavaParser:jj_2_14(I)Z
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:is_direct_non_slice_array()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getEndLine()I
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.ProglangType:isArray()Z
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_87()Z
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.JavaParser:jj_3R_67()Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.JavaParser:jj_3_20()Z
jtb.JavaParser:jj_3R_61()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.FormatTestCase:passes()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Quant:subsetOf([D[F)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:subarray([JII)[J
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_62()Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_99()Z
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:eltsGTE([II)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.Quantify.SimplifyQuantification:get_closer()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:jj_2_21(I)Z
daikon.Quant:slice([III)[I
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName:hashCode()I
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_117()Z
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.Quant:eltsEqual([II)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_75()Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_17()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.Quant:subsetOf([B[I)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.Quant:memberOf(D[F)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:get_quantification()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:jj_2_13(I)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:memberOf(I[I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.Quant:lte(II)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_88()Z
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_3R_109()Z
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quantify.Constant:Constant(I)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_72()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
utilMDE.Intern:intern([J)[J
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_85()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quantify.SimplifyQuantification:SimplifyQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.Quant:union([I[I)[I
utilMDE.ArraysMDE:sum([I)I
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_148()Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:num_vars()I
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_60()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoAux:hashCode()I
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.inv.Invariants:Invariants()V
jtb.JavaParser:jj_3_18()Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_16()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_122()Z
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_100()Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.ModBitTracker:split(I)I
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:jj_3R_107()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptName:isEnterPoint()Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_105()Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.InvariantFormatTester:execute()Z
utilMDE.ArraysMDE:max([I)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1307 2 1210 2 792 2 491 2 352 4 1203 2 522 2 1110 2 593 2 
451 2 636 6 582 2 991 2 546 6 1156 2 1219 2 106 2 1303 2 239 2 10 6 
806 2 792 2 374 2 206 6 468 2 550 4 913 6 723 6 29 2 401 4 318 2 1096 6 593 2 
385 8 345 10 1019 2 660 12 47 2 390 2 156 4 234 10 875 16 982 29 1226 10 1228 2 881 4 770 2 593 6 1111 2 1212 26 128 2 667 8 792 6 1232 8 1090 8 690 16 364 6 600 4 1293 10 954 16 742 10 1185 6 830 4 
791 6 172 4 
695 2 
626 2 1201 4 43 2 680 2 95 2 51 2 177 4 1177 2 590 2 593 4 1210 2 687 2 1047 2 599 2 180 2 652 2 269 2 507 2 68 2 1142 2 349 4 1304 2 941 2 231 2 786 2 391 2 1228 2 32 2 1196 2 857 2 715 2 859 4 792 4 1309 2 751 2 129 2 1161 2 1198 2 162 2 1116 2 824 2 399 2 198 2 135 2 
345 16 348 2 536 4 660 22 234 16 835 4 875 32 683 6 1226 16 377 2 982 54 1041 4 588 6 1305 6 881 2 593 4 33 2 13 4 1212 48 128 2 792 4 667 18 1045 2 101 2 1046 4 1090 6 690 32 1287 4 81 6 364 4 1293 6 742 16 954 32 340 4 1185 4 891 8 270 2 996 6 110 6 
1255 2 399 2 609 2 
435 2 713 2 379 2 55 22 701 2 424 2 440 2 140 2 442 2 427 2 941 2 38 10 86 2 494 2 
345 2 660 2 326 2 1004 2 75 2 811 2 234 2 875 2 1226 2 982 6 813 2 76 2 881 2 1212 4 667 2 718 2 907 2 690 2 364 2 1293 4 742 2 954 2 154 2 
345 4 1212 12 690 8 660 4 74 2 156 2 234 4 835 4 875 8 954 8 982 16 1226 4 742 4 1041 4 1305 6 1295 2 110 6 
624 4 780 2 699 2 68 4 347 2 4 2 307 2 978 2 349 4 324 4 609 2 939 2 488 4 1003 2 610 10 1255 6 922 2 188 62 613 2 1195 2 902 4 475 2 818 2 929 4 1244 4 102 2 909 2 83 14 382 2 162 2 721 2 365 10 36 4 399 8 182 4 483 4 726 2 1098 2 445 4 655 4 
185 2 657 2 1178 2 746 2 1103 2 257 2 695 2 983 2 1061 2 211 2 
249 2 2 3 168 2 920 2 763 2 573 2 252 8 91 2 575 24 92 2 1169 2 1002 2 1173 3 327 2 1174 16 328 1 1238 4 94 2 414 2 924 32 258 2 491 2 492 4 593 34 336 2 1088 1 686 2 839 2 14 3 419 2 15 3 420 2 502 1 179 1 1091 1 691 2 267 2 935 2 1100 8 346 2 1018 2 781 2 423 2 936 1 112 2 608 2 850 2 707 3 355 2 1192 1 612 2 1105 1 945 3 709 2 30 2 358 1 118 2 278 2 123 12 1023 2 122 16 527 2 526 2 792 32 281 4 617 1 441 2 1027 2 361 3 952 2 363 2 619 2 724 2 1033 8 368 2 370 2 288 2 201 1 730 2 1037 3 631 1 1275 1 1278 2 958 16 632 2 1280 2 208 2 144 2 145 2 1042 6 378 2 805 2 296 2 1129 24 1044 2 1286 2 1132 4 968 2 1133 2 886 1 1289 2 1135 1 1216 5 381 2 650 2 971 2 302 2 152 2 889 4 458 2 459 2 553 6 1297 2 221 2 386 2 977 2 67 4 658 32 659 2 894 2 155 3 226 3 466 3 469 2 557 1 1055 2 472 4 812 2 1227 2 816 2 560 2 986 2 159 2 905 2 242 6 821 2 1314 2 1160 2 397 2 1076 4 675 16 568 2 827 2 245 2 1165 6 402 3 997 2 
25 2 593 2 
189 2 1171 2 593 4 
411 2 
0 8 484 2 998 2 1168 2 999 4 321 2 832 4 323 2 322 2 3 4 485 2 325 4 171 2 1170 2 834 2 329 4 175 2 331 2 334 2 495 2 685 4 11 6 497 36 688 14 499 2 500 4 689 2 1008 4 501 48 1180 2 504 16 1181 2 506 6 1015 4 694 4 845 2 343 2 20 2 696 2 21 48 700 2 509 2 1187 14 186 8 350 48 1190 2 1020 16 1191 4 28 2 515 48 516 2 708 2 852 2 517 4 518 2 854 146 519 4 712 8 523 4 525 2 1022 2 35 2 1026 2 194 48 1029 2 863 36 367 8 864 2 530 2 369 2 372 2 203 2 373 2 869 28 535 6 537 2 1206 2 731 2 207 2 872 2 538 2 874 146 1207 2 49 2 540 2 541 2 880 28 1209 2 53 2 543 2 738 2 212 2 380 2 739 2 56 2 545 2 741 2 885 2 547 4 548 8 384 2 551 2 63 2 552 22 218 2 1218 6 1220 2 220 26 1223 2 73 2 747 4 389 2 748 2 1058 2 393 48 901 2 1065 2 561 2 78 4 904 2 1067 2 564 2 1230 2 1071 36 908 4 396 2 1233 2 82 2 1078 2 755 2 1079 2 84 2 757 2 569 2 246 8 404 2 917 2 759 24 1081 2 761 2 89 4 1083 22 576 2 764 2 409 2 579 2 766 216 1236 48 1239 2 581 4 768 48 256 48 926 22 589 2 415 10 591 2 96 6 98 22 100 2 417 2 263 2 777 2 1245 2 1092 8 1246 20 1247 2 107 2 271 2 1250 4 108 2 933 2 1099 46 1252 2 934 2 273 2 1254 2 606 2 607 2 275 4 426 2 937 2 1102 2 276 2 784 14 114 4 785 2 611 4 1257 8 429 2 430 4 946 2 433 8 615 2 436 16 947 48 948 10 121 6 437 2 1260 2 279 2 125 4 439 2 1263 4 950 2 1114 2 443 8 618 4 130 4 793 2 284 2 1117 2 132 48 1269 44 286 2 1118 2 1273 2 137 2 1119 2 290 2 291 4 139 2 798 8 446 2 1276 24 1277 2 1279 2 961 2 143 48 640 8 1282 2 1125 2 146 2 148 2 1285 2 644 2 298 4 299 4 149 2 150 2 1138 2 457 20 1292 2 972 2 304 2 1296 2 462 2 976 4 979 2 465 2 980 2 1144 4 1145 2 1146 2 470 2 309 2 1306 2 815 2 663 2 664 2 817 2 1155 4 476 2 314 2 477 2 478 26 1312 10 479 2 1162 4 990 2 674 2 317 146 482 4 163 2 826 2 992 2 993 2 1166 2 829 48 1317 4 
214 1 232 2 1291 2 79 2 
232 2 1302 2 
1128 2 524 2 167 2 1101 4 55 6 1070 2 387 2 1310 2 486 2 339 4 1136 2 1013 2 215 2 392 2 62 2 1095 2 592 2 1284 2 
79 2 555 2 
306 2 399 2 994 2 1264 2 
306 2 399 2 630 2 1197 2 994 2 1264 2 
232 2 600 2 399 2 153 2 1264 2 1158 2 
231 2 222 2 
600 2 399 2 1068 2 1264 2 
1163 2 846 2 
1049 2 161 2 
662 2 868 2 
767 2 23 2 
1152 2 767 2 161 2 
767 2 580 2 161 2 
822 2 767 2 161 2 
767 2 858 2 161 2 
293 2 943 6 1005 2 333 2 750 2 1264 2 217 6 399 2 
93 2 455 2 
232 2 261 2 600 2 399 2 630 2 1264 2 1158 2 
232 2 734 2 1158 2 
232 2 403 2 1158 2 
79 2 455 2 77 2 
232 2 1158 2 
1112 2 455 2 
232 2 957 2 
272 2 79 2 455 2 
531 2 868 2 79 2 
767 2 79 2 752 2 
1163 2 79 2 1074 2 
308 2 79 2 161 2 
870 2 455 2 
230 2 232 2 
18 2 868 2 
767 2 104 2 
1163 2 99 2 
448 2 161 2 
54 2 455 2 
1148 2 161 2 
1163 2 341 2 
767 2 1106 2 
216 2 868 2 
272 2 79 2 46 2 455 2 
272 2 79 2 890 2 46 2 455 2 
79 2 224 2 455 2 
1039 2 79 2 455 2 
625 2 66 2 898 2 1059 2 
368 2 
1000 2 920 2 763 2 91 2 1169 2 92 2 1002 2 1238 4 924 6 491 2 492 4 769 2 927 2 336 2 593 26 419 2 775 2 267 2 603 4 935 2 1100 2 848 2 1018 2 1188 2 112 2 850 2 355 2 612 2 1258 2 30 2 1023 2 122 6 123 8 792 26 281 4 441 2 363 2 619 4 724 2 1032 4 1280 2 376 2 144 2 145 2 1042 4 878 2 1044 2 1132 2 968 2 886 2 549 2 1289 2 889 2 459 2 553 2 1052 2 977 2 658 4 71 2 745 2 661 2 469 6 557 2 1147 2 472 2 899 2 816 2 905 2 242 6 1314 2 1076 4 568 2 827 2 1165 2 
1000 2 920 2 763 2 91 2 1169 2 92 2 1002 2 1238 4 924 6 491 2 492 4 927 2 336 2 593 26 839 2 419 2 267 2 603 4 935 2 1100 2 848 2 1018 2 1188 2 112 2 850 2 355 2 612 2 30 2 1023 2 122 6 123 8 792 26 281 4 441 2 1027 2 363 2 619 4 1199 2 724 2 1032 4 1280 2 376 2 144 2 145 2 1042 6 878 2 965 2 1044 2 1132 2 968 2 886 2 549 2 1289 2 971 2 889 2 459 2 553 2 1052 2 977 2 658 4 71 2 745 2 661 2 469 6 557 2 1147 2 472 2 899 2 816 2 905 2 242 6 1314 2 1076 4 316 2 568 2 827 2 1165 2 
831 2 
823 2 17 2 
762 2 1121 2 920 2 763 2 1169 2 408 2 253 2 410 4 960 4 254 2 636 6 637 2 962 2 1238 2 923 2 582 2 413 4 493 10 52 2 336 2 10 6 593 12 594 2 966 2 737 2 498 2 546 6 776 2 1290 2 422 2 459 2 1050 2 1294 2 342 2 106 4 1219 2 1097 2 698 2 744 2 388 2 228 2 353 4 355 2 612 2 1057 8 238 8 239 4 1229 2 438 2 792 6 281 2 1262 2 820 2 242 4 1115 2 1265 4 131 2 570 2 247 2 287 4 
763 2 1121 2 920 2 1169 2 408 2 253 2 410 4 960 4 254 2 637 2 636 6 962 2 1238 2 923 2 582 2 413 4 493 10 52 2 735 2 336 2 10 8 593 12 594 2 966 2 737 2 498 2 546 8 776 2 1290 2 1140 4 422 2 459 2 1050 2 342 2 106 4 1219 2 1097 2 698 2 70 2 744 2 388 2 228 2 353 4 355 2 612 2 1057 8 238 8 239 4 1229 2 438 2 792 6 281 2 1156 2 1262 2 820 2 242 4 1115 2 1265 4 131 2 570 2 247 2 287 4 
966 2 698 2 546 2 408 2 776 2 253 2 410 4 960 2 1290 2 353 4 637 2 636 2 131 2 923 2 1050 2 342 2 106 2 239 2 
762 2 1121 2 920 2 763 2 1169 2 408 2 253 2 410 4 960 4 254 2 636 4 637 2 962 2 1238 2 923 2 582 2 413 4 493 6 52 2 336 2 10 6 593 12 594 2 966 2 737 2 498 2 546 6 776 2 1290 2 422 2 459 2 1050 2 1294 2 342 2 106 4 1097 2 698 2 744 2 388 2 228 2 353 4 355 2 612 2 1057 4 238 4 239 4 1229 2 438 2 792 6 281 2 1156 2 1262 2 820 2 242 4 1115 2 1265 4 131 2 570 2 247 2 287 4 
762 2 1121 2 920 2 763 2 1169 2 408 2 253 2 410 4 960 4 254 2 636 6 637 2 962 2 1238 2 923 2 582 2 413 4 493 6 52 2 336 2 10 6 593 12 594 2 966 2 737 2 451 2 498 2 546 4 776 2 1290 2 422 2 459 2 1050 2 1294 2 342 2 106 4 1097 2 698 2 744 2 388 2 228 2 353 4 355 2 612 2 1057 4 238 4 239 4 1229 2 438 2 792 6 281 2 1262 2 820 2 242 4 1115 2 1265 4 131 2 570 2 247 2 287 4 
762 2 1121 2 920 2 763 2 1169 2 408 2 253 2 410 4 960 4 254 2 636 6 637 2 962 2 1238 2 923 2 582 2 413 4 493 6 52 2 336 2 10 6 593 12 594 2 966 2 737 2 498 2 546 6 776 2 1290 2 422 2 459 2 1050 2 1294 2 342 2 106 4 1219 2 1097 2 698 2 744 2 388 2 228 2 353 4 355 2 612 2 1057 8 238 4 239 4 1229 2 438 2 792 6 281 2 1262 2 820 2 242 4 1115 2 1265 4 131 2 570 2 247 2 287 4 
762 2 1121 2 920 2 763 2 1169 2 408 2 253 2 410 4 960 4 254 2 636 8 637 2 962 2 1238 2 923 2 582 2 413 4 493 10 52 2 336 2 10 8 593 12 594 2 966 2 737 2 451 2 498 2 546 6 776 2 1290 2 422 2 459 2 1050 2 1294 2 342 2 106 4 1219 2 1097 2 698 2 744 2 388 2 228 2 353 4 355 2 612 2 1057 8 238 8 239 4 1229 2 438 2 792 6 281 2 1262 2 820 2 242 4 1115 2 1265 4 131 2 570 2 247 2 287 4 
762 2 1121 2 920 2 763 2 1169 2 408 2 253 2 410 4 960 4 254 2 636 6 637 2 962 2 1238 2 923 2 582 2 413 4 493 10 52 2 336 2 10 6 593 12 594 2 966 2 737 2 498 2 546 6 776 2 1290 2 422 2 459 2 1050 2 1294 2 342 2 106 4 1219 2 1097 2 698 2 744 2 388 2 228 2 353 4 355 2 612 2 1057 8 238 8 239 4 1229 2 438 2 792 6 281 2 1262 2 820 2 242 4 1115 2 1265 4 131 2 570 2 247 2 287 4 
1000 2 1169 2 6 2 491 2 492 4 9 2 493 2 336 2 10 12 496 6 337 1 839 2 498 2 16 2 1010 6 842 2 342 2 184 2 1017 2 698 2 848 4 22 6 847 6 702 4 1189 2 513 6 24 10 25 6 704 2 353 4 355 2 189 6 30 2 855 6 1023 2 1027 2 196 2 363 2 724 2 862 2 1030 7 725 1 1032 4 199 2 202 6 209 2 1042 6 210 2 52 2 737 2 546 4 1215 2 58 6 889 2 1050 2 553 2 64 2 744 2 745 2 388 2 228 2 896 6 1057 2 559 2 239 4 1229 4 562 2 1231 2 906 1 242 6 1076 4 912 6 243 2 754 2 568 12 570 2 247 2 248 2 760 6 571 6 763 2 920 2 405 6 1085 2 408 2 92 2 577 2 410 4 253 2 411 6 254 2 1238 4 923 2 582 4 413 8 924 8 593 46 594 2 419 2 776 2 267 2 422 2 106 4 1097 4 605 2 935 2 1100 2 112 2 782 1 612 2 787 4 788 2 438 2 123 4 122 6 792 24 281 4 1262 2 1115 2 1265 6 131 2 623 1 287 4 1121 2 1122 2 960 4 1280 2 636 8 637 2 962 2 1283 7 1126 1 451 4 966 2 646 2 1130 2 1132 2 968 2 454 8 1289 2 1290 2 459 2 1294 2 808 2 977 2 658 2 469 6 661 2 472 2 473 2 816 2 665 1 987 2 668 1 820 2 1157 2 1314 2 1165 2 319 1 
760 6 571 6 1000 2 405 6 920 2 763 2 1085 2 92 2 408 2 1169 2 577 2 253 2 410 4 411 6 6 2 254 2 1238 4 582 4 923 2 413 8 924 8 491 2 492 4 493 2 9 2 593 48 10 12 336 2 496 6 594 2 839 2 498 2 419 2 16 2 1010 6 776 2 842 2 267 2 422 2 342 2 106 4 1097 4 184 2 605 2 698 2 1017 2 935 2 1100 2 847 6 22 6 848 4 702 4 1189 2 112 2 513 6 24 10 25 6 704 2 353 4 355 2 612 2 189 6 787 4 30 2 788 2 855 6 438 2 122 6 123 8 1023 2 792 26 281 4 1262 2 1027 2 196 2 1115 2 363 2 619 2 1265 6 131 2 862 2 724 2 1032 4 287 4 199 2 202 6 1121 2 1122 2 960 4 1280 2 637 2 636 8 962 2 209 2 1042 6 210 2 52 2 883 2 966 2 737 2 646 2 1130 2 968 2 1132 4 546 8 454 8 1289 2 1215 2 1290 2 58 6 889 4 459 2 1050 2 1294 2 1219 4 808 2 553 2 64 2 658 2 977 2 744 2 1301 2 745 2 388 2 228 2 661 2 469 6 896 6 472 4 1057 6 559 2 473 2 816 2 239 4 1229 4 562 2 987 2 1231 2 820 2 1157 2 242 6 1314 2 912 6 1076 4 243 2 754 2 568 12 1165 2 570 2 247 2 248 2 
760 6 571 6 1000 2 405 6 920 2 763 2 1085 2 92 2 408 2 1169 2 577 2 253 2 410 4 411 6 6 2 254 2 1238 4 582 4 923 2 413 8 924 8 491 2 492 4 9 2 493 6 593 48 10 12 336 2 496 6 594 2 839 2 498 2 419 2 16 2 1010 6 776 2 842 2 267 2 422 2 342 2 106 4 1097 4 184 2 605 2 698 2 1017 2 935 2 1100 2 847 6 22 6 848 4 702 4 1189 2 112 2 513 6 24 10 25 6 704 2 353 4 355 2 612 2 189 6 787 4 30 2 788 2 855 6 438 2 122 6 1023 2 123 8 792 26 281 4 1262 2 1027 2 196 2 1115 2 363 2 619 2 1265 6 131 2 862 2 724 2 1032 4 287 4 199 2 202 6 1121 2 1122 2 960 4 1280 2 637 2 636 8 962 2 209 2 1042 6 210 2 52 2 883 2 966 2 737 2 646 2 1130 2 1132 4 546 8 968 2 454 8 1289 2 1215 2 1290 2 58 6 889 4 459 2 1050 2 1294 2 1219 4 808 2 553 2 64 2 658 2 977 2 744 2 1301 2 745 2 388 2 228 2 469 6 661 2 896 6 472 4 1057 6 559 2 473 2 238 4 816 2 239 4 1229 4 562 2 987 2 1231 2 820 2 1157 2 242 6 1314 2 912 6 1076 4 243 2 754 2 568 12 1165 2 570 2 247 2 248 2 
679 6 1000 2 1169 2 6 2 491 2 492 4 837 2 493 6 9 2 336 2 10 16 496 6 839 2 498 2 16 2 1010 12 842 2 342 2 184 2 1017 2 698 2 848 4 22 6 847 6 510 6 702 4 1189 2 513 6 24 8 25 12 704 2 353 4 355 2 189 12 30 2 855 12 716 2 1023 2 1027 2 196 2 363 2 724 2 862 2 1032 6 199 2 202 6 209 2 539 2 1042 6 210 2 1208 6 52 2 883 2 737 2 546 10 1215 2 58 6 889 4 1050 2 1219 4 553 4 64 2 744 2 745 4 388 2 228 2 896 6 1057 6 559 2 238 4 239 4 1229 4 562 2 1231 2 242 6 1076 4 912 6 243 2 244 6 754 2 568 10 570 2 247 2 248 2 760 6 250 2 571 6 763 2 920 2 405 12 921 2 408 2 92 2 577 2 410 4 253 2 411 12 254 2 1238 4 923 2 582 4 413 8 924 12 586 6 593 52 594 2 419 2 776 2 265 6 267 2 422 2 106 4 1097 4 605 2 935 2 1100 4 112 2 612 2 787 4 788 2 1259 6 438 2 123 10 122 8 792 24 281 4 1262 2 1261 6 1115 2 619 2 1265 6 131 2 287 4 1121 2 1122 2 960 4 1280 2 636 10 637 2 962 2 451 2 966 2 646 2 1130 2 968 2 1132 4 454 8 1289 2 1290 2 649 6 459 2 1294 2 808 2 977 2 658 4 1301 2 467 2 661 2 469 8 472 4 473 2 816 2 987 2 1156 2 820 2 1157 2 1314 2 164 2 1165 4 1318 2 
1121 2 744 2 408 2 388 2 410 2 228 2 353 2 637 2 636 6 582 2 923 2 413 2 1057 6 238 4 493 4 52 2 239 4 593 4 10 4 737 2 438 2 498 2 546 6 1262 2 776 2 1290 2 1265 2 131 2 422 2 1050 2 1294 2 1219 2 106 4 287 2 247 2 
1000 2 763 2 920 2 1085 2 408 2 1169 2 92 2 410 2 1238 4 582 2 923 2 413 2 924 8 491 2 492 4 493 2 10 4 593 28 336 2 839 2 498 2 419 2 776 2 267 2 422 2 106 4 935 2 848 2 112 2 24 2 703 2 353 2 355 2 612 2 30 2 438 2 1023 2 122 6 792 24 281 4 1262 2 1025 2 282 3 1027 2 1115 2 363 2 1265 2 131 2 724 2 1032 4 368 2 287 2 1121 2 1280 2 636 6 637 2 801 2 1042 6 52 2 737 2 546 6 968 2 1290 2 651 2 458 2 459 2 1050 2 1294 2 1219 2 553 3 977 2 658 3 659 2 744 2 388 2 228 2 661 2 469 6 1055 2 1057 6 239 4 816 2 1154 2 242 6 1314 2 1076 4 568 4 1165 3 247 2 
422 2 1121 2 375 2 
422 2 1121 2 375 2 
1000 2 920 2 763 2 574 2 1169 2 408 2 410 2 487 2 173 2 682 2 254 2 1238 4 923 2 582 4 413 4 924 2 491 2 492 4 493 6 336 2 593 24 10 16 839 2 419 2 267 2 422 6 692 2 106 4 1097 4 698 2 935 2 22 2 848 6 702 2 1188 4 1189 2 112 2 24 2 704 2 353 2 355 2 612 2 116 4 787 2 30 2 192 2 438 2 123 4 1023 2 122 2 792 16 281 4 1262 2 1027 2 363 2 1265 4 724 2 133 2 287 2 1121 4 375 2 960 4 1280 2 636 12 1040 2 1042 6 210 2 966 2 451 4 1132 4 968 2 546 12 1288 2 1289 4 1290 4 889 4 459 2 1219 4 656 2 1298 2 977 2 658 2 661 2 469 2 981 4 472 4 1057 6 238 4 816 2 239 4 311 2 1229 2 1066 2 1156 4 820 2 242 6 673 2 1314 2 1076 4 568 4 1164 2 758 2 828 2 570 2 
605 2 22 2 1224 2 763 2 792 2 17 2 24 2 253 2 841 2 243 2 356 2 568 2 692 2 758 2 828 2 787 2 593 4 
1000 2 920 2 763 2 574 4 1169 2 408 2 410 2 682 2 254 2 255 2 1238 4 923 2 582 4 413 4 924 2 491 2 492 4 493 6 336 2 593 24 10 16 594 2 839 2 419 2 267 2 422 6 692 2 106 4 1097 4 698 2 935 2 22 2 848 6 702 2 1188 4 1189 2 112 2 704 2 353 2 355 2 612 2 116 4 30 2 521 2 192 2 438 2 123 4 1023 2 122 2 792 16 281 4 1262 2 1027 2 529 2 363 2 1265 4 724 2 133 2 287 2 39 2 1121 4 375 2 960 4 1280 2 636 12 1042 6 210 2 966 2 451 4 1132 4 968 2 546 12 1288 2 1289 4 1137 2 1290 4 889 4 459 2 1219 4 656 2 1298 2 977 2 658 4 661 2 469 2 981 4 472 4 1057 6 238 4 816 2 239 4 1229 4 1066 2 1156 4 820 2 242 6 673 2 1314 2 1076 4 568 2 1164 2 758 2 828 2 570 2 
1000 2 920 2 763 2 574 2 1169 2 408 2 410 2 682 2 254 2 1238 4 923 2 582 4 413 4 924 2 491 2 492 4 493 6 336 2 593 24 10 16 594 2 839 2 419 2 267 2 422 6 692 2 106 4 1097 4 698 2 935 2 22 2 848 6 702 2 1188 4 1189 2 112 2 24 2 704 2 353 2 355 2 115 2 612 2 116 4 787 2 30 2 192 2 438 2 123 4 1023 2 122 2 792 16 281 4 1262 2 1027 2 363 2 1265 4 1266 2 724 2 133 2 287 2 1121 4 375 2 633 2 960 4 1280 2 636 12 1042 6 210 2 966 2 451 4 1043 2 1132 4 968 2 546 12 1288 2 887 2 1289 4 1290 4 889 4 459 2 1219 4 656 2 1298 2 977 2 658 2 661 2 469 2 981 4 472 4 1057 6 238 4 816 2 239 4 1229 4 1066 2 1156 4 820 2 242 6 673 2 1314 2 1076 4 568 4 1164 2 758 2 828 2 570 2 
320 4 1000 2 169 3 1169 2 681 3 1172 4 488 2 490 2 1175 6 7 2 491 4 1006 2 492 6 837 2 838 4 335 2 684 4 336 2 839 6 1007 6 1179 2 690 8 1011 2 1012 2 505 4 843 2 1184 2 844 16 1185 4 183 2 1016 4 1186 2 697 20 1017 2 848 2 508 2 345 4 849 2 187 10 703 2 705 6 26 2 355 2 1193 4 851 2 710 4 30 2 856 2 716 2 33 2 860 8 1023 2 34 4 359 2 1025 2 360 4 195 2 1027 6 862 2 1031 2 1032 12 865 6 1034 1 199 4 532 6 40 2 204 4 205 4 1202 2 44 2 873 4 732 2 376 2 875 8 48 2 877 12 733 2 1041 4 50 2 539 2 1042 14 878 2 542 26 882 4 213 2 740 48 1212 12 1045 4 1213 2 886 2 549 2 1215 2 57 2 59 4 742 4 1051 2 553 16 65 2 1052 16 1053 4 69 2 743 6 71 2 745 46 72 2 893 2 225 2 1054 2 229 4 557 2 234 4 1056 6 235 2 1226 4 237 2 899 2 900 2 1060 10 1062 2 1063 2 563 2 903 2 240 1 80 3 242 6 394 2 753 4 1073 2 1076 6 1234 2 914 24 568 2 756 2 85 16 916 2 918 2 87 2 250 2 251 2 919 2 572 2 920 2 763 2 1084 2 921 2 407 2 92 2 1235 2 1237 2 1238 4 584 28 924 36 259 2 1241 4 927 2 593 40 1086 2 771 2 1087 2 97 2 595 2 773 4 260 2 597 2 262 8 1243 2 1090 6 930 6 103 2 266 2 267 4 268 2 105 4 601 2 1094 16 604 4 1249 2 110 6 935 2 1100 22 111 12 274 2 425 2 112 4 938 24 113 2 783 2 1104 2 612 2 431 4 432 2 434 2 614 2 123 60 122 14 949 10 792 30 280 2 281 4 1113 2 282 2 951 2 794 4 953 2 620 2 954 8 1268 2 445 2 134 60 955 2 1272 2 624 2 628 2 138 2 1120 4 629 2 292 8 1122 2 958 14 141 2 959 4 142 2 634 10 635 2 1280 4 963 8 294 2 802 6 964 2 1281 6 447 16 804 4 449 4 642 4 147 2 450 4 1127 2 643 2 452 2 453 6 297 18 1130 2 647 2 969 2 1289 4 301 4 456 2 151 2 1139 2 651 2 653 2 459 2 1141 2 303 2 655 2 460 7 975 3 977 2 658 23 463 2 464 7 660 6 467 2 469 14 1147 2 471 10 157 2 982 16 473 2 1149 20 816 2 1151 4 985 2 1154 2 1308 2 666 4 160 2 667 4 315 2 1314 4 1313 2 1315 4 481 2 675 4 164 2 483 2 1165 23 165 12 676 2 1167 4 
65 2 628 2 463 2 658 2 169 2 629 2 745 6 92 2 1054 2 141 2 634 2 469 2 924 2 1060 2 593 2 122 2 949 4 792 2 1179 2 911 2 1032 2 1165 2 676 2 553 2 
65 2 628 2 463 2 658 2 169 2 629 2 745 6 92 2 1054 2 141 2 634 2 469 2 924 2 1060 2 593 2 122 2 949 4 792 2 1179 2 911 2 1032 2 1165 2 676 2 553 2 
65 2 628 2 463 2 658 2 169 2 629 2 745 6 92 2 1054 2 141 2 634 2 469 2 924 2 1060 2 593 2 122 2 949 4 792 2 1179 2 911 2 1032 2 1165 2 676 2 553 2 
628 2 345 2 658 3 464 3 92 2 810 2 556 2 958 2 1123 2 233 2 234 2 875 2 924 2 1226 2 982 6 1149 6 474 2 593 10 856 4 1212 4 1069 2 544 2 792 4 669 3 528 2 1134 2 1090 4 1113 4 690 2 910 2 103 4 421 4 59 2 1234 4 675 2 742 2 954 2 1185 2 1165 3 460 3 
628 2 92 2 958 2 1123 2 875 2 924 2 593 10 1212 4 544 2 1090 4 1134 2 690 2 103 4 421 4 59 2 742 2 1185 2 460 2 345 2 658 2 464 2 660 2 556 2 810 2 233 2 234 2 982 4 1226 2 1149 6 474 2 856 4 792 4 1069 2 667 2 128 2 669 2 528 2 1113 4 910 2 1234 4 675 2 954 2 1165 2 
628 2 92 2 958 2 1123 2 875 2 924 2 593 10 1212 4 544 2 1090 4 1134 2 690 2 103 4 421 4 59 2 742 2 1185 2 460 2 345 2 658 2 464 2 660 2 556 2 810 2 233 2 234 2 982 4 1226 2 1149 6 474 2 856 4 792 4 1069 2 667 2 128 2 669 2 528 2 1113 4 910 2 1234 4 675 2 954 2 1165 2 
628 2 92 2 958 2 1123 2 875 2 924 2 593 10 1212 4 544 2 1090 4 1134 2 690 2 103 4 421 4 59 2 742 2 1185 2 460 2 345 2 658 2 464 2 660 2 556 2 810 2 233 2 234 2 982 4 1226 2 1149 6 474 2 856 4 792 4 1069 2 667 2 128 2 669 2 528 2 1113 4 910 2 1234 4 675 2 954 2 1165 2 
628 2 92 2 958 2 1123 2 875 2 924 2 593 10 1212 4 544 2 1090 4 1134 2 690 2 103 4 421 4 59 2 742 2 1185 2 460 2 345 2 658 2 464 2 660 4 556 2 810 2 233 2 234 2 982 4 1226 2 1149 6 474 2 856 4 792 4 1069 2 667 4 128 4 669 2 528 2 1113 4 910 2 1234 4 675 2 954 2 1165 2 
1052 2 1222 2 639 2 825 2 729 2 41 2 219 2 
490 2 736 2 200 2 825 2 330 2 8 2 
699 1 533 2 405 2 512 2 1169 2 897 2 613 1 944 2 876 2 749 2 984 2 191 1 593 10 312 2 616 2 645 2 1211 2 792 8 819 2 717 2 1311 2 719 2 722 1 400 1 1271 2 1221 2 
1082 2 345 6 797 2 407 2 660 4 234 6 875 6 683 4 95 2 982 16 1226 6 1041 2 593 6 120 2 1212 12 792 6 34 2 667 2 128 2 1090 4 690 6 1287 2 954 6 742 6 1185 2 1051 2 891 2 198 2 956 2 110 4 
856 2 289 2 554 2 241 2 566 2 227 3 362 2 1159 2 103 2 354 2 1234 2 1014 2 622 2 
856 2 289 2 554 2 241 2 792 1 264 1 566 2 227 6 362 2 1159 2 103 2 503 2 354 4 1234 2 1014 2 925 2 622 2 593 1 
856 2 289 4 554 2 241 2 566 2 227 6 362 2 1159 4 103 2 503 2 354 4 1234 2 1014 4 925 2 622 2 
856 2 289 8 554 2 241 2 792 1 264 1 566 2 227 10 362 2 1159 8 103 2 503 6 354 4 1234 2 1014 8 925 8 622 2 593 1 
406 26 90 4 1001 10 833 6 578 2 765 6 412 2 583 4 174 6 836 2 1176 4 1240 2 332 4 178 8 492 88 1242 4 593 150 416 16 839 58 772 6 596 28 1089 24 598 42 840 6 267 14 843 8 931 24 181 90 1183 6 693 24 19 34 778 6 932 6 109 18 1251 10 779 6 1253 11 511 36 112 8 351 8 940 6 706 90 942 6 27 8 514 18 1021 26 117 2 357 2 1108 12 190 10 520 24 31 42 119 6 714 22 126 2 792 134 1024 4 1027 58 283 2 720 4 366 2 37 4 1267 16 444 4 795 5 621 6 955 8 867 6 371 92 1035 2 796 10 627 4 1036 6 534 4 1274 4 42 4 799 50 1038 4 45 6 800 4 1280 14 638 124 1124 4 803 2 1042 248 641 6 879 4 295 2 1131 8 648 16 1214 10 888 4 807 12 1048 6 970 10 60 4 1217 4 305 2 461 24 809 6 1299 8 223 24 1300 16 1143 2 895 2 1225 6 558 2 158 8 236 2 310 6 1150 4 1153 8 988 6 565 1 670 10 672 10 989 2 398 17 1076 112 1316 2 481 8 1077 6 1080 2 567 84 995 4 915 4 678 4 677 4 
166 2 136 2 1 2 796 2 88 2 727 2 1036 2 728 2 90 2 1001 2 1205 2 578 2 489 2 1280 2 871 2 638 6 174 2 585 4 176 6 587 2 1042 45 492 20 178 6 593 46 416 4 839 3 967 2 928 2 12 2 338 2 884 2 596 38 1009 2 1089 2 648 4 1214 2 970 2 1093 2 267 2 843 2 383 2 1182 2 1248 2 654 2 602 2 778 2 932 2 305 2 1251 2 344 2 511 2 223 2 112 2 942 2 1256 2 514 2 428 2 158 2 1194 2 236 2 190 2 853 2 520 2 1109 2 711 4 790 2 1064 2 119 2 277 2 124 2 861 2 126 2 127 2 792 44 193 2 670 2 1027 3 672 2 1072 2 989 2 398 2 283 2 1076 20 481 2 1200 2 1267 4 285 4 795 2 621 4 955 2 866 4 678 2 
166 10 833 4 1001 4 578 2 765 4 5 4 583 4 174 4 836 2 1176 4 1240 2 492 36 178 6 1242 4 593 78 416 10 839 28 772 4 12 10 418 8 596 14 774 4 598 8 840 4 267 6 843 2 1182 2 1183 4 693 8 19 30 778 4 932 4 779 4 511 6 112 2 27 4 942 4 514 10 1108 14 190 4 1107 4 31 16 789 8 119 4 126 2 792 70 1027 30 283 2 1028 2 197 4 1267 10 444 4 621 2 1270 4 955 2 867 4 371 24 727 2 1036 4 728 10 534 4 42 4 799 8 1204 8 45 4 800 2 1280 6 871 2 638 24 1124 4 1042 104 648 10 1214 4 300 4 888 4 970 6 1048 4 61 16 1217 4 974 2 973 8 892 2 809 4 1299 4 1300 8 1225 4 236 2 814 4 310 4 1150 4 313 2 988 4 671 32 395 2 672 4 989 2 398 10 1076 44 1075 16 1316 2 480 2 481 2 1077 4 1080 2 567 24 995 4 915 4 
627 2 727 2 1036 4 534 2 1001 2 800 2 1205 2 578 2 1280 2 412 2 638 8 583 2 174 4 1042 40 178 4 492 14 593 28 295 2 416 6 839 12 596 14 648 6 1214 2 970 2 843 2 267 2 19 6 778 4 932 4 305 2 1253 2 511 2 1300 6 112 2 942 4 27 4 558 2 514 2 117 2 236 2 357 2 190 2 119 4 1153 2 714 10 126 2 792 26 1027 12 672 2 989 2 283 2 1076 14 398 2 481 2 37 2 1267 6 795 2 621 2 955 2 
170 2 

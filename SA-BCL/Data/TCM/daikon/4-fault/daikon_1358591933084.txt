#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V ERROR java.lang.ArrayIndexOutOfBoundsException 516 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 728 532 287 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 189 73 676 659 
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 189 247 73 676 659 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 189 189 189 189 73 676 659 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:eq(DD)Z
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:noDups([I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.Quant:subsetOf([D[F)Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaCharStream:BeginToken()C
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:gt(II)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsLTE([II)Z
daikon.Quant:lexGT([I[I)Z
daikon.Quant:setEqual([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:readChar()C
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:concat([I[I)[I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Ppt:Ppt()V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.ProglangType:isIntegral()Z
daikon.Quant:memberOf(F[F)Z
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.Quant:intersection([I[I)[I
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.Invariant:prob_and(DD)D
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:eltsGteIndex([I)Z
daikon.PptName:isEnterPoint()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.Quant:eltsLT([II)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:getConfidence()D
daikon.Quant:eltsGT([II)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.MathMDE:gcd_differences([I)I
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_16()Z
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
utilMDE.WeakHasherMap:processQueue()V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.Quant:lte(II)Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quant:lexGTE([I[I)Z
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.Debug:logOn()Z
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.ValueTuple:isMissing(I)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.Quant:gte(II)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String; | RETURN | 23802 | return null
daikon.Quant:eltsGTE([II)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I | CONSTANT | 14318 | 112 -> 0
daikon.test.InvariantFormatTester:execute()Z
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I | ASSIGN | 71159 | = null
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.Quant:subsetOf([J[J)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.ArraysMDE:sorted([I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:pow_fast(II)I
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.FuzzyFloat:gte(DD)Z
utilMDE.WeakHasherMap:size()I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:eltsEqualIndex([I)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:eltwiseLTE([I)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.PptSlice1:arity()I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.Invariant:logOn()Z
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.ProglangType:isScalar()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.Quant:eltsEqual([II)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.Quant:eq(FF)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:jj_ntk()I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ProglangType:isArray()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ModBitTracker:num_sets()I
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice2:arity()I
utilMDE.ArraysMDE:element_range([I)I
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.FuzzyFloat:lte(DD)Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE:max([I)I
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
daikon.Debug:logDetail()Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.Quant:isReverse([I[I)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.ValueTuple:size()I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.PptSlice0:initInvariantsSeen()V
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quant:memberOf(F[D)Z
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaCharStream:getEndLine()I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.PptSlice1:num_samples()I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.Intern:intern([J)[J
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Quant:eltsLtIndex([I)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.Quant:subsetOf([F[F)Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.Quant:union([I[I)[I
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I | CONSTANT | 18577 | 0 -> -1
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.ProglangType:elementType()Ldaikon.ProglangType;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.VarInfo:new_ppt()V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([D)[D
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:intern([I)[I
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.PptSlice0:arity()I
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaCharStream:getBeginLine()I
daikon.inv.Invariant:prob_or(DD)D
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltwiseGT([I)Z
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_samples()I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:ne(II)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.ProglangType:baseIsIntegral()Z
utilMDE.ArraysMDE:min([I)I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:gcd(JJ)J
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaCharStream:ReadByte()C
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.ModBitTracker:split(I)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.unary.scalar.LowerBound:enabled()Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName:hashCode()I
utilMDE.MathMDE:mod_positive(II)I
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:passes()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.Quant:eltsGtIndex([I)Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaCharStream:backup(I)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.Invariant:logDetail()Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.Quant:setDiff([I[I)[I
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:sameLength([I[I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.ProglangType:dimensions()I
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([I[I)Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.Quant:eq(II)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.Intern:numIntArrays()I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.SequenceAndIndices:hashCode()I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.MathMDE:gcd([I)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:slice([III)[I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
292 2 452 2 693 2 398 2 22 4 528 2 903 2 473 2 86 2 
735 6 750 2 171 2 760 2 8 6 274 2 63 2 193 2 323 2 342 2 87 6 
292 2 526 6 757 6 622 4 610 4 4 2 282 2 438 2 730 6 591 2 577 2 86 2 770 6 
292 6 544 16 545 6 751 2 517 8 379 2 639 16 860 4 670 8 328 2 840 8 219 10 86 6 303 2 863 8 448 4 360 12 784 2 56 29 476 6 708 4 94 10 654 10 61 16 394 4 711 10 687 26 146 2 435 10 68 2 
46 6 26 4 
707 2 
545 2 544 2 853 2 639 2 352 2 219 2 840 2 675 2 446 2 448 2 360 2 56 6 393 2 423 2 654 2 94 2 61 2 711 4 229 2 687 4 455 2 435 2 608 2 
89 6 360 5 544 8 56 15 411 2 832 6 654 4 94 4 394 2 61 8 110 2 639 8 687 12 322 4 435 4 219 4 474 4 
689 2 367 2 214 2 430 2 724 2 888 2 516 2 337 2 262 2 897 6 
375 2 313 2 243 2 11 2 355 2 118 2 364 2 707 2 710 2 605 2 
292 2 181 4 294 2 749 2 633 2 2 2 810 2 300 2 523 4 473 2 86 2 818 2 705 2 200 2 310 2 534 2 535 2 433 2 436 2 488 2 489 2 156 2 774 2 664 2 614 2 270 2 439 2 325 2 890 2 327 2 331 2 278 2 892 2 784 2 450 2 896 2 338 4 570 2 395 2 795 2 399 2 179 2 
292 4 544 32 545 4 185 6 131 2 547 6 314 4 832 6 517 6 754 6 639 32 322 4 219 16 328 2 840 18 86 4 474 4 89 6 448 2 864 2 360 22 500 6 56 54 476 4 654 16 94 16 684 2 61 32 28 2 502 8 711 6 899 4 687 48 230 4 478 2 715 4 97 2 435 16 541 4 
467 2 307 2 890 2 
404 2 151 2 183 2 487 2 361 2 3 2 463 22 437 2 242 10 731 2 381 2 351 2 300 2 434 2 
802 16 804 1 239 3 587 2 806 2 5 2 588 2 6 3 808 2 241 2 589 2 466 2 9 2 697 2 244 2 699 2 350 2 701 2 468 1 135 2 353 8 245 2 354 1 702 2 248 16 820 2 138 3 599 1 24 2 825 2 603 2 257 2 143 2 147 1 479 2 714 2 827 3 481 2 149 2 33 2 261 2 607 2 36 2 830 2 485 2 37 2 38 2 723 4 378 24 40 2 834 3 159 2 160 2 385 12 275 2 166 2 386 2 277 2 387 4 276 1 620 1 846 2 391 2 499 1 738 1 742 2 741 1 398 2 400 4 745 1 850 8 509 2 510 1 511 2 402 2 292 32 632 32 293 3 295 1 408 2 409 16 855 2 518 5 190 1 858 2 191 2 413 2 77 6 859 2 755 2 521 3 82 2 196 2 524 2 86 34 525 2 862 2 648 2 650 2 653 2 424 24 655 2 536 2 204 32 767 1 205 2 432 2 769 1 99 2 872 2 101 2 102 2 660 6 877 2 107 2 772 3 548 2 879 2 775 2 549 2 776 2 315 2 112 8 441 2 113 3 667 4 114 2 321 2 115 6 889 4 326 2 781 12 119 16 677 2 223 3 558 3 893 3 785 2 680 2 335 2 560 6 895 1 686 4 902 2 799 2 128 4 456 2 344 2 801 4 
555 2 
445 2 86 2 
126 2 833 2 86 4 
406 2 347 2 74 2 238 2 297 2 132 2 76 2 412 2 415 6 642 6 700 30 644 4 83 6 815 2 470 6 356 6 252 2 21 2 823 6 866 6 867 2 824 6 764 2 656 2 258 2 768 4 98 30 34 6 482 2 771 2 39 2 377 8 665 2 727 2 882 2 616 6 492 2 669 30 44 2 217 2 384 2 163 2 164 2 674 6 554 6 330 2 498 2 891 2 557 2 334 2 789 6 894 6 788 6 740 6 629 2 173 2 62 4 286 6 177 2 575 6 744 2 340 4 289 2 747 8 70 2 
20 2 822 2 195 1 848 2 
600 2 848 2 
388 2 104 2 661 2 890 2 
388 2 104 2 661 2 617 2 495 2 890 2 
661 2 708 2 890 2 227 2 809 2 848 2 
55 2 664 2 
661 2 708 2 890 2 907 2 
234 2 212 2 
272 2 65 2 
176 2 259 2 
91 2 85 2 
579 2 65 2 85 2 
148 2 65 2 85 2 
65 2 92 2 85 2 
236 2 65 2 85 2 
661 2 12 2 49 6 890 2 847 2 31 6 630 2 581 2 
713 2 621 2 
661 2 617 2 708 2 890 2 124 2 227 2 848 2 
93 2 227 2 848 2 
843 2 227 2 848 2 
447 2 822 2 621 2 
227 2 848 2 
401 2 621 2 
47 2 848 2 
192 2 822 2 621 2 
822 2 861 2 259 2 
822 2 85 2 543 2 
822 2 234 2 235 2 
551 2 822 2 65 2 
32 2 621 2 
288 2 848 2 
259 2 638 2 
359 2 85 2 
578 2 234 2 
65 2 226 2 
357 2 621 2 
169 2 65 2 
736 2 234 2 
553 2 85 2 
259 2 483 2 
192 2 822 2 621 2 121 2 
192 2 831 2 822 2 621 2 121 2 
389 2 822 2 621 2 
311 2 822 2 621 2 
803 2 407 2 233 2 249 2 
312 4 462 2 209 2 422 2 333 2 559 2 463 6 60 2 490 2 777 2 396 2 13 4 645 2 493 2 180 2 120 2 403 2 345 2 
203 2 822 2 
107 2 
583 2 587 2 808 2 241 2 589 2 465 2 244 2 701 2 135 2 353 2 246 2 703 2 140 2 143 2 147 4 479 2 714 2 481 2 153 4 830 2 485 2 37 2 723 4 376 2 611 2 267 2 836 2 42 2 382 2 275 2 385 8 166 2 387 2 276 2 844 4 391 6 398 2 506 2 400 4 509 2 511 1 402 2 852 2 292 26 632 6 295 2 408 2 855 2 77 2 191 2 858 2 82 2 86 26 865 2 536 2 204 4 205 2 101 2 102 2 660 2 548 2 879 2 776 1 315 2 321 2 115 6 117 2 889 2 119 6 781 8 326 2 560 5 686 4 232 2 799 4 128 4 456 2 801 2 
583 2 587 2 808 2 241 2 589 2 465 2 244 2 701 2 135 2 353 2 246 2 703 2 140 2 143 2 147 2 479 2 714 2 481 2 720 2 153 4 830 2 485 2 37 2 723 4 376 2 611 2 267 2 42 2 275 2 385 8 386 2 166 2 387 2 276 2 53 2 844 4 391 6 398 2 506 2 400 4 509 2 511 2 402 2 852 2 292 26 632 6 295 2 408 2 855 2 77 2 191 2 858 2 81 2 82 2 86 26 536 2 204 4 205 2 101 2 102 2 660 2 548 2 879 2 315 2 776 2 321 2 115 6 117 2 889 2 119 6 781 8 326 2 560 6 686 4 232 2 799 4 128 4 456 2 801 2 
420 2 
691 2 546 2 
292 6 72 2 348 2 408 2 808 2 298 2 8 6 134 2 244 2 813 4 592 2 193 4 14 4 302 10 86 12 87 6 756 2 596 4 428 2 537 2 714 2 481 2 719 2 828 2 542 8 263 2 103 2 152 2 484 2 206 2 155 2 548 2 157 2 881 2 315 2 835 2 550 4 115 4 220 2 51 2 390 4 735 6 170 2 280 2 171 4 561 2 624 2 794 2 627 2 283 2 284 8 686 2 63 2 901 4 67 2 342 2 128 2 905 2 291 2 71 2 
292 6 72 2 692 2 348 2 408 2 808 2 298 2 8 6 134 2 244 2 813 4 193 4 14 4 302 10 86 12 87 8 756 2 596 4 428 2 868 2 537 2 714 2 481 2 719 2 828 2 542 8 263 2 103 2 152 2 484 2 206 2 155 2 548 2 157 2 881 2 315 2 835 2 550 4 323 2 115 4 220 2 51 2 390 4 735 8 280 2 171 4 561 2 624 2 794 2 627 2 174 4 283 2 284 8 686 2 63 2 901 4 67 2 128 2 342 2 905 2 291 2 71 2 
152 2 72 2 484 2 596 4 155 2 171 2 561 2 881 2 428 2 283 2 8 2 901 2 193 2 14 4 291 2 828 2 71 2 87 2 
292 6 72 2 348 2 408 2 808 2 298 2 8 4 134 2 244 2 813 4 592 2 193 4 14 4 302 6 86 12 87 6 756 2 596 4 428 2 537 2 714 2 481 2 719 2 828 2 542 4 263 2 103 2 152 2 484 2 206 2 155 2 548 2 157 2 881 2 315 2 835 2 550 4 323 2 115 4 220 2 51 2 390 4 735 6 170 2 280 2 171 4 561 2 624 2 794 2 627 2 283 2 284 4 686 2 901 4 67 2 342 2 128 2 905 2 291 2 71 2 
292 6 72 2 348 2 408 2 808 2 298 2 8 6 134 2 244 2 813 4 592 2 193 4 14 4 302 6 86 12 87 4 756 2 596 4 760 2 428 2 537 2 714 2 481 2 719 2 828 2 542 4 263 2 103 2 152 2 484 2 206 2 155 2 548 2 157 2 881 2 315 2 835 2 550 4 115 4 220 2 51 2 390 4 735 6 170 2 280 2 171 4 561 2 624 2 794 2 627 2 283 2 284 4 686 2 901 4 67 2 342 2 128 2 905 2 291 2 71 2 
292 6 72 2 348 2 408 2 808 2 298 2 8 6 134 2 244 2 813 4 592 2 193 4 14 4 302 6 86 12 87 6 756 2 596 4 428 2 537 2 714 2 481 2 719 2 828 2 542 4 263 2 103 2 152 2 484 2 206 2 155 2 548 2 157 2 881 2 315 2 835 2 550 4 115 4 220 2 51 2 390 4 735 6 170 2 280 2 171 4 561 2 624 2 794 2 627 2 283 2 284 8 686 2 63 2 901 4 67 2 342 2 128 2 905 2 291 2 71 2 
292 6 72 2 348 2 408 2 808 2 298 2 8 8 134 2 244 2 813 4 592 2 193 4 14 4 302 10 86 12 87 6 756 2 596 4 760 2 428 2 537 2 714 2 481 2 719 2 828 2 542 8 263 2 103 2 152 2 484 2 206 2 155 2 548 2 157 2 881 2 315 2 835 2 550 4 115 4 220 2 51 2 390 4 735 8 170 2 280 2 171 4 561 2 624 2 794 2 627 2 283 2 284 8 686 2 63 2 901 4 67 2 342 2 128 2 905 2 291 2 71 2 
292 6 72 2 348 2 408 2 808 2 298 2 8 6 134 2 244 2 813 4 592 2 193 4 14 4 302 10 86 12 87 6 756 2 596 4 428 2 537 2 714 2 481 2 719 2 828 2 542 8 263 2 103 2 152 2 484 2 206 2 155 2 548 2 157 2 881 2 315 2 835 2 550 4 115 4 220 2 51 2 390 4 735 6 170 2 280 2 171 4 561 2 624 2 794 2 627 2 283 2 284 8 686 2 63 2 901 4 67 2 342 2 128 2 905 2 291 2 71 2 
0 1 241 12 694 6 8 8 244 2 10 1 701 2 14 4 472 6 703 2 709 2 27 2 256 1 477 2 29 2 479 2 714 2 716 6 481 2 719 2 718 2 263 2 484 2 723 4 491 1 494 1 275 2 48 2 51 2 735 12 280 2 283 2 284 2 507 1 67 2 509 2 511 2 746 2 291 2 71 2 292 24 72 2 77 2 298 4 80 1 82 2 84 2 302 2 86 46 756 2 87 4 304 2 88 6 305 6 760 4 761 2 763 6 536 2 537 2 540 2 101 2 102 2 103 2 105 2 548 2 315 2 776 2 111 6 550 4 321 2 115 6 781 4 119 6 555 6 782 2 123 4 560 6 561 2 790 7 792 2 794 2 569 2 572 2 797 2 574 7 126 6 341 2 128 4 342 4 801 2 582 6 584 2 348 2 808 2 589 2 349 2 134 2 813 8 135 2 353 2 816 2 596 4 358 4 598 2 141 6 143 2 370 2 828 2 372 2 152 2 155 2 376 4 157 4 835 2 380 10 383 6 385 4 162 2 839 8 387 2 390 6 844 4 391 6 170 2 171 4 624 2 627 2 398 2 400 4 852 2 632 8 184 2 408 2 855 2 858 2 193 4 647 2 649 1 427 2 428 2 202 6 431 2 204 2 657 1 660 2 206 2 879 2 211 6 881 2 440 2 884 6 668 2 445 6 444 2 889 2 220 2 686 4 901 4 232 2 905 2 
584 2 348 2 694 6 241 12 808 2 589 2 349 2 8 8 134 2 244 2 813 8 701 2 135 2 353 2 14 4 136 2 472 6 816 2 703 2 358 4 596 4 598 2 27 2 141 6 709 2 143 2 477 2 29 2 370 2 479 2 716 6 714 2 481 2 718 2 719 2 828 2 372 2 263 2 152 2 484 2 155 2 376 4 723 4 157 4 835 2 380 10 383 6 162 2 275 2 385 8 48 2 839 8 387 4 51 2 390 6 844 4 391 6 170 2 735 12 280 2 171 4 624 2 627 2 283 2 284 6 63 4 398 2 400 4 509 2 67 2 746 2 511 2 291 2 852 2 71 2 292 26 632 8 72 2 184 2 408 2 855 2 858 2 77 2 298 4 193 4 82 2 302 2 84 2 86 48 87 8 647 2 756 2 88 6 304 2 305 6 427 2 428 2 761 2 202 6 763 6 431 2 204 2 536 2 537 2 540 2 102 2 101 2 103 2 660 2 105 2 206 2 548 2 879 2 211 6 881 2 776 2 315 2 111 6 440 2 550 4 668 2 884 6 321 2 115 6 444 2 445 6 889 4 119 6 781 8 220 2 555 6 782 2 123 4 681 2 560 6 561 2 792 2 794 2 569 2 572 2 797 2 686 4 901 4 232 2 126 6 341 2 799 2 342 4 128 4 905 2 582 6 801 4 
584 2 348 2 694 6 241 12 808 2 589 2 349 2 8 8 134 2 244 2 813 8 701 2 135 2 353 2 14 4 136 2 472 6 816 2 703 2 358 4 596 4 598 2 27 2 141 6 709 2 143 2 477 2 29 2 370 2 479 2 716 6 714 2 481 2 718 2 719 2 828 2 372 2 263 2 152 2 484 2 155 2 376 4 723 4 157 4 835 2 380 10 383 6 162 2 275 2 385 8 48 2 839 8 387 4 51 2 390 6 844 4 391 6 170 2 735 12 280 2 171 4 624 2 627 2 283 2 284 6 63 4 398 2 400 4 509 2 67 2 746 2 511 2 291 2 852 2 71 2 292 26 632 8 72 2 184 2 408 2 855 2 858 2 77 2 298 4 193 4 82 2 84 2 302 6 86 48 87 8 647 2 756 2 88 6 304 2 305 6 427 2 428 2 761 2 202 6 763 6 431 2 204 2 536 2 537 2 540 2 102 2 542 4 101 2 103 2 660 2 105 2 206 2 548 2 879 2 211 6 881 2 776 2 315 2 111 6 440 2 550 4 668 2 884 6 321 2 115 6 444 2 445 6 889 4 119 6 781 8 220 2 555 6 782 2 123 4 681 2 560 6 561 2 792 2 794 2 569 2 572 2 797 2 686 4 901 4 232 2 126 6 341 2 799 2 342 4 128 4 905 2 582 6 801 4 
461 2 241 10 694 6 8 10 244 2 701 2 14 4 472 12 703 2 709 2 27 2 477 2 29 2 479 2 714 2 716 6 481 2 718 2 719 2 722 6 263 2 484 2 723 4 725 6 732 6 275 2 48 2 734 2 51 2 735 16 280 2 283 2 284 6 63 4 67 2 509 2 511 2 746 2 291 2 71 2 292 24 72 2 77 4 298 4 82 2 302 6 84 2 86 52 756 2 87 10 304 2 88 6 305 6 308 2 760 2 761 2 763 6 536 2 537 2 540 2 101 2 542 4 102 2 103 2 105 2 548 2 776 2 315 2 111 6 550 4 321 2 323 2 115 6 781 10 119 8 555 12 782 2 123 4 560 6 561 2 794 2 793 6 569 2 572 2 797 2 576 2 126 12 341 2 799 2 128 4 342 4 801 4 582 6 584 2 348 2 808 2 589 2 349 2 134 2 813 8 135 2 353 4 136 2 816 2 596 4 358 4 598 2 141 6 143 2 370 2 828 2 372 2 152 2 155 2 376 4 157 4 158 6 835 2 380 8 383 12 162 2 385 10 839 8 387 4 390 6 844 6 391 8 170 2 171 4 624 2 627 2 397 6 398 2 400 4 631 2 852 2 632 12 184 2 408 2 855 2 635 6 858 2 193 4 418 6 647 2 427 2 201 2 428 2 202 12 431 2 204 4 876 6 660 4 206 2 879 2 211 6 881 2 666 2 440 2 884 6 668 2 445 12 444 2 889 4 220 2 224 2 681 2 686 4 901 4 232 4 905 2 
103 2 72 2 484 2 206 2 155 2 348 2 881 2 835 2 8 6 550 2 813 2 193 4 14 2 302 4 220 2 86 4 51 2 87 6 390 2 596 2 170 2 735 4 280 2 171 4 624 2 283 2 284 6 63 2 67 2 719 2 342 2 542 4 828 2 263 2 71 2 
348 2 808 2 241 4 589 2 8 6 244 2 813 2 350 2 701 2 135 2 14 2 703 2 820 2 596 2 143 2 479 2 714 2 481 2 719 2 828 2 263 2 484 2 155 2 723 4 376 2 835 2 380 2 275 2 51 2 390 2 844 4 391 6 170 2 735 4 280 2 171 4 624 2 283 2 284 6 175 2 63 2 398 2 400 4 67 2 509 2 511 2 852 2 71 2 292 24 632 8 72 2 408 2 855 2 77 3 193 4 416 2 82 2 302 2 86 28 197 3 87 6 756 2 536 2 204 3 872 2 101 2 102 2 103 2 660 3 206 2 207 2 107 2 548 2 879 2 881 2 776 2 315 2 550 2 321 2 115 6 119 6 220 2 332 2 560 6 792 2 686 4 127 2 342 2 128 4 
206 2 652 2 835 2 
206 2 652 2 835 2 
584 2 808 2 241 4 589 2 349 2 8 12 134 2 244 2 813 4 701 2 135 2 14 2 703 2 251 2 358 2 596 2 143 2 477 2 147 2 371 2 479 2 714 2 481 2 828 4 373 2 484 2 723 4 376 6 157 4 267 4 613 2 835 6 380 2 161 2 385 4 387 4 390 4 167 2 391 2 735 16 737 4 171 4 624 2 627 2 628 2 283 2 284 6 63 4 398 2 400 4 509 2 67 2 511 2 291 2 852 2 292 16 632 2 186 4 408 2 855 2 858 4 298 2 641 2 193 4 82 2 302 6 86 24 87 12 306 2 421 2 652 2 759 2 760 4 428 2 869 2 536 2 204 2 96 2 101 2 102 2 542 4 206 4 548 2 879 2 211 2 315 2 776 2 550 2 321 2 323 4 115 6 780 2 552 2 889 4 781 4 119 2 123 2 678 2 560 6 563 2 686 4 901 4 128 4 342 4 905 2 801 4 
292 2 152 2 105 2 546 2 678 2 123 2 548 2 425 2 59 2 241 2 211 2 613 2 380 2 96 2 162 2 419 2 86 4 
584 2 808 2 241 2 589 2 349 2 8 12 134 2 244 2 813 4 701 2 135 2 14 2 703 2 251 2 358 2 596 2 143 2 477 2 479 2 714 2 481 2 828 4 373 2 484 2 723 4 376 6 157 4 267 4 613 2 835 6 733 2 385 4 387 4 390 4 167 2 391 2 735 16 737 4 171 4 624 2 627 2 628 2 283 2 284 6 63 4 398 2 400 4 509 2 67 2 511 2 291 2 852 2 292 16 632 2 186 4 408 2 855 2 858 4 298 4 641 4 193 4 82 2 302 6 86 24 87 12 306 2 421 2 652 2 759 2 760 4 531 2 428 2 536 2 204 4 96 2 101 2 102 2 542 4 206 4 106 2 548 2 879 2 211 2 315 2 776 2 550 2 321 2 323 4 115 6 552 2 889 4 781 4 119 2 678 2 560 6 682 2 563 2 794 2 573 2 686 4 901 4 128 4 342 4 905 2 801 4 
584 2 808 2 241 4 589 2 349 2 8 12 134 2 244 2 813 4 701 2 135 2 14 2 703 2 251 2 358 2 596 2 704 2 602 2 143 2 477 2 147 1 479 2 714 2 481 2 828 4 373 2 484 2 723 4 376 6 157 4 267 4 613 2 835 6 380 2 385 4 387 4 390 4 167 2 391 2 735 16 737 4 171 4 624 2 627 2 628 2 283 2 284 6 63 4 398 2 400 4 509 2 67 2 511 2 291 2 852 2 292 16 632 2 186 4 408 2 855 2 858 4 414 2 298 4 641 2 193 4 82 2 302 6 86 24 87 12 306 2 421 2 652 2 759 2 760 4 428 2 536 2 204 2 96 2 539 2 101 2 102 2 542 4 206 4 548 2 879 2 211 2 315 2 776 2 550 2 321 2 323 4 115 6 552 2 889 4 781 4 119 2 123 2 678 2 560 6 563 2 794 2 798 2 686 4 901 4 128 4 342 4 905 2 801 4 
808 2 241 2 589 2 244 2 701 2 135 2 353 2 471 2 816 2 703 2 598 2 139 2 709 2 255 2 143 2 369 2 479 2 714 2 481 2 486 2 723 4 376 2 832 4 271 2 728 2 45 2 385 2 275 2 844 4 623 2 391 6 56 5 739 2 625 1 172 2 61 2 503 2 285 2 398 2 506 2 400 4 66 2 509 2 287 2 511 2 746 2 292 20 632 8 634 2 408 2 188 2 410 6 189 2 855 2 857 2 77 2 639 2 82 2 86 26 527 2 651 2 758 2 654 2 94 2 532 2 870 2 762 2 431 2 536 2 204 2 871 2 435 2 540 2 101 2 102 2 875 2 660 2 208 2 544 2 548 2 879 2 108 2 776 2 315 2 317 2 885 2 321 2 322 2 115 6 781 2 219 2 119 6 222 2 122 2 560 8 787 2 564 4 568 2 569 2 228 2 687 4 686 4 232 2 128 4 343 2 129 2 
292 2 660 3 632 2 346 3 187 2 77 3 78 2 779 2 275 2 119 2 86 2 497 4 844 2 845 2 391 2 821 2 529 2 565 2 309 2 144 2 142 2 145 2 204 3 232 6 
292 2 660 2 632 2 346 2 187 2 77 2 78 2 779 2 275 2 119 2 86 2 497 4 844 2 845 2 391 2 821 2 529 2 565 2 309 2 144 2 142 2 145 2 204 2 232 6 
292 2 660 2 632 2 346 2 187 2 77 2 78 2 779 2 275 2 119 2 86 2 497 4 844 2 845 2 391 2 821 2 529 2 565 2 309 2 144 2 142 2 145 2 204 2 232 6 
292 4 632 2 182 2 460 2 130 2 585 3 409 2 517 4 78 2 639 2 814 2 248 2 86 10 476 2 25 3 530 2 94 2 654 2 533 4 204 3 766 4 435 2 873 2 660 3 609 2 544 2 265 2 213 4 778 2 216 2 275 2 838 4 672 6 219 2 52 2 842 3 56 4 61 2 687 4 125 4 
292 4 632 2 182 2 460 2 130 2 585 2 409 2 517 4 78 2 639 2 814 2 248 2 86 10 360 2 476 2 25 2 530 2 94 2 654 2 533 4 204 2 766 4 435 2 873 2 660 2 609 2 544 2 265 2 213 4 778 2 216 2 275 2 838 4 672 6 840 2 328 2 219 2 52 2 842 2 56 4 61 2 687 4 125 4 
292 4 632 2 182 2 460 2 130 2 585 2 409 2 517 4 78 2 639 2 814 2 248 2 86 10 360 2 476 2 25 2 530 2 94 2 654 2 533 4 204 2 766 4 435 2 873 2 660 2 609 2 544 2 265 2 213 4 778 2 216 2 275 2 838 4 672 6 840 2 328 2 219 2 52 2 842 2 56 4 61 2 687 4 125 4 
292 4 632 2 182 2 460 2 130 2 585 2 409 2 517 4 78 2 639 2 814 2 248 2 86 10 360 2 476 2 25 2 530 2 94 2 654 2 533 4 204 2 766 4 435 2 873 2 660 2 609 2 544 2 265 2 213 4 778 2 216 2 275 2 838 4 672 6 840 2 328 2 219 2 52 2 842 2 56 4 61 2 687 4 125 4 
292 4 632 2 182 2 460 2 130 2 585 2 409 2 517 4 78 2 639 2 814 2 248 2 86 10 360 4 476 2 25 2 530 2 94 2 654 2 533 4 204 2 766 4 435 2 873 2 660 2 609 2 544 2 265 2 213 4 778 2 216 2 275 2 838 4 672 6 840 4 328 4 219 2 52 2 842 2 56 4 61 2 687 4 125 4 
374 2 506 2 805 2 299 2 339 2 593 2 318 2 
475 2 168 2 339 2 260 2 683 2 512 2 
689 1 292 8 586 2 240 1 808 2 636 2 811 2 43 2 383 2 417 2 520 1 86 10 250 2 362 2 279 1 706 2 337 1 601 2 365 2 254 2 626 2 765 2 454 2 800 2 290 2 457 2 
292 6 486 2 488 2 544 6 2 2 547 4 832 4 517 4 639 6 643 2 79 2 322 2 471 2 619 2 219 6 840 3 328 2 86 6 360 5 56 15 739 2 476 2 94 6 654 6 61 6 502 2 28 1 899 2 687 12 606 2 435 6 
292 1 405 2 1 2 253 6 786 2 753 2 856 2 316 2 109 2 213 2 125 2 30 4 849 2 838 2 673 2 86 1 906 1 841 2 
405 2 1 2 253 6 786 2 753 2 856 4 316 4 109 2 213 2 125 2 30 4 849 2 838 2 673 4 841 2 
292 1 405 2 1 2 253 10 786 2 753 6 856 8 316 8 109 2 213 2 125 2 30 4 849 8 838 2 673 8 86 1 906 1 841 2 
405 2 1 2 253 2 786 2 856 2 316 2 109 2 213 2 125 2 30 2 838 2 673 2 841 2 
292 6 73 2 189 2 589 2 86 6 826 2 479 2 101 2 659 2 723 2 271 2 776 2 781 2 676 2 392 1 560 6 791 2 567 1 400 2 511 2 
292 44 73 2 690 2 296 2 75 2 515 2 807 2 752 2 854 2 589 2 695 6 637 2 640 4 812 2 469 2 522 2 15 2 594 2 17 2 595 2 817 2 86 46 819 2 18 2 646 2 90 2 597 2 137 2 198 2 426 2 199 4 368 2 712 2 604 2 826 2 95 2 147 2 538 2 479 2 480 2 100 4 658 2 721 2 101 2 659 2 829 2 662 2 723 20 773 2 663 4 612 2 210 2 880 2 269 2 268 2 729 2 41 2 319 6 215 2 320 4 887 2 671 2 165 2 781 38 496 2 329 2 50 2 676 2 556 2 54 2 783 4 57 2 336 2 281 4 560 42 225 2 567 2 898 2 504 2 900 2 796 2 453 2 231 2 505 6 400 20 580 2 508 2 904 2 513 4 69 2 
459 2 237 2 133 2 464 2 695 10 589 4 590 2 696 2 698 2 15 6 16 2 247 2 17 2 19 2 363 4 23 2 366 2 712 6 826 2 479 2 480 2 717 2 150 6 35 2 264 2 829 2 154 6 723 20 726 8 269 6 271 2 615 2 41 2 273 2 165 2 618 2 58 2 501 2 400 18 743 2 178 2 511 4 69 2 292 40 73 2 748 2 514 8 189 2 640 4 519 2 522 6 301 2 86 44 90 2 199 4 429 8 538 2 101 4 659 2 662 4 878 2 663 4 776 4 442 2 886 2 320 2 116 2 781 14 676 2 221 2 679 2 560 40 225 2 567 6 566 2 449 2 451 2 685 2 571 2 900 4 453 2 688 2 458 2 
292 20 73 2 296 2 854 2 589 2 695 6 189 8 7 2 640 4 812 2 522 2 17 2 86 22 595 2 199 4 826 2 147 2 538 2 479 2 480 2 874 2 101 2 659 2 662 2 723 10 663 4 271 2 776 6 41 2 320 2 165 2 781 12 329 2 676 2 54 2 560 34 562 2 225 2 791 2 567 2 449 2 796 2 900 2 453 2 64 2 505 2 400 10 580 2 511 6 851 2 69 2 
194 2 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 
837 1 218 1 443 1 324 1 266 1 883 1 

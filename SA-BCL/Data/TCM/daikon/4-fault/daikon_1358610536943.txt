#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V ERROR utilMDE.Options$ArgException 1867 
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V ERROR java.lang.NullPointerException (376,1763) (376,1763) 
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V FAILED junit.framework.AssertionFailedError 558 1901 
daikon.test.VarInfoNameTest:testSubscript()V FAILED junit.framework.AssertionFailedError 558 1901 
daikon.test.VarInfoNameTest:testParse()V FAILED junit.framework.AssertionFailedError 558 1901 
daikon.test.VarInfoNameTest:testJML()V FAILED junit.framework.AssertionFailedError 558 1901 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:BeginToken()C
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfo:new_ppt()V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_107()Z
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_5()Z
daikon.inv.binary.twoSequence.Reverse:enabled()Z
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_126()Z
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_25(I)Z
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.FormatTestCase:passes()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.Quant:concat([I[I)[I
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.VarInfo:isIOAArray()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3_17()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([D[F)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.test.InvariantFormatTester:execute()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.JavaParser:jj_3_35()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.ProglangType:isArray()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_119()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.MathMDE:pow(II)I
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_163()Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:eq(DD)Z
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.Quant:isReverse([I[I)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
jtb.JavaParser:jj_3R_100()Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.WeakHasherMap:processQueue()V
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:sum([[I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:memberOf(F[D)Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:getConfidence()D
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_19()Z
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.Quant:eq(FF)Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
jtb.JavaCharStream:ReadByte()C
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_56()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:intersection([I[I)[I
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:jj_2_18(I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.Quant:eltsLTE([II)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.NodeListOptional:present()Z
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.ProglangType:baseIsString()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariants:Invariants()V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:gt(DD)Z
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3_20()Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.WeakHasherMap:size()I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:lexGTE([I[I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.PptName:isEnterPoint()Z
daikon.Quant:eltsLtIndex([I)Z
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.ModBitTracker:split(I)I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_116()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.Quant:eltwiseLTE([I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_2_10(I)Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I | ASSIGN | 183876 | = null
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.Invariant:logOn()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_80()Z
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.JavaCharStream:backup(I)V
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.Quant:eq(DD)Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.PptSlice0:initInvariantsSeen()V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.PptSlice1:num_samples()I
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:setEqual([I[I)Z
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:enabled()Z
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
jtb.visitor.FormatCommand:getCommand()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.ProglangType:baseIsFloat()Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.Quant:lt(II)Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.FuzzyFloat:FuzzyFloat(D)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:numSpecials()I
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_210()Z
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltwiseLT([I)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.SimpleLog:SimpleLog(Z)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_50()Z
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsGtIndex([I)Z
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:present()Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:updateResults()V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
utilMDE.FuzzyFloat:lt(DD)Z
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V | CONDITION | 3675 | if (x) -> if (!x)
daikon.PptSlice3:arity()I
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptName:PptName(Ljava.lang.String;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.ProglangType:isString()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
utilMDE.MathMDE:missing_numbers([I)[I
jtb.visitor.FormatCommand:getNumCommands()I
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_149()Z
daikon.Quant:lte(II)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
utilMDE.ArraysMDE:sum([D)D
daikon.Quant:eltsLteIndex([I)Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.ValueSet:ValueSet(I)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_123()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:has_typeof()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern([D)[D
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.ArraysMDE:subarray([III)[I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_3_27()Z
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
jtb.JavaParser:jj_3R_106()Z
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.Quant:lexGT([I[I)Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.Invariant:is_false()Z
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3_4()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:logOn()Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.Ppt:Ppt()V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
jtb.JavaParser:jj_3_12()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.ArraysMDE:indexOf([JJ)I
jtb.JavaParser:jj_3R_77()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:gte(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_137()Z
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.Quant:slice([III)[I
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_ntk()I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE:gcd([I)I
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.JavaCharStream:getEndLine()I
jtb.JavaParser:jj_3R_103()Z
daikon.PptSlice1:arity()I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.ModBitTracker:num_vars()I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_88()Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(I[I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_180()Z
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:gcd(II)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.Assert:assertTrue(Z)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_169()Z
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
jtb.JavaParser:jj_3R_135()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.diff.RootNode:RootNode()V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:jj_3R_99()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:subsetOf([D[D)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_74()Z
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:base()Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_3()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3_25()Z
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.Quant:setDiff([I[I)[I
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_164()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:hasTypeOf()Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:isPseudoArray()Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaParser:jj_3R_49()Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_69()Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.ModBitTracker:ModBitTracker(I)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.PptName:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_98()Z
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sum([I)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_89()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ProglangType:isScalar()Z
jtb.JavaParser:jj_3_10()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_14(I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.Quant:pairwiseDivides([I[I)Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.PptSlice2:arity()I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_63()Z
daikon.ProglangType:dimensions()I
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.ValueTuple:size()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:mod_positive(II)I
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_148()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_68()Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:internSubsequence([III)[I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.Quant:eltwiseGT([I)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_28()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:subsetOf([J[J)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_51()Z
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:Node()V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_2_16(I)Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexEqual([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.ProglangType:isFloat()Z
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_85()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_108()Z
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([S[S)Z
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.Debug:logDetail()Z
jtb.JavaParser:jj_3R_81()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_115()Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParser:jj_2_3(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_3R_62()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_86()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:relate_var()V
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_87()Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.Quant:memberOf(S[S)Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.Quant:noDups([I)Z
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:hashCode()I
jtb.JavaParser:jj_3R_136()Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.ModBitTracker:num_samples()I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_105()Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParser:jj_3_36()Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfo:isDerived()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:readChar()C
jtb.JavaParser:jj_3R_73()Z
daikon.Quant:union([I[I)[I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.inv.Invariant:justified()Z
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGT([II)Z
utilMDE.MathMDE:sign(I)I
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_70()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.ModBitTracker:num_sets()I
jtb.JavaParser:jj_3_18()Z
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.ArraysMDE:element_range([I)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfo:isPointer()Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.JavaCharStream:getBeginLine()I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:jj_3R_122()Z
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.PptName:getSignature()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.diff.InvMap:InvMap()V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_104()Z
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_1()Z
utilMDE.MathMDE:mod_positive(JJ)J
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:jj_3_13()Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptSlice0:arity()I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.JavaParser:jj_3R_48()Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.Intern:numIntArrays()I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.PptName:isCombinedExitPoint()Z
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
utilMDE.MathMDE:modulus([I)[I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.Quant:gt(II)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_2_12(I)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_15()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
jtb.JavaParser:jj_3R_53()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfo:isPrestate()Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:min([I)I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:eltsEqualIndex([I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_22()Z
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceString.MemberString:enabled()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.Invariant:logDetail()Z
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.JavaCharStream:FillBuff()V
daikon.Quant:ne(II)Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.JavaParser:jj_3R_72()Z
utilMDE.MathMDE:gcd(JJ)J
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.JavaParser:jj_3R_117()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
jtb.JavaParser:jj_3R_97()Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.inv.unary.string.OneOfString:is_type()Z
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE:indexOf([II)I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
utilMDE.Intern:intern([J)[J
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_102()Z
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:jj_3R_110()Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isIntegral()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options.ArgException:ArgException(Ljava.lang.String;)V
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_101()Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.VarInfo:isIOASet()Z
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:jj_3R_54()Z
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3_29()Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_109()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_55()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_60()Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:jj_2_5(I)Z
daikon.Quant:sameLength([I[I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_35(I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.Quant:eltwiseEqual([I)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:pow_fast(II)I
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
daikon.Quant:lexLT([I[I)Z
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String; | CONSTANT | 14703 | 0 -> 1
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:intern([I)[I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
jtb.JavaParser:jj_3R_118()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
866 2 421 2 784 2 1142 4 1601 2 1709 2 378 2 309 2 162 2 
413 2 1523 2 1716 2 757 2 1327 6 37 6 9 2 1887 2 1909 6 1609 2 242 2 
866 2 1478 6 1322 6 674 6 872 2 1423 2 139 2 816 2 421 2 1047 4 374 2 109 6 864 4 
337 10 339 2 1102 12 1906 4 256 10 153 10 1796 4 710 2 1234 2 1885 6 683 10 1546 16 997 2 1272 2 650 4 628 8 866 6 1577 4 1708 6 1148 2 441 16 968 8 1155 8 275 28 328 26 844 8 421 6 1841 2 1221 10 1162 16 
1156 4 598 6 
414 2 
1693 2 643 2 1565 2 1077 2 1267 2 1517 2 378 2 1704 4 1830 2 1209 2 1467 2 1468 2 1030 2 1836 2 1411 4 1284 2 658 2 1094 2 610 2 26 2 790 2 30 2 339 2 1419 2 1850 2 1110 2 1664 2 564 2 157 2 1364 2 1366 4 38 2 164 2 866 4 1430 2 1433 4 300 2 168 2 1008 2 936 2 522 2 1059 2 421 4 359 2 
337 15 1102 22 256 15 910 2 153 15 478 2 1113 6 1740 6 1885 4 1428 3 645 4 1886 4 683 15 1546 32 1272 2 1465 4 1671 4 1081 5 628 6 866 4 1577 2 541 2 1708 4 1248 6 1055 2 441 32 275 52 1155 19 328 47 1032 4 1313 4 1870 6 421 4 1783 6 1871 2 305 8 1221 6 1162 32 1130 4 
1267 2 792 2 1754 2 
556 2 1028 2 136 22 151 2 1008 2 289 2 1171 2 481 2 330 2 1427 10 77 2 1097 2 241 2 1289 2 
337 2 1292 2 1480 2 1102 2 1326 2 256 2 1627 2 153 2 315 2 1514 2 1885 2 683 2 1546 2 1495 2 1577 2 68 2 441 2 1155 2 275 6 1009 2 328 4 1221 4 1162 2 
337 4 1102 4 256 4 441 8 153 4 275 16 1796 2 328 12 1032 4 106 2 1113 6 1783 6 683 4 317 2 1546 8 1130 4 1162 8 
1657 2 115 4 362 2 1603 4 792 2 953 2 254 2 980 4 889 2 859 10 1765 2 1882 2 890 10 564 2 1854 2 1267 8 1491 2 1519 2 649 2 1334 4 97 2 229 4 1400 2 39 4 1430 4 922 4 1087 14 1433 4 1149 2 633 4 71 2 1056 4 1754 6 1755 2 446 4 582 2 818 2 975 2 663 62 52 4 
1904 2 79 2 1760 2 1867 2 263 2 521 2 414 2 681 2 266 2 1128 2 191 2 
244 1 114 2 366 2 707 2 367 1 255 2 826 2 4 2 122 2 370 3 261 4 371 3 476 2 7 2 1460 2 1078 24 1461 2 712 2 960 3 1572 2 1574 2 1083 2 715 2 717 6 1834 2 1084 2 965 2 836 2 837 2 1709 2 1091 12 272 4 1837 2 1471 2 1838 2 1585 2 1587 3 1592 2 1095 2 971 3 1218 1 972 3 612 2 1348 32 402 2 1222 3 978 1 1479 8 1846 16 1600 5 32 2 617 2 742 2 1358 2 622 2 995 2 1856 1 1492 4 294 2 627 1 866 32 513 2 630 2 1118 2 1611 3 1747 16 298 2 167 2 1006 2 1246 2 751 2 636 2 520 2 303 2 1378 2 421 34 1506 1 1619 2 1012 1 175 3 1508 2 1509 2 1384 2 426 2 1261 2 181 3 766 2 1390 2 1626 1 1266 3 316 2 1018 2 1634 2 65 3 66 1 1025 16 896 2 898 1 1403 2 1522 1 197 8 321 1 1278 2 1154 1 1412 4 551 2 1158 6 1037 2 335 2 1293 1 1042 2 909 2 1043 2 84 16 912 2 85 2 1539 2 675 2 1541 2 562 2 680 32 94 1 916 12 1545 2 570 2 917 2 228 2 802 2 1302 4 1431 4 99 2 1307 4 1308 2 927 24 692 6 1922 2 577 2 934 4 1441 2 813 2 1802 1 1926 2 1684 2 1312 8 463 2 1807 2 1688 2 1066 2 942 6 
421 2 395 2 
262 2 133 2 421 4 
1586 2 
469 6 1450 6 948 6 1453 4 951 192 1454 30 2 198 472 2 1455 2 475 4 477 20 955 6 479 2 956 24 8 6 483 2 1462 4 1463 6 487 4 961 2 12 2 962 290 964 2 16 2 966 4 21 2 495 94 1475 2 23 2 1477 64 24 2 25 2 976 2 27 6 497 28 29 6 981 12 983 4 503 98 501 12 985 2 504 198 986 20 1486 4 989 74 994 182 509 2 507 14 1493 2 1002 4 1501 6 1499 4 1005 2 1503 6 42 16 43 2 1505 60 46 2 524 2 1507 4 1015 2 53 2 54 2 525 6 527 4 56 2 58 8 1512 4 1515 4 536 224 1026 14 537 2 1521 6 67 2 538 6 543 2 1526 2 544 386 546 8 552 106 1034 2 75 2 1035 2 553 2 1534 6 78 2 1038 4 1041 2 81 2 1536 26 557 4 1538 2 560 26 1044 12 561 4 1540 12 86 6 89 4 88 4 562 2 90 30 1543 6 1542 2 563 2 1544 20 93 2 567 2 95 46 568 6 1046 46 1547 6 1549 14 575 2 574 2 1551 4 576 2 578 2 104 8 1061 6 108 14 1063 8 1064 82 581 2 1557 6 1558 4 110 8 1068 4 1560 2 583 4 1070 2 1072 2 1073 20 119 12 121 4 120 160 589 2 591 6 1567 10 1076 30 126 6 127 204 1570 60 128 4 129 4 595 4 596 112 597 20 132 2 1085 6 605 14 137 28 140 64 1591 14 1593 2 1594 2 146 2 615 6 1107 28 1604 2 618 4 152 2 621 4 623 30 1115 26 1116 2 624 328 1608 6 160 2 163 4 629 2 1119 6 1613 6 634 86 169 50 1123 26 173 2 174 2 1124 2 1622 2 1629 12 1630 2 1140 2 188 92 1636 2 647 8 1637 2 1638 2 648 6 1146 6 196 6 1641 4 1642 192 652 4 1644 4 1147 6 653 2 1151 2 654 2 201 2 655 8 1647 2 659 4 1157 328 204 6 660 118 661 4 206 2 1159 2 662 8 666 4 1165 2 1658 46 1660 112 667 2 1166 2 669 2 213 432 1167 22 217 4 1169 2 1170 12 1665 2 221 10 224 2 1668 30 225 2 226 4 227 198 1670 2 688 2 689 2 1174 2 1673 2 1674 140 1179 4 691 2 233 4 694 18 1681 198 1683 566 236 12 696 66 1185 2 1186 4 243 6 1691 26 705 2 1187 6 245 28 246 336 1692 2 708 2 258 2 1694 4 1695 6 1193 4 1194 2 260 2 1197 6 1698 4 1198 26 1702 18 1202 4 1203 6 1206 2 1207 132 1706 2 721 2 1211 4 722 16 724 32 274 2 1214 2 1712 2 725 2 1714 204 1216 6 728 2 729 22 281 22 732 2 282 6 1721 2 1725 2 1224 70 736 2 1226 4 1730 22 1733 112 740 2 1229 2 1230 2 1734 4 1737 8 743 20 288 6 290 30 1238 88 1241 182 748 52 1245 2 299 244 1247 2 1751 4 301 2 753 2 1249 16 1250 2 304 6 1251 244 310 2 1758 8 312 4 1265 6 1264 2 313 4 314 4 1767 2 770 68 1270 6 1269 2 771 4 773 2 1273 2 775 2 1774 4 320 20 778 2 1274 10 1778 2 1275 46 779 6 780 6 781 112 324 2 1283 4 331 2 333 8 1785 46 1287 26 1788 4 1787 2 788 10 791 4 1791 4 338 30 795 2 1297 4 343 2 347 8 799 2 803 244 1798 2 1301 2 1303 2 1304 2 1800 2 810 14 351 4 1310 12 1801 2 1803 4 1314 6 1805 54 356 8 1808 2 817 2 1315 4 1811 4 1812 30 1813 2 360 8 1815 106 1321 2 1323 12 1325 6 364 6 1818 2 368 6 1328 16 827 4 1329 6 1823 2 1824 30 1332 48 380 4 1828 28 1829 2 1831 2 1832 2 834 26 382 2 1833 2 835 6 1337 2 1338 12 1835 2 838 198 1340 2 841 2 839 2 392 2 1342 10 846 2 396 228 1343 84 1344 6 1345 26 1840 6 1346 2 400 2 401 6 851 2 1842 2 1351 432 852 4 1352 2 855 6 409 60 410 2 1853 132 1855 48 862 6 863 6 865 18 866 10 867 10 1370 2 1372 2 1375 8 1866 6 418 4 1868 2 420 2 421 10 875 2 876 2 1383 4 877 2 880 4 423 2 881 6 882 6 1387 2 1389 2 888 8 1392 2 1394 4 1883 26 892 4 1888 2 1398 2 1889 6 434 198 1401 8 1405 2 439 2 1407 4 900 2 1409 4 442 6 443 2 1895 6 902 2 903 198 1900 6 905 2 906 2 1417 8 1905 26 1907 2 1418 2 1420 2 1911 4 451 30 914 2 1915 4 1425 2 1429 2 1918 6 925 6 924 2 1437 2 930 2 1438 198 458 6 1924 2 932 2 460 2 1925 376 461 2 938 4 1928 60 1446 2 1447 12 943 20 1933 24 945 6 1934 30 
1814 2 761 2 456 2 1617 1 
761 2 486 2 
220 2 1267 2 761 2 848 2 280 2 931 2 650 2 
761 2 848 2 406 2 
761 2 848 2 1341 2 
1814 2 1661 2 143 2 
761 2 848 2 
1661 2 1215 2 
1589 2 761 2 
1814 2 1661 2 716 2 
1814 2 747 2 741 2 
1814 2 1769 2 1525 2 
1814 2 671 2 606 2 
1814 2 894 2 459 2 
1661 2 1849 2 
761 2 1711 2 
747 2 516 2 
1525 2 358 2 
606 2 1163 2 
277 2 459 2 
1661 2 1618 2 
215 2 459 2 
533 2 606 2 
1525 2 611 2 
747 2 323 2 
1814 2 1661 2 1190 2 716 2 
1814 2 1132 2 1661 2 1190 2 716 2 
1814 2 1661 2 1048 2 
1814 2 1661 2 699 2 
430 2 223 2 849 2 703 2 
1051 2 908 2 1175 4 1134 2 777 2 251 2 1053 2 136 6 619 2 901 2 172 2 74 2 205 2 727 2 399 4 1237 2 1724 2 1288 2 
1814 2 1196 2 
1058 2 1661 2 
1267 2 808 2 36 2 931 2 
1267 2 808 2 1353 2 36 2 280 2 931 2 
1267 2 761 2 848 2 940 2 931 2 650 2 
1094 2 1290 2 
1267 2 931 2 768 2 650 2 
606 2 1399 2 
459 2 1281 2 
747 2 879 2 
232 2 1525 2 
1861 2 1525 2 459 2 
1525 2 208 2 459 2 
698 2 1525 2 459 2 
319 2 1525 2 459 2 
1763 2 931 2 1410 2 1267 2 376 6 14 2 
837 2 
244 4 707 2 367 2 826 2 4 2 122 2 261 4 476 2 1461 2 712 2 1083 2 717 6 836 2 1084 2 1709 2 1091 8 272 2 840 2 1471 2 612 2 1348 6 402 2 1479 2 617 2 1358 2 1231 2 995 2 1240 2 161 2 866 26 630 2 1747 6 167 2 636 2 303 2 302 2 421 26 1619 2 759 2 424 2 1509 2 640 2 644 4 1018 2 1268 2 62 2 321 2 542 2 440 4 1278 2 1412 4 1413 2 445 2 1158 4 335 4 1043 6 562 2 1541 2 680 4 916 8 1545 2 1173 2 1302 4 1431 4 1307 2 692 2 1922 2 934 2 1441 2 813 2 1926 2 814 2 1684 2 463 2 942 2 1449 2 
244 1 707 2 367 2 255 2 826 2 4 2 122 2 261 4 476 2 1461 2 712 2 1083 2 717 6 836 2 1084 2 1709 2 1091 8 272 2 840 2 1471 2 1095 2 612 2 1348 6 402 2 1479 2 617 2 1358 2 1231 2 995 2 1240 2 161 2 866 26 630 2 1747 6 167 2 636 2 303 2 302 2 421 26 1619 2 759 2 424 2 1509 2 644 4 1018 2 1633 2 1268 2 62 2 1404 2 321 2 542 2 440 4 1278 2 1412 4 445 2 1158 6 335 4 1043 6 675 2 562 2 1541 2 680 4 916 8 1545 2 1302 4 1431 4 1307 2 692 2 1922 2 934 2 1182 2 1441 2 813 2 1926 2 814 2 1684 2 463 2 942 2 1449 2 
822 2 701 2 
96 2 
1762 4 950 4 642 2 886 2 1327 6 1136 2 887 4 526 2 1879 2 1192 2 261 2 124 2 476 2 1516 2 1887 2 1573 2 714 2 1083 2 1335 2 717 4 1523 4 322 2 1893 2 783 2 1471 2 1033 2 398 4 730 2 731 2 612 2 1902 2 448 2 1659 2 1483 2 1908 2 1106 2 1909 6 984 2 562 2 676 10 1487 2 413 2 159 2 37 6 995 2 686 8 1369 2 866 6 1431 2 868 4 1864 2 1685 2 937 2 421 12 756 2 1930 2 240 8 1184 4 1509 2 242 4 
1762 4 950 4 642 2 886 2 1327 8 1136 2 887 4 526 2 1879 2 1192 2 261 2 124 2 476 2 1568 4 1887 2 9 2 1573 2 714 2 1083 2 1335 2 717 4 1523 4 1893 2 783 2 1471 2 1033 2 398 4 730 2 731 2 612 2 1036 2 1902 2 448 2 1659 2 1483 2 1908 2 1106 2 1909 8 984 2 412 2 562 2 676 10 1487 2 413 2 159 2 37 6 995 2 686 8 1369 2 866 6 1431 2 868 4 1864 2 1685 2 937 2 421 12 756 2 1930 2 240 8 1184 4 1509 2 242 4 
1523 2 642 2 1327 2 1483 2 887 4 1908 2 526 2 937 2 1487 2 1033 2 398 2 756 2 159 2 37 2 1184 4 1573 2 1369 2 242 2 
1762 4 950 4 642 2 886 2 1327 6 1136 2 887 4 526 2 1879 2 1192 2 261 2 124 2 476 2 1516 2 1887 2 9 2 1573 2 714 2 1083 2 1335 2 717 4 1523 4 322 2 1893 2 783 2 1471 2 1033 2 398 4 730 2 731 2 612 2 1902 2 448 2 1659 2 1483 2 1908 2 1106 2 1909 6 984 2 562 2 676 6 1487 2 159 2 37 4 995 2 686 4 1369 2 866 6 1431 2 868 4 1864 2 1685 2 937 2 421 12 756 2 1930 2 240 4 1184 4 1509 2 242 4 
1762 4 950 4 642 2 886 2 1327 4 1136 2 887 4 526 2 1879 2 1192 2 261 2 124 2 476 2 1516 2 1887 2 1573 2 714 2 1083 2 1335 2 717 4 1523 4 322 2 1893 2 783 2 1471 2 1033 2 398 4 730 2 731 2 612 2 1902 2 448 2 1659 2 1483 2 1908 2 1106 2 1909 6 984 2 562 2 676 6 1487 2 159 2 37 6 995 2 686 4 1369 2 866 6 1431 2 868 4 1864 2 1685 2 937 2 421 12 756 2 757 2 1930 2 240 4 1184 4 1509 2 242 4 
1762 4 950 4 642 2 886 2 1327 6 1136 2 887 4 526 2 1879 2 1192 2 261 2 124 2 476 2 1516 2 1887 2 1573 2 714 2 1083 2 1335 2 717 4 1523 4 322 2 1893 2 783 2 1471 2 1033 2 398 4 730 2 731 2 612 2 1902 2 448 2 1659 2 1483 2 1908 2 1106 2 1909 6 984 2 562 2 676 6 1487 2 413 2 159 2 37 6 995 2 686 4 1369 2 866 6 1431 2 868 4 1864 2 1685 2 937 2 421 12 756 2 1930 2 240 8 1184 4 1509 2 242 4 
1762 4 950 4 642 2 886 2 1327 6 1136 2 887 4 526 2 1879 2 1192 2 261 2 124 2 476 2 1516 2 1887 2 1573 2 714 2 1083 2 1335 2 717 4 1523 4 322 2 1893 2 783 2 1471 2 1033 2 398 4 730 2 731 2 612 2 1902 2 448 2 1659 2 1483 2 1908 2 1106 2 1909 8 984 2 562 2 676 10 1487 2 413 2 159 2 37 8 995 2 686 8 1369 2 866 6 1431 2 868 4 1864 2 1685 2 937 2 421 12 756 2 757 2 1930 2 240 8 1184 4 1509 2 242 4 
1762 4 950 4 642 2 886 2 1327 6 1136 2 887 4 526 2 1879 2 1192 2 261 2 124 2 476 2 1516 2 1887 2 1573 2 714 2 1083 2 1335 2 717 4 1523 4 322 2 1893 2 783 2 1471 2 1033 2 398 4 730 2 731 2 612 2 1902 2 448 2 1659 2 1483 2 1908 2 1106 2 1909 6 984 2 562 2 676 10 1487 2 413 2 159 2 37 6 995 2 686 8 1369 2 866 6 1431 2 868 4 1864 2 1685 2 937 2 421 12 756 2 1930 2 240 8 1184 4 1509 2 242 4 
946 1 470 2 950 6 252 2 707 2 4 2 1192 2 261 4 476 2 712 12 1701 8 267 1 1703 2 1201 2 714 2 717 6 490 6 1709 2 272 2 1471 2 730 2 731 2 1479 2 1225 2 1227 6 1483 2 33 2 984 2 1232 1 1487 2 1235 6 37 8 995 2 1742 1 1497 2 1244 2 1747 6 515 2 303 2 302 2 754 2 756 2 757 4 50 1 1509 2 1762 8 526 2 765 2 1263 6 1018 2 1019 2 1523 4 69 1 322 2 1278 2 783 2 550 7 1033 2 1531 2 1043 6 1795 2 562 2 1541 2 1302 4 1548 2 806 2 1307 2 1309 2 813 2 107 2 1060 2 1062 2 1065 2 1316 2 112 6 1327 4 826 2 1819 6 124 4 1080 6 1826 2 1573 2 130 2 1083 2 1335 2 133 6 836 2 385 10 387 6 389 2 1091 4 1580 2 840 4 1586 6 141 2 395 6 398 4 1095 2 612 2 1348 8 404 6 1106 2 617 2 1359 4 159 2 1369 2 866 24 630 2 868 4 1371 2 1864 2 170 6 421 46 424 2 425 2 883 4 642 2 886 2 887 4 1136 2 644 4 1879 4 184 6 1887 4 190 6 1152 2 1893 2 1412 4 445 2 1158 6 1651 6 1655 2 1902 2 448 2 1659 2 1908 2 1909 12 675 2 676 2 680 2 916 4 1172 7 1919 1 1431 4 692 2 1439 1 934 2 1441 2 1926 2 1684 2 937 2 1685 2 463 2 1445 1 1930 2 238 2 240 2 1184 4 942 2 242 4 
470 2 112 6 950 6 252 2 1327 8 707 2 826 2 4 2 1819 6 1192 2 261 4 124 4 476 2 1701 8 712 12 1826 2 1080 6 1703 2 1201 2 130 2 1573 2 714 2 1083 2 1335 2 133 6 490 6 717 6 836 2 385 10 387 6 389 2 1709 2 1580 2 1091 8 272 4 840 4 1471 2 141 2 1586 6 395 6 398 4 1095 2 730 2 731 2 612 2 1348 8 404 6 1479 2 1225 2 1227 6 1483 2 33 2 1106 2 617 2 984 2 1359 4 1487 2 413 4 1235 6 159 2 37 8 995 2 1369 2 1244 2 1497 2 866 26 630 2 1747 6 1371 2 868 4 515 2 1864 2 170 6 754 2 302 2 303 2 421 48 756 2 425 2 424 2 1509 2 883 4 1762 8 642 2 886 2 1136 2 887 4 765 2 526 2 1263 6 644 4 1879 4 184 6 1018 2 1019 2 1887 4 190 6 1776 2 1523 4 322 2 1152 2 1278 2 1893 2 783 2 1412 4 1531 2 1033 2 445 2 1158 6 1651 6 1655 2 1902 2 448 2 335 2 1659 2 1043 6 1795 2 1908 2 1909 12 675 2 676 2 1541 2 562 2 680 2 916 8 1302 4 806 2 1548 2 1431 4 692 2 1307 4 1309 2 934 4 1441 2 813 2 1926 2 1311 2 1684 2 1685 2 937 2 107 2 1060 2 1062 2 463 2 1065 2 1930 2 238 2 1316 2 240 6 942 2 1184 4 242 4 
470 2 112 6 950 6 252 2 1327 8 707 2 826 2 4 2 1819 6 1192 2 261 4 124 4 476 2 1701 8 712 12 1826 2 1080 6 1703 2 1201 2 130 2 1573 2 714 2 1083 2 1335 2 133 6 490 6 717 6 836 2 385 10 387 6 389 2 1709 2 1580 2 1091 8 272 4 840 4 1471 2 141 2 1586 6 395 6 398 4 1095 2 730 2 731 2 612 2 1348 8 404 6 1479 2 1225 2 1227 6 1483 2 33 2 1106 2 617 2 984 2 1359 4 1487 2 413 4 1235 6 159 2 37 8 995 2 1369 2 1244 2 1497 2 866 26 630 2 1747 6 1371 2 868 4 515 2 1864 2 170 6 754 2 302 2 303 2 421 48 756 2 425 2 424 2 1509 2 883 4 1762 8 642 2 886 2 1136 2 887 4 765 2 526 2 1263 6 644 4 1879 4 184 6 1018 2 1019 2 1887 4 190 6 1776 2 1523 4 322 2 1152 2 1278 2 1893 2 783 2 1412 4 1531 2 1033 2 445 2 1158 6 1651 6 1655 2 1902 2 448 2 335 2 1659 2 1043 6 1795 2 1908 2 1909 12 675 2 1541 2 676 6 562 2 680 2 916 8 686 4 1302 4 806 2 1548 2 1431 4 692 2 1307 4 1309 2 934 4 1441 2 813 2 1926 2 1311 2 1684 2 1685 2 937 2 107 2 1060 2 1062 2 463 2 1065 2 1930 2 238 2 1316 2 240 6 942 2 1184 4 242 4 
470 2 950 6 1189 2 252 2 707 2 1456 2 4 2 1192 2 261 4 476 2 712 10 1701 8 9 2 1703 2 1201 2 714 2 717 6 490 6 1709 2 272 4 1471 2 730 2 731 2 1479 4 1225 2 1227 6 1483 2 738 6 984 2 1487 2 1235 6 37 10 995 2 1497 2 1244 2 1747 8 515 2 303 2 302 4 754 2 756 2 757 2 758 6 1509 2 1762 8 526 2 765 2 1263 6 1018 2 1019 2 1271 6 1776 2 1523 4 1524 2 322 2 1278 2 783 2 1033 2 1531 2 335 2 1043 8 1795 2 562 2 1541 2 1302 4 1548 2 806 2 1550 2 1307 4 1309 2 1555 2 813 2 1311 2 107 2 1060 2 1062 2 1065 2 1316 2 112 12 1327 10 826 2 1819 12 124 4 1080 6 1826 2 1573 2 130 2 1083 2 1335 2 133 12 836 2 385 8 387 6 389 2 1091 10 1580 2 840 4 608 2 141 2 1586 12 395 12 845 6 398 4 1095 2 1093 6 612 2 1348 12 404 12 1106 2 617 2 1359 4 413 4 159 2 1369 2 866 24 630 2 1371 2 868 4 869 2 1864 2 170 6 421 52 1872 2 424 2 425 2 883 4 642 2 1878 6 886 2 887 4 1136 2 644 6 1879 4 1631 6 184 6 1887 4 190 6 1152 2 1893 2 1412 4 445 2 1158 6 1651 6 904 6 1655 2 1902 2 448 2 1659 2 1908 2 1909 16 675 2 676 6 680 4 916 10 686 4 1431 4 692 4 1923 6 934 4 1441 2 1926 2 1684 2 937 2 1685 2 463 2 1930 2 238 2 240 6 1184 4 942 4 242 4 
950 2 1762 2 642 2 886 2 1327 6 1483 2 887 2 1908 2 1909 4 1106 2 526 2 984 2 676 4 1487 2 413 2 37 6 1887 2 686 4 1573 2 714 2 868 2 1523 4 322 2 1893 2 783 2 1685 2 937 2 421 4 730 2 1930 2 731 2 240 6 1184 2 448 2 242 4 
950 2 1327 6 707 2 826 2 4 2 261 4 476 2 712 4 1573 2 714 2 1574 2 1083 2 717 6 836 2 385 2 837 2 1210 3 1709 2 840 2 1471 2 1473 2 1095 2 730 2 731 2 612 2 1348 8 1483 2 33 2 1106 2 617 2 984 2 1738 2 1487 2 413 2 37 6 995 2 866 24 630 2 1747 6 868 2 303 2 1378 2 421 28 49 2 1509 2 424 2 1762 2 642 2 886 2 887 2 526 2 644 4 1018 2 895 2 1887 2 1523 4 1643 2 322 2 1278 2 1893 2 783 2 1412 4 445 2 1158 6 448 2 1659 2 1043 6 1908 2 1909 4 675 2 562 2 676 2 680 3 570 2 1302 4 1431 4 692 3 1441 2 813 2 1926 2 1684 2 937 2 1685 2 463 2 1930 2 240 6 1184 2 942 3 242 4 
1049 2 714 2 783 2 
1049 2 714 2 783 2 
244 2 950 4 363 2 1327 12 707 2 826 2 4 2 592 2 261 4 124 4 476 2 1569 2 712 4 9 4 10 2 714 4 1083 2 1335 2 717 6 836 2 385 2 1709 2 1091 4 272 4 840 6 138 4 1471 2 1583 2 398 4 1095 2 612 2 1348 2 1103 2 1483 2 617 2 984 2 1359 2 1487 4 991 2 413 4 37 12 995 2 1369 2 866 16 1747 2 1120 4 868 2 1504 2 303 2 421 24 757 4 177 2 424 2 1509 2 883 2 1762 4 1136 2 887 2 526 2 1879 2 1513 2 184 2 1018 2 1887 4 1523 4 542 4 1152 2 1278 2 783 6 1412 4 1033 2 445 2 1158 6 1902 2 448 2 1043 2 1795 2 1295 2 672 2 1909 16 675 2 1541 4 562 2 676 6 680 2 1667 2 916 4 1298 2 1669 2 1049 2 686 4 800 2 1302 4 1431 4 1307 4 1436 2 934 4 1441 2 813 2 1926 2 1684 2 107 2 463 2 240 6 1184 2 242 4 
866 2 385 2 363 2 1295 2 673 2 1359 2 1395 2 754 2 184 2 1896 2 991 2 1060 2 421 4 756 2 712 2 701 2 1509 2 
950 4 363 2 1327 12 707 2 826 2 4 2 592 2 261 4 124 4 476 2 1569 2 712 2 9 4 10 2 714 4 1083 2 1335 2 717 6 836 2 601 2 1709 2 1091 4 272 4 840 6 138 4 1471 2 1583 2 398 4 1095 2 612 2 1348 2 144 2 1103 2 1483 2 617 2 984 2 1487 4 991 2 413 4 292 2 37 12 995 2 1369 2 866 16 1747 2 1120 4 868 2 1864 2 1504 2 303 2 421 24 757 4 424 2 1509 2 883 2 884 2 1762 4 1136 2 887 2 526 2 1879 4 1513 2 1632 2 184 2 1018 2 1887 4 1523 4 542 4 1152 2 1278 2 783 6 1412 4 1033 2 445 2 1158 6 1902 2 448 2 1043 2 1795 2 1295 2 1909 16 675 2 1541 4 562 2 676 6 680 4 1667 4 916 4 1298 2 1049 2 686 4 800 2 1302 4 1431 4 1307 4 934 4 1441 2 813 2 1926 2 1684 2 107 2 463 2 240 6 1184 2 242 4 
244 1 950 4 363 2 1327 12 116 2 707 2 826 2 4 2 592 2 1822 2 261 4 124 4 476 2 1569 2 712 4 9 4 10 2 714 4 1083 2 1335 2 717 6 836 2 385 2 602 2 1709 2 1091 4 493 2 272 4 840 6 138 4 1471 2 1583 2 398 4 1095 2 612 2 1348 2 1104 2 1103 2 1483 2 617 2 984 2 1359 2 1487 4 991 2 413 4 37 12 995 2 1369 2 866 16 1747 2 1120 4 868 2 1864 2 1504 2 303 2 421 24 757 4 424 2 1509 2 883 2 1762 4 1136 2 887 2 526 2 1879 4 1513 2 184 2 1018 2 1887 4 1523 4 542 4 1152 2 1278 2 783 6 1412 4 1033 2 445 2 1158 6 1902 2 448 2 1043 2 1795 2 1295 2 1909 16 675 2 1541 4 562 2 676 6 680 2 1667 2 916 4 1298 2 1049 2 686 4 800 2 1302 4 1431 4 1307 4 934 4 1441 2 813 2 1926 2 1684 2 107 2 463 2 240 6 1184 2 242 4 
949 3 1 2 3 2 5 2 4 2 954 2 6 2 957 2 959 2 960 2 11 2 13 2 15 2 963 36 965 2 967 22 17 2 969 4 19 24 18 3 970 38 22 3 971 2 972 2 973 2 974 2 28 2 977 2 31 2 979 2 980 2 34 1 32 2 988 2 992 2 995 2 999 2 998 3 1000 26 1001 2 39 2 1003 2 1006 2 40 3 1007 4 44 40 1011 12 45 3 1012 1 48 3 49 2 1013 2 51 2 1016 3 52 2 55 2 1017 2 60 78 61 78 1018 82 1019 8 1020 2 1022 2 63 2 62 2 1023 2 65 2 64 38 66 1 1025 14 1024 2 1027 1 70 2 1029 2 1031 2 72 78 76 2 80 6 1040 2 1039 156 1042 2 1043 18 82 2 83 38 84 100 87 2 91 156 94 1 1045 38 1050 38 99 2 100 4 101 3 1055 4 1054 2 103 4 1057 2 1059 2 1066 2 1071 20 113 2 114 2 115 2 117 78 118 2 1075 2 1078 61 1079 4 130 8 1081 6 1082 2 1083 2 131 2 134 78 1086 2 1089 4 1090 80 135 2 136 6 1091 183 1092 558 1095 324 1096 2 1099 2 145 2 1100 2 1101 2 1102 10 147 2 148 10 149 2 1105 2 153 6 150 4 1109 34 155 82 1113 6 1112 34 158 2 1117 3 161 2 1118 2 165 2 166 1 1121 2 1122 2 1125 2 1126 2 1127 40 1129 2 176 124 1130 4 1131 12 178 3 1133 2 179 2 1135 2 180 2 181 2 1137 4 1138 3 183 10 182 2 1139 2 185 4 1141 4 186 4 187 2 1143 18 1144 2 189 2 1145 2 192 2 193 80 195 2 197 14 198 3 200 2 1150 1 1153 2 1155 6 203 2 202 2 207 80 1158 1112 1160 38 1161 2 1162 12 209 2 212 2 210 78 216 2 214 2 1168 2 222 2 228 2 229 2 231 2 230 38 1176 95 1177 2 1178 2 1180 22 234 2 1183 2 237 4 238 8 239 2 244 3 1189 2 1188 8 247 16 248 2 250 3 253 22 252 2 249 10 256 6 257 3 1191 2 261 8 1195 2 1200 2 264 2 265 112 268 80 270 16 1205 2 1204 2 1208 4 1210 2 273 2 1212 2 275 24 1213 66 276 2 279 3 1219 38 283 4 284 158 1222 3 1225 2 285 2 286 2 1228 2 287 78 1231 4 1233 10 291 8 1236 2 1239 2 293 38 1240 2 1242 4 295 24 1243 2 1244 22 296 2 297 38 1246 2 303 2 302 46 1252 2 305 8 1253 2 306 2 307 6 1254 2 308 2 1255 80 1256 2 1257 2 1259 2 1260 2 1261 2 311 4 1266 2 316 2 1268 86 1272 2 318 2 321 2 1276 80 1277 3 1278 2 1279 38 325 1 1280 2 326 2 328 18 329 78 1282 2 332 2 1286 6 334 4 336 2 337 6 1291 22 1294 2 341 2 1296 2 344 66 346 8 345 9 348 2 1299 78 1300 12 1302 480 349 2 1305 78 1306 2 1308 2 352 2 353 2 1312 14 354 3 357 2 1316 2 1318 2 1320 2 1324 2 365 2 367 3 369 6 371 2 1330 2 372 2 373 2 375 6 377 10 1333 2 379 2 381 2 1336 2 385 2 386 2 388 48 389 2 1339 80 390 2 391 24 393 2 397 1 1347 10 1348 126 1349 38 403 2 405 2 1354 2 1355 2 407 2 1356 4 1357 80 408 2 411 2 1360 2 1362 3 1363 3 1365 2 415 2 1367 2 1368 2 416 2 417 3 1373 2 1374 2 1377 2 419 2 1379 6 1380 2 421 1174 1382 2 1381 38 422 2 426 2 1386 3 1388 2 428 2 429 3 431 2 1391 16 432 2 1396 2 1397 2 435 9 437 2 436 4 1402 2 1403 2 438 83 1406 2 441 12 1412 402 444 20 445 2 1414 2 1415 2 1416 3 449 2 1421 2 1426 3 452 2 453 234 454 80 1431 8 1432 18 455 2 457 2 1440 2 1441 4 1442 2 462 20 1443 3 463 2 464 24 465 2 466 2 1444 4 467 3 468 6 1448 16 1449 2 1452 2 471 2 1456 4 473 2 474 10 1457 2 1458 14 476 2 1460 2 484 3 1464 80 485 2 488 2 489 1 1466 8 492 78 1469 2 1470 6 1471 2 1472 3 1473 2 1474 2 1479 84 498 170 1481 4 499 2 1484 2 1482 2 502 8 1485 2 505 3 506 2 1488 78 510 2 1492 32 1494 7 511 2 512 2 1496 1 1497 2 513 2 1500 6 1502 2 514 2 517 4 518 112 519 120 520 2 1506 1 1508 2 1509 2 1510 78 1511 2 528 2 529 2 531 2 1518 20 532 2 534 2 535 4 1520 1 1522 13 539 2 541 2 540 4 1524 2 1528 2 547 2 1529 2 549 3 548 2 551 2 1532 2 1530 80 1533 2 554 2 1535 80 555 4 1537 20 559 2 562 2 1541 18 565 2 566 2 1546 12 571 2 572 4 573 2 1548 2 1550 2 1552 2 1553 78 1554 2 577 2 1555 2 580 4 1556 8 1559 2 1562 38 585 1 586 3 587 2 1563 80 590 38 1566 2 593 2 1571 2 1572 2 1575 2 1576 2 600 38 1579 24 603 2 1580 4 604 2 1582 2 607 2 1584 2 608 2 1588 2 1587 3 1590 2 609 34 1592 2 612 2 1595 2 1596 2 1598 80 1597 2 614 2 613 2 1599 2 1602 2 616 2 617 8 1605 2 620 38 1606 2 622 2 1607 2 625 20 626 20 627 15 1610 2 628 6 630 2 1611 2 1612 2 631 22 632 2 1616 2 1615 2 1614 26 637 2 638 2 1620 2 1621 2 641 78 1623 2 1624 3 1625 2 1628 106 644 12 1634 2 1635 3 646 2 1639 2 651 3 1640 2 1643 2 1645 2 1646 2 656 8 657 2 1648 60 1649 2 1650 2 1652 76 664 2 1655 16 665 2 1656 4 668 2 1662 18 670 38 675 314 1663 2 678 2 1666 6 679 2 680 110 682 8 683 6 684 2 685 2 687 2 690 2 1672 2 1676 2 692 46 1678 2 1679 2 1677 2 1680 2 1682 2 695 2 1684 2 1686 12 697 14 1688 2 1689 2 1690 2 702 2 704 2 706 32 707 2 709 2 1696 2 1697 12 711 10 1699 2 1700 2 712 10 715 2 717 10 1705 11 1707 2 719 8 720 2 1708 4 1709 8 723 2 1710 76 1713 6 1715 2 1717 2 1718 2 1719 2 1720 2 733 4 1722 2 734 10 1726 2 735 2 1727 80 1729 2 1728 2 737 2 1731 2 1732 3 739 2 742 2 1736 10 1735 2 1739 2 744 2 1741 2 746 4 1743 2 1744 24 1747 32 1746 2 1745 2 749 4 750 24 751 2 1750 166 752 2 1753 2 1756 2 1752 22 755 2 759 2 760 2 1759 2 1761 78 762 18 1764 2 763 3 764 2 767 38 1768 2 1766 4 769 2 1770 2 1771 78 1772 10 772 4 776 4 1773 14 1777 2 1779 60 782 2 1780 3 1781 2 1782 2 785 38 1784 2 786 22 1789 2 789 10 1792 2 1793 2 793 40 794 2 1797 2 797 3 796 2 801 3 802 16 804 2 1799 2 805 4 807 2 809 4 811 2 812 2 813 2 814 2 1804 2 815 2 1806 4 1807 14 1810 2 820 2 1816 3 1817 4 821 2 823 38 824 60 825 2 826 2 828 2 1821 8 829 2 830 10 831 2 832 80 833 2 1825 158 1827 2 836 2 840 2 843 156 1838 2 847 10 1839 2 850 2 1843 2 1844 4 1846 52 1845 2 1847 2 853 6 856 2 1848 2 858 2 1851 104 1852 2 860 2 861 2 1856 1 1857 3 1859 2 866 966 1860 2 1862 4 1863 2 870 2 1865 2 873 8 874 2 1869 2 1872 2 878 2 1874 3 885 2 1876 6 1877 2 1880 76 891 2 1884 38 893 2 895 2 1886 4 896 14 897 2 1890 2 899 36 1894 2 1897 2 1898 3 1899 102 1903 158 907 38 909 2 911 36 912 2 1910 2 913 78 1912 2 1913 2 915 2 1914 2 1916 3 916 178 1917 3 917 2 918 2 920 2 919 14 921 54 923 6 1920 16 926 234 927 15 928 2 1921 2 933 20 1926 84 1927 2 935 2 941 60 1932 2 1931 4 942 16 944 3 
1043 2 147 2 148 2 473 2 644 2 680 2 566 2 1426 2 1022 2 1397 2 866 2 630 2 1747 2 514 2 692 2 203 2 302 6 421 2 942 2 1347 2 1348 2 1350 2 1726 2 789 4 
1043 2 147 2 148 2 473 2 644 2 680 2 566 2 1426 2 1022 2 1397 2 866 2 630 2 1747 2 514 2 692 2 203 2 302 6 421 2 942 2 1347 2 1348 2 1350 2 1726 2 789 4 
1043 2 147 2 148 2 473 2 644 2 680 2 566 2 1426 2 1022 2 1397 2 866 2 630 2 1747 2 514 2 692 2 203 2 302 6 421 2 942 2 1347 2 1348 2 1350 2 1726 2 789 4 
337 2 1451 2 340 2 1846 2 256 2 473 2 84 2 153 2 123 4 1393 3 680 3 993 2 683 2 1546 2 625 4 628 4 866 4 630 2 1775 2 384 2 750 3 1708 2 692 3 1892 2 969 2 441 2 171 2 275 5 328 4 19 3 462 4 1757 2 105 2 1011 2 421 10 444 4 1899 6 1348 2 1162 2 1071 4 
1451 2 256 2 473 2 1393 2 123 4 1272 2 1775 2 384 2 1708 2 1892 2 441 2 969 2 275 4 1155 2 19 2 328 4 444 4 1899 6 1348 2 1162 2 337 2 1846 2 1102 2 340 2 84 2 153 2 680 2 993 2 683 2 1546 2 625 4 866 4 628 4 630 2 750 2 692 2 171 2 462 4 1757 2 105 2 1011 2 421 10 1071 4 
1451 2 256 2 473 2 1393 2 123 4 1272 2 1775 2 384 2 1708 2 1892 2 441 2 969 2 275 4 1155 2 19 2 328 4 444 4 1899 6 1348 2 1162 2 337 2 1846 2 1102 2 340 2 84 2 153 2 680 2 993 2 683 2 1546 2 625 4 866 4 628 4 630 2 750 2 692 2 171 2 462 4 1757 2 105 2 1011 2 421 10 1071 4 
1451 2 256 2 473 2 1393 2 123 4 1272 2 1775 2 384 2 1708 2 1892 2 441 2 969 2 275 4 1155 2 19 2 328 4 444 4 1899 6 1348 2 1162 2 337 2 1846 2 1102 2 340 2 84 2 153 2 680 2 993 2 683 2 1546 2 625 4 866 4 628 4 630 2 750 2 692 2 171 2 462 4 1757 2 105 2 1011 2 421 10 1071 4 
1451 2 256 2 473 2 1393 2 123 4 1272 4 1775 2 384 2 1708 2 1892 2 441 2 969 2 275 4 1155 4 19 2 328 4 444 4 1899 6 1348 2 1162 2 337 2 1846 2 1102 4 340 2 84 2 153 2 680 2 993 2 683 2 1546 2 625 4 866 4 628 4 630 2 750 2 692 2 171 2 462 4 1757 2 105 2 1011 2 421 10 1071 4 
1666 2 211 2 101 2 1910 2 1735 2 59 2 
1268 2 101 2 979 2 604 2 1242 2 419 2 1164 2 
947 2 1262 2 1074 2 259 2 1819 2 677 2 1424 2 1854 1 1114 1 995 2 958 2 269 1 97 1 866 8 491 2 1748 1 1408 2 1435 2 1581 2 235 2 842 2 327 2 579 2 421 10 523 2 1317 2 
337 6 1102 4 256 6 153 6 218 2 1768 2 1113 4 157 2 1886 2 683 6 1546 6 1272 2 1081 4 131 2 866 6 628 4 1004 2 1502 2 1708 2 870 2 441 6 275 16 103 2 1155 2 328 12 658 2 421 6 305 2 1162 6 1130 2 
866 1 361 2 1088 2 350 2 693 2 102 2 1422 2 987 6 462 2 92 4 421 1 444 2 713 2 798 2 283 2 1858 1 1014 2 1071 2 
361 4 1088 2 350 2 693 2 102 4 1422 2 987 6 462 2 92 4 444 2 798 2 713 2 283 4 1014 2 1071 2 
866 1 361 8 1088 2 350 2 693 6 102 8 1422 2 987 10 462 2 92 4 421 1 444 2 798 8 713 2 283 8 1858 1 1014 2 1071 2 
361 2 1088 2 350 2 102 2 1422 2 987 2 462 2 92 2 444 2 713 2 283 2 1014 2 1071 2 
244 1 111 8 952 10 117 4 588 1 1457 2 1563 4 1820 4 1564 10 711 2 594 8 1331 2 1825 10 1464 8 268 4 134 4 600 4 1578 8 1090 4 1339 4 1091 15 843 11 847 4 1092 24 1095 29 1217 4 1476 16 1219 4 496 8 284 10 1727 4 498 30 1598 4 285 2 500 4 287 4 982 4 1357 4 620 4 1851 8 1111 2 990 2 1488 4 508 10 1490 32 866 70 297 4 40 3 1749 2 1750 8 1752 8 1379 2 421 78 1381 4 48 2 176 14 1510 4 1761 4 1258 2 641 4 57 2 1628 16 60 4 61 4 1018 6 1396 2 1141 4 1771 6 774 4 651 1 193 4 194 2 438 6 1412 36 72 4 1530 4 207 4 1158 103 1160 4 1654 2 1535 4 1901 2 1903 10 907 4 1039 10 1794 2 210 4 558 2 83 4 675 27 450 4 91 6 345 4 1045 4 1050 4 453 24 1299 4 98 16 1302 44 100 4 1052 2 926 24 1553 4 929 2 1441 2 1926 6 1687 2 700 4 944 2 1561 2 
244 2 1761 2 641 2 1457 2 1018 2 1396 2 1021 2 1141 2 1771 2 1825 6 268 4 193 4 1705 1 438 4 1090 4 1091 14 1412 14 843 2 72 2 847 4 1092 8 1095 12 1158 40 284 6 1535 4 1901 2 1903 6 1039 2 1727 4 1598 4 1794 2 498 6 1732 1 285 2 558 2 287 2 675 12 1111 2 219 2 990 2 91 2 569 2 1857 2 866 26 1176 9 1302 14 100 2 1305 2 40 2 1441 2 1926 2 1752 5 1379 2 45 2 421 28 468 2 1131 1 1319 2 1561 2 
584 24 244 4 117 6 369 2 1457 8 1563 6 125 4 1825 16 1464 24 268 6 271 26 134 6 1705 11 599 12 600 4 1090 6 1339 6 1091 28 843 16 394 4 847 8 1092 124 278 24 142 10 1095 58 1219 4 284 16 1223 4 1727 6 1598 6 498 34 1732 2 285 8 287 10 857 2 1357 6 620 4 35 8 1851 42 1111 2 990 2 1488 6 156 2 1489 4 996 4 1857 2 866 134 297 4 40 6 1749 2 1750 50 1752 15 1010 8 45 2 1379 4 421 150 1381 4 48 2 1873 10 176 12 1131 7 1510 6 639 90 1255 6 1761 10 641 10 1628 42 1881 4 530 24 60 6 61 6 1018 14 1396 8 1021 2 1141 4 1771 10 433 6 651 4 193 6 194 2 438 8 1891 26 199 8 329 24 1412 88 72 10 1530 6 207 6 1158 248 1160 4 1653 4 787 18 1535 6 1786 90 1901 2 1903 16 1039 18 907 4 210 6 558 2 793 2 342 4 83 4 675 58 913 24 91 36 345 5 1045 4 569 2 1050 4 453 92 1299 6 1302 112 1176 22 100 4 1305 4 926 84 1553 6 1441 8 1926 14 355 10 468 4 1069 2 944 2 819 4 1561 2 1319 2 
584 2 244 2 0 4 952 2 1457 2 1564 2 1459 2 1331 2 480 2 1199 2 1825 4 375 4 268 2 383 2 718 2 1090 2 1091 36 20 2 843 2 394 2 726 2 494 2 1092 6 278 2 1095 6 142 2 284 4 1723 2 1727 2 1598 2 285 2 854 4 287 2 1108 2 154 2 35 2 1111 2 1361 2 990 2 745 4 508 2 866 44 1498 2 40 2 871 2 41 2 1376 2 635 2 421 46 47 2 1873 2 1761 2 1258 2 641 2 530 2 1018 2 1396 2 1021 2 1771 2 193 2 438 6 1276 6 1527 2 545 2 1412 20 72 2 73 2 1285 2 1158 48 447 2 1535 2 1901 2 1790 2 1903 4 1039 2 1794 2 558 2 675 6 219 2 91 2 1302 20 1675 2 1434 2 1181 2 1441 2 1926 2 355 2 1809 2 1929 2 1067 2 1561 2 
1875 2 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 
1385 1 939 1 427 1 482 1 1220 1 1098 1 

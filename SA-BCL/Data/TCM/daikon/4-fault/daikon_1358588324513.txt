#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.IllegalStateException 1118 425 (28,37,86,95,225,229,284,286,311,320,384,386,394,408,453,503,522,523,622,632,634,637,643,743,757,760,804,817,824,856,918,930,963,986,1015,1021,1026,1057,1088,1113,1122,1138,1157,1224,1265,1278,1287,1344,1374,1422) 1294 446 849 961 1059 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 744 960 1293 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:jj_2_17(I)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoAux:hashCode()I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_102()Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.Quant:memberOf(F[D)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.Quant:subsetOf([F[F)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.Quantify.ESCQuantification:get_arr_vars_indexed(I)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_109()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:isPrestate()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_104()Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:lte(II)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.RootNode:RootNode()V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_47()Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_21(I)Z
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParser:jj_2_36(I)Z
daikon.inv.Invariant:logDetail()Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
jtb.JavaCharStream:ReadByte()C
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
jtb.JavaParser:jj_2_5(I)Z
daikon.Quant:pairwiseGTE([I[I)Z
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:lexGT([I[I)Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:jj_2_3(I)Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
jtb.JavaParser:jj_scan_token(I)Z
utilMDE.ArraysMDE:sum([[I)I
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:isLiteralConstant()Z
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.Quant:intersection([I[I)[I
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V | STATEMENT | 564 | stmt -> ;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:jj_3R_88()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.Debug:logDetail()Z
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfo:get_upper_bound()Ldaikon.Quantify.Term;
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_103()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.JavaParser:jj_3R_58()Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.Quant:isReverse([I[I)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.JavaParser:jj_3_18()Z
utilMDE.MathMDE:gcd_differences([I)I
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quant:eltsLT([II)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.ModBitTracker:split(I)I
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_161()Z
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
utilMDE.WeakHasherMap:size()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.inv.filter.ParentFilter:ParentFilter()V
jtb.JavaParser:jj_3_25()Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.Quantify.FreeVar:name()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.Quant:eq(DD)Z
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:mod_positive(II)I
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:inPre()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:baseIsScalar()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseGT([I)Z
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.VarInfo:get_lower_bound()Ldaikon.Quantify.Term;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:prob_and(DDD)D
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:union([I[I)[I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.Quantify.Length:Length(Ldaikon.VarInfo;I)V
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaCharStream:getBeginColumn()I
daikon.ModBitTracker:num_sets()I
jtb.JavaParser:jj_3R_210()Z
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isPseudoArray()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.PptSlice1:arity()I
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_60()Z
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:jj_2_25(I)Z
daikon.PptName:isEnterPoint()Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:jj_2_18(I)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.JavaParser:jj_3R_57()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaCharStream:readChar()C
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_74()Z
daikon.ProglangType:isScalar()Z
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.Quant:memberOf(J[J)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexLT([I[I)Z
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.VarInfo:get_base_array_hashcode()Ldaikon.VarInfo;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.JavaParser:jj_3R_61()Z
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.Assert:assertTrue(Z)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.MathMDE:negate(I)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_51()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfo:isDerived()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_137()Z
jtb.JavaParser:jj_3R_107()Z
utilMDE.Intern:intern([I)[I
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_28()Z
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsLteIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
jtb.JavaParser:jj_3R_110()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([I[I)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.Quantify.ESCQuantification:bld_quant(Ldaikon.VarInfo;Ldaikon.Quantify.Term;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Debug:logOn()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:jj_3_22()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.ValueTuple:isMissing(I)Z
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfo:get_array_var()Ldaikon.VarInfo;
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.Quant:eq(II)Z
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_2_14(I)Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaCharStream:FillBuff()V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_17()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.ProglangType:baseIsIntegral()Z
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.MathMDE:gcd(II)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_100()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z | STATEMENT | 9323 | stmt -> ;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.Quant:memberOf(D[F)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_13(I)Z
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.Quantify.Term:name_with_offset(Ljava.lang.String;I)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.PptSlice0:arity()I
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaParser:jj_3R_97()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.JavaParser:jj_2_12(I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaParser:jj_3R_124()Z
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.Invariant:getConfidence()D
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.Intern:numIntArrays()I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3_30()Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfo:get_base_array()Ldaikon.VarInfo;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.Quant:pairwiseGT([I[I)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:justified()Z
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.JavaParser:jj_3_13()Z
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:jj_3R_98()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_29()Z
daikon.Quant:eltsLTE([II)Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_86()Z
jtb.JavaParser:jj_3R_117()Z
daikon.PptSlice0:initInvariantsSeen()V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quantify.ESCQuantification:ESCQuantification(Ljava.util.EnumSet;[Ldaikon.VarInfo;)V
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:jj_3R_49()Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_72()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
jtb.JavaParser:jj_3R_80()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
daikon.test.FormatTestCase:passes()Z
utilMDE.ArraysMDE:sorted([I)Z
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_3_12()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_101()Z
utilMDE.MathMDE:modulus([I)[I
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:jj_3_27()Z
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.PptName:isCombinedExitPoint()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:eq(JJ)Z
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:concat([I[I)[I
daikon.Quant:eltwiseLTE([I)Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.JavaParser:jj_3R_106()Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParser:jj_3R_52()Z
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.OutputFormat:toString()Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.Invariant:logOn()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:jj_3R_115()Z
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:prob_or(DD)D
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.ArraysMDE:min_max([I)[I
utilMDE.MathMDE:pow_fast(II)I
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.Quantify.Constant:name()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_2_15(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
utilMDE.MathMDE:pow(II)I
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.Quant:subsetOf([D[F)Z
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3R_99()Z
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_149()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParser:jj_3R_169()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_ntk()I
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.JavaParser:jj_3R_54()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:indexOf([II)I
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.ArraysMDE:sum([I)I
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(F[F)Z
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.VarInfoName:isLiteralConstant()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_105()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.Quantify.Term:esc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
jtb.JavaCharStream:getEndColumn()I
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_68()Z
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltwiseNotEqual([I)Z
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quantify.ESCQuantification:get_quantification()Ljava.lang.String;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.Quant:ne(II)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_3_36()Z
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.FuzzyFloat:eq(DD)Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_125()Z
daikon.ProglangType:isIntegral()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.ProglangType:isArray()Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3_20()Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
jtb.JavaParser:jj_3_16()Z
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_67()Z
daikon.Ppt:Ppt()V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Intern:intern([D)[D
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.JavaParser:jj_3_10()Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfo:new_ppt()V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParser:jj_3R_135()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:jj_3R_123()Z
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_19()Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_148()Z
daikon.inv.Invariant:isWorthPrinting()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.JavaParser:jj_3_3()Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_108()Z
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:jj_3R_50()Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_89()Z
jtb.JavaParser:jj_3R_70()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:relate_var()V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_119()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:jj_3_1()Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:gt(II)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_73()Z
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_3R_126()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:isPointer()Z
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.Quant:eltsGT([II)Z
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParser:jj_2_1(I)Z
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.InvMap:InvMap()V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.PptSlice2:arity()I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.Quant:gte(II)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.Invariants:Invariants()V
daikon.ProglangType:dimensions()I
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_48()Z
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.ModBitTracker:num_samples()I
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.Constant:Constant(I)V
daikon.Quant:slice([III)[I
daikon.Quant:lexLTE([I[I)Z
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_116()Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsNotEqual([II)Z
daikon.Quant:eltwiseEqual([I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String; | RETURN | 105067 | return null
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
daikon.Quant:subsetOf([S[S)Z
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:jj_3R_56()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V | ASSIGN | 9027 | = null
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.Quant:subsetOf([D[D)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
jtb.syntaxtree.NodeOptional:present()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.test.InvariantFormatTester:execute()Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_164()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3_5()Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
utilMDE.MathMDE:gcd(JJ)J
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:memberOf(I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.diff.Node:Node()V
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:max([I)I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:noDups([I)Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.JavaParser:jj_3R_63()Z
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:jj_3R_136()Z
utilMDE.ArraysMDE:min([I)I
daikon.Quant:subsetOf([F[D)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3_35()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.Quantify:get_flags(Z)Ljava.util.EnumSet;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.Quantify.Length:esc_name()Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.ProglangType:isPointerFileRep()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_3R_180()Z
daikon.ValueTuple:size()I
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.ProglangType:isFloat()Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_122()Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.OrderedPairIterator:setnext1()V
utilMDE.Intern:internSubsequence([JII)[J
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
utilMDE.Intern:intern([J)[J
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltwiseGTE([I)Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_4()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.Quant:memberOf(S[S)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
305 2 1090 2 985 4 1000 2 1152 2 22 2 457 2 254 2 354 2 
400 2 248 2 1104 6 195 2 389 2 349 2 1280 2 1401 6 1396 6 717 2 533 2 
808 6 1008 2 1290 6 489 6 585 4 1014 2 1340 2 22 2 1039 6 457 2 493 2 969 4 23 2 
712 2 288 2 1414 4 1402 2 978 16 482 6 1003 10 271 10 111 12 136 8 1227 8 456 4 1130 8 169 4 457 6 1407 6 1186 2 1346 29 1076 10 1114 10 240 26 775 4 1389 2 244 10 508 16 22 6 689 8 377 16 655 2 1313 2 
402 6 968 4 
904 2 
205 2 2 2 1400 2 356 2 1000 2 1176 2 109 2 164 2 1178 2 294 2 642 2 906 4 457 4 910 2 462 2 1091 2 1282 4 1326 2 22 4 1331 2 653 4 474 2 223 2 182 2 128 2 184 2 611 2 745 2 566 2 186 2 840 4 1108 2 528 2 569 2 1382 2 1342 2 534 2 842 2 843 2 194 2 1389 2 540 2 48 2 1355 2 
1289 2 1414 2 382 6 1062 4 978 32 6 6 482 4 1003 16 110 2 84 4 271 16 111 22 272 4 1227 6 1299 6 388 2 457 4 664 2 1407 4 1346 54 618 8 278 2 1076 16 890 6 1050 4 1114 6 240 48 1012 6 244 16 1168 2 1258 4 508 32 22 4 689 18 851 4 377 32 953 6 1313 2 224 4 
924 2 871 2 184 2 
889 2 606 2 1351 2 395 2 1202 10 1428 2 280 2 44 2 1024 2 991 22 309 2 186 2 639 2 218 2 
1414 2 973 2 584 2 978 2 482 2 1003 2 271 2 228 2 111 2 113 2 662 2 1160 2 936 2 1346 6 1076 2 1114 4 239 2 825 2 240 4 244 2 508 2 689 2 377 2 
1346 16 1399 2 890 6 1076 4 1050 4 978 8 240 12 1003 4 1012 6 271 4 111 4 244 4 272 4 508 8 169 2 772 2 377 8 
924 2 1061 2 184 8 767 2 267 14 163 2 785 4 959 4 840 4 294 4 857 2 1273 4 550 2 1418 2 1275 2 191 4 752 4 367 2 841 2 1406 10 463 2 1074 4 1368 2 869 4 1115 62 448 2 871 6 541 2 48 2 471 4 1260 2 558 2 628 4 597 10 202 2 1409 4 1237 2 1439 4 1196 2 1123 2 
422 2 925 2 657 2 1019 2 904 2 685 2 778 2 660 2 231 2 313 2 
0 2 1172 1 810 2 996 2 998 16 812 2 105 2 1001 16 1084 2 1359 4 357 2 716 2 1002 4 1268 1 1269 8 112 1 455 2 1270 4 209 1 1274 2 909 2 457 32 366 1 114 2 1183 3 10 2 460 3 556 2 18 2 1371 1 1193 1 124 2 22 34 835 1 1195 2 1099 4 1018 2 1292 2 27 1 928 2 477 12 30 2 308 2 659 24 32 3 1297 2 1028 2 1029 2 1032 2 1030 2 661 1 1301 3 230 4 665 2 36 2 754 2 753 2 144 2 41 2 756 3 490 3 42 2 670 2 848 2 1038 2 405 2 1216 2 53 1 764 1 765 2 955 2 406 2 494 2 1219 2 409 2 1220 2 582 2 583 32 1221 3 675 2 254 2 55 5 768 2 587 2 769 4 861 2 679 6 59 2 592 24 962 2 258 2 1049 6 1141 2 329 2 964 2 429 2 430 2 505 2 330 2 1232 4 172 2 1052 2 594 2 1144 3 70 16 873 1 875 2 181 2 779 1 1054 2 780 6 1410 6 72 1 338 2 75 4 516 8 691 2 521 2 79 2 524 32 782 3 977 2 341 2 1337 3 527 2 700 8 885 3 790 2 89 2 344 2 345 2 1423 3 536 2 1425 2 276 16 1347 2 193 2 1252 2 623 2 198 2 893 2 796 1 797 2 1257 2 1259 2 895 2 1437 2 
22 2 1431 2 
293 2 1246 2 22 4 
833 2 
1 2 713 2 3 86 714 2 715 18 358 4 360 2 7 2 720 44 1087 4 362 2 722 4 9 14 365 2 1088 4 1089 18 726 2 727 74 11 2 730 4 729 2 731 2 1092 2 370 2 1094 4 372 2 1096 2 375 2 735 6 736 4 737 6 379 2 1098 2 1101 16 739 2 740 2 26 2 28 2 384 2 743 2 33 2 742 2 385 4 746 2 747 2 748 30 35 2 387 2 386 2 1109 2 749 62 750 16 1110 2 37 6 1112 2 39 2 394 2 396 246 1113 2 755 2 397 62 757 2 398 2 401 2 759 2 404 2 760 4 1118 2 1119 2 49 2 762 2 50 94 51 2 1122 2 1124 4 408 86 407 2 411 2 412 2 413 2 766 2 1128 2 770 2 419 2 771 2 58 2 1134 4 1136 2 1137 2 425 98 427 74 1138 4 1140 2 64 2 65 44 66 4 67 2 776 8 1145 18 71 4 1151 48 73 2 433 4 1153 4 434 4 80 2 82 2 436 30 86 12 1157 6 1158 2 787 4 441 2 788 2 442 2 443 2 92 246 1163 2 446 2 95 2 1166 2 96 2 98 54 101 4 1169 2 804 2 805 2 809 2 811 2 106 2 107 2 814 4 453 2 1177 2 817 2 820 94 459 6 1185 2 115 2 461 42 465 4 1187 2 1188 2 466 4 824 16 121 2 827 2 826 4 829 2 1189 2 469 2 830 2 1191 2 1194 12 832 90 834 2 127 358 475 52 129 4 130 2 838 4 476 30 478 2 480 2 839 4 479 20 481 2 1203 4 132 22 1204 2 483 246 138 2 140 62 1207 4 142 2 145 2 1212 4 845 2 491 6 849 2 850 10 496 2 158 86 1224 2 854 12 165 2 855 4 168 2 856 2 499 2 860 2 501 2 1229 2 503 96 866 2 1231 2 867 2 1234 2 177 2 175 2 876 18 510 2 877 2 1238 2 512 2 879 2 880 6 1239 4 518 8 881 2 1240 4 1241 4 183 4 522 50 523 56 1243 2 882 2 884 44 529 2 1247 2 190 2 192 6 887 18 535 2 1253 18 1254 2 539 94 200 4 201 16 894 4 543 48 544 56 897 2 898 2 545 6 899 36 900 4 547 56 1265 6 902 4 1266 2 208 4 548 42 905 2 551 18 907 2 911 4 1276 2 1278 2 914 2 213 42 915 2 1279 4 214 2 557 16 1281 4 918 6 1284 2 217 4 921 2 920 2 922 2 1287 2 225 4 1291 52 1294 6 929 50 930 2 1296 2 229 2 1298 2 567 12 933 2 568 2 232 18 236 4 234 2 571 2 573 12 940 94 1306 2 575 2 238 34 941 8 242 2 243 8 945 2 944 2 245 2 246 2 947 2 948 8 949 14 951 94 1312 2 581 2 256 46 961 2 590 4 963 2 1321 6 1322 2 965 4 593 94 1325 2 1329 2 261 94 599 2 600 2 604 2 1334 2 264 2 971 2 605 2 265 2 974 12 609 4 979 2 268 2 613 2 1339 2 981 2 273 2 1341 2 615 12 1344 2 986 2 1350 2 620 2 622 2 988 4 281 4 624 4 625 50 992 2 1354 2 284 2 632 2 286 2 633 22 995 2 997 2 999 2 634 2 635 14 292 2 1004 2 637 2 1361 56 638 94 641 2 643 2 644 8 648 2 649 2 650 104 1009 2 1010 2 1013 2 300 2 1015 2 1370 2 1372 2 1374 2 1375 2 654 2 1017 2 303 2 1376 2 306 28 1021 4 658 2 307 2 1380 2 1379 2 1026 2 311 2 1033 4 663 2 666 2 1384 2 667 2 1385 2 668 2 1036 4 319 94 1037 2 1394 2 671 4 320 2 1397 18 1398 2 672 2 1044 2 322 2 324 4 1403 2 1048 2 684 4 331 94 333 2 1408 94 334 4 1411 4 1057 6 1058 12 1059 2 1060 4 692 22 1063 2 1065 2 1066 4 1068 2 694 2 697 6 696 4 698 2 699 2 1420 2 343 2 701 2 1073 2 1422 2 705 4 706 2 1075 8 350 8 708 2 352 4 710 4 1079 2 1081 2 355 4 
444 2 565 2 290 2 1120 1 
565 2 916 2 
296 2 456 2 565 2 1103 2 139 2 184 2 1320 2 
166 2 565 2 1320 2 
565 2 1320 2 514 2 
290 2 188 2 967 2 
565 2 1320 2 
967 2 602 2 
565 2 1255 2 
290 2 967 2 990 2 
290 2 1223 2 703 2 
290 2 957 2 1167 2 
290 2 57 2 683 2 
290 2 326 2 97 2 
967 2 1256 2 
954 2 565 2 
1223 2 1040 2 
802 2 1167 2 
57 2 279 2 
1415 2 326 2 
554 2 967 2 
257 2 326 2 
1435 2 57 2 
502 2 1167 2 
711 2 1223 2 
290 2 813 2 967 2 990 2 
290 2 813 2 789 2 967 2 990 2 
417 2 290 2 967 2 
290 2 561 2 967 2 
1345 2 464 2 418 2 342 2 
1103 2 801 2 184 2 647 2 
304 2 296 2 1103 2 801 2 184 2 647 2 
456 2 565 2 1103 2 184 2 1416 2 1320 2 
1332 2 182 2 
456 2 1103 2 184 2 1249 2 
1201 2 57 2 
707 2 326 2 
196 2 1223 2 
702 2 1167 2 
326 2 420 2 1167 2 
326 2 1167 2 1250 2 
116 2 326 2 1167 2 
326 2 56 2 1167 2 
1083 2 1103 2 184 2 721 2 619 6 987 2 1430 2 1395 6 
15 2 967 2 
1288 2 1343 2 865 2 927 2 14 2 610 2 794 2 16 2 260 2 991 6 1107 4 416 2 415 2 1271 2 1433 2 263 4 1161 2 912 2 
290 2 1405 2 
114 2 
810 2 998 6 1084 2 1359 2 716 2 1269 2 455 2 1270 4 1272 2 818 4 457 26 118 2 1369 2 21 2 22 26 302 2 1195 2 1099 2 1018 2 27 2 477 8 308 2 1295 2 1028 2 1032 2 230 2 665 2 753 2 754 2 144 2 1386 2 41 2 42 2 405 6 1310 2 154 2 955 4 765 2 494 2 582 2 583 6 958 2 675 2 254 2 768 2 769 4 861 2 679 2 1049 6 1141 2 430 2 1232 4 172 2 779 2 181 2 780 2 1410 4 1149 4 338 2 75 4 521 2 520 2 339 2 524 4 977 2 883 2 527 2 623 2 1353 2 893 2 797 2 800 2 353 2 1437 2 
810 2 998 6 1084 2 1359 2 716 2 1269 2 455 2 1270 4 1272 2 818 4 1274 2 908 2 457 26 118 2 1369 2 21 2 22 26 302 2 1195 2 1099 2 1018 2 27 2 477 8 308 2 1295 2 1028 2 1032 2 230 2 665 2 753 2 754 2 38 2 144 2 1386 2 41 2 42 2 405 6 1310 2 154 2 955 4 765 2 494 2 582 2 583 6 958 2 675 2 254 2 768 2 769 4 861 2 679 2 1049 6 1141 2 430 2 1232 4 172 2 779 2 181 2 780 2 1410 6 1149 4 338 2 75 4 521 2 339 2 524 4 977 2 527 2 344 2 345 2 623 2 893 2 797 2 800 2 353 2 283 2 1437 2 
942 2 
380 2 20 2 
248 4 494 2 450 4 497 2 1358 2 451 10 1401 6 414 2 717 2 549 4 323 2 457 6 821 2 60 4 297 2 1049 4 1323 4 732 2 1232 2 176 2 872 2 1146 2 22 12 376 2 1148 2 563 8 24 2 1018 2 338 2 515 2 75 2 1104 6 525 2 227 2 612 2 85 2 786 8 1300 2 983 4 389 2 390 2 1072 2 141 2 665 2 533 4 791 2 1304 2 792 2 1035 2 572 4 144 2 574 2 1211 2 623 2 846 2 797 2 1432 2 247 2 542 2 1396 6 
248 4 494 2 450 4 497 2 1358 2 451 10 1401 6 414 2 717 2 549 4 323 2 457 6 821 2 60 4 297 2 1049 4 682 2 259 2 1323 4 1232 2 732 2 176 2 872 2 1146 2 22 12 1148 2 563 8 24 2 1018 2 338 2 515 2 75 2 1104 8 340 4 525 2 227 2 612 2 85 2 786 8 1300 2 983 4 389 2 390 2 1072 2 141 2 665 2 533 4 791 2 1304 2 1035 2 572 4 144 2 574 2 195 2 1211 2 623 2 846 2 797 2 1432 2 247 2 542 2 1396 8 
248 2 60 4 1035 2 1104 2 1211 2 1358 2 1401 2 1323 4 525 2 732 2 846 2 612 2 549 2 85 2 247 2 542 2 821 2 533 2 
248 4 494 2 450 4 497 2 1358 2 451 6 1401 4 414 2 717 2 549 4 323 2 457 6 821 2 60 4 297 2 1049 4 1323 4 732 2 1232 2 176 2 872 2 1146 2 22 12 376 2 1148 2 563 4 24 2 1018 2 338 2 515 2 75 2 1104 6 525 2 227 2 612 2 85 2 786 4 1300 2 983 4 390 2 1072 2 141 2 665 2 533 4 791 2 1304 2 792 2 1035 2 572 4 144 2 574 2 195 2 1211 2 623 2 846 2 797 2 1432 2 247 2 542 2 1396 6 
248 4 494 2 450 4 497 2 1358 2 451 6 1401 6 414 2 717 2 549 4 323 2 457 6 821 2 60 4 297 2 1049 4 1323 4 732 2 1232 2 176 2 872 2 1146 2 22 12 376 2 1148 2 563 4 24 2 1018 2 338 2 515 2 75 2 1104 4 525 2 227 2 612 2 85 2 786 4 1300 2 983 4 390 2 1072 2 141 2 665 2 533 4 791 2 1304 2 792 2 1035 2 572 4 144 2 574 2 1211 2 623 2 846 2 797 2 400 2 1432 2 247 2 542 2 1396 6 
248 4 494 2 450 4 497 2 1358 2 451 6 1401 6 414 2 717 2 549 4 323 2 457 6 821 2 60 4 297 2 1049 4 1323 4 732 2 1232 2 176 2 872 2 1146 2 22 12 376 2 1148 2 563 8 24 2 1018 2 338 2 515 2 75 2 1104 6 525 2 227 2 612 2 85 2 786 4 1300 2 983 4 389 2 390 2 1072 2 141 2 665 2 533 4 791 2 1304 2 792 2 1035 2 572 4 144 2 574 2 1211 2 623 2 846 2 797 2 1432 2 247 2 542 2 1396 6 
248 4 494 2 450 4 497 2 1358 2 451 10 1401 8 414 2 717 2 549 4 323 2 457 6 821 2 60 4 297 2 1049 4 1323 4 1232 2 732 2 176 2 872 2 1146 2 22 12 376 2 1148 2 563 8 24 2 1018 2 338 2 515 2 75 2 1104 6 525 2 227 2 612 2 85 2 786 8 1300 2 983 4 389 2 390 2 1072 2 141 2 665 2 533 4 791 2 1304 2 792 2 1035 2 572 4 144 2 574 2 1211 2 623 2 846 2 797 2 400 2 1432 2 247 2 542 2 1396 8 
248 4 494 2 450 4 497 2 1358 2 451 10 1401 6 414 2 717 2 549 4 323 2 457 6 821 2 60 4 297 2 1049 4 1323 4 732 2 1232 2 176 2 872 2 1146 2 22 12 376 2 1148 2 563 8 24 2 1018 2 338 2 515 2 75 2 1104 6 525 2 227 2 612 2 85 2 786 8 1300 2 983 4 389 2 390 2 1072 2 141 2 665 2 533 4 791 2 1304 2 792 2 1035 2 572 4 144 2 574 2 1211 2 623 2 846 2 797 2 1432 2 247 2 542 2 1396 6 
1264 1 1084 2 717 4 1269 2 549 4 718 6 1270 4 1086 2 1274 2 363 6 555 2 371 2 732 2 22 46 376 2 563 2 1097 2 24 4 1099 2 1102 2 381 2 1104 4 1105 6 227 2 1295 2 1300 2 390 2 230 2 1303 2 233 1 1304 2 753 2 754 2 392 2 572 4 40 1 574 2 41 2 42 2 241 2 1308 7 400 4 405 6 247 2 248 4 582 2 583 8 254 2 414 2 768 2 769 4 60 4 1141 2 1323 4 966 6 1143 8 777 2 69 2 1146 2 780 2 1148 2 1149 4 75 4 81 2 83 6 612 2 85 2 1338 6 983 8 791 2 793 2 623 2 797 2 806 2 807 2 450 6 998 6 1358 2 451 2 1359 2 815 2 455 2 1180 1 640 6 457 24 821 2 1366 2 297 2 823 10 298 6 1369 2 1190 6 123 4 302 2 1373 2 833 6 1018 2 656 6 1200 1 477 4 1378 2 308 2 141 2 312 2 665 2 1383 2 1035 2 315 2 144 2 1211 2 846 2 1214 2 317 1 149 2 492 1 1396 12 494 2 497 2 1401 8 675 2 162 2 323 4 679 2 1049 6 1232 4 174 2 176 2 872 2 509 6 181 2 690 4 1410 6 513 2 338 2 1056 2 515 2 1412 1 521 12 339 4 524 2 525 2 1069 1 695 7 527 2 1246 6 1072 2 189 2 345 2 533 4 1251 2 892 2 893 2 709 2 1431 6 1432 2 542 2 1437 2 204 6 896 6 
807 2 450 6 998 6 451 2 1084 2 1358 2 815 2 1359 4 717 4 1269 2 549 4 718 6 455 2 640 6 1270 4 1086 2 1274 2 363 6 457 26 821 2 1366 2 297 2 823 10 555 2 298 6 371 2 1369 2 732 2 1190 6 123 4 302 2 22 48 1373 2 833 6 376 2 1097 2 563 6 24 4 1099 4 1018 2 1102 2 656 6 381 2 1104 8 1023 2 477 8 1378 2 1105 6 308 2 227 2 1295 2 1300 2 230 4 389 4 390 2 141 2 312 2 1383 2 665 2 1303 2 1304 2 754 2 753 2 392 2 1035 2 315 2 572 4 144 2 574 2 1211 2 41 2 42 2 241 2 846 2 1214 2 149 2 247 2 405 6 1396 12 955 2 248 4 494 2 582 2 497 2 583 8 1401 8 162 2 254 2 675 2 414 2 323 4 768 2 769 4 679 2 60 4 1141 2 1049 6 1323 4 966 6 1232 4 1143 8 174 2 69 2 777 2 176 2 872 2 1146 2 509 6 181 2 690 4 780 2 1148 2 1410 6 513 2 1149 4 338 2 515 2 1056 2 75 4 521 12 339 4 81 2 524 2 83 6 525 2 784 2 612 2 85 2 1338 6 1246 6 527 2 983 8 1072 2 189 2 533 4 345 2 791 2 1251 2 793 2 892 2 623 2 709 2 893 2 797 2 1431 6 1432 2 542 2 1437 2 896 6 204 6 806 2 
807 2 450 6 998 6 1084 2 451 6 1358 2 815 2 1359 4 717 4 1269 2 549 4 718 6 455 2 640 6 1270 4 1086 2 1274 2 363 6 457 26 821 2 1366 2 297 2 823 10 555 2 298 6 371 2 1369 2 732 2 1190 6 123 4 302 2 22 48 1373 2 833 6 376 2 1097 2 563 6 24 4 1099 4 1018 2 1102 2 656 6 381 2 1104 8 1023 2 477 8 1378 2 1105 6 308 2 227 2 1295 2 1300 2 230 4 389 4 390 2 141 2 312 2 1383 2 665 2 1303 2 1304 2 754 2 753 2 392 2 1035 2 315 2 572 4 144 2 574 2 1211 2 41 2 42 2 241 2 846 2 1214 2 149 2 247 2 405 6 1396 12 955 2 248 4 494 2 497 2 582 2 583 8 1401 8 162 2 254 2 675 2 414 2 323 4 768 2 769 4 679 2 60 4 1141 2 1049 6 1323 4 966 6 1232 4 1143 8 174 2 69 2 777 2 176 2 872 2 1146 2 509 6 181 2 690 4 780 2 1148 2 1410 6 513 2 1149 4 338 2 515 2 1056 2 75 4 521 12 339 4 81 2 524 2 83 6 525 2 784 2 612 2 85 2 786 4 1338 6 1246 6 527 2 983 8 1072 2 189 2 533 4 345 2 791 2 1251 2 793 2 892 2 623 2 709 2 893 2 797 2 1431 6 1432 2 542 2 1437 2 896 6 204 6 806 2 
1084 2 717 4 1269 4 549 4 718 12 1270 4 1086 2 1274 2 363 6 13 6 555 2 371 2 732 2 216 2 22 52 376 2 563 6 1097 2 24 4 1099 4 1102 2 381 2 1104 10 1105 6 227 2 1295 4 1300 2 390 2 389 4 230 4 934 2 935 2 1303 2 1304 2 753 2 754 2 392 2 572 4 574 2 41 2 42 2 241 2 400 2 405 8 247 2 955 2 248 4 249 6 582 2 583 12 54 2 254 2 414 2 768 2 769 4 60 4 1141 2 1323 4 966 6 1143 8 777 2 68 2 69 2 1146 2 780 4 1148 2 1149 6 75 4 435 2 81 2 83 6 784 2 612 2 786 4 85 2 1338 6 983 8 791 2 793 2 621 6 623 2 989 6 797 2 806 2 807 2 450 6 998 8 1174 6 1358 2 451 6 1359 4 815 2 455 2 640 12 1362 6 457 24 821 2 1366 2 297 2 823 8 298 6 1369 2 1190 12 123 4 302 2 1373 2 833 12 1018 2 656 6 1023 2 477 10 1378 2 308 2 141 2 312 2 665 2 1383 2 1035 2 315 2 144 2 1211 2 846 2 1214 2 149 2 1396 16 494 2 673 6 497 2 159 6 1401 10 675 2 162 2 323 4 1404 2 679 4 1049 6 1232 4 174 2 176 2 872 2 509 6 181 2 690 4 1410 6 513 2 338 2 515 2 521 10 339 4 524 4 525 2 1244 6 527 2 1246 12 1072 2 189 2 345 2 533 4 1251 2 195 2 892 2 893 2 709 2 1431 12 1432 2 1261 2 542 2 1437 2 204 6 896 6 
248 4 450 2 497 2 1104 6 451 4 1358 2 1401 6 525 2 717 2 414 2 612 2 786 4 1300 2 983 2 389 2 141 2 821 2 533 4 791 2 1304 2 60 2 572 2 574 2 1211 2 1323 2 732 2 846 2 176 2 1432 2 1146 2 22 4 376 2 1396 4 1148 2 563 6 
450 2 998 6 1358 2 1084 2 451 2 717 2 455 2 1270 4 1181 2 1274 2 457 24 646 2 821 2 114 2 823 2 1369 2 732 2 302 2 22 28 376 2 563 6 1018 2 1104 6 29 2 308 2 1300 2 1030 2 389 2 390 2 141 2 665 2 1304 2 753 2 572 2 144 2 574 2 41 2 1211 2 42 2 846 2 405 6 1396 4 248 4 406 2 494 2 582 2 497 2 583 8 1401 6 675 2 254 2 414 2 768 2 769 4 859 2 679 3 60 2 1049 6 1141 2 1323 2 1232 4 176 2 1146 2 181 2 780 3 1410 6 1148 2 1149 4 1333 2 338 2 75 4 1056 2 521 4 339 2 524 3 525 2 612 2 527 2 983 2 1162 3 533 4 345 2 791 2 1252 2 623 2 893 2 797 2 1432 2 1437 2 
1146 2 677 2 414 2 
1146 2 677 2 414 2 
450 4 998 2 1084 2 1358 2 451 6 1359 4 717 4 549 4 455 2 1270 4 1272 4 1274 2 457 16 823 2 1369 2 1011 4 732 2 123 2 22 24 302 2 1097 2 563 6 24 4 923 2 1099 4 1018 2 656 2 25 2 837 2 1104 12 477 4 308 2 227 2 1206 2 230 4 389 4 665 2 486 2 754 4 753 2 1305 2 572 2 144 2 41 2 1211 4 42 2 400 4 403 2 247 2 405 2 950 2 52 4 1396 16 248 4 321 2 494 2 582 2 583 2 1401 12 675 2 254 2 414 4 323 2 768 2 769 4 677 2 170 2 60 2 1049 6 1141 2 868 2 1323 2 1232 4 174 2 777 2 176 2 1146 6 690 2 1410 6 337 2 338 2 515 2 75 4 432 2 77 2 521 4 339 6 1242 2 524 2 85 2 786 4 527 2 983 4 1072 2 345 2 533 4 791 2 277 2 195 4 623 2 893 2 797 2 1437 2 1436 2 
93 2 1197 2 656 2 25 2 521 2 823 2 868 2 623 2 371 2 241 2 20 2 22 4 542 2 690 2 457 2 1133 2 486 2 
450 4 998 2 1084 2 1358 2 451 6 1359 4 717 4 549 4 455 2 1270 4 1272 4 1274 2 457 16 297 2 1369 2 1011 4 732 2 215 2 123 2 22 24 302 2 1097 2 563 6 24 4 923 2 1099 4 1018 2 656 2 25 2 837 2 1104 12 477 4 308 2 227 2 1206 4 230 4 389 4 665 2 486 2 754 4 753 2 570 2 1305 2 572 2 144 2 41 2 1211 4 42 2 400 4 247 2 405 2 52 4 1396 16 248 4 321 2 494 2 582 2 583 2 1401 12 675 2 254 2 414 4 323 4 768 2 769 4 1228 2 677 2 170 2 60 2 1049 6 1141 2 868 2 1323 2 1232 4 174 2 595 2 777 2 176 2 1146 6 1410 6 338 2 515 2 75 4 432 2 521 2 339 6 1242 2 524 4 85 2 786 4 527 2 983 4 1072 2 345 2 533 4 791 2 1424 2 277 2 195 4 623 2 893 2 797 2 1437 2 1436 2 
450 4 998 2 1084 2 1358 2 451 6 1359 4 717 4 549 4 455 2 1270 4 1272 4 1363 2 1274 2 457 16 297 2 369 2 823 2 1369 2 1011 4 732 2 123 2 22 24 302 2 1097 2 563 6 24 4 923 2 1099 4 1018 2 226 2 656 2 25 2 837 2 1104 12 477 4 308 2 227 2 1206 2 230 4 389 4 665 2 486 2 754 4 753 2 1305 2 572 2 144 2 41 2 1211 4 42 2 400 4 247 2 405 2 52 4 1396 16 248 4 321 2 494 2 582 2 583 2 1401 12 675 2 254 2 414 4 323 4 768 2 769 4 677 2 170 2 60 2 1049 6 1141 2 868 2 1323 2 1232 4 174 2 777 2 176 2 1146 6 690 2 1410 6 338 2 515 2 75 4 1413 2 432 2 521 4 339 6 1242 2 524 2 85 2 786 4 527 2 983 4 1072 2 275 2 345 2 533 4 791 2 277 2 195 4 623 2 893 2 797 2 1437 2 1436 2 
1263 16 901 2 1084 2 5 2 903 2 1269 20 1270 6 361 2 1273 2 1086 2 1274 4 364 1 724 2 211 14 725 2 553 2 368 3 1093 2 17 2 1283 2 19 2 216 2 21 2 22 40 559 24 560 2 220 2 377 8 562 2 738 2 1100 8 1289 4 27 2 29 2 1293 2 31 4 744 2 1295 46 34 2 1302 2 934 2 935 2 937 2 751 2 938 4 235 2 754 4 753 4 939 2 237 2 41 2 576 2 1307 2 43 2 240 12 399 3 244 4 46 6 761 2 405 14 1310 2 952 2 956 2 1314 2 583 28 1125 2 958 2 251 2 252 2 253 4 254 4 586 4 1316 6 768 4 960 2 769 6 1131 2 1132 2 588 2 1135 2 421 2 63 2 773 10 1141 2 1324 4 68 2 1327 10 1328 2 596 2 1330 2 779 2 1147 2 781 2 780 16 970 4 1149 12 1150 2 431 2 1333 2 603 2 75 4 76 2 972 18 1335 2 266 2 435 2 1154 2 1155 2 978 8 785 2 271 4 87 4 438 14 1159 2 440 2 984 2 617 2 1162 2 276 4 1346 16 1348 2 94 2 1349 2 447 2 623 2 797 2 800 2 626 2 628 2 99 2 1356 2 630 2 1357 2 285 2 803 2 103 2 449 40 1171 2 807 4 289 4 998 14 104 2 291 12 1175 2 1001 6 815 2 1360 2 1003 4 111 6 1179 2 455 4 819 6 645 2 1005 4 457 30 1006 2 646 2 822 4 1184 2 1364 10 117 2 1367 2 118 2 1369 2 1012 6 470 8 301 3 831 2 471 2 836 2 1018 2 1199 4 1020 2 1377 4 477 44 135 2 1034 2 484 4 665 2 664 2 487 2 488 2 144 2 1386 14 1210 2 316 2 847 2 1388 10 669 2 148 38 1390 2 1392 4 1393 4 151 2 150 2 152 2 153 2 154 2 494 2 495 3 1042 14 160 2 162 2 675 2 1227 6 1045 2 500 4 859 2 1404 2 678 4 862 2 679 19 1046 2 327 2 1407 4 1230 2 681 2 1049 6 171 2 1050 4 1232 4 1233 2 173 10 178 2 508 8 874 2 1235 2 181 2 1236 2 689 4 1410 12 513 2 338 2 517 2 519 2 521 2 339 2 524 19 1417 2 1071 3 527 2 1419 2 532 2 345 4 704 2 1248 2 347 2 1074 2 348 2 1076 4 892 2 709 2 1078 4 1080 2 353 2 1261 2 1437 4 
517 2 998 2 583 2 1175 2 524 2 976 2 1155 2 903 2 1295 6 1419 2 457 2 679 2 235 2 1093 2 399 2 1388 4 173 2 1327 2 405 2 22 2 181 2 780 2 952 2 1149 2 
517 2 998 2 583 2 1175 2 524 2 976 2 1155 2 903 2 1295 6 1419 2 457 2 679 2 235 2 1093 2 399 2 1388 4 173 2 1327 2 405 2 22 2 181 2 780 2 952 2 1149 2 
517 2 998 2 583 2 1175 2 524 2 976 2 1155 2 903 2 1295 6 1419 2 457 2 679 2 235 2 1093 2 399 2 1388 4 173 2 1327 2 405 2 22 2 181 2 780 2 952 2 1149 2 
1100 6 1335 4 250 2 583 2 1001 2 524 3 1225 2 383 2 903 2 978 2 586 2 1003 2 271 2 1227 4 1071 3 1159 4 530 4 457 4 679 3 1346 5 276 2 1407 2 1209 2 891 2 1076 2 147 2 240 4 1233 4 244 2 506 2 1215 3 301 3 508 2 125 2 22 10 631 2 181 2 335 2 781 4 377 2 
1100 6 1335 4 250 2 583 2 1001 2 524 2 1225 2 383 2 903 2 978 2 586 2 1003 2 271 2 111 2 1227 4 1071 2 1159 4 530 4 457 4 679 2 1346 4 276 2 1407 2 1209 2 891 2 1076 2 147 2 240 4 1233 4 244 2 506 2 1215 2 301 2 508 2 125 2 22 10 631 2 181 2 335 2 781 4 689 2 377 2 1313 2 
1100 6 1335 4 250 2 583 2 1001 2 524 2 1225 2 383 2 903 2 978 2 586 2 1003 2 271 2 111 2 1227 4 1071 2 1159 4 530 4 457 4 679 2 1346 4 276 2 1407 2 1209 2 891 2 1076 2 147 2 240 4 1233 4 244 2 506 2 1215 2 301 2 508 2 125 2 22 10 631 2 181 2 335 2 781 4 689 2 377 2 1313 2 
1100 6 1335 4 250 2 583 2 1001 2 524 2 1225 2 383 2 903 2 978 2 586 2 1003 2 271 2 111 2 1227 4 1071 2 1159 4 530 4 457 4 679 2 1346 4 276 2 1407 2 1209 2 891 2 1076 2 147 2 240 4 1233 4 244 2 506 2 1215 2 301 2 508 2 125 2 22 10 631 2 181 2 335 2 781 4 689 2 377 2 1313 2 
1100 6 1335 4 250 2 583 2 1001 2 524 2 1225 2 383 2 903 2 978 2 586 2 1003 2 271 2 111 4 1227 4 1071 2 1159 4 530 4 457 4 679 2 1346 4 276 2 1407 2 1209 2 891 2 1076 2 147 2 240 4 1233 4 244 2 506 2 1215 2 301 2 508 2 125 2 22 10 631 2 181 2 335 2 781 4 689 4 377 2 1313 4 
758 2 943 2 318 2 1302 2 1182 2 844 2 
878 2 318 2 1386 2 1043 2 452 2 485 2 863 2 
207 2 454 1 1381 2 857 1 640 2 1245 2 457 8 1421 2 531 2 841 1 1111 2 728 1 144 2 537 2 795 2 774 2 332 2 1429 2 122 1 374 2 507 2 22 10 102 2 473 2 378 2 287 2 
1198 2 978 6 6 4 1003 6 271 6 1178 2 111 4 1108 2 87 2 1227 4 858 2 457 6 1346 16 1407 2 618 2 1348 2 1076 6 1210 2 1050 2 733 2 120 2 240 12 1012 4 244 6 508 6 22 6 689 2 377 6 224 2 1313 2 
62 2 1139 4 1315 2 1142 2 299 2 1233 2 1226 1 373 2 816 2 1159 2 982 7 22 1 100 2 781 2 336 2 457 1 1055 2 346 2 
62 4 1139 4 1142 2 1315 4 299 2 1233 2 373 2 816 2 1159 2 982 6 100 4 781 2 336 2 1055 2 346 2 
62 8 1139 4 1142 8 1315 8 299 2 1233 2 1226 1 373 2 816 2 1159 2 982 10 22 1 100 8 781 2 336 2 457 1 1055 6 346 2 
62 2 1139 2 1315 2 299 2 1233 2 373 2 816 2 1159 2 982 2 100 2 781 2 336 2 346 2 
994 6 206 4 1173 124 108 90 1085 2 636 4 455 8 719 1 1270 112 1274 58 295 4 210 17 457 134 1007 2 552 11 1365 6 12 6 119 10 1095 8 652 4 828 6 219 4 22 150 1286 4 734 92 472 6 564 16 741 6 1022 6 131 16 932 4 1106 12 1025 4 310 2 137 18 1031 4 143 2 314 4 1208 2 393 2 1387 8 1116 2 1309 8 946 24 1117 2 47 24 578 4 579 84 1311 6 763 4 1217 2 852 4 155 24 580 2 1218 6 1041 8 156 4 674 10 157 6 410 4 1125 8 1222 34 853 42 167 24 768 14 255 10 769 88 325 10 1317 8 1318 16 591 24 680 24 864 12 328 2 423 6 424 10 504 2 428 22 1051 2 179 10 180 6 687 4 598 10 262 4 688 6 511 8 1410 248 1150 8 607 28 608 18 78 26 1336 4 693 4 975 42 269 2 526 90 980 6 270 6 1156 4 1070 6 614 10 439 6 88 6 187 50 886 8 616 4 345 58 888 6 91 6 445 2 1426 2 1352 16 1077 6 351 4 538 2 199 2 1427 6 798 4 799 6 282 4 1082 36 993 26 627 5 1356 8 1434 2 1170 4 1437 14 1262 2 
1218 2 674 2 4 2 546 2 1125 2 1126 2 1173 6 1267 4 161 2 167 2 498 2 768 2 255 2 455 2 1270 20 8 2 769 20 325 2 676 6 1317 2 1274 2 210 2 1318 4 457 44 1319 4 212 2 591 2 913 2 1007 2 328 2 424 2 61 2 12 2 426 2 651 2 119 2 870 4 468 2 467 2 1053 2 828 4 686 2 1285 2 1192 2 179 2 219 2 22 46 598 2 126 4 511 6 222 2 221 2 1410 44 601 2 1150 2 564 4 74 2 607 38 1022 2 1064 2 1067 2 783 2 133 2 437 2 134 2 310 2 1027 2 1156 2 137 2 614 2 88 2 274 2 90 2 345 2 391 2 91 2 1426 2 393 2 1352 4 1077 2 146 2 1391 2 45 2 577 2 946 2 1117 2 1082 2 1121 2 627 2 1356 2 629 2 1437 2 
994 4 206 2 546 2 1173 24 636 4 359 32 455 2 1270 44 1274 28 210 10 723 8 457 70 458 4 1007 2 12 4 1365 4 1277 16 917 4 652 4 828 2 1016 2 22 78 919 8 734 24 472 4 564 10 926 4 741 4 1022 4 131 8 931 8 932 4 1106 14 1025 4 133 10 310 2 137 10 1205 4 391 2 314 4 1208 2 393 2 1213 16 47 8 579 24 1121 10 1311 4 763 4 1217 2 852 4 1041 4 1218 4 157 4 674 4 410 4 1125 2 1222 30 853 8 1127 2 1129 2 768 6 255 4 769 36 1318 10 589 4 1047 2 328 2 423 4 61 10 424 4 504 2 179 6 180 4 598 4 688 4 511 6 1410 104 1150 2 607 14 1336 4 693 4 975 16 980 4 270 4 185 2 1070 4 439 4 88 4 187 8 886 4 90 2 345 30 91 4 445 2 1164 4 1426 2 1352 10 1077 4 351 4 197 8 798 4 799 4 1082 6 1356 2 1437 6 203 4 1438 2 
580 2 206 2 1218 4 1041 4 674 2 1125 2 546 2 1173 8 1222 6 1085 2 768 2 455 2 255 2 1270 14 769 14 1274 12 1318 6 210 2 457 26 552 2 1007 2 328 2 424 2 12 4 428 10 1095 2 828 2 179 2 1286 2 22 28 598 2 511 4 1410 40 1150 2 564 6 607 14 1022 4 131 6 310 2 137 2 88 4 616 2 345 12 91 4 1426 2 393 2 1352 6 1077 4 351 2 146 2 538 2 1116 2 1117 2 1082 2 1356 2 627 2 1434 2 1437 2 852 2 
1165 2 

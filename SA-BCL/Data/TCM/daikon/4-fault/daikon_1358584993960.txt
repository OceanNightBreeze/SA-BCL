#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V ERROR utilMDE.Assert$AssertionException (195,1154) 881 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V ERROR java.lang.NullPointerException 69 928 (317,528) (614,624) (614,624) 
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V ERROR java.lang.NullPointerException 69 928 (317,528) (614,624) (614,624) 
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR java.lang.NullPointerException 69 928 (317,528) (614,624) (614,624) 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR utilMDE.Assert$AssertionException (195,1154) 881 992 29 18 892 675 847 716 (1144,1173) 208 (967,1138) (1144,1173) 1017 (967,1138) 836 979 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR utilMDE.Assert$AssertionException (195,1154) 881 992 29 18 892 675 847 716 (1144,1173) 208 (967,1138) (1144,1173) 1017 (967,1138) 836 979 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR utilMDE.Assert$AssertionException (195,1154) 881 992 29 18 892 675 847 716 (1144,1173) 208 (967,1138) (1144,1173) 1017 (967,1138) 836 979 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V ERROR java.lang.NullPointerException 69 928 (317,528) 
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V ERROR java.lang.NullPointerException 69 928 (317,528) (317,528) 
daikon.test.diff.XorVisitorTester:testXor()V ERROR java.lang.NullPointerException 69 928 (317,528) 
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 42 651 325 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 1292 1219 162 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 1292 1219 162 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 1292 1219 162 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 217 62 1292 1219 162 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.Quant:memberOf(J[J)Z
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
utilMDE.MathMDE:mod_positive(JJ)J
jtb.JavaParser:jj_3R_100()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParser:jj_3R_55()Z
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3R_136()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.PptName:getFullClassName()Ljava.lang.String;
jtb.JavaParser:jj_3_10()Z
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice1:num_samples()I
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3R_53()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.test.FormatTestCase:passes()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.Quant:setEqual([I[I)Z
jtb.JavaCharStream:getEndLine()I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:toString([Ljava.lang.Object;Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_163()Z
jtb.JavaCharStream:readChar()C
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_47()Z
daikon.PptName:getSignature()Ljava.lang.String;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.VarInfoName:esc_name()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern([J)[J
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.Quant:memberOf(F[F)Z
daikon.diff.Diff:findNormalPpt(Ldaikon.PptMap;Ldaikon.PptTopLevel;)Ljava.util.List;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:jj_3R_104()Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:subsetOf([J[J)Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_2_15(I)Z
daikon.PptName:isCombinedExitPoint()Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
jtb.JavaParser:jj_3R_149()Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_80()Z
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfo:relate_var()V
daikon.Quant:lexGT([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.ProglangType:isIntegral()Z
jtb.JavaParser:jj_2_21(I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
jtb.JavaParser:jj_3_13()Z
utilMDE.ArraysMDE:sum([[D)D
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_106()Z
utilMDE.LimitedSizeIntSet:add(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3_28()Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_56()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.VarInfo:isPointer()Z
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_126()Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParser:jj_3R_51()Z
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.Quant:pairwiseEqual([I[I)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3R_68()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.JavaParser:jj_2_17(I)Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.ModBitTracker:num_sets()I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.PptSlice2:arity()I
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_107()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.Invariant:logOn()Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.PptName:toString()Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:lt(II)Z
daikon.ValueTuple:tuplemodHasModified(I)Z
utilMDE.MathMDE:pow(II)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.FormatCommand:getNumCommands()I
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_27()Z
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_89()Z
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_109()Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([Ljava.lang.Object;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
jtb.JavaParser:jj_3R_116()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
jtb.JavaParser:jj_3R_210()Z
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.Quant:noDups([I)Z
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_2_10(I)Z
daikon.Quant:memberOf(I[I)Z
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:jj_3R_134()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_122()Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:missing_numbers([I)[I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_124()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
utilMDE.ArraysMDE:sum([I)I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_5(I)Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.UpperBound:enabled()Z
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName:hashCode()I
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
jtb.JavaParser:jj_3R_125()Z
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.ArraysMDE:indexOf([ZZ)I
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
utilMDE.WeakHasherMap:size()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3_35()Z
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lte(II)Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([D[F)Z
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.ProglangType:isPseudoArray()Z
daikon.VarComparabilityImplicit:alwaysComparable()Z
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParser:jj_3_25()Z
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.Quant:subsetOf([S[S)Z
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:jj_3_5()Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:eltsGT([II)Z
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_120()Z
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.JavaParser:jj_3R_102()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.ProglangType:isArray()Z
jtb.JavaParser:jj_2_4(I)Z
daikon.VarInfoName.ElementsFinder:inPre()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_105()Z
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.ModBitTracker:num_samples()I
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.Quant:pairwiseGTE([I[I)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:gcd_differences([I)I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.Quant:concat([I[I)[I
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_135()Z
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParser:jj_3R_133()Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:new_ppt()V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_16()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.ProglangType:dimensions()I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:simplify_name()Ljava.lang.String;
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_3_20()Z
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_3R_69()Z
jtb.JavaParser:jj_3R_137()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.Ppt:Ppt()V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.Quant:eq(DD)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
utilMDE.Intern:intern([D)[D
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Invariant:justified()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_73()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.JavaParser:jj_3_1()Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3_17()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_14()Z
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.Quant:gte(II)Z
daikon.inv.Invariant:getConfidence()D
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_180()Z
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Quant:eltwiseLTE([I)Z
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_98()Z
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.FormatCommand:getCommand()I
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eltwiseEqual([I)Z
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
daikon.VarInfo:esc_name()Ljava.lang.String;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.diff.Node:Node()V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext1()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_3_18()Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.JavaParser:jj_3_30()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
daikon.Quant:eltsLT([II)Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_86()Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.ProglangType:isScalar()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_2_13(I)Z
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.Quant:eltsLTE([II)Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.Quant:gt(II)Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
jtb.JavaParser:jj_3R_101()Z
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_81()Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_117()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_123()Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.PptSlice1:arity()I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_3R_61()Z
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.NodeOptional:present()Z
jtb.JavaCharStream:getBeginLine()I
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
daikon.Quant:eltwiseGT([I)Z
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:lexLTE([I[I)Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_15()Z
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_3_4()Z
jtb.JavaParser:jj_2_1(I)Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:indexOf([II)I
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_119()Z
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_60()Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.Quant:eq(JJ)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.NodeListOptional:present()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:jj_3R_110()Z
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_169()Z
daikon.inv.Invariant:prob_and(DD)D | CONSTANT | 8716 | 1 -> -1
utilMDE.MathMDE:sign(I)I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.JavaParser:jj_3R_108()Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltwiseGTE([I)Z
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName:simplify_name()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_2_3(I)Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParser:jj_3R_75()Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.Quant:pairwiseSquare([I[I)Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:jj_2_18(I)Z
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_16(I)Z
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_3R_48()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode; | CONDITION | 26193 | if (x) -> if (!x)
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.Quant:eltsEqualIndex([I)Z
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.Quant:isReverse([I[I)Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:ne(II)Z
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:name()Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:jj_3R_49()Z
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.WeakHasherMap:processQueue()V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
jtb.JavaParser:jj_3_36()Z
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Debug:logOn()Z
daikon.Quant:lexGTE([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_3()Z
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.InvMap:InvMap()V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.JavaParser:jj_3R_118()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:jj_3R_85()Z
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_114()Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.JavaParser:jj_2_36(I)Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaParser:jj_3R_72()Z
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_scan_token(I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:eq(FF)Z
utilMDE.ArraysMDE:sum([[I)I
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
jtb.JavaParser:jj_3R_162()Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
utilMDE.MathMDE:gcd(II)I
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.Quant:eltsNotEqual([II)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eq(II)Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.ValueTuple:size()I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParser:jj_3R_88()Z
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.PptName:isEnterPoint()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_164()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName:applySize()Ldaikon.VarInfoName; | RETURN | 27662 | return null
daikon.Quant:subsetOf([F[D)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_161()Z
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
jtb.JavaParser:jj_3R_52()Z
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.ProglangType:isPointerFileRep()Z
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:subsetOf([I[I)Z
daikon.diff.Node:children()Ljava.util.Iterator;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J | ASSIGN | 32767 | = null
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaCharStream:backup(I)V
jtb.JavaCharStream:getBeginColumn()I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.MathMDE:gcd([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.visitor.TreeFormatter:TreeFormatter()V
utilMDE.OrderedPairIterator:hasNext()Z
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.Quant:intersection([I[I)[I
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
jtb.JavaParser:jj_3R_103()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.JavaParser:jj_3R_99()Z
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.ProglangType:isFloat()Z
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_2_35(I)Z
utilMDE.MathMDE:bitwiseComplement(I)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_74()Z
jtb.JavaParser:jj_3_29()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3R_97()Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.ProglangType:baseIsScalar()Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3R_67()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.Quant:subsetOf([B[I)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.JavaParser:jj_2_12(I)Z
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.Quant:memberOf(S[S)Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.Quant:slice([III)[I
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:jj_3_19()Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.Invariant:prob_or(DD)D
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
utilMDE.ArraysMDE:sum([D)D
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_115()Z
jtb.JavaParser:jj_2_25(I)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.ModBitTracker:num_vars()I
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern:numIntArrays()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaCharStream:FillBuff()V
daikon.ProglangType:baseIsFloat()Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.ArraysMDE:max([I)I
jtb.Token:newToken(I)Ljtb.Token;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfo:name()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.MathMDE:modulus([I)[I
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:eltsGtIndex([I)Z
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
jtb.JavaParser:jj_3R_63()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.ArraysMDE:min([I)I
utilMDE.ArraysMDE:min_max([I)[I
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
654 2 195 2 133 2 1154 2 775 2 778 4 553 2 558 2 241 2 
737 6 1185 2 808 6 243 2 91 6 791 2 570 2 934 2 831 2 157 2 1235 2 
205 2 377 2 589 2 696 2 1313 6 602 2 631 6 195 2 92 6 1154 2 1039 4 676 4 1306 6 
502 4 1262 10 345 8 974 10 789 12 921 10 697 26 140 2 119 2 1058 8 350 2 1267 2 474 4 1077 10 1042 29 587 8 1253 16 327 10 125 16 1254 2 533 2 1314 6 875 4 195 6 1154 6 108 2 1109 4 832 8 64 6 1159 16 
37 6 300 4 
176 2 
358 4 1217 2 745 2 1297 2 1302 2 405 2 1267 2 1268 2 235 2 844 2 642 2 330 4 287 2 680 2 415 2 195 4 848 4 683 2 1154 4 765 2 684 2 374 2 618 2 297 2 997 2 347 2 1118 2 1194 2 1076 2 73 2 654 2 1252 2 479 2 435 2 870 2 388 2 515 2 391 2 130 2 1335 2 592 2 1336 4 557 2 519 2 
337 6 711 6 616 4 973 2 1262 16 342 2 344 6 974 16 345 6 789 22 921 16 697 48 1220 6 70 4 797 2 119 2 904 4 323 4 1143 8 1077 16 146 2 1042 54 1253 32 981 6 327 6 125 32 1333 2 875 2 195 4 1314 4 966 6 931 4 1154 4 1125 4 832 18 442 4 64 4 561 2 1159 32 
410 2 680 2 1188 2 
477 2 65 2 87 2 993 2 982 2 388 2 470 10 1264 2 260 2 1119 2 988 2 699 22 335 2 483 2 
943 2 177 2 1262 2 1014 2 135 2 974 2 789 2 921 2 697 4 186 2 1265 2 1077 2 163 2 1042 6 1289 2 1253 2 327 4 125 2 875 2 1314 2 418 2 832 2 1159 2 
502 2 337 6 1042 16 1253 8 981 6 125 8 1262 4 101 2 974 4 789 4 921 4 697 12 70 4 1125 4 1077 4 671 2 1159 8 
576 4 505 4 507 4 376 2 691 2 255 4 254 2 673 4 1074 4 1188 2 882 2 1302 4 603 10 1092 10 1193 2 1305 14 383 2 26 4 733 4 530 2 550 2 803 4 410 6 214 2 1311 2 1045 2 1177 2 514 4 499 2 680 8 106 2 415 2 218 62 1181 2 1210 2 1069 2 245 4 110 2 1336 4 1011 2 
114 2 176 2 115 2 1281 2 141 2 1096 2 363 2 531 2 784 2 369 2 
357 8 1 2 600 2 273 2 272 2 277 2 838 2 1016 3 923 1 604 6 842 1 1095 1 1099 2 281 2 1100 4 1270 2 449 2 284 24 1103 2 754 2 99 2 1104 1 611 2 103 1 289 2 535 3 104 2 536 2 195 34 107 2 764 2 1025 1 939 2 1110 24 686 2 855 3 1031 2 112 2 941 1 17 3 295 2 296 2 619 2 692 2 469 2 861 5 864 2 1187 32 621 2 946 3 117 16 23 2 1284 2 206 2 379 2 1190 2 950 2 207 2 381 3 549 2 122 32 303 2 955 12 869 2 123 2 210 2 1199 2 28 2 213 2 1202 8 31 2 630 2 706 2 307 2 480 16 392 4 1049 2 1211 2 311 2 397 16 632 1 1212 2 633 2 1126 2 970 2 1131 2 41 2 398 3 319 2 714 1 1300 2 1301 2 1221 16 795 1 798 4 799 2 565 2 639 2 406 4 1142 2 886 1 640 2 495 2 1145 2 1309 12 1312 2 412 4 983 2 331 4 241 2 985 3 57 2 1154 32 569 6 1155 3 1317 4 989 6 1232 2 334 2 500 6 646 2 726 3 575 2 648 1 1071 1 1323 2 1237 1 66 2 67 2 732 2 1327 2 513 2 1329 2 1330 1 826 2 432 2 655 1 656 2 657 2 264 3 1255 3 76 8 590 1 911 2 1009 2 1337 2 669 2 833 4 595 2 
195 2 1019 2 
881 2 195 2 540 2 
1263 2 
1012 30 359 26 1013 4 1015 98 6 2 10 2 11 2 677 2 360 2 361 30 362 2 13 6 1021 4 365 8 366 198 682 2 1023 2 1024 2 368 2 1026 2 1029 26 15 2 1030 4 370 4 685 4 16 66 372 8 688 14 689 2 1032 4 19 4 690 2 693 4 694 2 1037 4 22 2 24 4 698 6 1038 48 382 4 1041 2 701 4 1043 6 385 2 702 4 386 6 32 2 387 8 703 2 704 2 389 2 33 12 1046 2 705 8 1047 2 390 4 707 2 708 2 38 4 396 2 1050 204 40 14 1051 8 710 4 399 54 1053 6 1054 28 400 2 45 198 1055 2 1056 6 401 198 403 160 49 4 48 118 404 20 50 6 715 4 51 192 408 2 53 2 54 4 1060 566 55 432 721 2 56 2 1063 2 413 2 1066 18 58 4 59 2 1067 2 1068 6 63 2 1070 4 727 6 729 12 67 2 419 6 1073 6 421 2 424 2 427 6 72 2 734 2 429 4 735 106 433 22 1078 86 438 2 75 4 738 10 739 2 439 2 740 4 1081 4 440 2 741 2 1084 26 1085 26 441 30 1086 6 82 6 744 12 443 14 85 12 746 2 1088 12 1089 26 1090 4 89 14 90 6 747 52 446 30 93 28 1091 182 748 6 749 2 448 2 94 132 95 2 97 2 1098 8 753 2 98 60 756 4 758 6 759 2 454 2 453 432 455 8 760 8 762 18 1105 4 1106 2 460 2 767 2 463 94 770 46 1112 6 771 2 772 2 773 8 465 2 468 4 467 30 1114 2 1115 46 472 6 118 2 776 2 777 12 473 2 121 4 1120 2 475 328 478 6 126 2 781 2 1123 10 127 2 128 4 129 60 481 2 132 2 484 28 1133 2 485 84 1134 8 134 6 136 2 486 2 137 4 487 8 1135 198 790 2 792 46 488 2 793 2 142 2 800 2 492 2 1140 2 801 2 494 4 493 2 496 2 147 6 497 204 1146 6 805 30 1147 2 807 30 1148 2 1149 10 811 2 149 64 150 6 1151 4 1150 6 813 112 1153 4 1154 10 151 4 153 2 814 4 154 6 815 112 156 4 155 2 158 20 816 2 506 6 1162 26 817 224 508 6 818 198 509 2 819 4 821 6 161 2 511 2 1167 182 1169 6 166 2 517 20 1171 2 830 30 167 2 169 4 171 2 518 2 172 6 834 2 520 4 175 48 174 4 179 26 1174 228 181 2 182 6 183 2 184 20 524 4 185 2 525 2 187 198 841 14 189 6 188 26 1175 198 529 244 843 8 190 2 845 2 532 2 846 4 1178 2 1179 2 194 6 195 10 850 386 851 30 197 2 1182 10 852 22 854 2 853 6 538 6 1183 132 1184 4 539 2 204 12 1186 4 860 24 862 6 541 46 542 20 544 22 545 4 865 336 1191 2 867 290 1195 4 209 2 1198 6 1200 2 1201 6 1203 2 1204 20 873 2 874 4 1208 4 1209 2 219 4 221 4 876 4 555 6 1213 2 226 2 1214 2 1215 6 227 2 880 2 1218 26 1216 4 230 46 232 2 883 4 884 2 234 2 1223 2 236 20 237 10 885 2 1224 6 890 16 891 2 239 6 1225 2 1226 2 894 244 895 2 568 6 571 2 896 2 1234 20 574 2 1233 2 573 2 248 4 249 82 250 2 578 2 898 2 1238 2 581 2 1239 2 1242 4 1241 22 899 2 257 4 584 2 902 6 901 50 261 26 1246 26 1247 12 903 6 585 2 586 2 905 2 1249 6 907 4 908 6 910 2 1256 4 1257 2 265 2 1258 2 912 2 268 2 914 2 594 2 593 6 596 32 915 4 597 74 598 2 918 4 601 24 920 106 275 2 925 12 924 2 280 16 1266 2 283 2 282 2 605 2 608 2 607 2 609 2 288 30 929 70 930 2 932 6 1274 2 290 4 1275 2 933 2 936 4 938 6 940 16 293 2 1278 30 944 2 298 60 620 2 949 2 948 140 1283 376 299 10 1286 16 953 2 954 6 302 28 626 6 625 2 627 4 304 2 959 244 960 6 961 4 1290 2 963 4 629 8 964 6 308 6 309 2 968 12 310 2 969 14 312 6 1293 112 1295 8 314 2 313 8 315 92 1298 198 1296 18 975 28 321 8 977 4 978 6 637 2 1304 6 980 2 1308 2 1310 64 329 4 643 6 333 2 1315 2 1320 6 644 68 645 4 990 12 991 6 338 2 339 2 647 60 1322 2 340 4 341 328 343 2 994 4 346 2 650 12 998 6 999 2 1326 6 348 8 1000 2 351 4 1328 14 659 6 660 6 1005 6 661 192 662 6 1006 4 663 8 666 2 1334 112 1010 2 355 4 670 88 356 2 
1207 2 1101 1 1020 2 1108 2 
8 2 1108 2 
349 2 1261 2 1108 2 1109 2 628 2 1197 2 680 2 
349 2 1108 2 44 2 
1160 2 349 2 1108 2 
1207 2 947 2 952 2 
349 2 1108 2 
612 2 952 2 
1102 2 1108 2 
1207 2 180 2 952 2 
1207 2 674 2 173 2 
1207 2 783 2 263 2 
1207 2 428 2 1180 2 
1207 2 503 2 252 2 
952 2 695 2 
1108 2 1332 2 
199 2 674 2 
783 2 679 2 
823 2 428 2 
889 2 252 2 
952 2 937 2 
252 2 83 2 
1319 2 428 2 
783 2 501 2 
1157 2 674 2 
1207 2 414 2 180 2 952 2 
1207 2 414 2 228 2 180 2 952 2 
1207 2 1271 2 952 2 
1207 2 952 2 906 2 
804 2 1057 2 223 2 145 2 
1127 2 628 2 680 2 516 2 
1127 2 723 2 1261 2 628 2 680 2 516 2 
563 2 349 2 1108 2 1109 2 628 2 680 2 
235 2 306 2 
1109 2 628 2 1250 2 680 2 
456 2 428 2 
794 2 252 2 
757 2 674 2 
783 2 774 2 
783 2 252 2 962 2 
783 2 252 2 825 2 
783 2 252 2 105 2 
783 2 252 2 984 2 
917 2 1130 2 887 6 678 2 452 2 628 2 680 2 1158 6 
871 2 952 2 
728 2 606 4 1087 2 434 2 451 2 580 2 641 2 68 2 4 2 1137 2 5 2 1245 2 81 4 1075 2 1231 2 699 6 71 2 856 2 
1207 2 259 2 
1009 2 
357 2 600 2 672 2 274 4 277 2 604 6 842 2 281 2 1100 4 754 2 99 2 1104 4 611 2 104 2 536 2 195 26 107 2 764 6 1025 2 939 2 686 2 1031 4 296 2 619 2 1187 4 621 2 117 6 380 2 547 2 700 2 122 6 303 2 955 8 28 2 1199 2 307 2 394 2 970 2 1299 2 1300 2 1301 2 798 2 799 2 565 2 406 4 888 2 1145 2 1309 8 326 2 412 4 1312 2 983 2 331 4 241 2 812 2 1154 26 569 2 1317 2 989 2 500 4 646 2 1163 2 1323 2 67 2 258 4 160 2 652 2 824 2 513 2 1329 2 432 2 828 2 267 2 911 2 743 2 833 2 
357 2 600 2 672 2 274 4 277 2 604 6 842 2 281 2 1100 4 754 2 99 2 1104 2 611 2 104 2 536 2 195 26 107 2 764 6 1107 2 1025 2 939 2 686 2 1031 4 859 2 296 2 619 2 864 2 1187 4 621 2 117 6 380 2 547 2 301 2 122 6 303 2 955 8 28 2 1199 2 307 2 394 2 970 2 1299 2 1300 2 1301 2 798 2 799 2 565 2 406 4 888 2 1145 2 1309 8 326 2 412 4 1312 2 983 2 331 4 241 2 812 2 1154 26 569 2 1317 2 989 2 500 6 646 2 1323 2 67 2 258 4 160 2 652 2 824 2 513 2 1329 2 826 2 432 2 828 2 267 2 911 2 833 2 595 2 
763 2 
965 2 787 2 
836 2 1173 2 713 4 1129 2 971 4 86 2 1132 4 600 2 317 2 88 2 91 6 791 2 1138 2 1300 2 1017 2 143 2 565 2 979 2 1093 10 7 2 604 4 1141 8 719 2 1097 2 1100 2 1145 2 450 2 1272 2 808 6 928 2 331 2 367 4 195 12 1154 6 1276 2 157 4 246 2 614 2 615 2 1235 2 1161 4 504 8 67 2 1185 4 995 2 21 4 546 2 624 2 513 2 1166 2 432 2 737 6 780 2 1004 2 1205 2 1007 2 78 2 782 2 967 2 270 2 
836 2 1173 2 713 4 971 4 1132 4 600 2 919 4 317 2 88 2 91 8 791 2 1138 2 1300 2 1017 2 565 2 143 2 979 2 1093 10 7 2 604 4 1141 8 719 2 1097 2 1100 2 1145 2 450 2 1272 2 808 8 331 2 928 2 367 4 195 12 1154 6 1228 2 291 2 570 2 1276 2 157 4 246 2 614 2 615 2 1235 2 1161 4 504 8 67 2 1185 4 995 2 21 4 546 2 624 2 513 2 1166 2 432 2 737 6 780 2 1004 2 1205 2 1007 2 78 2 782 2 967 2 270 2 
1161 2 836 2 1166 2 713 4 737 2 1185 2 317 2 1007 2 367 4 88 2 91 2 967 2 143 2 979 2 157 2 624 2 614 2 270 2 
836 2 1173 2 713 4 1129 2 971 4 86 2 1132 4 600 2 317 2 88 2 91 6 791 2 1138 2 1300 2 1017 2 143 2 565 2 979 2 1093 6 7 2 604 4 1141 4 719 2 1097 2 1100 2 1145 2 450 2 1272 2 808 6 928 2 331 2 367 4 195 12 1154 6 570 2 1276 2 157 4 246 2 614 2 615 2 1161 4 504 4 67 2 1185 4 995 2 21 4 546 2 624 2 513 2 1166 2 432 2 737 4 780 2 1004 2 1205 2 1007 2 78 2 782 2 967 2 270 2 
504 4 1129 2 713 2 1132 2 1185 2 995 2 317 2 69 2 21 2 88 2 791 2 91 2 143 2 7 2 1093 4 1141 4 624 2 719 2 1166 2 450 2 737 4 1272 2 808 4 1004 2 928 2 1007 2 1205 2 367 2 195 4 782 2 831 2 157 2 246 2 614 2 615 2 
836 2 1173 2 713 4 1129 2 971 4 86 2 1132 4 600 2 317 2 88 2 91 6 791 2 1138 2 1300 2 1017 2 143 2 565 2 979 2 1093 6 7 2 604 4 1141 4 719 2 1097 2 1100 2 1145 2 450 2 1272 2 808 6 928 2 331 2 367 4 195 12 1154 6 1276 2 157 4 246 2 614 2 615 2 1235 2 1161 4 504 8 67 2 1185 4 995 2 21 4 546 2 624 2 513 2 1166 2 432 2 737 6 780 2 1004 2 1205 2 1007 2 78 2 782 2 967 2 270 2 
504 8 1129 2 713 2 971 2 86 2 1132 2 1185 4 995 2 317 2 69 2 21 2 88 2 791 2 91 6 143 2 7 2 1093 8 1141 8 624 2 719 2 1166 2 450 2 737 8 1272 2 808 6 1004 2 928 2 1007 2 1205 2 367 2 195 4 782 2 831 2 157 4 246 2 614 2 1235 2 615 2 
836 2 1173 2 713 4 1129 2 971 4 86 2 1132 4 600 2 317 2 88 2 91 6 791 2 1138 2 1300 2 1017 2 143 2 565 2 979 2 1093 10 7 2 604 4 1141 8 719 2 1097 2 1100 2 1145 2 450 2 1272 2 808 6 928 2 331 2 367 4 195 12 1154 6 1276 2 157 4 246 2 614 2 615 2 1235 2 1161 4 504 8 67 2 1185 4 995 2 21 4 546 2 624 2 513 2 1166 2 432 2 737 6 780 2 1004 2 1205 2 1007 2 78 2 782 2 967 2 270 2 
504 2 1129 2 713 2 251 2 1132 2 1185 2 995 2 317 2 69 2 21 2 88 2 791 2 91 2 798 2 143 2 7 2 624 2 719 2 955 2 1166 2 1309 2 450 2 737 4 1272 2 808 4 1004 2 928 2 1007 2 1205 2 367 2 195 4 782 2 1317 2 831 2 157 2 246 2 833 2 614 2 615 2 
836 2 1173 2 357 2 600 2 3 2 1263 2 445 2 88 2 91 8 1017 2 675 2 1019 2 7 2 9 2 604 6 1100 4 450 2 754 2 1272 2 99 2 611 2 928 2 104 2 847 2 536 2 367 4 195 32 764 6 939 2 686 2 614 2 615 2 18 2 540 2 296 2 619 2 203 2 1185 4 864 2 1187 2 21 8 621 2 117 6 546 2 547 2 380 2 866 2 120 2 208 2 624 2 122 8 955 6 29 2 780 2 1205 2 35 2 307 2 1291 2 782 2 967 2 1048 2 225 2 970 2 1129 2 713 4 971 6 1132 4 317 2 976 2 791 4 881 2 1138 2 1300 2 1301 2 798 4 638 2 143 2 799 2 565 2 489 2 979 2 716 2 406 4 566 2 719 2 1144 2 1145 2 1309 6 892 2 806 2 240 4 808 12 412 4 983 4 331 4 242 2 241 2 812 2 1154 20 569 2 1229 2 989 2 1317 4 157 4 500 6 246 2 1235 4 1161 4 504 6 992 2 251 2 67 2 995 2 258 4 160 2 262 2 513 2 1329 2 1166 2 432 2 737 8 909 4 1004 2 1007 2 665 2 78 2 833 4 595 2 270 2 
836 2 1173 2 357 2 600 2 3 2 1263 2 445 2 88 2 91 8 1017 2 675 2 1019 2 1093 4 7 2 9 2 604 6 1100 4 450 2 754 2 1272 2 99 2 928 2 611 2 104 2 847 2 536 2 367 4 195 32 764 6 939 2 686 2 614 2 615 2 18 2 540 2 296 2 619 2 203 2 1185 4 864 2 1187 2 21 8 621 2 117 6 546 2 547 2 380 2 866 2 120 2 208 2 624 2 122 8 955 6 29 2 780 2 1205 2 35 2 307 2 1291 2 782 2 967 2 1048 2 225 2 970 2 1129 2 713 4 971 6 1132 4 317 2 976 2 791 4 881 2 1138 2 1300 2 1301 2 798 4 638 2 143 2 799 2 565 2 489 2 979 2 716 2 406 4 1141 4 566 2 719 2 1144 2 1145 2 1309 6 892 2 806 2 240 4 808 12 412 4 983 4 331 4 242 2 241 2 812 2 1154 20 569 2 1229 2 989 2 1317 4 157 4 500 6 246 2 1235 4 1161 4 504 6 992 2 251 2 67 2 995 2 258 4 160 2 262 2 513 2 1329 2 1166 2 432 2 737 8 909 4 1004 2 1007 2 665 2 78 2 833 4 595 2 270 2 
836 2 1173 2 357 2 600 2 3 2 1263 2 445 2 88 2 91 10 1017 2 675 2 1019 2 1093 4 7 2 9 2 604 6 1100 4 450 2 754 2 1272 2 99 2 928 2 611 2 104 2 847 2 536 2 367 4 1022 2 195 30 764 8 939 2 686 2 614 2 615 2 18 2 540 2 296 2 619 2 203 2 1185 4 945 2 864 2 1187 4 21 8 621 2 117 8 546 2 547 2 380 2 866 2 120 2 208 2 624 2 122 12 955 6 29 2 779 2 780 2 1205 2 35 2 307 2 1291 2 782 2 967 2 1048 2 225 2 970 2 1129 2 713 4 971 6 1132 4 317 2 976 2 791 4 881 2 1138 2 1300 2 402 2 1301 2 798 4 143 2 799 2 565 2 489 2 979 2 716 2 406 4 1141 4 566 2 719 2 1144 2 1145 2 1309 6 892 2 806 2 240 4 1064 2 808 16 412 4 983 2 331 4 241 2 812 2 1154 18 569 4 570 2 1229 2 989 4 1317 4 157 4 500 6 246 2 1235 4 1161 4 504 6 992 2 251 2 67 2 995 2 258 6 160 2 262 2 513 2 1329 2 1166 2 432 2 737 10 909 4 1004 2 1007 2 1008 2 665 2 78 2 831 2 833 4 595 2 270 2 
504 6 1129 2 713 2 971 2 1132 2 1185 4 995 2 317 2 21 2 88 2 791 2 91 6 143 2 1093 4 7 2 1141 4 624 2 719 2 1166 2 450 2 737 6 1272 2 808 4 1004 2 928 2 1007 2 1205 2 367 2 195 4 782 2 157 4 246 2 614 2 1235 2 615 2 
600 2 88 2 91 6 840 3 1093 2 7 2 604 6 1100 4 364 2 450 2 754 2 1272 2 99 2 928 2 611 2 104 2 367 2 536 2 195 28 764 6 939 2 686 2 614 2 615 2 296 2 1279 2 1185 4 864 2 1187 3 21 2 621 2 117 6 380 2 547 2 624 2 122 8 210 2 31 2 1205 2 307 2 782 2 970 2 1129 2 713 2 971 2 1132 2 317 2 791 2 46 2 1300 2 1301 2 565 2 799 2 638 2 143 2 406 4 719 2 1145 2 808 4 412 4 983 4 331 4 241 2 242 2 812 2 57 2 1154 24 569 3 989 3 157 4 500 6 246 2 416 2 1235 2 504 6 1324 2 67 2 995 2 258 4 513 2 1329 2 1166 2 432 2 737 6 1004 2 1007 2 78 2 1009 2 595 2 
246 2 588 2 1205 2 
246 2 588 2 1205 2 
600 2 88 2 91 10 675 2 1093 4 604 6 1100 4 754 2 99 2 1104 2 611 2 928 2 104 2 536 2 761 2 367 2 195 24 764 2 939 2 768 2 296 2 619 2 1185 4 864 2 1187 2 621 2 21 4 622 2 117 2 380 2 547 2 122 2 955 4 1044 2 1205 2 307 2 222 2 785 2 970 2 713 2 971 4 1132 2 317 2 791 4 1300 2 1301 2 798 4 799 2 565 2 406 4 1141 4 719 2 888 4 1307 2 1145 2 1309 4 722 2 720 2 412 4 808 14 983 4 331 4 242 2 241 2 812 4 1154 16 570 2 1317 4 1318 2 157 4 500 6 246 2 1235 4 504 6 67 2 69 2 426 2 1248 2 513 2 1329 2 432 2 737 12 909 2 1007 2 831 4 1338 2 833 4 595 2 
857 2 1307 2 787 2 523 2 658 2 582 2 983 2 809 2 242 2 622 2 195 4 1154 2 675 2 565 2 785 2 1248 2 270 2 
600 2 88 2 91 10 1093 4 604 6 528 2 1100 4 754 2 99 2 1104 1 611 2 928 2 104 2 536 2 761 2 367 2 195 20 764 2 939 2 768 2 296 2 619 2 1185 4 864 2 1187 4 21 4 621 2 117 2 380 2 547 2 122 2 955 4 1044 4 1205 2 307 2 222 2 785 2 970 2 713 2 971 4 1132 2 317 2 791 4 1300 2 1301 2 798 4 799 2 565 2 406 4 1141 4 719 2 888 4 1307 2 1145 2 1309 4 722 2 720 2 412 4 808 14 983 2 331 4 241 2 812 4 1154 14 570 2 1317 4 1318 2 157 4 500 6 246 2 1235 4 504 6 67 2 69 2 426 2 513 2 1329 2 432 2 737 12 909 2 1079 2 1007 2 831 4 1338 2 833 4 595 2 
600 2 88 2 91 10 675 2 1093 4 604 6 1100 4 754 2 99 2 1104 1 611 2 928 2 104 2 536 2 761 2 367 2 195 24 764 2 939 2 768 2 296 2 619 2 1185 4 864 2 1187 2 621 2 21 4 622 2 117 2 380 2 547 2 122 2 955 4 1044 2 1205 2 307 2 222 2 785 2 970 2 713 2 971 4 1132 2 317 2 791 4 1300 2 1301 2 798 4 799 2 565 2 406 4 1141 4 719 2 888 4 1307 2 1145 2 1309 4 722 2 720 2 412 4 808 14 983 4 331 4 242 2 241 2 812 4 1154 16 570 2 1317 4 1318 2 157 4 500 6 246 2 1235 4 504 6 67 2 69 2 426 2 1248 2 513 2 1329 2 432 2 737 12 909 2 1007 2 831 4 1338 2 833 4 595 2 
0 4 521 2 357 18 837 2 522 2 672 2 2 2 673 2 840 2 839 2 526 2 842 2 12 2 364 2 1176 2 14 2 191 2 192 2 536 2 1022 2 195 58 849 2 196 4 1025 2 1028 2 686 2 371 2 200 2 373 2 375 14 1033 2 201 12 1035 2 203 2 1034 2 20 2 864 4 1187 19 697 12 1189 4 547 2 1190 2 1040 2 1192 2 548 2 551 2 1042 16 27 2 384 1 212 6 34 10 216 2 1206 2 1048 4 36 2 556 2 877 2 709 12 394 2 559 2 560 2 878 2 562 2 879 2 712 14 1052 2 564 2 229 2 231 2 42 2 46 2 233 2 47 2 402 2 1221 4 565 2 1222 2 406 14 52 2 407 2 566 2 1059 2 1062 2 411 10 893 14 412 12 1064 2 241 4 1065 2 244 2 569 16 60 2 1229 2 417 14 247 4 62 12 64 4 1236 2 577 2 579 2 67 2 1243 14 256 2 258 12 583 14 420 2 730 2 423 2 731 2 425 2 1077 4 430 2 431 2 736 2 432 2 74 2 1253 8 1080 8 77 12 267 2 266 3 1083 2 591 4 1259 2 269 2 595 4 84 2 1260 2 916 2 599 4 600 2 1262 4 921 4 278 4 922 2 751 2 1094 2 604 6 96 2 752 3 1100 4 1269 12 285 12 754 4 755 2 99 6 286 2 1104 1 610 2 100 2 102 8 611 2 104 2 1273 2 457 2 764 14 109 3 939 2 1277 2 461 2 462 2 766 2 464 4 769 2 113 4 942 2 294 2 1113 2 296 2 619 2 1279 2 945 2 471 2 621 4 116 2 117 14 1117 2 120 2 1285 3 951 2 1122 2 122 28 955 24 957 4 125 8 779 2 1124 2 307 2 480 4 131 2 482 2 1125 4 786 2 634 2 970 6 1128 10 1294 2 635 2 974 4 138 2 789 6 1136 2 1299 2 976 2 1300 2 1139 14 1301 2 796 2 799 2 1303 4 322 2 144 2 324 2 146 2 325 2 1145 2 1309 22 326 2 981 6 328 2 806 2 983 2 332 2 331 4 812 2 1152 2 1154 46 1316 2 989 19 1156 4 500 24 336 2 1321 2 1159 8 159 2 1324 2 649 6 996 2 345 6 160 44 822 3 820 10 1164 4 651 2 510 2 652 12 653 2 824 2 513 2 1329 2 1331 16 1001 2 1002 2 1168 2 828 2 827 2 165 2 664 2 1333 4 353 2 1008 2 829 2 667 2 168 4 170 4 832 4 1172 8 
916 2 1128 2 258 2 1187 2 117 2 160 6 820 2 1285 2 731 2 1040 2 1192 2 1122 2 122 2 74 2 411 4 534 2 195 2 849 2 1154 2 764 2 569 2 989 2 269 2 686 2 
916 2 1128 2 258 2 1187 2 117 2 160 6 820 2 1285 2 731 2 1040 2 1192 2 1122 2 122 2 74 2 411 4 534 2 195 2 849 2 1154 2 764 2 569 2 989 2 269 2 686 2 
916 2 1128 2 258 2 1187 2 117 2 160 6 820 2 1285 2 731 2 1040 2 1192 2 1122 2 122 2 74 2 411 4 534 2 195 2 849 2 1154 2 764 2 569 2 989 2 269 2 686 2 
316 2 1262 2 649 6 974 2 345 4 1187 3 1116 2 921 2 697 4 1221 2 25 2 731 2 1303 2 447 2 717 2 1121 2 1288 2 1196 4 122 2 238 4 1077 2 752 3 1042 5 1253 2 927 2 1003 4 125 2 436 2 148 2 554 4 480 2 195 10 1154 4 987 4 989 3 109 3 1027 3 686 2 64 2 1159 2 
316 2 1262 2 974 2 789 2 921 2 1221 2 1303 2 447 2 717 2 238 4 752 2 927 2 148 2 195 10 1154 4 987 4 989 2 109 2 1027 2 686 2 64 2 1159 2 649 6 345 4 1187 2 1116 2 697 4 119 2 731 2 25 2 1121 2 1288 2 122 2 1196 4 1077 2 1042 4 1253 2 125 2 1003 4 436 2 480 2 554 4 832 2 
316 2 1262 2 974 2 789 2 921 2 1221 2 1303 2 447 2 717 2 238 4 752 2 927 2 148 2 195 10 1154 4 987 4 989 2 109 2 1027 2 686 2 64 2 1159 2 649 6 345 4 1187 2 1116 2 697 4 119 2 731 2 25 2 1121 2 1288 2 122 2 1196 4 1077 2 1042 4 1253 2 125 2 1003 4 436 2 480 2 554 4 832 2 
316 2 1262 2 974 2 789 2 921 2 1221 2 1303 2 447 2 717 2 238 4 752 2 927 2 148 2 195 10 1154 4 987 4 989 2 109 2 1027 2 686 2 64 2 1159 2 649 6 345 4 1187 2 1116 2 697 4 119 2 731 2 25 2 1121 2 1288 2 122 2 1196 4 1077 2 1042 4 1253 2 125 2 1003 4 436 2 480 2 554 4 832 2 
316 2 1262 2 974 2 789 4 921 2 1221 2 1303 2 447 2 717 2 238 4 752 2 927 2 148 2 195 10 1154 4 987 4 989 2 109 2 1027 2 686 2 64 2 1159 2 649 6 345 4 1187 2 1116 2 697 4 119 4 731 2 25 2 1121 2 1288 2 122 2 1196 4 1077 2 1042 4 1253 2 125 2 1003 4 436 2 480 2 554 4 832 4 
30 2 742 2 724 2 668 2 1325 2 96 2 
623 2 30 2 527 2 652 2 687 2 1165 2 1170 2 
1111 2 858 2 253 1 254 1 43 2 276 1 1287 2 512 2 211 2 1145 2 926 2 552 2 498 2 872 2 499 1 986 2 681 1 195 10 354 2 1154 8 79 2 1291 2 459 2 292 2 393 2 39 2 
1052 2 1280 2 444 2 1262 6 344 4 974 6 345 4 789 4 921 6 697 12 1164 2 119 2 422 2 323 2 52 2 1143 2 1077 6 73 2 1042 16 1253 6 981 4 125 6 1227 2 195 6 1154 6 765 2 1125 2 832 2 64 2 1159 6 
802 2 466 2 1003 2 437 2 1072 2 305 1 567 2 810 2 1282 4 195 1 537 2 554 2 279 7 1154 1 220 2 987 2 1018 2 897 2 
802 2 466 2 1003 2 437 4 1072 2 567 2 810 2 1282 4 554 2 279 6 537 4 220 2 987 2 1018 2 897 4 
802 2 466 2 1003 2 437 8 1072 2 305 1 567 8 810 2 1282 4 195 1 554 2 279 10 537 8 1154 1 220 2 987 2 1018 6 897 8 
802 2 466 2 1003 2 437 2 1072 2 810 2 1282 2 554 2 279 2 537 2 220 2 987 2 897 2 
0 4 837 2 178 1 599 4 2 1 278 4 922 2 1094 2 1176 2 99 6 191 2 610 2 1273 2 195 32 613 2 111 2 371 2 464 4 942 2 1034 2 1035 2 864 4 621 4 116 2 1117 1 955 4 551 2 216 1 34 10 1124 2 36 2 556 2 877 2 482 2 786 2 1292 2 878 2 970 6 972 2 1219 2 1136 2 233 2 636 2 1222 2 406 12 1059 2 1062 2 328 2 725 2 893 2 412 10 1154 28 60 2 500 22 417 2 247 4 62 2 1236 3 162 2 430 2 827 1 165 2 591 4 595 4 84 2 
970 2 200 2 599 2 1034 2 1219 2 864 1 621 2 1136 2 378 2 278 2 233 2 320 2 406 4 162 2 868 2 955 6 1059 2 99 2 1104 2 412 4 34 2 77 2 195 12 1154 12 60 2 591 2 500 7 595 1 111 2 371 2 1292 2 
0 18 837 12 599 8 271 6 2 6 278 8 922 6 750 2 1094 4 1176 4 99 6 610 4 191 4 193 20 1273 10 195 70 458 4 935 4 613 2 111 2 371 2 464 18 198 4 942 4 617 2 1034 2 202 2 1035 4 864 16 1036 16 621 2 116 6 543 10 868 2 955 14 476 2 956 2 551 4 124 4 215 4 216 4 34 20 217 2 1124 4 36 4 556 2 224 2 877 4 482 6 395 10 786 4 1292 2 970 6 972 2 788 4 1219 2 318 2 1136 2 139 4 491 4 490 12 1222 6 406 34 718 4 1059 2 409 16 1061 6 1062 4 328 4 412 28 1154 62 60 2 152 4 1230 4 572 4 500 72 61 4 247 6 62 20 1236 10 1240 4 900 10 1244 4 162 2 1251 4 164 4 165 4 352 4 1082 2 80 4 591 8 913 2 595 16 84 4 
1236 2 970 2 599 4 1034 2 2 2 1219 2 864 4 863 2 621 2 1136 2 278 4 922 2 406 6 162 2 868 2 955 12 956 2 1059 2 1176 2 328 2 725 2 99 2 1104 2 412 6 34 6 1273 2 217 2 195 18 1154 16 60 2 591 4 877 2 482 2 500 18 62 2 111 2 595 4 371 2 84 2 835 2 1292 2 
958 2 

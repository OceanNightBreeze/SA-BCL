#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V FAILED junit.framework.AssertionFailedError 
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V FAILED junit.framework.AssertionFailedError 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V FAILED junit.framework.AssertionFailedError 1859 
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V ERROR java.lang.RuntimeException (878,1731) (878,1731) (113,1838) (113,1838) 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltNonZero:enabled()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.test.FormatTestCase:passes()Z
jtb.JavaCharStream:backup(I)V
daikon.Quant:concat([I[I)[I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.Member:format_ioa()Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
jtb.JavaParser:jj_3R_210()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:enabled()Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.binary.twoString.StringEqual:check_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:check_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([J[J)Z
daikon.PptSlice3:arity()I
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
jtb.JavaParser:jj_3R_60()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
jtb.JavaParser:jj_3R_89()Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:jj_2_10(I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern:numIntArrays()I
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:linearIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:NodeOptional()V
utilMDE.Stopwatch:Stopwatch(Z)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:SeqIntEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:get_simplify_free_index([Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_15(I)Z
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_ioa()Ljava.lang.String;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
daikon.Quant:pairwiseLTE([I[I)Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:jj_3_28()Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.binary.twoString.TwoString:TwoString(Ldaikon.PptSlice;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.JavaParser:jj_3_5()Z
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.binary.sequenceString.SequenceString:SequenceString(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3_35()Z
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_122()Z
daikon.inv.binary.twoScalar.NumericInt.Divides:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.binary.sequenceScalar.Member:format_daikon()Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_simplify()Ljava.lang.String;
jtb.JavaCharStream:getBeginLine()I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoSequence.Reverse:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_120()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.SequenceString:scl_index()I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_esc()Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaCharStream:getEndLine()I
jtb.JavaCharStream:ReadByte()C
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
jtb.JavaParser:jj_3R_106()Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:isPrestate()Z
daikon.PptSlice1:arity()I
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
jtb.JavaParser:jj_3_19()Z
daikon.Quant:eq(DD)Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.JavaParser:jj_3R_70()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.TwoSequence:var1()Ldaikon.VarInfo;
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:freshDistinctFrom(Ljava.util.Set;)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
jtb.JavaParser:jj_3R_88()Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaParser:jj_3R_104()Z
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_163()Z
jtb.JavaParser:jj_3R_118()Z
jtb.JavaParser:jj_3R_80()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_136()Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_ioa()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.Quant:isReverse([I[I)Z
daikon.inv.binary.twoString.StringEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:setEqual([I[I)Z
daikon.ProglangType:isPseudoArray()Z
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_first()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_3_36()Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_86()Z
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoSequence.SubSequence:format_daikon()Ljava.lang.String; | ASSIGN | 2286 | = null
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3R_99()Z
jtb.syntaxtree.NodeList:NodeList()V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:sclvar()Ldaikon.VarInfo;
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_3R_116()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltsLteIndex([I)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SequenceScalar:seqvar()Ldaikon.VarInfo;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_50()Z
utilMDE.ArraysMDE:indexOf([JJ)I
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:subsetOf([D[D)Z
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.inv.binary.twoSequence.SubSequence:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_35(I)Z
daikon.inv.Invariant:logOn()Z
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
utilMDE.ArraysMDE:noDuplicates([J)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
daikon.inv.ternary.threeScalar.LinearTernary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.Invariant:justified()Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:enabled()Z
daikon.inv.binary.twoSequence.SubSequence:SubSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:PairwiseIntGreaterEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaCharStream:readChar()C
daikon.inv.binary.sequenceScalar.SequenceScalar:seq_index()I
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
daikon.inv.ternary.threeScalar.LinearTernary:enabled()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_doubles([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.Quant:subsetOf([B[I)Z
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_10()Z
jtb.JavaParser:jj_3_13()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_ioa()Ljava.lang.String;
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.inv.binary.sequenceScalar.Member:enabled()Z
daikon.Quant:gt(II)Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:equals(JJJ)Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:present()Z
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceString.MemberString:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_180()Z
jtb.JavaCharStream:getEndColumn()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
daikon.inv.binary.sequenceScalar.Member:Member(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:jj_3_4()Z
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.ternary.threeScalar.LinearTernary:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_77()Z
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_simplify()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.Quantify.QuantFlags:element_wise()Ljava.util.EnumSet;
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_2_3(I)Z
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.binary.sequenceString.MemberString:MemberString(Ldaikon.PptSlice;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:PairwiseIntLessEqual(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.Token:newToken(I)Ljtb.Token;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
jtb.syntaxtree.NodeOptional:present()Z
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
daikon.ValueTuple:isMissing(I)Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoSequence.Reverse:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceScalar.Member:format_esc()Ljava.lang.String;
daikon.Quant:lexEqual([I[I)Z
daikon.VarInfo:isIOASet()Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_107()Z
daikon.Quant:subsetOf([S[S)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.VarInfo:new_ppt()V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.Quant:memberOf(F[F)Z
daikon.inv.binary.twoScalar.NumericInt.Divides:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_101()Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.JavaCharStream:FillBuff()V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsGtIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.TwoSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_149()Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.Quant:lexGT([I[I)Z
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:jj_3R_67()Z
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
jtb.JavaParser:jj_3_3()Z
daikon.Quant:pairwiseGTE([I[I)Z
utilMDE.Intern:intern([J)[J
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Node:Node()V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
utilMDE.ArraysMDE:isSubarray([J[JI)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.JavaParser:jj_3_17()Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:gcd(II)I | CONDITION | 4310 | if (x) -> if (!x)
jtb.JavaParser:jj_2_5(I)Z
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseEqual([I)Z
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.binary.sequenceString.MemberString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:jj_3R_97()Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ModBitTracker:split(I)I
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.PptName:getFullClassName()Ljava.lang.String;
jtb.JavaParser:jj_3_21()Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.SubSequence:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_51()Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.sequenceString.MemberString:format_daikon()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String; | RETURN | 15328 | return null
daikon.inv.binary.BinaryInvariant:is_symmetric()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_55()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
daikon.ProglangType:isPointerFileRep()Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
utilMDE.OrderedPairIterator:hasNext()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_ioa()Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.NodeToken:trimSpecials()V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.ModBitTracker:num_vars()I
daikon.Quant:eltsGT([II)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.visitor.TreeFormatter:TreeFormatter(II)V
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseLTE([I)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_3R_63()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceString.SequenceString:sclvar()Ldaikon.VarInfo;
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_58()Z
jtb.JavaParser:jj_2_18(I)Z
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.ProglangType:baseIsString()Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
jtb.JavaParser:jj_scan_token(I)Z
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_esc()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.ternary.threeScalar.LinearTernary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_ioa()Ljava.lang.String;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
daikon.inv.binary.twoSequence.PairwiseIntEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:union([I[I)[I
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.ProglangType:isArray()Z
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceScalar.Member:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.diff.RootNode:RootNode()V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
utilMDE.MathMDE:pow_fast(II)I
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.Divides:Divides(Ldaikon.PptSlice;Z)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
jtb.JavaParser:jj_3R_48()Z
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
daikon.PptName:toString()Ljava.lang.String;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoSequence.PairwiseIntLessThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_135()Z
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lexGTE([I[I)Z
daikon.Quant:memberOf(S[S)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:add_modified([JJI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.VarInfo:isDerived()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:separation(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.JavaParser:jj_3_25()Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsLtIndex([I)Z
daikon.Quant:slice([III)[I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.inv.ternary.threeScalar.ThreeScalar:var1()Ldaikon.VarInfo;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_22()Z
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_30()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_100()Z
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_169()Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.sequenceString.MemberString:format_esc()Ljava.lang.String;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.suppress.NISuppression:NISuppression([Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.PptName:getMethodName()Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.binary.twoScalar.NumericInt.Divides:get_proto(Z)Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_96()Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.JavaParser:jj_3R_121()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:add_modified(JJJI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:sorted([I)Z
daikon.Quant:gte(II)Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.sequenceString.SequenceString:seqvar()Ldaikon.VarInfo;
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
utilMDE.LimitedSizeIntSet:size()I
daikon.inv.ternary.threeScalar.LinearTernary:LinearTernary(Ldaikon.PptSlice;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.binary.sequenceScalar.SeqIntLessThan:enabled()Z
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.test.InvariantFormatTester:execute()Z
daikon.inv.binary.sequenceString.MemberString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.ternary.threeScalar.ThreeScalar:ThreeScalar(Ldaikon.PptSlice;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptTopLevel:is_constant(Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_esc()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[D)D
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:enabled()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_73()Z
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantHelper:simplifyNameAndBounds(Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.suppress.NISuppressee:swap()Ldaikon.suppress.NISuppressee;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:SeqIntGreaterEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoString.StringEqual:StringEqual(Ldaikon.PptSlice;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.Quant:memberOf(I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Ppt:Ppt()V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:PairwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.VarInfoName:hashCode()I
jtb.JavaParser:jj_3R_102()Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
utilMDE.ArraysMDE:element_range([I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
jtb.JavaParser:jj_3_14()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:lte(II)Z
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_76()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.ProglangType:isIntegral()Z
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.ModBitTracker:num_sets()I
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.ProglangType:isScalar()Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.sequenceScalar.Member:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.Quant:intersection([I[I)[I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_164()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.binary.twoSequence.SeqSeqIntEqual:SeqSeqIntEqual(Ldaikon.PptSlice;Z)V
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;Z)V
utilMDE.FuzzyFloat:lte(DD)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_161()Z
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.Invariant:isWorthPrinting()Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.suppress.NISuppressee:NISuppressee(Ljava.lang.Class;I)V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.twoSequence.Reverse:Reverse(Ldaikon.PptSlice;)V
daikon.PptSlice2:arity()I
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.Ppt:indexOf(Ljava.lang.String;)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3_12()Z
jtb.JavaParser:jj_3R_162()Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_57()Z
daikon.ProglangType:baseIsFloat()Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:getFreeIndex([Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.PptSlice0:arity()I
daikon.inv.ternary.TernaryInvariant:TernaryInvariant(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:is_type()Z
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.Quant:eltwiseGT([I)Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.Member:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.ProglangType:elementIsIntegral()Z
daikon.inv.binary.twoSequence.Reverse:enabled()Z
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoSequence.SubSequence:enabled()Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.PptSlice1:num_samples()I
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:enabled()Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfo:simplifyNameAndBounds()[Ljava.lang.String;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_ioa()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:maxsep_triples([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)D
daikon.test.FormatTestCase:getDiffString()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.Quant:ne(II)Z
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.ValueTuple:isMissingNonsensical(I)Z
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.binary.sequenceScalar.SequenceScalar:scl_index()I
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.Reverse:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.inv.binary.twoSequence.TwoSequence:var2()Ldaikon.VarInfo;
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.binary.twoString.TwoString:var1()Ldaikon.VarInfo;
jtb.JavaParser:jj_3_18()Z
daikon.Quant:lexLT([I[I)Z
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
daikon.inv.ternary.threeScalar.ThreeScalar:var2()Ldaikon.VarInfo;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
jtb.JavaParser:jj_3R_126()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.ProglangType:isString()Z
daikon.inv.binary.twoSequence.Reverse:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:enabled()Z
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.inv.binary.sequenceString.SequenceString:seq_index()I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.binary.twoString.TwoString:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfo:isPointer()Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.VarInfo:isIOAArray()Z
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:lt(II)Z
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_87()Z
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([J[J)I
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
utilMDE.WeakHasherMap:size()I
daikon.inv.ternary.threeScalar.ThreeScalar:var3()Ldaikon.VarInfo;
daikon.inv.binary.sequenceString.MemberString:get_proto()Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:sameLength([I[I)Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.ModBitTracker:ModBitTracker(I)V
daikon.ValueTuple:isMissingFlow(I)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_137()Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceString.MemberString:add_modified([Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([I)[I
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoString.StringEqual:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_115()Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.JavaParser:jj_3R_110()Z
daikon.inv.binary.sequenceScalar.SequenceScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoSequence.SubSequence:format_simplify_explicit()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([I[I)Z
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:jj_3R_124()Z
utilMDE.LimitedSizeIntSet:add(I)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.MathMDE:pow(II)I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.Quant:eltsEqual([II)Z
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:size()I
daikon.inv.Invariants:Invariants()V
daikon.inv.binary.twoSequence.PairwiseIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
utilMDE.WeakHasherMap:processQueue()V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.ArraysMDE:sum([I)I
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_3R_133()Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:name()Ljava.lang.String;
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.inv.binary.twoString.TwoString:var2()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:has_typeof()Z
daikon.inv.Invariant:is_false()Z
daikon.inv.Invariant:prob_and(DDD)D
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eltsLTE([II)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfo:ioa_name()Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_compose([I[I)[I
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.ProglangType:dimensions()I
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:enabled()Z
daikon.VarInfo:is_direct_non_slice_array()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.suppress.NISuppressionSet:NISuppressionSet([Ldaikon.suppress.NISuppression;)V
daikon.Quant:eltwiseGTE([I)Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.inv.binary.twoSequence.PairwiseIntEqual:PairwiseIntEqual(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
utilMDE.ArraysMDE:indexOf([II)I
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_simplify()Ljava.lang.String;
jtb.JavaParser:jj_3_15()Z
daikon.inv.binary.sequenceScalar.SeqIntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
daikon.PptName:getSignature()Ljava.lang.String;
daikon.VarInfo:relate_var()V
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:SeqIntLessEqual(Ldaikon.PptSlice;)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.binary.sequenceScalar.SeqIntEqual:add_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:planarIntervention([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.inv.binary.sequenceString.MemberString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:format_esc()Ljava.lang.String;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntEqual:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceString.SequenceString:seq_first()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.JavaParser:jj_3R_75()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:enabled()Z
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:subsetOf([F[D)Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.inv.unary.UpperBoundCore:calc_range()J
daikon.inv.binary.sequenceScalar.SeqIntLessThan:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Assert:assertTrue(Z)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_daikon()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.ModBitTracker:num_samples()I
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:enabled()Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_ioa()Ljava.lang.String;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.Quant:eltwiseLT([I)Z
utilMDE.FuzzyFloat:gte(DD)Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGT([I[I)Z
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_61()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:format_daikon()Ljava.lang.String;
daikon.Quant:noDups([I)Z
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_49()Z
utilMDE.FuzzyFloat:eq(DD)Z
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoSequence.TwoSequence:TwoSequence(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
utilMDE.ArraysMDE:sum([D)D
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.MathMDE:negate(I)I
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
daikon.simplify.LemmaStack:noticeInt(J)V
jtb.JavaParser:jj_2_12(I)Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
utilMDE.Intern:internSubsequence([III)[I
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_109()Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_98()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_27()Z
daikon.inv.binary.twoScalar.TwoScalar:get_swap()Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3_20()Z
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
jtb.JavaParser:jj_3R_72()Z
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.binary.twoString.StringEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.suppress.NISuppressionSet:swap()Ldaikon.suppress.NISuppressionSet;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_esc()Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:calc_range()J
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
jtb.visitor.FormatCommand:getNumCommands()I
daikon.inv.binary.twoSequence.PairwiseIntEqual:enabled()Z
daikon.inv.binary.sequenceString.SequenceString:valid_types([Ldaikon.VarInfo;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:try_points_linear(DDD)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.binary.sequenceString.MemberString:enabled()Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntLessThan:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:jj_3R_103()Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.sequenceScalar.Member:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.binary.sequenceScalar.SeqIntLessThan:SeqIntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_117()Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:check_modified([JJI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:check_modified([J[JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_21(I)Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.Quant:eltsGteIndex([I)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.twoString.StringEqual:get_proto()Ldaikon.inv.binary.twoString.StringEqual;
jtb.JavaParser:jj_2_1(I)Z
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.sequenceScalar.SequenceScalar:SequenceScalar(Ldaikon.PptSlice;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:base()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.Debug:logDetail()Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_114()Z
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.InvMap:InvMap()V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.sequenceScalar.Member:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.sequenceScalar.SeqIntLessThan:format_simplify()Ljava.lang.String;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:jj_3R_119()Z
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:memberOf(F[D)Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.suppress.NISuppression:NISuppression(Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressor;Ldaikon.suppress.NISuppressee;)V
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_2_14(I)Z
daikon.inv.Invariant:logDetail()Z
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.test.FormatTestCase.SingleOutputTestCase:getDiffString()Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.Quant:memberOf(J[J)Z
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoSequence.SubSequence:format_simplify()Ljava.lang.String;
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.PptSlice3:PptSlice3(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:jj_3R_105()Z
daikon.inv.binary.sequenceScalar.SeqIntGreaterThan:SeqIntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_3R_62()Z
daikon.inv.Invariant:prob_and(DD)D
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
utilMDE.ArraysMDE:min([I)I
daikon.Quant:subsetOf([D[F)Z
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.sequenceScalar.SeqIntGreaterEqual:format_esc()Ljava.lang.String;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.binary.twoSequence.PairwiseIntEqual:format_simplify()Ljava.lang.String;
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.inv.binary.sequenceScalar.SeqIntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_125()Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessThan:format_simplify()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.Intern:internStrings([Ljava.lang.String;)V
jtb.JavaParser:jj_2_17(I)Z
jtb.JavaParser:jj_3R_54()Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
jtb.JavaParser:jj_3R_47()Z
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:hasTypeOf()Z
daikon.inv.unary.scalar.Positive:enabled()Z
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:format_ioa()Ljava.lang.String;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V | STATEMENT | 13851 | stmt -> ;
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.binary.twoSequence.PairwiseIntGreaterEqual:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:format_simplify_explicit()Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.SubSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoSequence.PairwiseIntLessEqual:format_esc()Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_bi_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eq(JJ)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.FormatCommand:getCommand()I
daikon.inv.binary.twoSequence.SubSequence:add_modified([J[JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.suppress.NISuppressor:swap()Ldaikon.suppress.NISuppressor;
daikon.Quant:eltsLT([II)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.inv.binary.twoSequence.SubSequence:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoSequence.Reverse:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
jtb.visitor.TreeFormatter:TreeFormatter()V
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
daikon.Quant:eq(II)Z
daikon.VarInfoName:isLiteralConstant()Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.JavaParser:jj_3_29()Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.inv.binary.twoSequence.PairwiseIntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoString.StringEqual:add_modified(Ljava.lang.String;Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.Debug:logOn()Z
utilMDE.OrderedPairIterator:setnext2()V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoSequence.PairwiseIntGreaterThan:PairwiseIntGreaterThan(Ldaikon.PptSlice;)V
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:getConfidence()D

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
405 2 1175 2 927 4 1582 2 996 2 424 2 1465 2 1020 2 1315 2 
1341 2 713 2 124 2 1109 2 985 2 1888 6 197 2 1842 6 126 2 1751 6 142 2 
405 2 58 6 788 6 479 6 1738 2 1118 2 1171 2 315 2 1793 4 1528 6 1098 2 505 4 1465 2 
144 8 303 16 1693 12 1532 2 550 8 831 29 171 4 1640 4 1507 2 1815 4 1302 2 1607 10 1650 26 1338 10 1201 10 405 6 759 8 652 2 98 2 409 10 566 6 158 2 1117 16 135 10 1384 2 267 4 1757 8 1121 16 1286 6 1465 6 
365 4 43 6 
169 2 
144 2 303 2 1693 2 831 6 32 2 61 2 343 2 953 2 1607 2 152 2 1650 4 1338 2 1201 2 442 2 781 2 1268 2 409 4 1117 2 135 2 416 2 267 2 1286 2 1121 2 
303 8 1798 2 828 4 1693 5 551 6 831 15 171 2 281 4 1117 8 135 4 573 2 857 6 1607 4 1121 8 1650 12 1338 4 1201 4 
1319 2 1515 2 1876 2 801 2 598 2 531 2 
169 2 1365 2 1161 2 246 2 905 2 17 2 1856 2 214 2 1112 2 1495 2 
1126 2 1420 2 1737 2 1062 2 1136 2 838 2 1673 2 559 2 787 2 258 4 628 2 1862 2 1020 2 261 2 791 2 1383 2 1384 2 1760 2 968 2 919 2 583 2 1027 2 638 2 746 4 687 2 150 2 1397 4 346 2 702 2 1513 2 405 4 1340 2 290 2 478 4 603 2 1170 2 539 2 1350 2 417 2 107 2 767 2 1124 2 1353 2 1465 4 
303 32 144 18 1091 8 1693 22 305 2 828 4 550 6 551 6 831 54 467 6 493 6 281 4 1789 4 34 6 1607 16 1650 48 1338 16 1201 16 405 4 622 2 1374 4 1167 4 98 2 409 6 761 4 566 4 1802 6 1117 32 135 16 857 6 267 2 995 2 1121 32 1286 4 1211 2 1088 4 392 2 1465 4 1690 2 
88 2 1244 2 1170 2 
1695 2 1487 2 1069 2 1593 2 159 2 1506 22 373 2 511 2 1423 2 107 2 916 2 754 10 726 2 797 2 
1530 2 826 1 1291 8 829 2 947 2 227 1 491 2 1533 4 1293 3 834 2 1670 2 722 2 500 2 1541 1 955 2 242 3 725 2 1196 1 1546 2 1678 2 1199 1 621 4 1799 2 626 6 380 2 849 8 1311 5 257 1 1682 2 389 3 1683 2 1684 2 1685 12 265 24 390 2 969 1 1087 2 1321 2 1557 2 1326 4 394 1 278 2 520 16 1698 2 1219 2 1220 32 1445 2 400 32 402 2 1705 16 1819 2 1711 2 405 34 1107 2 983 2 1828 2 654 2 534 2 986 2 160 4 538 2 1833 1 1720 8 418 2 544 1 1351 2 1722 2 421 2 1352 12 996 2 1843 3 49 2 1729 2 768 2 167 2 1465 32 52 2 1357 2 1469 2 1129 2 772 2 1002 2 60 2 1597 1 173 1 1006 2 1606 2 897 2 1010 3 1011 2 1610 1 1370 2 1012 6 443 2 784 2 1860 2 1375 4 908 2 786 16 1376 2 450 2 1021 4 1866 2 793 2 73 2 680 2 334 1 1628 2 1873 3 588 2 688 2 466 2 81 2 1638 2 1509 2 595 2 1158 2 1643 24 1886 2 1887 2 1159 1 345 2 90 2 1403 2 348 2 1770 2 1267 3 1404 2 1038 16 1774 2 477 2 708 2 1406 3 217 4 1276 2 357 2 359 6 105 3 361 4 1279 2 1411 2 482 6 1047 2 106 3 1660 1 1049 2 1178 3 1287 3 488 1 
1813 2 
405 2 998 2 
405 4 1361 2 1750 2 
1 140 492 198 948 4 949 2 951 2 5 2 6 2 496 218 8 228 11 26 13 6 1427 46 503 28 14 4 15 2 1428 16 18 8 961 92 1432 8 1434 6 967 2 510 2 512 2 24 26 513 74 514 8 970 6 1442 2 973 2 517 6 974 4 975 6 1443 6 33 6 979 4 526 6 528 2 38 60 1450 198 981 2 984 2 533 2 537 182 45 2 988 2 1460 2 543 2 991 2 48 182 545 112 546 6 548 4 1464 2 1465 10 1466 50 53 2 54 2 56 2 59 8 1473 2 1474 2 62 2 555 14 63 2 1005 6 1007 8 1008 2 560 2 69 380 561 4 1482 12 563 8 70 2 564 2 1488 2 1489 198 567 48 1494 112 570 2 571 4 572 4 1498 4 1499 4 74 2 576 4 1022 2 1023 4 581 2 1024 2 584 2 585 2 1028 6 82 106 1505 4 1030 4 1031 60 1510 4 1035 30 1512 6 92 8 93 2 599 2 97 12 1517 6 601 132 99 2 1042 88 1043 244 1520 20 1521 8 1523 2 108 2 110 24 606 160 1050 6 609 8 1055 4 1535 12 1057 6 1536 22 118 4 119 2 1537 60 120 48 122 30 1539 6 1538 2 617 2 616 46 1542 4 618 198 619 322 1543 14 1544 4 1064 2 620 2 1065 2 1545 28 1547 2 129 66 625 2 624 84 131 26 133 2 1070 26 1072 2 1073 2 1076 4 1075 4 1078 2 134 12 138 112 1556 2 636 10 1560 2 1561 4 147 30 1564 6 644 12 149 2 1569 98 1568 376 1095 4 1096 32 648 26 1097 4 155 8 1101 4 1572 4 1573 2 649 4 156 6 1574 4 1579 4 656 2 657 2 658 18 1115 6 661 4 162 198 662 2 665 8 170 6 172 30 1132 112 1601 86 1604 46 1605 2 1612 4 1613 2 1619 6 671 8 670 2 1138 2 1139 2 1140 2 673 2 186 198 1141 192 187 432 674 2 1623 4 1625 244 678 4 190 2 683 2 1630 30 199 2 1632 4 1148 2 200 4 1150 64 1636 198 1639 2 690 6 691 2 1642 2 1157 28 206 2 695 4 697 26 698 30 700 18 1647 2 1648 2 1164 28 1652 2 212 2 1653 14 213 10 705 6 1656 198 1657 26 709 4 711 6 1174 20 1662 16 224 68 1664 4 225 2 718 4 719 10 229 2 230 2 231 4 1667 2 1186 244 720 6 232 30 233 2 1189 198 1191 2 1668 6 236 2 237 8 721 6 240 20 239 6 238 6 1193 2 1195 10 245 12 1200 2 1679 6 251 6 728 4 1203 16 732 2 259 22 734 4 1206 4 262 2 1208 106 1209 10 738 4 1687 2 266 6 268 2 741 2 269 8 742 2 743 2 745 2 277 6 747 2 748 2 1218 2 283 4 285 2 753 2 1222 4 286 20 1223 118 1702 2 1706 30 757 4 758 2 1708 2 1713 2 1227 6 1718 2 295 6 297 2 1721 2 1232 2 1723 10 764 6 763 566 1726 46 1234 2 306 2 1735 2 310 30 312 4 313 6 1741 4 320 52 1744 2 1239 2 322 6 323 284 324 2 1749 2 326 4 327 4 329 2 1245 2 790 20 1247 2 1755 6 1756 2 1758 2 1759 2 337 2 338 4 1257 4 340 2 342 2 806 12 809 4 1262 2 1767 4 813 2 350 6 1771 2 1773 2 815 20 816 2 355 20 1274 12 356 4 1280 2 822 4 823 6 1283 14 1779 4 1782 2 1781 2 1290 6 1785 2 1786 4 1294 2 1296 2 1791 4 374 432 1304 6 1794 4 1310 2 1797 12 844 2 1800 8 1313 26 1801 2 1803 70 1314 2 850 64 388 2 387 4 1806 2 1318 2 851 2 852 94 854 2 856 2 1320 20 1810 6 1324 6 863 18 864 12 395 12 396 60 865 6 398 8 1330 2 399 4 867 2 1331 8 1818 16 1336 2 872 6 1822 30 874 2 405 10 1823 4 875 22 406 6 876 2 1344 4 1343 2 1346 2 1834 132 1347 2 1835 4 879 24 1349 82 882 2 1844 6 884 2 885 2 426 4 887 2 1358 2 1850 2 888 2 430 330 1363 54 891 8 432 2 1367 6 894 2 435 2 436 198 898 2 438 2 437 6 1369 14 901 2 439 2 1857 4 906 26 1372 2 1858 174 1377 2 911 2 447 6 451 2 1863 22 1379 2 912 2 1864 4 1865 4 453 12 915 30 457 2 458 2 1387 4 459 2 1871 4 460 322 1390 26 1391 6 1872 2 462 2 463 2 922 2 465 6 466 2 1878 2 1879 2 1884 26 1885 4 1396 6 926 2 1889 6 1398 46 1399 28 1890 6 474 2 1401 14 930 6 931 4 933 2 1898 4 1409 2 1410 2 1899 14 1901 2 1902 2 1903 2 
1273 2 1869 2 1058 1 684 2 
600 2 1869 2 
9 2 1748 2 536 2 1170 2 
9 2 672 2 1748 2 536 2 1170 2 780 2 
1009 2 1748 2 1869 2 1640 2 1170 2 667 2 
1503 2 1737 2 
1748 2 859 2 1640 2 1170 2 
1033 2 724 2 
800 2 1255 2 
920 2 1846 2 
408 2 1364 2 
408 2 1192 2 1255 2 
408 2 221 2 1255 2 
408 2 557 2 1255 2 
408 2 824 2 1255 2 
1418 2 1644 6 899 6 1748 2 1170 2 682 2 226 2 1417 2 
1048 2 1163 2 
1734 2 1453 2 29 4 1829 2 386 2 330 2 1506 6 541 2 207 4 287 2 529 2 1761 2 871 2 1414 2 377 2 825 2 1616 2 1709 2 
980 2 1273 2 
1061 2 672 2 1009 2 1748 2 1869 2 1640 2 1170 2 
252 2 1009 2 1869 2 
1009 2 1869 2 1308 2 
1273 2 1163 2 249 2 
1009 2 1869 2 
1163 2 1323 2 
1869 2 1790 2 
1273 2 1163 2 1788 2 
1273 2 920 2 1207 2 
408 2 1273 2 102 2 
1033 2 1273 2 1492 2 
565 2 1273 2 1255 2 
611 2 1163 2 
1839 2 1869 2 
1486 2 920 2 
408 2 737 2 
1033 2 1114 2 
1393 2 1255 2 
1237 2 1163 2 
1651 2 1255 2 
1033 2 547 2 
408 2 317 2 
858 2 920 2 
523 2 1273 2 1163 2 1788 2 
523 2 519 2 1273 2 1163 2 1788 2 
811 2 1273 2 1163 2 
1273 2 1163 2 1764 2 
1210 2 941 2 1337 2 946 2 
1722 2 
1291 2 491 2 1298 2 1670 2 722 2 500 2 621 2 626 2 380 2 1071 2 1682 2 1079 2 1685 8 1321 2 1326 4 978 2 1220 6 400 4 405 26 1107 2 983 2 986 2 160 2 538 2 1351 2 163 2 421 2 1588 2 1352 8 996 2 1465 26 51 2 52 2 304 2 1470 2 553 2 173 2 1006 2 1370 2 1012 6 784 2 1375 2 1860 2 185 2 789 2 1021 4 331 2 793 2 1867 4 194 2 1627 2 794 4 680 4 334 4 1628 2 466 2 1638 2 1509 2 1886 2 1158 2 1887 2 1159 2 345 2 90 2 209 2 348 2 1038 6 1774 2 708 2 1276 2 217 4 359 4 361 4 1411 2 482 2 1049 6 
1291 2 491 2 1298 2 1670 2 722 2 500 2 621 2 626 2 380 2 1071 2 1682 2 1079 2 1685 8 1321 2 1326 4 278 2 978 2 1220 6 400 4 405 26 1107 2 983 2 986 2 160 2 538 2 1351 2 421 2 1588 2 1352 8 996 2 1465 26 769 2 51 2 52 2 304 2 1470 2 553 2 173 2 1006 2 773 2 1011 2 1370 2 1012 6 784 2 1375 2 1860 2 789 2 1021 4 331 2 793 2 1867 4 194 2 334 1 794 4 680 4 1628 2 466 2 1638 2 1509 2 1886 2 1158 2 1887 2 1159 2 345 2 90 2 209 2 348 2 1038 6 1774 2 708 2 1041 2 217 4 1276 2 359 6 361 4 1279 2 1411 2 482 2 1049 6 
839 2 
1824 2 843 2 
491 2 1362 2 1787 2 1477 2 1004 2 837 2 1792 2 124 4 722 2 1676 2 1854 2 67 4 1677 2 126 2 1012 4 1549 2 1681 2 380 2 381 2 910 2 1751 6 569 4 1018 8 1316 2 332 2 195 2 1628 2 1322 2 798 4 685 2 1694 2 273 2 1326 2 466 2 202 2 1261 2 1888 6 1036 2 211 4 1710 4 1514 2 405 12 1654 2 1107 2 985 2 412 2 1040 2 1830 8 216 10 1276 2 1172 2 361 2 713 4 1524 4 766 2 1587 2 1529 2 1842 6 1465 6 1732 2 
491 2 1362 2 1787 2 1477 2 1004 2 837 2 1792 2 124 4 722 2 1675 2 1676 2 1854 2 67 4 1677 2 126 2 1012 4 959 2 1549 2 1681 2 380 2 910 2 1751 6 1018 8 569 4 1316 2 332 2 195 2 1628 2 1322 2 798 4 685 2 1694 2 1326 2 466 2 202 2 1261 2 1888 8 1036 2 211 4 1710 4 1514 2 405 12 1654 2 1107 2 1341 2 985 2 412 2 1040 2 817 4 1830 8 216 10 1276 2 1172 2 361 2 713 4 1524 4 766 2 1587 2 1529 2 1842 8 1465 6 1732 2 
1549 2 1694 2 1681 2 1040 2 1751 2 569 4 1172 2 837 2 713 2 124 2 1676 2 1888 2 766 2 67 2 1677 2 1322 2 798 4 685 2 
491 2 1362 2 1787 2 1477 2 1004 2 837 2 1792 2 124 4 722 2 1676 2 1854 2 67 4 1677 2 126 2 1012 4 1549 2 1681 2 380 2 381 2 910 2 1751 4 569 4 1018 4 1316 2 332 2 195 2 1628 2 1322 2 798 4 685 2 1694 2 273 2 1326 2 466 2 202 2 1261 2 1888 6 1036 2 211 4 1710 4 1514 2 405 12 1654 2 1341 2 1107 2 412 2 1040 2 1830 4 216 6 1276 2 1172 2 361 2 713 4 1524 4 766 2 1587 2 1529 2 1842 6 1465 6 1732 2 
491 2 1362 2 1787 2 1477 2 1004 2 837 2 1792 2 124 4 722 2 1676 2 1854 2 67 4 1677 2 126 2 1012 4 1549 2 1681 2 380 2 381 2 910 2 1751 6 569 4 1018 4 1316 2 332 2 195 2 1628 2 1322 2 798 4 142 2 685 2 1694 2 273 2 1326 2 466 2 202 2 1261 2 1888 4 1036 2 211 4 1710 4 1514 2 405 12 1654 2 1107 2 412 2 1040 2 1830 4 216 6 1276 2 1172 2 361 2 713 4 1524 4 766 2 1587 2 1529 2 1842 6 1465 6 1732 2 
491 2 1362 2 1787 2 1477 2 1004 2 837 2 1792 2 124 4 722 2 1676 2 1854 2 67 4 1677 2 126 2 1012 4 1549 2 1681 2 380 2 381 2 910 2 1751 6 569 4 1018 4 1316 2 332 2 195 2 1628 2 1322 2 798 4 685 2 1694 2 273 2 1326 2 466 2 202 2 1261 2 1888 6 1036 2 211 4 1710 4 1514 2 405 12 1654 2 1107 2 985 2 412 2 1040 2 1830 8 216 6 1276 2 1172 2 361 2 713 4 1524 4 766 2 1587 2 1529 2 1842 6 1465 6 1732 2 
491 2 1362 2 1787 2 1477 2 1004 2 837 2 1792 2 124 4 722 2 1676 2 1854 2 67 4 1677 2 126 2 1012 4 1549 2 1681 2 380 2 381 2 910 2 1751 8 569 4 1018 8 1316 2 332 2 195 2 1628 2 1322 2 798 4 142 2 685 2 1694 2 273 2 1326 2 466 2 202 2 1261 2 1888 6 1036 2 211 4 1710 4 1514 2 405 12 1654 2 1107 2 985 2 412 2 1040 2 1830 8 216 10 1276 2 1172 2 361 2 713 4 1524 4 766 2 1587 2 1529 2 1842 8 1465 6 1732 2 
491 2 1362 2 1787 2 1477 2 1004 2 837 2 1792 2 124 4 722 2 1676 2 1854 2 67 4 1677 2 126 2 1012 4 1549 2 1681 2 380 2 381 2 910 2 1751 6 569 4 1018 8 1316 2 332 2 195 2 1628 2 1322 2 798 4 685 2 1694 2 273 2 1326 2 466 2 202 2 1261 2 1888 6 1036 2 211 4 1710 4 1514 2 405 12 1654 2 1107 2 985 2 412 2 1040 2 1830 8 216 10 1276 2 1172 2 361 2 713 4 1524 4 766 2 1587 2 1529 2 1842 6 1465 6 1732 2 
491 2 1670 2 722 2 1674 2 1676 2 1677 2 1681 2 962 1 731 7 1682 2 1205 2 1685 4 23 2 1694 2 273 2 278 2 977 2 750 2 1220 8 1710 6 986 2 538 2 47 2 766 2 994 6 1727 2 996 2 1465 24 1732 2 51 2 52 2 998 6 1470 2 1477 2 1004 4 1006 2 67 4 1011 2 1012 6 784 2 1015 2 1750 6 1016 2 1751 8 569 4 789 2 1021 4 793 2 332 2 794 4 798 4 78 1 587 6 1509 2 341 10 1261 2 344 2 90 2 812 2 1768 2 1036 2 1266 6 1514 2 349 2 1038 6 1774 2 602 2 1040 2 1272 6 1275 6 1276 2 359 6 360 4 361 4 1524 4 1049 6 1529 2 1285 4 1284 2 112 6 1291 2 612 8 1787 2 117 2 1792 2 837 2 124 4 126 4 128 6 621 2 1549 2 845 2 626 2 380 2 848 1 383 1 1077 2 1316 2 1080 6 1085 1 860 2 1321 2 1322 2 142 4 862 2 1326 4 1813 6 400 2 645 2 1332 7 1333 2 405 46 1107 2 1576 6 410 1 412 4 1830 2 1831 1 160 2 1832 2 421 2 1587 2 1842 12 1352 4 165 2 1590 2 1127 2 1362 2 1133 6 1854 2 1621 1 1375 2 1622 2 910 2 189 1 194 4 195 2 1628 2 685 2 1634 6 1149 2 686 2 466 2 202 2 471 2 1886 2 1887 12 1888 4 701 6 211 8 1654 2 216 2 217 4 1172 2 1411 2 482 2 713 4 1413 2 1904 6 490 2 
1291 2 612 8 491 2 1787 2 117 2 837 2 1792 2 1670 2 124 4 722 2 1674 2 1676 2 126 4 1677 2 128 6 621 4 1549 2 845 2 626 2 1681 2 380 2 1682 2 1077 2 1205 2 1080 6 1316 2 1685 8 23 2 860 2 1322 2 1321 2 862 2 1694 2 273 2 1326 4 278 2 977 2 1813 6 750 2 1220 8 400 2 645 2 1333 2 1710 6 405 48 1107 2 1576 6 985 4 986 2 412 4 1830 6 1345 2 1832 2 160 4 538 2 47 2 421 2 766 2 1727 2 994 6 1842 12 1587 2 1352 8 165 2 996 2 1465 26 52 2 51 2 1732 2 1590 2 998 6 1127 2 1470 2 1362 2 1236 2 1133 6 1477 2 1004 4 1006 2 1854 2 67 4 1011 2 1012 6 784 2 1375 4 1015 2 1622 2 1750 6 910 2 1016 2 1751 8 569 4 789 2 1021 4 793 2 332 2 194 4 195 2 680 2 794 4 1628 2 798 4 685 2 1634 6 1149 2 587 6 686 2 202 2 466 2 471 2 1509 2 341 10 1886 2 1887 12 1261 2 344 2 1888 8 1768 2 812 2 701 6 90 2 1036 2 211 8 1266 6 349 2 1514 2 1654 2 1038 6 1774 2 602 2 1272 6 1040 2 216 2 1275 6 217 4 1276 2 359 6 360 4 1172 2 361 4 482 2 1411 2 713 4 1524 4 1049 6 1284 2 1285 4 1529 2 1413 2 112 6 1904 6 490 2 
1291 2 612 8 491 2 1787 2 117 2 837 2 1792 2 1670 2 124 4 722 2 1674 2 1676 2 126 4 1677 2 128 6 621 4 1549 2 845 2 626 2 1681 2 380 2 1682 2 1077 2 1205 2 1080 6 1316 2 1685 8 23 2 860 2 1322 2 1321 2 862 2 1694 2 273 2 1326 4 278 2 977 2 1813 6 750 2 1220 8 400 2 645 2 1333 2 1710 6 405 48 1107 2 1576 6 985 4 986 2 412 4 1830 6 1345 2 1832 2 160 4 538 2 47 2 421 2 766 2 1727 2 994 6 1842 12 1587 2 1352 8 165 2 996 2 1465 26 52 2 51 2 1732 2 1590 2 998 6 1127 2 1470 2 1362 2 1236 2 1133 6 1477 2 1004 4 1006 2 1854 2 67 4 1011 2 1012 6 784 2 1375 4 1015 2 1622 2 1750 6 910 2 1016 2 1751 8 1018 4 569 4 789 2 1021 4 793 2 332 2 194 4 195 2 680 2 794 4 1628 2 798 4 685 2 1634 6 1149 2 587 6 686 2 202 2 466 2 471 2 1509 2 341 10 1886 2 1887 12 1261 2 344 2 1888 8 1768 2 812 2 701 6 90 2 1036 2 211 8 1266 6 349 2 1514 2 1654 2 1038 6 1774 2 602 2 1272 6 1040 2 1275 6 216 6 1276 2 217 4 359 6 360 4 1172 2 361 4 482 2 1411 2 713 4 1524 4 1049 6 1284 2 1285 4 1529 2 1413 2 112 6 1904 6 490 2 
491 2 1670 2 722 2 1674 2 1676 2 1677 2 1681 2 965 6 1682 2 1205 2 1685 10 23 2 1694 2 273 2 278 2 977 2 279 6 750 2 1444 2 1220 12 756 2 1710 6 985 4 986 2 538 2 1458 6 47 2 766 2 549 6 994 12 1727 2 996 2 1465 24 51 2 1732 2 52 2 998 12 1470 2 1236 2 1477 2 1004 4 1006 2 67 4 68 6 1011 2 1012 6 784 2 1015 2 1750 12 1016 2 1751 10 569 4 1018 4 789 4 1021 4 793 2 332 2 794 6 798 4 587 6 1509 2 341 8 1261 2 344 2 90 2 812 2 1768 2 1036 2 1266 6 1514 2 349 2 1038 8 1774 2 602 2 1040 2 1272 6 1275 6 1276 2 359 6 360 4 361 4 1281 2 1524 4 1527 2 1049 8 1529 2 1285 4 1284 2 112 12 1291 4 612 8 1056 6 1787 2 117 2 833 6 372 2 1792 2 837 2 124 4 126 4 128 6 621 4 1549 2 845 2 626 4 380 2 1074 2 1077 2 1316 2 1080 6 860 2 1321 2 1322 2 142 2 1326 4 1813 12 400 4 645 2 1333 2 405 52 1107 2 1341 2 1576 6 1577 2 412 4 1830 6 1345 2 160 4 1832 2 1586 6 421 2 1587 2 1842 16 1352 10 165 2 666 2 1590 2 1127 2 1362 2 1133 12 1854 2 1375 4 1622 2 910 2 194 4 195 2 680 2 1628 2 685 2 1634 6 1149 2 686 2 202 2 466 2 1880 6 471 2 1886 2 1887 10 1888 10 701 6 211 8 1654 2 216 6 217 4 1172 2 1411 2 482 4 713 4 1413 2 1904 6 490 2 
1694 2 273 2 202 2 1362 2 1477 2 1792 2 1261 2 124 4 1676 2 1888 6 1854 2 126 2 1677 2 1036 2 211 2 1710 2 405 4 1681 2 985 2 216 4 1830 6 1751 6 1018 4 569 2 1316 2 713 4 1524 2 766 2 1842 4 1529 2 1587 2 1322 2 798 2 1732 2 685 2 
491 2 1792 2 1670 2 124 4 722 2 1676 2 126 2 1677 2 623 2 1681 2 626 3 380 2 1316 2 1321 2 1322 2 862 2 1694 2 273 2 1326 4 278 2 1220 8 400 3 1710 2 405 28 1107 2 1828 2 985 2 986 2 1830 6 538 2 1457 2 1722 2 421 2 766 2 1842 4 1587 2 996 2 1465 24 51 2 52 2 1732 2 1470 2 1362 2 1477 2 1006 2 177 3 1854 2 1011 2 1012 6 784 2 908 2 1751 6 569 2 1021 4 793 2 194 2 794 4 1628 2 798 2 685 2 1875 2 688 2 466 2 202 2 469 2 1509 2 341 2 1886 2 1887 4 1261 2 1160 2 1888 6 90 2 1036 2 211 2 1654 2 1038 6 1774 2 216 2 217 4 1276 2 359 6 361 4 1411 2 482 3 713 4 1524 2 1049 6 1529 2 
954 2 1036 2 1477 2 
954 2 1036 2 1477 2 
491 2 370 2 615 2 1792 2 722 2 124 4 376 2 1676 2 954 2 126 4 621 4 729 2 1681 2 380 2 627 2 1682 4 1685 4 1321 2 142 4 1694 4 1326 4 1562 2 278 2 397 2 978 4 1220 2 400 2 1570 2 37 2 1710 4 405 24 1107 2 1341 4 985 4 986 2 412 4 1830 6 160 4 538 2 421 2 1842 16 1352 4 996 2 1465 16 51 2 52 2 1470 2 1477 4 1004 2 1006 2 1854 2 67 4 1011 2 1012 6 1746 4 784 2 909 2 1375 4 1747 2 1751 12 569 2 1018 4 1021 4 793 2 1249 2 332 2 914 4 194 6 195 2 334 2 1628 2 798 2 686 2 466 2 468 2 1032 2 1509 2 341 2 1886 2 1887 4 344 2 1888 12 90 2 1036 6 211 4 349 2 1514 2 1038 2 1774 2 1893 2 706 2 1040 2 216 6 217 4 1276 2 359 6 360 2 1172 2 361 4 1411 2 713 4 484 2 1524 2 1049 2 1285 2 1904 2 
405 4 845 2 1107 2 1747 2 1883 2 360 2 1032 2 341 2 47 2 1887 2 837 2 484 2 647 2 1904 2 1465 2 843 2 1339 2 
1665 2 491 2 1787 2 615 2 1792 2 722 2 124 4 376 2 1676 2 954 2 126 4 621 4 729 4 1681 2 380 2 1429 2 627 2 1682 4 1685 4 1321 2 142 4 1694 4 1326 4 278 2 397 2 978 4 1220 2 400 4 1570 2 37 2 1710 4 405 24 1107 2 1341 4 985 4 986 2 412 4 1830 6 160 4 538 2 421 2 1842 16 1352 4 996 2 1465 16 51 2 52 2 1470 2 309 2 1477 4 1004 4 1006 2 1854 2 67 4 1011 2 778 2 1012 6 783 2 1746 4 784 2 909 2 1375 4 1747 2 1751 12 569 2 1018 4 1021 4 793 2 1249 2 332 2 914 4 194 6 195 2 334 1 1628 2 798 2 686 2 466 2 1032 2 1509 2 1886 2 1887 2 344 2 1888 12 90 2 1036 6 211 4 349 2 1514 2 1038 2 1774 2 1893 2 1040 2 216 6 217 4 1276 2 359 6 1172 2 361 4 1411 2 713 4 484 2 1524 2 1049 2 1285 2 1904 2 
491 2 1787 2 615 2 1792 2 1301 2 722 2 124 4 376 2 1676 2 954 2 126 4 621 4 729 2 1681 2 380 2 627 2 1682 4 1685 4 1321 2 142 4 1694 4 1326 4 278 2 397 2 978 4 1220 2 400 2 1570 2 37 2 1710 4 405 24 1107 2 1341 4 985 4 986 2 412 4 1830 6 160 4 538 2 421 2 1842 16 1352 4 996 2 1465 16 51 2 52 2 1470 2 57 2 1477 4 1004 4 1006 2 1854 2 67 4 1011 2 1012 6 1746 4 784 2 182 2 909 2 1375 4 1747 2 1378 2 1751 12 569 2 1018 4 1021 4 793 2 1249 2 332 2 914 4 194 6 195 2 334 1 1628 2 798 2 686 2 466 2 1032 2 1509 2 341 2 1886 2 1887 4 696 2 344 2 1888 12 90 2 1036 6 211 4 349 2 1514 2 1038 2 1774 2 1893 2 1040 2 216 6 217 4 1276 2 359 6 360 2 1172 2 361 4 1411 2 713 4 484 2 1524 2 1049 2 1285 2 1904 2 
0 38 2 2 3 2 950 2 4 2 7 2 955 2 12 2 956 2 957 2 958 2 16 2 960 2 963 2 19 2 20 80 966 2 21 16 22 2 23 8 969 1 25 2 26 2 971 2 972 2 27 2 28 2 30 2 976 2 35 2 36 8 39 2 40 2 41 2 982 2 986 2 987 1 989 180 990 3 993 3 992 2 996 8 49 2 997 2 50 78 52 2 1000 2 1001 78 1002 2 60 2 1003 2 64 2 65 22 1006 2 1010 2 66 2 1011 309 1012 10 1013 10 71 2 72 2 1017 3 1019 2 1021 480 73 2 75 2 76 2 1025 2 1026 2 79 2 80 2 81 2 83 2 84 3 1034 2 85 2 86 2 87 2 89 2 90 2 91 2 94 2 95 3 1038 32 1037 20 1039 2 96 2 98 2 100 2 101 34 103 2 104 2 1045 22 1046 78 1047 2 106 2 1049 18 109 2 111 3 1051 2 1052 2 1053 76 114 2 117 2 116 2 1059 6 121 2 123 2 1063 158 125 2 127 3 1066 20 1067 1 1068 2 132 78 1071 2 1074 2 135 6 1079 2 136 2 137 2 1081 12 1083 2 139 2 1086 3 1087 2 140 2 141 2 1089 80 143 2 1090 2 144 6 145 28 1091 8 148 2 151 2 1099 2 1100 2 154 2 1102 4 1104 2 1106 2 157 16 1108 3 1107 2 1111 12 1110 26 1113 80 1117 12 161 2 1119 2 1120 2 1121 12 1122 16 166 2 1123 2 1128 2 1130 10 173 3 1131 2 174 10 1134 2 175 2 1135 6 176 2 177 2 1137 2 179 8 183 6 180 78 181 38 184 2 1142 2 188 2 1144 2 191 6 193 38 194 2 196 2 1146 24 1147 2 1149 8 1152 8 203 2 1153 2 201 2 1154 2 1155 2 1156 2 204 4 205 2 1159 2 1160 2 1162 78 210 2 209 2 208 2 1165 2 215 2 1168 60 1169 2 217 402 220 62 1173 2 1176 2 223 2 222 2 1177 2 1178 2 1179 104 1180 78 228 10 227 15 1181 2 1182 4 1183 38 1184 2 1187 66 1190 2 234 20 235 2 241 14 242 2 1197 4 243 2 1198 2 244 2 1199 1 247 2 248 2 250 2 1201 6 253 4 254 3 1204 2 260 120 264 2 263 2 265 15 1212 6 1213 2 270 106 272 2 271 4 274 4 275 2 1215 2 276 234 1216 2 278 318 1217 24 280 38 1219 2 282 2 284 2 1220 126 1221 3 1224 2 288 2 289 2 1229 6 1228 2 293 2 1230 2 294 4 1231 1 296 60 298 2 299 78 300 2 1233 2 301 4 1235 10 303 12 304 2 307 78 308 24 311 38 314 6 316 2 319 60 318 2 1238 6 1240 3 321 2 1241 2 1243 38 1242 2 328 2 1246 4 331 2 1248 112 1250 18 1251 2 333 112 334 5 335 2 1252 40 1253 2 1254 4 336 40 1256 3 339 2 341 2 1259 3 1260 2 1264 2 1265 2 1267 2 1269 2 351 2 1270 2 352 2 354 2 1276 2 359 1106 1278 2 357 2 362 2 361 8 363 3 1281 2 1282 2 366 2 1284 8 367 6 1287 3 1288 2 1289 2 1291 84 368 3 369 2 1292 2 1297 12 371 2 1298 86 1299 2 1300 2 375 60 1303 2 1306 2 1305 78 1307 24 1309 8 379 2 378 2 380 2 382 2 384 2 385 2 389 2 1317 2 390 2 1321 4 391 38 392 4 1327 10 1326 8 394 1 1328 3 1329 2 400 110 401 40 402 2 403 2 1334 2 1335 6 1338 6 404 2 405 1174 407 2 1342 2 411 2 413 2 414 2 1348 38 415 2 418 16 419 14 420 2 421 2 422 2 1352 183 423 558 425 13 1354 2 1355 2 1357 2 1356 2 427 156 428 2 429 2 1359 22 1360 2 1366 3 433 2 434 2 440 20 1371 80 441 2 443 2 444 2 1373 78 445 3 446 3 1376 2 448 38 450 2 452 38 1382 2 1381 2 455 102 454 4 1385 2 1386 20 1388 2 461 2 1389 2 1392 8 464 2 466 2 1394 2 469 2 470 36 1395 3 471 4 472 10 1400 2 473 2 475 6 1402 2 1404 2 477 14 1405 2 480 3 1406 2 1407 80 481 38 482 46 1411 2 483 2 485 3 1412 2 486 2 1413 2 488 1 487 3 489 38 1416 3 1415 2 491 2 1420 2 494 4 495 2 1421 2 498 2 1424 2 1425 2 501 2 502 2 1426 24 504 8 1430 2 506 2 1431 6 1433 38 507 2 1435 4 1436 2 1437 4 509 158 1438 8 515 2 1439 2 1440 20 516 8 518 2 520 14 1444 4 521 2 1445 2 522 2 524 14 525 18 1446 2 1447 6 530 38 1449 2 532 156 1452 2 534 2 535 80 1454 34 1455 78 538 2 1457 2 1456 4 542 2 1459 8 1461 4 1462 80 1465 966 1467 2 1468 2 550 6 551 6 1469 2 1470 2 553 2 1475 2 554 14 1478 2 556 80 558 2 1481 3 562 2 1483 2 1484 4 1485 2 566 4 1491 3 568 2 1493 38 1497 3 574 11 575 2 1501 6 1502 2 578 2 577 2 579 156 580 78 582 2 588 14 590 2 589 2 591 2 592 2 593 38 594 8 1506 6 1508 2 1509 82 1511 22 1516 2 1518 2 1519 20 1522 2 604 2 1526 2 1525 2 1527 2 605 2 608 2 607 166 1531 4 610 2 1533 32 1534 234 613 78 614 2 1546 2 1548 1 622 2 626 16 629 2 1550 2 1551 14 630 8 1552 2 1553 2 632 2 1554 24 1555 4 633 2 634 38 1558 2 1559 7 635 4 637 2 640 10 1563 2 642 2 1566 1 1567 2 1565 2 643 2 645 2 646 2 1571 2 651 2 650 3 653 2 1575 3 1577 2 1578 2 654 2 1580 2 1581 2 1583 2 659 2 660 2 1584 2 1585 10 663 2 1588 4 666 2 1591 2 1592 2 668 24 1595 80 1596 2 1598 2 1600 2 1599 2 1602 2 1603 2 1606 2 1607 6 1608 2 1611 2 1614 2 1615 2 1618 3 1617 76 677 2 679 2 1626 2 681 4 1628 2 1629 2 1631 2 1635 80 689 4 1637 2 1641 2 693 1 692 4 694 2 1643 61 1645 2 1646 2 699 2 1649 2 1650 18 704 2 1655 2 707 2 710 18 1659 4 712 2 714 4 715 8 1663 2 716 2 1666 2 1669 18 1670 2 722 2 1671 6 1674 22 1672 54 725 2 1678 2 727 2 730 16 736 2 1682 18 735 4 733 48 1684 2 1683 2 1685 178 739 36 1686 4 1688 78 740 26 1689 80 1691 34 1693 10 1692 2 744 2 1696 2 1697 38 749 2 1699 2 750 2 751 10 752 3 1701 4 1703 2 755 2 756 2 1705 52 1707 2 1711 2 1712 2 1714 16 760 10 1715 1 1716 103 1717 2 1720 14 1724 158 765 2 1725 2 1727 16 1728 2 1730 2 768 2 770 2 1733 4 771 2 1739 2 1740 22 774 2 775 86 776 2 777 2 1742 2 1745 3 779 2 784 2 786 100 785 78 789 46 1753 2 793 84 792 2 794 12 795 12 796 2 799 32 1763 2 802 14 804 3 805 2 1765 2 808 1 1766 2 1769 20 1772 2 1770 2 1774 2 820 2 818 2 819 38 821 4 1777 2 1778 2 826 1 827 2 828 4 1783 2 1784 2 830 82 831 24 832 2 834 2 1789 4 836 80 840 38 841 4 1795 22 1796 2 846 2 849 14 1802 6 1804 2 1805 2 1807 3 853 2 855 2 1808 4 860 2 1809 2 861 2 1811 3 1812 2 866 2 1814 2 868 36 869 4 1817 2 870 2 1819 2 1820 3 873 3 1821 2 1825 3 1827 2 1832 2 1833 13 1836 2 880 80 881 2 1840 38 883 80 1843 3 1845 1 886 3 1848 4 1849 2 889 2 1851 2 890 2 892 8 893 2 1852 2 895 9 1853 2 896 6 897 2 900 4 902 4 1855 12 903 78 904 124 907 6 913 2 917 2 1868 78 921 38 1873 2 1875 2 1877 2 923 10 1882 2 1881 2 1886 8 1887 10 924 4 925 1 928 3 929 2 1891 10 1892 2 932 2 1894 2 1895 76 1896 2 934 80 936 2 935 2 937 2 1900 3 938 2 940 4 944 3 943 80 945 2 
405 2 1038 2 637 2 626 2 228 2 414 2 789 6 1753 2 1220 2 1599 2 400 2 1422 2 1259 2 482 2 1585 4 1670 2 1049 2 794 2 1224 2 210 2 1449 2 289 2 1465 2 1013 2 
405 2 1038 2 637 2 626 2 228 2 414 2 789 6 1753 2 1220 2 1599 2 400 2 1422 2 1259 2 482 2 1585 4 1670 2 1049 2 794 2 1224 2 210 2 1449 2 289 2 1465 2 1013 2 
405 2 1038 2 637 2 626 2 228 2 414 2 789 6 1753 2 1220 2 1599 2 400 2 1422 2 1259 2 482 2 1585 4 1670 2 1049 2 794 2 1224 2 210 2 1449 2 289 2 1465 2 1013 2 
303 2 550 4 831 4 1295 4 668 3 234 4 669 2 1599 2 1220 2 1258 2 400 3 1670 2 1368 2 597 3 1607 2 1609 2 1307 3 1705 2 1769 4 1650 4 1338 2 1201 2 1680 2 1202 2 253 2 405 10 1037 4 786 2 1861 2 566 2 1117 2 135 2 482 3 455 6 1082 2 1776 2 1386 4 1121 2 795 2 1465 4 
144 2 303 2 1693 2 550 4 831 4 1295 4 668 2 234 4 669 2 1599 2 1220 2 1258 2 400 2 1670 2 1368 2 597 2 1607 2 1609 2 1307 2 1705 2 1769 4 1650 4 1338 2 1201 2 1680 2 1202 2 253 2 405 10 1037 4 786 2 1861 2 98 2 566 2 1117 2 135 2 482 2 455 6 1082 2 1776 2 1386 4 1121 2 795 2 1465 4 
144 2 303 2 1693 2 550 4 831 4 1295 4 668 2 234 4 669 2 1599 2 1220 2 1258 2 400 2 1670 2 1368 2 597 2 1607 2 1609 2 1307 2 1705 2 1769 4 1650 4 1338 2 1201 2 1680 2 1202 2 253 2 405 10 1037 4 786 2 1861 2 98 2 566 2 1117 2 135 2 482 2 455 6 1082 2 1776 2 1386 4 1121 2 795 2 1465 4 
144 2 303 2 1693 2 550 4 831 4 1295 4 668 2 234 4 669 2 1599 2 1220 2 1258 2 400 2 1670 2 1368 2 597 2 1607 2 1609 2 1307 2 1705 2 1769 4 1650 4 1338 2 1201 2 1680 2 1202 2 253 2 405 10 1037 4 786 2 1861 2 98 2 566 2 1117 2 135 2 482 2 455 6 1082 2 1776 2 1386 4 1121 2 795 2 1465 4 
144 4 303 2 1693 4 550 4 831 4 1295 4 668 2 234 4 669 2 1599 2 1220 2 1258 2 400 2 1670 2 1368 2 597 2 1607 2 1609 2 1307 2 1705 2 1769 4 1650 4 1338 2 1201 2 1680 2 1202 2 253 2 405 10 1037 4 786 2 1861 2 98 4 566 2 1117 2 135 2 482 2 455 6 1082 2 1776 2 1386 4 1121 2 795 2 1465 4 
853 2 1783 2 1859 2 562 2 692 2 886 2 1298 2 
1105 2 1184 2 1550 2 475 2 540 2 886 2 
1325 2 801 1 1092 2 1594 2 1472 2 499 2 723 2 405 10 1166 2 1014 2 1312 2 1276 2 1277 2 358 1 46 1 1044 2 1143 2 1319 1 1463 1 939 2 994 2 664 2 942 2 1847 2 1465 8 1441 2 
168 2 303 6 144 3 1091 2 828 2 272 2 1693 4 586 2 1784 2 550 4 551 4 831 15 1789 2 777 2 1607 6 1650 12 1338 6 1201 6 405 6 290 2 1430 2 98 2 566 2 1862 2 1802 4 1117 6 135 6 714 2 1121 6 1211 1 1465 6 
405 1 999 2 1271 4 1826 2 325 2 291 1 292 6 431 2 234 2 1461 2 1754 2 807 2 1263 2 1448 2 1386 2 153 2 1769 2 1465 1 
1826 2 999 2 1271 4 325 2 292 6 431 2 234 2 1461 4 1754 2 807 4 1263 4 1448 2 1386 2 153 2 1769 2 
405 1 1826 8 999 6 1271 4 325 2 291 1 292 10 431 2 234 2 1461 8 1754 2 807 8 1263 8 1448 2 1386 2 153 2 1769 2 1465 1 
1271 2 325 2 292 2 431 2 234 2 1461 2 1754 2 807 2 1263 2 1448 2 1386 2 153 2 1769 2 
1180 6 613 10 1534 92 1183 4 1188 90 836 24 952 26 1671 4 1063 16 1305 10 1194 26 255 8 256 2 132 6 1431 2 1433 4 20 6 508 10 966 8 631 8 509 16 1688 6 1689 6 1321 8 1089 6 270 42 145 15 1811 4 516 2 393 4 276 84 31 4 278 58 1093 4 280 4 641 12 1447 2 527 10 530 4 1335 2 1226 24 405 150 532 17 42 2 1716 22 1113 6 535 6 1455 10 989 34 1348 4 1462 6 762 2 419 7 880 6 1724 16 1841 4 299 4 164 2 1352 28 50 24 423 124 1465 134 425 11 302 2 55 4 427 18 307 6 1471 4 1001 10 1595 6 311 4 1135 2 556 6 775 8 1853 8 1743 2 1238 4 1480 1 1011 58 1855 4 178 2 904 12 903 6 782 2 181 4 180 6 785 10 1243 4 449 2 1752 4 452 4 1021 112 1380 24 793 14 574 7 1145 90 1500 2 334 4 1868 6 918 18 579 36 580 6 77 4 336 2 1874 2 1504 8 1256 2 802 8 593 4 1509 14 596 10 1162 6 476 6 353 24 934 6 217 88 1407 6 218 4 359 248 219 2 1046 24 715 4 109 8 1179 42 487 6 607 50 943 6 1780 2 
1125 2 427 2 55 2 613 2 115 2 1001 2 1595 2 1060 2 1540 4 497 2 775 6 1063 4 10 2 1853 2 1743 2 1479 2 1305 2 1011 3 842 2 1620 2 847 2 785 2 256 2 1490 2 964 2 676 2 508 2 966 2 631 2 1496 2 1380 2 1021 20 509 4 793 2 456 2 1501 4 334 2 579 2 1689 2 1321 2 1633 4 1811 1 1029 2 639 2 278 3 803 2 1700 2 1509 2 596 2 810 2 527 2 1816 2 1704 2 1225 2 347 2 814 2 703 2 1226 2 1103 2 405 46 532 2 42 2 353 2 1775 2 655 2 1658 2 877 2 1455 2 44 4 934 2 217 20 1407 2 1897 2 1116 2 1408 2 1719 2 359 45 1462 2 762 2 880 2 1661 2 364 2 1724 4 164 2 109 2 883 6 1352 37 487 3 717 2 423 6 1780 2 1465 44 
1054 4 1419 2 1180 4 1534 24 613 4 1183 4 1185 8 836 8 1060 10 497 2 1671 4 1063 10 10 2 1305 4 130 4 256 2 132 4 1433 4 20 4 966 2 509 10 1084 16 1688 4 1321 2 1689 4 1089 4 270 16 146 4 145 8 1214 2 276 24 278 30 280 4 1094 8 530 4 1335 2 405 78 532 10 1451 2 655 10 1113 4 535 4 1455 4 989 30 1348 4 762 2 1462 4 1837 32 880 4 1724 10 164 2 1352 14 1589 2 423 24 1465 70 302 2 427 10 307 4 1736 4 1001 4 552 16 1130 2 1595 4 311 4 1476 8 1135 2 775 6 1853 2 1743 2 1238 4 1011 28 1855 2 904 14 903 4 181 4 180 4 785 6 1243 4 675 4 1624 4 452 4 1021 44 793 6 192 2 574 3 1868 4 579 6 580 4 1870 4 1874 2 1151 8 802 4 593 4 1509 6 1162 4 934 4 217 36 1407 4 1408 10 359 104 364 2 109 2 1179 8 487 2 607 8 943 4 1780 2 
427 2 613 2 1001 2 1595 4 1671 2 775 4 1063 6 1853 2 10 2 1743 2 1238 2 1305 2 1011 12 1855 2 782 2 256 2 785 2 1431 2 449 2 966 2 1021 14 509 6 793 2 334 2 579 2 1321 2 1689 4 145 5 278 12 1256 1 802 4 1509 2 1447 2 405 28 532 2 42 2 1716 9 1658 2 1455 2 934 4 217 14 1407 4 359 40 989 6 762 2 1462 4 419 1 880 4 715 2 1724 6 299 2 109 2 164 2 1352 14 487 2 423 8 425 1 1780 2 1465 26 
1762 2 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 
1838 1 113 1 198 1 878 1 835 1 1731 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.NullPointerException 124 790 1118 207 484 713 662 294 1128 524 778 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V ERROR java.lang.NullPointerException 707 1103 751 
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V ERROR java.lang.NullPointerException 707 1103 751 
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 1157 235 986 940 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V ERROR utilMDE.Assert$AssertionException (794,1085) (794,1085) (56,95,117,138,141,555,592,646,718,1053) 1126 
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.Quant:isReverse([I[I)Z
daikon.Quant:subsetOf([B[I)Z
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_101()Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_149()Z
jtb.JavaParser:jj_3R_63()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
jtb.JavaParser:jj_3_5()Z
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.MathMDE:negate(I)I
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.Quant:gt(II)Z
utilMDE.Intern:intern([I)[I
daikon.ValueTuple:isMissing(I)Z
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.Quant:eltsLTE([II)Z
jtb.JavaParser:jj_3_25()Z
utilMDE.FuzzyFloat:gte(DD)Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
jtb.JavaParser:jj_3R_47()Z
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_inverse([II)[I
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.VarInfo:relate_var()V
daikon.ValueTuple:size()I
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:hashCode()I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.PptSlice0:arity()I
daikon.Quant:subsetOf([D[D)Z
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_97()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE:isSubarray([I[II)Z
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern:intern([J)[J
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.Quant:eq(FF)Z
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:concat([I[I)[I
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.JavaParser:jj_3R_148()Z
utilMDE.WeakHasherMap:processQueue()V
daikon.test.FormatTestCase:passes()Z
daikon.VarInfo:dbc_name()Ljava.lang.String;
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.Intern:intern([D)[D
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.MathMDE:pow_fast(II)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_121()Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
jtb.JavaParser:jj_3R_163()Z
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsLteIndex([I)Z
jtb.JavaParser:jj_3_16()Z
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_109()Z
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_2_3(I)Z
daikon.ModBitTracker:num_sets()I
daikon.Quant:eltsEqualIndex([I)Z
daikon.Quant:ne(II)Z
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DD)D
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.Quant:eltsGTE([II)Z
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_210()Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.Invariants:Invariants()V
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.config.Configuration:apply(Ljava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.Quant:lte(II)Z
jtb.JavaParser:jj_3R_105()Z
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Fmt:i(I)Ljava.lang.Integer;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
jtb.JavaParser:jj_3R_73()Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
jtb.JavaCharStream:backup(I)V
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:subsetOf([S[S)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.PptName:isEnterPoint()Z
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:jj_3R_123()Z
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.VarInfoName:repr()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.Quant:memberOf(F[F)Z
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.ArraysMDE:min([I)I
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_161()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.InvMap:InvMap()V
daikon.Quant:lexEqual([I[I)Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.ModBitTracker:num_vars()I
jtb.JavaParser:jj_3R_100()Z
daikon.simplify.LemmaStack:noticeInt(J)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.VarInfoName.ElementsFinder:inPre()Z
jtb.JavaParser:jj_3R_110()Z
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3_22()Z
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.PptSlice1:num_samples()I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaParser:jj_3R_60()Z
daikon.Quant:union([I[I)[I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
jtb.JavaCharStream:getBeginLine()I
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
jtb.JavaParser:jj_3_36()Z
utilMDE.FuzzyFloat:lte(DD)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.Intern:internStrings([Ljava.lang.String;)V | CONDITION | 534 | if (x) -> if (!x)
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseDivides([I[I)Z
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_2_14(I)Z
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3_35()Z
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.ProglangType:isPseudoArray()Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.ModBitTracker:num_samples()I
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParserTokenManager:MoreLexicalActions()V
daikon.diff.RootNode:RootNode()V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGTE([I)Z
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:baseIsScalar()Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_104()Z
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_102()Z
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
jtb.JavaParser:jj_3R_124()Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_27()Z
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.inv.Invariant:logDetail()Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:sum([D)D
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
jtb.JavaParser:jj_3_19()Z
daikon.PptTopLevel.CondIterator:hasNext()Z
jtb.JavaCharStream:getEndLine()I
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:split(I)I
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:jj_3R_55()Z
jtb.JavaCharStream:readChar()C
utilMDE.MathMDE:gcd(JJ)J
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:sorted([I)Z
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_119()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_14()Z
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_3R_98()Z
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_3R_80()Z
utilMDE.MathMDE:gcd([I)I
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.Quant:intersection([I[I)[I
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:gte(II)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:jj_3R_68()Z
daikon.PptSlice2:arity()I
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_13(I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Intern:numIntArrays()I
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_3R_118()Z
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:simplify_name()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:lt(II)Z
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:jj_2_21(I)Z
daikon.Quant:memberOf(I[I)Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_2_35(I)Z
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.Quant:lexNotEqual([I[I)Z
utilMDE.ArraysMDE:min_max([I)[I
jtb.JavaParser:jj_3_12()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
utilMDE.LimitedSizeIntSet:size()I
daikon.PptName:isCombinedExitPoint()Z
daikon.ProglangType:isScalar()Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsGteIndex([I)Z
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName:toString()Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.JavaParser:jj_3R_106()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:memberOf(D[F)Z
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_126()Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_133()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
jtb.JavaCharStream:ReadByte()C
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.MathMDE:gcd(II)I
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:max([I)I
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:ModBitTracker(I)V
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.ProglangType:isIntegral()Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.Quant:eq(JJ)Z
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_107()Z
daikon.ProglangType:dimensions()I
daikon.Quant:setEqual([I[I)Z
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.ProglangType:baseIsIntegral()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.JavaParser:jj_2_15(I)Z
daikon.Quant:memberOf(S[S)Z
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.JavaParser:jj_3_3()Z
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaCharStream:getEndColumn()I
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:name()Ljava.lang.String;
daikon.Quant:eq(DD)Z
jtb.JavaParser:jj_3R_117()Z
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_scan_token(I)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.JavaParser:jj_3R_52()Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParser:jj_3R_61()Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaParser:jj_3_17()Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.Quant:eltwiseLT([I)Z
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.ProglangType:isFloat()Z
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.JavaParser:jj_3_4()Z
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:pairwiseSquare([I[I)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z | ASSIGN | 8607 | = null
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.JavaParser:jj_3R_77()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.OrderedPairIterator:setnext2()V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:lexGT([I[I)Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:jj_3_13()Z
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_2_36(I)Z
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.Invariant:justified()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.JavaParser:jj_2_10(I)Z
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:fn_is_total([I)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:lexLTE([I[I)Z
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_10()Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_21()Z
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.ArraysMDE:sum([I)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
utilMDE.ArraysMDE:indexOf([II)I
jtb.JavaParser:jj_3R_96()Z
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:jj_2_16(I)Z
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
utilMDE.MathMDE:missing_numbers([I)[I
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.Quant:subsetOf([D[F)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:jj_3R_48()Z
daikon.Ppt:Ppt()V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.PptSlice0:initInvariantsSeen()V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_99()Z
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:slice([III)[I
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.Quant:noDups([I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
jtb.JavaParser:jj_3R_74()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
jtb.JavaParser:jj_3_29()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
jtb.JavaParser:jj_3R_135()Z
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_67()Z
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
utilMDE.MathMDE:mod_positive(JJ)J
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:setDiff([I[I)[I
jtb.JavaParser:jj_3R_50()Z
daikon.inv.unary.scalar.NonZero:enabled()Z
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParser:jj_3R_89()Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.test.InvariantFormatTester:execute()Z
daikon.ValueTuple:isMissingFlow(I)Z
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.VarInfoName:ioa_name()Ljava.lang.String;
utilMDE.MathMDE:pow(II)I
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.ArraysMDE:subarray([III)[I
utilMDE.FuzzyFloat:ne(DD)Z
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.PptSlice1:arity()I
jtb.JavaParser:jj_3R_72()Z
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_51()Z
utilMDE.MathMDE:modulus([I)[I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_88()Z
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3_18()Z
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.Quant:eltwiseNotEqual([I)Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
utilMDE.OrderedPairIterator:setnext1()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.Quant:subsetOf([F[F)Z
daikon.VarInfo:java_name()Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:jj_3_15()Z
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_2_12(I)Z
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParser:jj_3R_122()Z
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.OrderedPairIterator:hasNext()Z
jtb.JavaParser:jj_3_30()Z
utilMDE.Options.OptionInfo:argument_required()Z
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.ValueSet:ValueSet(I)V
jtb.JavaParser:jj_3R_116()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.Quant:pairwiseNotEqual([I[I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.inv.unary.scalar.NonModulus:updateResults()V
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
daikon.Quant:sameLength([I[I)Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_56()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_2_5(I)Z
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_test(I)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
daikon.Quant:subsetOf([F[D)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
jtb.JavaParser:jj_3R_108()Z
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.Quant:eltsLT([II)Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_69()Z
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.ArraysMDE:element_range([I)I
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
utilMDE.WeakHasherMap:size()I
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Debug:logOn()Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
jtb.JavaParser:jj_3R_162()Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
utilMDE.Assert:assertTrue(Z)V
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments; | RETURN | 50313 | return null
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.JavaParser:jj_3_20()Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Invariant:isWorthPrinting()Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.ProglangType:isArray()Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_3R_85()Z
jtb.JavaParser:jj_3R_86()Z
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:new_ppt()V
daikon.Quant:eltwiseGT([I)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
utilMDE.ArraysMDE:sum([[D)D
jtb.JavaParser:jj_3R_120()Z
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:subsetOf([J[J)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_3R_115()Z
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_134()Z
daikon.Quant:lexLT([I[I)Z
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.JavaParser:jj_3R_114()Z
daikon.Debug:logDetail()Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
jtb.JavaParser:jj_2_25(I)Z
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.JavaParser:jj_ntk()I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:baseIsFloat()Z
daikon.Quant:eltsGT([II)Z
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_49()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_87()Z
daikon.diff.Node:Node()V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3_28()Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_70()Z
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.JavaParser:jj_3R_125()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:jj_3R_53()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
557 4 829 2 994 2 120 2 917 2 794 2 252 2 1085 2 1046 2 
717 6 800 2 692 2 812 6 875 2 145 2 943 2 1008 2 106 2 978 6 1177 2 
584 6 1192 6 281 6 616 4 954 2 844 2 794 2 209 2 527 2 795 6 474 2 1085 2 151 4 
1110 8 732 2 1069 30 734 12 1032 2 664 8 783 16 40 4 956 4 389 10 93 2 95 6 896 8 1085 6 12 2 232 16 926 2 187 26 671 10 194 10 56 6 909 4 173 16 142 8 329 2 722 10 794 6 113 10 797 2 332 4 
684 6 287 4 
587 2 
176 2 3 2 1069 6 734 2 664 2 1075 2 783 2 1117 2 389 2 232 2 1124 2 187 4 671 2 194 4 56 2 909 2 520 2 172 2 1097 2 173 2 722 2 1175 2 113 2 
579 6 1069 14 734 5 783 8 141 4 173 8 509 2 722 4 113 4 389 4 332 2 358 2 232 8 555 4 187 12 671 4 336 6 
217 2 454 2 219 4 119 2 33 2 1030 2 1072 4 887 4 9 4 465 2 700 62 953 2 424 4 601 2 309 2 895 2 551 4 1084 2 11 2 747 2 164 8 673 4 192 4 1203 2 166 4 105 2 824 2 614 10 862 2 483 2 968 2 522 14 618 4 247 4 528 2 1102 10 214 2 70 6 1219 4 1024 4 
696 2 587 2 2 2 387 2 1010 2 1019 2 727 2 175 2 983 2 445 2 
773 2 840 2 916 2 988 2 454 2 1072 2 7 2 223 2 463 2 1150 2 1079 2 382 4 93 2 1155 2 551 4 1085 4 164 2 477 2 318 2 1165 2 648 2 794 4 252 2 414 2 944 2 259 2 803 2 589 2 343 2 1119 2 813 4 267 2 43 2 1042 2 822 2 434 2 757 2 908 2 677 2 370 2 143 2 147 2 620 2 67 4 
579 6 117 4 987 2 1110 6 1069 54 734 22 1032 2 592 8 664 18 783 32 266 6 998 4 389 16 95 4 1085 4 1047 2 232 32 187 48 555 4 671 16 236 6 561 2 904 6 194 6 138 2 56 4 1053 4 909 2 646 4 173 32 141 4 718 4 912 6 619 2 722 16 794 4 113 16 69 2 336 6 
1084 2 164 2 70 2 
1142 2 944 2 945 22 118 2 758 2 220 2 841 2 367 2 1092 2 327 2 62 2 957 10 960 2 49 2 
775 4 453 2 779 3 458 2 301 6 8 2 10 2 781 1 631 2 1082 2 1081 2 920 6 633 16 785 1 1085 32 931 2 167 1 1090 2 645 32 1094 2 793 2 18 1 328 2 19 2 1099 12 794 34 796 2 649 2 26 3 25 2 799 2 1106 16 656 2 801 2 337 4 32 2 180 4 661 32 182 2 340 2 501 2 949 1 505 2 506 8 1115 2 346 2 348 2 42 1 667 12 356 1 1122 3 190 2 1127 2 54 2 674 2 969 2 58 2 1131 2 1132 2 199 2 198 1 1135 2 829 2 200 2 201 2 203 2 974 16 832 6 206 2 1137 2 687 2 212 4 532 2 835 2 689 2 837 2 376 1 73 2 378 2 76 2 222 2 1149 2 381 16 79 4 80 2 995 8 847 2 848 2 87 2 999 2 705 4 228 3 229 1 96 2 392 2 554 2 98 3 559 2 1160 2 238 2 857 2 104 8 866 2 1167 2 107 2 1014 2 1171 2 1016 2 572 1 246 2 110 2 1018 2 248 6 724 2 251 2 726 24 1181 1 1183 3 582 2 877 3 123 2 1191 1 422 2 883 4 1034 3 262 5 738 2 425 2 888 3 1037 1 1039 3 1197 1 743 2 268 2 751 2 134 2 605 4 755 2 903 2 611 24 435 2 760 2 437 3 278 2 440 1 1058 2 1060 2 443 3 622 1 
1002 2 
794 2 298 2 
161 2 794 4 253 2 
625 54 296 2 629 26 303 2 919 2 306 2 308 2 635 4 313 2 928 4 637 158 638 54 930 2 641 2 317 54 322 2 17 2 326 2 647 2 936 4 20 40 22 4 23 2 938 2 333 2 651 2 27 54 652 56 654 2 653 2 29 4 657 2 31 2 30 2 660 2 662 2 339 2 948 4 341 32 344 2 36 2 665 54 351 4 355 6 357 2 669 12 959 26 359 2 361 2 672 2 964 2 965 2 53 2 966 18 364 2 675 2 967 4 679 266 59 2 970 2 368 2 971 2 973 2 61 2 681 4 682 2 976 2 64 4 371 2 683 4 65 4 977 54 373 2 685 2 375 2 989 2 990 2 75 2 380 2 992 4 699 2 78 48 701 2 702 2 89 2 385 2 386 2 91 10 708 2 709 2 94 2 97 2 1001 12 393 2 710 12 395 24 102 2 397 2 1009 2 1011 54 712 54 713 2 711 2 715 2 403 2 404 2 1015 12 720 18 407 2 111 2 112 10 725 12 409 4 411 10 1021 2 413 2 1023 4 415 2 729 2 418 2 1029 2 121 26 733 2 122 2 420 54 1033 4 124 12 1035 2 1036 40 125 12 741 2 1040 2 129 26 430 4 431 158 1044 2 748 2 754 2 135 4 1049 4 756 2 136 6 436 2 765 2 140 4 1054 2 441 12 1055 2 770 2 149 2 771 6 444 12 1063 2 150 2 447 54 1068 14 153 2 455 4 778 2 1071 26 460 2 461 2 1077 2 782 2 1078 2 1083 4 473 2 476 4 165 4 478 4 481 40 482 2 1089 48 789 30 790 6 1091 2 484 2 170 2 1095 2 485 2 1098 2 174 2 1108 4 1109 2 499 2 1113 2 502 4 503 2 504 10 507 2 810 32 809 2 508 6 811 2 1118 4 814 10 817 14 513 2 186 2 512 2 1120 12 818 4 516 2 188 2 191 2 821 2 517 2 518 4 823 2 1128 2 825 2 1130 2 197 2 521 2 202 2 524 2 831 4 207 2 211 2 1138 2 210 2 531 2 535 12 838 2 1145 4 545 2 543 2 226 54 547 2 1151 2 1154 2 1156 2 552 10 852 54 853 2 237 16 856 2 1163 2 567 2 864 2 1166 30 867 2 243 4 244 12 870 4 249 2 1179 2 576 2 578 6 577 2 1182 4 881 4 588 2 1189 2 591 2 885 32 261 26 593 4 594 4 1194 2 263 8 596 2 264 2 597 2 892 20 1200 2 1199 2 898 2 269 4 608 2 607 158 905 2 906 2 907 2 1205 2 613 18 282 2 910 2 1211 2 1212 2 283 2 284 2 285 2 1214 2 1216 2 913 2 289 2 1218 2 621 2 293 2 1220 4 294 2 
1025 2 1017 2 365 1 1043 2 
610 2 1043 2 
108 2 1176 2 354 2 164 2 
108 2 314 2 1176 2 354 2 164 2 807 2 
956 2 1176 2 164 2 1043 2 544 2 927 2 
147 2 851 2 
956 2 1176 2 842 2 164 2 
1174 2 196 2 
169 2 540 2 
497 2 1065 2 
60 2 55 2 
55 2 1146 2 540 2 
55 2 540 2 764 2 
723 2 55 2 540 2 
55 2 947 2 540 2 
1196 2 127 2 784 2 164 2 402 6 250 2 1176 2 533 6 
156 2 882 2 
494 2 956 2 1176 2 164 2 807 2 1043 2 544 2 
643 2 1043 2 544 2 
471 2 1043 2 544 2 
156 2 1025 2 0 2 
1043 2 544 2 
156 2 933 2 
740 2 1043 2 
156 2 1025 2 806 2 
1025 2 497 2 873 2 
1025 2 526 2 55 2 
1025 2 196 2 553 2 
1025 2 540 2 439 2 
156 2 230 2 
975 2 1043 2 
497 2 688 2 
271 2 55 2 
1116 2 196 2 
377 2 540 2 
156 2 155 2 
565 2 540 2 
196 2 736 2 
55 2 139 2 
583 2 497 2 
156 2 1025 2 276 2 806 2 
156 2 1025 2 276 2 550 2 806 2 
156 2 1025 2 353 2 
156 2 1025 2 704 2 
624 2 396 2 38 2 836 2 
255 2 655 2 580 2 101 2 581 2 1 2 945 6 239 2 1051 2 1013 2 827 2 88 2 815 2 668 4 980 2 231 2 1123 4 636 2 
1025 2 562 2 
687 2 
691 2 775 4 73 2 694 2 222 2 1149 2 79 4 10 2 631 2 1081 2 1082 2 87 2 633 6 705 4 707 2 1085 14 96 2 559 6 929 2 645 6 1014 2 794 14 248 4 1103 2 180 4 340 2 1115 2 346 2 751 2 963 2 54 2 903 2 435 2 198 2 829 2 201 2 832 6 1137 2 1217 4 532 2 837 2 689 2 
691 2 775 4 73 2 694 2 222 2 1149 2 79 4 10 2 631 2 1081 2 1082 2 847 2 87 2 633 6 705 4 707 2 1085 14 96 2 559 6 929 2 645 6 1094 2 1014 2 794 14 248 6 1103 2 180 4 340 2 1115 2 346 2 751 2 963 2 54 2 903 2 435 2 198 2 829 2 201 2 832 6 1137 2 1217 4 532 2 837 2 689 2 
889 2 
979 2 678 2 
72 2 536 4 1143 2 459 2 542 2 464 8 10 2 632 4 631 2 304 2 87 2 310 2 705 2 92 2 390 10 1085 6 234 2 558 2 859 2 316 2 1008 4 106 2 714 4 242 2 569 2 716 2 1170 2 717 6 406 4 794 12 1177 4 943 2 256 2 417 2 730 8 878 2 946 2 180 2 340 2 500 2 812 6 1195 4 41 2 133 2 273 2 903 2 275 2 1129 2 911 2 63 2 1056 2 832 4 286 2 1137 2 372 4 374 2 978 6 1139 2 532 2 534 2 
72 2 536 4 1143 2 459 2 542 2 6 2 464 8 10 2 632 4 631 2 304 2 87 2 705 2 310 2 92 2 390 10 1085 6 234 2 859 2 316 2 1008 4 106 2 714 4 569 2 716 2 1170 2 717 8 406 4 794 12 1177 4 800 2 943 2 256 2 417 2 730 8 878 2 419 4 946 2 180 2 340 2 500 2 812 8 1195 4 41 2 133 2 962 2 273 2 903 2 275 2 1129 2 911 2 63 2 1056 2 832 4 286 2 1137 2 372 4 374 2 1139 2 978 6 532 2 534 2 
859 2 273 2 256 2 1143 2 275 2 878 2 1008 2 569 2 716 2 1170 2 717 2 632 2 1195 4 286 2 372 4 92 2 1177 2 978 2 
72 2 536 4 1143 2 459 2 542 2 464 4 10 2 632 4 631 2 304 2 87 2 310 2 705 2 92 2 390 6 1085 6 234 2 558 2 859 2 316 2 1008 4 714 4 242 2 569 2 716 2 1170 2 717 6 406 4 794 12 1177 4 800 2 943 2 256 2 417 2 730 4 878 2 946 2 180 2 340 2 500 2 812 6 1195 4 41 2 133 2 273 2 903 2 275 2 1129 2 911 2 63 2 1056 2 832 4 286 2 1137 2 372 4 374 2 978 4 1139 2 532 2 534 2 
72 2 692 2 536 4 1143 2 459 2 542 2 464 4 10 2 632 4 631 2 304 2 87 2 310 2 705 2 92 2 390 6 1085 6 234 2 558 2 859 2 316 2 1008 4 714 4 242 2 569 2 716 2 1170 2 717 4 406 4 794 12 1177 4 943 2 256 2 417 2 730 4 878 2 946 2 180 2 340 2 500 2 812 6 1195 4 41 2 133 2 273 2 903 2 275 2 1129 2 911 2 63 2 1056 2 832 4 286 2 1137 2 372 4 374 2 978 6 1139 2 532 2 534 2 
72 2 536 4 1143 2 459 2 542 2 464 4 10 2 632 4 631 2 304 2 87 2 310 2 705 2 92 2 390 6 1085 6 234 2 558 2 859 2 316 2 1008 4 106 2 714 4 242 2 569 2 716 2 1170 2 717 6 406 4 794 12 1177 4 943 2 256 2 417 2 730 8 878 2 946 2 180 2 340 2 500 2 812 6 1195 4 41 2 133 2 273 2 903 2 275 2 1129 2 911 2 63 2 1056 2 832 4 286 2 1137 2 372 4 374 2 978 6 1139 2 532 2 534 2 
72 2 692 2 536 4 1143 2 459 2 542 2 464 8 10 2 632 4 631 2 304 2 87 2 310 2 705 2 92 2 390 10 1085 6 234 2 558 2 859 2 316 2 1008 4 106 2 714 4 242 2 569 2 716 2 1170 2 717 6 406 4 794 12 1177 4 943 2 256 2 417 2 730 8 878 2 946 2 180 2 340 2 500 2 812 8 1195 4 41 2 133 2 273 2 903 2 275 2 1129 2 911 2 63 2 1056 2 832 4 286 2 1137 2 372 4 374 2 978 8 1139 2 532 2 534 2 
72 2 536 4 1143 2 459 2 542 2 464 8 10 2 632 4 631 2 304 2 87 2 310 2 705 2 92 2 390 10 1085 6 234 2 558 2 859 2 316 2 1008 4 106 2 714 4 242 2 569 2 716 2 1170 2 717 6 406 4 794 12 1177 4 943 2 256 2 417 2 730 8 878 2 946 2 180 2 340 2 500 2 812 6 1195 4 41 2 133 2 273 2 903 2 275 2 1129 2 911 2 63 2 1056 2 832 4 286 2 1137 2 372 4 374 2 978 6 1139 2 532 2 534 2 
627 2 298 6 301 2 302 6 10 2 631 2 304 2 632 4 920 2 633 6 310 2 922 6 311 6 316 2 640 2 321 2 325 1 645 8 16 2 330 1 937 6 24 2 650 10 335 2 334 1 337 2 943 4 946 2 661 2 35 2 340 2 346 2 41 2 667 4 963 4 54 2 63 2 372 4 374 2 978 8 686 6 689 2 692 4 691 2 72 4 694 2 73 2 379 2 79 4 83 6 383 2 87 2 705 4 999 2 92 2 390 2 96 2 1002 6 394 1 100 2 99 2 1008 4 1007 2 714 4 1014 2 716 2 717 4 406 8 719 2 412 2 417 2 730 2 1028 2 735 4 737 1 128 1 745 2 751 2 133 2 753 6 752 2 435 2 766 2 1056 2 1059 2 1062 1 446 2 1066 1 775 4 448 7 459 2 462 6 467 2 466 2 158 2 1082 2 1081 12 472 4 161 6 1085 24 788 2 1094 2 486 6 1099 4 794 46 1101 2 180 4 500 2 1115 2 506 2 812 12 1129 2 1133 2 829 2 201 2 1136 1 832 6 1137 2 1139 2 212 2 213 6 532 2 534 2 837 2 536 6 1143 2 222 2 1149 2 542 2 847 2 1152 2 234 2 559 6 859 2 1162 8 242 2 569 2 1170 2 248 6 1177 4 872 6 1178 2 575 6 876 2 256 2 878 2 1185 2 260 2 883 2 1193 2 886 6 1195 4 891 2 273 2 903 2 275 2 279 7 911 4 286 2 1217 4 
775 4 627 2 298 6 459 2 301 2 302 6 462 6 10 2 158 2 466 2 467 2 632 4 304 2 631 2 1081 12 1082 2 920 2 161 6 633 6 472 4 310 2 311 6 922 6 1085 26 640 2 316 2 788 2 321 2 645 8 16 2 1094 2 486 6 1099 8 794 48 1101 2 937 6 24 2 650 10 335 2 337 4 943 4 946 2 661 2 180 4 35 2 340 2 501 2 500 2 506 2 1115 2 346 2 812 12 41 2 667 8 958 2 963 4 54 2 1129 2 1133 2 829 2 201 2 63 2 832 6 1137 2 372 4 374 2 686 6 1139 2 978 8 213 6 212 4 532 2 534 2 689 2 837 2 72 4 691 2 536 6 73 2 694 2 379 2 1143 2 222 2 1149 2 542 2 79 4 83 6 383 2 847 2 1152 2 87 2 999 2 705 4 92 2 390 2 96 2 234 2 1002 6 559 6 99 2 100 2 859 2 1162 8 1007 2 1008 4 106 4 714 4 242 2 569 2 716 2 1014 2 1170 2 717 8 406 8 719 2 248 6 1178 2 872 6 1177 4 412 2 575 6 876 2 1028 2 256 2 730 6 417 2 1185 2 878 2 260 2 735 4 883 4 1193 2 886 6 1195 4 891 2 745 2 897 2 751 2 752 2 753 6 133 2 273 2 903 2 275 2 435 2 766 2 911 4 1056 2 1059 2 286 2 1217 4 446 2 
775 4 627 2 298 6 459 2 301 2 302 6 462 6 464 4 10 2 158 2 466 2 467 2 632 4 631 2 304 2 1081 12 1082 2 920 2 161 6 633 6 472 4 310 2 311 6 922 6 1085 26 640 2 316 2 788 2 321 2 645 8 16 2 1094 2 486 6 1099 8 794 48 1101 2 937 6 24 2 650 10 335 2 337 4 943 4 946 2 661 2 180 4 35 2 340 2 501 2 500 2 506 2 1115 2 812 12 346 2 41 2 667 8 958 2 963 4 54 2 1129 2 1133 2 829 2 201 2 63 2 832 6 1137 2 372 4 374 2 686 6 1139 2 978 8 213 6 212 4 532 2 534 2 689 2 837 2 72 4 691 2 536 6 73 2 694 2 379 2 1143 2 222 2 1149 2 542 2 79 4 83 6 383 2 847 2 1152 2 87 2 999 2 705 4 92 2 390 6 96 2 234 2 1002 6 559 6 99 2 100 2 859 2 1162 8 1007 2 1008 4 106 4 714 4 242 2 569 2 716 2 1014 2 1170 2 717 8 406 8 719 2 248 6 1178 2 872 6 1177 4 412 2 575 6 876 2 1028 2 256 2 730 6 417 2 1185 2 878 2 260 2 735 4 883 4 1193 2 886 6 1195 4 891 2 745 2 897 2 751 2 752 2 753 6 133 2 273 2 903 2 275 2 435 2 766 2 911 4 1056 2 1059 2 286 2 1217 4 446 2 
627 2 298 12 301 4 630 2 302 6 10 2 304 2 631 2 632 4 920 4 633 8 310 2 922 6 311 12 316 2 640 2 321 2 645 12 16 2 937 12 24 2 650 8 335 2 337 4 943 4 946 2 661 4 35 2 340 2 950 6 346 2 41 2 667 10 958 2 47 6 963 4 54 2 63 2 372 4 374 2 978 10 686 6 689 2 692 2 691 2 72 4 694 2 73 2 379 2 79 4 83 6 383 4 87 2 996 6 705 4 999 2 92 2 390 6 96 2 1002 12 1003 6 100 2 99 2 1008 4 1007 2 106 4 714 4 1014 2 716 2 717 10 406 8 719 2 410 6 412 2 1026 2 417 2 730 6 1028 2 1031 6 735 4 745 2 751 2 752 2 133 2 753 6 435 2 766 2 1056 2 1059 2 446 2 775 4 459 2 462 6 464 4 1076 2 158 2 159 2 467 2 466 2 1082 2 1081 10 472 4 161 12 1085 24 788 2 1094 2 486 6 1099 10 794 52 1101 2 800 2 180 4 501 2 500 2 1115 2 506 4 812 16 1129 2 1133 2 829 2 201 2 525 2 832 6 1137 2 1139 2 212 4 213 6 532 2 534 2 837 2 536 6 537 2 539 2 1143 2 222 2 1149 2 542 2 847 2 1152 2 234 2 559 8 859 2 1162 8 242 2 569 2 1170 2 248 6 1177 4 872 6 1178 2 575 6 876 2 256 2 878 2 1187 6 260 2 883 4 1193 2 886 12 1195 4 891 2 893 2 897 2 1201 6 273 2 903 2 275 2 617 6 911 4 286 2 1217 6 
536 2 943 2 730 6 417 2 878 2 946 2 500 2 464 4 812 4 304 2 1195 2 310 2 92 2 390 4 234 2 133 2 316 2 273 2 859 2 275 2 1008 4 106 2 714 2 1129 2 242 2 1170 2 717 6 406 2 794 4 286 2 372 2 374 2 1139 2 1177 4 978 6 
775 4 301 3 10 2 304 2 631 2 1082 2 1081 4 920 3 633 6 310 2 1085 24 316 2 645 8 1094 2 1100 2 794 28 650 2 656 2 943 2 946 2 180 4 661 3 340 2 500 2 1115 2 37 2 812 4 346 2 666 2 963 2 54 2 1129 2 829 2 201 2 832 6 1137 2 372 2 374 2 978 6 687 2 1139 2 532 2 689 2 837 2 536 2 691 2 694 2 73 2 378 2 222 2 1149 2 79 4 847 2 87 2 705 4 92 2 390 2 96 2 234 2 559 6 238 2 859 2 1008 4 106 2 714 2 242 2 1170 2 1014 2 717 6 406 2 109 2 248 6 1177 4 874 3 417 2 730 6 1185 2 878 2 1195 2 751 2 901 2 133 2 273 2 903 2 275 2 435 2 1056 2 286 2 1217 4 
304 2 850 2 310 2 
304 2 850 2 310 2 
774 2 775 4 462 2 464 4 10 2 468 2 632 4 304 6 631 2 1082 2 1081 4 472 2 633 2 310 4 1085 16 645 2 1094 2 1099 4 794 24 650 2 800 4 337 4 943 4 946 2 180 4 661 2 804 4 340 2 1115 2 184 2 346 2 812 16 510 2 41 2 667 4 961 2 963 6 54 2 829 2 201 2 204 2 63 2 832 6 1137 2 372 2 374 2 978 12 212 4 532 2 689 2 837 2 1140 2 72 2 536 4 691 2 692 4 694 2 73 2 222 2 1149 2 542 2 77 2 79 4 847 2 87 2 850 2 999 4 705 4 92 2 390 6 96 2 233 4 559 2 1008 4 240 2 106 4 714 2 1168 2 401 2 716 2 1014 2 1170 2 717 12 406 4 719 2 721 2 248 6 574 2 1177 4 1028 2 256 2 585 2 730 6 880 2 1190 4 735 2 883 4 1193 2 1195 2 903 2 275 4 137 2 435 2 277 2 911 4 622 2 
560 2 585 2 861 2 1168 2 735 2 462 2 569 2 766 2 158 2 510 2 1081 2 87 2 794 4 979 2 650 2 603 2 1085 2 
775 4 459 2 462 2 464 4 10 2 468 2 632 4 304 6 631 2 1082 2 1081 2 472 2 633 2 310 4 1085 16 645 2 1094 2 1099 4 794 24 800 4 337 4 802 2 943 4 946 2 180 4 661 4 804 4 340 2 1115 2 184 4 346 2 812 16 510 2 41 2 667 4 963 6 54 2 829 2 201 2 204 2 830 2 63 2 832 6 1137 2 372 2 374 2 978 12 212 4 532 2 689 2 837 2 1140 2 72 4 536 4 691 2 692 4 694 2 73 2 222 2 1149 2 542 2 77 2 79 4 845 2 847 2 87 2 850 2 999 4 705 4 92 2 390 6 96 2 233 4 559 2 1008 4 106 4 714 2 1168 2 401 2 716 2 1014 2 1170 2 717 12 406 4 719 2 721 2 248 6 1177 4 1028 2 256 2 585 2 730 6 880 2 1190 4 883 4 1193 2 1195 2 890 2 903 2 275 4 137 2 435 2 277 2 911 4 623 2 
775 4 459 2 462 2 464 4 10 2 468 2 632 4 304 6 631 2 1082 2 1081 4 472 2 633 2 310 4 1085 16 645 2 1094 2 1099 4 794 24 650 2 800 4 337 4 943 4 946 2 180 4 661 2 804 4 340 2 808 2 1115 2 184 2 346 2 812 16 510 2 41 2 667 4 963 6 54 2 829 2 201 2 204 2 63 2 832 6 1137 2 372 2 374 2 978 12 212 4 532 2 689 2 837 2 1140 2 72 4 536 4 691 2 692 4 694 2 73 2 697 2 222 2 1149 2 542 2 77 2 79 4 847 2 87 2 850 2 999 4 705 4 92 2 390 6 96 2 233 4 559 2 1008 4 106 4 714 2 399 2 1168 2 401 2 716 2 1014 2 1170 2 717 12 406 4 719 2 721 2 248 6 1177 4 1028 2 256 2 585 2 730 6 880 2 1190 4 735 2 883 4 1193 2 1195 2 132 2 903 2 275 4 137 2 435 2 277 2 911 4 1057 2 622 1 
299 2 301 6 5 2 10 2 631 2 920 6 633 12 923 2 925 2 315 2 929 2 640 2 319 2 321 2 645 18 644 2 939 2 940 2 658 6 661 6 340 2 663 10 664 4 37 2 951 2 346 2 952 8 666 2 667 14 671 2 360 6 963 2 51 10 54 2 972 2 69 4 68 2 981 6 982 2 689 2 690 4 691 2 986 2 73 2 79 4 82 2 383 10 87 2 85 6 997 2 705 4 999 4 707 2 389 2 96 2 100 2 1004 6 103 4 1014 2 109 2 722 2 113 2 114 2 115 6 1022 4 1024 2 116 2 731 2 734 4 745 2 130 2 428 6 131 2 432 2 751 2 433 2 1050 24 435 2 761 6 442 2 144 2 772 1 446 2 152 2 775 4 1069 8 456 2 783 4 157 2 1081 2 1082 2 160 2 162 1 163 2 475 4 1085 22 166 2 1093 6 1094 2 173 4 1099 14 1100 2 794 28 490 2 1103 2 180 4 181 2 1114 2 1115 2 506 10 511 2 187 6 1126 2 1134 1 1133 2 198 2 829 2 523 2 201 2 205 4 832 6 1137 2 530 2 834 2 532 2 215 6 837 2 538 10 222 2 1149 2 224 10 847 2 849 4 1157 2 232 4 555 4 1158 8 559 12 235 2 556 2 860 2 563 2 1164 2 570 1 869 1 1173 4 248 6 874 2 254 2 579 6 887 2 891 2 265 4 900 6 1202 4 903 2 1208 4 618 2 1215 2 1217 10 290 6 622 1 291 6 1219 2 
626 2 1188 4 661 3 221 2 918 2 301 3 1073 3 546 2 383 6 920 3 633 2 350 2 744 2 1085 2 751 2 559 2 479 2 1088 2 14 2 645 2 1172 2 794 2 1217 2 292 2 
626 2 1188 4 661 2 221 2 918 2 301 2 1073 2 546 2 383 6 920 2 633 2 350 2 744 2 1085 2 751 2 559 2 479 2 1088 2 14 2 645 2 1172 2 794 2 1217 2 292 2 
626 2 1188 4 661 2 221 2 918 2 301 2 1073 2 546 2 383 6 920 2 633 2 350 2 744 2 1085 2 751 2 559 2 479 2 1088 2 14 2 645 2 1172 2 794 2 1217 2 292 2 
71 4 1067 2 1110 4 661 3 1069 5 300 4 1112 2 541 3 381 2 993 2 783 2 546 2 739 2 84 6 86 4 920 3 389 2 95 2 1085 4 1086 3 232 2 187 4 391 2 671 2 751 2 1087 2 272 2 902 2 363 2 762 4 195 2 642 4 324 2 645 2 173 2 722 2 794 10 113 2 984 3 1106 2 
71 4 1067 2 1069 4 300 4 541 2 381 2 783 2 993 2 546 2 84 6 920 2 86 4 389 2 95 2 1085 4 232 2 1086 2 391 2 1087 2 642 4 324 2 645 2 173 2 794 10 722 2 113 2 1106 2 1110 4 661 2 1112 2 734 2 1032 2 664 2 739 2 187 4 751 2 671 2 902 2 272 2 363 2 762 4 195 2 984 2 
71 4 1067 2 1069 4 300 4 541 2 381 2 783 2 993 2 546 2 84 6 920 2 86 4 389 2 95 2 1085 4 232 2 1086 2 391 2 1087 2 642 4 324 2 645 2 173 2 794 10 722 2 113 2 1106 2 1110 4 661 2 1112 2 734 2 1032 2 664 2 739 2 187 4 751 2 671 2 902 2 272 2 363 2 762 4 195 2 984 2 
71 4 1067 2 1069 4 300 4 541 2 381 2 783 2 993 2 546 2 84 6 920 2 86 4 389 2 95 2 1085 4 232 2 1086 2 391 2 1087 2 642 4 324 2 645 2 173 2 794 10 722 2 113 2 1106 2 1110 4 661 2 1112 2 734 2 1032 2 664 2 739 2 187 4 751 2 671 2 902 2 272 2 363 2 762 4 195 2 984 2 
71 4 1067 2 1069 4 300 4 541 2 381 2 783 2 993 2 546 2 84 6 920 2 86 4 389 2 95 2 1085 4 232 2 1086 2 391 2 1087 2 642 4 324 2 645 2 173 2 794 10 722 2 113 2 1106 2 1110 4 661 2 1112 2 734 4 1032 4 664 4 739 2 187 4 751 2 671 2 902 2 272 2 363 2 762 4 195 2 984 2 
81 2 600 2 168 2 921 2 241 2 924 2 360 2 
600 2 706 2 4 2 400 2 749 2 432 2 
839 2 1107 2 941 2 177 1 297 2 119 1 74 2 154 2 421 2 1074 1 423 2 886 2 953 1 598 2 631 2 1085 8 52 2 366 2 1012 2 57 2 615 2 680 2 1209 2 146 1 794 10 288 2 
579 4 1027 2 1110 4 1069 15 734 4 1032 2 592 2 463 2 664 2 783 6 389 6 746 2 95 2 1085 2 232 6 187 12 555 2 671 6 236 4 854 2 855 2 1202 2 1126 2 318 2 173 6 718 2 794 2 722 6 331 2 113 6 254 2 
71 2 450 2 991 2 258 2 932 2 762 2 320 2 642 2 884 4 794 1 307 2 634 1 312 2 46 2 1085 1 1020 2 13 2 216 7 
71 2 450 4 991 4 258 2 932 2 320 2 762 2 642 2 884 4 307 2 312 4 46 2 1020 2 13 2 216 6 
71 2 450 8 991 8 258 2 932 2 320 8 762 2 642 2 884 4 794 1 307 2 634 1 312 8 46 2 1085 1 1020 6 13 2 216 10 
71 2 450 2 991 2 258 2 932 2 762 2 642 2 884 2 307 2 312 2 46 2 13 2 216 2 
775 88 915 6 914 6 452 4 457 1 1070 10 780 4 1080 8 469 6 305 6 470 2 162 16 786 16 787 6 1085 134 639 26 791 4 323 6 1094 58 935 4 1096 2 487 2 1099 28 21 4 489 4 794 150 798 18 1104 8 1105 24 493 4 492 6 942 6 659 4 178 6 496 8 179 90 338 2 1111 4 342 6 183 2 345 2 347 24 955 42 349 6 185 6 44 4 352 2 45 4 515 4 819 90 670 2 48 8 820 84 50 2 676 4 519 2 826 6 1134 8 208 50 833 8 985 8 689 14 1141 8 538 4 695 42 1144 16 1149 14 698 4 79 112 224 22 225 2 847 58 548 6 85 34 549 8 227 2 703 24 388 4 1153 6 1000 6 1159 2 1161 10 1005 36 398 24 863 4 566 6 865 6 1169 6 568 6 570 11 571 10 245 4 405 17 871 10 408 4 248 248 728 4 1180 10 586 2 1186 4 879 10 595 92 126 4 426 12 894 26 427 6 429 2 1198 16 1041 124 750 2 604 2 606 12 609 2 435 8 759 24 612 4 438 24 1052 18 763 2 280 4 1206 6 1207 6 767 4 769 10 1213 2 622 4 772 8 295 10 
152 4 449 2 775 20 1141 2 693 2 451 2 777 2 218 2 1144 4 1070 2 1148 2 1149 2 79 20 225 2 843 2 846 4 847 2 384 2 90 2 227 2 786 4 1085 44 1161 2 480 2 1004 6 1005 2 858 2 1006 2 323 2 865 4 15 2 792 2 171 2 568 2 934 2 1094 2 571 2 405 2 1099 38 488 2 871 2 794 46 248 44 573 2 491 4 1104 2 1105 2 1180 2 28 2 416 2 1184 2 495 2 178 2 879 2 34 4 590 2 345 2 126 2 347 2 349 2 599 2 427 2 429 2 1041 6 1198 4 514 2 1121 2 1048 2 270 2 1125 2 899 2 670 2 48 2 1204 2 609 2 274 2 193 2 759 2 435 2 1052 2 1207 2 369 2 767 2 769 2 768 2 529 2 833 2 622 2 1064 2 689 2 985 6 295 2 
775 36 776 2 915 4 914 4 777 2 628 2 780 2 469 4 305 4 162 8 786 10 1085 70 787 4 323 4 934 10 1094 30 935 4 487 2 1099 14 21 4 489 4 794 78 492 4 493 4 495 10 178 4 496 4 498 16 342 4 805 4 39 8 345 2 955 16 349 4 185 4 352 2 816 8 45 4 515 4 514 2 362 4 670 2 48 2 189 2 820 24 826 4 828 4 208 8 529 2 833 2 66 4 689 6 985 6 1141 2 695 8 1144 10 1147 2 1149 6 698 4 79 44 847 28 548 4 85 30 227 2 703 8 388 4 1153 4 1000 4 1005 6 564 4 566 4 865 2 568 4 868 4 571 4 245 4 405 10 871 4 408 4 248 104 728 4 1180 4 586 2 879 4 257 16 590 10 595 24 426 14 742 8 427 4 429 2 1198 10 1041 24 602 4 1045 2 609 2 435 2 1052 10 280 4 1206 4 1207 4 1210 8 1213 2 148 2 1061 32 772 4 295 6 
1141 2 775 14 538 2 1144 6 780 2 1149 2 224 10 79 14 225 2 847 12 85 6 227 2 162 6 786 6 1085 26 1159 2 1005 2 323 4 865 2 568 4 1094 12 570 2 935 2 571 2 1096 2 1099 14 405 2 21 2 871 2 794 28 248 40 1180 2 659 2 178 4 879 2 496 4 183 2 345 2 349 4 427 4 429 2 1041 8 1198 6 48 2 670 2 50 2 609 2 193 2 435 2 519 2 1052 2 1134 2 1207 4 833 2 529 2 622 2 985 4 689 2 295 2 
1038 2 

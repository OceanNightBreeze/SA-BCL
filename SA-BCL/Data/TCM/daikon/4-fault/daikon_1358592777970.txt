#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V ERROR java.lang.Error 
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.NullPointerException 530 618 1034 799 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V ERROR java.lang.NullPointerException 355 762 
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.PptMap:asCollection()Ljava.util.Collection;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:max([I)I
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName:isLiteralConstant()Z
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:jj_3R_50()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.inv.Invariant:prob_is_ge(DD)D
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
daikon.ProglangType:baseIsIntegral()Z
daikon.VarInfoAux:hashCode()I
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfo:relate_var()V
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eltsGT([II)Z
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
utilMDE.MathMDE:gcd(JJ)J
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
daikon.Quant:memberOf(D[F)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:subsetOf([F[F)Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
jtb.JavaCharStream:getBeginColumn()I
daikon.Quant:memberOf(F[F)Z
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_3R_52()Z
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.Quant:concat([I[I)[I
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
utilMDE.FuzzyFloat:eq(DD)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
daikon.Quant:subsetOf([B[I)Z
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
jtb.JavaParser:jj_3R_55()Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:jj_3R_47()Z
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.JavaParser:jj_3_16()Z
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
utilMDE.OrderedPairIterator:hasNext()Z
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.ProglangType:isFloat()Z
jtb.Token:newToken(I)Ljtb.Token;
jtb.JavaCharStream:getEndColumn()I
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfo:dbc_name()Ljava.lang.String;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.ArraysMDE:noDuplicates([I)Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.Quant:eltwiseEqual([I)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.Quant:eltsLTE([II)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
utilMDE.MathMDE:mod_positive(II)I
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.ParseException:ParseException(Ljava.lang.String;)V
daikon.Quant:subsetOf([D[F)Z
daikon.Quant:lexLT([I[I)Z
jtb.ParseException:getMessage()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quant:gte(II)Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
daikon.Quant:union([I[I)[I
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaCharStream:readChar()C
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaCharStream:ReadByte()C
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:calc_range()J
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.FuzzyFloat:set_rel_diff(D)V
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.OrderedPairIterator:setnext2()V
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
utilMDE.MathMDE:gcd(II)I
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:subsetOf([F[D)Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.Quant:lexEqual([I[I)Z
utilMDE.FuzzyFloat:indexOf([D[D)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:Node()V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
utilMDE.MathMDE:modulus([I)[I
jtb.JavaParser:jj_3_1()Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltwiseGTE([I)Z
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern:intern([I)[I
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.ProglangType:isPointerFileRep()Z
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
jtb.JavaParser:jj_scan_token(I)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.PptTopLevel:name()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.JavaCharStream:FillBuff()V
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseLT([I)Z
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltwiseLTE([I)Z
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaCharStream:getBeginLine()I
daikon.Quant:eltwiseGT([I)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.ProglangType:baseIsFloat()Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:subsetOf([I[I)Z
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
utilMDE.FuzzyFloat:isSubset([D[D)Z
jtb.JavaParser:jj_3R_162()Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.Quant:setEqual([I[I)Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.FuzzyFloat:lt(DD)Z
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.MathMDE:pow(II)I
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.FuzzyFloat:indexOf([DD)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:noDups([I)Z
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.Quant:eltsGTE([II)Z
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.VarInfo:esc_name(Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:eq(JJ)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant:prob_and(DDD)D
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker; | ASSIGN | 1095 | = null
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
jtb.JavaParser:jj_3R_85()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.ProglangType:baseIsScalar()Z
daikon.Quant:memberOf(S[S)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
daikon.inv.Invariant:isWorthPrinting()Z
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.Quant:eltsLT([II)Z
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:jj_3R_53()Z
utilMDE.ArraysMDE:noDuplicates([J)Z
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.Quant:lte(II)Z
daikon.inv.filter.ParentFilter:ParentFilter()V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.FileIO.VarDefinition:VarDefinition(Ljava.lang.String;Ldaikon.VarInfo.VarKind;Ldaikon.ProglangType;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.Quant:pairwiseGT([I[I)Z
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.MathMDE:gcd_differences([I)I
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
utilMDE.OrderedPairIterator:setnext1()V
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
jtb.JavaCharStream:UpdateLineColumn(C)V
utilMDE.FuzzyFloat:ne(DD)Z
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:gt(II)Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
daikon.ProglangType:isIntegral()Z
daikon.Quant:eltwiseNotEqual([I)Z
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.PptSlice0:arity()I
daikon.VarInfo:VarInfo(Ldaikon.FileIO.VarDefinition;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.Quant:eltsGteIndex([I)Z
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
daikon.Quant:ne(II)Z
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
utilMDE.WeakHasherMap:size()I
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_ntk()I
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
utilMDE.SimpleLog.LongVal:LongVal(J)V
utilMDE.ArraysMDE:subarray([III)[I
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
daikon.Quant:isReverse([I[I)Z
jtb.JavaParser:jj_3R_161()Z
jtb.JavaParser:jj_3R_48()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:inPre()Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:memberOf(F[D)Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.VarInfo:old_var_names(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_54()Z
daikon.Quant:eltsGtIndex([I)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:hashCode()I
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
daikon.Quant:memberOf(I[I)Z
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:calc_modulus()J
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern:internSubsequence([III)[I
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
utilMDE.MathMDE:pow_fast(II)I
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:subsetOf([D[D)Z
daikon.VarInfo:jml_name(Ljava.lang.String;)Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.Debug:logOn()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.Invariant:justified()Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.inv.Invariant:prob_or(DD)D
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:eltsEqual([II)Z
daikon.inv.unary.UpperBoundCore:computeProbability()D
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfo:new_ppt()V
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
utilMDE.ArraysMDE:min_max([I)[I
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.test.FormatTestCase:passes()Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
daikon.Quant:pairwiseEqual([I[I)Z
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
daikon.inv.Invariant:format()Ljava.lang.String;
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
utilMDE.MathMDE:missing_numbers([I)[I
daikon.PptName:isCombinedExitPoint()Z
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.Invariant:prob_and(DD)D
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
utilMDE.ArraysMDE:indexOf([II)I
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.Invariant:logOn()Z
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.JavaParser:generateParseException()Ljtb.ParseException;
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase;
daikon.ProglangType:isScalar()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
utilMDE.ArraysMDE:fn_is_total([I)Z
jtb.JavaParser:jj_2_1(I)Z
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.Quant:slice([III)[I
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:subsetOf([S[S)Z
daikon.inv.ValueSet:ValueSet(I)V
utilMDE.MathMDE:sign(I)I
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.LowerBound:enabled()Z
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoAux:equals(Ljava.lang.Object;)Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
daikon.Quant:pairwiseDivides([I[I)Z
daikon.PptSlice2:arity()I
utilMDE.FuzzyFloat:gt(DD)Z
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I | CONSTANT | 37686 | 64 -> 0
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:concat([I[I)[I
daikon.Quant:subsetOf([J[J)Z
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.diff.DetailedStatisticsVisitor:freq(II)D
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.JavaParser:jj_3R_57()Z
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.Quant:setDiff([I[I)[I
daikon.Quant:eq(FF)Z
daikon.Quant:pairwiseLT([I[I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.PptSlice1:num_samples()I
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.PptName:isEnterPoint()Z
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.VarInfo:simplify_name()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:add(I)V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.JavaCharStream:BeginToken()C
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.ProglangType:isArray()Z
utilMDE.TestUtilMDE:lsis_test(I)V
jtb.JavaParser:jj_3R_58()Z
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.Quant:eltsLtIndex([I)Z
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:intern([D)[D
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName:name()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_133()Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Quant:eltsLteIndex([I)Z
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:intersection([I[I)[I
daikon.Quant:lexGT([I[I)Z
daikon.Quant:lt(II)Z
daikon.test.InvariantFormatTester:execute()Z
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
daikon.ProglangType:isPseudoArray()Z
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:sum([I)I
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.Quant:memberOf(J[J)Z
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
daikon.diff.Node:getUserRight()Ljava.lang.Object;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.diff.PrintAllVisitor:bufPrintln()V
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.diff.RootNode:RootNode()V
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE:negate(I)I
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
utilMDE.LimitedSizeIntSet:size()I
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
daikon.VarInfo:isPointer()Z
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.VarInfoAux:VarInfoAux(Ljava.util.Map;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
utilMDE.WeakIdentityHashMap:indexFor(II)I
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaCharStream:backup(I)V
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
daikon.Quant:lexLTE([I[I)Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoAux:parse(Ljava.lang.String;)Ldaikon.VarInfoAux;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String; | RETURN | 7162 | return null
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.MathMDE:gcd([I)I
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.Quant:pairwiseLTE([I[I)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.ArraysMDE:sum([D)D
jtb.JavaParser:jj_3R_134()Z
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
utilMDE.MathMDE:bitwiseComplement(I)I
daikon.Quant:eq(II)Z
jtb.JavaParser:jj_3R_56()Z
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:numIntArrays()I
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
utilMDE.ArraysMDE:sum([[I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.diff.InvMap:InvMap()V
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
daikon.Debug:logDetail()Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.PptSlice1:arity()I
daikon.Ppt:Ppt()V
utilMDE.ArraysMDE:min([I)I
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.Intern:intern([J)[J
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.Assert:assertTrue(Z)V
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.VarInfoAux:equals(Ldaikon.VarInfoAux;)Z
jtb.JavaParser:jj_2_16(I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_identity(I)[I
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
daikon.ProglangType:dimensions()I
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.Quant:eq(DD)Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.MathMDE:mod_positive(JJ)J
daikon.VarInfoAux:intern()Ldaikon.VarInfoAux;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:jj_3R_49()Z
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
756 2 975 2 580 2 287 2 645 2 840 4 323 2 764 2 430 2 
173 6 908 2 660 6 1018 2 442 6 256 2 103 2 160 2 974 2 179 2 281 2 
975 2 479 2 537 4 183 6 869 6 425 2 392 2 98 6 645 2 296 4 473 2 782 2 457 6 
975 6 33 2 34 16 6 2 502 4 109 10 259 2 260 2 709 16 593 8 112 10 645 6 743 4 114 8 955 6 572 2 301 4 960 12 271 4 854 2 552 10 617 30 215 6 409 8 969 26 455 8 556 16 249 2 380 10 766 10 
68 4 358 6 
400 2 
34 2 810 2 109 2 318 2 709 2 112 2 114 2 14 2 881 2 301 2 849 2 960 2 1030 2 920 2 154 2 552 2 617 6 215 2 969 4 556 2 490 2 380 2 766 4 
609 6 34 8 421 2 450 6 960 5 109 4 709 8 552 4 112 4 407 2 617 14 969 12 28 4 556 8 743 2 380 4 689 4 
896 2 191 10 386 10 39 2 136 14 423 4 836 2 356 62 907 2 1017 8 815 2 295 2 687 2 910 2 648 2 178 2 651 2 605 2 1023 4 299 2 206 2 749 2 50 2 575 4 727 4 612 4 1003 2 153 2 341 6 754 4 521 4 856 4 454 4 620 2 579 2 804 4 858 2 561 4 1009 4 351 4 
501 2 41 2 598 2 149 2 92 2 91 2 1026 2 400 2 751 2 488 2 
975 4 4 2 422 2 834 4 981 2 905 2 433 2 113 2 645 4 646 2 436 2 361 2 987 2 178 2 994 2 919 2 662 4 854 2 923 2 580 2 524 2 807 2 1012 2 679 2 82 2 466 2 683 2 1017 2 946 2 820 2 1021 2 480 2 398 2 958 2 152 2 336 2 612 4 964 2 54 2 968 2 559 2 705 2 629 4 351 2 
975 4 385 2 34 32 771 2 979 2 289 2 773 4 109 16 259 2 709 32 904 4 112 16 645 4 600 2 438 4 114 18 603 4 947 6 689 4 955 4 609 6 399 6 301 2 786 8 182 4 450 6 960 22 339 2 552 16 617 54 215 4 581 6 969 48 455 6 556 32 28 4 29 6 380 16 766 6 
1017 2 605 2 341 2 
283 2 78 22 300 2 449 10 699 2 290 2 401 2 169 2 197 2 199 2 228 2 968 2 394 2 146 2 
769 1 634 2 635 2 500 2 5 3 772 4 638 2 503 24 903 2 110 2 775 3 639 2 229 3 10 4 909 2 645 34 234 2 650 3 362 2 117 2 511 1 16 2 654 2 17 32 657 2 659 2 788 1 21 2 518 2 374 2 376 4 24 4 666 2 377 2 378 16 924 2 522 2 381 1 927 2 531 2 384 2 932 2 253 8 677 2 808 2 388 2 686 2 945 6 817 3 43 2 819 2 949 2 690 3 948 1 821 2 545 8 148 2 548 16 49 2 698 2 51 4 823 32 404 2 962 2 551 4 824 3 275 2 967 2 557 2 704 2 410 2 970 2 973 2 277 5 560 1 975 32 417 2 287 2 977 2 565 2 566 2 431 2 434 1 714 2 984 2 568 2 435 2 174 1 571 2 717 2 440 8 441 6 988 4 720 2 996 2 302 1 451 3 728 2 853 24 304 2 576 2 577 2 309 6 313 3 75 2 1008 3 187 2 863 2 864 2 189 2 586 2 192 2 1010 2 588 2 194 2 81 1 738 2 597 2 595 2 200 1 875 2 469 1 322 6 471 16 202 2 744 1 1020 2 475 2 477 2 882 2 328 1 747 2 329 12 211 3 885 4 750 2 610 2 1031 2 1033 2 484 2 759 2 1035 2 491 2 763 16 894 1 221 1 496 3 
599 2 
645 2 13 2 
656 2 353 2 645 4 
631 2 1 6 897 6 499 2 898 2 107 20 108 20 354 4 507 2 906 2 230 2 642 10 508 2 509 2 779 2 233 2 11 2 359 20 235 2 912 2 365 2 658 2 663 2 665 2 672 2 134 4 534 2 38 2 257 2 258 16 938 2 138 2 680 2 141 2 45 20 952 2 266 20 147 56 269 2 397 2 52 12 701 18 273 20 155 56 827 2 55 20 56 2 282 4 284 2 285 20 288 2 708 4 428 2 567 2 983 4 293 16 298 2 993 2 65 2 724 8 448 56 848 4 998 2 303 2 726 4 305 2 729 2 453 2 74 2 458 4 77 4 866 10 865 2 867 4 317 2 736 2 870 2 83 2 467 20 1016 2 468 2 88 8 324 6 877 20 90 2 207 2 883 16 1027 4 93 4 753 2 94 2 758 20 890 2 623 6 493 10 1037 2 765 2 219 16 220 32 
625 2 151 1 911 2 464 2 
911 2 604 2 
100 2 485 2 
681 2 1017 2 554 2 911 2 502 2 525 2 796 2 
286 2 554 2 911 2 
554 2 911 2 279 2 
464 2 485 2 506 2 
554 2 911 2 
601 2 485 2 
308 2 911 2 
464 2 627 2 485 2 
143 2 735 2 464 2 
456 2 900 2 464 2 
418 2 464 2 402 2 
332 2 464 2 798 2 
125 2 485 2 
911 2 472 2 
238 2 143 2 
254 2 456 2 
274 2 402 2 
209 2 798 2 
943 2 485 2 
483 2 798 2 
535 2 402 2 
456 2 794 2 
143 2 768 2 
464 2 627 2 485 2 198 2 
310 2 464 2 627 2 485 2 198 2 
697 2 464 2 485 2 
12 2 464 2 485 2 
725 2 395 2 829 2 396 2 
78 6 976 2 80 2 193 2 37 2 139 2 517 2 711 4 812 2 42 2 1004 4 712 2 685 2 343 2 379 2 734 2 582 2 46 2 
464 2 405 2 
681 2 1017 2 73 2 710 2 
681 2 1017 2 73 2 145 2 525 2 710 2 
681 2 1017 2 554 2 733 2 911 2 502 2 
306 2 113 2 
681 2 682 2 1017 2 502 2 
23 2 402 2 
325 2 798 2 
393 2 143 2 
129 2 456 2 
456 2 140 2 798 2 
456 2 887 2 798 2 
456 2 797 2 798 2 
456 2 951 2 798 2 
868 2 681 2 1017 2 363 2 914 6 239 2 578 6 248 2 
977 2 
634 2 635 2 903 2 504 2 639 2 10 2 909 2 645 26 234 2 16 2 17 6 915 2 655 4 21 2 374 2 376 4 24 2 377 2 803 2 383 2 806 4 384 2 932 2 677 6 253 2 388 2 389 2 686 2 944 2 945 6 948 2 148 2 693 2 49 2 51 4 823 4 551 4 702 2 557 2 830 2 162 2 975 26 287 2 424 2 426 2 435 2 568 2 984 2 441 2 988 2 720 4 990 2 728 2 309 4 863 2 586 2 189 2 1010 2 588 2 738 2 469 2 322 2 471 6 1020 2 606 2 608 2 475 2 747 2 329 8 885 4 610 2 1031 2 759 2 344 2 
634 2 635 2 903 2 504 2 639 2 10 2 909 2 645 26 234 2 16 2 17 6 915 2 655 4 659 2 21 2 374 2 376 4 24 2 377 2 803 2 383 2 806 4 384 2 932 2 677 6 253 2 388 2 389 2 261 2 686 2 944 2 945 6 949 2 948 2 148 2 49 2 51 4 823 4 551 4 702 2 557 2 830 2 162 2 975 26 287 2 832 2 424 2 426 2 435 2 568 2 984 2 441 2 988 2 720 4 990 2 851 2 728 2 309 6 863 2 586 2 189 2 1010 2 588 2 738 2 469 2 322 2 471 6 1020 2 475 2 747 2 329 8 885 4 610 2 1031 2 1033 2 759 2 344 2 
536 2 70 2 
719 2 
975 6 0 2 224 10 167 2 902 4 435 2 62 2 173 6 908 4 645 12 175 2 442 6 649 2 15 2 179 2 721 8 120 2 119 2 515 2 660 6 373 2 245 4 376 2 127 2 926 2 1005 2 312 2 732 2 384 2 863 2 675 2 932 2 461 2 255 4 678 2 137 2 388 2 939 2 391 2 814 2 872 2 540 2 740 2 201 4 263 2 945 4 876 2 818 8 1018 2 203 2 475 2 148 2 956 2 885 2 613 2 825 4 622 4 761 2 103 4 347 2 
975 6 0 2 224 10 167 2 902 4 435 2 62 2 173 8 908 4 645 12 175 2 442 6 15 2 179 2 721 8 120 2 119 2 515 2 660 8 373 2 245 4 186 2 376 2 127 2 926 2 1005 2 312 2 732 2 384 2 863 2 675 2 932 2 461 2 35 2 255 4 678 2 256 2 137 2 388 2 939 2 391 2 814 2 872 2 540 2 201 4 263 2 945 4 876 2 818 8 1018 2 544 4 203 2 475 2 148 2 956 2 885 2 613 2 825 4 622 4 761 2 103 4 347 2 
0 2 120 2 119 2 255 2 678 2 939 2 373 2 825 4 201 4 926 2 173 2 908 2 175 2 876 2 442 2 103 2 203 2 15 2 
975 6 0 2 224 6 167 2 902 4 435 2 62 2 173 6 908 4 645 12 175 2 442 4 649 2 15 2 179 2 721 4 120 2 119 2 515 2 660 6 373 2 245 4 376 2 127 2 926 2 1005 2 312 2 732 2 384 2 863 2 675 2 932 2 461 2 255 4 678 2 256 2 137 2 388 2 939 2 391 2 814 2 872 2 540 2 740 2 201 4 263 2 945 4 876 2 818 4 203 2 475 2 148 2 956 2 885 2 613 2 825 4 622 4 761 2 103 4 347 2 
975 6 0 2 224 6 167 2 902 4 435 2 62 2 173 4 908 4 645 12 175 2 442 6 649 2 15 2 179 2 721 4 120 2 119 2 515 2 660 6 373 2 245 4 376 2 127 2 926 2 1005 2 312 2 732 2 384 2 863 2 675 2 932 2 461 2 255 4 678 2 137 2 388 2 939 2 391 2 814 2 872 2 540 2 740 2 201 4 263 2 945 4 876 2 818 4 203 2 475 2 148 2 956 2 885 2 613 2 825 4 622 4 761 2 103 4 347 2 160 2 
975 6 0 2 224 6 167 2 902 4 435 2 62 2 173 6 908 4 645 12 175 2 442 6 649 2 15 2 179 2 721 4 120 2 119 2 515 2 660 6 373 2 245 4 376 2 127 2 926 2 1005 2 312 2 732 2 384 2 863 2 675 2 932 2 461 2 255 4 678 2 137 2 388 2 939 2 391 2 814 2 872 2 540 2 740 2 201 4 263 2 945 4 876 2 818 8 1018 2 203 2 475 2 148 2 956 2 885 2 613 2 825 4 622 4 761 2 103 4 347 2 
975 6 0 2 224 10 167 2 902 4 435 2 62 2 173 6 908 4 645 12 175 2 442 8 649 2 15 2 179 2 721 8 120 2 119 2 515 2 660 8 373 2 245 4 376 2 127 2 926 2 1005 2 312 2 732 2 384 2 863 2 675 2 932 2 461 2 255 4 678 2 137 2 388 2 939 2 391 2 814 2 872 2 540 2 740 2 201 4 263 2 945 4 876 2 818 8 1018 2 203 2 475 2 148 2 956 2 885 2 613 2 825 4 622 4 761 2 103 4 347 2 160 2 
975 6 0 2 224 10 167 2 902 4 435 2 62 2 173 6 908 4 645 12 175 2 442 6 649 2 15 2 179 2 721 8 120 2 119 2 515 2 660 6 373 2 245 4 376 2 127 2 926 2 1005 2 312 2 732 2 384 2 863 2 675 2 932 2 461 2 255 4 678 2 137 2 388 2 939 2 391 2 814 2 872 2 540 2 740 2 201 4 263 2 945 4 876 2 818 8 1018 2 203 2 475 2 148 2 956 2 885 2 613 2 825 4 622 4 761 2 103 4 347 2 
0 2 224 2 226 1 10 2 232 2 234 2 13 6 16 2 15 2 17 8 515 2 21 2 244 7 519 1 245 6 24 2 523 6 806 4 532 6 253 2 255 4 540 2 814 4 816 2 263 2 818 2 51 4 270 2 823 2 551 4 825 4 558 2 828 2 287 2 564 6 835 2 62 2 568 2 294 6 64 2 69 1 309 6 312 2 863 2 315 2 586 12 588 2 590 2 591 4 592 6 85 1 319 2 599 6 872 2 873 2 322 2 876 2 329 4 330 2 885 4 610 2 338 2 613 2 96 2 95 6 97 2 614 1 622 4 103 4 347 2 634 2 635 2 899 2 902 8 639 2 908 4 644 2 645 46 116 2 915 2 656 6 659 2 119 2 120 2 369 2 660 12 124 8 373 2 374 2 376 4 664 10 377 2 127 2 128 6 667 2 926 2 929 1 384 2 675 2 932 2 677 6 387 2 678 2 388 2 137 2 939 2 941 2 391 2 686 2 144 6 944 4 945 6 950 6 691 2 148 2 692 2 953 2 956 2 696 6 959 4 403 1 965 6 702 2 408 2 413 2 160 4 975 24 167 2 426 2 168 1 429 2 435 2 173 4 175 2 442 8 986 2 441 2 988 2 179 4 999 2 1005 2 730 2 732 2 188 1 461 4 1010 2 462 7 737 6 738 2 1015 2 740 2 201 4 471 6 203 2 475 2 1033 2 759 2 489 6 761 2 
224 2 0 2 634 2 635 2 899 2 902 8 639 2 644 2 10 4 908 4 232 2 645 48 234 2 13 6 116 2 15 2 16 2 915 2 17 8 656 6 120 2 119 2 659 2 369 2 515 2 21 2 660 12 124 8 373 2 374 2 245 6 664 10 376 4 24 4 377 2 127 2 667 2 128 6 926 2 523 6 806 4 532 6 384 2 675 2 932 2 253 2 677 6 387 2 255 4 678 2 137 2 388 2 939 2 941 2 391 2 814 4 540 2 686 2 144 6 816 2 944 4 263 2 945 6 818 6 950 6 691 2 953 2 692 2 148 2 150 2 956 2 696 6 270 2 959 4 51 4 823 2 551 4 965 6 702 2 825 4 408 2 558 2 828 2 413 2 975 26 167 2 287 2 564 6 426 2 835 2 429 2 568 2 173 8 62 2 435 2 294 6 175 2 441 2 986 2 442 8 64 2 988 4 720 2 179 4 999 2 309 6 730 2 1005 2 312 2 732 2 863 2 315 2 461 4 586 12 1010 2 588 2 591 4 590 2 737 6 738 2 592 6 319 2 1015 2 872 2 599 6 740 2 873 2 201 4 322 2 471 6 876 2 1018 4 203 2 475 2 329 8 330 2 885 4 610 2 338 2 752 2 1033 2 613 2 97 2 95 6 96 2 759 2 489 6 622 4 761 2 103 4 347 2 
224 6 0 2 634 2 635 2 899 2 902 8 639 2 644 2 10 4 908 4 232 2 645 48 234 2 13 6 116 2 15 2 16 2 915 2 17 8 656 6 120 2 119 2 659 2 369 2 515 2 21 2 660 12 124 8 373 2 245 6 374 2 664 10 376 4 24 4 377 2 127 2 667 2 128 6 926 2 523 6 806 4 532 6 384 2 675 2 932 2 253 2 677 6 387 2 255 4 678 2 137 2 388 2 939 2 941 2 391 2 814 4 540 2 686 2 144 6 816 2 944 4 263 2 945 6 818 6 950 6 691 2 953 2 692 2 148 2 150 2 956 2 696 6 270 2 959 4 51 4 823 2 551 4 965 6 702 2 825 4 408 2 558 2 828 2 413 2 975 26 167 2 287 2 564 6 426 2 835 2 429 2 568 2 173 8 62 2 435 2 294 6 175 2 441 2 986 2 442 8 64 2 988 4 720 2 179 4 721 4 999 2 309 6 730 2 1005 2 312 2 732 2 863 2 315 2 461 4 586 12 1010 2 588 2 591 4 590 2 737 6 738 2 592 6 319 2 1015 2 872 2 599 6 740 2 873 2 201 4 322 2 471 6 876 2 1018 4 203 2 475 2 329 8 330 2 885 4 610 2 338 2 752 2 1033 2 613 2 97 2 95 6 96 2 759 2 489 6 622 4 761 2 103 4 347 2 
0 2 224 6 10 4 232 2 234 2 13 12 16 2 15 2 17 12 515 2 21 2 791 6 245 6 24 4 523 6 806 6 532 6 253 4 255 4 256 2 540 2 814 4 816 2 263 2 818 6 51 4 270 2 823 4 53 2 551 4 825 4 558 2 828 2 287 2 564 6 835 2 62 2 568 2 294 6 64 2 297 2 850 2 309 6 312 2 863 2 315 2 586 10 79 6 588 2 590 2 591 4 592 6 319 2 872 2 599 12 322 4 876 2 602 6 329 10 330 2 885 4 610 2 338 2 613 2 96 2 95 6 97 2 345 2 622 4 103 4 893 6 347 2 634 2 635 2 899 2 902 8 639 2 641 6 908 4 644 2 645 52 116 2 915 2 653 6 656 12 659 2 119 2 120 2 369 2 660 16 124 8 373 2 374 2 376 4 664 8 377 2 127 2 128 6 667 2 926 2 384 2 675 2 931 6 932 2 677 8 387 2 678 2 388 2 137 2 939 2 941 2 391 2 686 2 144 12 944 4 945 6 950 12 691 2 148 2 692 2 953 2 150 2 956 2 696 6 959 4 965 6 702 2 408 2 411 2 413 2 160 2 975 24 165 2 166 6 167 2 426 4 429 2 171 6 173 10 435 2 175 2 442 10 986 2 441 4 988 4 720 2 179 4 721 4 180 2 999 2 1005 2 730 2 732 2 461 4 1010 2 737 12 738 2 1015 2 740 2 201 4 471 8 1018 4 203 2 475 2 752 2 1033 2 759 2 216 2 489 6 761 2 
675 2 224 4 0 2 167 2 678 2 902 2 137 2 540 2 740 2 201 2 62 2 173 6 908 4 645 4 1018 2 818 6 442 6 203 2 15 2 179 2 721 4 119 2 956 2 515 2 660 4 373 2 245 2 613 2 825 2 127 2 1005 2 926 2 622 2 761 2 103 4 
224 2 0 2 634 2 902 2 639 2 776 2 908 4 643 2 645 28 234 2 15 2 16 2 17 8 915 2 659 2 119 2 515 2 660 4 21 2 373 2 245 2 374 2 376 4 664 2 377 2 127 2 926 2 806 4 384 2 675 2 932 2 677 6 678 2 137 2 388 2 391 2 540 2 686 2 944 2 945 6 818 6 148 2 956 2 51 4 823 3 551 4 825 2 702 2 410 2 970 2 975 24 167 2 287 2 977 2 173 6 435 2 568 2 62 2 442 6 441 3 179 2 309 6 1005 2 863 2 586 4 1010 2 588 2 738 2 86 2 740 2 201 2 873 2 322 3 471 6 1018 2 203 2 475 2 327 2 885 4 750 2 610 2 1033 2 613 2 759 2 622 2 761 2 218 2 103 4 350 3 
48 2 515 2 761 2 
48 2 515 2 761 2 
224 6 634 2 635 4 899 2 2 2 902 4 774 2 639 2 778 4 10 4 908 4 645 24 234 2 16 2 15 2 17 2 915 2 659 2 515 6 21 2 660 16 245 4 374 2 664 2 376 4 24 4 377 2 926 4 523 2 384 2 675 2 932 2 677 2 255 4 678 2 388 2 256 4 137 2 811 2 942 2 814 2 541 2 686 2 944 6 945 6 818 6 47 2 148 2 48 2 959 2 51 4 823 2 551 4 272 2 702 2 825 2 57 2 414 2 58 2 160 4 975 16 164 2 287 2 424 4 429 2 435 2 173 12 175 2 442 12 988 4 842 2 179 4 721 4 723 4 309 6 72 2 312 2 732 2 863 2 461 4 586 4 316 2 1010 2 588 2 591 2 738 2 872 2 201 2 471 2 876 2 1018 4 89 2 1019 2 475 2 329 4 885 4 610 2 338 2 1033 2 759 2 622 2 761 4 103 4 626 2 
975 2 586 2 591 2 939 2 70 2 942 2 272 2 664 2 741 2 555 2 1036 2 645 4 523 2 842 2 691 2 475 2 953 2 
224 6 634 2 635 4 899 2 902 4 639 2 778 4 10 4 908 4 645 24 234 2 16 2 15 2 17 2 915 2 784 2 659 2 515 6 21 2 660 16 245 4 374 2 376 4 24 4 377 2 247 2 926 4 523 2 384 2 675 2 932 2 677 2 255 4 678 2 388 2 256 4 137 2 942 2 814 4 541 2 686 2 944 6 945 6 818 6 47 2 148 2 48 2 959 2 51 4 823 4 961 2 551 4 272 2 702 2 825 2 57 2 414 2 58 2 160 4 975 16 164 2 287 2 424 4 429 2 435 2 173 12 175 2 442 12 988 4 842 2 179 4 721 4 723 4 309 6 72 2 312 2 732 2 863 2 461 4 586 2 316 2 1010 2 588 2 738 2 872 2 201 2 742 2 471 2 876 2 1018 4 1019 4 475 2 329 4 885 4 610 2 338 2 1033 2 759 2 622 2 761 4 102 2 103 4 626 2 347 2 
224 6 634 2 635 4 899 2 902 4 639 2 640 2 778 4 10 4 908 4 645 24 234 2 510 2 16 2 15 2 916 2 17 2 915 2 366 2 659 2 515 6 21 2 660 16 245 4 374 2 664 2 376 4 24 4 377 2 926 4 523 2 384 2 675 2 932 2 677 2 255 4 678 2 388 2 256 4 137 2 942 2 814 4 541 2 686 2 944 6 945 6 818 6 47 2 148 2 48 2 959 2 51 4 823 2 551 4 272 2 702 2 825 2 57 2 414 2 58 2 160 4 975 16 164 2 287 2 424 4 429 2 435 2 173 12 175 2 442 12 988 4 842 2 843 2 179 4 721 4 723 4 309 6 72 2 312 2 732 2 863 2 461 4 586 4 316 2 1010 2 588 2 591 2 738 2 872 2 201 2 471 2 876 2 1018 4 1019 2 475 2 329 4 885 4 610 2 338 2 1033 2 759 2 622 2 761 4 103 4 626 2 347 2 
504 2 776 2 16 2 17 18 18 2 240 4 20 4 21 2 520 24 799 2 803 2 802 2 804 2 30 2 806 10 530 2 251 12 34 4 253 14 36 2 539 8 546 1 822 10 549 2 51 2 550 2 823 11 551 2 552 2 276 4 556 4 561 2 280 2 830 2 562 2 287 2 60 2 835 2 568 2 569 6 844 2 66 2 846 2 574 2 847 4 852 2 856 2 857 2 309 4 859 2 860 2 863 2 583 26 586 2 594 2 322 11 327 2 609 6 329 28 330 2 885 4 610 2 889 2 96 2 342 8 617 8 618 2 892 2 344 2 624 26 346 2 630 2 350 2 895 2 348 4 106 4 634 2 635 4 637 2 109 2 111 8 639 2 112 2 357 4 643 2 645 28 114 4 915 2 659 2 368 4 918 2 917 2 122 4 370 2 922 2 376 4 377 2 380 2 669 2 382 2 383 2 930 2 384 2 385 4 676 2 932 2 933 2 677 12 935 10 135 2 388 2 389 2 940 2 142 3 686 2 944 2 945 6 948 2 689 4 692 2 148 2 695 2 960 4 963 6 969 6 971 2 412 2 157 2 413 2 415 2 162 2 975 22 416 2 163 4 419 6 978 2 982 2 426 24 709 4 715 2 713 2 435 2 716 4 437 2 441 11 986 2 444 2 990 10 446 2 454 2 460 4 1010 2 195 2 739 2 1013 2 1015 2 469 2 471 12 475 2 1023 2 476 2 481 2 1028 6 1029 2 1033 2 755 12 1034 2 487 2 759 2 217 2 760 2 218 2 492 2 1038 2 495 4 222 2 497 2 
163 2 975 2 416 2 847 4 677 2 918 2 122 2 823 2 426 6 9 2 142 2 713 2 568 2 322 2 859 2 645 2 471 2 760 2 437 2 971 2 669 2 441 2 806 2 17 2 
163 2 975 2 416 2 847 4 677 2 918 2 122 2 823 2 426 6 9 2 142 2 713 2 568 2 322 2 859 2 645 2 471 2 760 2 437 2 971 2 669 2 441 2 806 2 17 2 
163 2 975 2 416 2 847 4 677 2 918 2 122 2 823 2 426 6 9 2 142 2 713 2 568 2 322 2 859 2 645 2 471 2 760 2 437 2 971 2 669 2 441 2 806 2 17 2 
975 4 416 2 831 2 707 2 109 2 709 2 112 2 838 6 568 2 645 10 439 2 237 2 512 3 17 2 722 2 121 2 242 2 243 4 1000 4 801 2 378 2 455 4 380 2 585 3 34 2 390 4 322 3 879 2 880 2 955 2 1024 3 823 3 340 2 552 2 617 5 969 4 556 2 763 2 494 4 349 4 
416 2 975 4 831 2 585 2 707 2 34 2 109 2 259 2 709 2 390 4 112 2 838 6 568 2 322 2 645 10 114 2 439 2 237 2 512 2 879 2 880 2 722 2 17 2 1024 2 955 2 121 2 960 2 823 2 1000 4 243 4 242 2 340 2 552 2 617 4 801 2 378 2 969 4 455 4 556 2 380 2 763 2 494 4 349 4 
416 2 975 4 831 2 585 2 707 2 34 2 109 2 259 2 709 2 390 4 112 2 838 6 568 2 322 2 645 10 114 2 439 2 237 2 512 2 879 2 880 2 722 2 17 2 1024 2 955 2 121 2 960 2 823 2 1000 4 243 4 242 2 340 2 552 2 617 4 801 2 378 2 969 4 455 4 556 2 380 2 763 2 494 4 349 4 
416 2 975 4 831 2 585 2 707 2 34 2 109 2 259 2 709 2 390 4 112 2 838 6 568 2 322 2 645 10 114 2 439 2 237 2 512 2 879 2 880 2 722 2 17 2 1024 2 955 2 121 2 960 2 823 2 1000 4 243 4 242 2 340 2 552 2 617 4 801 2 378 2 969 4 455 4 556 2 380 2 763 2 494 4 349 4 
416 2 975 4 831 2 585 2 707 2 34 2 109 2 259 4 709 2 390 4 112 2 838 6 568 2 322 2 645 10 114 4 439 2 237 2 512 2 879 2 880 2 722 2 17 2 1024 2 955 2 121 2 960 4 823 2 1000 4 243 4 242 2 340 2 552 2 617 4 801 2 378 2 969 4 455 4 556 2 380 2 763 2 494 4 349 4 
745 2 632 2 26 2 30 2 214 2 445 2 
463 2 1011 2 861 2 936 2 1032 2 990 2 214 2 
975 4 59 2 886 1 937 2 355 2 516 2 921 1 579 1 619 2 295 1 645 4 762 2 671 2 767 1 384 2 
975 6 385 1 584 2 34 6 979 1 1012 2 109 5 259 4 709 6 505 2 594 2 112 5 684 2 357 2 645 6 114 6 603 2 820 2 947 4 689 2 609 3 955 2 482 2 786 2 960 6 552 5 617 12 969 11 556 6 455 4 380 5 895 2 
975 1 267 1 1025 2 67 2 901 2 243 2 1000 2 611 2 390 2 837 2 855 2 645 1 44 2 130 4 928 2 314 2 989 7 205 2 
1025 2 67 4 901 2 243 2 1000 2 611 2 390 2 837 2 855 2 44 4 130 4 928 4 205 2 314 2 989 6 
975 1 267 1 1025 2 67 8 901 2 243 2 1000 2 611 2 390 2 837 2 855 6 645 1 44 8 130 4 928 8 205 8 314 2 989 10 
1025 2 67 2 901 2 243 2 1000 2 611 2 390 2 837 2 44 2 130 2 928 2 314 2 989 2 
633 30 225 4 636 6 3 4 8 4 639 6 777 16 231 8 645 78 647 16 781 16 115 6 364 2 913 2 236 4 652 2 367 10 659 28 19 2 514 4 241 2 787 4 789 2 123 4 795 8 246 4 377 6 25 2 925 2 805 4 668 2 31 2 250 4 526 4 529 2 131 4 32 2 674 11 133 2 538 2 809 8 40 2 813 2 262 4 542 6 543 2 688 24 265 4 954 8 268 4 957 10 700 6 51 36 551 44 553 4 703 4 278 4 975 70 563 2 833 2 420 4 61 4 427 32 291 4 432 4 172 14 292 4 176 4 177 4 845 4 997 16 185 2 452 4 1001 4 71 24 309 102 731 4 311 4 1007 4 190 4 587 4 589 1 871 8 196 2 465 4 1014 4 596 4 321 8 320 4 874 4 470 10 878 4 204 2 478 2 212 24 333 10 334 4 213 2 337 10 888 4 1033 26 486 4 615 10 757 4 99 10 759 2 621 8 101 8 104 4 628 4 
975 26 633 6 636 2 980 2 61 4 639 2 777 14 292 4 839 2 645 28 985 2 360 2 115 2 177 4 364 2 913 2 783 2 367 6 659 12 241 2 184 2 792 2 246 4 377 2 925 2 309 40 311 4 76 2 529 2 459 2 131 2 674 2 538 2 196 2 871 6 40 2 813 2 262 2 320 2 874 2 542 4 265 2 326 10 204 2 268 4 748 2 478 2 212 8 51 14 333 2 337 6 1033 12 551 14 486 4 615 6 406 2 757 2 759 2 628 2 
223 4 633 34 225 4 636 10 227 10 639 14 777 28 231 50 645 150 781 42 360 2 115 36 364 2 783 2 913 5 367 16 513 24 659 58 514 6 241 8 787 4 789 4 661 26 790 4 123 4 126 2 793 8 372 24 792 2 795 42 246 6 377 14 800 24 925 4 805 6 668 2 670 6 250 4 527 2 526 6 529 8 131 6 673 4 132 2 674 16 934 10 538 2 813 8 262 4 542 8 688 84 265 4 547 4 268 6 51 88 700 5 551 112 966 6 703 6 158 4 159 4 278 4 975 134 706 18 563 2 833 2 420 6 980 4 61 8 432 6 172 12 292 6 839 2 570 2 985 11 176 4 443 90 718 90 177 6 845 6 447 24 184 2 185 2 1002 4 1001 6 71 92 309 248 731 4 311 6 1007 6 76 2 459 8 862 24 190 6 587 4 196 2 871 16 84 12 465 6 596 6 320 10 87 4 874 10 878 4 204 2 326 22 607 2 748 4 210 8 478 2 884 26 212 124 333 18 334 4 335 4 337 16 888 6 1033 58 486 6 757 10 615 16 759 8 891 10 101 24 104 6 628 10 105 8 
975 44 498 2 352 2 770 4 636 2 7 2 227 2 170 2 639 2 777 36 292 2 839 2 780 2 645 46 841 2 115 2 63 2 177 2 364 2 913 2 991 2 118 2 992 2 367 4 513 2 659 6 19 2 573 2 241 2 995 2 181 2 22 4 371 2 372 2 375 2 1002 2 246 2 377 2 800 2 307 2 27 2 309 48 311 2 1006 2 528 2 529 2 131 2 252 2 674 2 133 2 934 2 533 2 538 2 196 2 40 2 813 2 320 2 874 2 470 2 264 4 542 6 474 2 204 2 1022 2 746 2 208 2 268 2 694 6 478 2 957 2 331 2 212 6 333 2 51 20 337 4 1033 6 551 20 486 2 757 2 406 2 615 4 616 2 99 2 759 2 826 2 891 2 156 2 972 4 628 2 161 2 105 2 
785 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V ERROR utilMDE.Assert$AssertionException (1426,1482) (1426,1482) 
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V ERROR utilMDE.Assert$AssertionException (1426,1482) 68 
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V ERROR utilMDE.Assert$AssertionException (1426,1482) 68 1089 352 935 1476 398 572 242 (640,1191) 509 (125,1152) (640,1191) 1022 (125,1152) 1146 343 
daikon.test.diff.DiffTester:testInvs1Invs1()V ERROR utilMDE.Assert$AssertionException (1426,1482) 68 1089 352 935 1476 398 572 242 (640,1191) 509 (125,1152) (640,1191) 1022 (125,1152) 1146 343 
daikon.test.diff.DiffTester:testInvs1Invs2()V ERROR utilMDE.Assert$AssertionException (1426,1482) 68 1089 352 935 1476 398 572 242 (640,1191) 509 (125,1152) (640,1191) 1022 (125,1152) 1146 343 
daikon.test.diff.DiffTester:testInvs1Invs3()V ERROR utilMDE.Assert$AssertionException (1426,1482) 68 1089 352 935 1476 398 572 242 (640,1191) 509 (125,1152) (640,1191) 1022 (125,1152) 1146 343 
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR java.lang.RuntimeException 39 342 1144 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V PASSED
daikon.test.VarInfoNameTest:testJML()V PASSED
daikon.test.VarInfoNameTest:testEscForall()V PASSED
daikon.test.VarInfoNameTest:testSubscript()V PASSED
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
daikon.ProglangType:baseIsIntegral()Z
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
daikon.inv.unary.scalar.UpperBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_12()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
jtb.JavaParser:jj_3_28()Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
daikon.VarInfoName.Slice:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.VarInfoName.Add:name_impl()Ljava.lang.String;
daikon.VarInfoName.FunctionOf:FunctionOf(Ljava.lang.String;Ldaikon.VarInfoName;)V
daikon.VarInfoName.NodeFinder:inPre()Z
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltNonZero:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:format_ioa()Ljava.lang.String;
daikon.PptSlice0:arity()I
daikon.VarInfoName:simplify_name(Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_daikon()Ljava.lang.String;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:eq(DD)Z
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:format_unimplemented(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.Quant:memberOf(I[I)Z
jtb.JavaParser:jj_3R_81()Z
daikon.VarInfoName.ElementsFinder:elems()Ldaikon.VarInfoName.Elements;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.binary.twoScalar.LinearBinaryCore:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.IOAQuantification:getQuantifierExp()Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | CONDITION | 13357 | if (x) -> if (!x)
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltLowerBound:format_esc()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual(Ldaikon.PptSlice;)V
daikon.VarInfo:simplify_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_68()Z
daikon.VarInfoName.SizeOf:esc_name_impl()Ljava.lang.String;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.test.FormatTestCase.SingleOutputTestCase:SingleOutputTestCase(Ljava.lang.reflect.Method;[Ljava.lang.Object;Ljava.lang.String;ILjava.lang.String;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.VarComparabilityNone:elementType()Ldaikon.VarComparability;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName.SizeOf:SizeOf(Ldaikon.VarInfoName;)V
daikon.test.VarInfoNameDriver.Prestate:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.ValueSet.ValueSetScalarArray:ValueSetScalarArray(I)V
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant:prob_and(DD)D | CONSTANT | 8716 | 1 -> -1
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:simplify_name(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.inv.unary.sequence.EltLowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.simplify.SimpUtil:assert_well_formed(Ljava.lang.String;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:format_esc()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
jtb.JavaParser:jj_3R_180()Z
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.JavaParser:jj_3R_102()Z
daikon.diff.Node:Node()V
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_119()Z
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.PptName:getSignature()Ljava.lang.String;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.LowerBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.Simple:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.UpperBoundCore:wouldChange(J)Z
jtb.JavaParser:jj_3R_106()Z
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_3R_77()Z
daikon.PptSlice1:arity()I
daikon.VarInfoName.Field:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.VarInfo:java_name()Ljava.lang.String;
daikon.Quant:lexNotEqual([I[I)Z
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.SizeOf:simplify_name_impl(Z)Ljava.lang.String;
utilMDE.Options.OptionInfo:argument_required()Z
daikon.PptName:toString()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.VarInfoName.Poststate:repr_impl()Ljava.lang.String;
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
daikon.VarInfo:ioa_name()Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:enabled()Z
daikon.inv.unary.string.OneOfString:format_simplify()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.AbstractVisitor:visitField(Ldaikon.VarInfoName.Field;)Ljava.lang.Object;
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfoName:applySubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfoName.Replacer:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.SizeOf:repr_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_137()Z
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
daikon.VarInfoName.Replacer:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.Simple:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.Quant:eq(JJ)Z
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
daikon.inv.unary.string.OneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.FunctionOf:repr_impl()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.test.FormatTestCase:parseGoal(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.LimitedSizeIntSet:add(I)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.VarInfoName.Simple:isLiteralConstant()Z
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
daikon.VarInfo:esc_quantify([Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.Quant:memberOf(J[J)Z
utilMDE.ArraysMDE:sum([D)D
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
utilMDE.UtilMDE:escapeNonASCII(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:get_proto()Ldaikon.inv.Invariant;
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.VarInfoName:inOrderTraversal()Ljava.util.Collection;
jtb.JavaParser:jj_3R_97()Z
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.OrderedPairIterator:setnext2()V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.inv.unary.scalar.OneOfScalar:subarray_rep()Ljava.lang.String;
utilMDE.MathMDE:gcd_differences([I)I
daikon.VarInfo:jml_name()Ljava.lang.String;
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
daikon.VarInfoName.Elements:ioa_name_impl()Ljava.lang.String;
daikon.inv.OutputFormat:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_point([J[J)[I
jtb.JavaParser:jj_3R_87()Z
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
daikon.VarInfoName.Subscript:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.TypeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:Slice(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_70()Z
daikon.inv.unary.sequence.EltLowerBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.Quant:lt(II)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.inv.unary.scalar.Positive:Positive(Ldaikon.PptSlice;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.IOAQuantification:getFreeVar(I)Ldaikon.Quantify.Term;
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:pairwiseLT([I[I)Z
daikon.Debug:logOn()Z
daikon.VarInfoName.TypeOf:repr_impl()Ljava.lang.String;
daikon.PptName:getFullClassName()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
daikon.Quant:pairwiseEqual([I[I)Z
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:is_pointer()Z
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:repr_impl()Ljava.lang.String;
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantifierVisitor:QuantifierVisitor(Ldaikon.VarInfoName;)V
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.unary.sequence.NoDuplicates:NoDuplicates(Ldaikon.PptSlice;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
daikon.VarInfo:isDerivedSubSequenceOf()Ldaikon.VarInfo;
daikon.inv.Invariant:logOn()Z
daikon.ProglangType:baseIsString()Z
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.VarInfoName:java_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName.Slice:name_impl()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.VarInfoName:applyDecrement()Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:esc_name()Ljava.lang.String;
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.VarInfo:get_enclosing_var()Ldaikon.VarInfo;
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:eq(II)Z
daikon.inv.unary.sequence.EltUpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Replacer:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.Ppt:indexOf(Ljava.lang.String;)I
daikon.inv.binary.twoScalar.IntGreaterEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.VarInfoName.QuantHelper:format_java_style(Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
daikon.Quant:eltwiseLT([I)Z
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
daikon.inv.unary.sequence.NoDuplicates:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.ProglangType:isScalar()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.ProglangType:dimensions()I
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_134()Z
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:pairwiseGT([I[I)Z
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
daikon.VarInfoName.Add:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_51()Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
daikon.test.VarInfoNameDriver.TypeOf:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
daikon.inv.unary.sequence.EltNonZero:enabled()Z
daikon.inv.OutputFormat:isJavaFamily()Z
jtb.JavaParser:jj_3R_163()Z
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;ZZZZ)[Ljava.lang.String;
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
daikon.inv.unary.scalar.Modulus:enabled()Z
daikon.VarInfo:get_all_simple_names()Ljava.util.List;
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
daikon.inv.unary.stringsequence.EltOneOfString:format_daikon()Ljava.lang.String;
jtb.JavaParser:jj_3R_115()Z
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
daikon.inv.unary.scalar.Modulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
daikon.ProglangType:isFloat()Z
daikon.VarInfoName:inPrestateContext(Ldaikon.VarInfoName;)Z
daikon.VarInfoName.Field:java_family_name(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.visitor.FormatCommand:getNumCommands()I
daikon.VarInfoName.FunctionOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_ntk()I
daikon.inv.binary.twoScalar.LinearBinaryCore:set_bi_linear(JJJJ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:EltNonZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.OneOfScalar:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.VarInfoName.NodeFinder:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.test.FormatTestCase:populateWithSamples(Ldaikon.inv.Invariant;Ljava.util.List;)V
daikon.ModBitTracker:num_samples()I
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.VarInfoName.Elements:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:logDetail()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_simplify()Ljava.lang.String;
utilMDE.ArraysMDE:fn_identity(I)[I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
daikon.Quant:lexLT([I[I)Z
daikon.VarInfoName:ioaFormatVar(Ljava.lang.String;)Ljava.lang.String;
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
utilMDE.FuzzyFloat:ne(DD)Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
daikon.Quant:subsetOf([S[S)Z
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
daikon.inv.unary.sequence.NoDuplicates:enabled()Z
jtb.JavaCharStream:GetImage()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.LowerBoundCore:computeProbability()D
daikon.VarInfoName.ElementsFinder:inPre()Z
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.string.OneOfString:format_daikon()Ljava.lang.String;
daikon.VarInfoName.Field:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
daikon.Quant:subsetOf([B[I)Z
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.Quant:eltsEqualIndex([I)Z
daikon.VarInfoName.Elements:name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_daikon()Ljava.lang.String;
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
utilMDE.OrderedPairIterator:setnext1()V
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
utilMDE.TestUtilMDE.1InternTest:test(Z)V
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.stringsequence.SingleStringSequence:SingleStringSequence(Ldaikon.PptSlice;)V
daikon.VarInfoName:simplify_name()Ljava.lang.String;
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Subscript:repr_impl()Ljava.lang.String;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
daikon.inv.unary.string.OneOfString:format_ioa()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
daikon.VarInfoName.Slice:repr_impl()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:base()Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.FunctionOf:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.Quant:pairwiseSquare([I[I)Z
utilMDE.UtilMDE:join(Ljava.util.List;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
daikon.inv.Invariant:getConfidence()D
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
daikon.VarInfoName.NodeFinder:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName;
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
daikon.Quant:subsetOf([F[D)Z
utilMDE.MathMDE.MissingNumbersIteratorLong:hasNext()Z
jtb.syntaxtree.NodeOptional:NodeOptional()V
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_86()Z
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:jj_3R_53()Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:applyTypeOf()Ldaikon.VarInfoName;
daikon.VarInfoName.SimpleNamesVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarInfo:relate_var()V
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Add:Add(Ldaikon.VarInfoName;I)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.FunctionOfN:FunctionOfN(Ljava.lang.String;Ljava.util.List;)V
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
daikon.VarInfoName.NodeFinder:visitField(Ldaikon.VarInfoName.Field;)Ldaikon.VarInfoName;
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
daikon.VarInfoName.SimpleNamesVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:jj_3_30()Z
jtb.JavaParser:jj_3R_124()Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant:simplify_format_string(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;)[Ljava.lang.String;
jtb.JavaParser:jj_3_5()Z
daikon.inv.unary.stringsequence.EltOneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quantify.QuantifyReturn:QuantifyReturn(Ldaikon.VarInfo;)V
daikon.inv.Invariant:prob_or(DD)D
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
jtb.JavaParser:jj_3_22()Z
daikon.VarInfo:is_direct_non_slice_array()Z
daikon.PptSlice1:num_samples()I
utilMDE.ArraysMDE:sum([I)I
daikon.inv.unary.sequence.EltUpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.stringsequence.EltOneOfString:runValue([Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.stringsequence.EltOneOfString:add_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
daikon.VarInfoName.QuantHelper.FreeVar:FreeVar(Ljava.lang.String;)V
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.VarInfoName.AbstractVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ljava.lang.Object;
daikon.VarInfoName.SizeOf:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
daikon.PptSlice0:initInvariantsSeen()V
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
daikon.VarInfo:isIOAArray()Z
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Elements:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3_1()Z
utilMDE.ArraysMDE:isSubset([D[D)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeList:NodeList()V
daikon.VarInfoName:applyAdd(I)Ldaikon.VarInfoName;
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:applyPoststate()Ldaikon.VarInfoName;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.JavaParser:jj_2_1(I)Z
daikon.test.VarInfoNameDriver.Size:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.NonModulus:updateResults()V
daikon.PptName:isCombinedExitPoint()Z
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
utilMDE.WeakHasherMap:processQueue()V
daikon.inv.unary.scalar.OneOfScalar:format_esc()Ljava.lang.String;
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.ModBitTracker:num_vars()I
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_simplify()Ljava.lang.String;
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.inv.unary.string.OneOfString:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.Modulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
daikon.VarInfoName:hasNodeOfType(Ljava.lang.Class;)Z
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
jtb.JavaParser:jj_3_16()Z
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quantify.QuantFlags:include_index()Ljava.util.EnumSet;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.inv.unary.sequence.EltOneOf:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.Quant:eltwiseGTE([I)Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_57()Z
daikon.inv.unary.stringsequence.EltOneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ValueSet.ValueSetStringArray:ValueSetStringArray(I)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
daikon.VarInfoName:name()Ljava.lang.String;
jtb.JavaCharStream:FillBuff()V
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
utilMDE.MathMDE:mod_positive(JJ)J
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.ValueSet:ValueSet(I)V
daikon.VarInfoName.SizeOf:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE:negate(I)I
daikon.VarInfoName.Elements:dbc_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lte(DD)Z
daikon.inv.unary.sequence.EltUpperBound:format_simplify()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Function:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.VarInfoName.Elements:esc_name_impl(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:get_proto()Ldaikon.inv.Invariant;
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.ModBitTracker:ModBitTracker(I)V
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.unary.string.OneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.VarInfoName.Subscript:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.Simple:java_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.Debug:logDetail()Z
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
utilMDE.MathMDE:mod_positive(II)I
utilMDE.ArraysMDE:sorted([I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_15()Z
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.VarInfoName.FunctionOfN:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.Quant:eltsLT([II)Z
daikon.PptTopLevel.CondIterator:hasNext()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
daikon.VarInfoName.Add:esc_name_impl()Ljava.lang.String;
daikon.Quant:pairwiseGTE([I[I)Z
daikon.PptName:isEnterPoint()Z
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:ioa_name()Ljava.lang.String;
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
daikon.inv.unary.scalar.Positive:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_103()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_101()Z
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.ProglangType:baseIsScalar()Z
jtb.JavaParser:jj_3R_114()Z
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
daikon.Quant:subsetOf([D[D)Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
utilMDE.FuzzyFloat:eq(DD)Z
daikon.VarInfoName.InorderFlattener:InorderFlattener(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
jtb.JavaCharStream:getEndLine()I
daikon.VarInfoName.TypeOf:TypeOf(Ldaikon.VarInfoName;)V
daikon.inv.unary.sequence.EltOneOf:EltOneOf(Ldaikon.PptSlice;)V
daikon.PptTopLevel:getInvariants()Ljava.util.List;
jtb.JavaParser:jj_3_14()Z
daikon.VarInfoName.Elements:name_impl()Ljava.lang.String;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.VarInfoName:toString()Ljava.lang.String;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.NonModulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_simplify([Ldaikon.VarInfoName;)[Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Subscript:esc_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_ioa()Ljava.lang.String;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
jtb.JavaParser:jj_3R_58()Z
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
daikon.inv.unary.sequence.NoDuplicates:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.InvMap:toString()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:isMissing(I)Z
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.PptName:PptName(Ljava.lang.String;)V
utilMDE.ArraysMDE:max([I)I
daikon.VarComparabilityNone:indexType(I)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_117()Z
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.Elements:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.Quant:eltsEqual([II)Z
daikon.VarInfoName.InorderFlattener:nodes()Ljava.util.List;
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
daikon.VarInfoName.Field:Field(Ldaikon.VarInfoName;Ljava.lang.String;)V
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
utilMDE.Intern:intern([D)[D
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
daikon.Quant:eltsLteIndex([I)Z
daikon.Quant:gte(II)Z
daikon.inv.unary.sequence.EltLowerBound:format_daikon()Ljava.lang.String;
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_36()Z
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.ArraysMDE:element_range([I)I
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_210()Z
utilMDE.ArraysMDE:subarray([III)[I
daikon.Quant:noDups([I)Z
daikon.inv.unary.sequence.EltNonZero:format_esc()Ljava.lang.String;
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
jtb.JavaParser:jj_3R_99()Z
daikon.test.VarInfoNameDriver.QuantifySimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quantify.FreeVar:name()Ljava.lang.String;
daikon.test.FormatTestCase:FormatTestCase(Ljava.util.List;Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3R_88()Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.test.TestQuant:removeAdjacentDups([I)[I
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
daikon.ProglangType:isPseudoArray()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper.FreeVar:repr_impl()Ljava.lang.String;
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.TreeFormatter:TreeFormatter()V
daikon.inv.unary.sequence.EltUpperBound:enabled()Z
daikon.test.FormatTestCase:getAddModified(Ljava.lang.Class;)Ljava.lang.reflect.Method;
daikon.Quant:lexLTE([I[I)Z
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:setEqual([I[I)Z
daikon.VarInfoName.Prestate:esc_name_impl()Ljava.lang.String;
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfo:isDerived()Z
daikon.VarInfoName.Simple:simplify_name_impl(Z)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.VarInfoName.QuantHelper:quant_execution_condition(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:format_simplify()Ljava.lang.String;
jtb.visitor.FormatCommand:FormatCommand(II)V
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:check_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName.ElementsFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.Elements;
jtb.JavaParser:jj_3R_126()Z
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.JavaParser:jj_3R_123()Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
jtb.JavaParser:jj_2_12(I)Z
daikon.Quant:eltsGT([II)Z
daikon.VarInfoName.QuantHelper:quant_format_forall(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_96()Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
daikon.Quantify.IOAQuantification:getClosingExp()Ljava.lang.String;
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.VarInfoName:applySize()Ldaikon.VarInfoName;
daikon.inv.unary.sequence.EltNonZero:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_18()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.Intern:numIntArrays()I
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
utilMDE.MathMDE:modulus([I)[I
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
daikon.VarInfo:isIOASet()Z
daikon.inv.unary.string.OneOfString:enabled()Z
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.VarInfoName.Simple:simplify_name_impl(Ljava.lang.String;Z)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE.NullableStringComparator:compare(Ljava.lang.String;Ljava.lang.String;)I
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
daikon.Quant:memberOf(F[D)Z
utilMDE.ArraysMDE:min([I)I
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
jtb.JavaParser:jj_scan_token(I)Z
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
daikon.VarInfoName.FunctionOfN:elts_repr()Ljava.util.List;
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltUpperBound:format_daikon()Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoName.AbstractVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ljava.lang.Object;
daikon.VarInfoName:applyFunction(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
jtb.JavaParser:jj_3R_56()Z
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
daikon.inv.unary.string.SingleString:var()Ldaikon.VarInfo;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.JavaParser:jj_3_10()Z
daikon.inv.unary.scalar.Positive:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.VarInfoName:indexExplicit(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.VarInfo:dbc_name()Ljava.lang.String;
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.VarInfoName:isLiteralConstant()Z
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.MathMDE:modulus_strict_long(Ljava.util.Iterator;Z)[J
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.JavaParser:jj_2_4(I)Z
daikon.Quantify.IOAQuantification:getVarIndexedString(I)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:format_simplify()Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
jtb.JavaParser:jj_3_19()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.MathMDE:pow(II)I
jtb.JavaParser:jj_3R_122()Z
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:indexOf([II)I
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_esc()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
jtb.JavaParser:jj_3R_76()Z
daikon.VarInfoName.Subscript:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_72()Z
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseLTE([I)Z
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.EltLowerBound:format_simplify()Ljava.lang.String;
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.sequence.EltOneOf:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.test.VarInfoNameDriver.SimplifyName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.Invariant:prob_is_ge(DD)D
daikon.VarInfoName.Field:name_impl()Ljava.lang.String;
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
daikon.VarInfoName:name_using(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.ModBitTracker:num_sets()I
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
daikon.inv.unary.string.OneOfString:runValue(Ljava.lang.String;IZ)Ldaikon.inv.InvariantStatus;
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
utilMDE.Intern:internSubsequence([III)[I | RETURN | 22902 | return null
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
daikon.VarInfo:has_typeof()Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
daikon.inv.unary.scalar.Positive:enabled()Z
daikon.Quantify:quantify([Ldaikon.VarInfo;)[Ldaikon.Quantify.QuantifyReturn;
daikon.VarInfo:isPointer()Z
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.sequence.EltwiseIntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
daikon.inv.unary.sequence.NoDuplicates:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applyPrestate()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_67()Z
daikon.inv.unary.sequence.EltwiseIntLessThan:format_simplify()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
utilMDE.ArraysMDE:concat([I[I)[I
daikon.PptSlice2:arity()I
daikon.Quantify.IOAQuantification:getMembershipRestriction(I)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:get_proto()Ldaikon.inv.Invariant;
daikon.Quantify.QuantFlags:distinct()Ljava.util.EnumSet;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.Quant:eltsNotEqual([II)Z
daikon.VarInfoName.TypeOf:name_impl()Ljava.lang.String;
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:format_simplify()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Add:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.QuantHelper:replace(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;)[Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltOneOf:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.InorderFlattener:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:check_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.sequence.EltNonZero:format_daikon()Ljava.lang.String;
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
daikon.VarInfoName.Elements:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:eltsGtIndex([I)Z
daikon.inv.unary.sequence.EltUpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:check_first_and_last_nonmodulus([JLutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfo:apply_subscript(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:subarray_rep()Ljava.lang.String;
daikon.VarInfoName.SimpleNamesVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:jj_3_13()Z
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.unary.scalar.Modulus:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:esc_name()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltNonZero:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
daikon.inv.unary.stringsequence.SingleStringSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:jj_2_25(I)Z
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.VarInfoName.Slice:getUpperBound()Ldaikon.VarInfoName;
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltUpperBound:format_esc()Ljava.lang.String;
daikon.test.VarInfoNameDriver.Slice:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_2_15(I)Z
jtb.JavaParser:jj_3_35()Z
daikon.VarInfoName.Prestate:Prestate(Ldaikon.VarInfoName;)V
utilMDE.FuzzyFloat:indexOf([DD)I
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.NodeOptional:present()Z
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.inv.unary.scalar.OneOfScalar:format_daikon()Ljava.lang.String;
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
daikon.inv.unary.sequence.EltUpperBound:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltwiseIntLessThan:format_ioa()Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
daikon.inv.unary.stringsequence.EltOneOfString:format_esc()Ljava.lang.String;
daikon.inv.unary.sequence.NoDuplicates:format_simplify()Ljava.lang.String;
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:SeqIndexIntGreaterThan()V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.inv.unary.sequence.EltOneOf:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.Prestate:repr_impl()Ljava.lang.String;
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.NodeListOptional:present()Z
daikon.Quant:pairwiseDivides([I[I)Z
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
daikon.inv.unary.sequence.NoDuplicates:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:getToken(I)Ljtb.Token;
daikon.VarInfoName.Replacer:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.inv.unary.scalar.Modulus:Modulus(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_35(I)Z
utilMDE.FuzzyFloat:FuzzyFloat()V
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:isArray()Z
daikon.VarInfo:domainTypeIOA()Ljava.lang.String;
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3_3()Z
daikon.inv.unary.string.OneOfString:check_mod_elem(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.inv.unary.scalar.Modulus:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:UpdateLineColumn(C)V
jtb.JavaParser:jj_3R_148()Z
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_133()Z
jtb.JavaCharStream:ReadByte()C
jtb.syntaxtree.NodeToken:numSpecials()I
utilMDE.ArraysMDE:sum([[D)D
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.sequence.EltwiseIntLessThan:enabled()Z
daikon.diff.Node:children()Ljava.util.Iterator;
daikon.VarComparabilityNone:comparable(Ldaikon.VarComparabilityNone;Ldaikon.VarComparabilityNone;)Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:gcd([I)I
daikon.simplify.LemmaStack:noticeInt(J)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.Quant:eltwiseEqual([I)Z
daikon.Quantify.IOAQuantification:IOAQuantification([Ldaikon.VarInfo;)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:enabled()Z
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_25()Z
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
daikon.VarInfoName.FunctionOfN:java_family_name_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
daikon.test.TestQuant:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.EltUpperBound:EltUpperBound(Ldaikon.PptSlice;)V
daikon.inv.Invariant:justified()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
jtb.JavaParser:jj_3R_121()Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.sequence.EltOneOf:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:subsetOf([J[J)Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_27()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:sign(I)I
daikon.Quant:memberOf(F[F)Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.VarInfoName.Elements:getUpperBound()Ldaikon.VarInfoName;
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.WeakHasherMap:size()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:hashCode()I
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.Quant:eq(FF)Z
daikon.VarInfoName:applyElements()Ldaikon.VarInfoName;
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
daikon.VarInfoName.SimpleNamesVisitor:simples()Ljava.util.Set;
jtb.JavaParser:jj_2_3(I)Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_daikon()Ljava.lang.String;
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
daikon.Quant:isReverse([I[I)Z
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
daikon.VarInfoName.QuantHelper:format_esc([Ldaikon.VarInfoName;Z)[Ljava.lang.String;
daikon.ProglangType:isPointerFileRep()Z
jtb.JavaParser:jj_3R_149()Z
jtb.JavaParser:jj_2_5(I)Z
daikon.inv.unary.UpperBoundCore:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
daikon.Quant:lexEqual([I[I)Z
daikon.Quant:gt(II)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
daikon.VarInfoName:jml_name(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
daikon.test.VarInfoNameTest:diff([Ljava.lang.String;[Ljava.lang.String;)V
daikon.diff.Node:Node(LutilMDE.Pair;)V
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;)V
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
jtb.JavaParser:jj_3R_162()Z
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.inv.unary.sequence.EltwiseIntLessThan:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName:hashCode()I
utilMDE.ArraysMDE:fn_inverse([II)[I
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.VarInfoName.Simple:esc_name_impl()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:sort_rep()V
daikon.Quant:pairwiseLTE([I[I)Z
jtb.JavaParser:jj_3R_54()Z
daikon.VarInfo:isPrestate()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
jtb.JavaParser:jj_3R_110()Z
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
daikon.inv.unary.sequence.EltNonZero:is_pointer()Z
daikon.Quant:subsetOf([F[F)Z
jtb.JavaParser:jj_3R_120()Z
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
daikon.VarInfoName.QuantifierVisitor:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName.NoReturnValue;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
jtb.JavaCharStream:getBeginLine()I
jtb.JavaParser:jj_3R_116()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:isMissingFlow(I)Z
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.VarInfoNameDriver.Subscript:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
daikon.inv.unary.sequence.EltLowerBound:enabled()Z
daikon.test.FormatTestCase.SingleOutputTestCase:createTestOutput(Ldaikon.inv.Invariant;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.QuantFlags:adjacent()Ljava.util.EnumSet;
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.stringsequence.EltOneOfString:sort_rep()V
jtb.JavaCharStream:BeginToken()C
daikon.test.FormatTestCase:instantiateClass(Ljava.lang.Class;Ldaikon.PptSlice;[Ljava.lang.Class;[Ljava.lang.Object;)Ldaikon.inv.Invariant;
jtb.JavaCharStream:backup(I)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.ArraysMDE:fn_compose([I[I)[I
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_73()Z
daikon.test.InvariantFormatTester:execute()Z
daikon.ValueTuple:isMissingNonsensical(I)Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.VarInfoName.Elements:simplify_name_impl(Z)Ljava.lang.String;
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:pairwiseNotEqual([I[I)Z
daikon.VarInfoName.SimpleNamesVisitor:SimpleNamesVisitor(Ldaikon.VarInfoName;)V
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.QuantHelper:quant_increment(Ldaikon.VarInfoName;ILdaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltNonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName.PostPreConverter:visitSimple(Ldaikon.VarInfoName.Simple;)Ldaikon.VarInfoName;
daikon.Quant:slice([III)[I
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
utilMDE.MathMDE.MissingNumbersIteratorLong:next()Ljava.lang.Long;
daikon.VarInfoName.TypeOf:esc_name_impl()Ljava.lang.String;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.inv.unary.sequence.EltwiseIntLessThan:EltwiseIntLessThan(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.EltOneOf:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltOneOf:sort_rep()V
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_125()Z
daikon.VarInfoName.FunctionOf:name_impl()Ljava.lang.String;
daikon.inv.unary.sequence.EltLowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3R_63()Z
jtb.JavaParser:jj_3R_105()Z
daikon.VarInfoName.Simple:ioa_name_impl()Ljava.lang.String;
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.FuzzyFloat:gt(DD)Z
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.RootNode:RootNode()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.syntaxtree.NodeToken:trimSpecials()V
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.VarInfoName.ElementsFinder:ElementsFinder(Ldaikon.VarInfoName;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.unary.sequence.EltUpperBound:format_ioa()Ljava.lang.String;
daikon.VarInfoName.QuantHelper:format_java_style([Ldaikon.VarInfoName;ZZLdaikon.inv.OutputFormat;)[Ljava.lang.String;
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
jtb.JavaParser:jj_3_4()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.VarInfoName.QuantHelper:quant_separator2(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:indexOf([I[I)I
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParserTokenManager:MoreLexicalActions()V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.FunctionOfN:name_impl()Ljava.lang.String;
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
jtb.JavaParser:jj_3R_50()Z
daikon.VarInfo:simplify_quantify(Ljava.util.EnumSet;[Ldaikon.VarInfo;)[Ljava.lang.String;
daikon.VarInfoName.FunctionOfN:elts_repr_commas()Ljava.lang.String;
daikon.VarComparabilityImplicit:alwaysComparable()Z
daikon.inv.binary.twoScalar.LinearBinary:add_modified(JJI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_2_10(I)Z
daikon.VarInfoName.Add:amount()Ljava.lang.String;
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
utilMDE.MathMDE:missing_numbers([I)[I
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsGteIndex([I)Z
utilMDE.Intern:intern([I)[I
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.VarInfoName.Elements:getLowerBound()Ldaikon.VarInfoName;
jtb.JavaParser:jj_3R_104()Z
daikon.VarInfoName.NodeFinder:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName;
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:lte(II)Z
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaParser:jj_3R_48()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
daikon.inv.unary.sequence.SeqIndexIntNonEqual:SeqIndexIntNonEqual()V
daikon.inv.unary.string.OneOfString:OneOfString(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:passes()Z
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:maxsep_indices()[I
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.FormatTestCase:getFormat(Ljava.lang.String;)Ljava.lang.String;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.ProglangType:isIntegral()Z
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
daikon.VarInfoName.TypeOf:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName:applySlice(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Ppt:Ppt()V
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.NodeFinder:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ldaikon.VarInfoName;
daikon.inv.unary.stringsequence.EltOneOfString:format_ioa()Ljava.lang.String;
jtb.JavaParser:jj_3R_108()Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.ArraysMDE:sum([[I)I
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.InvMap:InvMap()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
jtb.JavaParser:jj_3R_55()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.VarInfoName.Elements:repr_impl()Ljava.lang.String;
daikon.test.VarInfoNameDriver.PostPreConverter:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.ProglangType:baseIsFloat()Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
jtb.JavaParser:jj_2_13(I)Z
jtb.JavaParser:jj_2_17(I)Z
daikon.VarInfoName.QuantifierVisitor:visitSlice(Ldaikon.VarInfoName.Slice;)Ldaikon.VarInfoName.NoReturnValue;
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:size()I
daikon.inv.unary.sequence.EltLowerBound:EltLowerBound(Ldaikon.PptSlice;)V
utilMDE.MathMDE.MissingNumbersIteratorLong:MissingNumbersIteratorLong(Ljava.util.Iterator;Z)V
daikon.VarInfoName.InorderFlattener:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.JavaParser:jj_3R_98()Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.VarInfoName.Add:repr_impl()Ljava.lang.String;
daikon.inv.unary.string.OneOfString:format_esc()Ljava.lang.String;
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ldaikon.VarInfoName;
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName;
daikon.Quant:eltwiseGT([I)Z
daikon.VarInfoName.Subscript:Subscript(Ldaikon.VarInfoName.Elements;Ldaikon.VarInfoName;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.EltUpperBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
daikon.VarInfoName.QuantifierVisitor:visitElements(Ldaikon.VarInfoName.Elements;)Ldaikon.VarInfoName.NoReturnValue;
daikon.VarInfoName.Prestate:name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.VarInfoName.Slice:getSubscript(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
utilMDE.OrderedPairIterator:hasNext()Z
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.Quant:memberOf(D[F)Z
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:jj_3R_49()Z
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.VarInfoName.Field:simplify_name_impl(Z)Ljava.lang.String;
jtb.JavaParser:jj_3R_107()Z
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.QuantHelper.FreeVar:simplify_name_impl(Z)Ljava.lang.String;
daikon.VarInfoName.SizeOf:get_term()Ldaikon.VarInfoName;
daikon.VarInfoName.NodeFinder:NodeFinder(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.inv.OutputFormat:get(Ljava.lang.String;)Ldaikon.inv.OutputFormat;
daikon.inv.unary.sequence.EltOneOf:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.VarInfoName.Prestate:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
daikon.test.FormatTestCase:getSamples([Ldaikon.ProglangType;Ljava.io.BufferedReader;Ljava.util.List;ZLjava.lang.String;)V
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:format_simplify(Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
jtb.JavaParser:jj_3R_118()Z
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
utilMDE.ArraysMDE:min_max([I)[I
daikon.VarInfoName:hasTypeOf()Z
daikon.inv.unary.sequence.EltOneOf:enabled()Z
daikon.PptTopLevel:name()Ljava.lang.String;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.inv.unary.string.SingleString:SingleString(Ldaikon.PptSlice;)V
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_ioa()Ljava.lang.String;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.EltLowerBound:add_modified([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoName.Replacer:replace(Ldaikon.VarInfoName;)Ldaikon.VarInfoName;
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_2_18(I)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_85()Z
daikon.Quant:memberOf(S[S)Z
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:jj_3R_69()Z
daikon.VarInfoName.Poststate:Poststate(Ldaikon.VarInfoName;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.test.VarInfoNameDriver.Field:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.inv.unary.sequence.EltLowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Ppt:find_var_by_name(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
daikon.Quantify.FreeVar:FreeVar(Ljava.lang.String;)V
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
daikon.VarInfoName.QuantHelper:quant_element_conditions(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.binary.twoScalar.IntLessEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
daikon.inv.unary.scalar.NonModulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaParser:jj_3R_61()Z
daikon.inv.unary.sequence.EltOneOf:format_daikon()Ljava.lang.String;
daikon.Quant:eltsNotEqualIndex([I)Z
jtb.visitor.FormatCommand:getCommand()I
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.Quant:union([I[I)[I
daikon.VarInfoName.QuantHelper:quantify([Ldaikon.VarInfoName;)Ldaikon.VarInfoName.QuantHelper.QuantifyReturn;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
daikon.Quantify.IOAQuantification:getFreeVarName(I)Ljava.lang.String;
jtb.JavaParser:jj_3R_62()Z
jtb.JavaParser:jj_3R_161()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
utilMDE.MathMDE:pow_fast(II)I
jtb.JavaParser:jj_3R_169()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
daikon.Quant:eltsLtIndex([I)Z
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
daikon.VarInfoName.Subscript:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
daikon.VarInfo:get_ioa_quantify(Ldaikon.VarInfo;Ldaikon.VarInfo;)Ldaikon.Quantify.IOAQuantification;
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
daikon.inv.unary.stringsequence.EltOneOfString:add_modified([Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:setDiff([I[I)[I
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.Assert:assertTrue(Z)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_109()Z
utilMDE.MathMDE:nonmodulus_strict_long_internal(Ljava.util.Iterator;)[J
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltwiseNotEqual([I)Z
daikon.VarInfo:new_ppt()V
daikon.inv.unary.stringsequence.EltOneOfString:subarray_rep()Ljava.lang.String;
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
daikon.Quant:sameLength([I[I)Z
daikon.VarInfoName.QuantHelper:quant_separator1(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:add_modified(Ljava.lang.String;I)Ldaikon.inv.InvariantStatus;
daikon.VarInfo:apply_subscript(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([I[I)Z
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:freq(II)D
jtb.Token:newToken(I)Ljtb.Token;
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
daikon.ProglangType:isString()Z
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:eltsLTE([II)Z
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.unary.stringsequence.EltOneOfString:EltOneOfString(Ldaikon.PptSlice;)V
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParser:jj_3R_135()Z
daikon.inv.unary.string.OneOfString:is_type()Z
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:lexGT([I[I)Z
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.SingleStringSequence:var()Ldaikon.VarInfo;
daikon.inv.unary.sequence.EltOneOf:is_boolean()Z
daikon.Quant:ne(II)Z
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
daikon.Quantify.Term:ioa_name()Ljava.lang.String;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
utilMDE.LimitedSizeIntSet:size()I
jtb.JavaParser:jj_3R_60()Z
daikon.inv.unary.sequence.EltOneOf:format_esc()Ljava.lang.String;
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.test.FormatTestCase.SingleOutputTestCase:performTest(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
daikon.inv.unary.sequence.SeqIndexIntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:runValue([JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_47()Z
daikon.Quant:concat([I[I)[I
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
daikon.inv.unary.scalar.Positive:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName.Slice:getLowerBound()Ldaikon.VarInfoName;
daikon.inv.binary.twoScalar.LinearBinaryCore:find_bi_linear(JJJJ[D)Z
daikon.VarInfoName.Field:repr_impl()Ljava.lang.String;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:gcd(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.unary.sequence.EltNonZero:format_ioa()Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:format_ioa()Ljava.lang.String;
daikon.Quant:eltsGTE([II)Z
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.VarInfoName.QuantHelper:quant_var_initial_state(Ldaikon.VarInfoName;Ldaikon.VarInfoName;Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.Invariant:simplify_format_long(J)Ljava.lang.String;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaCharStream:getBeginColumn()I
jtb.JavaParser:jj_2_21(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.inv.unary.scalar.Modulus:add_modified(JI)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:indexOf([ZZ)I
utilMDE.SimpleLog:SimpleLog(Z)V
daikon.VarInfoName.Poststate:name_impl()Ljava.lang.String;
jtb.JavaParser:jj_3R_136()Z
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName:applyFunctionOfN(Ljava.lang.String;Ljava.util.List;)Ldaikon.VarInfoName;
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.VarInfoName.Field:esc_name_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.QuantifyEscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.Quantify.IOAQuantification:IOAQuantification(Ldaikon.VarInfo;Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
utilMDE.UtilMDE:escapeNonASCII(C)Ljava.lang.String;
daikon.inv.unary.string.OneOfString:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.ValueTuple:size()I
utilMDE.Intern:intern([J)[J
daikon.inv.unary.LowerBoundCore:wouldChange(J)Z
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.VarInfoName.SizeOf:java_family_impl(Ldaikon.inv.OutputFormat;Ldaikon.VarInfo;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltwiseIntComparison:EltwiseIntComparison(Ldaikon.PptSlice;)V
daikon.VarInfoName.Simple:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaParser:jj_3R_52()Z
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_89()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.VarInfoName.QuantifierVisitor:unquants()Ljava.util.Set;
jtb.JavaParser:jj_3_20()Z
daikon.VarInfo:simplifyFixup(Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
utilMDE.FuzzyFloat:gte(DD)Z
jtb.JavaParser:jj_3R_100()Z
daikon.inv.unary.scalar.OneOfScalar:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.inv.ValueSet.ValueSetString:ValueSetString(I)V
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
daikon.inv.unary.sequence.SeqIndexIntNonEqual:format_esc()Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V
jtb.JavaParser:jj_3R_74()Z
daikon.VarInfoName.QuantHelper:quant_step_terminator(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfoName.Elements:Elements(Ldaikon.VarInfoName;)V
jtb.JavaParser:jj_3R_164()Z
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.JavaParser:jj_3_21()Z
daikon.inv.unary.sequence.NoDuplicates:format_java_family(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.test.FormatTestCase:getGoalOutput(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName.Add:jml_name_impl(Ldaikon.VarInfo;)Ljava.lang.String;
jtb.JavaCharStream:readChar()C
utilMDE.MathMDE:nonmodulus_strict_long(Ljava.util.Iterator;)[J
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.inv.unary.string.SingleString:valid_types([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_75()Z
jtb.JavaParser:jj_3_17()Z
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.stringsequence.EltOneOfString:is_type()Z
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.VarInfoName.TypeOf:simplify_name_impl(Z)Ljava.lang.String;
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.stringsequence.EltOneOfString:enabled()Z
daikon.VarInfo:esc_quantify(Z[Ldaikon.VarInfo;)[Ljava.lang.String;
jtb.JavaParser:jj_2_16(I)Z
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.VarInfoName:dbc_name(Ldaikon.VarInfo;)Ljava.lang.String;
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
daikon.VarInfo:simplify_name()Ljava.lang.String;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:jj_3R_80()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
daikon.VarInfoName.AbstractVisitor:visitPrestate(Ldaikon.VarInfoName.Prestate;)Ljava.lang.Object;
daikon.VarInfoName:applyField(Ljava.lang.String;)Ldaikon.VarInfoName;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.EltOneOf:is_hashcode()Z
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:split(I)I
daikon.VarInfoName.AbstractVisitor:visitTypeOf(Ldaikon.VarInfoName.TypeOf;)Ljava.lang.Object;
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.VarInfoNameDriver.FunctionOfN:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.VarInfoName.Prestate:accept(Ldaikon.VarInfoName.Visitor;)Ljava.lang.Object;
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1372 2 1469 4 1482 2 1102 2 160 2 1426 2 832 2 666 2 299 2 
275 6 437 2 373 6 1601 2 1209 2 119 2 178 6 817 2 244 2 1329 2 236 2 
262 4 65 2 1260 2 773 2 791 6 1157 2 976 6 606 2 481 6 1482 2 177 4 1426 2 1326 6 
676 2 841 2 6 8 1621 2 607 2 1160 6 494 6 1232 6 1201 2 1299 6 633 4 1234 8 448 4 402 8 1359 2 1031 6 1037 15 1210 8 45 2 1482 4 522 6 1426 4 599 4 1167 14 486 10 
1483 6 600 4 
379 2 
1070 2 1536 2 705 4 278 2 1082 4 325 2 167 2 1327 2 1140 2 326 2 1542 2 328 2 575 2 1283 2 241 2 479 2 1334 2 1454 2 580 2 672 2 1244 2 1151 2 1553 2 1102 2 983 2 993 2 1518 2 1355 4 350 2 854 2 148 2 809 4 1207 2 456 2 594 2 269 2 814 2 1482 4 409 2 753 2 361 2 1426 4 647 2 1427 2 
531 2 6 32 218 4 91 6 966 4 798 6 1018 4 1622 6 657 4 191 6 1160 15 494 15 1540 4 1232 4 1299 15 1256 2 235 4 661 4 1234 32 351 2 402 22 427 2 1031 15 69 2 172 3 1210 32 1037 52 520 6 1482 4 522 19 1061 8 1456 6 560 5 1426 4 1640 2 599 2 1128 4 1167 47 486 6 
1334 2 482 2 1177 2 
583 2 488 2 338 10 549 2 89 2 926 2 604 22 1419 2 371 2 512 2 1564 2 335 2 1188 2 1427 2 
1189 2 1616 2 6 2 734 2 1160 2 494 2 1232 2 1299 2 1234 2 1301 2 998 2 402 2 375 2 1031 2 1573 2 1035 2 1037 6 1210 2 1265 2 522 2 599 2 1167 4 486 4 
1234 8 1067 2 402 4 1031 4 6 8 91 6 1210 8 520 6 1037 16 627 2 1621 2 657 4 1160 4 494 4 1299 4 235 4 1167 12 
1369 2 181 4 48 2 4 4 1582 4 319 2 567 62 1229 2 1407 2 967 4 1587 10 902 4 990 2 539 2 992 2 736 2 1518 2 803 2 1114 4 1233 2 545 2 614 4 1355 4 1026 2 805 4 806 2 1499 10 1632 4 574 14 1177 2 775 4 1090 2 748 2 1334 8 777 2 154 4 482 6 431 2 271 2 672 4 
683 2 1519 2 1466 2 662 2 884 2 379 2 1545 2 110 2 1267 2 620 2 
416 3 1130 24 0 32 1313 1 1317 2 216 2 1435 2 821 2 223 2 1320 8 513 2 12 1 1324 3 514 2 714 2 16 2 1141 2 1142 2 518 2 21 3 428 2 1546 2 1547 2 719 2 1451 2 331 2 132 2 332 3 134 2 529 2 1040 3 436 2 1041 6 337 2 1554 32 623 2 246 2 934 5 840 4 1154 2 30 2 1047 2 939 2 733 2 1559 2 1347 4 537 12 1159 2 630 2 543 2 852 2 548 2 856 2 1058 2 954 2 858 1 42 2 264 2 1360 2 451 1 452 2 356 1 1361 3 556 4 557 2 360 2 1578 2 460 1 1482 34 1266 16 559 2 1065 1 273 2 646 2 865 2 1066 2 964 16 758 2 159 2 467 3 869 2 1583 2 468 2 1378 2 54 2 876 2 1591 1 1081 4 1275 6 470 2 762 1 766 2 1277 24 471 1 769 3 281 2 770 2 1597 2 883 2 1384 2 1288 2 1391 4 73 2 75 1 891 4 1185 2 384 3 1094 16 184 3 183 2 1614 2 1101 3 1192 2 984 2 1105 2 397 2 796 1 1409 3 1198 2 1111 8 587 2 905 2 1115 2 299 2 1300 1 103 2 997 2 590 6 1629 2 690 1 591 2 1416 4 1633 8 500 2 1522 2 810 4 204 2 404 2 811 1 813 1 1527 2 597 16 913 12 815 2 1009 1 1426 32 116 6 212 2 1531 2 
1482 2 833 2 
1482 2 68 2 1201 2 
450 2 
1 132 417 2 3 32 1221 4 418 2 5 2 421 6 422 4 1226 8 820 2 423 46 11 112 13 2 426 2 20 20 1237 2 429 6 1240 6 24 6 432 6 1243 4 1245 2 1246 2 26 2 440 2 441 2 1251 112 442 4 28 2 842 4 1253 60 845 20 844 8 33 6 847 2 1254 2 37 2 446 2 1258 2 1259 6 855 2 1262 2 41 6 453 2 860 2 461 4 1268 6 1269 8 463 2 50 26 873 26 1273 6 469 2 53 46 55 8 1274 2 877 6 879 2 1276 2 57 52 1278 26 474 6 476 70 63 2 1281 2 66 12 67 244 1282 2 886 132 1286 2 478 4 1287 4 71 6 889 2 77 2 484 20 895 2 81 198 80 8 82 2 83 8 84 2 85 2 87 12 88 30 90 2 489 4 900 60 901 4 96 2 1295 46 1296 2 99 64 98 2 493 2 1298 12 496 82 100 2 907 12 107 4 1306 6 910 6 108 4 1307 14 111 2 911 2 1308 182 502 6 503 4 505 2 114 4 506 244 1311 8 508 46 916 4 118 2 510 4 920 18 922 64 1325 2 515 2 923 12 126 2 516 2 924 2 129 4 1332 2 519 2 927 6 928 224 1335 2 1336 4 930 2 524 18 528 26 133 2 136 2 530 66 1339 2 137 4 139 2 533 4 1340 8 140 2 142 4 942 6 1348 28 538 112 1349 4 542 6 1351 54 948 8 1353 30 950 8 949 86 951 2 952 336 547 2 552 6 150 4 955 6 1364 2 151 140 1366 192 555 2 153 6 957 4 558 12 961 2 1370 2 1371 6 1373 4 963 12 562 160 563 84 1375 198 1376 74 161 2 164 2 568 6 569 2 970 2 570 2 1385 4 974 28 973 376 1386 2 975 6 1387 2 577 14 1394 4 175 26 1397 4 979 2 980 4 981 432 185 6 982 98 1403 2 985 6 1404 4 1405 4 1408 2 189 4 989 2 192 12 193 2 1413 6 995 2 994 2 996 2 199 2 202 4 201 4 1422 2 593 2 1002 2 1003 2 595 2 1424 6 596 204 208 2 1425 14 598 2 1010 2 1426 10 1011 4 602 20 1012 30 1428 6 214 2 1429 48 1430 2 215 4 1013 6 1433 2 603 26 1016 8 220 14 224 328 225 16 1019 6 1020 2 608 198 229 2 230 244 1024 6 612 60 234 2 1023 2 1025 94 1442 2 1028 2 615 6 1446 198 1447 20 240 6 1449 2 1034 2 617 6 1452 182 1039 28 1457 4 248 2 1044 4 1046 2 251 6 1459 6 1460 10 1048 26 253 22 628 4 1050 4 631 2 632 4 1462 60 1055 14 1056 2 1470 2 637 2 1472 2 1473 2 1475 6 268 4 641 4 642 4 1480 4 1479 2 270 4 1482 10 645 8 272 10 1485 6 646 2 1486 2 1488 24 1072 386 649 30 1492 8 651 4 650 4 1074 4 1075 2 1077 290 279 6 653 20 280 4 1079 2 1496 6 659 2 1497 2 1498 6 660 10 1087 4 283 192 284 88 1500 14 286 2 287 8 667 2 1091 2 669 2 290 4 1092 2 671 2 1096 10 1505 28 1506 2 292 6 293 2 675 2 1099 30 1509 2 1100 2 1508 2 1510 2 1103 6 1104 26 679 112 681 2 1107 16 1514 198 1515 2 1516 6 1109 2 298 2 1112 198 1113 30 686 2 688 2 687 2 1117 4 1118 2 1119 2 1521 2 301 2 1121 2 302 6 1124 6 692 2 693 2 1125 6 695 2 696 4 1524 2 308 4 1126 6 700 10 701 4 310 68 1529 2 1129 204 704 2 1533 2 314 2 315 6 1134 12 320 2 1136 198 322 4 709 6 1138 228 1139 92 713 4 327 18 716 12 1143 2 1544 50 329 6 718 2 720 30 721 4 1550 4 1149 6 1150 2 336 6 722 4 723 20 1552 2 1153 26 726 26 1555 2 340 6 1556 6 1557 6 732 2 1158 6 345 12 1561 2 735 4 1563 4 347 106 1162 8 1161 198 1565 2 1569 2 1571 2 354 2 746 6 355 2 747 22 357 4 1574 4 1575 118 1576 6 749 6 1577 2 1579 6 365 30 1580 2 757 566 1585 2 370 22 1588 2 1590 2 764 30 372 22 765 24 1595 432 771 4 1175 4 772 2 1599 2 1600 2 774 4 1602 2 1603 16 1605 8 1604 6 1179 2 381 8 1182 2 1183 2 1607 26 1608 48 779 4 1187 4 780 2 781 12 1610 4 386 2 784 4 1613 4 1190 328 789 2 390 14 794 4 793 2 395 2 1194 6 396 6 399 2 797 2 799 2 1195 10 1620 2 1623 6 800 2 1626 8 401 2 804 2 807 30 1203 2 1631 16 1204 2 403 2 1205 2 1634 2 1637 20 1211 6 1212 2 1213 28 407 106 410 2 412 2 414 2 1216 46 415 4 818 30 
254 2 962 1 1438 2 1155 2 
254 2 1396 2 
254 2 1334 2 689 2 1006 2 27 2 676 2 1014 2 
254 2 27 2 702 2 
254 2 1443 2 27 2 
1051 2 1438 2 1465 2 
254 2 27 2 
655 2 1465 2 
254 2 870 2 
1438 2 217 2 1465 2 
1438 2 664 2 211 2 
1060 2 1438 2 1086 2 
1241 2 1438 2 274 2 
585 2 1438 2 203 2 
999 2 1465 2 
254 2 1434 2 
261 2 664 2 
1060 2 822 2 
1318 2 1241 2 
527 2 203 2 
367 2 1465 2 
1231 2 203 2 
1241 2 892 2 
1060 2 663 2 
1410 2 664 2 
1438 2 217 2 1059 2 1465 2 
106 2 1438 2 217 2 1059 2 1465 2 
953 2 1438 2 1465 2 
1438 2 391 2 1465 2 
933 2 943 2 179 2 1215 2 
1334 2 1006 2 1481 2 864 2 
1334 2 689 2 1399 2 1006 2 1481 2 864 2 
254 2 1334 2 1006 2 27 2 676 2 1423 2 
677 2 1244 2 
1334 2 1006 2 676 2 1166 2 
1241 2 724 2 
1503 2 203 2 
581 2 664 2 
1060 2 1450 2 
333 2 1060 2 203 2 
1060 2 699 2 203 2 
1461 2 1060 2 203 2 
1060 2 203 2 413 2 
1513 6 1592 6 349 2 1305 2 1523 2 1334 2 1006 2 176 2 
1186 2 1465 2 
1027 2 1331 2 1098 2 1374 2 419 2 1417 2 604 6 22 4 1017 4 341 2 152 2 405 2 752 2 1110 2 166 2 364 2 601 2 1042 2 
1438 2 434 2 
856 2 
0 6 1317 2 219 2 1435 2 821 2 1320 2 12 2 826 2 16 2 1141 2 130 2 428 2 1546 2 719 2 132 2 331 2 1451 2 1148 2 529 4 1041 4 1554 4 729 2 939 2 1347 4 537 8 629 4 630 2 543 2 954 2 40 2 264 6 638 4 556 2 1578 2 460 2 557 2 1482 26 1266 6 559 2 646 2 468 2 54 2 1081 4 1275 6 470 2 1495 2 770 2 282 2 883 2 1597 2 1384 2 1391 4 289 2 891 2 183 2 984 2 1105 2 190 2 101 2 299 2 1300 4 590 2 1416 2 591 2 500 2 1418 2 810 4 912 2 913 8 815 2 210 2 1214 2 1426 26 116 2 1127 2 212 2 
0 6 1317 2 216 2 219 2 1435 2 821 2 1320 2 12 2 714 2 826 2 16 2 1141 2 428 2 1546 2 719 2 132 2 331 2 1451 2 1148 2 529 4 1041 6 1554 4 729 2 939 2 1347 4 537 8 629 4 630 2 259 2 543 2 1058 2 954 2 40 2 264 6 638 4 556 2 1578 2 460 2 557 2 1482 26 1266 6 559 2 646 2 468 2 163 2 54 2 1081 4 1275 6 470 2 1495 2 770 2 282 2 883 2 1597 2 1384 2 1391 4 289 2 891 2 785 2 183 2 984 2 1105 2 101 2 299 2 1300 2 590 2 1416 2 591 2 500 2 1418 2 810 4 912 2 913 8 815 2 210 2 1426 26 116 2 1127 2 212 2 
1445 2 
420 2 680 2 
275 6 1069 4 1219 2 1315 2 1073 2 759 2 227 4 823 2 1275 4 1022 2 611 2 125 2 1173 2 1329 4 1330 2 236 2 770 2 16 2 883 2 373 6 1285 2 1391 2 1146 2 1337 2 178 6 673 2 244 4 1152 2 86 4 1193 4 1105 2 339 4 1406 2 1558 2 343 2 987 4 586 2 492 2 589 2 634 8 104 2 1630 2 1358 10 743 2 1208 2 810 2 640 2 1264 2 1578 2 751 2 1482 12 408 8 1368 2 559 2 816 2 754 2 817 2 362 2 1426 6 646 2 
275 8 1069 4 1219 2 1315 2 1073 2 1586 2 759 2 227 4 823 2 1275 4 1022 2 611 2 125 2 1173 2 1329 4 1330 2 236 2 770 2 16 2 883 2 373 6 1601 2 1285 2 173 2 1391 2 1146 2 1337 2 178 8 673 2 244 4 1152 2 582 4 86 4 1193 4 1105 2 339 4 1406 2 1558 2 343 2 987 4 589 2 634 8 104 2 1630 2 1358 10 743 2 810 2 1208 2 640 2 1264 2 1578 2 751 2 1482 12 408 8 1368 2 559 2 816 2 754 2 817 2 1426 6 362 2 646 2 
104 2 1630 2 86 4 373 2 1193 4 1285 2 343 2 987 2 1264 2 1146 2 1368 2 1337 2 178 2 362 2 244 2 1152 2 1329 2 1173 2 
275 6 1069 4 1219 2 1315 2 1073 2 759 2 227 4 823 2 1275 4 1022 2 611 2 125 2 1173 2 1329 4 1330 2 770 2 16 2 883 2 373 4 1601 2 1285 2 1391 2 1146 2 1337 2 178 6 673 2 244 4 1152 2 86 4 1193 4 1105 2 339 4 1406 2 1558 2 343 2 987 4 586 2 492 2 589 2 634 4 104 2 1630 2 1358 6 743 2 1208 2 810 2 640 2 1264 2 1578 2 751 2 1482 12 408 4 1368 2 559 2 816 2 754 2 817 2 362 2 1426 6 646 2 
275 6 1069 4 1219 2 1315 2 1073 2 759 2 227 4 823 2 1275 4 1022 2 611 2 125 2 1173 2 1329 4 1330 2 770 2 16 2 883 2 373 6 1285 2 1391 2 1146 2 1337 2 178 4 673 2 244 4 1152 2 437 2 86 4 1193 4 1105 2 339 4 1406 2 1558 2 343 2 987 4 586 2 492 2 589 2 634 4 104 2 1630 2 1358 6 743 2 1208 2 810 2 640 2 1264 2 1578 2 751 2 1482 12 408 4 1368 2 559 2 816 2 754 2 817 2 362 2 1426 6 646 2 
275 6 1069 4 1219 2 1315 2 1073 2 759 2 227 4 823 2 1275 4 1022 2 611 2 125 2 1173 2 1329 4 1330 2 236 2 770 2 16 2 883 2 373 6 1285 2 1391 2 1146 2 1337 2 178 6 673 2 244 4 1152 2 86 4 1193 4 1105 2 339 4 1406 2 1558 2 343 2 987 4 586 2 492 2 589 2 634 8 104 2 1630 2 1358 6 743 2 1208 2 810 2 640 2 1264 2 1578 2 751 2 1482 12 408 4 1368 2 559 2 816 2 754 2 817 2 362 2 1426 6 646 2 
275 8 1069 4 1219 2 1315 2 1073 2 759 2 227 4 823 2 1275 4 1022 2 611 2 125 2 1173 2 1329 4 1330 2 236 2 770 2 16 2 883 2 373 8 1285 2 1391 2 1146 2 1337 2 178 6 673 2 244 4 1152 2 437 2 86 4 1193 4 1105 2 339 4 1406 2 1558 2 343 2 987 4 586 2 492 2 589 2 634 8 104 2 1630 2 1358 10 743 2 1208 2 810 2 640 2 1264 2 1578 2 751 2 1482 12 408 8 1368 2 559 2 816 2 754 2 817 2 362 2 1426 6 646 2 
275 6 1069 4 1219 2 1315 2 1073 2 759 2 227 4 823 2 1275 4 1022 2 611 2 125 2 1173 2 1329 4 1330 2 236 2 770 2 16 2 883 2 373 6 1285 2 1391 2 1146 2 1337 2 178 6 673 2 244 4 1152 2 86 4 1193 4 1105 2 339 4 1406 2 1558 2 343 2 987 4 586 2 492 2 589 2 634 8 104 2 1630 2 1358 10 743 2 1208 2 810 2 640 2 1264 2 1578 2 751 2 1482 12 408 8 1368 2 559 2 816 2 754 2 817 2 362 2 1426 6 646 2 
0 8 509 2 1219 2 1317 2 216 2 1435 2 1320 2 824 2 227 6 823 2 1022 2 232 2 611 2 125 2 1329 4 1330 2 16 2 428 2 1546 2 833 2 132 2 929 2 1146 2 242 2 1337 2 244 4 1152 2 1041 6 245 4 622 2 437 4 1554 2 935 2 729 2 339 4 939 2 1558 2 343 2 1347 4 537 4 629 4 630 2 543 2 634 2 352 2 743 2 450 2 1058 2 954 2 149 2 264 6 455 2 640 2 1476 2 644 2 556 2 1264 2 557 2 1578 2 1266 6 1482 32 1368 2 754 2 559 2 362 2 755 2 646 2 275 12 756 2 1069 8 366 2 1073 2 872 2 652 2 759 2 1081 4 1275 6 1495 2 470 2 169 2 1173 2 770 2 883 2 1384 2 373 8 374 2 572 2 68 2 1089 2 1285 2 1391 4 480 2 578 2 891 2 178 4 673 2 183 2 86 4 1191 2 984 2 1193 4 1105 2 1406 2 398 2 987 4 586 2 101 2 1201 2 195 2 299 2 589 2 590 2 104 2 498 2 1630 2 1416 2 1208 2 810 4 1004 2 113 4 913 4 815 2 1528 2 816 2 817 4 116 2 1426 20 1127 2 212 4 
0 8 509 2 1219 2 1317 2 216 2 1435 2 1320 2 824 2 227 6 823 2 1022 2 232 2 611 2 125 2 1329 4 236 4 1330 2 16 2 428 2 1546 2 833 2 132 2 929 2 1146 2 242 2 1337 2 244 4 1152 2 1041 6 245 4 622 2 1554 2 935 2 729 2 339 4 939 2 1558 2 343 2 1347 4 537 6 629 4 630 2 543 2 634 6 352 2 743 2 450 2 1058 2 954 2 149 2 264 6 455 2 640 2 1476 2 644 2 556 4 1264 2 557 2 1578 2 1266 6 1482 32 1368 2 754 2 559 2 362 2 755 2 646 2 275 12 756 2 1069 8 366 2 1073 2 872 2 652 2 759 2 1081 4 1275 6 1495 2 470 2 169 2 1173 2 770 2 883 2 1384 2 373 8 374 2 572 2 68 2 1089 2 1285 2 1391 4 480 2 578 2 891 4 178 8 673 2 183 2 86 4 1191 2 984 2 1193 4 1105 2 1406 2 398 2 987 4 586 2 101 2 1201 2 195 2 299 2 589 2 590 2 104 2 498 2 1630 2 1416 4 1208 2 810 4 1004 2 113 4 913 6 815 2 1528 2 816 2 817 4 116 2 1426 20 1127 2 212 4 
0 8 509 2 1219 2 1317 2 216 2 1435 2 1320 2 824 2 227 6 823 2 1022 2 232 2 611 2 125 2 1329 4 236 4 1330 2 16 2 428 2 1546 2 833 2 132 2 929 2 1146 2 242 2 1337 2 244 4 1152 2 1041 6 245 4 622 2 1554 2 935 2 729 2 339 4 939 2 1558 2 343 2 1347 4 537 6 629 4 630 2 543 2 634 6 352 2 1358 4 743 2 450 2 954 2 1058 2 149 2 264 6 455 2 640 2 1476 2 644 2 556 4 1264 2 557 2 1578 2 1266 6 1482 32 1368 2 559 2 754 2 362 2 755 2 646 2 275 12 756 2 1069 8 366 2 1073 2 872 2 652 2 759 2 1081 4 1275 6 1495 2 470 2 169 2 1173 2 770 2 883 2 1384 2 373 8 374 2 572 2 68 2 1089 2 1285 2 1391 4 480 2 578 2 891 4 178 8 673 2 183 2 86 4 1191 2 984 2 1193 4 1105 2 1406 2 398 2 987 4 586 2 101 2 1201 2 195 2 299 2 589 2 590 2 104 2 498 2 1630 2 1416 4 1208 2 810 4 1004 2 113 4 913 6 408 4 1528 2 815 2 816 2 817 4 116 2 1426 20 1127 2 212 4 
0 12 509 2 1219 2 706 2 1317 2 216 2 1435 2 1320 2 824 2 227 6 823 2 1022 2 611 2 125 2 1329 4 236 4 1330 2 16 2 831 2 428 2 1546 2 833 2 132 2 929 2 1146 2 242 2 1337 2 244 4 1152 2 1041 6 245 4 622 2 437 2 1554 4 935 2 729 2 339 4 939 2 1558 2 343 2 1347 4 537 6 629 6 630 2 543 2 740 2 634 6 352 2 1358 4 743 2 450 2 954 2 1058 2 149 2 264 8 455 2 640 2 1476 2 644 2 556 4 1264 2 557 2 1578 2 1266 8 1482 30 1368 2 559 2 754 2 362 2 755 2 646 2 275 16 756 2 1069 8 366 2 1073 2 872 2 652 2 759 2 1081 4 1275 6 1495 2 470 2 1173 2 770 2 883 2 1384 2 373 10 374 2 572 2 68 2 1601 2 885 2 1089 2 1285 2 1391 4 480 2 578 2 891 4 178 10 673 2 183 2 86 4 1191 2 984 2 1193 4 1105 2 1406 2 398 2 987 4 586 2 101 2 1201 2 195 2 299 2 589 2 590 4 104 2 498 2 1630 2 1416 4 1208 2 810 4 1004 2 113 4 913 6 408 4 1528 2 815 2 816 2 914 2 411 2 817 4 116 4 1426 18 1127 2 212 2 
275 4 1069 2 1219 2 86 2 1193 2 339 2 1406 2 1558 2 586 2 227 2 611 2 1173 2 1329 4 236 2 1330 2 589 2 634 6 1358 4 1630 2 743 2 373 6 1208 2 1285 2 1264 2 1482 4 408 4 1368 2 754 2 816 2 817 2 1337 2 178 6 362 2 673 2 244 4 
0 8 1314 3 1219 2 1317 2 216 2 1435 2 223 2 227 2 823 2 232 2 611 2 1329 4 236 2 1330 2 16 2 829 2 428 2 1546 2 132 2 1337 2 244 4 1041 6 1554 3 246 2 339 2 939 2 1558 2 1347 4 629 4 344 2 630 2 543 2 634 6 1358 2 856 2 743 2 1058 2 954 2 744 2 1261 2 264 6 1264 2 1578 2 1482 28 1266 6 1368 2 754 2 559 2 362 2 646 2 275 4 1069 2 1081 4 1275 6 1495 2 470 2 169 2 1173 2 770 2 883 2 1384 2 373 6 1285 2 1391 4 178 6 673 2 183 2 86 2 1193 2 984 2 1105 2 1406 2 586 2 1198 2 101 2 299 2 589 2 590 3 1630 2 808 2 810 4 1208 2 815 2 816 2 817 2 1426 24 116 3 1127 2 212 4 
754 2 838 2 589 2 
754 2 838 2 589 2 
0 2 1131 2 509 2 1315 2 1432 2 1317 2 216 2 1435 2 1230 2 227 4 1022 2 232 2 125 2 1329 4 236 4 16 2 428 2 1546 2 132 2 1146 2 1038 2 1551 2 1337 2 244 4 838 2 1152 2 1041 6 437 4 1247 2 1554 2 339 2 939 2 1558 2 141 4 1347 4 537 4 630 2 543 2 634 6 1358 6 1058 2 954 2 636 2 264 2 639 2 556 4 1264 2 557 4 1578 2 1482 24 1266 2 754 6 559 2 755 2 646 2 157 2 275 16 1069 4 564 2 1073 4 52 2 759 2 1081 4 1275 6 470 2 1495 2 1382 2 770 2 282 4 883 2 1384 2 373 12 1601 4 1284 2 1285 4 1389 2 1391 4 891 4 178 12 673 2 786 2 183 2 86 2 394 4 1193 2 1105 2 398 2 987 4 101 6 299 2 1300 2 589 4 498 2 908 2 1416 4 810 4 206 2 113 2 1008 2 913 4 408 4 815 2 817 4 1426 16 1127 2 212 4 
978 2 16 2 104 2 250 2 639 2 680 2 1078 2 398 2 1008 2 1482 4 1063 2 1551 2 232 2 1426 2 1291 2 1382 2 212 2 
0 2 1131 2 509 2 1315 2 1432 2 1317 2 216 2 1435 2 1230 2 227 4 1022 2 125 2 1329 4 236 4 16 2 428 2 1546 2 132 2 1146 2 1038 2 1551 2 1337 2 244 4 838 2 1152 2 1041 6 437 4 1554 4 339 2 939 2 1558 2 141 4 1347 4 537 4 630 2 543 2 634 6 1358 6 1058 2 954 2 636 2 264 2 639 2 556 4 1264 2 557 4 1578 2 751 2 1482 24 1266 2 754 6 559 2 755 2 646 2 157 2 275 16 1069 4 564 2 1073 4 759 4 1081 4 1275 6 470 2 1495 2 1382 2 770 2 282 4 883 2 1384 2 373 12 1601 4 1285 4 776 2 1389 2 72 2 1391 4 1393 2 891 4 178 12 673 2 183 2 86 2 394 4 1193 2 1105 2 398 2 97 2 987 4 1108 2 101 6 299 2 589 4 498 2 908 4 1416 4 810 4 206 2 113 2 913 4 408 4 815 2 817 4 1426 16 1127 2 212 2 
0 2 1131 2 509 2 1315 2 1432 2 1317 2 216 2 1435 2 1230 2 227 4 1022 2 232 2 125 2 1329 4 827 2 236 4 16 2 1030 2 428 2 1546 2 132 2 1146 2 1038 2 1551 2 1337 2 244 4 838 2 1152 2 1041 6 437 4 1554 2 339 2 939 2 1558 2 141 4 1347 4 537 4 630 2 1052 2 543 2 741 2 634 6 1358 6 1058 2 954 2 636 2 264 2 639 2 556 4 1264 2 557 4 1578 2 751 2 1482 24 1266 2 754 6 559 2 755 2 646 2 157 2 275 16 1069 4 564 2 1073 4 759 4 1081 4 1275 6 470 2 1495 2 1382 2 770 2 282 4 883 2 1384 2 373 12 1601 4 1285 4 1389 2 1391 4 891 4 178 12 673 2 183 2 86 2 394 4 1193 2 1105 2 398 2 987 4 101 6 299 2 1300 1 589 4 498 2 908 2 1416 4 810 4 206 2 113 2 1526 2 1008 2 913 4 408 4 815 2 817 4 1426 16 1127 2 212 4 
0 76 416 2 1218 2 2 2 4 2 1222 18 6 12 1225 2 1227 33 1228 24 10 32 824 4 12 2 14 2 825 2 15 2 826 2 1234 12 18 2 1236 32 16 2 828 2 17 55 831 2 21 2 428 2 1238 32 430 32 25 10 1242 2 835 1 836 42 1248 2 839 2 1249 1 439 32 1250 3 840 4 1252 2 29 64 30 2 843 18 32 2 846 20 849 2 443 4 444 2 850 18 1255 2 35 18 36 2 851 16 1257 2 447 2 853 2 852 2 449 18 857 2 39 2 1261 2 40 2 1263 2 42 2 452 2 861 2 454 2 43 2 44 2 46 2 457 2 458 2 459 2 862 2 460 2 462 32 1266 24 865 2 465 84 47 10 866 16 867 2 868 2 49 2 1271 2 467 2 872 2 51 1 874 2 876 2 1275 8 56 2 878 32 470 36 58 4 472 2 1277 12 59 2 61 32 60 2 881 2 882 20 1280 2 475 18 883 2 64 2 69 2 885 2 887 2 888 2 477 2 70 30 74 20 73 2 76 2 1289 2 890 2 78 8 483 2 485 32 893 2 79 2 894 2 896 18 897 2 1292 4 898 32 899 4 91 6 92 4 93 4 1294 2 94 2 95 2 491 4 903 2 904 74 494 6 495 2 101 2 905 2 1299 6 906 2 1300 1 103 2 1302 3 1303 2 499 2 105 44 1304 8 909 2 109 1 501 2 112 2 912 2 1309 32 504 2 913 96 914 4 116 46 1310 2 507 18 1314 2 117 2 1316 2 1317 4 917 2 919 10 120 46 511 2 1319 32 121 2 122 2 123 2 1321 2 1320 52 1322 32 513 2 921 4 1324 2 514 2 127 32 517 4 1333 2 132 2 525 2 522 6 526 2 134 2 931 2 135 32 532 2 534 2 1342 2 1341 3 936 2 535 2 937 2 938 2 1343 32 536 2 1344 2 939 2 1345 2 940 2 1347 168 941 2 537 99 944 1 540 6 945 2 541 2 1350 2 1352 2 946 2 543 8 145 2 146 84 546 2 1356 18 1357 2 147 2 954 2 550 2 149 2 1363 2 1362 3 553 2 1365 2 1367 64 956 2 554 2 154 2 557 10 958 64 155 2 559 2 560 6 960 2 959 2 561 4 158 2 964 48 965 18 565 4 966 4 566 4 1378 2 162 13 165 12 1380 2 969 2 1381 2 168 10 1383 18 971 2 170 16 972 4 1384 2 171 2 571 4 576 2 1390 2 1391 6 1392 2 1395 2 174 18 180 2 977 2 183 2 184 2 182 44 1400 32 1401 3 584 1 1402 28 186 2 984 2 187 10 986 2 1409 2 988 4 188 2 191 6 991 18 587 2 588 48 195 2 196 2 1414 4 590 16 997 2 1415 4 200 2 592 2 1418 2 1000 18 1001 2 1421 2 205 4 597 26 1007 3 207 3 209 16 210 2 1426 410 212 4 1431 2 216 130 1015 2 219 2 1435 2 1436 4 222 2 1437 2 605 20 226 32 228 3 231 4 1439 14 233 4 610 3 613 1 1440 2 1441 18 235 4 237 14 614 2 1444 2 1029 32 238 46 1448 2 1031 6 616 32 1037 24 1455 3 618 4 619 4 243 32 1040 2 1041 460 1043 2 622 2 624 2 1045 32 249 26 1458 12 626 2 252 2 1049 2 255 2 629 12 257 2 630 2 258 2 260 14 1463 20 1053 14 1464 8 1054 16 1467 62 1057 4 635 4 263 2 1468 2 1058 130 1471 2 264 14 265 2 1474 2 267 20 1477 2 1478 2 1482 512 1062 2 1061 8 1484 2 1064 46 646 2 273 2 1066 2 1487 2 276 1 648 4 277 102 1071 14 1490 2 1493 64 652 2 654 32 656 20 1080 2 1081 200 1084 6 1085 10 1088 18 665 2 1501 2 288 2 1502 2 668 24 289 48 1504 10 1093 20 1094 14 674 2 291 18 1097 8 294 2 1507 14 1101 2 1512 18 678 2 1105 2 295 18 1106 32 297 4 1111 12 684 62 1517 2 685 2 1114 2 299 8 1115 2 300 2 1122 2 691 4 303 12 1123 2 304 4 305 32 694 32 697 2 1527 2 698 2 312 3 1127 2 311 2 1531 2 1130 12 1535 4 313 2 1537 16 706 2 707 18 317 2 708 7 1133 2 1538 2 1135 14 323 4 321 232 324 2 710 14 1137 2 712 2 1540 4 715 2 1541 2 1142 2 717 64 1546 36 1548 3 1144 2 1549 4 334 4 1147 1 1148 2 725 14 1554 58 728 18 729 46 730 32 1156 32 731 2 342 2 733 2 1559 2 1560 32 344 2 1159 2 346 2 1562 16 1160 6 738 4 1566 2 348 2 739 2 740 2 1568 2 1570 6 351 2 742 6 353 32 744 2 745 14 1572 2 358 4 1163 14 1164 2 1578 2 360 2 1167 18 1581 14 1168 4 758 2 366 2 368 1 1584 2 369 2 1589 2 1591 2 1171 3 1593 2 763 2 1172 2 767 72 770 2 1596 2 1598 2 377 3 376 2 378 48 1176 10 1178 2 382 2 380 32 1181 2 778 24 1606 6 1184 4 384 2 1611 2 1612 14 782 2 387 22 388 2 787 6 788 44 1614 2 1615 46 1617 30 1618 2 393 2 1192 2 795 2 397 2 1197 64 1199 2 801 14 1200 14 802 2 1627 2 1628 8 805 2 1629 2 402 10 808 2 1633 12 1206 14 810 6 812 2 1210 12 406 24 815 2 411 2 1640 4 
0 2 1554 2 1401 2 729 6 393 2 984 2 919 4 629 2 969 2 1627 2 168 2 1202 2 590 2 1333 2 376 2 264 2 576 2 1178 2 1266 2 1482 2 1504 2 1484 2 116 2 1426 2 
0 2 1554 2 1401 2 729 6 393 2 984 2 919 4 629 2 969 2 1627 2 168 2 1202 2 590 2 1333 2 376 2 264 2 576 2 1178 2 1266 2 1482 2 1504 2 1484 2 116 2 1426 2 
0 2 1554 2 1401 2 729 6 393 2 984 2 919 4 629 2 969 2 1627 2 168 2 1202 2 590 2 1333 2 376 2 264 2 576 2 1178 2 1266 2 1482 2 1504 2 1484 2 116 2 1426 2 
783 2 0 2 1554 3 277 6 964 2 790 2 6 2 984 2 1228 3 1619 2 846 4 968 2 191 4 1160 2 711 3 494 2 1540 2 1299 2 1627 2 1234 2 1174 2 1031 2 1033 2 303 2 691 2 267 4 330 2 1037 5 1210 2 23 4 74 4 750 2 668 3 597 2 383 2 1482 10 1093 4 116 3 1426 4 1167 4 
0 2 277 6 964 2 6 2 1228 2 968 2 711 2 1540 2 1234 2 1174 2 69 2 1031 2 1033 2 330 2 1037 4 23 4 74 4 668 2 383 2 522 2 1093 4 783 2 1554 2 790 2 984 2 1619 2 846 4 191 4 1160 2 494 2 1627 2 1299 2 402 2 691 2 303 2 267 4 1210 2 597 2 750 2 1482 10 1426 4 116 2 1167 4 
0 2 277 6 964 2 6 2 1228 2 968 2 711 2 1540 2 1234 2 1174 2 69 2 1031 2 1033 2 330 2 1037 4 23 4 74 4 668 2 383 2 522 2 1093 4 783 2 1554 2 790 2 984 2 1619 2 846 4 191 4 1160 2 494 2 1627 2 1299 2 402 2 691 2 303 2 267 4 1210 2 597 2 750 2 1482 10 1426 4 116 2 1167 4 
0 2 277 6 964 2 6 2 1228 2 968 2 711 2 1540 2 1234 2 1174 2 69 2 1031 2 1033 2 330 2 1037 4 23 4 74 4 668 2 383 2 522 2 1093 4 783 2 1554 2 790 2 984 2 1619 2 846 4 191 4 1160 2 494 2 1627 2 1299 2 402 2 691 2 303 2 267 4 1210 2 597 2 750 2 1482 10 1426 4 116 2 1167 4 
0 2 277 6 964 2 6 2 1228 2 968 2 711 2 1540 2 1234 2 1174 2 69 4 1031 2 1033 2 330 2 1037 4 23 4 74 4 668 2 383 2 522 4 1093 4 783 2 1554 2 790 2 984 2 1619 2 846 4 191 4 1160 2 494 2 1627 2 1299 2 402 4 691 2 303 2 267 4 1210 2 597 2 750 2 1482 10 1426 4 116 2 1167 4 
1239 2 38 2 899 2 1083 2 1032 2 1567 2 
1398 2 289 2 945 2 1032 2 1095 2 1076 2 1036 2 
727 2 318 2 1407 1 1494 1 760 2 1539 2 1411 2 1354 2 1116 2 806 1 473 1 497 2 573 2 1635 2 1420 2 1145 2 643 2 307 2 863 2 578 2 1482 10 670 1 559 2 1426 8 837 2 464 2 
1218 2 1248 2 6 6 91 4 966 2 1021 2 921 2 191 4 1160 6 494 6 1540 2 1299 6 235 2 1234 6 1444 2 402 5 1468 2 1031 6 69 2 1037 16 1210 6 1454 2 1482 6 523 2 522 2 1061 2 361 2 560 4 1426 6 1167 12 
247 2 438 2 1293 6 1511 2 266 2 1224 2 267 2 848 1 296 4 74 2 1170 2 1482 1 144 2 1093 2 737 2 1426 1 363 2 1414 2 
247 2 438 2 1511 2 1293 6 266 2 1224 4 267 2 296 4 74 2 1170 2 144 2 1093 2 737 4 363 2 1414 4 
247 2 438 2 1511 8 1293 10 266 6 1224 8 267 2 848 1 296 4 74 2 1170 2 1482 1 144 2 1093 2 737 8 1426 1 363 2 1414 8 
247 2 438 2 1293 2 1224 2 267 2 296 2 74 2 1170 2 144 2 1093 2 737 2 363 2 1414 2 
1534 2 213 10 1317 8 216 58 1132 2 1227 8 708 7 1319 10 226 6 321 124 1322 24 710 4 10 6 609 10 424 10 1439 4 613 4 124 90 1235 2 17 22 1236 6 128 18 127 10 1029 6 830 2 717 16 1546 14 131 1 616 10 1238 24 430 6 521 2 1147 2 834 8 435 12 621 2 836 12 243 6 1338 4 135 6 1041 248 725 4 1043 8 624 4 439 42 1045 6 1341 2 1342 4 730 6 1343 6 29 16 1156 6 1347 88 256 8 537 28 1560 6 143 2 260 4 445 2 1053 4 146 92 742 11 353 10 1058 58 553 4 1367 18 1163 4 958 36 1482 150 462 6 1165 8 465 84 276 2 1068 2 1581 4 1270 26 1491 24 1169 4 565 4 368 6 871 4 1584 8 51 2 1377 4 1493 17 162 15 654 6 1081 112 658 24 470 14 878 6 1084 7 767 50 880 2 61 6 1279 6 378 4 380 10 1289 8 1290 2 485 6 1609 4 291 2 487 4 787 8 1507 4 1400 6 898 24 584 2 1106 42 682 2 1197 16 904 34 1625 24 194 2 1200 4 102 90 1300 4 1520 4 1206 4 109 2 305 6 1636 26 694 6 1309 6 115 4 1426 134 1530 4 
466 2 1068 2 213 2 819 2 1491 2 216 2 1317 2 1223 4 1132 2 368 4 871 2 1584 2 221 2 1493 2 1227 6 1319 2 875 2 8 2 1379 2 9 2 1081 20 321 6 1323 2 609 2 658 2 761 4 470 2 424 2 613 2 768 2 880 2 1594 2 61 2 1235 2 127 2 62 2 1543 2 925 2 285 2 717 4 1546 2 616 2 1180 2 380 2 430 2 1549 4 1289 2 579 2 521 2 485 2 834 2 433 2 135 2 932 2 1041 44 1043 2 389 2 392 4 730 2 29 4 1346 2 490 2 1347 20 537 38 34 2 1197 4 1625 2 1412 2 194 2 947 2 544 2 197 2 1300 2 1120 2 353 2 1058 2 551 2 859 2 306 2 1638 2 1367 2 1525 2 1005 2 359 2 958 2 1309 2 1482 46 309 2 156 2 1064 6 1426 44 1217 2 
915 4 1534 2 1312 4 1317 2 216 28 1132 2 316 4 918 2 7 32 1227 6 1319 4 226 4 321 24 710 4 1323 2 10 4 1439 4 425 8 1328 4 1235 2 127 4 1029 4 239 2 925 10 717 10 1546 6 616 4 430 4 521 2 836 14 243 4 135 4 1041 104 725 4 138 8 1043 2 624 4 439 16 1045 4 1342 2 730 4 29 10 1156 4 1343 4 1347 36 537 14 34 2 1560 4 260 4 445 2 1053 4 947 10 146 24 353 6 1058 30 859 10 553 4 1367 10 1163 4 958 6 1482 78 462 4 465 24 1068 2 1581 4 1489 4 368 2 1584 2 1272 2 51 2 1493 10 162 8 654 4 1081 44 470 6 878 4 1084 4 767 8 880 2 61 4 62 2 1388 2 380 4 1289 2 485 4 385 2 787 4 1507 4 1400 4 898 8 584 2 792 4 1106 8 1197 10 1624 16 904 30 1297 8 1200 4 400 8 198 2 1206 4 305 4 1639 16 694 4 1309 4 1426 70 703 4 
276 2 1068 2 216 12 1317 2 565 2 1132 2 368 2 1584 2 1493 2 708 2 1227 4 162 6 1319 2 1081 14 321 8 470 2 880 2 61 4 1235 2 17 10 127 2 830 2 378 2 717 6 1546 2 616 2 380 2 430 4 1289 2 521 2 1147 2 485 4 135 4 1041 40 1043 2 787 4 624 2 1342 2 730 4 29 6 1347 14 34 2 537 14 1197 6 143 2 904 6 194 2 1300 2 1120 2 742 2 1058 12 353 2 109 2 553 2 1367 2 958 2 1309 4 1482 28 1426 26 
1453 2 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 
19 1 1196 1 1220 1 625 1 31 1 1532 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
utilMDE.TestUtilMDE:testLimitedSizeIntSet()V PASSED
utilMDE.TestUtilMDE:testOrderedPairIterator()V PASSED
utilMDE.TestUtilMDE:testWeakIdentityHashMap()V PASSED
utilMDE.TestUtilMDE:testSequenceAndIndices()V PASSED
utilMDE.TestUtilMDE:test_create_combinations()V PASSED
utilMDE.TestUtilMDE:test_unqualified_name()V PASSED
utilMDE.TestUtilMDE:testArraysMDE()V PASSED
utilMDE.TestUtilMDE:testInternObject()V PASSED
utilMDE.TestUtilMDE:testTestUtilMDE()V PASSED
utilMDE.TestUtilMDE:testFuzzyFloat()V PASSED
utilMDE.TestUtilMDE:testHasher()V PASSED
utilMDE.TestUtilMDE:testIntern()V PASSED
utilMDE.TestUtilMDE:testMathMDE()V PASSED
utilMDE.TestUtilMDE:testOptions()V PASSED
daikon.test.inv.InvariantTester:testClassVarnameComparator()V PASSED
daikon.test.inv.InvariantTester:test_prob_is_ge()V PASSED
daikon.test.inv.InvariantTester:test_prob_and()V PASSED
daikon.test.inv.InvariantTester:test_prob_or()V PASSED
daikon.test.TestAst:test_Ast_Ppt_Match()V PASSED
daikon.test.TestQuant:test_pairwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqualIndex()V PASSED
daikon.test.TestQuant:test_intersection()V PASSED
daikon.test.TestQuant:test_setEqual()V PASSED
daikon.test.TestQuant:test_subsetOf()V PASSED
daikon.test.TestQuant:test_isReverse()V PASSED
daikon.test.TestQuant:test_memberOf()V PASSED
daikon.test.TestQuant:test_eltsEqual()V PASSED
daikon.test.TestQuant:test_eltsNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseEqual()V PASSED
daikon.test.TestQuant:test_pairwiseLT()V PASSED
daikon.test.TestQuant:test_pairwiseLTE()V PASSED
daikon.test.TestQuant:test_pairwiseGT()V PASSED
daikon.test.TestQuant:test_pairwiseGTE()V PASSED
daikon.test.TestQuant:test_eltwiseEqual()V PASSED
daikon.test.TestQuant:test_eltwiseNotEqual()V PASSED
daikon.test.TestQuant:test_eltwiseLT()V PASSED
daikon.test.TestQuant:test_eltwiseLTE()V PASSED
daikon.test.TestQuant:test_eltwiseGT()V PASSED
daikon.test.TestQuant:test_eltwiseGTE()V PASSED
daikon.test.TestQuant:test_eltsEqualIndex()V PASSED
daikon.test.TestQuant:test_eltsGteIndex()V PASSED
daikon.test.TestQuant:test_eltsGtIndex()V PASSED
daikon.test.TestQuant:test_eltsLteIndex()V PASSED
daikon.test.TestQuant:test_eltsLtIndex()V PASSED
daikon.test.TestQuant:test_lexEqual()V PASSED
daikon.test.TestQuant:test_lexNotEqual()V PASSED
daikon.test.TestQuant:test_pairwiseDivides()V PASSED
daikon.test.TestQuant:test_pairwiseSquare()V PASSED
daikon.test.TestQuant:testCollect_field()V PASSED
daikon.test.TestQuant:test_concat()V PASSED
daikon.test.TestQuant:test_union()V PASSED
daikon.test.TestQuant:test_setDiff()V PASSED
daikon.test.TestQuant:test_noDups()V PASSED
daikon.test.TestQuant:test_slice()V PASSED
daikon.test.TestQuant:test_eltsGT()V PASSED
daikon.test.TestQuant:test_eltsGTE()V PASSED
daikon.test.TestQuant:test_eltsLT()V PASSED
daikon.test.TestQuant:test_eltsLTE()V PASSED
daikon.test.TestQuant:test_lexLT()V PASSED
daikon.test.TestQuant:test_lexLTE()V PASSED
daikon.test.TestQuant:test_lexGT()V PASSED
daikon.test.TestQuant:test_lexGTE()V PASSED
daikon.test.TestQuant:testCollect()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseSubset()V PASSED
daikon.test.TestQuant:test_subsetOf_different_types()V PASSED
daikon.test.TestQuant:test_pairwiseBitwiseComplement()V PASSED
daikon.test.config.ConfigurationTest:testGetInstance()V PASSED
daikon.test.diff.ConsequentCVFPairComparatorTester:testCompare()V PASSED
daikon.test.diff.ConsequentCVFSortComparatorTester:testCompare()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testFreq()V PASSED
daikon.test.diff.DetailedStatisticsVisitorTester:testShouldAddFrequency()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsFalse()V PASSED
daikon.test.diff.DiffTester:testConditionalPptsTrue()V PASSED
daikon.test.diff.DiffTester:testEmptyEmpty()V PASSED
daikon.test.diff.DiffTester:testEmptyPpts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Empty()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts1()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts2()V PASSED
daikon.test.diff.DiffTester:testPpts1Ppts3()V PASSED
daikon.test.diff.DiffTester:testInvs1Empty()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs1()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs2()V PASSED
daikon.test.diff.DiffTester:testInvs1Invs3()V PASSED
daikon.test.diff.DiffTester:testNullaryInvs()V PASSED
daikon.test.diff.DiffTester:testNonModulus()V PASSED
daikon.test.diff.InvMapTester:testABC()V PASSED
daikon.test.diff.InvMapTester:testCAB()V PASSED
daikon.test.diff.MinusVisitorTester:testMinus()V PASSED
daikon.test.diff.PrintDifferingInvariantsVisitorTester:testShouldPrint()V PASSED
daikon.test.diff.UnionVisitorTester:testXor()V PASSED
daikon.test.diff.XorVisitorTester:testXor()V PASSED
daikon.test.InvariantFormatTester:testFormats()V ERROR utilMDE.Assert$AssertionException (466,1025) 395 634 29 
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNon()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNullNull()V PASSED
daikon.test.inv.unary.scalar.OneOfScalarTester:testNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNonNonNon()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNonNullNonNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testNullNullNullNull()V PASSED
daikon.test.inv.unary.sequence.OneOfSequenceTester:testDifferentLengths()V PASSED
daikon.test.LinearTernaryCoreTest:test_set_tri_linear()V PASSED
daikon.test.LinearTernaryCoreTest:test_format()V PASSED
daikon.test.ModBitTrackerTest:testModBitTracker()V PASSED
daikon.test.ProglangTypeTest:test_parse_value()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_parts()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_1Darray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_nDarray_whole()V PASSED
daikon.test.VarComparabilityTest:test_VarComparabilityImplicit_scalar()V PASSED
daikon.test.VarInfoNameTest:testParse()V ERROR java.lang.NullPointerException 889 183 748 
daikon.test.VarInfoNameTest:testJML()V ERROR java.lang.NullPointerException 889 183 748 
daikon.test.VarInfoNameTest:testEscForall()V ERROR java.lang.NullPointerException 889 183 748 
daikon.test.VarInfoNameTest:testSubscript()V ERROR java.lang.NullPointerException 889 183 748 
daikon.test.TestAnnotate:testGetTabbedIndex()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_0()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_1()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_2()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_StreetNumberSet_3()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_4()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_checkRep_5()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_6()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_7()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_8()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_9()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_10()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_11()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_12()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_contains_13()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_14()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_orderStatistic_15()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_16()V PASSED
daikon.test.split.SplitterFactoryTest:testMapQuick1_StreetNumberSet_size_17()V PASSED
daikon.test.split.SplitterFactoryTest:testmisc_Fib_main_18()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_19()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isEmpty_20()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_21()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_isFull_22()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_23()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_getFront_24()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_25()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_26()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_27()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_dequeue_28()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_29()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_30()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_31()V PASSED
daikon.test.split.SplitterFactoryTest:testDataStructures_QueueAr_enqueue_32()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__33()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__34()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__35()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__36()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__37()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__38()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bdiv__39()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__40()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__41()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__42()V PASSED
daikon.test.split.SplitterFactoryTest:testMath__BigFloat_bmul__43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
utilMDE.ArraysMDE.LongArrayComparatorLengthFirst:compare([J[J)I
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
jtb.syntaxtree.ConditionalOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:pow_fast(II)I
utilMDE.ArraysMDE:isSubarray([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaParser:jj_3R_85()Z
utilMDE.UtilMDE:unescapeNonJava(Ljava.lang.String;)Ljava.lang.String;
daikon.VarInfoName:name()Ljava.lang.String;
daikon.inv.unary.scalar.NonModulus:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa3_0(JJJJ)I
jtb.syntaxtree.Statement:Statement(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.ArraysMDE:min([I)I
jtb.syntaxtree.NodeSequence:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:JavaParser(Ljava.io.Reader;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryPrefix;)V
jtb.syntaxtree.ClassOrInterfaceType:ClassOrInterfaceType(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.OrderedPairIterator:returnboth()LutilMDE.Pair;
jtb.syntaxtree.Expression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.JavaParser:jj_3_22()Z
daikon.test.ProglangTypeTest:longarrcomp(Ljava.lang.Object;[J)Z
jtb.JavaParser:jj_3R_56()Z
jtb.JavaParser:AndExpression()Ljtb.syntaxtree.AndExpression;
utilMDE.WeakHasherMap:processQueue()V
utilMDE.Intern.IntegerHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.EqualityExpression:accept(Ljtb.visitor.Visitor;)V
daikon.ValueTuple:tuplemodHasModified(I)Z
jtb.syntaxtree.VariableDeclaratorId:setParent(Ljtb.syntaxtree.Node;)V
jtb.Token:newToken(I)Ljtb.Token;
daikon.test.InvariantFormatTester:execute()Z
jtb.syntaxtree.CompilationUnit:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.ClassOrInterfaceType:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.Block:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:NumericInt(Ldaikon.PptSlice;Z)V
jtb.JavaCharStream:backup(I)V
daikon.inv.binary.twoScalar.IntNonEqual:enabled()Z
jtb.JavaParser:jj_3R_163()Z
jtb.syntaxtree.ImportDeclaration:accept(Ljtb.visitor.Visitor;)V
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)LutilMDE.WeakHasherMap.WeakKey;
jtb.JavaParser:jj_3R_121()Z
jtb.JavaParser:jj_3R_67()Z
daikon.ProglangType:isPseudoArray()Z
daikon.VarComparabilityImplicit:comparable(Ldaikon.VarComparabilityImplicit;Ldaikon.VarComparabilityImplicit;)Z
utilMDE.ArraysMDE.IntArrayComparatorLexical:compare([I[I)I
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_format_str(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.JavaParser:PostfixExpression()Ljtb.syntaxtree.PostfixExpression;
jtb.JavaParser:jj_3_12()Z
utilMDE.WeakIdentityHashMap:maskNull(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.LongHasher:hashCode(Ljava.lang.Object;)I
daikon.VarInfoName:equals(Ljava.lang.Object;)Z
jtb.JavaParser:ClassOrInterfaceBody(Z)Ljtb.syntaxtree.ClassOrInterfaceBody;
utilMDE.FuzzyFloat:ne(DD)Z
jtb.JavaParserTokenManager:MoreLexicalActions()V
utilMDE.UtilMDE:unqualified_name(Ljava.lang.String;)Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.AndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.test.ProglangTypeTest:comparrcomp(Ljava.lang.Object;[Ljava.lang.Object;)Z
jtb.syntaxtree.FormalParameters:FormalParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3_27()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;II)V
jtb.JavaParserTokenManager:jjMoveNfa_1(II)I
daikon.test.diff.DiffDummyInvariant:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;Ldaikon.VarInfoAux;)V
jtb.JavaParser:jj_3R_110()Z
daikon.inv.unary.scalar.LowerBound:isInteresting()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_3R_106()Z
jtb.JavaParser:jj_3R_136()Z
jtb.syntaxtree.NullLiteral:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.VariableDeclaratorId:VariableDeclaratorId(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;DZZ)V
utilMDE.FuzzyFloat:gte(DD)Z
daikon.inv.unary.scalar.LowerBound:computeConfidence()D
jtb.JavaParser:jj_3_4()Z
jtb.syntaxtree.Literal:accept(Ljtb.visitor.Visitor;)V
daikon.VarComparabilityImplicit:alwaysComparable()Z
utilMDE.ArraysMDE:sum([I)I
jtb.JavaParser:InstanceOfExpression()Ljtb.syntaxtree.InstanceOfExpression;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameters;)V
daikon.PptSlice2:PptSlice2(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
utilMDE.WeakHasherMap.EntrySet:iterator()Ljava.util.Iterator;
jtb.JavaParser:TypeParameters()Ljtb.syntaxtree.TypeParameters;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AndExpression;)V
daikon.Quant:pairwiseLT([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.ConditionalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:calc_tri_linear([Ldaikon.inv.ternary.threeScalar.LinearTernaryCore.Point;)[D
jtb.syntaxtree.NodeOptional:present()Z
jtb.syntaxtree.ImportDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:eq(FF)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;DDD)Ljava.lang.String;
utilMDE.MathMDE:nonmodulus_strict_int_internal(Ljava.util.Iterator;)[I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:ClassOrInterfaceBodyDeclaration(Ljtb.syntaxtree.NodeChoice;)V
daikon.test.FormatTestCase:createSlice([Ldaikon.VarInfo;Ldaikon.PptTopLevel;)Ldaikon.PptSlice;
utilMDE.MathMDE.MissingNumbersIteratorInt:next()Ljava.lang.Integer;
jtb.syntaxtree.NodeToken:trimSpecials()V
utilMDE.Intern:internedLong(J)Ljava.lang.Long;
daikon.VarComparability:parse(ILjava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparability;
jtb.JavaParser:jj_3R_114()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;)V
utilMDE.Intern:numIntArrays()I
daikon.Quant:lte(II)Z
jtb.syntaxtree.AdditiveExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.ConditionalExpression:accept(Ljtb.visitor.Visitor;)V
daikon.test.ModBitTrackerTest:makeBitSets(IID)[Ljava.util.BitSet;
jtb.syntaxtree.MethodDeclaration:MethodDeclaration(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ResultType;Ljtb.syntaxtree.MethodDeclarator;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeChoice;)V
daikon.test.ModBitTrackerTest:checkModBitTracker(Ldaikon.ModBitTracker;[Ljava.util.BitSet;)V
daikon.Quant:eltwiseLT([I)Z
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;)V
jtb.syntaxtree.Name:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_68()Z
jtb.JavaParser:jj_3_35()Z
jtb.syntaxtree.BlockStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:pairwiseLTE([I[I)Z
utilMDE.Intern.StringArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:elementType()Ldaikon.VarComparability;
daikon.inv.filter.ObviousFilter:ObviousFilter()V
daikon.test.FormatTestCase:getArity(Ljava.lang.Class;)I
daikon.Quant:gte(II)Z
daikon.tools.jtb.Ast:quickFixForInternalComment(Ljava.lang.String;)Ljava.lang.String;
daikon.ModBitTracker:add(Ldaikon.ValueTuple;I)V
daikon.inv.unary.sequence.OneOfSequence:enabled()Z
jtb.JavaParser:jj_3_21()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ImportDeclaration;)V
jtb.syntaxtree.Modifiers:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.UtilMDE:removeWhitespaceBefore(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.unary.sequence.SingleScalarSequence:valid_types([Ldaikon.VarInfo;)Z
jtb.syntaxtree.PrimaryPrefix:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.InvariantFilter:InvariantFilter(Z)V
utilMDE.LimitedSizeIntSet:size()I
jtb.syntaxtree.ReferenceType:setParent(Ljtb.syntaxtree.Node;)V
daikon.tools.jtb.SimpleTreeDumper:SimpleTreeDumper(Ljava.io.Writer;)V
jtb.visitor.TreeFormatter:placeToken(Ljtb.syntaxtree.NodeToken;II)V
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa4_0(JJJJ)I
jtb.syntaxtree.Type:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.TwoScalar:var2()Ldaikon.VarInfo;
daikon.ProglangType:parse_value(Ljava.lang.String;)Ljava.lang.Object;
daikon.diff.Diff:convertToInvMap(Ldaikon.PptMap;)Ldaikon.diff.InvMap;
utilMDE.UtilMDE:split(Ljava.lang.String;Ljava.lang.String;)[Ljava.lang.String;
daikon.tools.jtb.Ast:getName(Ljtb.syntaxtree.MethodDeclaration;)Ljava.lang.String;
utilMDE.Fmt:i(I)Ljava.lang.Integer;
jtb.syntaxtree.Name:Name(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.NonZero:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NullLiteral;)V
jtb.JavaParser:jj_3_3()Z
utilMDE.ArraysMDE:noDuplicates([I)Z
daikon.diff.PrintAllVisitor:bufPrintln()V
jtb.syntaxtree.TypeParameters:accept(Ljtb.visitor.Visitor;)V
daikon.Quant:memberOf(J[J)Z
daikon.inv.unary.sequence.SingleSequence:SingleSequence(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast.1GetParametersVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
daikon.diff.UnionVisitor:getResult()Ldaikon.diff.InvMap;
daikon.diff.ConsequentSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.ReturnStatement:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:subsetOf([D[F)Z
daikon.inv.Invariant:logOn()Z
daikon.inv.OutputFormat:isJavaFamily()Z
daikon.diff.Diff:setInvPairComparator(Ljava.util.Comparator;)V
jtb.JavaCharStream:UpdateLineColumn(C)V
daikon.inv.binary.twoScalar.IntGreaterEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterEqual;
daikon.diff.PrintAllVisitor:printConfidence(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:nonmodulus_strict([I)[I
jtb.syntaxtree.ClassOrInterfaceDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.Literal:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjStopAtPos(II)I
jtb.JavaParser:jj_3R_125()Z
daikon.PptSlice2:arity()I
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljtb.syntaxtree.Node;)Z
utilMDE.WeakHasherMap.Entry:Entry(LutilMDE.WeakHasherMap;Ljava.util.Map.Entry;Ljava.lang.Object;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:EqualZero(Ldaikon.PptSlice;)V
daikon.VarInfoName.PostPreConverter:PostPreConverter()V
daikon.VarInfo:new_ppt()V
daikon.Quant:eltwiseEqual([I)Z
daikon.Quant:concat([I[I)[I
utilMDE.ArraysMDE.IntArrayComparatorLengthFirst:compare([I[I)I
daikon.PptTopLevel:PptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)V
utilMDE.TestUtilMDE.1TestModulus:check_iterator([I[I)V
daikon.inv.unary.scalar.NonModulus:enabled()Z
jtb.syntaxtree.AndExpression:AndExpression(Ljtb.syntaxtree.EqualityExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;)Ldaikon.diff.RootNode;
jtb.JavaParser:ResultType()Ljtb.syntaxtree.ResultType;
utilMDE.Intern.ObjectArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.VarInfoNameDriver:run(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.syntaxtree.NodeListOptional:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.Statement:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE:modulus_int(Ljava.util.Iterator;)[I
jtb.JavaParser:ConditionalExpression()Ljtb.syntaxtree.ConditionalExpression;
daikon.inv.Invariant:isWorthPrinting()Z
jtb.JavaParser:jj_3R_116()Z
jtb.JavaParser:jj_3R_164()Z
jtb.JavaParser:TypeArguments()Ljtb.syntaxtree.TypeArguments;
daikon.VarComparability:comparable(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.JavaParser:jj_3R_105()Z
daikon.inv.ValueSet:ValueSet(I)V
daikon.Quant:collectint(Ljava.lang.Object;Ljava.lang.String;)[I
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;Ljava.lang.String;)Z
utilMDE.Intern.SequenceAndIndicesHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eltsEqualIndex([I)Z
daikon.inv.binary.twoScalar.IntLessThan:get_proto()Ldaikon.inv.binary.twoScalar.IntLessThan;
utilMDE.ArraysMDE.LongArrayComparatorLexical:compare([J[J)I
daikon.inv.unary.scalar.OneOfScalar:is_hashcode()Z
jtb.JavaParser:ReferenceType()Ljtb.syntaxtree.ReferenceType;
daikon.inv.unary.scalar.OneOfScalar:get_proto()Ldaikon.inv.Invariant;
daikon.Quant:lexGTE([I[I)Z
jtb.JavaParser:Name()Ljtb.syntaxtree.Name;
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;Z)Z
utilMDE.OrderedPairIterator:setnext1()V
daikon.Quant:pairwiseGTE([I[I)Z
daikon.test.FormatTestCase:getVarInfo(Ldaikon.ProglangType;I)Ldaikon.VarInfo;
jtb.JavaParser:jj_ntk()I
daikon.inv.unary.sequence.SingleScalarSequence:var()Ldaikon.VarInfo;
utilMDE.Options:set_arg(LutilMDE.Options.OptionInfo;Ljava.lang.String;Ljava.lang.String;)V
daikon.Quant:eltsLTE([II)Z
jtb.JavaParserTokenManager:jjStartNfaWithStates_0(III)I
daikon.inv.binary.twoScalar.IntEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntEqual;
daikon.Quant:pairwiseEqual([I[I)Z
daikon.ProglangType:ProglangType(Ljava.lang.String;I)V
jtb.syntaxtree.EqualityExpression:EqualityExpression(Ljtb.syntaxtree.InstanceOfExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.Invariant.ClassVarnameComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Type;)V
daikon.test.TestQuant:removeAdjacentDups([I)[I
utilMDE.WeakIdentityHashMap.Entry:Entry(Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.ref.ReferenceQueue;ILutilMDE.WeakIdentityHashMap.Entry;)V
jtb.JavaParser:PrimaryPrefix()Ljtb.syntaxtree.PrimaryPrefix;
daikon.test.ModBitTrackerTest:randomModBoolean(II)Z
utilMDE.UtilMDE:create_combinations(III)Ljava.util.ArrayList;
daikon.diff.UnionVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.unary.scalar.LowerBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.SimpleTreeDumper:printToken(Ljava.lang.String;)V
jtb.JavaParser:jj_3R_149()Z
daikon.Debug:logDetail()Z
utilMDE.MathMDE:gcd(JJ)J
jtb.JavaParser:jj_3R_81()Z
utilMDE.OrderedPairIterator:hasNext()Z
daikon.PptSlice0:initInvariantsSeen()V
daikon.inv.binary.twoScalar.TwoScalar:var1()Ldaikon.VarInfo;
utilMDE.Intern.SequenceAndIndicesHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.Quant:ne(II)Z
daikon.Quant:noDups([I)Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.InvNode;)V
daikon.inv.binary.twoScalar.IntGreaterThan:enabled()Z
daikon.PptTopLevel:getInvariants()Ljava.util.List;
daikon.Quant:collectString(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.String;
jtb.JavaParser:jj_3_25()Z
utilMDE.MathMDE:missing_numbers([I)[I
daikon.inv.unary.scalar.UpperBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.TestUtilMDE:int_iterator_array(Ljava.util.Iterator;)[I
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.Type;)V
utilMDE.ArraysMDE:noDuplicates([J)Z
jtb.syntaxtree.MethodDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.NodeSequence:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_2_15(I)Z
daikon.inv.binary.twoScalar.IntLessThan:enabled()Z
daikon.diff.Node:Node(LutilMDE.Pair;)V
daikon.tools.jtb.PptNameMatcher:typeMatch(Ljava.lang.String;Ljtb.syntaxtree.FormalParameter;)Z
daikon.diff.InvNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.unary.scalar.SingleScalar:var()Ldaikon.VarInfo;
daikon.inv.binary.twoScalar.LinearBinary:LinearBinary(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_210()Z
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;)V
jtb.JavaParser:jj_3R_50()Z
jtb.JavaParser:jj_3R_86()Z
daikon.inv.unary.scalar.NonModulus:get_proto()Ldaikon.inv.Invariant;
daikon.diff.PrintAllVisitor:PrintAllVisitor(Ljava.io.PrintStream;ZZ)V
daikon.Quant:collectObject(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.Object;
jtb.JavaParser:jj_3_28()Z
jtb.JavaParser:MultiplicativeExpression()Ljtb.syntaxtree.MultiplicativeExpression;
daikon.inv.binary.twoScalar.IntLessThan:IntLessThan(Ldaikon.PptSlice;)V
utilMDE.MathMDE:modulus_strict_int(Ljava.util.Iterator;Z)[I
utilMDE.WeakIdentityHashMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.Intern.StringArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ReturnStatement:accept(Ljtb.visitor.Visitor;)V
daikon.Ppt.NameComparator:compare(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)I
utilMDE.MathMDE:gcd_differences([I)I
jtb.syntaxtree.ExclusiveOrExpression:ExclusiveOrExpression(Ljtb.syntaxtree.AndExpression;Ljtb.syntaxtree.NodeListOptional;)V
utilMDE.WeakHasherMap.WeakKey:WeakKey(LutilMDE.WeakHasherMap;Ljava.lang.Object;)V
jtb.JavaParser:jj_3R_135()Z
jtb.JavaParser:jj_3R_61()Z
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;II)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Modifiers;)V
daikon.Quant:eltsEqual([II)Z
daikon.Quant:lexLT([I[I)Z
jtb.JavaParser:PackageDeclaration()Ljtb.syntaxtree.PackageDeclaration;
daikon.Quant:eltsNotEqual([II)Z
jtb.syntaxtree.TypeBound:TypeBound(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.ClassOrInterfaceType;Ljtb.syntaxtree.NodeListOptional;)V
daikon.Quant:memberOf(S[S)Z
daikon.Quant:subsetOf([I[I)Z
jtb.syntaxtree.NodeOptional:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:isIntegralType(Ljava.lang.Class;)Z
utilMDE.ArraysMDE:toString([I)Ljava.lang.String;
daikon.diff.MinusVisitor:visit(Ldaikon.diff.InvNode;)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:getNextToken()Ljtb.Token;
jtb.JavaParser:jj_3_30()Z
jtb.syntaxtree.NodeListOptional:elements()Ljava.util.Enumeration;
daikon.PptName:toString()Ljava.lang.String;
jtb.syntaxtree.MethodDeclarator:MethodDeclarator(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.FormalParameters;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.UnaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptTopLevel.CondIterator:next()Ldaikon.PptConditional;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:augmentShadowingMap(Ljtb.syntaxtree.TypeParameter;)V
utilMDE.Intern:internSubsequence([JII)[J
daikon.inv.unary.LowerBoundCore:prob_or(DD)D
daikon.ValueTuple:tuplemodHasMissingNonsensical(I)Z
jtb.JavaParser:jj_3_17()Z
daikon.inv.unary.scalar.OneOfScalar:enabled()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.VarInfoName.Simple:name_impl()Ljava.lang.String;
daikon.tools.jtb.SimpleTreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_3R_70()Z
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;ZZZ)V
daikon.inv.binary.twoScalar.IntNonEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntNonEqual;
utilMDE.Intern:intern([D)[D
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;Ljava.lang.String;)V
utilMDE.Intern:intern([J)[J
daikon.PptTopLevel.CondIterator:hasNext()Z
daikon.test.diff.DiffDummyInvariant:isInteresting()Z
daikon.inv.Implication:makeImplication(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)Ldaikon.inv.Implication;
jtb.JavaParser:PrimaryExpression()Ljtb.syntaxtree.PrimaryExpression;
daikon.inv.unary.scalar.RangeInt.Bound0_63:get_proto()Ldaikon.inv.Invariant;
daikon.diff.Node:getUserRight()Ljava.lang.Object;
daikon.Quant:subsetOf([D[D)Z
utilMDE.WeakHasherMap:size()I
jtb.syntaxtree.CompilationUnit:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:VariableDeclaratorId()Ljtb.syntaxtree.VariableDeclaratorId;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameter;)V
utilMDE.Assert.AssertionException:AssertionException(Ljava.lang.String;)V
daikon.PptName:isCombinedExitPoint()Z
daikon.tools.jtb.Ast:getType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.JavaCharStream:ReadByte()C
utilMDE.Intern.LongHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.ReferenceType:ReferenceType(Ljtb.syntaxtree.NodeChoice;)V
daikon.VarInfoName:repr()Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:get_proto()Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalExpression;)V
utilMDE.OrderedPairIterator:return2()LutilMDE.Pair;
jtb.syntaxtree.Statement:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;[Ljava.lang.Object;)I
utilMDE.Intern.IntArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.filter.InvariantFilters:shouldKeepPropFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
utilMDE.ArraysMDE.DoubleArrayComparatorLexical:compare([D[D)I
daikon.PptTopLevel.ViewsIteratorIterator:hasNext()Z
jtb.JavaParser:jj_3R_55()Z
jtb.syntaxtree.MethodDeclarator:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeToken;)V
daikon.VarInfo:name_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
utilMDE.ArraysMDE:fn_is_permutation([I)Z
utilMDE.MathMDE:check_first_and_last_nonmodulus([ILutilMDE.UtilMDE.RemoveFirstAndLastIterator;)Z
daikon.inv.ValueSet.ValueSetScalar:ValueSetScalar(I)V
daikon.VarInfo:name()Ljava.lang.String;
daikon.inv.filter.UnjustifiedFilter:UnjustifiedFilter()V
daikon.inv.unary.scalar.NonModulus:NonModulus(Ldaikon.PptSlice;)V
daikon.Quant:pairwiseGT([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalAndExpression;)V
daikon.Quant:subsetOf([B[I)Z
jtb.JavaParser:JavaParser(Ljava.io.InputStream;)V
daikon.tools.jtb.Ast:format(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_modified([JI)Ldaikon.inv.InvariantStatus;
utilMDE.WeakHasherMap:keyHashCode(Ljava.lang.Object;)I
jtb.syntaxtree.ConditionalAndExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.sequence.OneOfSequence:is_hashcode()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLexical:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.tools.jtb.Ast:getParent(Ljava.lang.Class;Ljtb.syntaxtree.Node;)Ljtb.syntaxtree.Node;
daikon.ProglangType:myParseLong(Ljava.lang.String;)J
utilMDE.LimitedSizeIntSet:add(I)V
daikon.test.diff.DiffDummyInvariant:repr()Ljava.lang.String;
utilMDE.MathMDE:gcd(II)I
daikon.Quant:collectString(Ljava.lang.Object;Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:ClassOrInterfaceBodyDeclaration(Z)Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;
jtb.JavaParser:jj_3R_73()Z
jtb.syntaxtree.MethodDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_76()Z
jtb.JavaParser:jj_2_21(I)Z
jtb.syntaxtree.InstanceOfExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.RootNode;)V
daikon.diff.Diff:diffPptTopLevel(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.PptNode;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa6_0(JJJJ)I
daikon.inv.unary.UpperBoundCore:UpperBoundCore(Ldaikon.inv.Invariant;)V
daikon.test.TestAst.MethodDeclarationHarvester:visit(Ljtb.syntaxtree.MethodDeclaration;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:next()Ljava.lang.Object;
utilMDE.ArraysMDE:min_max([I)[I
daikon.test.diff.DiffTester:newPptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
daikon.inv.unary.scalar.NonZero:NonZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_134()Z
jtb.JavaParser:jj_2_12(I)Z
jtb.JavaParser:jj_3R_102()Z
jtb.syntaxtree.NodeListOptional:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeSequence:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.AndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.IntEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.LowerBoundCore:prob_is_ge(DD)D
utilMDE.WeakIdentityHashMap:WeakIdentityHashMap()V
daikon.test.LinearTernaryCoreTest:set_cache(Ldaikon.inv.ternary.threeScalar.LinearTernaryCore;IJJJ)V
daikon.VarInfoName.Replacer:Replacer(Ldaikon.VarInfoName;Ldaikon.VarInfoName;)V
daikon.test.FormatTestCase:instantiate(Ljava.io.LineNumberReader;Z)Ldaikon.test.FormatTestCase; | ASSIGN | 14799 | = null
daikon.inv.unary.scalar.LowerBound:enabled()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MultiplicativeExpression;)V
daikon.tools.jtb.PptNameMatcher:matches(Ldaikon.PptName;Ljava.lang.String;Ljava.lang.String;Ljava.util.List;)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.UnaryExpression;)V
daikon.ModBitTracker:split(I)I
daikon.Quant:subsetOf([F[D)Z
jtb.syntaxtree.ClassOrInterfaceType:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.Expression:Expression(Ljtb.syntaxtree.ConditionalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.inv.unary.scalar.LowerBound:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.UpperBoundCore:computeConfidence()D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.Quant:pairwiseBitwiseSubset([I[I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PackageDeclaration;)V
daikon.inv.unary.scalar.OneOfScalar:add_modified(JI)Ldaikon.inv.InvariantStatus;
daikon.test.diff.DiffDummyInvariant:computeConfidence()D
jtb.syntaxtree.FormalParameters:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:fn_inverse([II)[I
jtb.JavaCharStream:getEndColumn()I
jtb.JavaParser:jj_3R_51()Z
daikon.Quant:intersection([I[I)[I
daikon.inv.unary.sequence.SingleScalarSequence:SingleScalarSequence(Ldaikon.PptSlice;)V
utilMDE.Intern:intern([Ljava.lang.String;)[Ljava.lang.String;
daikon.inv.unary.scalar.OneOfScalar:OneOfScalar(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_2_25(I)Z
daikon.ModBitTracker:num_samples()I
daikon.diff.InvMap:InvMap()V
jtb.JavaParser:MethodDeclarator()Ljtb.syntaxtree.MethodDeclarator;
utilMDE.UtilMDE:lineNumberFileReader(Ljava.io.File;)Ljava.io.LineNumberReader;
daikon.inv.unary.scalar.NonZero:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.filter.OnlyConstantVariablesFilter:OnlyConstantVariablesFilter()V
daikon.test.diff.DiffDummyInvariant:isWorthPrinting()Z
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;Ljava.lang.Object;)I
jtb.syntaxtree.UnaryExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.NodeListOptional:NodeListOptional()V
jtb.JavaCharStream:getEndLine()I
utilMDE.ArraysMDE:isSubarrayEq([Ljava.lang.Object;[Ljava.lang.Object;I)Z
jtb.JavaCharStream:getBeginColumn()I
utilMDE.Intern.IntArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Block;)V
jtb.syntaxtree.NodeSequence:NodeSequence(I)V
utilMDE.WeakIdentityHashMap:hasher(Ljava.lang.Object;)I
utilMDE.UtilMDE.RemoveFirstAndLastIterator:RemoveFirstAndLastIterator(Ljava.util.Iterator;)V
jtb.syntaxtree.NodeToken:NodeToken(Ljava.lang.String;IIIII)V
jtb.JavaParser:FormalParameters()Ljtb.syntaxtree.FormalParameters;
utilMDE.ArraysMDE:element_range([I)I
jtb.JavaParser:jj_3R_161()Z
jtb.syntaxtree.ResultType:ResultType(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.Node:Node()V
utilMDE.Intern:intern(Ljava.lang.Long;)Ljava.lang.Long;
utilMDE.LimitedSizeIntSet:LimitedSizeIntSet(I)V
utilMDE.TestUtilMDE:assert_arrays_equals([D[D)V
jtb.JavaParser:ReturnStatement()Ljtb.syntaxtree.ReturnStatement;
jtb.JavaParser:jj_3R_75()Z
jtb.syntaxtree.EqualityExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.config.Configuration:apply(Ljava.lang.Class;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:format()Ljava.lang.String;
jtb.syntaxtree.ResultType:accept(Ljtb.visitor.Visitor;)V
daikon.inv.Invariant.ClassVarnameComparator:compareImplications(Ldaikon.inv.Implication;Ldaikon.inv.Implication;)I
jtb.syntaxtree.InstanceOfExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_18()Z
daikon.inv.unary.sequence.OneOfSequence:check_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.ResultType:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:fixMultipleRightBrackets(Ljtb.Token;)V
daikon.ProglangType:parse(Ljava.lang.String;)Ldaikon.ProglangType;
jtb.JavaParser:jj_2_16(I)Z
jtb.JavaParser:ExclusiveOrExpression()Ljtb.syntaxtree.ExclusiveOrExpression;
daikon.inv.unary.LowerBoundCore:isSameFormula(Ldaikon.inv.unary.LowerBoundCore;)Z
daikon.PptSlice0.ImplicationWrapper:ImplicationWrapper(Ldaikon.inv.Implication;)V
daikon.diff.InvMap:addPpt(Ldaikon.PptTopLevel;)V
daikon.diff.PrintAllVisitor:bufPrint(Ljava.lang.String;)V
utilMDE.Assert:assertTrue(Z)V
daikon.inv.binary.twoScalar.IntGreaterThan:IntGreaterThan(Ldaikon.PptSlice;)V
daikon.Quant:union([I[I)[I
daikon.PptSlice1:arity()I
daikon.PptSlice1:addInvariant(Ldaikon.inv.Invariant;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.MinusVisitor:getResult()Ldaikon.diff.InvMap;
daikon.PptTopLevel:name()Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.Reader;III)V
utilMDE.Pair:Pair(Ljava.lang.Object;Ljava.lang.Object;)V
jtb.JavaParser:TypeBound()Ljtb.syntaxtree.TypeBound;
utilMDE.Intern.LongArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.test.TestQuant.Foo2:set_xstatic(Ljava.lang.Object;)V
daikon.Quant:eltsGtIndex([I)Z
jtb.visitor.TreeFormatter:add(Ljtb.visitor.FormatCommand;)V
jtb.JavaParser:jj_3R_119()Z
jtb.visitor.TreeFormatter:space()Ljtb.visitor.FormatCommand;
utilMDE.ArraysMDE:isSubarray([I[II)Z
daikon.ProglangType:isScalar()Z
daikon.Quant:memberOf(I[I)Z
daikon.inv.binary.twoScalar.LinearBinaryCore:LinearBinaryCore(Ldaikon.inv.Invariant;)V
jtb.JavaParserTokenManager:JavaParserTokenManager(Ljtb.JavaCharStream;)V
jtb.visitor.TreeDumper:TreeDumper(Ljava.io.Writer;)V
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
utilMDE.MathMDE:modulus([I)[I
jtb.syntaxtree.ImportDeclaration:ImportDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ModBitTracker:get(I)Ljava.util.BitSet;
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.tools.jtb.PptNameMatcher:extractPptArgs(Ldaikon.PptName;)Ljava.util.List;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;Z)V
daikon.diff.UnionVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.Intern:internSubsequence([III)[I
jtb.JavaParser:jj_3_19()Z
daikon.inv.binary.twoScalar.IntEqual:enabled()Z
daikon.inv.Implication:predicate()Ldaikon.inv.Invariant;
daikon.Quant:eltwiseGT([I)Z
jtb.JavaParser:TypeDeclaration()Ljtb.syntaxtree.TypeDeclaration;
daikon.diff.InvMap:add(Ldaikon.PptTopLevel;Ldaikon.inv.Invariant;)V
daikon.Quant:pairwiseNotEqual([I[I)Z
jtb.JavaParser:ClassOrInterfaceDeclaration(I)Ljtb.syntaxtree.ClassOrInterfaceDeclaration;
jtb.visitor.TreeDumper:visit(Ljtb.syntaxtree.NodeToken;)V
jtb.syntaxtree.NodeSequence:addNode(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.LowerBoundCore:computeProbability()D
jtb.visitor.TreeFormatter:TreeFormatter()V
jtb.syntaxtree.TypeParameters:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.PrimaryExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.VarInfoName:equals(Ldaikon.VarInfoName;)Z
utilMDE.WeakHasherMap:put(Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.Type:Type(Ljtb.syntaxtree.NodeChoice;)V
daikon.PptTopLevel:viewsAsCollection()Ljava.util.Collection;
daikon.inv.filter.InvariantFilters:InvariantFilters()V
utilMDE.WeakIdentityHashMap:expungeStaleEntries()V
jtb.JavaParser:jj_3R_89()Z
utilMDE.Intern:intern([Ljava.lang.Object;)[Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntGreaterThan:get_proto()Ldaikon.inv.binary.twoScalar.IntGreaterThan;
utilMDE.UtilMDE.RemoveFirstAndLastIterator:hasNext()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.unary.LowerBoundCore:calc_range()J
jtb.syntaxtree.TypeParameter:TypeParameter(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;)V
daikon.test.LinearTernaryCoreTest:one_test_set_tri_linear([[IJJJJ)V
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt([IZ)V
jtb.syntaxtree.Literal:Literal(Ljtb.syntaxtree.NodeChoice;)V
utilMDE.Intern.LongArrayHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_0()I
daikon.test.diff.DiffDummyInvariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.visitor.FormatCommand:getCommand()I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ShiftExpression;)V
daikon.Quant:memberOf(F[D)Z
jtb.JavaParser:jj_3R_100()Z
daikon.Quant:pairwiseBitwiseComplement([I[I)Z
jtb.JavaParser:jj_3R_124()Z
jtb.JavaParser:jj_2_3(I)Z
utilMDE.Intern:internedInteger(Ljava.lang.String;)Ljava.lang.Integer;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclarator;)V
daikon.inv.filter.InvariantFilters:defaultFilters()Ldaikon.inv.filter.InvariantFilters;
utilMDE.OrderedPairIterator:next()LutilMDE.Pair;
daikon.inv.unary.UpperBoundCore:computeProbability()D
daikon.Quant:lexNotEqual([I[I)Z
daikon.Quant:subsetOf([S[S)Z
jtb.syntaxtree.PrimaryExpression:PrimaryExpression(Ljtb.syntaxtree.PrimaryPrefix;Ljtb.syntaxtree.NodeListOptional;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:ClassOrInterfaceDeclaration(Ljtb.syntaxtree.NodeChoice;Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.ClassOrInterfaceBody;)V
daikon.test.VarInfoNameDriver.JMLName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ClassOrInterfaceType;)V
jtb.JavaParser:jj_3R_60()Z
jtb.JavaParser:jj_3_36()Z
daikon.diff.RootNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.Implication:consequent()Ldaikon.inv.Invariant;
daikon.Debug:log(Ljava.lang.Class;Ldaikon.Ppt;[Ldaikon.VarInfo;Ljava.lang.String;)Z
utilMDE.Fmt:spf(Ljava.lang.String;[Ljava.lang.Object;)Ljava.lang.String;
daikon.PptSlice0:PptSlice0(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant:isSameInvariant(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_3R_122()Z
daikon.inv.binary.twoScalar.IntEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.UpperBound:UpperBound(Ldaikon.PptSlice;)V
daikon.inv.unary.LowerBoundCore:LowerBoundCore(Ldaikon.inv.Invariant;)V
utilMDE.MathMDE:mod_positive(II)I
daikon.tools.jtb.Ast:create(Ljava.lang.String;Ljava.lang.String;)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeOptional:addNode(Ljtb.syntaxtree.Node;)V
utilMDE.MathMDE.MissingNumbersIteratorInt:hasNext()Z
daikon.PptSlice0:hasImplication(Ldaikon.inv.Implication;)Z
daikon.Quant:lexEqual([I[I)Z
jtb.JavaParserTokenManager:TokenLexicalActions(Ljtb.Token;)V
daikon.Quant:collectObject_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.Object;
daikon.ProglangType:find(Ljava.lang.String;I)Ldaikon.ProglangType;
jtb.syntaxtree.ClassOrInterfaceBody:getParent()Ljtb.syntaxtree.Node;
daikon.inv.unary.scalar.UpperBound:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.PptName:getSignature()Ljava.lang.String;
daikon.test.diff.DiffDummyInvariant:DiffDummyInvariant(Ldaikon.PptSlice;Ljava.lang.String;D)V
jtb.JavaCharStream:BeginToken()C
utilMDE.Intern:intern(Ljava.lang.Double;)Ljava.lang.Double;
daikon.Quant:subsetOf([F[F)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReferenceType;)V
daikon.inv.unary.scalar.NonZero:zero(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.Quant:eltsLtIndex([I)Z
utilMDE.MathMDE:negate(I)I
daikon.diff.InvMap:pptSortedIterator(Ljava.util.Comparator;)Ljava.util.Iterator;
daikon.inv.binary.BinaryInvariant:BinaryInvariant(Ldaikon.PptSlice;)V
daikon.PptTopLevel:cond_iterator()Ldaikon.PptTopLevel.CondIterator;
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa5_0(JJJJ)I
jtb.JTBToolkit:makeNodeToken(Ljtb.Token;)Ljtb.syntaxtree.NodeToken;
jtb.JavaParser:jj_3R_137()Z
utilMDE.WeakHasherMap:entrySet()Ljava.util.Set;
daikon.inv.unary.LowerBoundCore:calc_avg_samples_per_val(JD)D
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeDeclaration;)V
utilMDE.WeakIdentityHashMap:eq(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.PptSlice1:num_samples()I
jtb.JavaParser:jj_2_4(I)Z
daikon.inv.unary.UpperBoundCore:prob_or(DD)D
utilMDE.Options.OptionInfo:argument_required()Z
utilMDE.WeakHasherMap:keyEquals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.VarComparabilityImplicit:parse(Ljava.lang.String;Ldaikon.ProglangType;)Ldaikon.VarComparabilityImplicit;
jtb.syntaxtree.ExclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ShiftExpression:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.FormalParameter;)V
jtb.syntaxtree.PackageDeclaration:PackageDeclaration(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.Name;Ljtb.syntaxtree.NodeToken;)V
daikon.VarComparabilityImplicit:indexType(I)Ldaikon.VarComparability;
daikon.inv.filter.ParentFilter:ParentFilter()V
utilMDE.Options:Options(Ljava.lang.String;[Ljava.lang.Object;)V
utilMDE.Intern:internStrings([Ljava.lang.String;)V
daikon.Quant:lexLTE([I[I)Z
daikon.inv.unary.sequence.OneOfSequence:runValue([JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.MathMDE:bitwiseComplement(I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PostfixExpression;)V
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;)V
jtb.JavaParser:getToken(I)Ljtb.Token;
jtb.visitor.FormatCommand:FormatCommand(II)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArgument;)V
daikon.inv.binary.twoScalar.IntNonEqual:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.PptSlice0.ImplicationWrapper:hashCode()I
daikon.inv.unary.scalar.LowerBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.VarInfoAux:getFlag(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_63()Z
daikon.inv.unary.scalar.LowerBound:LowerBound(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_54()Z
daikon.inv.filter.UnjustifiedFilter:shouldDiscardInvariant(Ldaikon.inv.Invariant;)Z
utilMDE.TestUtilMDE:lsis_test(I)V
daikon.inv.Invariant:prob_or(DD)D
daikon.Quant:eltsNotEqualIndex([I)Z
daikon.inv.filter.InvariantFilter:shouldDiscard(Ldaikon.inv.Invariant;)Z
jtb.syntaxtree.InclusiveOrExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.Intern.IntegerHasher:hashCode(Ljava.lang.Object;)I
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa0_1()I
jtb.JavaParser:ShiftExpression()Ljtb.syntaxtree.ShiftExpression;
daikon.test.Common:makeIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
daikon.ValueTuple:makeUninterned([Ljava.lang.Object;[I)Ldaikon.ValueTuple;
daikon.Quant:eltsLteIndex([I)Z
daikon.PptName:getFullClassName()Ljava.lang.String;
daikon.test.InvariantFormatTester:performTest(Ljava.io.LineNumberReader;Ljava.io.PrintStream;)Z
daikon.inv.unary.UpperBoundCore:calc_modulus()J
utilMDE.Intern:intern(Ljava.lang.Integer;)Ljava.lang.Integer;
utilMDE.ArraysMDE:noDuplicates([Ljava.lang.String;)Z
daikon.config.Configuration:apply(Ljava.lang.String;)V
daikon.inv.binary.twoScalar.IntGreaterEqual:enabled()Z
jtb.JavaParser:jj_3R_118()Z
daikon.inv.binary.twoScalar.IntNonEqual:IntNonEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.NodeToken:setParent(Ljtb.syntaxtree.Node;)V
daikon.ModBitTracker:ModBitTracker(I)V
jtb.JavaParser:jj_2_36(I)Z
jtb.JavaParser:jj_3R_123()Z
daikon.Quant:pairwiseSquare([I[I)Z
daikon.diff.InvMap:get(Ldaikon.PptTopLevel;)Ljava.util.List;
daikon.tools.jtb.AnnotateVisitor:getTabbedIndex(ILjava.lang.String;)I
jtb.syntaxtree.TypeParameter:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ClassOrInterfaceBody:ClassOrInterfaceBody(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.inv.binary.twoScalar.NumericInt:enabled()Z
utilMDE.Intern:isInterned(Ljava.lang.Object;)Z
daikon.inv.Invariant:Invariant(Ldaikon.PptSlice;)V
daikon.config.Configuration:apply(Ljava.lang.String;Ljava.lang.String;)V
daikon.VarInfo:relate_var()V
utilMDE.LimitedSizeIntSet:toString()Ljava.lang.String;
jtb.JavaParser:jj_3R_80()Z
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getFirst()Ljava.lang.Object;
utilMDE.MathMDE:gcd([I)I
daikon.inv.unary.UpperBoundCore:calc_avg_samples_per_val(JD)D
daikon.diff.MinusVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.WeakHasherMap.WeakKey:equals(Ljava.lang.Object;)Z
daikon.inv.Implication:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.JavaCharStream:JavaCharStream(Ljava.io.InputStream;III)V
jtb.syntaxtree.NodeList:NodeList()V
utilMDE.FuzzyFloat:isElemMatch([D[D)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeOptional;)V
daikon.test.VarInfoNameDriver.Elements:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel:init_vars([Ldaikon.VarInfo;)V
utilMDE.ArraysMDE:subarray([III)[I
jtb.JavaParser:jj_2_13(I)Z
daikon.PptSlice0:arity()I
utilMDE.WeakHasherMap.WeakKey:hashCode()I
jtb.JavaParser:jj_3R_77()Z
jtb.JavaParser:jj_3R_87()Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.InvNode;)V
utilMDE.WeakHasherMap:get(Ljava.lang.Object;)Ljava.lang.Object;
daikon.inv.binary.twoScalar.IntEqual:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.inv.ternary.threeScalar.LinearTernaryCore.Point:Point(JJJ)V
daikon.Quant:collectObject(Ljava.lang.Object;[Ljava.lang.String;I)[Ljava.lang.Object;
daikon.inv.filter.InvariantFilter:InvariantFilter()V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:copy(Ljava.util.HashMap;)Ljava.util.HashMap;
jtb.JavaParser:jj_3R_58()Z
utilMDE.ArraysMDE:sum([D)D
utilMDE.TestUtilMDE.1TestMissingNumbersIteratorInt:test([IZ[I)V
jtb.JavaParser:jj_2_18(I)Z
daikon.test.TestAst:checkMatch(Ljava.lang.String;Ljtb.syntaxtree.MethodDeclaration;Ldaikon.tools.jtb.PptNameMatcher;)V
daikon.diff.Diff:shouldAdd(Ldaikon.PptTopLevel;)Z
utilMDE.Intern:intern(Ljava.lang.String;)Ljava.lang.String;
utilMDE.MathMDE:sign(I)I
daikon.inv.unary.sequence.OneOfSequence:OneOfSequence(Ldaikon.PptSlice;)V
jtb.syntaxtree.TypeBound:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.DetailedStatisticsVisitor:shouldAddFrequency(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.Quant:collectString_field(Ljava.lang.Object;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeChoice:accept(Ljtb.visitor.Visitor;)V
utilMDE.ArraysMDE:any_null([Ljava.lang.Object;)Z
jtb.syntaxtree.Modifiers:Modifiers(Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.scalar.SingleScalar:valid_types([Ldaikon.VarInfo;)Z
daikon.inv.unary.sequence.OneOfSequence:sort_rep()V
daikon.test.FormatTestCase:getClass(Ljava.lang.String;)Ljava.lang.Class;
jtb.JavaParser:jj_2_17(I)Z
daikon.inv.unary.scalar.OneOfScalar:add_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.visitor.TreeFormatter:processList(Ljtb.syntaxtree.NodeListInterface;Ljtb.visitor.FormatCommand;)V
daikon.ValueTuple:tuplemodHasMissingFlow(I)Z
jtb.syntaxtree.Block:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ReturnStatement:ReturnStatement(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:jj_2_10(I)Z
jtb.JavaParser:jj_3R_52()Z
jtb.syntaxtree.TypeArguments:accept(Ljtb.visitor.Visitor;)V
utilMDE.MathMDE:nonmodulus_strict_int(Ljava.util.Iterator;)[I
daikon.inv.Invariant.InvariantComparatorForPrinting:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeBound;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.NodeSequence:elementAt(I)Ljtb.syntaxtree.Node;
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:RelationalExpression()Ljtb.syntaxtree.RelationalExpression;
daikon.ProglangType:isArray()Z
daikon.PptMap:add(Ldaikon.PptTopLevel;)V
daikon.inv.Invariant.ClassVarnameComparator:compareVariables(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.Invariant:format_too_few_samples(Ldaikon.inv.OutputFormat;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.Invariants:Invariants()V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Statement;)V
daikon.inv.binary.twoScalar.LinearBinaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
daikon.diff.Node:children()Ljava.util.Iterator;
utilMDE.FuzzyFloat:gt(DD)Z
daikon.Quant:memberOf(D[F)Z
daikon.inv.unary.scalar.RangeInt:RangeInt(Ldaikon.PptSlice;)V
daikon.tools.jtb.Ast:getPackage(Ljtb.syntaxtree.CompilationUnit;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ExclusiveOrExpression;)V
daikon.inv.binary.twoScalar.IntLessEqual:enabled()Z
utilMDE.UtilMDE:removeWhitespaceAfter(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.diff.PrintAllVisitor:printPrintability(Ldaikon.inv.Invariant;)V
jtb.JavaParser:jj_3_1()Z
utilMDE.FuzzyFloat:isSubset([D[D)Z
utilMDE.WeakIdentityHashMap:getTable()[LutilMDE.WeakIdentityHashMap.Entry;
daikon.config.Configuration:apply(Ljava.lang.reflect.Field;Ljava.lang.String;)V
daikon.inv.Invariant.ClassVarnameFormulaComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
utilMDE.ArraysMDE:max([I)I
jtb.syntaxtree.CompilationUnit:CompilationUnit(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.ReferenceType;)V
utilMDE.Intern:intern([I)[I
jtb.syntaxtree.TypeArguments:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.RangeInt.EqualZero:get_proto()Ldaikon.inv.Invariant;
daikon.ValueTuple:ValueTuple([Ljava.lang.Object;[IZ)V
jtb.syntaxtree.UnaryExpressionNotPlusMinus:accept(Ljtb.visitor.Visitor;)V
daikon.inv.binary.twoScalar.NumericInt:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.test.VarInfoNameTest:run(Ljava.lang.String;)V
daikon.diff.DetailedStatisticsVisitor:determineRelationship(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.visitor.TreeFormatter:TreeFormatter(II)V
jtb.syntaxtree.NodeToken:numSpecials()I
daikon.inv.ValueSet:factory(Ldaikon.VarInfo;)Ldaikon.inv.ValueSet;
jtb.JavaParser:jj_3R_103()Z
daikon.diff.XorVisitor:visit(Ldaikon.diff.PptNode;)V
daikon.ProglangType:dimensions()I
jtb.JavaCharStream:GetImage()Ljava.lang.String;
jtb.syntaxtree.TypeBound:accept(Ljtb.visitor.Visitor;)V
daikon.config.Configuration:addRecord(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)V
daikon.inv.Invariant:getConfidence()D
utilMDE.ArraysMDE:indexOf([II)I
utilMDE.WeakHasherMap.EntrySet:size()I
jtb.syntaxtree.FormalParameter:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3R_98()Z
jtb.JavaParser:CompilationUnit()Ljtb.syntaxtree.CompilationUnit;
utilMDE.TestUtilMDE:int_array_iterator([I)Ljava.util.Iterator;
daikon.inv.binary.twoScalar.IntLessEqual:IntLessEqual(Ldaikon.PptSlice;)V
jtb.syntaxtree.PackageDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.UpperBoundCore:prob_and(DD)D
daikon.inv.filter.InvariantFilters:addPropertyFilter(Ldaikon.inv.filter.InvariantFilter;)V
daikon.PptName:isEnterPoint()Z
daikon.diff.InvMap:pptIterator()Ljava.util.Iterator;
utilMDE.ArraysMDE:sorted([I)Z
daikon.tools.jtb.PptNameMatcher:PptNameMatcher(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;)Ldaikon.VarComparability;
jtb.syntaxtree.ClassOrInterfaceBody:setParent(Ljtb.syntaxtree.Node;)V
utilMDE.WeakIdentityHashMap:remove(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.ArraysMDE:subarray([JII)[J
daikon.Quant:subsetOf([J[J)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.FormatCommand:getNumCommands()I
daikon.test.diff.DiffTester:printTree(Ldaikon.diff.RootNode;)Ljava.lang.String;
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
jtb.JavaParser:jj_3R_72()Z
daikon.test.LinearTernaryCoreTest:one_test_format(DDDDLjava.lang.String;)V
daikon.diff.Diff:setAllInvComparators(Ljava.util.Comparator;)V
utilMDE.UtilMDE:splitLines(Ljava.lang.String;)[Ljava.lang.String;
jtb.syntaxtree.NullLiteral:accept(Ljtb.visitor.Visitor;)V
daikon.test.TestAst.ClassOrInterfaceDeclarationHarvester:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.diff.DetailedStatisticsVisitor:determineType(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.RelationalExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.IntGreaterThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.unary.scalar.NonZero:is_pointer()Z
daikon.Quant:eltsGTE([II)Z
jtb.JavaParser:jj_3R_74()Z
daikon.PptTopLevel.ViewsIteratorIterator:ViewsIteratorIterator(Ldaikon.PptTopLevel;)V
utilMDE.FuzzyFloat:set_rel_diff(D)V
utilMDE.SimpleLog.LongVal:LongVal(J)V
daikon.Quant:isReverse([I[I)Z
daikon.Quant:eltwiseNotEqual([I)Z
jtb.JavaParser:jj_3_16()Z
daikon.diff.Node:getUserLeft()Ljava.lang.Object;
daikon.Quant:eltsGT([II)Z
daikon.inv.InvariantStatus:InvariantStatus(Ljava.lang.String;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.NodeSequence;)V
utilMDE.TestUtilMDE.1TestModulus:check(Ljava.util.Iterator;[I)V
daikon.inv.unary.scalar.LowerBound:get_proto()Ldaikon.inv.Invariant;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.CompilationUnit;)V
daikon.inv.binary.twoScalar.LinearBinary:get_proto()Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestModulus:check([I[I)V
daikon.Quant:gt(II)Z
jtb.JavaParser:Statement()Ljtb.syntaxtree.Statement;
daikon.VarInfoName:hashCode()I
daikon.test.FormatTestCase:getTypes(Ljava.lang.String;)[Ldaikon.ProglangType;
utilMDE.WeakHasherMap:WeakKeyCreate(Ljava.lang.Object;)LutilMDE.WeakHasherMap.WeakKey;
jtb.syntaxtree.Expression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PrintAllVisitor:printInvariant(Ldaikon.inv.Invariant;)V
daikon.tools.jtb.Ast:removeWhitespace(Ljava.lang.String;)Ljava.lang.String;
jtb.syntaxtree.ConditionalAndExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.XorVisitor:shouldAddInv2(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa2_0(JJJJ)I
daikon.test.ModBitTrackerTest:booleanToModBit(Z)I
jtb.syntaxtree.ClassOrInterfaceDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.PptSlice0.ImplicationWrapper:format()Ljava.lang.String;
jtb.syntaxtree.PostfixExpression:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE:lineNumberFileReader(Ljava.lang.String;)Ljava.io.LineNumberReader;
jtb.syntaxtree.NodeListOptional:addNode(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:UnaryExpression()Ljtb.syntaxtree.UnaryExpression;
jtb.syntaxtree.TypeDeclaration:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.FormalParameters:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.filter.SimplifyFilter:SimplifyFilter(Ldaikon.inv.filter.InvariantFilters;)V
daikon.inv.Invariant:prob_and(DDD)D
daikon.inv.unary.scalar.OneOfScalar:isSameFormula(Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.IntLessEqual:get_proto()Ldaikon.inv.binary.twoScalar.IntLessEqual;
utilMDE.FuzzyFloat:indexOf([D[D)I
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.inv.filter.InvariantFilters:shouldKeepVarFilters(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
daikon.inv.filter.DerivedParameterFilter:DerivedParameterFilter()V
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;Z)Ldaikon.diff.RootNode;
daikon.tools.jtb.Ast:typeMatch(Ljava.lang.String;Ljava.lang.String;)Z
daikon.VarComparabilityImplicit:VarComparabilityImplicit(I[Ldaikon.VarComparabilityImplicit;I)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.PrimaryExpression;)V
daikon.diff.ConsequentPairComparator:ConsequentPairComparator(Ljava.util.Comparator;)V
daikon.Quant:eltsLT([II)Z
daikon.inv.Invariant:prob_is_ge(DD)D
jtb.syntaxtree.NodeListOptional:accept(Ljtb.visitor.Visitor;)V
utilMDE.UtilMDE.RemoveFirstAndLastIterator:getLast()Ljava.lang.Object;
utilMDE.WeakHasherMap.EntrySet.1:next()Ljava.util.Map.Entry;
jtb.syntaxtree.ConditionalOrExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.scalar.OneOfScalar:sort_rep()V
utilMDE.ArraysMDE:fn_is_total([I)Z
daikon.VarInfoName.Simple:Simple(Ljava.lang.String;)V
utilMDE.SimpleLog:SimpleLog(Z)V
jtb.JavaParserTokenManager:jjCheckNAdd(I)V
utilMDE.Options:parse([Ljava.lang.String;)[Ljava.lang.String;
jtb.JavaParser:Type()Ljtb.syntaxtree.Type;
utilMDE.Intern.DoubleArrayHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.ProglangType:intern(Ljava.lang.String;I)Ldaikon.ProglangType;
daikon.tools.jtb.Ast:create(Ljava.lang.String;[Ljava.lang.Class;[Ljava.lang.Object;Ljava.lang.String;)Ljtb.syntaxtree.Node;
jtb.syntaxtree.TypeArgument:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:FormalParameter()Ljtb.syntaxtree.FormalParameter;
jtb.syntaxtree.TypeDeclaration:getParent()Ljtb.syntaxtree.Node;
jtb.syntaxtree.UnaryExpression:UnaryExpression(Ljtb.syntaxtree.NodeChoice;)V
jtb.syntaxtree.RelationalExpression:RelationalExpression(Ljtb.syntaxtree.ShiftExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.ProglangType:fileTypeToRepType()Ldaikon.ProglangType;
jtb.JavaCharStream:getBeginLine()I
daikon.diff.Node:add(Ljava.lang.Object;)V
daikon.inv.Invariant.ClassVarnameComparator:compareClass(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.inv.unary.scalar.RangeInt.EqualOne:get_proto()Ldaikon.inv.Invariant;
daikon.ProglangType:baseIsScalar()Z
daikon.inv.unary.scalar.RangeInt.EqualOne:EqualOne(Ldaikon.PptSlice;)V
daikon.diff.PrintDifferingInvariantsVisitor:PrintDifferingInvariantsVisitor(Ljava.io.PrintStream;ZZZ)V
jtb.JavaParser:ConditionalOrExpression()Ljtb.syntaxtree.ConditionalOrExpression;
jtb.syntaxtree.TypeArguments:TypeArguments(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeArgument;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
utilMDE.Options.OptionInfo:OptionInfo(LutilMDE.Options;Ljava.lang.reflect.Field;LutilMDE.Option;Ljava.lang.Object;)V
jtb.syntaxtree.PrimaryExpression:accept(Ljtb.visitor.Visitor;)V
daikon.PptName:getMethodName()Ljava.lang.String;
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParserTokenManager:jjMoveNfa_0(II)I
daikon.inv.unary.scalar.RangeInt.EqualMinusOne:EqualMinusOne(Ldaikon.PptSlice;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ResultType;)V
daikon.test.VarComparabilityTest:parsei(Ljava.lang.String;I)Ldaikon.VarComparability;
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
jtb.syntaxtree.TypeArgument:setParent(Ljtb.syntaxtree.Node;)V
daikon.Quant:collectint_field(Ljava.lang.Object;Ljava.lang.String;)I
daikon.diff.InvMap:put(Ldaikon.PptTopLevel;Ljava.util.List;)V
daikon.test.VarInfoNameDriver:run_helper(Ljava.io.InputStream;Ljava.io.PrintStream;)V
jtb.JavaParser:jj_3R_53()Z
jtb.syntaxtree.InstanceOfExpression:InstanceOfExpression(Ljtb.syntaxtree.RelationalExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.diff.ConsequentCVFSortComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NodeOptional:accept(Ljtb.visitor.Visitor;)V
daikon.test.diff.DiffDummyInvariant:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.inv.unary.sequence.OneOfSequence:add_mod_elem([JI)Ldaikon.inv.InvariantStatus;
jtb.syntaxtree.MultiplicativeExpression:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvNode:getInv1()Ldaikon.inv.Invariant;
daikon.Quant:lt(II)Z
utilMDE.TestUtilMDE:lsis_add_elts(ILutilMDE.LimitedSizeIntSet;)V
jtb.JavaParser:jj_3R_120()Z
daikon.inv.binary.twoScalar.IntGreaterEqual:IntGreaterEqual(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3_29()Z
jtb.syntaxtree.ClassOrInterfaceBodyDeclaration:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.OneOfScalar:runValue(JIZ)Ldaikon.inv.InvariantStatus;
utilMDE.ArraysMDE:fn_compose([I[I)[I
jtb.JavaParser:TypeArgument()Ljtb.syntaxtree.TypeArgument;
jtb.JavaParser:jj_3R_99()Z
daikon.Quant:slice([III)[I
daikon.PptTopLevel:num_samples(Ldaikon.VarInfo;)I
utilMDE.ArraysMDE:fn_inverse_permutation([I)[I
daikon.Ppt.NameComparator:swap(Ljava.lang.String;CC)Ljava.lang.String;
daikon.diff.Diff:setInvSortComparator1(Ljava.util.Comparator;)V
daikon.inv.Invariant:instantiate(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.diff.Diff:diffInvMap(Ldaikon.diff.InvMap;Ldaikon.diff.InvMap;)Ldaikon.diff.RootNode;
utilMDE.FuzzyFloat:FuzzyFloat()V
daikon.tools.jtb.Ast:getParameters(Ljtb.syntaxtree.MethodDeclaration;)Ljava.util.List;
daikon.diff.MinusVisitor:shouldAdd(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.binary.twoScalar.TwoScalar:TwoScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.RelationalExpression:accept(Ljtb.visitor.Visitor;)V
jtb.syntaxtree.ShiftExpression:ShiftExpression(Ljtb.syntaxtree.AdditiveExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParserTokenManager:jjStopStringLiteralDfa_0(IJJ)I
jtb.syntaxtree.NodeToken:addSpecial(Ljtb.syntaxtree.NodeToken;)V
daikon.inv.ternary.threeScalar.LinearTernaryCore:formatTerm(DLjava.lang.String;Z)Ljava.lang.String;
utilMDE.UtilMDE:sortList(Ljava.util.List;Ljava.util.Comparator;)Ljava.util.List;
daikon.Quant:pairwiseDivides([I[I)Z
jtb.syntaxtree.PrimaryPrefix:PrimaryPrefix(Ljtb.syntaxtree.NodeChoice;)V
daikon.diff.PrintDifferingInvariantsVisitor:shouldPrint(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.test.ModBitTrackerTest:oneModBitTrackerTest(IID)V
jtb.syntaxtree.ExclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.InvNode:InvNode(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
utilMDE.ArraysMDE:isSubset([D[D)Z
jtb.JavaParser:jj_2_1(I)Z
jtb.syntaxtree.TypeArgument:TypeArgument(Ljtb.syntaxtree.NodeChoice;)V
daikon.ProglangType:elementType()Ldaikon.ProglangType;
daikon.VarInfoName.Simple:repr_impl()Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ReturnStatement;)V
daikon.inv.binary.twoScalar.IntNonEqual:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.JavaParser:jj_3R_97()Z
utilMDE.Options:type_short_name(Ljava.lang.Class;)Ljava.lang.String;
jtb.syntaxtree.Block:Block(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
jtb.JavaParser:UnaryExpressionNotPlusMinus()Ljtb.syntaxtree.UnaryExpressionNotPlusMinus;
daikon.ValueTuple:size()I
utilMDE.ArraysMDE:indexOf([Ljava.lang.Object;[Ljava.lang.Object;)I
daikon.ProglangType:isIntegral()Z
daikon.ValueTuple:isMissingFlow(I)Z
jtb.JavaParser:jj_2_5(I)Z
daikon.Quant:eltwiseGTE([I)Z
utilMDE.MathMDE:pow(II)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Expression;)V
daikon.VarInfoName:intern()Ldaikon.VarInfoName;
jtb.syntaxtree.BlockStatement:BlockStatement(Ljtb.syntaxtree.NodeChoice;)V
daikon.inv.unary.LowerBoundCore:computeConfidence()D
jtb.syntaxtree.Name:accept(Ljtb.visitor.Visitor;)V
daikon.diff.PptNode:getPpt1()Ldaikon.PptTopLevel;
jtb.syntaxtree.MethodDeclarator:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:BitwiseComplement(Ldaikon.PptSlice;)V
daikon.diff.ConsequentSortComparator:ConsequentSortComparator(Ljava.util.Comparator;)V
daikon.inv.Joiner:Joiner(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
daikon.Quant:collectint(Ljava.lang.Object;[Ljava.lang.String;I)[I
daikon.inv.unary.scalar.UpperBound:computeConfidence()D
utilMDE.Intern.SequenceAndIndices:equals(LutilMDE.Intern.SequenceAndIndices;)Z
utilMDE.ArraysMDE:sum([[I)I
daikon.PptMap:asCollection()Ljava.util.Collection;
daikon.test.VarComparabilityTest:comp(Ldaikon.VarComparability;Ldaikon.VarComparability;)Z
jtb.syntaxtree.PrimaryPrefix:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3R_115()Z
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
jtb.JavaParser:EqualityExpression()Ljtb.syntaxtree.EqualityExpression;
utilMDE.WeakIdentityHashMap:get(Ljava.lang.Object;)Ljava.lang.Object;
utilMDE.TestUtilMDE.1InternTest:test(Z)V
jtb.JavaParser:jj_consume_token(I)Ljtb.Token;
daikon.diff.InvNode:getInv2()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeToken:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor.1:visit(Ljtb.syntaxtree.TypeParameter;)V
jtb.syntaxtree.NodeSequence:elements()Ljava.util.Enumeration;
jtb.JavaParser:jj_3R_101()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Name;)V
daikon.test.ModBitTrackerTest:makeModBitTracker([Ljava.util.BitSet;)Ldaikon.ModBitTracker;
jtb.JavaParser:jj_3R_126()Z
jtb.JavaParser:jj_3R_148()Z
daikon.inv.unary.scalar.OneOfScalar:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.TestUtilMDE.1TestNonModulus:check([I[IZ)V
jtb.JavaParser:jj_3R_109()Z
daikon.tools.jtb.PptNameMatcher:getUngenerifiedType(Ljtb.syntaxtree.FormalParameter;)Ljava.lang.String;
jtb.JavaParserTokenManager:SkipLexicalActions(Ljtb.Token;)V
jtb.JavaParser:jj_3_20()Z
jtb.syntaxtree.MultiplicativeExpression:MultiplicativeExpression(Ljtb.syntaxtree.UnaryExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.LinearBinary:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeArguments;)V
daikon.Quant:setEqual([I[I)Z
utilMDE.FuzzyFloat:eq(DD)Z
jtb.JavaParser:jj_3R_96()Z
jtb.JavaParserTokenManager:jjStartNfa_0(IJJ)I
daikon.test.diff.DiffTester:newIntVarInfo(Ljava.lang.String;)Ldaikon.VarInfo;
jtb.JavaParser:Block()Ljtb.syntaxtree.Block;
jtb.JavaParser:AdditiveExpression()Ljtb.syntaxtree.AdditiveExpression;
daikon.test.split.SplitterFactoryTest:assertEqualFiles(Ljava.lang.String;)V
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:ungenerify(Ljtb.syntaxtree.ClassOrInterfaceType;)V
daikon.inv.unary.LowerBoundCore:calc_modulus()J
jtb.JavaParser:jj_3R_49()Z
daikon.inv.unary.scalar.SingleScalar:SingleScalar(Ldaikon.PptSlice;)V
jtb.syntaxtree.Modifiers:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:jj_3_14()Z
jtb.syntaxtree.AdditiveExpression:accept(Ljtb.visitor.Visitor;)V
daikon.VarInfoAux:getDefault()Ldaikon.VarInfoAux;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.Literal;)V
daikon.Quant:sameLength([I[I)Z
utilMDE.MathMDE.MissingNumbersIteratorInt:MissingNumbersIteratorInt(Ljava.util.Iterator;Z)V
daikon.diff.DepthFirstVisitor:visit(Ldaikon.diff.PptNode;)V
utilMDE.UtilMDE:equalFiles(Ljava.lang.String;Ljava.lang.String;)Z
jtb.syntaxtree.NodeChoice:getParent()Ljtb.syntaxtree.Node;
utilMDE.Intern:intern(Ljava.lang.Object;)Ljava.lang.Object;
jtb.syntaxtree.PostfixExpression:PostfixExpression(Ljtb.syntaxtree.PrimaryExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.VarInfoName:parse(Ljava.lang.String;)Ldaikon.VarInfoName; | OPERATOR | 3095 | - -> *
jtb.JavaParser:TypeParameter()Ljtb.syntaxtree.TypeParameter;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.BlockStatement;)V
daikon.Quant:memberOf(F[F)Z
utilMDE.Intern.ObjectArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.Quant:eq(DD)Z
utilMDE.TestUtilMDE.1TestNonModulus:check_nonstrict([I[I)V
daikon.ValueTuple:isMissingNonsensical(I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.MethodDeclaration;)V
daikon.diff.Diff:setInvSortComparator2(Ljava.util.Comparator;)V
daikon.inv.unary.scalar.OneOfScalar:is_boolean()Z
utilMDE.Assert:assertTrue(ZLjava.lang.String;)V
jtb.JavaParser:Expression()Ljtb.syntaxtree.Expression;
utilMDE.OrderedPairIterator:return1()LutilMDE.Pair;
daikon.test.InvariantFormatTester:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.VarInfo:VarInfo(Ljava.lang.String;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.syntaxtree.BlockStatement:accept(Ljtb.visitor.Visitor;)V
daikon.diff.InvMap:toString()Ljava.lang.String;
daikon.inv.unary.scalar.UpperBound:enabled()Z
daikon.ModBitTracker:num_sets()I
daikon.test.Common:makePptTopLevel(Ljava.lang.String;[Ldaikon.VarInfo;)Ldaikon.PptTopLevel;
jtb.syntaxtree.TypeParameters:TypeParameters(Ljtb.syntaxtree.NodeToken;Ljtb.syntaxtree.TypeParameter;Ljtb.syntaxtree.NodeListOptional;Ljtb.syntaxtree.NodeToken;)V
daikon.ModBitTracker:num_vars()I
daikon.inv.Invariant:instantiate_ok([Ldaikon.VarInfo;)Z
jtb.syntaxtree.ClassOrInterfaceBody:accept(Ljtb.visitor.Visitor;)V
daikon.diff.ConsequentPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
jtb.syntaxtree.NullLiteral:NullLiteral(Ljtb.syntaxtree.NodeToken;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.VariableDeclaratorId;)V
utilMDE.FuzzyFloat:FuzzyFloat(D)V
daikon.diff.PptNode:accept(Ldaikon.diff.Visitor;)V
daikon.inv.binary.twoScalar.IntLessThan:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.inv.filter.DerivedVariableFilter:DerivedVariableFilter()V
utilMDE.Options:parse_option(Ljava.lang.String;)[Ljava.lang.String;
utilMDE.FuzzyFloat:lt(DD)Z
utilMDE.WeakHasherMap.EntrySet.1:hasNext()Z
jtb.JavaParser:jj_3R_162()Z
jtb.syntaxtree.UnaryExpressionNotPlusMinus:UnaryExpressionNotPlusMinus(Ljtb.syntaxtree.NodeChoice;)V
jtb.JavaParser:jj_2_35(I)Z
jtb.visitor.TreeFormatter:visit(Ljtb.syntaxtree.NodeToken;)V
utilMDE.ArraysMDE:concat([I[I)[I
jtb.JavaParser:jj_3R_180()Z
jtb.JavaParser:jj_3R_62()Z
daikon.Quant:eq(JJ)Z
jtb.syntaxtree.FormalParameter:accept(Ljtb.visitor.Visitor;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.FormalParameters;)V
daikon.PptTopLevel:views_iterator()Ljava.util.Iterator;
daikon.tools.jtb.ClassOrInterfaceTypeDecorateVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceDeclaration;)V
daikon.inv.unary.scalar.LowerBound:isSameFormula(Ldaikon.inv.Invariant;)Z
utilMDE.OrderedPairIterator:OrderedPairIterator(Ljava.util.Iterator;Ljava.util.Iterator;Ljava.util.Comparator;)V
jtb.syntaxtree.MultiplicativeExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaParser:jj_3_5()Z
daikon.test.FormatTestCase:getVarInfos(Ljava.lang.Class;[Ldaikon.ProglangType;)[Ldaikon.VarInfo;
daikon.inv.unary.scalar.UpperBound:get_proto()Ldaikon.inv.Invariant;
jtb.JavaParser:ConditionalAndExpression()Ljtb.syntaxtree.ConditionalAndExpression;
utilMDE.Intern:internedLong(Ljava.lang.String;)Ljava.lang.Long;
daikon.diff.RootNode:RootNode()V
daikon.inv.Invariant:log(Ljava.lang.String;[Ljava.lang.Object;)Z
daikon.suppress.NISuppressor:NISuppressor(ILjava.lang.Class;)V
daikon.test.TestQuant:assert_arrays_equals([I[I)V
jtb.JavaParserTokenManager:jjFillToken()Ljtb.Token;
daikon.ValueTuple:isMissing(I)Z
utilMDE.ArraysMDE:fn_identity(I)[I
jtb.JavaParser:jj_3R_48()Z
daikon.diff.PptNode:PptNode(Ldaikon.PptTopLevel;Ldaikon.PptTopLevel;)V
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:GreaterEqualZero(Ldaikon.PptSlice;)V
jtb.JavaParser:jj_3R_108()Z
jtb.JavaParser:jj_3_15()Z
utilMDE.ArraysMDE.ComparableArrayComparatorLengthFirst:compare([Ljava.lang.Comparable;[Ljava.lang.Comparable;)I
daikon.diff.XorVisitor:shouldAddInv1(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)Z
daikon.inv.unary.scalar.RangeInt.Bound0_63:Bound0_63(Ldaikon.PptSlice;)V
jtb.syntaxtree.AdditiveExpression:AdditiveExpression(Ljtb.syntaxtree.MultiplicativeExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.visitor.TreeFormatter:space(I)Ljtb.visitor.FormatCommand;
utilMDE.TestUtilMDE:assert_arrays_equals([I[I)V
daikon.inv.unary.sequence.OneOfSequence:isSameFormula(Ldaikon.inv.Invariant;)Z
jtb.JavaParser:jj_2_14(I)Z
daikon.test.VarInfoNameDriver.Parse:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V | ASSIGN | 2268 | = null
utilMDE.ArraysMDE:indexOf([ZZ)I
jtb.JavaParser:jj_3R_104()Z
daikon.test.FormatTestCase:getNextRealLine(Ljava.io.BufferedReader;)Ljava.lang.String;
daikon.Quant:setDiff([I[I)[I
daikon.inv.unary.UnaryInvariant:UnaryInvariant(Ldaikon.PptSlice;)V
daikon.inv.Invariant:prob_and(DD)D
jtb.syntaxtree.NodeOptional:NodeOptional()V
jtb.JavaParser:ClassOrInterfaceType()Ljtb.syntaxtree.ClassOrInterfaceType;
daikon.inv.binary.twoScalar.TwoScalar:valid_types([Ldaikon.VarInfo;)Z
utilMDE.ArraysMDE:indexOf([I[I)I
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.AdditiveExpression;)V
utilMDE.FuzzyFloat.DoubleArrayComparatorLexical:compare([D[D)I
jtb.syntaxtree.TypeDeclaration:TypeDeclaration(Ljtb.syntaxtree.NodeChoice;)V
jtb.visitor.TreeDumper:printToken(Ljava.lang.String;)V
daikon.inv.unary.scalar.NonZero:get_proto()Ldaikon.inv.Invariant;
utilMDE.FuzzyFloat:indexOf([DD)I
daikon.inv.unary.scalar.NonZero:enabled()Z
daikon.Quant:eltsGteIndex([I)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InclusiveOrExpression;)V
jtb.syntaxtree.VariableDeclaratorId:accept(Ljtb.visitor.Visitor;)V
daikon.inv.unary.scalar.UpperBound:isInteresting()Z
jtb.JavaParser:jj_3R_69()Z
jtb.syntaxtree.NodeChoice:NodeChoice(Ljtb.syntaxtree.Node;I)V
daikon.suppress.NISuppressor:toString()Ljava.lang.String;
daikon.inv.binary.twoScalar.LinearBinary:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
utilMDE.Intern.DoubleHasher:equals(Ljava.lang.Object;Ljava.lang.Object;)Z
daikon.inv.Implication:Implication(Ldaikon.PptSlice;Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;ZLdaikon.inv.Invariant;Ldaikon.inv.Invariant;)V
jtb.syntaxtree.InclusiveOrExpression:InclusiveOrExpression(Ljtb.syntaxtree.ExclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.binary.twoScalar.IntLessEqual:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
daikon.test.InvariantFormatTester:isComment(Ljava.lang.String;)Z
jtb.JavaParser:jj_3R_107()Z
daikon.inv.unary.LowerBoundCore:prob_and(DD)D
jtb.JavaParser:MethodDeclaration(I)Ljtb.syntaxtree.MethodDeclaration;
utilMDE.UtilMDE:create_combinations(IILjava.util.List;)Ljava.util.List;
jtb.JavaCharStream:readChar()C
daikon.inv.unary.scalar.NonZero:format_using(Ldaikon.inv.OutputFormat;)Ljava.lang.String;
daikon.diff.ConsequentCVFPairComparator:compare(Ldaikon.inv.Invariant;Ldaikon.inv.Invariant;)I
daikon.diff.DetailedStatisticsVisitor:freq(II)D
utilMDE.MathMDE:nonmodulus_nonstrict([I)[I
daikon.inv.binary.twoScalar.LinearBinary:enabled()Z
jtb.JavaParser:jj_3R_169()Z
jtb.syntaxtree.ReferenceType:accept(Ljtb.visitor.Visitor;)V
daikon.tools.jtb.Ast:print(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.Ppt:Ppt()V
jtb.JavaParser:Modifiers()Ljtb.syntaxtree.Modifiers;
jtb.JavaParser:jj_3R_47()Z
utilMDE.Intern.SequenceAndIndices:SequenceAndIndices(Ljava.lang.Object;II)V
daikon.config.Configuration:getInstance()Ldaikon.config.Configuration;
jtb.syntaxtree.ShiftExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.JavaCharStream:FillBuff()V
daikon.tools.jtb.Ast:getClassName(Ljtb.syntaxtree.Node;)Ljava.lang.String;
daikon.inv.binary.twoScalar.IntLessThan:instantiate_ok([Ldaikon.VarInfo;)Z
utilMDE.UtilMDE:replaceString(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.inv.ternary.threeScalar.LinearTernaryCore:format_using(Ldaikon.inv.OutputFormat;Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;DDDD)Ljava.lang.String;
daikon.Quant:eq(II)Z
daikon.VarInfo:VarInfo(Ldaikon.VarInfoName;Ldaikon.ProglangType;Ldaikon.ProglangType;Ldaikon.VarComparability;ZLjava.lang.Object;Ldaikon.VarInfoAux;)V
jtb.JavaParser:NullLiteral()Ljtb.syntaxtree.NullLiteral;
jtb.JavaParser:jj_scan_token(I)Z
daikon.diff.PptNode:getPpt2()Ldaikon.PptTopLevel;
utilMDE.FuzzyFloat:lte(DD)Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.InstanceOfExpression;)V
utilMDE.WeakIdentityHashMap:indexFor(II)I
daikon.inv.unary.scalar.RangeInt.GreaterEqualZero:get_proto()Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeListOptional:present()Z
utilMDE.Intern.DoubleHasher:hashCode(Ljava.lang.Object;)I
daikon.test.InvariantFormatTester:isWhitespace(Ljava.lang.String;)Z
daikon.PptSlice:PptSlice(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
daikon.inv.Invariant:justified()Z
jtb.JavaParser:jj_3R_117()Z
jtb.syntaxtree.Type:accept(Ljtb.visitor.Visitor;)V
jtb.JavaParser:Literal()Ljtb.syntaxtree.Literal;
daikon.test.VarInfoNameDriver.EscName:handle(Ljava.util.Map;[Ljava.lang.String;Ljava.io.PrintStream;)V
daikon.PptTopLevel.ViewsIteratorIterator:next()Ljava.util.Iterator;
jtb.syntaxtree.PostfixExpression:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.InclusiveOrExpression:setParent(Ljtb.syntaxtree.Node;)V
daikon.inv.unary.scalar.NonModulus:instantiate_dyn(Ldaikon.PptSlice;)Ldaikon.inv.Invariant;
jtb.syntaxtree.NodeChoice:setParent(Ljtb.syntaxtree.Node;)V
jtb.syntaxtree.FormalParameter:FormalParameter(Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.Type;Ljtb.syntaxtree.NodeOptional;Ljtb.syntaxtree.VariableDeclaratorId;)V
daikon.suppress.NISuppressor:NISuppressor(IILjava.lang.Class;)V
utilMDE.TestUtilMDE:compareOrderedPairIterator(LutilMDE.OrderedPairIterator;[[I)V
jtb.JavaParser:jj_3_13()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ClassOrInterfaceBodyDeclaration;)V
daikon.inv.binary.twoScalar.IntEqual:IntEqual(Ldaikon.PptSlice;)V
utilMDE.ArraysMDE:noDuplicates([D)Z
jtb.JavaParserTokenManager:jjMoveStringLiteralDfa1_0(JJ)I
utilMDE.TestUtilMDE.1TestNonModulus:check_strict([I[I)V
jtb.syntaxtree.ConditionalAndExpression:ConditionalAndExpression(Ljtb.syntaxtree.InclusiveOrExpression;Ljtb.syntaxtree.NodeListOptional;)V
jtb.JavaParser:jj_3R_57()Z
jtb.JavaParser:InclusiveOrExpression()Ljtb.syntaxtree.InclusiveOrExpression;
daikon.inv.unary.UpperBoundCore:calc_range()J
jtb.syntaxtree.TypeDeclaration:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.XorVisitor:getResult()Ldaikon.diff.InvMap;
jtb.JavaParser:BlockStatement()Ljtb.syntaxtree.BlockStatement;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.ConditionalOrExpression;)V
jtb.syntaxtree.MethodDeclaration:getParent()Ljtb.syntaxtree.Node;
daikon.Quant:lexGT([I[I)Z
jtb.JavaParser:jj_3R_133()Z
utilMDE.ArraysMDE:sum([[D)D
utilMDE.Intern.DoubleArrayHasher:hashCode(Ljava.lang.Object;)I
daikon.inv.Invariant:logDetail()Z
jtb.syntaxtree.ConditionalExpression:ConditionalExpression(Ljtb.syntaxtree.ConditionalOrExpression;Ljtb.syntaxtree.NodeOptional;)V
daikon.PptName:PptName(Ljava.lang.String;)V
daikon.inv.unary.scalar.OneOfScalar:check_mod_elem(JI)Ldaikon.inv.InvariantStatus;
jtb.JavaParser:ImportDeclaration()Ljtb.syntaxtree.ImportDeclaration;
daikon.PptSlice1:PptSlice1(Ldaikon.PptTopLevel;[Ldaikon.VarInfo;)V
jtb.JavaParser:jj_3R_88()Z
utilMDE.UtilMDE:removeWhitespaceAround(Ljava.lang.String;Ljava.lang.String;)Ljava.lang.String;
daikon.ProglangType:baseIsIntegral()Z
daikon.inv.binary.twoScalar.NumericInt.BitwiseComplement:get_proto()Ldaikon.inv.Invariant;
daikon.inv.ternary.threeScalar.LinearTernaryCore:LinearTernaryCore(Ldaikon.inv.Invariant;)V
utilMDE.Intern.SequenceAndIndices:hashCode()I
daikon.Quant:subsetOf(Ljava.lang.Object;Ljava.lang.Object;)Z
jtb.syntaxtree.PackageDeclaration:setParent(Ljtb.syntaxtree.Node;)V
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.RelationalExpression;)V
utilMDE.ArraysMDE:all_null([Ljava.lang.Object;)Z
daikon.Debug:logOn()Z
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.TypeParameters;)V
daikon.inv.unary.scalar.UpperBound:instantiate_ok([Ldaikon.VarInfo;)Z
daikon.diff.PrintAllVisitor:visit(Ldaikon.diff.PptNode;)V
jtb.syntaxtree.TypeParameter:setParent(Ljtb.syntaxtree.Node;)V
daikon.diff.Diff:diffPptMap(Ldaikon.PptMap;Ldaikon.PptMap;Z)Ldaikon.diff.RootNode;
jtb.syntaxtree.ConditionalOrExpression:ConditionalOrExpression(Ljtb.syntaxtree.ConditionalAndExpression;Ljtb.syntaxtree.NodeListOptional;)V
daikon.inv.unary.UpperBoundCore:prob_is_ge(DD)D
utilMDE.OrderedPairIterator:setnext2()V
jtb.JavaParser:jj_3_10()Z
daikon.Quant:eltwiseLTE([I)Z
utilMDE.ArraysMDE:indexOfEq([Ljava.lang.Object;Ljava.lang.Object;)I
utilMDE.Fmt:spf(Ljava.lang.String;Ljava.lang.Object;Ljava.lang.Object;)Ljava.lang.String;
daikon.inv.filter.InvariantFilters:shouldKeep(Ldaikon.inv.Invariant;)Ldaikon.inv.filter.InvariantFilter;
jtb.visitor.DepthFirstVisitor:visit(Ljtb.syntaxtree.EqualityExpression;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
445 2 1025 2 657 2 899 2 466 2 365 2 290 2 622 2 130 4 
233 2 541 2 475 6 336 2 1213 6 207 6 1062 2 1169 2 1027 2 16 2 610 2 
1025 2 777 2 591 4 466 2 436 4 270 2 1151 6 222 2 736 6 48 6 517 6 392 2 969 2 
1025 6 197 8 236 2 466 6 513 10 314 6 596 8 38 10 663 12 276 16 477 2 483 2 359 26 742 6 671 4 674 28 816 16 1136 4 778 2 1200 8 433 10 961 2 678 16 528 8 301 2 23 10 109 10 497 2 339 4 653 4 
225 6 1123 4 
54 2 
0 2 381 4 4 2 466 4 760 4 1075 2 910 2 697 2 77 2 1081 2 11 2 1086 2 1090 2 248 2 772 2 483 2 853 2 175 2 637 2 1099 2 1173 2 931 2 338 2 341 2 1025 4 943 2 412 4 347 2 200 2 1187 2 43 2 739 2 427 2 290 2 431 2 362 2 1204 2 440 2 962 2 685 2 446 2 1216 4 905 2 146 2 
1115 4 1025 4 466 4 513 15 271 5 312 4 417 4 1154 6 38 15 314 4 596 19 1188 6 276 32 663 22 477 2 49 6 627 6 359 47 742 4 519 4 816 32 674 52 859 2 636 4 433 6 182 2 330 2 678 32 528 6 444 4 576 4 1012 2 23 15 24 2 109 15 1018 6 690 8 115 3 339 2 
765 2 1086 2 246 2 
1042 2 726 2 1047 2 836 2 1149 2 798 2 1101 2 1105 2 991 22 446 2 735 2 52 10 667 2 72 2 
970 2 588 2 513 2 761 2 81 2 38 2 596 2 663 2 276 2 169 2 849 2 322 2 742 2 359 4 674 6 816 2 1048 2 433 4 101 2 678 2 23 2 109 2 339 2 
538 2 816 8 674 16 636 4 513 4 678 8 444 4 38 4 663 4 276 8 23 4 109 4 49 6 1068 2 627 6 359 12 653 2 
380 4 381 4 3 2 269 4 659 4 982 4 660 2 348 4 948 2 162 2 274 4 765 6 1128 2 1086 8 244 2 848 4 1090 2 807 2 246 2 92 4 561 14 811 2 565 62 95 10 177 2 521 4 711 2 437 4 490 2 367 10 440 4 526 2 1008 4 686 2 608 2 581 2 186 2 1175 2 691 2 1020 2 
939 2 877 2 799 2 595 2 855 2 54 2 212 2 1046 2 857 2 604 2 
614 2 615 2 1071 1 1 2 758 2 463 2 311 2 466 32 467 3 1078 1 471 2 160 2 7 12 1083 1 766 3 913 2 317 2 167 2 319 1 484 2 170 1 774 2 1094 6 918 24 172 2 630 2 486 3 18 2 176 2 489 1 1098 16 783 2 638 2 332 6 493 2 639 2 1104 1 641 3 643 2 499 2 500 2 935 2 937 2 652 2 194 2 1113 2 1114 2 791 1 793 2 654 32 655 2 1116 2 656 2 33 3 1118 2 35 2 512 2 944 16 199 2 346 8 350 12 349 2 1129 2 950 4 45 2 44 2 664 2 50 2 810 2 55 2 670 2 520 2 956 3 814 4 1133 6 673 2 522 2 215 3 958 2 219 4 1137 2 679 2 825 2 63 2 1141 2 1142 2 1145 2 234 2 835 3 235 8 383 1 80 2 1152 1 552 2 1156 4 988 2 554 4 240 2 555 2 556 2 91 2 558 2 390 2 854 2 563 2 253 2 566 2 1001 6 1168 1 1005 2 258 3 867 2 716 2 1172 3 870 4 718 16 1014 2 871 1 872 16 873 1 583 24 720 4 721 2 722 4 1025 34 268 3 728 5 731 2 882 1 1029 2 737 2 1034 2 1191 2 1044 2 1197 32 744 1 1198 2 136 8 1205 2 901 3 747 2 445 2 141 2 450 2 451 2 453 2 752 2 307 1 1217 1 
1025 2 846 2 
1025 4 1095 2 833 2 
623 2 
613 26 2 6 618 2 5 4 620 4 9 22 10 2 12 244 13 26 14 6 15 46 626 6 17 2 628 6 629 2 633 2 19 2 21 4 22 2 640 30 642 160 644 2 645 30 25 6 27 6 649 22 651 2 650 4 28 198 30 4 31 24 32 2 34 228 658 2 36 4 37 4 39 30 40 2 46 2 47 32 666 20 51 2 665 2 53 6 668 204 56 2 58 2 672 46 675 2 676 4 60 26 59 2 683 4 684 4 61 6 687 2 64 2 688 2 67 2 66 64 70 6 68 2 69 2 693 4 74 2 696 192 75 6 698 4 79 4 78 2 82 4 702 2 83 6 86 2 704 8 88 224 89 2 93 2 706 6 707 2 708 8 709 4 96 10 710 26 99 2 713 14 100 6 103 2 715 8 104 6 106 2 717 2 110 4 111 26 112 2 113 2 723 6 729 4 120 8 730 6 732 8 734 4 123 2 125 4 740 2 124 4 126 16 741 4 128 2 131 20 743 12 132 8 133 20 134 12 135 8 139 10 746 6 140 2 142 4 750 4 751 98 144 6 145 2 753 2 756 106 757 14 151 4 148 14 154 2 762 2 763 14 159 376 764 2 163 4 164 2 767 4 165 64 166 2 168 2 773 2 776 2 179 2 781 4 780 328 181 2 784 2 184 4 787 8 185 2 788 6 187 2 189 30 191 12 190 2 789 2 193 2 792 2 796 2 202 20 802 4 205 4 806 244 809 4 210 68 813 2 214 16 817 6 819 8 820 6 822 52 218 2 220 24 824 2 223 2 228 30 826 6 828 46 829 2 831 2 830 4 229 14 232 2 837 2 841 2 843 6 243 2 847 328 247 4 850 2 249 6 250 16 851 2 252 12 251 84 856 118 858 8 255 2 861 26 862 26 864 4 863 6 865 2 866 2 259 2 868 198 260 8 261 4 262 2 266 2 875 2 876 12 267 2 878 6 879 2 881 192 880 2 883 6 272 6 885 4 886 12 275 2 277 4 278 4 279 2 280 10 890 4 283 2 285 4 891 2 288 94 893 204 896 6 293 198 292 2 294 2 900 30 295 140 296 2 297 2 902 2 298 6 903 6 300 4 304 2 306 18 308 30 906 12 309 2 907 2 318 2 916 2 323 4 919 6 324 6 920 2 921 88 325 16 922 10 328 2 329 432 331 20 926 2 335 6 929 2 932 4 337 6 933 12 936 6 938 26 343 4 940 2 941 2 344 8 946 2 345 290 949 6 951 2 354 6 953 12 356 2 955 2 357 8 360 2 363 4 369 2 370 2 372 30 371 2 373 2 965 6 374 6 966 2 967 2 968 2 377 6 971 112 379 2 973 386 974 6 975 244 976 2 977 12 384 4 980 28 979 2 385 20 386 2 983 2 984 2 387 132 388 4 985 6 987 2 986 2 989 26 992 26 993 82 389 6 995 2 998 18 996 2 1000 4 397 6 1002 10 1003 60 1004 6 398 2 1006 6 399 6 1011 4 1013 2 1015 4 402 86 403 2 1016 6 406 6 1022 2 408 4 1025 10 1026 2 411 8 413 198 414 4 1030 6 419 2 422 2 1035 4 1038 6 1040 2 428 2 1041 18 430 198 429 132 432 198 435 60 1049 4 1050 2 434 6 1051 2 438 112 1052 20 439 2 441 4 442 2 1054 2 1055 2 447 2 448 2 449 2 1057 22 1060 2 1058 8 1064 2 1063 2 1067 2 454 2 452 6 455 2 457 2 458 12 460 4 461 2 1073 198 466 10 1076 4 1080 14 1079 2 1084 2 474 28 1085 4 1088 46 476 4 1091 2 480 4 481 30 482 4 488 20 487 28 1096 106 1097 46 491 2 1100 6 1102 2 494 2 1103 48 1108 6 1109 22 1111 74 1112 66 498 2 502 2 506 48 505 2 507 60 509 4 510 4 1117 2 511 2 1120 2 514 8 1122 2 1124 432 1130 2 1132 6 1131 54 518 2 1134 4 1135 4 524 4 527 2 1138 2 1139 112 529 182 1140 4 531 4 532 6 534 2 536 2 537 2 539 8 1146 2 1147 566 548 4 545 2 546 2 549 2 1150 6 550 2 1153 336 1158 30 557 30 1159 28 562 26 564 28 1160 2 1163 2 1164 2 1166 70 1167 6 568 182 571 2 1170 60 1171 6 573 2 575 198 578 50 1174 92 585 10 1176 2 586 112 587 2 1177 4 1178 2 1180 2 1182 2 590 4 593 2 1183 6 1184 2 1186 4 1190 2 598 6 599 6 600 4 1191 2 601 2 1193 2 1195 2 1196 8 1202 2 1203 6 1206 14 1209 6 1211 2 1214 12 609 6 611 4 612 4 1219 6 
504 2 915 1 1144 2 1007 2 
624 2 1144 2 
671 2 1072 2 485 2 1086 2 1144 2 415 2 221 2 
485 2 990 2 1144 2 
485 2 1144 2 287 2 
237 2 1007 2 800 2 
485 2 1144 2 
281 2 237 2 
1144 2 284 2 
216 2 237 2 1007 2 
84 2 119 2 1007 2 
812 2 1007 2 114 2 
353 2 102 2 1007 2 
898 2 208 2 1007 2 
173 2 237 2 
1144 2 801 2 
108 2 119 2 
812 2 1215 2 
102 2 501 2 
898 2 947 2 
237 2 198 2 
1107 2 898 2 
479 2 102 2 
812 2 632 2 
580 2 119 2 
216 2 567 2 237 2 1007 2 
543 2 216 2 567 2 237 2 1007 2 
237 2 925 2 1007 2 
646 2 237 2 1007 2 
695 2 569 2 887 2 478 2 
1072 2 174 2 1086 2 1053 2 
1072 2 174 2 1086 2 468 2 1053 2 221 2 
671 2 1072 2 485 2 1086 2 1144 2 1093 2 
238 2 146 2 
671 2 1072 2 1086 2 908 2 
804 2 102 2 
795 2 898 2 
845 2 119 2 
812 2 213 2 
812 2 898 2 282 2 
812 2 898 2 606 2 
812 2 1185 2 898 2 
812 2 204 2 898 2 
265 2 1072 2 195 2 242 6 1086 2 959 6 368 2 681 2 
407 2 237 2 
149 2 727 2 544 2 1201 2 779 4 155 2 1056 2 577 2 991 6 401 2 90 2 1017 2 321 2 533 2 355 2 1019 4 289 2 286 2 
535 2 1007 2 
1137 2 
615 2 617 2 463 2 466 26 157 2 469 2 7 8 913 2 317 2 484 6 1094 2 172 2 176 2 332 4 1104 2 334 2 1106 2 643 2 935 2 194 2 794 2 654 4 656 2 1116 2 944 6 346 2 1125 2 349 2 350 8 1126 2 950 4 664 2 670 2 814 4 1133 6 673 2 958 2 219 2 825 2 63 2 1145 2 234 2 383 2 699 4 552 2 1156 4 844 2 555 2 556 4 994 2 854 2 566 2 1001 2 1005 2 257 2 867 2 870 2 1014 2 579 2 720 2 722 4 1025 26 1029 2 738 2 1034 2 424 2 1039 2 1191 2 1194 2 1197 6 1205 2 445 2 143 4 451 2 752 2 307 4 
615 2 617 2 153 2 463 2 466 26 157 2 469 2 7 8 913 2 317 2 484 6 1094 2 172 2 176 2 332 6 1104 2 334 2 1106 2 643 2 500 2 935 2 194 2 794 2 654 4 656 2 1116 2 512 2 944 6 346 2 1125 2 349 2 350 8 950 4 664 2 50 2 670 2 957 2 814 4 1133 6 673 2 958 2 219 2 825 2 63 2 1145 2 234 2 383 2 699 4 552 2 1156 4 555 2 556 4 994 2 854 2 566 2 1001 2 1005 2 257 2 867 2 870 2 1014 2 579 2 720 2 722 4 1025 26 1029 2 738 2 1034 2 424 2 892 2 1191 2 1194 2 1197 6 1205 2 445 2 143 4 451 2 752 2 307 2 
1127 2 
694 2 426 2 
233 4 376 2 541 2 1148 2 382 2 466 6 840 2 1077 4 911 8 551 2 1156 2 473 10 241 2 475 6 320 2 555 2 770 2 16 2 1162 2 176 2 327 2 254 4 782 2 180 2 924 2 1009 2 869 4 643 2 582 2 647 2 264 2 722 2 725 4 342 2 1025 12 797 2 273 8 515 2 803 2 421 2 888 2 954 2 207 6 1034 2 670 2 1191 2 1043 2 1133 4 673 2 138 2 443 4 1208 2 963 2 1210 2 1059 2 1213 6 1062 4 689 2 375 2 1069 4 
233 4 376 2 541 2 1148 2 382 2 466 6 840 2 1077 4 911 8 551 2 1156 2 315 4 473 10 241 2 475 8 320 2 555 2 16 2 1162 2 176 2 254 4 782 2 180 2 924 2 1009 2 869 4 643 2 336 2 582 2 584 2 647 2 264 2 722 2 725 4 342 2 1025 12 797 2 273 8 515 2 803 2 421 2 888 2 954 2 207 6 1034 2 670 2 1191 2 1043 2 673 2 1133 4 138 2 299 2 443 4 1208 2 963 2 1210 2 1059 2 1213 8 1062 4 689 2 375 2 1069 4 
233 2 725 2 782 2 180 2 138 2 840 2 443 4 551 2 963 2 421 2 1210 2 582 2 207 2 1213 2 1062 2 375 2 1069 4 264 2 
233 4 376 2 541 2 1148 2 382 2 466 6 840 2 1077 4 911 4 551 2 1156 2 473 6 241 2 475 6 320 2 555 2 770 2 1162 2 176 2 327 2 254 4 782 2 180 2 924 2 1009 2 869 4 643 2 336 2 582 2 647 2 264 2 722 2 725 4 342 2 1025 12 797 2 273 4 515 2 803 2 421 2 888 2 954 2 207 4 1034 2 670 2 1191 2 1043 2 1133 4 673 2 138 2 443 4 1208 2 963 2 1210 2 1059 2 1213 6 1062 4 689 2 375 2 1069 4 
233 4 376 2 541 2 1148 2 382 2 466 6 840 2 1077 4 911 4 551 2 1156 2 473 6 241 2 475 6 320 2 555 2 770 2 1162 2 176 2 327 2 254 4 782 2 180 2 924 2 1009 2 869 4 643 2 582 2 647 2 264 2 722 2 725 4 342 2 1025 12 797 2 1027 2 273 4 515 2 803 2 421 2 888 2 954 2 207 6 1034 2 670 2 1191 2 1043 2 1133 4 673 2 138 2 443 4 1208 2 963 2 1210 2 1059 2 1213 4 1062 4 689 2 375 2 1069 4 
233 4 376 2 541 2 1148 2 382 2 466 6 840 2 1077 4 911 4 551 2 1156 2 473 6 241 2 475 6 320 2 555 2 770 2 16 2 1162 2 176 2 327 2 254 4 782 2 180 2 924 2 1009 2 869 4 643 2 582 2 647 2 264 2 722 2 725 4 342 2 1025 12 797 2 273 8 515 2 803 2 421 2 888 2 954 2 207 6 1034 2 670 2 1191 2 1043 2 1133 4 673 2 138 2 443 4 1208 2 963 2 1210 2 1059 2 1213 6 1062 4 689 2 375 2 1069 4 
233 4 376 2 541 2 1148 2 382 2 466 6 840 2 1077 4 911 8 551 2 1156 2 473 10 241 2 475 8 320 2 555 2 770 2 16 2 1162 2 176 2 327 2 254 4 782 2 180 2 924 2 1009 2 869 4 643 2 582 2 647 2 264 2 722 2 725 4 342 2 1025 12 797 2 1027 2 273 8 515 2 803 2 421 2 888 2 954 2 207 8 1034 2 670 2 1191 2 1043 2 1133 4 673 2 138 2 443 4 1208 2 963 2 1210 2 1059 2 1213 6 1062 4 689 2 375 2 1069 4 
233 4 376 2 541 2 1148 2 382 2 466 6 840 2 1077 4 911 8 551 2 1156 2 473 10 241 2 475 6 320 2 555 2 770 2 16 2 1162 2 176 2 327 2 254 4 782 2 180 2 924 2 1009 2 869 4 643 2 582 2 647 2 264 2 722 2 725 4 342 2 1025 12 797 2 273 8 515 2 803 2 421 2 888 2 954 2 207 6 1034 2 670 2 1191 2 1043 2 1133 4 673 2 138 2 443 4 1208 2 963 2 1210 2 1059 2 1213 6 1062 4 689 2 375 2 1069 4 
616 2 909 6 619 2 621 2 7 4 623 6 913 2 320 4 625 2 332 6 924 2 643 2 930 4 647 2 935 2 340 2 342 2 654 2 656 2 944 6 346 2 350 4 349 2 351 1 950 4 952 6 954 2 50 2 670 2 673 2 677 2 682 7 963 2 63 2 65 2 689 2 375 2 376 2 73 6 972 2 382 2 699 4 994 2 999 6 391 6 712 2 1001 2 396 2 1005 2 1009 2 1014 2 404 2 720 2 722 4 725 4 1025 46 117 1 1027 4 1029 2 733 2 421 2 1034 2 425 1 129 7 1043 2 1045 1 138 2 443 4 445 2 1059 2 749 2 1062 4 451 2 752 2 1069 4 1070 2 147 2 759 6 465 8 466 24 1077 4 156 10 469 4 470 2 161 2 473 2 475 12 770 2 769 1 484 6 1094 2 172 2 176 2 1095 6 180 2 782 2 492 6 188 2 790 2 194 2 196 2 508 6 512 2 797 2 1121 6 515 2 803 4 207 8 808 2 516 1 1133 6 814 4 818 2 523 6 219 2 227 2 230 2 832 1 1145 2 233 4 540 2 541 4 1148 2 838 2 839 1 840 2 551 2 1156 4 553 2 241 2 1157 4 846 6 555 2 854 2 560 2 1162 2 254 8 256 2 257 2 867 2 869 6 870 2 582 2 264 2 589 6 592 6 273 2 888 2 1189 2 1191 2 1194 2 1197 8 603 1 897 2 1205 12 1208 2 1210 2 302 6 1213 4 1218 2 
147 2 616 2 462 2 759 6 465 8 466 26 909 6 156 10 1077 4 619 2 470 2 469 4 621 2 623 6 161 2 7 8 473 2 913 2 475 12 625 2 320 4 770 2 16 4 484 6 1094 2 172 2 176 2 1095 6 782 2 180 2 924 2 332 6 492 6 930 4 643 2 188 2 647 2 935 2 790 2 194 2 340 2 196 2 654 2 342 2 508 6 656 2 797 2 512 2 944 6 1121 6 346 2 515 2 349 2 350 8 803 4 950 4 952 6 954 2 207 8 808 2 50 2 670 2 814 4 1133 6 673 2 523 6 818 2 677 2 219 4 963 2 63 2 227 2 65 2 689 2 375 2 230 2 376 2 233 4 1145 2 540 2 73 6 541 4 1148 2 972 2 382 2 838 2 840 2 699 4 551 2 553 2 1156 4 1157 4 241 2 846 6 555 2 556 2 994 2 560 2 854 2 999 6 391 6 1162 2 254 8 1001 2 712 2 396 2 256 2 257 2 1005 2 1009 2 867 2 869 6 870 4 1014 2 582 2 404 2 720 4 264 2 722 4 725 4 1025 48 589 6 592 6 273 6 1029 2 733 2 421 2 888 2 1189 2 1034 2 1191 2 1043 2 1194 2 1197 8 897 2 1205 12 138 2 443 4 1208 2 445 2 1210 2 302 6 749 2 1059 2 1061 2 1213 8 451 2 1062 4 752 2 1070 2 1069 4 1218 2 
147 2 616 2 462 2 759 6 465 8 466 26 909 6 156 10 1077 4 619 2 470 2 469 4 911 4 621 2 623 6 161 2 7 8 913 2 473 6 475 12 625 2 320 4 770 2 16 4 484 6 1094 2 172 2 176 2 1095 6 782 2 180 2 924 2 332 6 492 6 643 2 930 4 188 2 647 2 935 2 790 2 194 2 340 2 196 2 654 2 342 2 508 6 656 2 797 2 512 2 944 6 1121 6 346 2 515 2 349 2 350 8 803 4 950 4 952 6 954 2 207 8 808 2 50 2 670 2 814 4 1133 6 673 2 523 6 818 2 677 2 219 4 963 2 63 2 227 2 65 2 689 2 375 2 230 2 376 2 233 4 1145 2 540 2 73 6 541 4 1148 2 972 2 382 2 838 2 840 2 699 4 551 2 553 2 1156 4 1157 4 241 2 846 6 555 2 556 2 994 2 560 2 854 2 999 6 391 6 1162 2 254 8 1001 2 712 2 396 2 256 2 257 2 1005 2 1009 2 867 2 869 6 870 4 1014 2 582 2 404 2 720 4 264 2 722 4 725 4 1025 48 589 6 592 6 273 6 1029 2 733 2 421 2 888 2 1189 2 1034 2 1191 2 1043 2 1194 2 1197 8 897 2 1205 12 138 2 443 4 1208 2 445 2 1210 2 302 6 749 2 1059 2 1061 2 1213 8 451 2 1062 4 752 2 1070 2 1069 4 1218 2 
616 2 909 12 619 2 911 4 621 2 7 10 623 12 913 2 320 4 625 2 16 4 635 6 332 6 924 2 930 4 643 2 336 2 647 2 935 2 340 2 342 2 654 4 656 2 944 8 346 4 350 10 349 2 661 6 950 4 952 6 954 2 50 2 670 2 673 2 677 2 960 6 963 2 63 2 65 2 689 2 375 2 376 2 73 6 378 2 972 2 382 2 699 6 994 2 999 6 391 6 712 2 1001 4 396 2 1005 2 1009 2 1014 2 404 2 720 4 405 6 722 4 725 4 1025 52 1027 2 1029 2 733 2 421 2 1032 2 1034 2 1043 2 138 2 443 4 445 2 749 2 1059 2 1061 2 1062 4 451 2 1066 2 752 2 1069 4 1070 2 147 2 462 2 759 6 465 8 466 24 1077 4 156 8 469 4 161 2 473 6 475 16 768 6 770 2 484 8 1094 4 172 2 176 2 1095 12 180 2 782 2 492 12 1110 2 188 2 790 2 194 2 196 2 508 6 512 2 797 2 1121 6 515 2 803 4 207 10 808 2 1133 6 814 4 818 2 523 6 219 4 227 2 230 2 1145 2 233 4 540 2 541 4 542 6 1148 2 838 2 840 2 551 2 1156 4 553 2 241 2 1157 4 846 12 555 2 556 2 245 2 559 2 854 2 560 2 1162 2 254 8 256 2 572 2 257 4 867 2 869 6 870 4 582 2 264 2 1179 6 589 6 592 12 594 6 273 6 888 2 1189 2 1191 2 1194 2 1197 12 897 2 1205 10 1207 2 1208 2 1210 2 302 6 1212 6 1213 10 1218 2 
376 2 233 4 541 2 342 2 1025 4 797 2 1077 2 840 2 911 4 273 6 515 2 473 4 475 4 241 2 421 2 888 2 770 2 207 6 16 2 1162 2 254 2 180 2 138 2 924 2 443 2 869 2 963 2 1210 2 1059 2 582 2 1213 6 1062 4 647 2 689 2 1069 2 
758 2 466 24 1077 2 156 2 469 2 470 2 8 2 913 2 473 2 475 4 770 2 16 2 484 6 1094 3 172 2 176 2 178 2 180 2 924 2 332 6 643 2 647 2 935 2 194 2 654 3 342 2 656 2 512 2 797 2 944 6 515 2 349 2 950 4 352 3 207 6 50 2 670 2 673 2 1133 6 814 4 1137 2 963 2 63 2 689 2 376 2 233 4 1145 2 541 2 382 2 840 2 699 4 1156 4 241 2 555 2 994 2 854 2 1162 2 254 2 1165 2 1001 3 1005 2 867 2 869 2 1014 2 719 2 582 2 263 2 722 4 1025 28 273 6 1029 2 421 2 888 2 737 2 1034 2 1191 2 1194 2 1197 8 1205 4 138 2 443 2 445 2 1210 2 450 2 1059 2 1213 6 1062 4 752 2 1069 2 
888 2 771 2 647 2 
888 2 771 2 647 2 
310 2 464 2 759 2 466 16 156 2 1077 2 469 6 911 4 158 2 912 2 472 2 7 4 473 6 475 16 320 2 771 2 16 4 484 2 917 2 172 2 176 2 332 6 786 2 930 2 643 2 336 4 495 2 647 6 935 2 194 2 503 2 654 2 656 2 512 2 944 2 350 4 349 2 803 4 662 2 950 4 954 2 207 12 50 2 670 2 814 4 1133 6 673 2 366 4 219 4 62 2 63 2 530 2 689 2 375 2 71 2 1145 2 233 4 376 2 541 4 972 2 840 2 551 2 1156 4 1157 2 555 2 994 2 854 2 254 4 256 2 1005 2 1009 2 867 2 869 4 870 4 1014 2 582 2 720 4 722 4 1023 2 725 4 1025 24 410 2 1027 4 273 6 1029 2 1031 2 421 4 888 4 738 4 1034 2 291 2 894 4 1191 2 1043 2 1194 2 1197 2 897 2 1205 4 443 2 445 2 1213 12 451 4 1062 4 752 2 1069 2 307 2 
673 2 1025 4 759 2 466 2 1205 2 156 2 410 2 927 2 62 2 316 2 1157 2 749 2 530 2 874 2 426 2 790 2 264 2 
152 2 310 2 759 2 464 2 466 16 1077 2 469 6 911 4 158 2 912 2 7 4 473 6 475 16 320 4 914 2 771 2 16 4 484 2 172 2 176 2 332 6 786 2 930 2 643 2 336 4 496 2 495 2 647 6 935 2 194 2 503 2 654 4 656 2 512 2 944 2 350 4 349 2 803 4 950 4 954 2 207 12 50 2 670 2 814 4 1133 6 673 2 366 4 219 4 62 2 226 2 63 2 530 2 689 2 375 2 71 4 1145 2 233 4 376 2 541 4 972 2 1148 2 840 2 551 2 1156 4 555 2 994 2 854 2 254 4 256 2 1005 2 1009 2 867 2 869 4 574 2 870 4 1014 2 582 2 720 4 722 4 1023 2 725 4 1025 24 410 2 1027 4 273 6 1029 2 1031 2 421 4 888 4 738 4 1034 2 894 4 1191 2 1043 2 1194 2 1197 2 897 2 1205 2 443 2 445 2 1213 12 451 4 1062 4 752 2 1069 2 
310 2 464 2 759 2 466 16 156 2 1077 2 469 6 911 4 158 2 912 2 7 4 1082 2 473 6 475 16 320 4 771 2 16 4 484 2 172 2 176 2 332 6 786 2 930 2 643 2 336 4 495 2 647 6 935 2 194 2 503 2 654 2 656 2 512 2 944 2 350 4 349 2 803 4 950 4 954 2 207 12 50 2 670 2 814 4 1133 6 673 2 821 2 366 4 219 4 62 2 63 2 530 2 689 2 375 2 71 2 1145 2 233 4 376 2 541 4 972 2 1148 2 840 2 239 2 551 2 1156 4 1157 2 555 2 994 2 854 2 254 4 256 2 1005 2 1009 2 867 2 869 4 870 4 1014 2 582 2 720 4 722 4 1023 2 725 4 1181 2 1025 24 410 2 1027 4 273 6 1029 2 1031 2 421 4 888 4 738 4 1034 2 894 4 1191 2 1043 2 1194 2 1197 2 897 2 1205 4 443 2 445 2 1213 12 451 4 1062 4 752 2 1069 2 307 1 754 2 
1145 2 466 16 469 2 701 2 1155 2 1156 4 555 2 1092 2 484 2 854 2 172 2 94 2 326 2 176 2 634 2 395 2 332 6 1005 2 867 2 643 2 1014 2 935 2 194 2 29 2 722 4 656 2 1025 22 118 2 1119 2 512 2 944 2 1028 2 1029 2 349 2 950 4 50 2 1034 2 209 2 670 2 1191 2 1194 2 1197 2 814 4 815 2 1133 6 673 2 1205 2 445 2 63 2 1065 2 752 2 
834 2 1024 2 654 3 409 2 1025 2 466 2 944 2 981 2 699 2 418 3 203 2 201 4 913 2 805 1 703 2 1037 2 852 2 484 2 1094 3 1192 2 1197 2 1001 3 257 6 904 2 305 2 
834 2 1024 2 654 2 409 2 1025 2 466 2 944 2 981 2 699 2 418 2 203 2 201 4 913 2 703 2 1037 2 852 2 484 2 1094 2 1192 2 1197 2 1001 2 257 6 904 2 305 2 
834 2 1024 2 654 2 409 2 1025 2 466 2 944 2 981 2 699 2 418 2 203 2 201 4 913 2 703 2 1037 2 852 2 484 2 1094 2 1192 2 1197 2 1001 2 257 6 904 2 305 2 
150 3 466 4 700 2 314 2 913 2 85 2 1087 2 1094 3 860 4 570 4 333 2 23 2 718 2 872 2 109 2 934 4 654 3 1025 10 513 2 416 3 38 2 276 2 41 2 122 2 1037 2 127 2 211 6 358 2 359 4 895 2 1197 2 816 2 674 6 361 4 678 2 528 4 607 2 692 3 456 2 755 4 
150 2 466 4 700 2 314 2 913 2 85 2 1087 2 477 2 1094 2 860 4 570 4 333 2 23 2 718 2 872 2 109 2 934 4 654 2 1025 10 513 2 416 2 596 2 38 2 276 2 41 2 122 2 663 2 1037 2 127 2 211 6 358 2 359 4 895 2 1197 2 816 2 674 4 361 4 678 2 528 4 607 2 692 2 456 2 755 4 
150 2 466 4 700 2 314 2 913 2 85 2 1087 2 477 2 1094 2 860 4 570 4 333 2 23 2 718 2 872 2 109 2 934 4 654 2 1025 10 513 2 416 2 596 2 38 2 276 2 41 2 122 2 663 2 1037 2 127 2 211 6 358 2 359 4 895 2 1197 2 816 2 674 4 361 4 678 2 528 4 607 2 692 2 456 2 755 4 
150 2 466 4 700 2 314 2 913 2 85 2 1087 2 477 2 1094 2 860 4 570 4 333 2 23 2 718 2 872 2 109 2 934 4 654 2 1025 10 513 2 416 2 596 2 38 2 276 2 41 2 122 2 663 2 1037 2 127 2 211 6 358 2 359 4 895 2 1197 2 816 2 674 4 361 4 678 2 528 4 607 2 692 2 456 2 755 4 
150 2 466 4 700 2 314 2 913 2 85 2 1087 2 477 4 1094 2 860 4 570 4 333 2 23 2 718 2 872 2 109 2 934 4 654 2 1025 10 513 2 416 2 596 4 38 2 276 2 41 2 122 2 663 4 1037 2 127 2 211 6 358 2 359 4 895 2 1197 2 816 2 674 4 361 4 678 2 528 4 607 2 692 2 456 2 755 4 
393 2 87 2 1199 2 525 2 680 2 231 2 
1199 2 923 2 157 2 1143 2 785 2 714 2 724 2 
1025 10 942 2 3 1 1074 2 466 8 978 2 945 2 121 2 948 1 420 2 1033 2 1036 2 705 1 631 2 823 2 745 2 492 2 928 2 224 2 400 2 643 2 105 2 107 2 303 1 26 1 1021 2 
1025 6 466 6 513 6 271 4 6 2 200 2 417 2 38 6 314 2 596 2 276 6 663 4 49 4 477 2 359 12 57 2 674 16 816 6 97 2 362 2 364 2 605 2 137 2 678 6 20 2 444 2 528 4 23 6 109 6 690 2 
602 2 775 2 459 2 1025 1 116 2 98 2 466 1 217 1 76 2 860 2 570 2 884 2 842 6 42 2 597 4 964 2 192 2 755 2 
602 2 775 2 459 2 116 2 98 2 76 4 860 2 570 2 884 2 842 6 42 4 597 4 964 2 192 4 755 2 
602 6 775 2 459 2 1025 1 116 8 98 2 466 1 217 1 76 8 860 2 570 2 884 2 842 10 42 8 597 4 964 2 192 8 755 2 
775 2 459 2 98 2 76 2 860 2 570 2 884 2 842 2 42 2 597 2 964 2 192 2 755 2 
466 6 7 2 1089 2 854 2 171 1 1161 2 394 1 183 2 332 4 1014 2 935 2 1025 6 512 2 950 2 50 2 889 2 814 2 748 2 
814 2 1025 6 547 2 466 6 183 2 332 2 7 2 748 2 950 2 1014 2 1089 2 889 2 935 2 854 2 307 2 
748 2 814 2 950 2 1014 2 1025 6 1089 2 466 6 889 2 935 2 332 2 183 2 854 2 307 2 669 2 7 2 
814 2 1025 6 466 6 512 2 183 2 332 4 7 2 748 2 950 2 1014 2 1089 2 50 2 889 2 935 2 854 2 669 2 
648 2 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
1010 1 423 1 206 1 827 1 997 1 313 1 
